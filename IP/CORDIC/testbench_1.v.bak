`timescale 1 ns / 100 ps
module tb ();

	//Inputs to DUT are reg type
	reg [31:0] dataa;
	reg [31:0] datab; 
	reg clk;

	//Output from DUT is wire type
	wire [31:0] result;

	//Instantiate the DUT
	//mul refers to the verilog module defined by the LPM_MULT ip
	CORDIC unit(
		.dataa(dataa),
		.datab(datab), 
		.clk(clk),
		.result(result)
	);

	// ---- If a clock is required, see below ----
	// //Create a 50MHz clock
	always
		#10 clk = ~clk;
	// -----------------------

	//Initial Block
	initial
	begin
		$display($time, " << Starting Simulation >> ");
		
		// intialise/set input
		clk = 1'b0;
		
		// If using a clock
		@(posedge clk); 
		
		// Wait 10 cycles (corresponds to timescale at the top) 
		#10
		
		// set dataa and datab
		dataa <= 32'b00110010010000111111011010101000;
		datab <= 32'd2;
		
//		#10

//		dataa <= 32'b01000001111100000000000000000000;
//		datab <= 32'd22;
//		
//		#10
//		dataa <= 32'b01000001011110000000000000000000;
//		datab <= 32'd23;
//		
		#200
		$display($time, "<< Simulation Complete >>");
		$stop;
	end

endmodule
