
task7final.elf:     file format elf32-littlenios2
task7final.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00800244

Program Header:
    LOAD off    0x00001000 vaddr 0x00800000 paddr 0x00800000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00800020 paddr 0x00800020 align 2**12
         filesz 0x0000ffec memsz 0x0000ffec flags r-x
    LOAD off    0x0001100c vaddr 0x0081000c paddr 0x00811af8 align 2**12
         filesz 0x00001aec memsz 0x00001aec flags rw-
    LOAD off    0x000135e4 vaddr 0x008135e4 paddr 0x008135e4 align 2**12
         filesz 0x00000000 memsz 0x00000160 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00800000  00800000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000224  00800020  00800020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000fa8c  00800244  00800244  00001244  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       0000033c  0080fcd0  0080fcd0  00010cd0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001aec  0081000c  00811af8  0001100c  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000160  008135e4  008135e4  000135e4  2**2
                  ALLOC, SMALL_DATA
  6 .sdram        00000000  00813744  00813744  00012af8  2**0
                  CONTENTS
  7 .comment      00000023  00000000  00000000  00012af8  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00000f68  00000000  00000000  00012b20  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   00025077  00000000  00000000  00013a88  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 00009808  00000000  00000000  00038aff  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0000bc8f  00000000  00000000  00042307  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  00002230  00000000  00000000  0004df98  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00003aa5  00000000  00000000  000501c8  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    000188d4  00000000  00000000  00053c6d  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000030  00000000  00000000  0006c544  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00001ad8  00000000  00000000  0006c578  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  0007126e  2**0
                  CONTENTS, READONLY
 18 .cpu          00000003  00000000  00000000  00071271  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  00071274  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  00071275  2**0
                  CONTENTS, READONLY
 21 .sysid_hash   00000004  00000000  00000000  00071276  2**0
                  CONTENTS, READONLY
 22 .sysid_base   00000004  00000000  00000000  0007127a  2**0
                  CONTENTS, READONLY
 23 .sysid_time   00000004  00000000  00000000  0007127e  2**0
                  CONTENTS, READONLY
 24 .stderr_dev   00000009  00000000  00000000  00071282  2**0
                  CONTENTS, READONLY
 25 .stdin_dev    00000009  00000000  00000000  0007128b  2**0
                  CONTENTS, READONLY
 26 .stdout_dev   00000009  00000000  00000000  00071294  2**0
                  CONTENTS, READONLY
 27 .sopc_system_name 00000012  00000000  00000000  0007129d  2**0
                  CONTENTS, READONLY
 28 .quartus_project_dir 00000037  00000000  00000000  000712af  2**0
                  CONTENTS, READONLY
 29 .jdi          000058e3  00000000  00000000  000712e6  2**0
                  CONTENTS, READONLY
 30 .sopcinfo     0003d518  00000000  00000000  00076bc9  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00800000 l    d  .entry	00000000 .entry
00800020 l    d  .exceptions	00000000 .exceptions
00800244 l    d  .text	00000000 .text
0080fcd0 l    d  .rodata	00000000 .rodata
0081000c l    d  .rwdata	00000000 .rwdata
008135e4 l    d  .bss	00000000 .bss
00813744 l    d  .sdram	00000000 .sdram
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../task7final_bsp//obj/HAL/src/crt0.o
0080028c l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 t7.c
00000000 l    df *ABS*	00000000 addsf3.c
00000000 l    df *ABS*	00000000 extendsfdf2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
0080fe5a l     O .rodata	00000010 zeroes.4404
00802eac l     F .text	000000bc __sbprintf
0080fe6a l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
008030bc l     F .text	00000200 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
00804bec l     F .text	00000008 __fp_unlock
00804c00 l     F .text	0000019c __sinit.part.1
00804d9c l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
0081000c l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
00810450 l     O .rwdata	00000020 lc_ctype_charset
00810430 l     O .rwdata	00000020 lc_message_charset
00810470 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
0080fe9c l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
00808198 l     F .text	000000fc __sprint_r.part.0
0080ffd0 l     O .rodata	00000010 blanks.4348
0080ffc0 l     O .rodata	00000010 zeroes.4349
00809724 l     F .text	000000bc __sbprintf
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 alt_close.c
0080d37c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0080d488 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0080d4b4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
0080d5a0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0080d680 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0080d76c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_putstr.c
00000000 l    df *ABS*	00000000 alt_read.c
0080d97c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
00811ae8 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_times.c
0080dbc8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_write.c
0080dc7c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0080ddb0 l     F .text	00000034 alt_dev_reg
00810a58 l     O .rwdata	00001060 jtag_uart
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0080e0a4 l     F .text	0000020c altera_avalon_jtag_uart_irq
0080e2b0 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
0080e8e8 l     F .text	00000078 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0080eb50 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0080efc4 l     F .text	000000c4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
0080f104 l     F .text	0000003c alt_get_errno
0080f140 l     F .text	000000c4 alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 fputs.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
00813618 g     O .bss	00000004 alt_instruction_exception_handler
008077dc g     F .text	00000074 _mprec_log10
008078c8 g     F .text	0000008c __any_on
00809cc0 g     F .text	00000054 _isatty_r
0080fea8 g     O .rodata	00000028 __mprec_tinytens
0080d87c g     F .text	0000007c alt_main
00800b2c g     F .text	000000c0 _puts_r
00813644 g     O .bss	00000100 alt_irq
00809d14 g     F .text	00000060 _lseek_r
00811af8 g       *ABS*	00000000 __flash_rwdata_start
0080bf0c g     F .text	00000088 .hidden __eqdf2
00813744 g       *ABS*	00000000 __alt_heap_start
00800af0 g     F .text	0000003c printf
00809f2c g     F .text	0000009c _wcrtomb_r
00808058 g     F .text	0000005c __sseek
00804f3c g     F .text	00000010 __sinit
00809dd4 g     F .text	00000140 __swbuf_r
00805a04 g     F .text	0000007c _setlocale_r
00804da4 g     F .text	00000068 __sfmoreglue
0080d91c g     F .text	00000024 __malloc_unlock
008066d4 g     F .text	0000015c memmove
00804f24 g     F .text	00000018 _cleanup
00806958 g     F .text	000000a8 _Balloc
0080d940 g     F .text	0000003c alt_putstr
0080bf94 g     F .text	000000dc .hidden __gtdf2
0080f4fc g     F .text	00000024 altera_nios2_gen2_irq_init
00800000 g     F .entry	0000001c __reset
0080dc04 g     F .text	00000078 times
00800020 g       *ABS*	00000000 __flash_exceptions_start
00809c64 g     F .text	0000005c _fstat_r
008135fc g     O .bss	00000004 errno
00807fd4 g     F .text	00000008 __seofread
00813604 g     O .bss	00000004 alt_argv
00819ab8 g       *ABS*	00000000 _gp
008108d8 g     O .rwdata	00000180 alt_fd_list
0080f520 g     F .text	00000090 alt_find_dev
0080658c g     F .text	00000148 memcpy
00804bf4 g     F .text	0000000c _cleanup_r
0080d1f8 g     F .text	000000dc .hidden __floatsidf
0080f088 g     F .text	0000007c alt_io_redirect
0080c070 g     F .text	000000f4 .hidden __ltdf2
0080fcd0 g       *ABS*	00000000 __DTOR_END__
00800bec g     F .text	00000014 puts
0080f7ec g     F .text	0000009c alt_exception_cause_generated_bad_addr
00807eb8 g     F .text	00000074 __fpclassifyd
00807738 g     F .text	000000a4 __ratio
00809708 g     F .text	0000001c __vfiprintf_internal
0080e4a8 g     F .text	0000021c altera_avalon_jtag_uart_read
00800ac0 g     F .text	00000030 _printf_r
0080acbc g     F .text	00000064 .hidden __udivsi3
0080d5dc g     F .text	000000a4 isatty
0080fef8 g     O .rodata	000000c8 __mprec_tens
00805a80 g     F .text	0000000c __locale_charset
0080f75c g     F .text	00000090 alt_icache_flush
008135f8 g     O .bss	00000004 __malloc_top_pad
00811ac0 g     O .rwdata	00000004 __mb_cur_max
00805ab0 g     F .text	0000000c _localeconv_r
00806d64 g     F .text	0000003c __i2b
008053c0 g     F .text	000004bc __sfvwrite_r
00807f2c g     F .text	00000054 _sbrk_r
00809d74 g     F .text	00000060 _read_r
00811ae0 g     O .rwdata	00000004 alt_max_fd
00809958 g     F .text	000000f0 _fclose_r
00804bbc g     F .text	00000030 fflush
008135f4 g     O .bss	00000004 __malloc_max_sbrked_mem
0080094c g     F .text	00000110 .hidden __extendsfdf2
0080ad78 g     F .text	000008ac .hidden __adddf3
008074e0 g     F .text	0000010c __b2d
0080a68c g     F .text	00000538 .hidden __umoddi3
0080d7a8 g     F .text	000000d4 lseek
00811ab8 g     O .rwdata	00000004 _global_impure_ptr
00807954 g     F .text	00000564 _realloc_r
00813744 g       *ABS*	00000000 __bss_end
0080eed4 g     F .text	000000f0 alt_iic_isr_register
0080f3f4 g     F .text	00000108 alt_tick
0080a114 g     F .text	00000578 .hidden __udivdi3
00809bc0 g     F .text	00000024 _fputwc_r
0080fed0 g     O .rodata	00000028 __mprec_bigtens
00806b48 g     F .text	00000104 __s2b
0080d2d4 g     F .text	000000a8 .hidden __floatunsidf
00807220 g     F .text	00000060 __mcmp
00804f5c g     F .text	00000018 __fp_lock_all
0080ee88 g     F .text	0000004c alt_ic_irq_enabled
0080f358 g     F .text	0000009c alt_alarm_stop
0081360c g     O .bss	00000004 alt_irq_active
008000fc g     F .exceptions	000000d4 alt_irq_handler
008108b0 g     O .rwdata	00000028 alt_dev_null
0080eb08 g     F .text	00000048 alt_dcache_flush_all
00806c4c g     F .text	00000068 __hi0bits
0080d178 g     F .text	00000080 .hidden __fixdfsi
00811af8 g       *ABS*	00000000 __ram_rwdata_end
00811ad8 g     O .rwdata	00000008 alt_dev_list
0080dcb8 g     F .text	000000f8 write
0081000c g       *ABS*	00000000 __ram_rodata_end
0080d4f0 g     F .text	000000b0 fstat
0080c070 g     F .text	000000f4 .hidden __ledf2
00806f98 g     F .text	00000140 __pow5mult
008082ac g     F .text	0000145c ___vfiprintf_internal_r
008135ec g     O .bss	00000004 __nlocale_changed
0080ad20 g     F .text	00000058 .hidden __umodsi3
00813744 g       *ABS*	00000000 end
0080dfe4 g     F .text	000000c0 altera_avalon_jtag_uart_init
008001d0 g     F .exceptions	00000074 alt_instruction_exception_entry
0080fcd0 g       *ABS*	00000000 __CTOR_LIST__
01000000 g       *ABS*	00000000 __alt_stack_pointer
0080e960 g     F .text	0000007c alt_avalon_timer_sc_init
00800a5c g     F .text	00000064 .hidden __clzsi2
0080e6c4 g     F .text	00000224 altera_avalon_jtag_uart_write
00804f4c g     F .text	00000004 __sfp_lock_acquire
008064a8 g     F .text	000000e4 memchr
00800c98 g     F .text	000021f8 ___vfprintf_internal_r
008050b0 g     F .text	00000310 _free_r
00805a8c g     F .text	00000010 __locale_mb_cur_max
0080fb1c g     F .text	00000180 __call_exitprocs
008135e8 g     O .bss	00000004 __mlocale_changed
00811ac4 g     O .rwdata	00000004 __malloc_sbrk_base
00800244 g     F .text	0000004c _start
00813610 g     O .bss	00000004 _alt_tick_rate
008070d8 g     F .text	00000148 __lshift
00813614 g     O .bss	00000004 _alt_nticks
0080d9b8 g     F .text	000000fc read
0080de1c g     F .text	00000064 alt_sys_init
0080fa04 g     F .text	00000118 __register_exitproc
00806da0 g     F .text	000001f8 __multiply
0080e350 g     F .text	00000068 altera_avalon_jtag_uart_close
0081000c g       *ABS*	00000000 __ram_rwdata_start
0080fcd0 g       *ABS*	00000000 __ram_rodata_start
0081361c g     O .bss	00000028 __malloc_current_mallinfo
008075ec g     F .text	0000014c __d2b
0080de80 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
0080f6b8 g     F .text	000000a4 alt_get_fd
00809840 g     F .text	00000054 _close_r
00800290 g     F .text	00000054 generateVector
0080f988 g     F .text	0000007c memcmp
0080df40 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
00813744 g       *ABS*	00000000 __alt_stack_base
0080df90 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
00802f68 g     F .text	00000154 __swsetup_r
0080b624 g     F .text	000008e8 .hidden __divdf3
00804e0c g     F .text	00000118 __sfp
00807850 g     F .text	00000078 __copybits
008104a8 g     O .rwdata	00000408 __malloc_av_
00804f58 g     F .text	00000004 __sinit_lock_release
0080c164 g     F .text	00000718 .hidden __muldf3
00807f80 g     F .text	00000054 __sread
0080f5b0 g     F .text	00000108 alt_find_file
0080eb8c g     F .text	000000a4 alt_dev_llist_insert
0080d8f8 g     F .text	00000024 __malloc_lock
0080db18 g     F .text	000000b0 sbrk
00804b60 g     F .text	0000005c _fflush_r
00809894 g     F .text	000000c4 _calloc_r
008135e4 g       *ABS*	00000000 __bss_start
00806830 g     F .text	00000128 memset
00800368 g     F .text	0000011c main
00813608 g     O .bss	00000004 alt_envp
008135f0 g     O .bss	00000004 __malloc_max_total_mem
0080dee0 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
00809f14 g     F .text	00000018 __swbuf
008080b4 g     F .text	00000008 __sclose
01000000 g       *ABS*	00000000 __alt_heap_limit
00809a48 g     F .text	00000014 fclose
008032bc g     F .text	00001688 _dtoa_r
00805c9c g     F .text	0000080c _malloc_r
0080a088 g     F .text	00000030 __ascii_wctomb
00811ae4 g     O .rwdata	00000004 alt_errno
0080587c g     F .text	000000c4 _fwalk
0080abc4 g     F .text	00000084 .hidden __divsi3
00804f8c g     F .text	00000124 _malloc_trim_r
0080fcd0 g       *ABS*	00000000 __CTOR_END__
008080bc g     F .text	000000dc strcmp
0080fcd0 g       *ABS*	00000000 __flash_rodata_start
0080fcd0 g       *ABS*	00000000 __DTOR_LIST__
0080bf0c g     F .text	00000088 .hidden __nedf2
0080dde4 g     F .text	00000038 alt_irq_init
0080dab4 g     F .text	00000064 alt_release_fd
0080fd13 g     O .rodata	00000100 .hidden __clz_tab
008135e4 g     O .bss	00000004 _PathLocale
0080f888 g     F .text	00000014 atexit
008002e4 g     F .text	00000084 sumVector
008097e0 g     F .text	00000060 _write_r
00805abc g     F .text	00000018 setlocale
00811abc g     O .rwdata	00000004 _impure_ptr
00813600 g     O .bss	00000004 alt_argc
00804944 g     F .text	0000021c __sflush_r
0080ec90 g     F .text	00000060 _do_dtors
00805aa8 g     F .text	00000008 __locale_cjk_lang
00800020 g       .exceptions	00000000 alt_irq_entry
0080747c g     F .text	00000064 __ulp
00804f74 g     F .text	00000018 __fp_unlock_all
00811ad0 g     O .rwdata	00000008 alt_fs_list
00800020 g       *ABS*	00000000 __ram_exceptions_start
00805ad4 g     F .text	0000000c localeconv
0080ed24 g     F .text	00000050 alt_ic_isr_register
00811af8 g       *ABS*	00000000 _edata
00813744 g       *ABS*	00000000 _end
00809a5c g     F .text	00000164 __fputwc
00800244 g       *ABS*	00000000 __ram_exceptions_end
0080e3b8 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
0080f8d4 g     F .text	0000009c _fputs_r
0080edfc g     F .text	0000008c alt_ic_irq_disable
00807fdc g     F .text	0000007c __swrite
00811ac8 g     O .rwdata	00000004 __malloc_trim_threshold
00805a9c g     F .text	0000000c __locale_msgcharset
0080f89c g     F .text	00000038 exit
00805940 g     F .text	000000c4 _fwalk_reent
00807280 g     F .text	000001fc __mdiff
0080ac48 g     F .text	00000074 .hidden __modsi3
01000000 g       *ABS*	00000000 __alt_data_end
00800020 g     F .exceptions	00000000 alt_exception
00804f50 g     F .text	00000004 __sfp_lock_release
00800000 g       *ABS*	00000000 __alt_mem_sdram
0080fc9c g     F .text	00000034 _exit
0080e9dc g     F .text	0000012c alt_alarm_start
00805ae0 g     F .text	000001bc __smakebuf_r
00800c00 g     F .text	00000098 strlen
0080f204 g     F .text	00000154 open
0080bf94 g     F .text	000000dc .hidden __gedf2
00811acc g     O .rwdata	00000004 __wctomb
00808294 g     F .text	00000018 __sprint_r
0080ecf0 g     F .text	00000034 alt_icache_flush_all
0080f970 g     F .text	00000018 fputs
00811aec g     O .rwdata	00000004 alt_priority_mask
0080ed74 g     F .text	00000088 alt_ic_irq_enable
00802e90 g     F .text	0000001c __vfprintf_internal
0080a0b8 g     F .text	0000005c _wctomb_r
0080c87c g     F .text	000008fc .hidden __subdf3
00806cb4 g     F .text	000000b0 __lo0bits
00811af0 g     O .rwdata	00000008 alt_alarm_list
0080ec30 g     F .text	00000060 _do_ctors
00809fc8 g     F .text	000000c0 wcrtomb
0080d3b8 g     F .text	000000d0 close
00800484 g     F .text	000004c8 .hidden __addsf3
0080d6e8 g     F .text	00000084 alt_load
00809be4 g     F .text	00000080 fputwc
00804f54 g     F .text	00000004 __sinit_lock_acquire
00806a28 g     F .text	00000120 __multadd
00806a00 g     F .text	00000028 _Bfree



Disassembly of section .entry:

00800000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
  800000:	00880014 	movui	r2,8192
#endif

0:
    initi r2
  800004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
  800008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
  80000c:	00bffd16 	blt	zero,r2,800004 <__alt_data_end+0xff800004>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
  800010:	00402034 	movhi	at,128
    ori r1, r1, %lo(_start)
  800014:	08409114 	ori	at,at,580
    jmp r1
  800018:	0800683a 	jmp	at
  80001c:	00000000 	call	0 <__alt_mem_sdram-0x800000>

Disassembly of section .exceptions:

00800020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
  800020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
  800024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
  800028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
  80002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
  800030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
  800034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
  800038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
  80003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
  800040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
  800044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
  800048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
  80004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
  800050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
  800054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
  800058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
  80005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
  800060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
  800064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
  800068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
  80006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  800070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
  800074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
  800078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
  80007c:	10000326 	beq	r2,zero,80008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
  800080:	20000226 	beq	r4,zero,80008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
  800084:	08000fc0 	call	8000fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
  800088:	00000706 	br	8000a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
  80008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
  800090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
  800094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
  800098:	08001d00 	call	8001d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
  80009c:	1000021e 	bne	r2,zero,8000a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
  8000a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  8000a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
  8000a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
  8000ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
  8000b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
  8000b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
  8000b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
  8000bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
  8000c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
  8000c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
  8000c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
  8000cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
  8000d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
  8000d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
  8000d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
  8000dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
  8000e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
  8000e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
  8000e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
  8000ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
  8000f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
  8000f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
  8000f8:	ef80083a 	eret

008000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
  8000fc:	defff904 	addi	sp,sp,-28
  800100:	dfc00615 	stw	ra,24(sp)
  800104:	df000515 	stw	fp,20(sp)
  800108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
  80010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
  800110:	0005313a 	rdctl	r2,ipending
  800114:	e0bffe15 	stw	r2,-8(fp)

  return active;
  800118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
  80011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
  800120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
  800124:	00800044 	movi	r2,1
  800128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
  80012c:	e0fffb17 	ldw	r3,-20(fp)
  800130:	e0bffc17 	ldw	r2,-16(fp)
  800134:	1884703a 	and	r2,r3,r2
  800138:	10001426 	beq	r2,zero,80018c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
  80013c:	00802074 	movhi	r2,129
  800140:	108d9104 	addi	r2,r2,13892
  800144:	e0fffd17 	ldw	r3,-12(fp)
  800148:	180690fa 	slli	r3,r3,3
  80014c:	10c5883a 	add	r2,r2,r3
  800150:	10c00017 	ldw	r3,0(r2)
  800154:	00802074 	movhi	r2,129
  800158:	108d9104 	addi	r2,r2,13892
  80015c:	e13ffd17 	ldw	r4,-12(fp)
  800160:	200890fa 	slli	r4,r4,3
  800164:	1105883a 	add	r2,r2,r4
  800168:	10800104 	addi	r2,r2,4
  80016c:	10800017 	ldw	r2,0(r2)
  800170:	1009883a 	mov	r4,r2
  800174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
  800178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
  80017c:	0005313a 	rdctl	r2,ipending
  800180:	e0bfff15 	stw	r2,-4(fp)

  return active;
  800184:	e0bfff17 	ldw	r2,-4(fp)
  800188:	00000706 	br	8001a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
  80018c:	e0bffc17 	ldw	r2,-16(fp)
  800190:	1085883a 	add	r2,r2,r2
  800194:	e0bffc15 	stw	r2,-16(fp)
      i++;
  800198:	e0bffd17 	ldw	r2,-12(fp)
  80019c:	10800044 	addi	r2,r2,1
  8001a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
  8001a4:	003fe106 	br	80012c <__alt_data_end+0xff80012c>

    active = alt_irq_pending ();
  8001a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
  8001ac:	e0bffb17 	ldw	r2,-20(fp)
  8001b0:	103fdb1e 	bne	r2,zero,800120 <__alt_data_end+0xff800120>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
  8001b4:	0001883a 	nop
}
  8001b8:	0001883a 	nop
  8001bc:	e037883a 	mov	sp,fp
  8001c0:	dfc00117 	ldw	ra,4(sp)
  8001c4:	df000017 	ldw	fp,0(sp)
  8001c8:	dec00204 	addi	sp,sp,8
  8001cc:	f800283a 	ret

008001d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
  8001d0:	defffb04 	addi	sp,sp,-20
  8001d4:	dfc00415 	stw	ra,16(sp)
  8001d8:	df000315 	stw	fp,12(sp)
  8001dc:	df000304 	addi	fp,sp,12
  8001e0:	e13fff15 	stw	r4,-4(fp)
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
  8001e4:	000531fa 	rdctl	r2,exception
  8001e8:	e0bffd15 	stw	r2,-12(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
  8001ec:	e0bffd17 	ldw	r2,-12(fp)
  8001f0:	10801f0c 	andi	r2,r2,124
  8001f4:	1004d0ba 	srli	r2,r2,2
  8001f8:	e0bffd15 	stw	r2,-12(fp)
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
  8001fc:	0005333a 	rdctl	r2,badaddr
  800200:	e0bffe15 	stw	r2,-8(fp)
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
  800204:	d0a6d817 	ldw	r2,-25760(gp)
  800208:	10000726 	beq	r2,zero,800228 <alt_instruction_exception_entry+0x58>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
  80020c:	d0a6d817 	ldw	r2,-25760(gp)
  800210:	e0fffd17 	ldw	r3,-12(fp)
  800214:	e1bffe17 	ldw	r6,-8(fp)
  800218:	e17fff17 	ldw	r5,-4(fp)
  80021c:	1809883a 	mov	r4,r3
  800220:	103ee83a 	callr	r2
  800224:	00000206 	br	800230 <alt_instruction_exception_entry+0x60>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
  800228:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
  80022c:	0005883a 	mov	r2,zero
}
  800230:	e037883a 	mov	sp,fp
  800234:	dfc00117 	ldw	ra,4(sp)
  800238:	df000017 	ldw	fp,0(sp)
  80023c:	dec00204 	addi	sp,sp,8
  800240:	f800283a 	ret

Disassembly of section .text:

00800244 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
  800244:	00810014 	movui	r2,1024
#endif

0:
    initd 0(r2)
  800248:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
  80024c:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
  800250:	00bffd16 	blt	zero,r2,800248 <__alt_data_end+0xff800248>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
  800254:	06c04034 	movhi	sp,256
    ori sp, sp, %lo(__alt_stack_pointer)
  800258:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
  80025c:	06802074 	movhi	gp,129
    ori gp, gp, %lo(_gp)
  800260:	d6a6ae14 	ori	gp,gp,39608
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
  800264:	00802074 	movhi	r2,129
    ori r2, r2, %lo(__bss_start)
  800268:	108d7914 	ori	r2,r2,13796

    movhi r3, %hi(__bss_end)
  80026c:	00c02074 	movhi	r3,129
    ori r3, r3, %lo(__bss_end)
  800270:	18cdd114 	ori	r3,r3,14148

    beq r2, r3, 1f
  800274:	10c00326 	beq	r2,r3,800284 <_start+0x40>

0:
    stw zero, (r2)
  800278:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
  80027c:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
  800280:	10fffd36 	bltu	r2,r3,800278 <__alt_data_end+0xff800278>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
  800284:	080d6e80 	call	80d6e8 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
  800288:	080d87c0 	call	80d87c <alt_main>

0080028c <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
  80028c:	003fff06 	br	80028c <__alt_data_end+0xff80028c>

00800290 <generateVector>:
#define N 2041
//Test case 3
#define step 1/1024.0
#define N 261121
void generateVector(float x[N])
{
  800290:	defffd04 	addi	sp,sp,-12
  800294:	00800434 	movhi	r2,16
  800298:	dc400115 	stw	r17,4(sp)
  80029c:	dc000015 	stw	r16,0(sp)
  8002a0:	dfc00215 	stw	ra,8(sp)
  8002a4:	10bc0104 	addi	r2,r2,-4092
	int i;
	x[0] = 0;
  8002a8:	20000015 	stw	zero,0(r4)
  8002ac:	24000104 	addi	r16,r4,4
  8002b0:	20a3883a 	add	r17,r4,r2
  8002b4:	0009883a 	mov	r4,zero
	for (i=1; i<N; i++)
	x[i] = x[i-1] + step;
  8002b8:	014ea034 	movhi	r5,14976
  8002bc:	08004840 	call	800484 <__addsf3>
  8002c0:	80800015 	stw	r2,0(r16)
  8002c4:	84000104 	addi	r16,r16,4
  8002c8:	1009883a 	mov	r4,r2
#define N 261121
void generateVector(float x[N])
{
	int i;
	x[0] = 0;
	for (i=1; i<N; i++)
  8002cc:	8c3ffa1e 	bne	r17,r16,8002b8 <__alt_data_end+0xff8002b8>
	x[i] = x[i-1] + step;
}
  8002d0:	dfc00217 	ldw	ra,8(sp)
  8002d4:	dc400117 	ldw	r17,4(sp)
  8002d8:	dc000017 	ldw	r16,0(sp)
  8002dc:	dec00304 	addi	sp,sp,12
  8002e0:	f800283a 	ret

008002e4 <sumVector>:
float sumVector(float x[], int M)
{
  8002e4:	defffb04 	addi	sp,sp,-20
  8002e8:	dfc00415 	stw	ra,16(sp)
  8002ec:	dcc00315 	stw	r19,12(sp)
  8002f0:	dc800215 	stw	r18,8(sp)
  8002f4:	dc400115 	stw	r17,4(sp)
  8002f8:	dc000015 	stw	r16,0(sp)
	float sum=0;

	for (int i=0;i<M;i++){
  8002fc:	0140180e 	bge	zero,r5,800360 <sumVector+0x7c>
  800300:	2827883a 	mov	r19,r5
  800304:	2021883a 	mov	r16,r4
  800308:	0025883a 	mov	r18,zero
  80030c:	0023883a 	mov	r17,zero
		sum=ALT_CI_FX_0(x[i],sum);
  800310:	80800017 	ldw	r2,0(r16)
  800314:	1463c072 	custom	1,r17,r2,r17
		printf("Custom Result: %f \n", (float) sum);
  800318:	8809883a 	mov	r4,r17
  80031c:	080094c0 	call	80094c <__extendsfdf2>
  800320:	01002074 	movhi	r4,129
}
float sumVector(float x[], int M)
{
	float sum=0;

	for (int i=0;i<M;i++){
  800324:	94800044 	addi	r18,r18,1
		sum=ALT_CI_FX_0(x[i],sum);
		printf("Custom Result: %f \n", (float) sum);
  800328:	100b883a 	mov	r5,r2
  80032c:	180d883a 	mov	r6,r3
  800330:	213f3404 	addi	r4,r4,-816
  800334:	84000104 	addi	r16,r16,4
  800338:	0800af00 	call	800af0 <printf>
}
float sumVector(float x[], int M)
{
	float sum=0;

	for (int i=0;i<M;i++){
  80033c:	9cbff41e 	bne	r19,r18,800310 <__alt_data_end+0xff800310>
		printf("Custom Result: %f \n", (float) sum);
	}
//		printf("the current sum is %f, current xi is %f \n", sum,x[i]);}
	return sum;
// YOUR CODE GOES HERE
}
  800340:	8805883a 	mov	r2,r17
  800344:	dfc00417 	ldw	ra,16(sp)
  800348:	dcc00317 	ldw	r19,12(sp)
  80034c:	dc800217 	ldw	r18,8(sp)
  800350:	dc400117 	ldw	r17,4(sp)
  800354:	dc000017 	ldw	r16,0(sp)
  800358:	dec00504 	addi	sp,sp,20
  80035c:	f800283a 	ret
	for (i=1; i<N; i++)
	x[i] = x[i-1] + step;
}
float sumVector(float x[], int M)
{
	float sum=0;
  800360:	0023883a 	mov	r17,zero
  800364:	003ff606 	br	800340 <__alt_data_end+0xff800340>

00800368 <main>:
//		printf("the current sum is %f, current xi is %f \n", sum,x[i]);}
	return sum;
// YOUR CODE GOES HERE
}
int main()
{
  800368:	023ffc34 	movhi	r8,65520
  80036c:	defff904 	addi	sp,sp,-28
  800370:	4203ff04 	addi	r8,r8,4092
//  printf("Resultold: %f \n",originalRes);
//
//  printf("Result: %f \n",originalRes-customRes);
//

  	alt_putstr("hello");
  800374:	01002074 	movhi	r4,129
//		printf("the current sum is %f, current xi is %f \n", sum,x[i]);}
	return sum;
// YOUR CODE GOES HERE
}
int main()
{
  800378:	dfc00615 	stw	ra,24(sp)
  80037c:	dc800215 	stw	r18,8(sp)
  800380:	dc000015 	stw	r16,0(sp)
  800384:	dd400515 	stw	r21,20(sp)
  800388:	dd000415 	stw	r20,16(sp)
  80038c:	dcc00315 	stw	r19,12(sp)
  800390:	dc400115 	stw	r17,4(sp)
//  printf("Resultold: %f \n",originalRes);
//
//  printf("Result: %f \n",originalRes-customRes);
//

  	alt_putstr("hello");
  800394:	213f3904 	addi	r4,r4,-796
//		printf("the current sum is %f, current xi is %f \n", sum,x[i]);}
	return sum;
// YOUR CODE GOES HERE
}
int main()
{
  800398:	da37883a 	add	sp,sp,r8
//  printf("Resultold: %f \n",originalRes);
//
//  printf("Result: %f \n",originalRes-customRes);
//

  	alt_putstr("hello");
  80039c:	080d9400 	call	80d940 <alt_putstr>
  	printf("Task 8!\n");
  8003a0:	01002074 	movhi	r4,129
  8003a4:	213f3b04 	addi	r4,r4,-788
  8003a8:	04800434 	movhi	r18,16
  8003ac:	0800bec0 	call	800bec <puts>
  8003b0:	94bc0104 	addi	r18,r18,-4092
  8003b4:	dc000104 	addi	r16,sp,4
#define step 1/1024.0
#define N 261121
void generateVector(float x[N])
{
	int i;
	x[0] = 0;
  8003b8:	d8000015 	stw	zero,0(sp)
  8003bc:	0009883a 	mov	r4,zero
  8003c0:	dca5883a 	add	r18,sp,r18
	for (i=1; i<N; i++)
	x[i] = x[i-1] + step;
  8003c4:	014ea034 	movhi	r5,14976
  8003c8:	08004840 	call	800484 <__addsf3>
  8003cc:	80800015 	stw	r2,0(r16)
  8003d0:	84000104 	addi	r16,r16,4
  8003d4:	1009883a 	mov	r4,r2
#define N 261121
void generateVector(float x[N])
{
	int i;
	x[0] = 0;
	for (i=1; i<N; i++)
  8003d8:	943ffa1e 	bne	r18,r16,8003c4 <__alt_data_end+0xff8003c4>
  	generateVector(x);

  	clock_t exec_t1, exec_t2;


   	 exec_t1 = times(NULL); // get system time before starting the process
  8003dc:	0009883a 	mov	r4,zero
  8003e0:	080dc040 	call	80dc04 <times>
  8003e4:	102b883a 	mov	r21,r2
  8003e8:	d821883a 	mov	r16,sp
	for (i=1; i<N; i++)
	x[i] = x[i-1] + step;
}
float sumVector(float x[], int M)
{
	float sum=0;
  8003ec:	0023883a 	mov	r17,zero

	for (int i=0;i<M;i++){
		sum=ALT_CI_FX_0(x[i],sum);
  8003f0:	80800017 	ldw	r2,0(r16)
  8003f4:	1463c072 	custom	1,r17,r2,r17
		printf("Custom Result: %f \n", (float) sum);
  8003f8:	8809883a 	mov	r4,r17
  8003fc:	080094c0 	call	80094c <__extendsfdf2>
  800400:	01002074 	movhi	r4,129
  800404:	84000104 	addi	r16,r16,4
  800408:	100b883a 	mov	r5,r2
  80040c:	180d883a 	mov	r6,r3
  800410:	213f3404 	addi	r4,r4,-816
  800414:	1029883a 	mov	r20,r2
  800418:	1827883a 	mov	r19,r3
  80041c:	0800af00 	call	800af0 <printf>
}
float sumVector(float x[], int M)
{
	float sum=0;

	for (int i=0;i<M;i++){
  800420:	943ff31e 	bne	r18,r16,8003f0 <__alt_data_end+0xff8003f0>


   	 exec_t1 = times(NULL); // get system time before starting the process
  	 y = sumVector(x, N);
   // till here
  	 exec_t2 = times(NULL); // get system time after finishing the process
  800424:	0009883a 	mov	r4,zero
  800428:	080dc040 	call	80dc04 <times>
  	 printf(" custom proc time = %d ticks \n", (unsigned int) (exec_t2-exec_t1));
  80042c:	01002074 	movhi	r4,129
  800430:	154bc83a 	sub	r5,r2,r21
  800434:	213f3d04 	addi	r4,r4,-780
  800438:	0800af00 	call	800af0 <printf>
  	 int j;
//  	 for (j=0; j<10; j++){
//  		 y = y/2.0;}
  	 printf("Custom Result: %f \n", (float) y);
  80043c:	01002074 	movhi	r4,129
  800440:	a00b883a 	mov	r5,r20
  800444:	980d883a 	mov	r6,r19
  800448:	213f3404 	addi	r4,r4,-816
  80044c:	0800af00 	call	800af0 <printf>


}
  800450:	0005883a 	mov	r2,zero
  800454:	02000434 	movhi	r8,16
  800458:	423c0104 	addi	r8,r8,-4092
  80045c:	da37883a 	add	sp,sp,r8
  800460:	dfc00617 	ldw	ra,24(sp)
  800464:	dd400517 	ldw	r21,20(sp)
  800468:	dd000417 	ldw	r20,16(sp)
  80046c:	dcc00317 	ldw	r19,12(sp)
  800470:	dc800217 	ldw	r18,8(sp)
  800474:	dc400117 	ldw	r17,4(sp)
  800478:	dc000017 	ldw	r16,0(sp)
  80047c:	dec00704 	addi	sp,sp,28
  800480:	f800283a 	ret

00800484 <__addsf3>:
  800484:	defffc04 	addi	sp,sp,-16
  800488:	2004d7fa 	srli	r2,r4,31
  80048c:	280cd5fa 	srli	r6,r5,23
  800490:	dc000015 	stw	r16,0(sp)
  800494:	00c02034 	movhi	r3,128
  800498:	2020d5fa 	srli	r16,r4,23
  80049c:	280ed7fa 	srli	r7,r5,31
  8004a0:	18ffffc4 	addi	r3,r3,-1
  8004a4:	dc400115 	stw	r17,4(sp)
  8004a8:	1908703a 	and	r4,r3,r4
  8004ac:	194a703a 	and	r5,r3,r5
  8004b0:	dfc00315 	stw	ra,12(sp)
  8004b4:	dc800215 	stw	r18,8(sp)
  8004b8:	14403fcc 	andi	r17,r2,255
  8004bc:	84003fcc 	andi	r16,r16,255
  8004c0:	200890fa 	slli	r4,r4,3
  8004c4:	31803fcc 	andi	r6,r6,255
  8004c8:	280a90fa 	slli	r5,r5,3
  8004cc:	89c05026 	beq	r17,r7,800610 <__addsf3+0x18c>
  8004d0:	8185c83a 	sub	r2,r16,r6
  8004d4:	00807a0e 	bge	zero,r2,8006c0 <__addsf3+0x23c>
  8004d8:	30001e1e 	bne	r6,zero,800554 <__addsf3+0xd0>
  8004dc:	28006d1e 	bne	r5,zero,800694 <__addsf3+0x210>
  8004e0:	208001cc 	andi	r2,r4,7
  8004e4:	10000426 	beq	r2,zero,8004f8 <__addsf3+0x74>
  8004e8:	208003cc 	andi	r2,r4,15
  8004ec:	00c00104 	movi	r3,4
  8004f0:	10c00126 	beq	r2,r3,8004f8 <__addsf3+0x74>
  8004f4:	20c9883a 	add	r4,r4,r3
  8004f8:	2081002c 	andhi	r2,r4,1024
  8004fc:	10003926 	beq	r2,zero,8005e4 <__addsf3+0x160>
  800500:	84000044 	addi	r16,r16,1
  800504:	00803fc4 	movi	r2,255
  800508:	80807826 	beq	r16,r2,8006ec <__addsf3+0x268>
  80050c:	200891ba 	slli	r4,r4,6
  800510:	8805883a 	mov	r2,r17
  800514:	2008d27a 	srli	r4,r4,9
  800518:	84003fcc 	andi	r16,r16,255
  80051c:	800695fa 	slli	r3,r16,23
  800520:	10803fcc 	andi	r2,r2,255
  800524:	04002034 	movhi	r16,128
  800528:	843fffc4 	addi	r16,r16,-1
  80052c:	100497fa 	slli	r2,r2,31
  800530:	2408703a 	and	r4,r4,r16
  800534:	20e0b03a 	or	r16,r4,r3
  800538:	8084b03a 	or	r2,r16,r2
  80053c:	dfc00317 	ldw	ra,12(sp)
  800540:	dc800217 	ldw	r18,8(sp)
  800544:	dc400117 	ldw	r17,4(sp)
  800548:	dc000017 	ldw	r16,0(sp)
  80054c:	dec00404 	addi	sp,sp,16
  800550:	f800283a 	ret
  800554:	00c03fc4 	movi	r3,255
  800558:	80ffe126 	beq	r16,r3,8004e0 <__alt_data_end+0xff8004e0>
  80055c:	29410034 	orhi	r5,r5,1024
  800560:	00c006c4 	movi	r3,27
  800564:	18807516 	blt	r3,r2,80073c <__addsf3+0x2b8>
  800568:	00c00804 	movi	r3,32
  80056c:	1887c83a 	sub	r3,r3,r2
  800570:	28c6983a 	sll	r3,r5,r3
  800574:	288ad83a 	srl	r5,r5,r2
  800578:	1804c03a 	cmpne	r2,r3,zero
  80057c:	288ab03a 	or	r5,r5,r2
  800580:	2149c83a 	sub	r4,r4,r5
  800584:	2081002c 	andhi	r2,r4,1024
  800588:	10001426 	beq	r2,zero,8005dc <__addsf3+0x158>
  80058c:	04810034 	movhi	r18,1024
  800590:	94bfffc4 	addi	r18,r18,-1
  800594:	24a4703a 	and	r18,r4,r18
  800598:	9009883a 	mov	r4,r18
  80059c:	0800a5c0 	call	800a5c <__clzsi2>
  8005a0:	10bffec4 	addi	r2,r2,-5
  8005a4:	90a4983a 	sll	r18,r18,r2
  8005a8:	14005416 	blt	r2,r16,8006fc <__addsf3+0x278>
  8005ac:	1405c83a 	sub	r2,r2,r16
  8005b0:	11000044 	addi	r4,r2,1
  8005b4:	00800804 	movi	r2,32
  8005b8:	1105c83a 	sub	r2,r2,r4
  8005bc:	9084983a 	sll	r2,r18,r2
  8005c0:	9124d83a 	srl	r18,r18,r4
  8005c4:	0021883a 	mov	r16,zero
  8005c8:	1008c03a 	cmpne	r4,r2,zero
  8005cc:	9108b03a 	or	r4,r18,r4
  8005d0:	003fc306 	br	8004e0 <__alt_data_end+0xff8004e0>
  8005d4:	1000db26 	beq	r2,zero,800944 <__addsf3+0x4c0>
  8005d8:	1009883a 	mov	r4,r2
  8005dc:	208001cc 	andi	r2,r4,7
  8005e0:	103fc11e 	bne	r2,zero,8004e8 <__alt_data_end+0xff8004e8>
  8005e4:	2006d0fa 	srli	r3,r4,3
  8005e8:	01003fc4 	movi	r4,255
  8005ec:	8805883a 	mov	r2,r17
  8005f0:	8100241e 	bne	r16,r4,800684 <__addsf3+0x200>
  8005f4:	18006e26 	beq	r3,zero,8007b0 <__addsf3+0x32c>
  8005f8:	19001034 	orhi	r4,r3,64
  8005fc:	00c02034 	movhi	r3,128
  800600:	18ffffc4 	addi	r3,r3,-1
  800604:	043fffc4 	movi	r16,-1
  800608:	20c8703a 	and	r4,r4,r3
  80060c:	003fc206 	br	800518 <__alt_data_end+0xff800518>
  800610:	8187c83a 	sub	r3,r16,r6
  800614:	00c03e0e 	bge	zero,r3,800710 <__addsf3+0x28c>
  800618:	30002326 	beq	r6,zero,8006a8 <__addsf3+0x224>
  80061c:	01803fc4 	movi	r6,255
  800620:	81bfaf26 	beq	r16,r6,8004e0 <__alt_data_end+0xff8004e0>
  800624:	29410034 	orhi	r5,r5,1024
  800628:	018006c4 	movi	r6,27
  80062c:	30c07416 	blt	r6,r3,800800 <__addsf3+0x37c>
  800630:	01800804 	movi	r6,32
  800634:	30cdc83a 	sub	r6,r6,r3
  800638:	298c983a 	sll	r6,r5,r6
  80063c:	28cad83a 	srl	r5,r5,r3
  800640:	3006c03a 	cmpne	r3,r6,zero
  800644:	28cab03a 	or	r5,r5,r3
  800648:	2149883a 	add	r4,r4,r5
  80064c:	20c1002c 	andhi	r3,r4,1024
  800650:	183fe226 	beq	r3,zero,8005dc <__alt_data_end+0xff8005dc>
  800654:	84000044 	addi	r16,r16,1
  800658:	00c03fc4 	movi	r3,255
  80065c:	80c05426 	beq	r16,r3,8007b0 <__addsf3+0x32c>
  800660:	00bf0034 	movhi	r2,64512
  800664:	10bfffc4 	addi	r2,r2,-1
  800668:	20c0004c 	andi	r3,r4,1
  80066c:	2088703a 	and	r4,r4,r2
  800670:	2008d07a 	srli	r4,r4,1
  800674:	20c8b03a 	or	r4,r4,r3
  800678:	003f9906 	br	8004e0 <__alt_data_end+0xff8004e0>
  80067c:	0007883a 	mov	r3,zero
  800680:	0005883a 	mov	r2,zero
  800684:	01002034 	movhi	r4,128
  800688:	213fffc4 	addi	r4,r4,-1
  80068c:	1908703a 	and	r4,r3,r4
  800690:	003fa106 	br	800518 <__alt_data_end+0xff800518>
  800694:	10bfffc4 	addi	r2,r2,-1
  800698:	103fb926 	beq	r2,zero,800580 <__alt_data_end+0xff800580>
  80069c:	00c03fc4 	movi	r3,255
  8006a0:	80ffaf1e 	bne	r16,r3,800560 <__alt_data_end+0xff800560>
  8006a4:	003f8e06 	br	8004e0 <__alt_data_end+0xff8004e0>
  8006a8:	283f8d26 	beq	r5,zero,8004e0 <__alt_data_end+0xff8004e0>
  8006ac:	18ffffc4 	addi	r3,r3,-1
  8006b0:	183fe526 	beq	r3,zero,800648 <__alt_data_end+0xff800648>
  8006b4:	01803fc4 	movi	r6,255
  8006b8:	81bfdb1e 	bne	r16,r6,800628 <__alt_data_end+0xff800628>
  8006bc:	003f8806 	br	8004e0 <__alt_data_end+0xff8004e0>
  8006c0:	1000201e 	bne	r2,zero,800744 <__addsf3+0x2c0>
  8006c4:	80800044 	addi	r2,r16,1
  8006c8:	10803fcc 	andi	r2,r2,255
  8006cc:	01800044 	movi	r6,1
  8006d0:	3080450e 	bge	r6,r2,8007e8 <__addsf3+0x364>
  8006d4:	2165c83a 	sub	r18,r4,r5
  8006d8:	90c1002c 	andhi	r3,r18,1024
  8006dc:	18002b26 	beq	r3,zero,80078c <__addsf3+0x308>
  8006e0:	2925c83a 	sub	r18,r5,r4
  8006e4:	3823883a 	mov	r17,r7
  8006e8:	003fab06 	br	800598 <__alt_data_end+0xff800598>
  8006ec:	8805883a 	mov	r2,r17
  8006f0:	043fffc4 	movi	r16,-1
  8006f4:	0009883a 	mov	r4,zero
  8006f8:	003f8706 	br	800518 <__alt_data_end+0xff800518>
  8006fc:	013f0034 	movhi	r4,64512
  800700:	213fffc4 	addi	r4,r4,-1
  800704:	80a1c83a 	sub	r16,r16,r2
  800708:	9108703a 	and	r4,r18,r4
  80070c:	003f7406 	br	8004e0 <__alt_data_end+0xff8004e0>
  800710:	1800411e 	bne	r3,zero,800818 <__addsf3+0x394>
  800714:	80c00044 	addi	r3,r16,1
  800718:	19c03fcc 	andi	r7,r3,255
  80071c:	01800044 	movi	r6,1
  800720:	31c0260e 	bge	r6,r7,8007bc <__addsf3+0x338>
  800724:	01803fc4 	movi	r6,255
  800728:	19802126 	beq	r3,r6,8007b0 <__addsf3+0x32c>
  80072c:	2149883a 	add	r4,r4,r5
  800730:	2008d07a 	srli	r4,r4,1
  800734:	1821883a 	mov	r16,r3
  800738:	003f6906 	br	8004e0 <__alt_data_end+0xff8004e0>
  80073c:	01400044 	movi	r5,1
  800740:	003f8f06 	br	800580 <__alt_data_end+0xff800580>
  800744:	8000151e 	bne	r16,zero,80079c <__addsf3+0x318>
  800748:	20002f26 	beq	r4,zero,800808 <__addsf3+0x384>
  80074c:	0084303a 	nor	r2,zero,r2
  800750:	10000a26 	beq	r2,zero,80077c <__addsf3+0x2f8>
  800754:	00c03fc4 	movi	r3,255
  800758:	30c02b26 	beq	r6,r3,800808 <__addsf3+0x384>
  80075c:	00c006c4 	movi	r3,27
  800760:	18806d16 	blt	r3,r2,800918 <__addsf3+0x494>
  800764:	00c00804 	movi	r3,32
  800768:	1887c83a 	sub	r3,r3,r2
  80076c:	20c6983a 	sll	r3,r4,r3
  800770:	2084d83a 	srl	r2,r4,r2
  800774:	1808c03a 	cmpne	r4,r3,zero
  800778:	1108b03a 	or	r4,r2,r4
  80077c:	2909c83a 	sub	r4,r5,r4
  800780:	3021883a 	mov	r16,r6
  800784:	3823883a 	mov	r17,r7
  800788:	003f7e06 	br	800584 <__alt_data_end+0xff800584>
  80078c:	903f821e 	bne	r18,zero,800598 <__alt_data_end+0xff800598>
  800790:	0005883a 	mov	r2,zero
  800794:	0021883a 	mov	r16,zero
  800798:	003fba06 	br	800684 <__alt_data_end+0xff800684>
  80079c:	00c03fc4 	movi	r3,255
  8007a0:	30c01926 	beq	r6,r3,800808 <__addsf3+0x384>
  8007a4:	0085c83a 	sub	r2,zero,r2
  8007a8:	21010034 	orhi	r4,r4,1024
  8007ac:	003feb06 	br	80075c <__alt_data_end+0xff80075c>
  8007b0:	043fffc4 	movi	r16,-1
  8007b4:	0009883a 	mov	r4,zero
  8007b8:	003f5706 	br	800518 <__alt_data_end+0xff800518>
  8007bc:	80004a1e 	bne	r16,zero,8008e8 <__addsf3+0x464>
  8007c0:	20005926 	beq	r4,zero,800928 <__addsf3+0x4a4>
  8007c4:	283f4626 	beq	r5,zero,8004e0 <__alt_data_end+0xff8004e0>
  8007c8:	2149883a 	add	r4,r4,r5
  8007cc:	2081002c 	andhi	r2,r4,1024
  8007d0:	103f8226 	beq	r2,zero,8005dc <__alt_data_end+0xff8005dc>
  8007d4:	00bf0034 	movhi	r2,64512
  8007d8:	10bfffc4 	addi	r2,r2,-1
  8007dc:	3021883a 	mov	r16,r6
  8007e0:	2088703a 	and	r4,r4,r2
  8007e4:	003f3e06 	br	8004e0 <__alt_data_end+0xff8004e0>
  8007e8:	8000121e 	bne	r16,zero,800834 <__addsf3+0x3b0>
  8007ec:	2000261e 	bne	r4,zero,800888 <__addsf3+0x404>
  8007f0:	283fa226 	beq	r5,zero,80067c <__alt_data_end+0xff80067c>
  8007f4:	2809883a 	mov	r4,r5
  8007f8:	3823883a 	mov	r17,r7
  8007fc:	003f3806 	br	8004e0 <__alt_data_end+0xff8004e0>
  800800:	01400044 	movi	r5,1
  800804:	003f9006 	br	800648 <__alt_data_end+0xff800648>
  800808:	2809883a 	mov	r4,r5
  80080c:	3021883a 	mov	r16,r6
  800810:	3823883a 	mov	r17,r7
  800814:	003f3206 	br	8004e0 <__alt_data_end+0xff8004e0>
  800818:	80000c1e 	bne	r16,zero,80084c <__addsf3+0x3c8>
  80081c:	20002f26 	beq	r4,zero,8008dc <__addsf3+0x458>
  800820:	00c6303a 	nor	r3,zero,r3
  800824:	18002b1e 	bne	r3,zero,8008d4 <__addsf3+0x450>
  800828:	2149883a 	add	r4,r4,r5
  80082c:	3021883a 	mov	r16,r6
  800830:	003f8606 	br	80064c <__alt_data_end+0xff80064c>
  800834:	20001b1e 	bne	r4,zero,8008a4 <__addsf3+0x420>
  800838:	28003926 	beq	r5,zero,800920 <__addsf3+0x49c>
  80083c:	2809883a 	mov	r4,r5
  800840:	3823883a 	mov	r17,r7
  800844:	04003fc4 	movi	r16,255
  800848:	003f2506 	br	8004e0 <__alt_data_end+0xff8004e0>
  80084c:	01c03fc4 	movi	r7,255
  800850:	31c02226 	beq	r6,r7,8008dc <__addsf3+0x458>
  800854:	00c7c83a 	sub	r3,zero,r3
  800858:	21010034 	orhi	r4,r4,1024
  80085c:	01c006c4 	movi	r7,27
  800860:	38c03616 	blt	r7,r3,80093c <__addsf3+0x4b8>
  800864:	01c00804 	movi	r7,32
  800868:	38cfc83a 	sub	r7,r7,r3
  80086c:	21ce983a 	sll	r7,r4,r7
  800870:	20c6d83a 	srl	r3,r4,r3
  800874:	3808c03a 	cmpne	r4,r7,zero
  800878:	1906b03a 	or	r3,r3,r4
  80087c:	1949883a 	add	r4,r3,r5
  800880:	3021883a 	mov	r16,r6
  800884:	003f7106 	br	80064c <__alt_data_end+0xff80064c>
  800888:	283f1526 	beq	r5,zero,8004e0 <__alt_data_end+0xff8004e0>
  80088c:	2145c83a 	sub	r2,r4,r5
  800890:	10c1002c 	andhi	r3,r2,1024
  800894:	183f4f26 	beq	r3,zero,8005d4 <__alt_data_end+0xff8005d4>
  800898:	2909c83a 	sub	r4,r5,r4
  80089c:	3823883a 	mov	r17,r7
  8008a0:	003f0f06 	br	8004e0 <__alt_data_end+0xff8004e0>
  8008a4:	28001a26 	beq	r5,zero,800910 <__addsf3+0x48c>
  8008a8:	2008d0fa 	srli	r4,r4,3
  8008ac:	2080102c 	andhi	r2,r4,64
  8008b0:	10000526 	beq	r2,zero,8008c8 <__addsf3+0x444>
  8008b4:	280ad0fa 	srli	r5,r5,3
  8008b8:	2880102c 	andhi	r2,r5,64
  8008bc:	1000021e 	bne	r2,zero,8008c8 <__addsf3+0x444>
  8008c0:	2809883a 	mov	r4,r5
  8008c4:	3823883a 	mov	r17,r7
  8008c8:	200890fa 	slli	r4,r4,3
  8008cc:	04003fc4 	movi	r16,255
  8008d0:	003f0306 	br	8004e0 <__alt_data_end+0xff8004e0>
  8008d4:	01c03fc4 	movi	r7,255
  8008d8:	31ffe01e 	bne	r6,r7,80085c <__alt_data_end+0xff80085c>
  8008dc:	2809883a 	mov	r4,r5
  8008e0:	3021883a 	mov	r16,r6
  8008e4:	003efe06 	br	8004e0 <__alt_data_end+0xff8004e0>
  8008e8:	20001126 	beq	r4,zero,800930 <__addsf3+0x4ac>
  8008ec:	28000826 	beq	r5,zero,800910 <__addsf3+0x48c>
  8008f0:	2008d0fa 	srli	r4,r4,3
  8008f4:	2080102c 	andhi	r2,r4,64
  8008f8:	103ff326 	beq	r2,zero,8008c8 <__alt_data_end+0xff8008c8>
  8008fc:	280ad0fa 	srli	r5,r5,3
  800900:	2880102c 	andhi	r2,r5,64
  800904:	103ff01e 	bne	r2,zero,8008c8 <__alt_data_end+0xff8008c8>
  800908:	2809883a 	mov	r4,r5
  80090c:	003fee06 	br	8008c8 <__alt_data_end+0xff8008c8>
  800910:	04003fc4 	movi	r16,255
  800914:	003ef206 	br	8004e0 <__alt_data_end+0xff8004e0>
  800918:	01000044 	movi	r4,1
  80091c:	003f9706 	br	80077c <__alt_data_end+0xff80077c>
  800920:	0005883a 	mov	r2,zero
  800924:	003f3406 	br	8005f8 <__alt_data_end+0xff8005f8>
  800928:	2809883a 	mov	r4,r5
  80092c:	003eec06 	br	8004e0 <__alt_data_end+0xff8004e0>
  800930:	2809883a 	mov	r4,r5
  800934:	04003fc4 	movi	r16,255
  800938:	003ee906 	br	8004e0 <__alt_data_end+0xff8004e0>
  80093c:	00c00044 	movi	r3,1
  800940:	003fce06 	br	80087c <__alt_data_end+0xff80087c>
  800944:	0005883a 	mov	r2,zero
  800948:	003f4e06 	br	800684 <__alt_data_end+0xff800684>

0080094c <__extendsfdf2>:
  80094c:	200ad5fa 	srli	r5,r4,23
  800950:	defffd04 	addi	sp,sp,-12
  800954:	dc400115 	stw	r17,4(sp)
  800958:	29403fcc 	andi	r5,r5,255
  80095c:	29800044 	addi	r6,r5,1
  800960:	04402034 	movhi	r17,128
  800964:	dc000015 	stw	r16,0(sp)
  800968:	8c7fffc4 	addi	r17,r17,-1
  80096c:	dfc00215 	stw	ra,8(sp)
  800970:	31803fcc 	andi	r6,r6,255
  800974:	00800044 	movi	r2,1
  800978:	8922703a 	and	r17,r17,r4
  80097c:	2020d7fa 	srli	r16,r4,31
  800980:	1180110e 	bge	r2,r6,8009c8 <__extendsfdf2+0x7c>
  800984:	880cd0fa 	srli	r6,r17,3
  800988:	8822977a 	slli	r17,r17,29
  80098c:	2940e004 	addi	r5,r5,896
  800990:	2941ffcc 	andi	r5,r5,2047
  800994:	2804953a 	slli	r2,r5,20
  800998:	01400434 	movhi	r5,16
  80099c:	800697fa 	slli	r3,r16,31
  8009a0:	297fffc4 	addi	r5,r5,-1
  8009a4:	314a703a 	and	r5,r6,r5
  8009a8:	288ab03a 	or	r5,r5,r2
  8009ac:	28c6b03a 	or	r3,r5,r3
  8009b0:	8805883a 	mov	r2,r17
  8009b4:	dfc00217 	ldw	ra,8(sp)
  8009b8:	dc400117 	ldw	r17,4(sp)
  8009bc:	dc000017 	ldw	r16,0(sp)
  8009c0:	dec00304 	addi	sp,sp,12
  8009c4:	f800283a 	ret
  8009c8:	2800111e 	bne	r5,zero,800a10 <__extendsfdf2+0xc4>
  8009cc:	88001c26 	beq	r17,zero,800a40 <__extendsfdf2+0xf4>
  8009d0:	8809883a 	mov	r4,r17
  8009d4:	0800a5c0 	call	800a5c <__clzsi2>
  8009d8:	00c00284 	movi	r3,10
  8009dc:	18801b16 	blt	r3,r2,800a4c <__extendsfdf2+0x100>
  8009e0:	018002c4 	movi	r6,11
  8009e4:	308dc83a 	sub	r6,r6,r2
  8009e8:	11000544 	addi	r4,r2,21
  8009ec:	8986d83a 	srl	r3,r17,r6
  8009f0:	8922983a 	sll	r17,r17,r4
  8009f4:	0180e244 	movi	r6,905
  8009f8:	01400434 	movhi	r5,16
  8009fc:	3085c83a 	sub	r2,r6,r2
  800a00:	297fffc4 	addi	r5,r5,-1
  800a04:	194c703a 	and	r6,r3,r5
  800a08:	1141ffcc 	andi	r5,r2,2047
  800a0c:	003fe006 	br	800990 <__alt_data_end+0xff800990>
  800a10:	88000826 	beq	r17,zero,800a34 <__extendsfdf2+0xe8>
  800a14:	880cd0fa 	srli	r6,r17,3
  800a18:	00800434 	movhi	r2,16
  800a1c:	10bfffc4 	addi	r2,r2,-1
  800a20:	31800234 	orhi	r6,r6,8
  800a24:	8822977a 	slli	r17,r17,29
  800a28:	308c703a 	and	r6,r6,r2
  800a2c:	0141ffc4 	movi	r5,2047
  800a30:	003fd706 	br	800990 <__alt_data_end+0xff800990>
  800a34:	0141ffc4 	movi	r5,2047
  800a38:	000d883a 	mov	r6,zero
  800a3c:	003fd406 	br	800990 <__alt_data_end+0xff800990>
  800a40:	000b883a 	mov	r5,zero
  800a44:	000d883a 	mov	r6,zero
  800a48:	003fd106 	br	800990 <__alt_data_end+0xff800990>
  800a4c:	11bffd44 	addi	r6,r2,-11
  800a50:	8986983a 	sll	r3,r17,r6
  800a54:	0023883a 	mov	r17,zero
  800a58:	003fe606 	br	8009f4 <__alt_data_end+0xff8009f4>

00800a5c <__clzsi2>:
  800a5c:	00bfffd4 	movui	r2,65535
  800a60:	11000536 	bltu	r2,r4,800a78 <__clzsi2+0x1c>
  800a64:	00803fc4 	movi	r2,255
  800a68:	11000f36 	bltu	r2,r4,800aa8 <__clzsi2+0x4c>
  800a6c:	00800804 	movi	r2,32
  800a70:	0007883a 	mov	r3,zero
  800a74:	00000506 	br	800a8c <__clzsi2+0x30>
  800a78:	00804034 	movhi	r2,256
  800a7c:	10bfffc4 	addi	r2,r2,-1
  800a80:	11000c2e 	bgeu	r2,r4,800ab4 <__clzsi2+0x58>
  800a84:	00800204 	movi	r2,8
  800a88:	00c00604 	movi	r3,24
  800a8c:	20c8d83a 	srl	r4,r4,r3
  800a90:	00c02074 	movhi	r3,129
  800a94:	18ff44c4 	addi	r3,r3,-749
  800a98:	1909883a 	add	r4,r3,r4
  800a9c:	20c00003 	ldbu	r3,0(r4)
  800aa0:	10c5c83a 	sub	r2,r2,r3
  800aa4:	f800283a 	ret
  800aa8:	00800604 	movi	r2,24
  800aac:	00c00204 	movi	r3,8
  800ab0:	003ff606 	br	800a8c <__alt_data_end+0xff800a8c>
  800ab4:	00800404 	movi	r2,16
  800ab8:	1007883a 	mov	r3,r2
  800abc:	003ff306 	br	800a8c <__alt_data_end+0xff800a8c>

00800ac0 <_printf_r>:
  800ac0:	defffd04 	addi	sp,sp,-12
  800ac4:	2805883a 	mov	r2,r5
  800ac8:	dfc00015 	stw	ra,0(sp)
  800acc:	d9800115 	stw	r6,4(sp)
  800ad0:	d9c00215 	stw	r7,8(sp)
  800ad4:	21400217 	ldw	r5,8(r4)
  800ad8:	d9c00104 	addi	r7,sp,4
  800adc:	100d883a 	mov	r6,r2
  800ae0:	0800c980 	call	800c98 <___vfprintf_internal_r>
  800ae4:	dfc00017 	ldw	ra,0(sp)
  800ae8:	dec00304 	addi	sp,sp,12
  800aec:	f800283a 	ret

00800af0 <printf>:
  800af0:	defffc04 	addi	sp,sp,-16
  800af4:	dfc00015 	stw	ra,0(sp)
  800af8:	d9400115 	stw	r5,4(sp)
  800afc:	d9800215 	stw	r6,8(sp)
  800b00:	d9c00315 	stw	r7,12(sp)
  800b04:	00802074 	movhi	r2,129
  800b08:	1086af04 	addi	r2,r2,6844
  800b0c:	10800017 	ldw	r2,0(r2)
  800b10:	200b883a 	mov	r5,r4
  800b14:	d9800104 	addi	r6,sp,4
  800b18:	11000217 	ldw	r4,8(r2)
  800b1c:	0802e900 	call	802e90 <__vfprintf_internal>
  800b20:	dfc00017 	ldw	ra,0(sp)
  800b24:	dec00404 	addi	sp,sp,16
  800b28:	f800283a 	ret

00800b2c <_puts_r>:
  800b2c:	defff604 	addi	sp,sp,-40
  800b30:	dc000715 	stw	r16,28(sp)
  800b34:	2021883a 	mov	r16,r4
  800b38:	2809883a 	mov	r4,r5
  800b3c:	dc400815 	stw	r17,32(sp)
  800b40:	dfc00915 	stw	ra,36(sp)
  800b44:	2823883a 	mov	r17,r5
  800b48:	0800c000 	call	800c00 <strlen>
  800b4c:	10c00044 	addi	r3,r2,1
  800b50:	d8800115 	stw	r2,4(sp)
  800b54:	00802074 	movhi	r2,129
  800b58:	10bf8504 	addi	r2,r2,-492
  800b5c:	d8800215 	stw	r2,8(sp)
  800b60:	00800044 	movi	r2,1
  800b64:	d8800315 	stw	r2,12(sp)
  800b68:	00800084 	movi	r2,2
  800b6c:	dc400015 	stw	r17,0(sp)
  800b70:	d8c00615 	stw	r3,24(sp)
  800b74:	dec00415 	stw	sp,16(sp)
  800b78:	d8800515 	stw	r2,20(sp)
  800b7c:	80000226 	beq	r16,zero,800b88 <_puts_r+0x5c>
  800b80:	80800e17 	ldw	r2,56(r16)
  800b84:	10001426 	beq	r2,zero,800bd8 <_puts_r+0xac>
  800b88:	81400217 	ldw	r5,8(r16)
  800b8c:	2880030b 	ldhu	r2,12(r5)
  800b90:	10c8000c 	andi	r3,r2,8192
  800b94:	1800061e 	bne	r3,zero,800bb0 <_puts_r+0x84>
  800b98:	29001917 	ldw	r4,100(r5)
  800b9c:	00f7ffc4 	movi	r3,-8193
  800ba0:	10880014 	ori	r2,r2,8192
  800ba4:	20c6703a 	and	r3,r4,r3
  800ba8:	2880030d 	sth	r2,12(r5)
  800bac:	28c01915 	stw	r3,100(r5)
  800bb0:	d9800404 	addi	r6,sp,16
  800bb4:	8009883a 	mov	r4,r16
  800bb8:	08053c00 	call	8053c0 <__sfvwrite_r>
  800bbc:	1000091e 	bne	r2,zero,800be4 <_puts_r+0xb8>
  800bc0:	00800284 	movi	r2,10
  800bc4:	dfc00917 	ldw	ra,36(sp)
  800bc8:	dc400817 	ldw	r17,32(sp)
  800bcc:	dc000717 	ldw	r16,28(sp)
  800bd0:	dec00a04 	addi	sp,sp,40
  800bd4:	f800283a 	ret
  800bd8:	8009883a 	mov	r4,r16
  800bdc:	0804f3c0 	call	804f3c <__sinit>
  800be0:	003fe906 	br	800b88 <__alt_data_end+0xff800b88>
  800be4:	00bfffc4 	movi	r2,-1
  800be8:	003ff606 	br	800bc4 <__alt_data_end+0xff800bc4>

00800bec <puts>:
  800bec:	00802074 	movhi	r2,129
  800bf0:	1086af04 	addi	r2,r2,6844
  800bf4:	200b883a 	mov	r5,r4
  800bf8:	11000017 	ldw	r4,0(r2)
  800bfc:	0800b2c1 	jmpi	800b2c <_puts_r>

00800c00 <strlen>:
  800c00:	208000cc 	andi	r2,r4,3
  800c04:	10002026 	beq	r2,zero,800c88 <strlen+0x88>
  800c08:	20800007 	ldb	r2,0(r4)
  800c0c:	10002026 	beq	r2,zero,800c90 <strlen+0x90>
  800c10:	2005883a 	mov	r2,r4
  800c14:	00000206 	br	800c20 <strlen+0x20>
  800c18:	10c00007 	ldb	r3,0(r2)
  800c1c:	18001826 	beq	r3,zero,800c80 <strlen+0x80>
  800c20:	10800044 	addi	r2,r2,1
  800c24:	10c000cc 	andi	r3,r2,3
  800c28:	183ffb1e 	bne	r3,zero,800c18 <__alt_data_end+0xff800c18>
  800c2c:	10c00017 	ldw	r3,0(r2)
  800c30:	01ffbff4 	movhi	r7,65279
  800c34:	39ffbfc4 	addi	r7,r7,-257
  800c38:	00ca303a 	nor	r5,zero,r3
  800c3c:	01a02074 	movhi	r6,32897
  800c40:	19c7883a 	add	r3,r3,r7
  800c44:	31a02004 	addi	r6,r6,-32640
  800c48:	1946703a 	and	r3,r3,r5
  800c4c:	1986703a 	and	r3,r3,r6
  800c50:	1800091e 	bne	r3,zero,800c78 <strlen+0x78>
  800c54:	10800104 	addi	r2,r2,4
  800c58:	10c00017 	ldw	r3,0(r2)
  800c5c:	19cb883a 	add	r5,r3,r7
  800c60:	00c6303a 	nor	r3,zero,r3
  800c64:	28c6703a 	and	r3,r5,r3
  800c68:	1986703a 	and	r3,r3,r6
  800c6c:	183ff926 	beq	r3,zero,800c54 <__alt_data_end+0xff800c54>
  800c70:	00000106 	br	800c78 <strlen+0x78>
  800c74:	10800044 	addi	r2,r2,1
  800c78:	10c00007 	ldb	r3,0(r2)
  800c7c:	183ffd1e 	bne	r3,zero,800c74 <__alt_data_end+0xff800c74>
  800c80:	1105c83a 	sub	r2,r2,r4
  800c84:	f800283a 	ret
  800c88:	2005883a 	mov	r2,r4
  800c8c:	003fe706 	br	800c2c <__alt_data_end+0xff800c2c>
  800c90:	0005883a 	mov	r2,zero
  800c94:	f800283a 	ret

00800c98 <___vfprintf_internal_r>:
  800c98:	deffb804 	addi	sp,sp,-288
  800c9c:	dfc04715 	stw	ra,284(sp)
  800ca0:	ddc04515 	stw	r23,276(sp)
  800ca4:	dd404315 	stw	r21,268(sp)
  800ca8:	d9002c15 	stw	r4,176(sp)
  800cac:	282f883a 	mov	r23,r5
  800cb0:	302b883a 	mov	r21,r6
  800cb4:	d9c02d15 	stw	r7,180(sp)
  800cb8:	df004615 	stw	fp,280(sp)
  800cbc:	dd804415 	stw	r22,272(sp)
  800cc0:	dd004215 	stw	r20,264(sp)
  800cc4:	dcc04115 	stw	r19,260(sp)
  800cc8:	dc804015 	stw	r18,256(sp)
  800ccc:	dc403f15 	stw	r17,252(sp)
  800cd0:	dc003e15 	stw	r16,248(sp)
  800cd4:	0805ab00 	call	805ab0 <_localeconv_r>
  800cd8:	10800017 	ldw	r2,0(r2)
  800cdc:	1009883a 	mov	r4,r2
  800ce0:	d8803415 	stw	r2,208(sp)
  800ce4:	0800c000 	call	800c00 <strlen>
  800ce8:	d8803715 	stw	r2,220(sp)
  800cec:	d8802c17 	ldw	r2,176(sp)
  800cf0:	10000226 	beq	r2,zero,800cfc <___vfprintf_internal_r+0x64>
  800cf4:	10800e17 	ldw	r2,56(r2)
  800cf8:	1000f926 	beq	r2,zero,8010e0 <___vfprintf_internal_r+0x448>
  800cfc:	b880030b 	ldhu	r2,12(r23)
  800d00:	10c8000c 	andi	r3,r2,8192
  800d04:	1800061e 	bne	r3,zero,800d20 <___vfprintf_internal_r+0x88>
  800d08:	b9001917 	ldw	r4,100(r23)
  800d0c:	00f7ffc4 	movi	r3,-8193
  800d10:	10880014 	ori	r2,r2,8192
  800d14:	20c6703a 	and	r3,r4,r3
  800d18:	b880030d 	sth	r2,12(r23)
  800d1c:	b8c01915 	stw	r3,100(r23)
  800d20:	10c0020c 	andi	r3,r2,8
  800d24:	1800c126 	beq	r3,zero,80102c <___vfprintf_internal_r+0x394>
  800d28:	b8c00417 	ldw	r3,16(r23)
  800d2c:	1800bf26 	beq	r3,zero,80102c <___vfprintf_internal_r+0x394>
  800d30:	1080068c 	andi	r2,r2,26
  800d34:	00c00284 	movi	r3,10
  800d38:	10c0c426 	beq	r2,r3,80104c <___vfprintf_internal_r+0x3b4>
  800d3c:	d8c00404 	addi	r3,sp,16
  800d40:	05002074 	movhi	r20,129
  800d44:	d9001e04 	addi	r4,sp,120
  800d48:	a53f9684 	addi	r20,r20,-422
  800d4c:	d8c01e15 	stw	r3,120(sp)
  800d50:	d8002015 	stw	zero,128(sp)
  800d54:	d8001f15 	stw	zero,124(sp)
  800d58:	d8003315 	stw	zero,204(sp)
  800d5c:	d8003615 	stw	zero,216(sp)
  800d60:	d8003815 	stw	zero,224(sp)
  800d64:	1811883a 	mov	r8,r3
  800d68:	d8003915 	stw	zero,228(sp)
  800d6c:	d8003a15 	stw	zero,232(sp)
  800d70:	d8002f15 	stw	zero,188(sp)
  800d74:	d9002815 	stw	r4,160(sp)
  800d78:	a8800007 	ldb	r2,0(r21)
  800d7c:	10027b26 	beq	r2,zero,80176c <___vfprintf_internal_r+0xad4>
  800d80:	00c00944 	movi	r3,37
  800d84:	a821883a 	mov	r16,r21
  800d88:	10c0021e 	bne	r2,r3,800d94 <___vfprintf_internal_r+0xfc>
  800d8c:	00001406 	br	800de0 <___vfprintf_internal_r+0x148>
  800d90:	10c00326 	beq	r2,r3,800da0 <___vfprintf_internal_r+0x108>
  800d94:	84000044 	addi	r16,r16,1
  800d98:	80800007 	ldb	r2,0(r16)
  800d9c:	103ffc1e 	bne	r2,zero,800d90 <__alt_data_end+0xff800d90>
  800da0:	8563c83a 	sub	r17,r16,r21
  800da4:	88000e26 	beq	r17,zero,800de0 <___vfprintf_internal_r+0x148>
  800da8:	d8c02017 	ldw	r3,128(sp)
  800dac:	d8801f17 	ldw	r2,124(sp)
  800db0:	45400015 	stw	r21,0(r8)
  800db4:	1c47883a 	add	r3,r3,r17
  800db8:	10800044 	addi	r2,r2,1
  800dbc:	d8c02015 	stw	r3,128(sp)
  800dc0:	44400115 	stw	r17,4(r8)
  800dc4:	d8801f15 	stw	r2,124(sp)
  800dc8:	00c001c4 	movi	r3,7
  800dcc:	1880a716 	blt	r3,r2,80106c <___vfprintf_internal_r+0x3d4>
  800dd0:	42000204 	addi	r8,r8,8
  800dd4:	d9402f17 	ldw	r5,188(sp)
  800dd8:	2c4b883a 	add	r5,r5,r17
  800ddc:	d9402f15 	stw	r5,188(sp)
  800de0:	80800007 	ldb	r2,0(r16)
  800de4:	1000a826 	beq	r2,zero,801088 <___vfprintf_internal_r+0x3f0>
  800de8:	84400047 	ldb	r17,1(r16)
  800dec:	00bfffc4 	movi	r2,-1
  800df0:	85400044 	addi	r21,r16,1
  800df4:	d8002785 	stb	zero,158(sp)
  800df8:	0007883a 	mov	r3,zero
  800dfc:	000f883a 	mov	r7,zero
  800e00:	d8802915 	stw	r2,164(sp)
  800e04:	d8003115 	stw	zero,196(sp)
  800e08:	0025883a 	mov	r18,zero
  800e0c:	01401604 	movi	r5,88
  800e10:	01800244 	movi	r6,9
  800e14:	02800a84 	movi	r10,42
  800e18:	02401b04 	movi	r9,108
  800e1c:	ad400044 	addi	r21,r21,1
  800e20:	88bff804 	addi	r2,r17,-32
  800e24:	28830436 	bltu	r5,r2,801a38 <___vfprintf_internal_r+0xda0>
  800e28:	100490ba 	slli	r2,r2,2
  800e2c:	01002034 	movhi	r4,128
  800e30:	21039004 	addi	r4,r4,3648
  800e34:	1105883a 	add	r2,r2,r4
  800e38:	10800017 	ldw	r2,0(r2)
  800e3c:	1000683a 	jmp	r2
  800e40:	00801958 	cmpnei	r2,zero,101
  800e44:	00801a38 	rdprs	r2,zero,104
  800e48:	00801a38 	rdprs	r2,zero,104
  800e4c:	00801978 	rdprs	r2,zero,101
  800e50:	00801a38 	rdprs	r2,zero,104
  800e54:	00801a38 	rdprs	r2,zero,104
  800e58:	00801a38 	rdprs	r2,zero,104
  800e5c:	00801a38 	rdprs	r2,zero,104
  800e60:	00801a38 	rdprs	r2,zero,104
  800e64:	00801a38 	rdprs	r2,zero,104
  800e68:	008010ec 	andhi	r2,zero,67
  800e6c:	00801894 	movui	r2,98
  800e70:	00801a38 	rdprs	r2,zero,104
  800e74:	00800fb4 	movhi	r2,62
  800e78:	00801114 	movui	r2,68
  800e7c:	00801a38 	rdprs	r2,zero,104
  800e80:	00801154 	movui	r2,69
  800e84:	00801160 	cmpeqi	r2,zero,69
  800e88:	00801160 	cmpeqi	r2,zero,69
  800e8c:	00801160 	cmpeqi	r2,zero,69
  800e90:	00801160 	cmpeqi	r2,zero,69
  800e94:	00801160 	cmpeqi	r2,zero,69
  800e98:	00801160 	cmpeqi	r2,zero,69
  800e9c:	00801160 	cmpeqi	r2,zero,69
  800ea0:	00801160 	cmpeqi	r2,zero,69
  800ea4:	00801160 	cmpeqi	r2,zero,69
  800ea8:	00801a38 	rdprs	r2,zero,104
  800eac:	00801a38 	rdprs	r2,zero,104
  800eb0:	00801a38 	rdprs	r2,zero,104
  800eb4:	00801a38 	rdprs	r2,zero,104
  800eb8:	00801a38 	rdprs	r2,zero,104
  800ebc:	00801a38 	rdprs	r2,zero,104
  800ec0:	00801a38 	rdprs	r2,zero,104
  800ec4:	00801a38 	rdprs	r2,zero,104
  800ec8:	00801a38 	rdprs	r2,zero,104
  800ecc:	00801a38 	rdprs	r2,zero,104
  800ed0:	00801194 	movui	r2,70
  800ed4:	00801250 	cmplti	r2,zero,73
  800ed8:	00801a38 	rdprs	r2,zero,104
  800edc:	00801250 	cmplti	r2,zero,73
  800ee0:	00801a38 	rdprs	r2,zero,104
  800ee4:	00801a38 	rdprs	r2,zero,104
  800ee8:	00801a38 	rdprs	r2,zero,104
  800eec:	00801a38 	rdprs	r2,zero,104
  800ef0:	008012f0 	cmpltui	r2,zero,75
  800ef4:	00801a38 	rdprs	r2,zero,104
  800ef8:	00801a38 	rdprs	r2,zero,104
  800efc:	008012fc 	xorhi	r2,zero,75
  800f00:	00801a38 	rdprs	r2,zero,104
  800f04:	00801a38 	rdprs	r2,zero,104
  800f08:	00801a38 	rdprs	r2,zero,104
  800f0c:	00801a38 	rdprs	r2,zero,104
  800f10:	00801a38 	rdprs	r2,zero,104
  800f14:	00801774 	movhi	r2,93
  800f18:	00801a38 	rdprs	r2,zero,104
  800f1c:	00801a38 	rdprs	r2,zero,104
  800f20:	008017d4 	movui	r2,95
  800f24:	00801a38 	rdprs	r2,zero,104
  800f28:	00801a38 	rdprs	r2,zero,104
  800f2c:	00801a38 	rdprs	r2,zero,104
  800f30:	00801a38 	rdprs	r2,zero,104
  800f34:	00801a38 	rdprs	r2,zero,104
  800f38:	00801a38 	rdprs	r2,zero,104
  800f3c:	00801a38 	rdprs	r2,zero,104
  800f40:	00801a38 	rdprs	r2,zero,104
  800f44:	00801a38 	rdprs	r2,zero,104
  800f48:	00801a38 	rdprs	r2,zero,104
  800f4c:	008019e4 	muli	r2,zero,103
  800f50:	00801984 	movi	r2,102
  800f54:	00801250 	cmplti	r2,zero,73
  800f58:	00801250 	cmplti	r2,zero,73
  800f5c:	00801250 	cmplti	r2,zero,73
  800f60:	00801994 	movui	r2,102
  800f64:	00801984 	movi	r2,102
  800f68:	00801a38 	rdprs	r2,zero,104
  800f6c:	00801a38 	rdprs	r2,zero,104
  800f70:	008019a0 	cmpeqi	r2,zero,102
  800f74:	00801a38 	rdprs	r2,zero,104
  800f78:	008019b0 	cmpltui	r2,zero,102
  800f7c:	00801884 	movi	r2,98
  800f80:	00800fc0 	call	800fc <__alt_mem_sdram-0x77ff04>
  800f84:	008018a4 	muli	r2,zero,98
  800f88:	00801a38 	rdprs	r2,zero,104
  800f8c:	008018b0 	cmpltui	r2,zero,98
  800f90:	00801a38 	rdprs	r2,zero,104
  800f94:	0080190c 	andi	r2,zero,100
  800f98:	00801a38 	rdprs	r2,zero,104
  800f9c:	00801a38 	rdprs	r2,zero,104
  800fa0:	0080191c 	xori	r2,zero,100
  800fa4:	d9003117 	ldw	r4,196(sp)
  800fa8:	d8802d15 	stw	r2,180(sp)
  800fac:	0109c83a 	sub	r4,zero,r4
  800fb0:	d9003115 	stw	r4,196(sp)
  800fb4:	94800114 	ori	r18,r18,4
  800fb8:	ac400007 	ldb	r17,0(r21)
  800fbc:	003f9706 	br	800e1c <__alt_data_end+0xff800e1c>
  800fc0:	00800c04 	movi	r2,48
  800fc4:	d9002d17 	ldw	r4,180(sp)
  800fc8:	d9402917 	ldw	r5,164(sp)
  800fcc:	d8802705 	stb	r2,156(sp)
  800fd0:	00801e04 	movi	r2,120
  800fd4:	d8802745 	stb	r2,157(sp)
  800fd8:	d8002785 	stb	zero,158(sp)
  800fdc:	20c00104 	addi	r3,r4,4
  800fe0:	24c00017 	ldw	r19,0(r4)
  800fe4:	002d883a 	mov	r22,zero
  800fe8:	90800094 	ori	r2,r18,2
  800fec:	28029a16 	blt	r5,zero,801a58 <___vfprintf_internal_r+0xdc0>
  800ff0:	00bfdfc4 	movi	r2,-129
  800ff4:	90a4703a 	and	r18,r18,r2
  800ff8:	d8c02d15 	stw	r3,180(sp)
  800ffc:	94800094 	ori	r18,r18,2
  801000:	9802871e 	bne	r19,zero,801a20 <___vfprintf_internal_r+0xd88>
  801004:	00802074 	movhi	r2,129
  801008:	10bf8f04 	addi	r2,r2,-452
  80100c:	d8803915 	stw	r2,228(sp)
  801010:	04401e04 	movi	r17,120
  801014:	d8802917 	ldw	r2,164(sp)
  801018:	0039883a 	mov	fp,zero
  80101c:	1001e926 	beq	r2,zero,8017c4 <___vfprintf_internal_r+0xb2c>
  801020:	0027883a 	mov	r19,zero
  801024:	002d883a 	mov	r22,zero
  801028:	00020506 	br	801840 <___vfprintf_internal_r+0xba8>
  80102c:	d9002c17 	ldw	r4,176(sp)
  801030:	b80b883a 	mov	r5,r23
  801034:	0802f680 	call	802f68 <__swsetup_r>
  801038:	1005ac1e 	bne	r2,zero,8026ec <___vfprintf_internal_r+0x1a54>
  80103c:	b880030b 	ldhu	r2,12(r23)
  801040:	00c00284 	movi	r3,10
  801044:	1080068c 	andi	r2,r2,26
  801048:	10ff3c1e 	bne	r2,r3,800d3c <__alt_data_end+0xff800d3c>
  80104c:	b880038f 	ldh	r2,14(r23)
  801050:	103f3a16 	blt	r2,zero,800d3c <__alt_data_end+0xff800d3c>
  801054:	d9c02d17 	ldw	r7,180(sp)
  801058:	d9002c17 	ldw	r4,176(sp)
  80105c:	a80d883a 	mov	r6,r21
  801060:	b80b883a 	mov	r5,r23
  801064:	0802eac0 	call	802eac <__sbprintf>
  801068:	00001106 	br	8010b0 <___vfprintf_internal_r+0x418>
  80106c:	d9002c17 	ldw	r4,176(sp)
  801070:	d9801e04 	addi	r6,sp,120
  801074:	b80b883a 	mov	r5,r23
  801078:	08082940 	call	808294 <__sprint_r>
  80107c:	1000081e 	bne	r2,zero,8010a0 <___vfprintf_internal_r+0x408>
  801080:	da000404 	addi	r8,sp,16
  801084:	003f5306 	br	800dd4 <__alt_data_end+0xff800dd4>
  801088:	d8802017 	ldw	r2,128(sp)
  80108c:	10000426 	beq	r2,zero,8010a0 <___vfprintf_internal_r+0x408>
  801090:	d9002c17 	ldw	r4,176(sp)
  801094:	d9801e04 	addi	r6,sp,120
  801098:	b80b883a 	mov	r5,r23
  80109c:	08082940 	call	808294 <__sprint_r>
  8010a0:	b880030b 	ldhu	r2,12(r23)
  8010a4:	1080100c 	andi	r2,r2,64
  8010a8:	1005901e 	bne	r2,zero,8026ec <___vfprintf_internal_r+0x1a54>
  8010ac:	d8802f17 	ldw	r2,188(sp)
  8010b0:	dfc04717 	ldw	ra,284(sp)
  8010b4:	df004617 	ldw	fp,280(sp)
  8010b8:	ddc04517 	ldw	r23,276(sp)
  8010bc:	dd804417 	ldw	r22,272(sp)
  8010c0:	dd404317 	ldw	r21,268(sp)
  8010c4:	dd004217 	ldw	r20,264(sp)
  8010c8:	dcc04117 	ldw	r19,260(sp)
  8010cc:	dc804017 	ldw	r18,256(sp)
  8010d0:	dc403f17 	ldw	r17,252(sp)
  8010d4:	dc003e17 	ldw	r16,248(sp)
  8010d8:	dec04804 	addi	sp,sp,288
  8010dc:	f800283a 	ret
  8010e0:	d9002c17 	ldw	r4,176(sp)
  8010e4:	0804f3c0 	call	804f3c <__sinit>
  8010e8:	003f0406 	br	800cfc <__alt_data_end+0xff800cfc>
  8010ec:	d8802d17 	ldw	r2,180(sp)
  8010f0:	d9002d17 	ldw	r4,180(sp)
  8010f4:	10800017 	ldw	r2,0(r2)
  8010f8:	d8803115 	stw	r2,196(sp)
  8010fc:	20800104 	addi	r2,r4,4
  801100:	d9003117 	ldw	r4,196(sp)
  801104:	203fa716 	blt	r4,zero,800fa4 <__alt_data_end+0xff800fa4>
  801108:	d8802d15 	stw	r2,180(sp)
  80110c:	ac400007 	ldb	r17,0(r21)
  801110:	003f4206 	br	800e1c <__alt_data_end+0xff800e1c>
  801114:	ac400007 	ldb	r17,0(r21)
  801118:	aac00044 	addi	r11,r21,1
  80111c:	8a872826 	beq	r17,r10,802dc0 <___vfprintf_internal_r+0x2128>
  801120:	88bff404 	addi	r2,r17,-48
  801124:	0009883a 	mov	r4,zero
  801128:	30867d36 	bltu	r6,r2,802b20 <___vfprintf_internal_r+0x1e88>
  80112c:	5c400007 	ldb	r17,0(r11)
  801130:	210002a4 	muli	r4,r4,10
  801134:	5d400044 	addi	r21,r11,1
  801138:	a817883a 	mov	r11,r21
  80113c:	2089883a 	add	r4,r4,r2
  801140:	88bff404 	addi	r2,r17,-48
  801144:	30bff92e 	bgeu	r6,r2,80112c <__alt_data_end+0xff80112c>
  801148:	2005c916 	blt	r4,zero,802870 <___vfprintf_internal_r+0x1bd8>
  80114c:	d9002915 	stw	r4,164(sp)
  801150:	003f3306 	br	800e20 <__alt_data_end+0xff800e20>
  801154:	94802014 	ori	r18,r18,128
  801158:	ac400007 	ldb	r17,0(r21)
  80115c:	003f2f06 	br	800e1c <__alt_data_end+0xff800e1c>
  801160:	a809883a 	mov	r4,r21
  801164:	d8003115 	stw	zero,196(sp)
  801168:	88bff404 	addi	r2,r17,-48
  80116c:	0017883a 	mov	r11,zero
  801170:	24400007 	ldb	r17,0(r4)
  801174:	5ac002a4 	muli	r11,r11,10
  801178:	ad400044 	addi	r21,r21,1
  80117c:	a809883a 	mov	r4,r21
  801180:	12d7883a 	add	r11,r2,r11
  801184:	88bff404 	addi	r2,r17,-48
  801188:	30bff92e 	bgeu	r6,r2,801170 <__alt_data_end+0xff801170>
  80118c:	dac03115 	stw	r11,196(sp)
  801190:	003f2306 	br	800e20 <__alt_data_end+0xff800e20>
  801194:	18c03fcc 	andi	r3,r3,255
  801198:	18072b1e 	bne	r3,zero,802e48 <___vfprintf_internal_r+0x21b0>
  80119c:	94800414 	ori	r18,r18,16
  8011a0:	9080080c 	andi	r2,r18,32
  8011a4:	10037b26 	beq	r2,zero,801f94 <___vfprintf_internal_r+0x12fc>
  8011a8:	d9402d17 	ldw	r5,180(sp)
  8011ac:	28800117 	ldw	r2,4(r5)
  8011b0:	2cc00017 	ldw	r19,0(r5)
  8011b4:	29400204 	addi	r5,r5,8
  8011b8:	d9402d15 	stw	r5,180(sp)
  8011bc:	102d883a 	mov	r22,r2
  8011c0:	10044b16 	blt	r2,zero,8022f0 <___vfprintf_internal_r+0x1658>
  8011c4:	d9402917 	ldw	r5,164(sp)
  8011c8:	df002783 	ldbu	fp,158(sp)
  8011cc:	2803bc16 	blt	r5,zero,8020c0 <___vfprintf_internal_r+0x1428>
  8011d0:	00ffdfc4 	movi	r3,-129
  8011d4:	9d84b03a 	or	r2,r19,r22
  8011d8:	90e4703a 	and	r18,r18,r3
  8011dc:	10017726 	beq	r2,zero,8017bc <___vfprintf_internal_r+0xb24>
  8011e0:	b0038326 	beq	r22,zero,801ff0 <___vfprintf_internal_r+0x1358>
  8011e4:	dc402a15 	stw	r17,168(sp)
  8011e8:	dc001e04 	addi	r16,sp,120
  8011ec:	b023883a 	mov	r17,r22
  8011f0:	402d883a 	mov	r22,r8
  8011f4:	9809883a 	mov	r4,r19
  8011f8:	880b883a 	mov	r5,r17
  8011fc:	01800284 	movi	r6,10
  801200:	000f883a 	mov	r7,zero
  801204:	080a68c0 	call	80a68c <__umoddi3>
  801208:	10800c04 	addi	r2,r2,48
  80120c:	843fffc4 	addi	r16,r16,-1
  801210:	9809883a 	mov	r4,r19
  801214:	880b883a 	mov	r5,r17
  801218:	80800005 	stb	r2,0(r16)
  80121c:	01800284 	movi	r6,10
  801220:	000f883a 	mov	r7,zero
  801224:	080a1140 	call	80a114 <__udivdi3>
  801228:	1027883a 	mov	r19,r2
  80122c:	10c4b03a 	or	r2,r2,r3
  801230:	1823883a 	mov	r17,r3
  801234:	103fef1e 	bne	r2,zero,8011f4 <__alt_data_end+0xff8011f4>
  801238:	d8c02817 	ldw	r3,160(sp)
  80123c:	dc402a17 	ldw	r17,168(sp)
  801240:	b011883a 	mov	r8,r22
  801244:	1c07c83a 	sub	r3,r3,r16
  801248:	d8c02e15 	stw	r3,184(sp)
  80124c:	00005906 	br	8013b4 <___vfprintf_internal_r+0x71c>
  801250:	18c03fcc 	andi	r3,r3,255
  801254:	1806fa1e 	bne	r3,zero,802e40 <___vfprintf_internal_r+0x21a8>
  801258:	9080020c 	andi	r2,r18,8
  80125c:	10048a26 	beq	r2,zero,802488 <___vfprintf_internal_r+0x17f0>
  801260:	d8c02d17 	ldw	r3,180(sp)
  801264:	d9002d17 	ldw	r4,180(sp)
  801268:	d9402d17 	ldw	r5,180(sp)
  80126c:	18c00017 	ldw	r3,0(r3)
  801270:	21000117 	ldw	r4,4(r4)
  801274:	29400204 	addi	r5,r5,8
  801278:	d8c03615 	stw	r3,216(sp)
  80127c:	d9003815 	stw	r4,224(sp)
  801280:	d9402d15 	stw	r5,180(sp)
  801284:	d9003617 	ldw	r4,216(sp)
  801288:	d9403817 	ldw	r5,224(sp)
  80128c:	da003d15 	stw	r8,244(sp)
  801290:	04000044 	movi	r16,1
  801294:	0807eb80 	call	807eb8 <__fpclassifyd>
  801298:	da003d17 	ldw	r8,244(sp)
  80129c:	14041f1e 	bne	r2,r16,80231c <___vfprintf_internal_r+0x1684>
  8012a0:	d9003617 	ldw	r4,216(sp)
  8012a4:	d9403817 	ldw	r5,224(sp)
  8012a8:	000d883a 	mov	r6,zero
  8012ac:	000f883a 	mov	r7,zero
  8012b0:	080c0700 	call	80c070 <__ledf2>
  8012b4:	da003d17 	ldw	r8,244(sp)
  8012b8:	1005be16 	blt	r2,zero,8029b4 <___vfprintf_internal_r+0x1d1c>
  8012bc:	df002783 	ldbu	fp,158(sp)
  8012c0:	008011c4 	movi	r2,71
  8012c4:	1445330e 	bge	r2,r17,802794 <___vfprintf_internal_r+0x1afc>
  8012c8:	04002074 	movhi	r16,129
  8012cc:	843f8704 	addi	r16,r16,-484
  8012d0:	00c000c4 	movi	r3,3
  8012d4:	00bfdfc4 	movi	r2,-129
  8012d8:	d8c02a15 	stw	r3,168(sp)
  8012dc:	90a4703a 	and	r18,r18,r2
  8012e0:	d8c02e15 	stw	r3,184(sp)
  8012e4:	d8002915 	stw	zero,164(sp)
  8012e8:	d8003215 	stw	zero,200(sp)
  8012ec:	00003706 	br	8013cc <___vfprintf_internal_r+0x734>
  8012f0:	94800214 	ori	r18,r18,8
  8012f4:	ac400007 	ldb	r17,0(r21)
  8012f8:	003ec806 	br	800e1c <__alt_data_end+0xff800e1c>
  8012fc:	18c03fcc 	andi	r3,r3,255
  801300:	1806db1e 	bne	r3,zero,802e70 <___vfprintf_internal_r+0x21d8>
  801304:	94800414 	ori	r18,r18,16
  801308:	9080080c 	andi	r2,r18,32
  80130c:	1002d826 	beq	r2,zero,801e70 <___vfprintf_internal_r+0x11d8>
  801310:	d9402d17 	ldw	r5,180(sp)
  801314:	d8c02917 	ldw	r3,164(sp)
  801318:	d8002785 	stb	zero,158(sp)
  80131c:	28800204 	addi	r2,r5,8
  801320:	2cc00017 	ldw	r19,0(r5)
  801324:	2d800117 	ldw	r22,4(r5)
  801328:	18048f16 	blt	r3,zero,802568 <___vfprintf_internal_r+0x18d0>
  80132c:	013fdfc4 	movi	r4,-129
  801330:	9d86b03a 	or	r3,r19,r22
  801334:	d8802d15 	stw	r2,180(sp)
  801338:	9124703a 	and	r18,r18,r4
  80133c:	1802d91e 	bne	r3,zero,801ea4 <___vfprintf_internal_r+0x120c>
  801340:	d8c02917 	ldw	r3,164(sp)
  801344:	0039883a 	mov	fp,zero
  801348:	1805c326 	beq	r3,zero,802a58 <___vfprintf_internal_r+0x1dc0>
  80134c:	0027883a 	mov	r19,zero
  801350:	002d883a 	mov	r22,zero
  801354:	dc001e04 	addi	r16,sp,120
  801358:	9806d0fa 	srli	r3,r19,3
  80135c:	b008977a 	slli	r4,r22,29
  801360:	b02cd0fa 	srli	r22,r22,3
  801364:	9cc001cc 	andi	r19,r19,7
  801368:	98800c04 	addi	r2,r19,48
  80136c:	843fffc4 	addi	r16,r16,-1
  801370:	20e6b03a 	or	r19,r4,r3
  801374:	80800005 	stb	r2,0(r16)
  801378:	9d86b03a 	or	r3,r19,r22
  80137c:	183ff61e 	bne	r3,zero,801358 <__alt_data_end+0xff801358>
  801380:	90c0004c 	andi	r3,r18,1
  801384:	18013b26 	beq	r3,zero,801874 <___vfprintf_internal_r+0xbdc>
  801388:	10803fcc 	andi	r2,r2,255
  80138c:	1080201c 	xori	r2,r2,128
  801390:	10bfe004 	addi	r2,r2,-128
  801394:	00c00c04 	movi	r3,48
  801398:	10c13626 	beq	r2,r3,801874 <___vfprintf_internal_r+0xbdc>
  80139c:	80ffffc5 	stb	r3,-1(r16)
  8013a0:	d8c02817 	ldw	r3,160(sp)
  8013a4:	80bfffc4 	addi	r2,r16,-1
  8013a8:	1021883a 	mov	r16,r2
  8013ac:	1887c83a 	sub	r3,r3,r2
  8013b0:	d8c02e15 	stw	r3,184(sp)
  8013b4:	d8802e17 	ldw	r2,184(sp)
  8013b8:	d9002917 	ldw	r4,164(sp)
  8013bc:	1100010e 	bge	r2,r4,8013c4 <___vfprintf_internal_r+0x72c>
  8013c0:	2005883a 	mov	r2,r4
  8013c4:	d8802a15 	stw	r2,168(sp)
  8013c8:	d8003215 	stw	zero,200(sp)
  8013cc:	e7003fcc 	andi	fp,fp,255
  8013d0:	e700201c 	xori	fp,fp,128
  8013d4:	e73fe004 	addi	fp,fp,-128
  8013d8:	e0000326 	beq	fp,zero,8013e8 <___vfprintf_internal_r+0x750>
  8013dc:	d8c02a17 	ldw	r3,168(sp)
  8013e0:	18c00044 	addi	r3,r3,1
  8013e4:	d8c02a15 	stw	r3,168(sp)
  8013e8:	90c0008c 	andi	r3,r18,2
  8013ec:	d8c02b15 	stw	r3,172(sp)
  8013f0:	18000326 	beq	r3,zero,801400 <___vfprintf_internal_r+0x768>
  8013f4:	d8c02a17 	ldw	r3,168(sp)
  8013f8:	18c00084 	addi	r3,r3,2
  8013fc:	d8c02a15 	stw	r3,168(sp)
  801400:	90c0210c 	andi	r3,r18,132
  801404:	d8c03015 	stw	r3,192(sp)
  801408:	1801a31e 	bne	r3,zero,801a98 <___vfprintf_internal_r+0xe00>
  80140c:	d9003117 	ldw	r4,196(sp)
  801410:	d8c02a17 	ldw	r3,168(sp)
  801414:	20e7c83a 	sub	r19,r4,r3
  801418:	04c19f0e 	bge	zero,r19,801a98 <___vfprintf_internal_r+0xe00>
  80141c:	02400404 	movi	r9,16
  801420:	d8c02017 	ldw	r3,128(sp)
  801424:	d8801f17 	ldw	r2,124(sp)
  801428:	4cc50d0e 	bge	r9,r19,802860 <___vfprintf_internal_r+0x1bc8>
  80142c:	01402074 	movhi	r5,129
  801430:	297f9a84 	addi	r5,r5,-406
  801434:	dc403b15 	stw	r17,236(sp)
  801438:	d9403515 	stw	r5,212(sp)
  80143c:	9823883a 	mov	r17,r19
  801440:	482d883a 	mov	r22,r9
  801444:	9027883a 	mov	r19,r18
  801448:	070001c4 	movi	fp,7
  80144c:	8025883a 	mov	r18,r16
  801450:	dc002c17 	ldw	r16,176(sp)
  801454:	00000306 	br	801464 <___vfprintf_internal_r+0x7cc>
  801458:	8c7ffc04 	addi	r17,r17,-16
  80145c:	42000204 	addi	r8,r8,8
  801460:	b440130e 	bge	r22,r17,8014b0 <___vfprintf_internal_r+0x818>
  801464:	01002074 	movhi	r4,129
  801468:	18c00404 	addi	r3,r3,16
  80146c:	10800044 	addi	r2,r2,1
  801470:	213f9a84 	addi	r4,r4,-406
  801474:	41000015 	stw	r4,0(r8)
  801478:	45800115 	stw	r22,4(r8)
  80147c:	d8c02015 	stw	r3,128(sp)
  801480:	d8801f15 	stw	r2,124(sp)
  801484:	e0bff40e 	bge	fp,r2,801458 <__alt_data_end+0xff801458>
  801488:	d9801e04 	addi	r6,sp,120
  80148c:	b80b883a 	mov	r5,r23
  801490:	8009883a 	mov	r4,r16
  801494:	08082940 	call	808294 <__sprint_r>
  801498:	103f011e 	bne	r2,zero,8010a0 <__alt_data_end+0xff8010a0>
  80149c:	8c7ffc04 	addi	r17,r17,-16
  8014a0:	d8c02017 	ldw	r3,128(sp)
  8014a4:	d8801f17 	ldw	r2,124(sp)
  8014a8:	da000404 	addi	r8,sp,16
  8014ac:	b47fed16 	blt	r22,r17,801464 <__alt_data_end+0xff801464>
  8014b0:	9021883a 	mov	r16,r18
  8014b4:	9825883a 	mov	r18,r19
  8014b8:	8827883a 	mov	r19,r17
  8014bc:	dc403b17 	ldw	r17,236(sp)
  8014c0:	d9403517 	ldw	r5,212(sp)
  8014c4:	98c7883a 	add	r3,r19,r3
  8014c8:	10800044 	addi	r2,r2,1
  8014cc:	41400015 	stw	r5,0(r8)
  8014d0:	44c00115 	stw	r19,4(r8)
  8014d4:	d8c02015 	stw	r3,128(sp)
  8014d8:	d8801f15 	stw	r2,124(sp)
  8014dc:	010001c4 	movi	r4,7
  8014e0:	2082a316 	blt	r4,r2,801f70 <___vfprintf_internal_r+0x12d8>
  8014e4:	df002787 	ldb	fp,158(sp)
  8014e8:	42000204 	addi	r8,r8,8
  8014ec:	e0000c26 	beq	fp,zero,801520 <___vfprintf_internal_r+0x888>
  8014f0:	d8801f17 	ldw	r2,124(sp)
  8014f4:	d9002784 	addi	r4,sp,158
  8014f8:	18c00044 	addi	r3,r3,1
  8014fc:	10800044 	addi	r2,r2,1
  801500:	41000015 	stw	r4,0(r8)
  801504:	01000044 	movi	r4,1
  801508:	41000115 	stw	r4,4(r8)
  80150c:	d8c02015 	stw	r3,128(sp)
  801510:	d8801f15 	stw	r2,124(sp)
  801514:	010001c4 	movi	r4,7
  801518:	20823c16 	blt	r4,r2,801e0c <___vfprintf_internal_r+0x1174>
  80151c:	42000204 	addi	r8,r8,8
  801520:	d8802b17 	ldw	r2,172(sp)
  801524:	10000c26 	beq	r2,zero,801558 <___vfprintf_internal_r+0x8c0>
  801528:	d8801f17 	ldw	r2,124(sp)
  80152c:	d9002704 	addi	r4,sp,156
  801530:	18c00084 	addi	r3,r3,2
  801534:	10800044 	addi	r2,r2,1
  801538:	41000015 	stw	r4,0(r8)
  80153c:	01000084 	movi	r4,2
  801540:	41000115 	stw	r4,4(r8)
  801544:	d8c02015 	stw	r3,128(sp)
  801548:	d8801f15 	stw	r2,124(sp)
  80154c:	010001c4 	movi	r4,7
  801550:	20823616 	blt	r4,r2,801e2c <___vfprintf_internal_r+0x1194>
  801554:	42000204 	addi	r8,r8,8
  801558:	d9003017 	ldw	r4,192(sp)
  80155c:	00802004 	movi	r2,128
  801560:	20819926 	beq	r4,r2,801bc8 <___vfprintf_internal_r+0xf30>
  801564:	d9402917 	ldw	r5,164(sp)
  801568:	d8802e17 	ldw	r2,184(sp)
  80156c:	28adc83a 	sub	r22,r5,r2
  801570:	0580310e 	bge	zero,r22,801638 <___vfprintf_internal_r+0x9a0>
  801574:	07000404 	movi	fp,16
  801578:	d8801f17 	ldw	r2,124(sp)
  80157c:	e584140e 	bge	fp,r22,8025d0 <___vfprintf_internal_r+0x1938>
  801580:	01402074 	movhi	r5,129
  801584:	297f9684 	addi	r5,r5,-422
  801588:	dc402915 	stw	r17,164(sp)
  80158c:	d9402b15 	stw	r5,172(sp)
  801590:	b023883a 	mov	r17,r22
  801594:	04c001c4 	movi	r19,7
  801598:	a82d883a 	mov	r22,r21
  80159c:	902b883a 	mov	r21,r18
  8015a0:	8025883a 	mov	r18,r16
  8015a4:	dc002c17 	ldw	r16,176(sp)
  8015a8:	00000306 	br	8015b8 <___vfprintf_internal_r+0x920>
  8015ac:	8c7ffc04 	addi	r17,r17,-16
  8015b0:	42000204 	addi	r8,r8,8
  8015b4:	e440110e 	bge	fp,r17,8015fc <___vfprintf_internal_r+0x964>
  8015b8:	18c00404 	addi	r3,r3,16
  8015bc:	10800044 	addi	r2,r2,1
  8015c0:	45000015 	stw	r20,0(r8)
  8015c4:	47000115 	stw	fp,4(r8)
  8015c8:	d8c02015 	stw	r3,128(sp)
  8015cc:	d8801f15 	stw	r2,124(sp)
  8015d0:	98bff60e 	bge	r19,r2,8015ac <__alt_data_end+0xff8015ac>
  8015d4:	d9801e04 	addi	r6,sp,120
  8015d8:	b80b883a 	mov	r5,r23
  8015dc:	8009883a 	mov	r4,r16
  8015e0:	08082940 	call	808294 <__sprint_r>
  8015e4:	103eae1e 	bne	r2,zero,8010a0 <__alt_data_end+0xff8010a0>
  8015e8:	8c7ffc04 	addi	r17,r17,-16
  8015ec:	d8c02017 	ldw	r3,128(sp)
  8015f0:	d8801f17 	ldw	r2,124(sp)
  8015f4:	da000404 	addi	r8,sp,16
  8015f8:	e47fef16 	blt	fp,r17,8015b8 <__alt_data_end+0xff8015b8>
  8015fc:	9021883a 	mov	r16,r18
  801600:	a825883a 	mov	r18,r21
  801604:	b02b883a 	mov	r21,r22
  801608:	882d883a 	mov	r22,r17
  80160c:	dc402917 	ldw	r17,164(sp)
  801610:	d9002b17 	ldw	r4,172(sp)
  801614:	1d87883a 	add	r3,r3,r22
  801618:	10800044 	addi	r2,r2,1
  80161c:	41000015 	stw	r4,0(r8)
  801620:	45800115 	stw	r22,4(r8)
  801624:	d8c02015 	stw	r3,128(sp)
  801628:	d8801f15 	stw	r2,124(sp)
  80162c:	010001c4 	movi	r4,7
  801630:	2081ee16 	blt	r4,r2,801dec <___vfprintf_internal_r+0x1154>
  801634:	42000204 	addi	r8,r8,8
  801638:	9080400c 	andi	r2,r18,256
  80163c:	1001181e 	bne	r2,zero,801aa0 <___vfprintf_internal_r+0xe08>
  801640:	d9402e17 	ldw	r5,184(sp)
  801644:	d8801f17 	ldw	r2,124(sp)
  801648:	44000015 	stw	r16,0(r8)
  80164c:	1947883a 	add	r3,r3,r5
  801650:	10800044 	addi	r2,r2,1
  801654:	41400115 	stw	r5,4(r8)
  801658:	d8c02015 	stw	r3,128(sp)
  80165c:	d8801f15 	stw	r2,124(sp)
  801660:	010001c4 	movi	r4,7
  801664:	2081d316 	blt	r4,r2,801db4 <___vfprintf_internal_r+0x111c>
  801668:	42000204 	addi	r8,r8,8
  80166c:	9480010c 	andi	r18,r18,4
  801670:	90003226 	beq	r18,zero,80173c <___vfprintf_internal_r+0xaa4>
  801674:	d9403117 	ldw	r5,196(sp)
  801678:	d8802a17 	ldw	r2,168(sp)
  80167c:	28a1c83a 	sub	r16,r5,r2
  801680:	04002e0e 	bge	zero,r16,80173c <___vfprintf_internal_r+0xaa4>
  801684:	04400404 	movi	r17,16
  801688:	d8801f17 	ldw	r2,124(sp)
  80168c:	8c04a20e 	bge	r17,r16,802918 <___vfprintf_internal_r+0x1c80>
  801690:	01402074 	movhi	r5,129
  801694:	297f9a84 	addi	r5,r5,-406
  801698:	d9403515 	stw	r5,212(sp)
  80169c:	048001c4 	movi	r18,7
  8016a0:	dcc02c17 	ldw	r19,176(sp)
  8016a4:	00000306 	br	8016b4 <___vfprintf_internal_r+0xa1c>
  8016a8:	843ffc04 	addi	r16,r16,-16
  8016ac:	42000204 	addi	r8,r8,8
  8016b0:	8c00130e 	bge	r17,r16,801700 <___vfprintf_internal_r+0xa68>
  8016b4:	01002074 	movhi	r4,129
  8016b8:	18c00404 	addi	r3,r3,16
  8016bc:	10800044 	addi	r2,r2,1
  8016c0:	213f9a84 	addi	r4,r4,-406
  8016c4:	41000015 	stw	r4,0(r8)
  8016c8:	44400115 	stw	r17,4(r8)
  8016cc:	d8c02015 	stw	r3,128(sp)
  8016d0:	d8801f15 	stw	r2,124(sp)
  8016d4:	90bff40e 	bge	r18,r2,8016a8 <__alt_data_end+0xff8016a8>
  8016d8:	d9801e04 	addi	r6,sp,120
  8016dc:	b80b883a 	mov	r5,r23
  8016e0:	9809883a 	mov	r4,r19
  8016e4:	08082940 	call	808294 <__sprint_r>
  8016e8:	103e6d1e 	bne	r2,zero,8010a0 <__alt_data_end+0xff8010a0>
  8016ec:	843ffc04 	addi	r16,r16,-16
  8016f0:	d8c02017 	ldw	r3,128(sp)
  8016f4:	d8801f17 	ldw	r2,124(sp)
  8016f8:	da000404 	addi	r8,sp,16
  8016fc:	8c3fed16 	blt	r17,r16,8016b4 <__alt_data_end+0xff8016b4>
  801700:	d9403517 	ldw	r5,212(sp)
  801704:	1c07883a 	add	r3,r3,r16
  801708:	10800044 	addi	r2,r2,1
  80170c:	41400015 	stw	r5,0(r8)
  801710:	44000115 	stw	r16,4(r8)
  801714:	d8c02015 	stw	r3,128(sp)
  801718:	d8801f15 	stw	r2,124(sp)
  80171c:	010001c4 	movi	r4,7
  801720:	2080060e 	bge	r4,r2,80173c <___vfprintf_internal_r+0xaa4>
  801724:	d9002c17 	ldw	r4,176(sp)
  801728:	d9801e04 	addi	r6,sp,120
  80172c:	b80b883a 	mov	r5,r23
  801730:	08082940 	call	808294 <__sprint_r>
  801734:	103e5a1e 	bne	r2,zero,8010a0 <__alt_data_end+0xff8010a0>
  801738:	d8c02017 	ldw	r3,128(sp)
  80173c:	d8803117 	ldw	r2,196(sp)
  801740:	d9002a17 	ldw	r4,168(sp)
  801744:	1100010e 	bge	r2,r4,80174c <___vfprintf_internal_r+0xab4>
  801748:	2005883a 	mov	r2,r4
  80174c:	d9402f17 	ldw	r5,188(sp)
  801750:	288b883a 	add	r5,r5,r2
  801754:	d9402f15 	stw	r5,188(sp)
  801758:	18019e1e 	bne	r3,zero,801dd4 <___vfprintf_internal_r+0x113c>
  80175c:	a8800007 	ldb	r2,0(r21)
  801760:	d8001f15 	stw	zero,124(sp)
  801764:	da000404 	addi	r8,sp,16
  801768:	103d851e 	bne	r2,zero,800d80 <__alt_data_end+0xff800d80>
  80176c:	a821883a 	mov	r16,r21
  801770:	003d9b06 	br	800de0 <__alt_data_end+0xff800de0>
  801774:	18c03fcc 	andi	r3,r3,255
  801778:	1805c11e 	bne	r3,zero,802e80 <___vfprintf_internal_r+0x21e8>
  80177c:	94800414 	ori	r18,r18,16
  801780:	9080080c 	andi	r2,r18,32
  801784:	10020c26 	beq	r2,zero,801fb8 <___vfprintf_internal_r+0x1320>
  801788:	d8802d17 	ldw	r2,180(sp)
  80178c:	d9002917 	ldw	r4,164(sp)
  801790:	d8002785 	stb	zero,158(sp)
  801794:	10c00204 	addi	r3,r2,8
  801798:	14c00017 	ldw	r19,0(r2)
  80179c:	15800117 	ldw	r22,4(r2)
  8017a0:	20040f16 	blt	r4,zero,8027e0 <___vfprintf_internal_r+0x1b48>
  8017a4:	013fdfc4 	movi	r4,-129
  8017a8:	9d84b03a 	or	r2,r19,r22
  8017ac:	d8c02d15 	stw	r3,180(sp)
  8017b0:	9124703a 	and	r18,r18,r4
  8017b4:	0039883a 	mov	fp,zero
  8017b8:	103e891e 	bne	r2,zero,8011e0 <__alt_data_end+0xff8011e0>
  8017bc:	d9002917 	ldw	r4,164(sp)
  8017c0:	2002c11e 	bne	r4,zero,8022c8 <___vfprintf_internal_r+0x1630>
  8017c4:	d8002915 	stw	zero,164(sp)
  8017c8:	d8002e15 	stw	zero,184(sp)
  8017cc:	dc001e04 	addi	r16,sp,120
  8017d0:	003ef806 	br	8013b4 <__alt_data_end+0xff8013b4>
  8017d4:	18c03fcc 	andi	r3,r3,255
  8017d8:	18059d1e 	bne	r3,zero,802e50 <___vfprintf_internal_r+0x21b8>
  8017dc:	01402074 	movhi	r5,129
  8017e0:	297f8a04 	addi	r5,r5,-472
  8017e4:	d9403915 	stw	r5,228(sp)
  8017e8:	9080080c 	andi	r2,r18,32
  8017ec:	10005226 	beq	r2,zero,801938 <___vfprintf_internal_r+0xca0>
  8017f0:	d8802d17 	ldw	r2,180(sp)
  8017f4:	14c00017 	ldw	r19,0(r2)
  8017f8:	15800117 	ldw	r22,4(r2)
  8017fc:	10800204 	addi	r2,r2,8
  801800:	d8802d15 	stw	r2,180(sp)
  801804:	9080004c 	andi	r2,r18,1
  801808:	10019026 	beq	r2,zero,801e4c <___vfprintf_internal_r+0x11b4>
  80180c:	9d84b03a 	or	r2,r19,r22
  801810:	10036926 	beq	r2,zero,8025b8 <___vfprintf_internal_r+0x1920>
  801814:	d8c02917 	ldw	r3,164(sp)
  801818:	00800c04 	movi	r2,48
  80181c:	d8802705 	stb	r2,156(sp)
  801820:	dc402745 	stb	r17,157(sp)
  801824:	d8002785 	stb	zero,158(sp)
  801828:	90800094 	ori	r2,r18,2
  80182c:	18045d16 	blt	r3,zero,8029a4 <___vfprintf_internal_r+0x1d0c>
  801830:	00bfdfc4 	movi	r2,-129
  801834:	90a4703a 	and	r18,r18,r2
  801838:	94800094 	ori	r18,r18,2
  80183c:	0039883a 	mov	fp,zero
  801840:	d9003917 	ldw	r4,228(sp)
  801844:	dc001e04 	addi	r16,sp,120
  801848:	988003cc 	andi	r2,r19,15
  80184c:	b006973a 	slli	r3,r22,28
  801850:	2085883a 	add	r2,r4,r2
  801854:	9826d13a 	srli	r19,r19,4
  801858:	10800003 	ldbu	r2,0(r2)
  80185c:	b02cd13a 	srli	r22,r22,4
  801860:	843fffc4 	addi	r16,r16,-1
  801864:	1ce6b03a 	or	r19,r3,r19
  801868:	80800005 	stb	r2,0(r16)
  80186c:	9d84b03a 	or	r2,r19,r22
  801870:	103ff51e 	bne	r2,zero,801848 <__alt_data_end+0xff801848>
  801874:	d8c02817 	ldw	r3,160(sp)
  801878:	1c07c83a 	sub	r3,r3,r16
  80187c:	d8c02e15 	stw	r3,184(sp)
  801880:	003ecc06 	br	8013b4 <__alt_data_end+0xff8013b4>
  801884:	18c03fcc 	andi	r3,r3,255
  801888:	183e9f26 	beq	r3,zero,801308 <__alt_data_end+0xff801308>
  80188c:	d9c02785 	stb	r7,158(sp)
  801890:	003e9d06 	br	801308 <__alt_data_end+0xff801308>
  801894:	00c00044 	movi	r3,1
  801898:	01c00ac4 	movi	r7,43
  80189c:	ac400007 	ldb	r17,0(r21)
  8018a0:	003d5e06 	br	800e1c <__alt_data_end+0xff800e1c>
  8018a4:	94800814 	ori	r18,r18,32
  8018a8:	ac400007 	ldb	r17,0(r21)
  8018ac:	003d5b06 	br	800e1c <__alt_data_end+0xff800e1c>
  8018b0:	d8c02d17 	ldw	r3,180(sp)
  8018b4:	d8002785 	stb	zero,158(sp)
  8018b8:	1c000017 	ldw	r16,0(r3)
  8018bc:	1cc00104 	addi	r19,r3,4
  8018c0:	80041926 	beq	r16,zero,802928 <___vfprintf_internal_r+0x1c90>
  8018c4:	d9002917 	ldw	r4,164(sp)
  8018c8:	2003d016 	blt	r4,zero,80280c <___vfprintf_internal_r+0x1b74>
  8018cc:	200d883a 	mov	r6,r4
  8018d0:	000b883a 	mov	r5,zero
  8018d4:	8009883a 	mov	r4,r16
  8018d8:	da003d15 	stw	r8,244(sp)
  8018dc:	08064a80 	call	8064a8 <memchr>
  8018e0:	da003d17 	ldw	r8,244(sp)
  8018e4:	10045426 	beq	r2,zero,802a38 <___vfprintf_internal_r+0x1da0>
  8018e8:	1405c83a 	sub	r2,r2,r16
  8018ec:	d8802e15 	stw	r2,184(sp)
  8018f0:	1003cc16 	blt	r2,zero,802824 <___vfprintf_internal_r+0x1b8c>
  8018f4:	df002783 	ldbu	fp,158(sp)
  8018f8:	d8802a15 	stw	r2,168(sp)
  8018fc:	dcc02d15 	stw	r19,180(sp)
  801900:	d8002915 	stw	zero,164(sp)
  801904:	d8003215 	stw	zero,200(sp)
  801908:	003eb006 	br	8013cc <__alt_data_end+0xff8013cc>
  80190c:	18c03fcc 	andi	r3,r3,255
  801910:	183f9b26 	beq	r3,zero,801780 <__alt_data_end+0xff801780>
  801914:	d9c02785 	stb	r7,158(sp)
  801918:	003f9906 	br	801780 <__alt_data_end+0xff801780>
  80191c:	18c03fcc 	andi	r3,r3,255
  801920:	1805551e 	bne	r3,zero,802e78 <___vfprintf_internal_r+0x21e0>
  801924:	01402074 	movhi	r5,129
  801928:	297f8f04 	addi	r5,r5,-452
  80192c:	d9403915 	stw	r5,228(sp)
  801930:	9080080c 	andi	r2,r18,32
  801934:	103fae1e 	bne	r2,zero,8017f0 <__alt_data_end+0xff8017f0>
  801938:	9080040c 	andi	r2,r18,16
  80193c:	1002de26 	beq	r2,zero,8024b8 <___vfprintf_internal_r+0x1820>
  801940:	d8c02d17 	ldw	r3,180(sp)
  801944:	002d883a 	mov	r22,zero
  801948:	1cc00017 	ldw	r19,0(r3)
  80194c:	18c00104 	addi	r3,r3,4
  801950:	d8c02d15 	stw	r3,180(sp)
  801954:	003fab06 	br	801804 <__alt_data_end+0xff801804>
  801958:	38803fcc 	andi	r2,r7,255
  80195c:	1080201c 	xori	r2,r2,128
  801960:	10bfe004 	addi	r2,r2,-128
  801964:	1002d21e 	bne	r2,zero,8024b0 <___vfprintf_internal_r+0x1818>
  801968:	00c00044 	movi	r3,1
  80196c:	01c00804 	movi	r7,32
  801970:	ac400007 	ldb	r17,0(r21)
  801974:	003d2906 	br	800e1c <__alt_data_end+0xff800e1c>
  801978:	94800054 	ori	r18,r18,1
  80197c:	ac400007 	ldb	r17,0(r21)
  801980:	003d2606 	br	800e1c <__alt_data_end+0xff800e1c>
  801984:	18c03fcc 	andi	r3,r3,255
  801988:	183e0526 	beq	r3,zero,8011a0 <__alt_data_end+0xff8011a0>
  80198c:	d9c02785 	stb	r7,158(sp)
  801990:	003e0306 	br	8011a0 <__alt_data_end+0xff8011a0>
  801994:	94801014 	ori	r18,r18,64
  801998:	ac400007 	ldb	r17,0(r21)
  80199c:	003d1f06 	br	800e1c <__alt_data_end+0xff800e1c>
  8019a0:	ac400007 	ldb	r17,0(r21)
  8019a4:	8a438726 	beq	r17,r9,8027c4 <___vfprintf_internal_r+0x1b2c>
  8019a8:	94800414 	ori	r18,r18,16
  8019ac:	003d1b06 	br	800e1c <__alt_data_end+0xff800e1c>
  8019b0:	18c03fcc 	andi	r3,r3,255
  8019b4:	1805341e 	bne	r3,zero,802e88 <___vfprintf_internal_r+0x21f0>
  8019b8:	9080080c 	andi	r2,r18,32
  8019bc:	1002cd26 	beq	r2,zero,8024f4 <___vfprintf_internal_r+0x185c>
  8019c0:	d9402d17 	ldw	r5,180(sp)
  8019c4:	d9002f17 	ldw	r4,188(sp)
  8019c8:	28800017 	ldw	r2,0(r5)
  8019cc:	2007d7fa 	srai	r3,r4,31
  8019d0:	29400104 	addi	r5,r5,4
  8019d4:	d9402d15 	stw	r5,180(sp)
  8019d8:	11000015 	stw	r4,0(r2)
  8019dc:	10c00115 	stw	r3,4(r2)
  8019e0:	003ce506 	br	800d78 <__alt_data_end+0xff800d78>
  8019e4:	d8c02d17 	ldw	r3,180(sp)
  8019e8:	d9002d17 	ldw	r4,180(sp)
  8019ec:	d8002785 	stb	zero,158(sp)
  8019f0:	18800017 	ldw	r2,0(r3)
  8019f4:	21000104 	addi	r4,r4,4
  8019f8:	00c00044 	movi	r3,1
  8019fc:	d8c02a15 	stw	r3,168(sp)
  801a00:	d8801405 	stb	r2,80(sp)
  801a04:	d9002d15 	stw	r4,180(sp)
  801a08:	d8c02e15 	stw	r3,184(sp)
  801a0c:	d8002915 	stw	zero,164(sp)
  801a10:	d8003215 	stw	zero,200(sp)
  801a14:	dc001404 	addi	r16,sp,80
  801a18:	0039883a 	mov	fp,zero
  801a1c:	003e7206 	br	8013e8 <__alt_data_end+0xff8013e8>
  801a20:	01002074 	movhi	r4,129
  801a24:	213f8f04 	addi	r4,r4,-452
  801a28:	0039883a 	mov	fp,zero
  801a2c:	d9003915 	stw	r4,228(sp)
  801a30:	04401e04 	movi	r17,120
  801a34:	003f8206 	br	801840 <__alt_data_end+0xff801840>
  801a38:	18c03fcc 	andi	r3,r3,255
  801a3c:	1805061e 	bne	r3,zero,802e58 <___vfprintf_internal_r+0x21c0>
  801a40:	883d9126 	beq	r17,zero,801088 <__alt_data_end+0xff801088>
  801a44:	00c00044 	movi	r3,1
  801a48:	d8c02a15 	stw	r3,168(sp)
  801a4c:	dc401405 	stb	r17,80(sp)
  801a50:	d8002785 	stb	zero,158(sp)
  801a54:	003fec06 	br	801a08 <__alt_data_end+0xff801a08>
  801a58:	01402074 	movhi	r5,129
  801a5c:	297f8f04 	addi	r5,r5,-452
  801a60:	d9403915 	stw	r5,228(sp)
  801a64:	d8c02d15 	stw	r3,180(sp)
  801a68:	1025883a 	mov	r18,r2
  801a6c:	04401e04 	movi	r17,120
  801a70:	9d84b03a 	or	r2,r19,r22
  801a74:	1000fc1e 	bne	r2,zero,801e68 <___vfprintf_internal_r+0x11d0>
  801a78:	0039883a 	mov	fp,zero
  801a7c:	00800084 	movi	r2,2
  801a80:	10803fcc 	andi	r2,r2,255
  801a84:	00c00044 	movi	r3,1
  801a88:	10c20f26 	beq	r2,r3,8022c8 <___vfprintf_internal_r+0x1630>
  801a8c:	00c00084 	movi	r3,2
  801a90:	10fd6326 	beq	r2,r3,801020 <__alt_data_end+0xff801020>
  801a94:	003e2d06 	br	80134c <__alt_data_end+0xff80134c>
  801a98:	d8c02017 	ldw	r3,128(sp)
  801a9c:	003e9306 	br	8014ec <__alt_data_end+0xff8014ec>
  801aa0:	00801944 	movi	r2,101
  801aa4:	14407e0e 	bge	r2,r17,801ca0 <___vfprintf_internal_r+0x1008>
  801aa8:	d9003617 	ldw	r4,216(sp)
  801aac:	d9403817 	ldw	r5,224(sp)
  801ab0:	000d883a 	mov	r6,zero
  801ab4:	000f883a 	mov	r7,zero
  801ab8:	d8c03c15 	stw	r3,240(sp)
  801abc:	da003d15 	stw	r8,244(sp)
  801ac0:	080bf0c0 	call	80bf0c <__eqdf2>
  801ac4:	d8c03c17 	ldw	r3,240(sp)
  801ac8:	da003d17 	ldw	r8,244(sp)
  801acc:	1000f71e 	bne	r2,zero,801eac <___vfprintf_internal_r+0x1214>
  801ad0:	d8801f17 	ldw	r2,124(sp)
  801ad4:	01002074 	movhi	r4,129
  801ad8:	213f9604 	addi	r4,r4,-424
  801adc:	18c00044 	addi	r3,r3,1
  801ae0:	10800044 	addi	r2,r2,1
  801ae4:	41000015 	stw	r4,0(r8)
  801ae8:	01000044 	movi	r4,1
  801aec:	41000115 	stw	r4,4(r8)
  801af0:	d8c02015 	stw	r3,128(sp)
  801af4:	d8801f15 	stw	r2,124(sp)
  801af8:	010001c4 	movi	r4,7
  801afc:	2082b816 	blt	r4,r2,8025e0 <___vfprintf_internal_r+0x1948>
  801b00:	42000204 	addi	r8,r8,8
  801b04:	d8802617 	ldw	r2,152(sp)
  801b08:	d9403317 	ldw	r5,204(sp)
  801b0c:	11400216 	blt	r2,r5,801b18 <___vfprintf_internal_r+0xe80>
  801b10:	9080004c 	andi	r2,r18,1
  801b14:	103ed526 	beq	r2,zero,80166c <__alt_data_end+0xff80166c>
  801b18:	d8803717 	ldw	r2,220(sp)
  801b1c:	d9003417 	ldw	r4,208(sp)
  801b20:	d9403717 	ldw	r5,220(sp)
  801b24:	1887883a 	add	r3,r3,r2
  801b28:	d8801f17 	ldw	r2,124(sp)
  801b2c:	41000015 	stw	r4,0(r8)
  801b30:	41400115 	stw	r5,4(r8)
  801b34:	10800044 	addi	r2,r2,1
  801b38:	d8c02015 	stw	r3,128(sp)
  801b3c:	d8801f15 	stw	r2,124(sp)
  801b40:	010001c4 	movi	r4,7
  801b44:	20832916 	blt	r4,r2,8027ec <___vfprintf_internal_r+0x1b54>
  801b48:	42000204 	addi	r8,r8,8
  801b4c:	d8803317 	ldw	r2,204(sp)
  801b50:	143fffc4 	addi	r16,r2,-1
  801b54:	043ec50e 	bge	zero,r16,80166c <__alt_data_end+0xff80166c>
  801b58:	04400404 	movi	r17,16
  801b5c:	d8801f17 	ldw	r2,124(sp)
  801b60:	8c00880e 	bge	r17,r16,801d84 <___vfprintf_internal_r+0x10ec>
  801b64:	01402074 	movhi	r5,129
  801b68:	297f9684 	addi	r5,r5,-422
  801b6c:	d9402b15 	stw	r5,172(sp)
  801b70:	058001c4 	movi	r22,7
  801b74:	dcc02c17 	ldw	r19,176(sp)
  801b78:	00000306 	br	801b88 <___vfprintf_internal_r+0xef0>
  801b7c:	42000204 	addi	r8,r8,8
  801b80:	843ffc04 	addi	r16,r16,-16
  801b84:	8c00820e 	bge	r17,r16,801d90 <___vfprintf_internal_r+0x10f8>
  801b88:	18c00404 	addi	r3,r3,16
  801b8c:	10800044 	addi	r2,r2,1
  801b90:	45000015 	stw	r20,0(r8)
  801b94:	44400115 	stw	r17,4(r8)
  801b98:	d8c02015 	stw	r3,128(sp)
  801b9c:	d8801f15 	stw	r2,124(sp)
  801ba0:	b0bff60e 	bge	r22,r2,801b7c <__alt_data_end+0xff801b7c>
  801ba4:	d9801e04 	addi	r6,sp,120
  801ba8:	b80b883a 	mov	r5,r23
  801bac:	9809883a 	mov	r4,r19
  801bb0:	08082940 	call	808294 <__sprint_r>
  801bb4:	103d3a1e 	bne	r2,zero,8010a0 <__alt_data_end+0xff8010a0>
  801bb8:	d8c02017 	ldw	r3,128(sp)
  801bbc:	d8801f17 	ldw	r2,124(sp)
  801bc0:	da000404 	addi	r8,sp,16
  801bc4:	003fee06 	br	801b80 <__alt_data_end+0xff801b80>
  801bc8:	d9403117 	ldw	r5,196(sp)
  801bcc:	d8802a17 	ldw	r2,168(sp)
  801bd0:	28adc83a 	sub	r22,r5,r2
  801bd4:	05be630e 	bge	zero,r22,801564 <__alt_data_end+0xff801564>
  801bd8:	07000404 	movi	fp,16
  801bdc:	d8801f17 	ldw	r2,124(sp)
  801be0:	e5838f0e 	bge	fp,r22,802a20 <___vfprintf_internal_r+0x1d88>
  801be4:	01402074 	movhi	r5,129
  801be8:	297f9684 	addi	r5,r5,-422
  801bec:	dc403015 	stw	r17,192(sp)
  801bf0:	d9402b15 	stw	r5,172(sp)
  801bf4:	b023883a 	mov	r17,r22
  801bf8:	04c001c4 	movi	r19,7
  801bfc:	a82d883a 	mov	r22,r21
  801c00:	902b883a 	mov	r21,r18
  801c04:	8025883a 	mov	r18,r16
  801c08:	dc002c17 	ldw	r16,176(sp)
  801c0c:	00000306 	br	801c1c <___vfprintf_internal_r+0xf84>
  801c10:	8c7ffc04 	addi	r17,r17,-16
  801c14:	42000204 	addi	r8,r8,8
  801c18:	e440110e 	bge	fp,r17,801c60 <___vfprintf_internal_r+0xfc8>
  801c1c:	18c00404 	addi	r3,r3,16
  801c20:	10800044 	addi	r2,r2,1
  801c24:	45000015 	stw	r20,0(r8)
  801c28:	47000115 	stw	fp,4(r8)
  801c2c:	d8c02015 	stw	r3,128(sp)
  801c30:	d8801f15 	stw	r2,124(sp)
  801c34:	98bff60e 	bge	r19,r2,801c10 <__alt_data_end+0xff801c10>
  801c38:	d9801e04 	addi	r6,sp,120
  801c3c:	b80b883a 	mov	r5,r23
  801c40:	8009883a 	mov	r4,r16
  801c44:	08082940 	call	808294 <__sprint_r>
  801c48:	103d151e 	bne	r2,zero,8010a0 <__alt_data_end+0xff8010a0>
  801c4c:	8c7ffc04 	addi	r17,r17,-16
  801c50:	d8c02017 	ldw	r3,128(sp)
  801c54:	d8801f17 	ldw	r2,124(sp)
  801c58:	da000404 	addi	r8,sp,16
  801c5c:	e47fef16 	blt	fp,r17,801c1c <__alt_data_end+0xff801c1c>
  801c60:	9021883a 	mov	r16,r18
  801c64:	a825883a 	mov	r18,r21
  801c68:	b02b883a 	mov	r21,r22
  801c6c:	882d883a 	mov	r22,r17
  801c70:	dc403017 	ldw	r17,192(sp)
  801c74:	d9002b17 	ldw	r4,172(sp)
  801c78:	1d87883a 	add	r3,r3,r22
  801c7c:	10800044 	addi	r2,r2,1
  801c80:	41000015 	stw	r4,0(r8)
  801c84:	45800115 	stw	r22,4(r8)
  801c88:	d8c02015 	stw	r3,128(sp)
  801c8c:	d8801f15 	stw	r2,124(sp)
  801c90:	010001c4 	movi	r4,7
  801c94:	20818e16 	blt	r4,r2,8022d0 <___vfprintf_internal_r+0x1638>
  801c98:	42000204 	addi	r8,r8,8
  801c9c:	003e3106 	br	801564 <__alt_data_end+0xff801564>
  801ca0:	d9403317 	ldw	r5,204(sp)
  801ca4:	00800044 	movi	r2,1
  801ca8:	18c00044 	addi	r3,r3,1
  801cac:	1141530e 	bge	r2,r5,8021fc <___vfprintf_internal_r+0x1564>
  801cb0:	dc401f17 	ldw	r17,124(sp)
  801cb4:	00800044 	movi	r2,1
  801cb8:	40800115 	stw	r2,4(r8)
  801cbc:	8c400044 	addi	r17,r17,1
  801cc0:	44000015 	stw	r16,0(r8)
  801cc4:	d8c02015 	stw	r3,128(sp)
  801cc8:	dc401f15 	stw	r17,124(sp)
  801ccc:	008001c4 	movi	r2,7
  801cd0:	14416b16 	blt	r2,r17,802280 <___vfprintf_internal_r+0x15e8>
  801cd4:	42000204 	addi	r8,r8,8
  801cd8:	d8803717 	ldw	r2,220(sp)
  801cdc:	d9003417 	ldw	r4,208(sp)
  801ce0:	8c400044 	addi	r17,r17,1
  801ce4:	10c7883a 	add	r3,r2,r3
  801ce8:	40800115 	stw	r2,4(r8)
  801cec:	41000015 	stw	r4,0(r8)
  801cf0:	d8c02015 	stw	r3,128(sp)
  801cf4:	dc401f15 	stw	r17,124(sp)
  801cf8:	008001c4 	movi	r2,7
  801cfc:	14416916 	blt	r2,r17,8022a4 <___vfprintf_internal_r+0x160c>
  801d00:	45800204 	addi	r22,r8,8
  801d04:	d9003617 	ldw	r4,216(sp)
  801d08:	d9403817 	ldw	r5,224(sp)
  801d0c:	000d883a 	mov	r6,zero
  801d10:	000f883a 	mov	r7,zero
  801d14:	d8c03c15 	stw	r3,240(sp)
  801d18:	080bf0c0 	call	80bf0c <__eqdf2>
  801d1c:	d8c03c17 	ldw	r3,240(sp)
  801d20:	1000bc26 	beq	r2,zero,802014 <___vfprintf_internal_r+0x137c>
  801d24:	d9403317 	ldw	r5,204(sp)
  801d28:	84000044 	addi	r16,r16,1
  801d2c:	8c400044 	addi	r17,r17,1
  801d30:	28bfffc4 	addi	r2,r5,-1
  801d34:	1887883a 	add	r3,r3,r2
  801d38:	b0800115 	stw	r2,4(r22)
  801d3c:	b4000015 	stw	r16,0(r22)
  801d40:	d8c02015 	stw	r3,128(sp)
  801d44:	dc401f15 	stw	r17,124(sp)
  801d48:	008001c4 	movi	r2,7
  801d4c:	14414316 	blt	r2,r17,80225c <___vfprintf_internal_r+0x15c4>
  801d50:	b5800204 	addi	r22,r22,8
  801d54:	d9003a17 	ldw	r4,232(sp)
  801d58:	df0022c4 	addi	fp,sp,139
  801d5c:	8c400044 	addi	r17,r17,1
  801d60:	20c7883a 	add	r3,r4,r3
  801d64:	b7000015 	stw	fp,0(r22)
  801d68:	b1000115 	stw	r4,4(r22)
  801d6c:	d8c02015 	stw	r3,128(sp)
  801d70:	dc401f15 	stw	r17,124(sp)
  801d74:	008001c4 	movi	r2,7
  801d78:	14400e16 	blt	r2,r17,801db4 <___vfprintf_internal_r+0x111c>
  801d7c:	b2000204 	addi	r8,r22,8
  801d80:	003e3a06 	br	80166c <__alt_data_end+0xff80166c>
  801d84:	01002074 	movhi	r4,129
  801d88:	213f9684 	addi	r4,r4,-422
  801d8c:	d9002b15 	stw	r4,172(sp)
  801d90:	d9002b17 	ldw	r4,172(sp)
  801d94:	1c07883a 	add	r3,r3,r16
  801d98:	44000115 	stw	r16,4(r8)
  801d9c:	41000015 	stw	r4,0(r8)
  801da0:	10800044 	addi	r2,r2,1
  801da4:	d8c02015 	stw	r3,128(sp)
  801da8:	d8801f15 	stw	r2,124(sp)
  801dac:	010001c4 	movi	r4,7
  801db0:	20be2d0e 	bge	r4,r2,801668 <__alt_data_end+0xff801668>
  801db4:	d9002c17 	ldw	r4,176(sp)
  801db8:	d9801e04 	addi	r6,sp,120
  801dbc:	b80b883a 	mov	r5,r23
  801dc0:	08082940 	call	808294 <__sprint_r>
  801dc4:	103cb61e 	bne	r2,zero,8010a0 <__alt_data_end+0xff8010a0>
  801dc8:	d8c02017 	ldw	r3,128(sp)
  801dcc:	da000404 	addi	r8,sp,16
  801dd0:	003e2606 	br	80166c <__alt_data_end+0xff80166c>
  801dd4:	d9002c17 	ldw	r4,176(sp)
  801dd8:	d9801e04 	addi	r6,sp,120
  801ddc:	b80b883a 	mov	r5,r23
  801de0:	08082940 	call	808294 <__sprint_r>
  801de4:	103e5d26 	beq	r2,zero,80175c <__alt_data_end+0xff80175c>
  801de8:	003cad06 	br	8010a0 <__alt_data_end+0xff8010a0>
  801dec:	d9002c17 	ldw	r4,176(sp)
  801df0:	d9801e04 	addi	r6,sp,120
  801df4:	b80b883a 	mov	r5,r23
  801df8:	08082940 	call	808294 <__sprint_r>
  801dfc:	103ca81e 	bne	r2,zero,8010a0 <__alt_data_end+0xff8010a0>
  801e00:	d8c02017 	ldw	r3,128(sp)
  801e04:	da000404 	addi	r8,sp,16
  801e08:	003e0b06 	br	801638 <__alt_data_end+0xff801638>
  801e0c:	d9002c17 	ldw	r4,176(sp)
  801e10:	d9801e04 	addi	r6,sp,120
  801e14:	b80b883a 	mov	r5,r23
  801e18:	08082940 	call	808294 <__sprint_r>
  801e1c:	103ca01e 	bne	r2,zero,8010a0 <__alt_data_end+0xff8010a0>
  801e20:	d8c02017 	ldw	r3,128(sp)
  801e24:	da000404 	addi	r8,sp,16
  801e28:	003dbd06 	br	801520 <__alt_data_end+0xff801520>
  801e2c:	d9002c17 	ldw	r4,176(sp)
  801e30:	d9801e04 	addi	r6,sp,120
  801e34:	b80b883a 	mov	r5,r23
  801e38:	08082940 	call	808294 <__sprint_r>
  801e3c:	103c981e 	bne	r2,zero,8010a0 <__alt_data_end+0xff8010a0>
  801e40:	d8c02017 	ldw	r3,128(sp)
  801e44:	da000404 	addi	r8,sp,16
  801e48:	003dc306 	br	801558 <__alt_data_end+0xff801558>
  801e4c:	d8802917 	ldw	r2,164(sp)
  801e50:	d8002785 	stb	zero,158(sp)
  801e54:	103f0616 	blt	r2,zero,801a70 <__alt_data_end+0xff801a70>
  801e58:	00ffdfc4 	movi	r3,-129
  801e5c:	9d84b03a 	or	r2,r19,r22
  801e60:	90e4703a 	and	r18,r18,r3
  801e64:	103c6b26 	beq	r2,zero,801014 <__alt_data_end+0xff801014>
  801e68:	0039883a 	mov	fp,zero
  801e6c:	003e7406 	br	801840 <__alt_data_end+0xff801840>
  801e70:	9080040c 	andi	r2,r18,16
  801e74:	1001b326 	beq	r2,zero,802544 <___vfprintf_internal_r+0x18ac>
  801e78:	d9002d17 	ldw	r4,180(sp)
  801e7c:	d9402917 	ldw	r5,164(sp)
  801e80:	d8002785 	stb	zero,158(sp)
  801e84:	20800104 	addi	r2,r4,4
  801e88:	24c00017 	ldw	r19,0(r4)
  801e8c:	002d883a 	mov	r22,zero
  801e90:	2801b516 	blt	r5,zero,802568 <___vfprintf_internal_r+0x18d0>
  801e94:	00ffdfc4 	movi	r3,-129
  801e98:	d8802d15 	stw	r2,180(sp)
  801e9c:	90e4703a 	and	r18,r18,r3
  801ea0:	983d2726 	beq	r19,zero,801340 <__alt_data_end+0xff801340>
  801ea4:	0039883a 	mov	fp,zero
  801ea8:	003d2a06 	br	801354 <__alt_data_end+0xff801354>
  801eac:	dc402617 	ldw	r17,152(sp)
  801eb0:	0441d30e 	bge	zero,r17,802600 <___vfprintf_internal_r+0x1968>
  801eb4:	dc403217 	ldw	r17,200(sp)
  801eb8:	d8803317 	ldw	r2,204(sp)
  801ebc:	1440010e 	bge	r2,r17,801ec4 <___vfprintf_internal_r+0x122c>
  801ec0:	1023883a 	mov	r17,r2
  801ec4:	04400a0e 	bge	zero,r17,801ef0 <___vfprintf_internal_r+0x1258>
  801ec8:	d8801f17 	ldw	r2,124(sp)
  801ecc:	1c47883a 	add	r3,r3,r17
  801ed0:	44000015 	stw	r16,0(r8)
  801ed4:	10800044 	addi	r2,r2,1
  801ed8:	44400115 	stw	r17,4(r8)
  801edc:	d8c02015 	stw	r3,128(sp)
  801ee0:	d8801f15 	stw	r2,124(sp)
  801ee4:	010001c4 	movi	r4,7
  801ee8:	20826516 	blt	r4,r2,802880 <___vfprintf_internal_r+0x1be8>
  801eec:	42000204 	addi	r8,r8,8
  801ef0:	88026116 	blt	r17,zero,802878 <___vfprintf_internal_r+0x1be0>
  801ef4:	d9003217 	ldw	r4,200(sp)
  801ef8:	2463c83a 	sub	r17,r4,r17
  801efc:	04407b0e 	bge	zero,r17,8020ec <___vfprintf_internal_r+0x1454>
  801f00:	05800404 	movi	r22,16
  801f04:	d8801f17 	ldw	r2,124(sp)
  801f08:	b4419d0e 	bge	r22,r17,802580 <___vfprintf_internal_r+0x18e8>
  801f0c:	01002074 	movhi	r4,129
  801f10:	213f9684 	addi	r4,r4,-422
  801f14:	d9002b15 	stw	r4,172(sp)
  801f18:	070001c4 	movi	fp,7
  801f1c:	dcc02c17 	ldw	r19,176(sp)
  801f20:	00000306 	br	801f30 <___vfprintf_internal_r+0x1298>
  801f24:	42000204 	addi	r8,r8,8
  801f28:	8c7ffc04 	addi	r17,r17,-16
  801f2c:	b441970e 	bge	r22,r17,80258c <___vfprintf_internal_r+0x18f4>
  801f30:	18c00404 	addi	r3,r3,16
  801f34:	10800044 	addi	r2,r2,1
  801f38:	45000015 	stw	r20,0(r8)
  801f3c:	45800115 	stw	r22,4(r8)
  801f40:	d8c02015 	stw	r3,128(sp)
  801f44:	d8801f15 	stw	r2,124(sp)
  801f48:	e0bff60e 	bge	fp,r2,801f24 <__alt_data_end+0xff801f24>
  801f4c:	d9801e04 	addi	r6,sp,120
  801f50:	b80b883a 	mov	r5,r23
  801f54:	9809883a 	mov	r4,r19
  801f58:	08082940 	call	808294 <__sprint_r>
  801f5c:	103c501e 	bne	r2,zero,8010a0 <__alt_data_end+0xff8010a0>
  801f60:	d8c02017 	ldw	r3,128(sp)
  801f64:	d8801f17 	ldw	r2,124(sp)
  801f68:	da000404 	addi	r8,sp,16
  801f6c:	003fee06 	br	801f28 <__alt_data_end+0xff801f28>
  801f70:	d9002c17 	ldw	r4,176(sp)
  801f74:	d9801e04 	addi	r6,sp,120
  801f78:	b80b883a 	mov	r5,r23
  801f7c:	08082940 	call	808294 <__sprint_r>
  801f80:	103c471e 	bne	r2,zero,8010a0 <__alt_data_end+0xff8010a0>
  801f84:	d8c02017 	ldw	r3,128(sp)
  801f88:	df002787 	ldb	fp,158(sp)
  801f8c:	da000404 	addi	r8,sp,16
  801f90:	003d5606 	br	8014ec <__alt_data_end+0xff8014ec>
  801f94:	9080040c 	andi	r2,r18,16
  801f98:	10016126 	beq	r2,zero,802520 <___vfprintf_internal_r+0x1888>
  801f9c:	d8802d17 	ldw	r2,180(sp)
  801fa0:	14c00017 	ldw	r19,0(r2)
  801fa4:	10800104 	addi	r2,r2,4
  801fa8:	d8802d15 	stw	r2,180(sp)
  801fac:	982dd7fa 	srai	r22,r19,31
  801fb0:	b005883a 	mov	r2,r22
  801fb4:	003c8206 	br	8011c0 <__alt_data_end+0xff8011c0>
  801fb8:	9080040c 	andi	r2,r18,16
  801fbc:	10003526 	beq	r2,zero,802094 <___vfprintf_internal_r+0x13fc>
  801fc0:	d9402d17 	ldw	r5,180(sp)
  801fc4:	d8c02917 	ldw	r3,164(sp)
  801fc8:	d8002785 	stb	zero,158(sp)
  801fcc:	28800104 	addi	r2,r5,4
  801fd0:	2cc00017 	ldw	r19,0(r5)
  801fd4:	002d883a 	mov	r22,zero
  801fd8:	18003716 	blt	r3,zero,8020b8 <___vfprintf_internal_r+0x1420>
  801fdc:	00ffdfc4 	movi	r3,-129
  801fe0:	d8802d15 	stw	r2,180(sp)
  801fe4:	90e4703a 	and	r18,r18,r3
  801fe8:	0039883a 	mov	fp,zero
  801fec:	983df326 	beq	r19,zero,8017bc <__alt_data_end+0xff8017bc>
  801ff0:	00800244 	movi	r2,9
  801ff4:	14fc7b36 	bltu	r2,r19,8011e4 <__alt_data_end+0xff8011e4>
  801ff8:	d8c02817 	ldw	r3,160(sp)
  801ffc:	dc001dc4 	addi	r16,sp,119
  802000:	9cc00c04 	addi	r19,r19,48
  802004:	1c07c83a 	sub	r3,r3,r16
  802008:	dcc01dc5 	stb	r19,119(sp)
  80200c:	d8c02e15 	stw	r3,184(sp)
  802010:	003ce806 	br	8013b4 <__alt_data_end+0xff8013b4>
  802014:	d8803317 	ldw	r2,204(sp)
  802018:	143fffc4 	addi	r16,r2,-1
  80201c:	043f4d0e 	bge	zero,r16,801d54 <__alt_data_end+0xff801d54>
  802020:	07000404 	movi	fp,16
  802024:	e400810e 	bge	fp,r16,80222c <___vfprintf_internal_r+0x1594>
  802028:	01402074 	movhi	r5,129
  80202c:	297f9684 	addi	r5,r5,-422
  802030:	d9402b15 	stw	r5,172(sp)
  802034:	01c001c4 	movi	r7,7
  802038:	dcc02c17 	ldw	r19,176(sp)
  80203c:	00000306 	br	80204c <___vfprintf_internal_r+0x13b4>
  802040:	b5800204 	addi	r22,r22,8
  802044:	843ffc04 	addi	r16,r16,-16
  802048:	e4007b0e 	bge	fp,r16,802238 <___vfprintf_internal_r+0x15a0>
  80204c:	18c00404 	addi	r3,r3,16
  802050:	8c400044 	addi	r17,r17,1
  802054:	b5000015 	stw	r20,0(r22)
  802058:	b7000115 	stw	fp,4(r22)
  80205c:	d8c02015 	stw	r3,128(sp)
  802060:	dc401f15 	stw	r17,124(sp)
  802064:	3c7ff60e 	bge	r7,r17,802040 <__alt_data_end+0xff802040>
  802068:	d9801e04 	addi	r6,sp,120
  80206c:	b80b883a 	mov	r5,r23
  802070:	9809883a 	mov	r4,r19
  802074:	d9c03c15 	stw	r7,240(sp)
  802078:	08082940 	call	808294 <__sprint_r>
  80207c:	d9c03c17 	ldw	r7,240(sp)
  802080:	103c071e 	bne	r2,zero,8010a0 <__alt_data_end+0xff8010a0>
  802084:	d8c02017 	ldw	r3,128(sp)
  802088:	dc401f17 	ldw	r17,124(sp)
  80208c:	dd800404 	addi	r22,sp,16
  802090:	003fec06 	br	802044 <__alt_data_end+0xff802044>
  802094:	9080100c 	andi	r2,r18,64
  802098:	d8002785 	stb	zero,158(sp)
  80209c:	10010e26 	beq	r2,zero,8024d8 <___vfprintf_internal_r+0x1840>
  8020a0:	d9002d17 	ldw	r4,180(sp)
  8020a4:	d9402917 	ldw	r5,164(sp)
  8020a8:	002d883a 	mov	r22,zero
  8020ac:	20800104 	addi	r2,r4,4
  8020b0:	24c0000b 	ldhu	r19,0(r4)
  8020b4:	283fc90e 	bge	r5,zero,801fdc <__alt_data_end+0xff801fdc>
  8020b8:	d8802d15 	stw	r2,180(sp)
  8020bc:	0039883a 	mov	fp,zero
  8020c0:	9d84b03a 	or	r2,r19,r22
  8020c4:	103c461e 	bne	r2,zero,8011e0 <__alt_data_end+0xff8011e0>
  8020c8:	00800044 	movi	r2,1
  8020cc:	003e6c06 	br	801a80 <__alt_data_end+0xff801a80>
  8020d0:	d9002c17 	ldw	r4,176(sp)
  8020d4:	d9801e04 	addi	r6,sp,120
  8020d8:	b80b883a 	mov	r5,r23
  8020dc:	08082940 	call	808294 <__sprint_r>
  8020e0:	103bef1e 	bne	r2,zero,8010a0 <__alt_data_end+0xff8010a0>
  8020e4:	d8c02017 	ldw	r3,128(sp)
  8020e8:	da000404 	addi	r8,sp,16
  8020ec:	d9003217 	ldw	r4,200(sp)
  8020f0:	d8802617 	ldw	r2,152(sp)
  8020f4:	d9403317 	ldw	r5,204(sp)
  8020f8:	8123883a 	add	r17,r16,r4
  8020fc:	11400216 	blt	r2,r5,802108 <___vfprintf_internal_r+0x1470>
  802100:	9100004c 	andi	r4,r18,1
  802104:	20000d26 	beq	r4,zero,80213c <___vfprintf_internal_r+0x14a4>
  802108:	d9003717 	ldw	r4,220(sp)
  80210c:	d9403417 	ldw	r5,208(sp)
  802110:	1907883a 	add	r3,r3,r4
  802114:	d9001f17 	ldw	r4,124(sp)
  802118:	41400015 	stw	r5,0(r8)
  80211c:	d9403717 	ldw	r5,220(sp)
  802120:	21000044 	addi	r4,r4,1
  802124:	d8c02015 	stw	r3,128(sp)
  802128:	41400115 	stw	r5,4(r8)
  80212c:	d9001f15 	stw	r4,124(sp)
  802130:	014001c4 	movi	r5,7
  802134:	2901e816 	blt	r5,r4,8028d8 <___vfprintf_internal_r+0x1c40>
  802138:	42000204 	addi	r8,r8,8
  80213c:	d9003317 	ldw	r4,204(sp)
  802140:	8121883a 	add	r16,r16,r4
  802144:	2085c83a 	sub	r2,r4,r2
  802148:	8461c83a 	sub	r16,r16,r17
  80214c:	1400010e 	bge	r2,r16,802154 <___vfprintf_internal_r+0x14bc>
  802150:	1021883a 	mov	r16,r2
  802154:	04000a0e 	bge	zero,r16,802180 <___vfprintf_internal_r+0x14e8>
  802158:	d9001f17 	ldw	r4,124(sp)
  80215c:	1c07883a 	add	r3,r3,r16
  802160:	44400015 	stw	r17,0(r8)
  802164:	21000044 	addi	r4,r4,1
  802168:	44000115 	stw	r16,4(r8)
  80216c:	d8c02015 	stw	r3,128(sp)
  802170:	d9001f15 	stw	r4,124(sp)
  802174:	014001c4 	movi	r5,7
  802178:	2901fb16 	blt	r5,r4,802968 <___vfprintf_internal_r+0x1cd0>
  80217c:	42000204 	addi	r8,r8,8
  802180:	8001f716 	blt	r16,zero,802960 <___vfprintf_internal_r+0x1cc8>
  802184:	1421c83a 	sub	r16,r2,r16
  802188:	043d380e 	bge	zero,r16,80166c <__alt_data_end+0xff80166c>
  80218c:	04400404 	movi	r17,16
  802190:	d8801f17 	ldw	r2,124(sp)
  802194:	8c3efb0e 	bge	r17,r16,801d84 <__alt_data_end+0xff801d84>
  802198:	01402074 	movhi	r5,129
  80219c:	297f9684 	addi	r5,r5,-422
  8021a0:	d9402b15 	stw	r5,172(sp)
  8021a4:	058001c4 	movi	r22,7
  8021a8:	dcc02c17 	ldw	r19,176(sp)
  8021ac:	00000306 	br	8021bc <___vfprintf_internal_r+0x1524>
  8021b0:	42000204 	addi	r8,r8,8
  8021b4:	843ffc04 	addi	r16,r16,-16
  8021b8:	8c3ef50e 	bge	r17,r16,801d90 <__alt_data_end+0xff801d90>
  8021bc:	18c00404 	addi	r3,r3,16
  8021c0:	10800044 	addi	r2,r2,1
  8021c4:	45000015 	stw	r20,0(r8)
  8021c8:	44400115 	stw	r17,4(r8)
  8021cc:	d8c02015 	stw	r3,128(sp)
  8021d0:	d8801f15 	stw	r2,124(sp)
  8021d4:	b0bff60e 	bge	r22,r2,8021b0 <__alt_data_end+0xff8021b0>
  8021d8:	d9801e04 	addi	r6,sp,120
  8021dc:	b80b883a 	mov	r5,r23
  8021e0:	9809883a 	mov	r4,r19
  8021e4:	08082940 	call	808294 <__sprint_r>
  8021e8:	103bad1e 	bne	r2,zero,8010a0 <__alt_data_end+0xff8010a0>
  8021ec:	d8c02017 	ldw	r3,128(sp)
  8021f0:	d8801f17 	ldw	r2,124(sp)
  8021f4:	da000404 	addi	r8,sp,16
  8021f8:	003fee06 	br	8021b4 <__alt_data_end+0xff8021b4>
  8021fc:	9088703a 	and	r4,r18,r2
  802200:	203eab1e 	bne	r4,zero,801cb0 <__alt_data_end+0xff801cb0>
  802204:	dc401f17 	ldw	r17,124(sp)
  802208:	40800115 	stw	r2,4(r8)
  80220c:	44000015 	stw	r16,0(r8)
  802210:	8c400044 	addi	r17,r17,1
  802214:	d8c02015 	stw	r3,128(sp)
  802218:	dc401f15 	stw	r17,124(sp)
  80221c:	008001c4 	movi	r2,7
  802220:	14400e16 	blt	r2,r17,80225c <___vfprintf_internal_r+0x15c4>
  802224:	45800204 	addi	r22,r8,8
  802228:	003eca06 	br	801d54 <__alt_data_end+0xff801d54>
  80222c:	01002074 	movhi	r4,129
  802230:	213f9684 	addi	r4,r4,-422
  802234:	d9002b15 	stw	r4,172(sp)
  802238:	d8802b17 	ldw	r2,172(sp)
  80223c:	1c07883a 	add	r3,r3,r16
  802240:	8c400044 	addi	r17,r17,1
  802244:	b0800015 	stw	r2,0(r22)
  802248:	b4000115 	stw	r16,4(r22)
  80224c:	d8c02015 	stw	r3,128(sp)
  802250:	dc401f15 	stw	r17,124(sp)
  802254:	008001c4 	movi	r2,7
  802258:	147ebd0e 	bge	r2,r17,801d50 <__alt_data_end+0xff801d50>
  80225c:	d9002c17 	ldw	r4,176(sp)
  802260:	d9801e04 	addi	r6,sp,120
  802264:	b80b883a 	mov	r5,r23
  802268:	08082940 	call	808294 <__sprint_r>
  80226c:	103b8c1e 	bne	r2,zero,8010a0 <__alt_data_end+0xff8010a0>
  802270:	d8c02017 	ldw	r3,128(sp)
  802274:	dc401f17 	ldw	r17,124(sp)
  802278:	dd800404 	addi	r22,sp,16
  80227c:	003eb506 	br	801d54 <__alt_data_end+0xff801d54>
  802280:	d9002c17 	ldw	r4,176(sp)
  802284:	d9801e04 	addi	r6,sp,120
  802288:	b80b883a 	mov	r5,r23
  80228c:	08082940 	call	808294 <__sprint_r>
  802290:	103b831e 	bne	r2,zero,8010a0 <__alt_data_end+0xff8010a0>
  802294:	d8c02017 	ldw	r3,128(sp)
  802298:	dc401f17 	ldw	r17,124(sp)
  80229c:	da000404 	addi	r8,sp,16
  8022a0:	003e8d06 	br	801cd8 <__alt_data_end+0xff801cd8>
  8022a4:	d9002c17 	ldw	r4,176(sp)
  8022a8:	d9801e04 	addi	r6,sp,120
  8022ac:	b80b883a 	mov	r5,r23
  8022b0:	08082940 	call	808294 <__sprint_r>
  8022b4:	103b7a1e 	bne	r2,zero,8010a0 <__alt_data_end+0xff8010a0>
  8022b8:	d8c02017 	ldw	r3,128(sp)
  8022bc:	dc401f17 	ldw	r17,124(sp)
  8022c0:	dd800404 	addi	r22,sp,16
  8022c4:	003e8f06 	br	801d04 <__alt_data_end+0xff801d04>
  8022c8:	0027883a 	mov	r19,zero
  8022cc:	003f4a06 	br	801ff8 <__alt_data_end+0xff801ff8>
  8022d0:	d9002c17 	ldw	r4,176(sp)
  8022d4:	d9801e04 	addi	r6,sp,120
  8022d8:	b80b883a 	mov	r5,r23
  8022dc:	08082940 	call	808294 <__sprint_r>
  8022e0:	103b6f1e 	bne	r2,zero,8010a0 <__alt_data_end+0xff8010a0>
  8022e4:	d8c02017 	ldw	r3,128(sp)
  8022e8:	da000404 	addi	r8,sp,16
  8022ec:	003c9d06 	br	801564 <__alt_data_end+0xff801564>
  8022f0:	04e7c83a 	sub	r19,zero,r19
  8022f4:	9804c03a 	cmpne	r2,r19,zero
  8022f8:	05adc83a 	sub	r22,zero,r22
  8022fc:	b0adc83a 	sub	r22,r22,r2
  802300:	d8802917 	ldw	r2,164(sp)
  802304:	07000b44 	movi	fp,45
  802308:	df002785 	stb	fp,158(sp)
  80230c:	10017b16 	blt	r2,zero,8028fc <___vfprintf_internal_r+0x1c64>
  802310:	00bfdfc4 	movi	r2,-129
  802314:	90a4703a 	and	r18,r18,r2
  802318:	003bb106 	br	8011e0 <__alt_data_end+0xff8011e0>
  80231c:	d9003617 	ldw	r4,216(sp)
  802320:	d9403817 	ldw	r5,224(sp)
  802324:	da003d15 	stw	r8,244(sp)
  802328:	0807eb80 	call	807eb8 <__fpclassifyd>
  80232c:	da003d17 	ldw	r8,244(sp)
  802330:	1000f026 	beq	r2,zero,8026f4 <___vfprintf_internal_r+0x1a5c>
  802334:	d9002917 	ldw	r4,164(sp)
  802338:	05bff7c4 	movi	r22,-33
  80233c:	00bfffc4 	movi	r2,-1
  802340:	8dac703a 	and	r22,r17,r22
  802344:	20820026 	beq	r4,r2,802b48 <___vfprintf_internal_r+0x1eb0>
  802348:	008011c4 	movi	r2,71
  80234c:	b081f726 	beq	r22,r2,802b2c <___vfprintf_internal_r+0x1e94>
  802350:	d9003817 	ldw	r4,224(sp)
  802354:	90c04014 	ori	r3,r18,256
  802358:	d8c02b15 	stw	r3,172(sp)
  80235c:	20021516 	blt	r4,zero,802bb4 <___vfprintf_internal_r+0x1f1c>
  802360:	dcc03817 	ldw	r19,224(sp)
  802364:	d8002a05 	stb	zero,168(sp)
  802368:	00801984 	movi	r2,102
  80236c:	8881f926 	beq	r17,r2,802b54 <___vfprintf_internal_r+0x1ebc>
  802370:	00801184 	movi	r2,70
  802374:	88821c26 	beq	r17,r2,802be8 <___vfprintf_internal_r+0x1f50>
  802378:	00801144 	movi	r2,69
  80237c:	b081ef26 	beq	r22,r2,802b3c <___vfprintf_internal_r+0x1ea4>
  802380:	d8c02917 	ldw	r3,164(sp)
  802384:	d8802104 	addi	r2,sp,132
  802388:	d8800315 	stw	r2,12(sp)
  80238c:	d9403617 	ldw	r5,216(sp)
  802390:	d8802504 	addi	r2,sp,148
  802394:	d9002c17 	ldw	r4,176(sp)
  802398:	d8800215 	stw	r2,8(sp)
  80239c:	d8802604 	addi	r2,sp,152
  8023a0:	d8c00015 	stw	r3,0(sp)
  8023a4:	d8800115 	stw	r2,4(sp)
  8023a8:	01c00084 	movi	r7,2
  8023ac:	980d883a 	mov	r6,r19
  8023b0:	d8c03c15 	stw	r3,240(sp)
  8023b4:	da003d15 	stw	r8,244(sp)
  8023b8:	08032bc0 	call	8032bc <_dtoa_r>
  8023bc:	1021883a 	mov	r16,r2
  8023c0:	008019c4 	movi	r2,103
  8023c4:	d8c03c17 	ldw	r3,240(sp)
  8023c8:	da003d17 	ldw	r8,244(sp)
  8023cc:	88817126 	beq	r17,r2,802994 <___vfprintf_internal_r+0x1cfc>
  8023d0:	008011c4 	movi	r2,71
  8023d4:	88829226 	beq	r17,r2,802e20 <___vfprintf_internal_r+0x2188>
  8023d8:	80f9883a 	add	fp,r16,r3
  8023dc:	d9003617 	ldw	r4,216(sp)
  8023e0:	000d883a 	mov	r6,zero
  8023e4:	000f883a 	mov	r7,zero
  8023e8:	980b883a 	mov	r5,r19
  8023ec:	da003d15 	stw	r8,244(sp)
  8023f0:	080bf0c0 	call	80bf0c <__eqdf2>
  8023f4:	da003d17 	ldw	r8,244(sp)
  8023f8:	10018d26 	beq	r2,zero,802a30 <___vfprintf_internal_r+0x1d98>
  8023fc:	d8802117 	ldw	r2,132(sp)
  802400:	1700062e 	bgeu	r2,fp,80241c <___vfprintf_internal_r+0x1784>
  802404:	01000c04 	movi	r4,48
  802408:	10c00044 	addi	r3,r2,1
  80240c:	d8c02115 	stw	r3,132(sp)
  802410:	11000005 	stb	r4,0(r2)
  802414:	d8802117 	ldw	r2,132(sp)
  802418:	173ffb36 	bltu	r2,fp,802408 <__alt_data_end+0xff802408>
  80241c:	1405c83a 	sub	r2,r2,r16
  802420:	d8803315 	stw	r2,204(sp)
  802424:	008011c4 	movi	r2,71
  802428:	b0817626 	beq	r22,r2,802a04 <___vfprintf_internal_r+0x1d6c>
  80242c:	00801944 	movi	r2,101
  802430:	1442810e 	bge	r2,r17,802e38 <___vfprintf_internal_r+0x21a0>
  802434:	d8c02617 	ldw	r3,152(sp)
  802438:	00801984 	movi	r2,102
  80243c:	d8c03215 	stw	r3,200(sp)
  802440:	8881fe26 	beq	r17,r2,802c3c <___vfprintf_internal_r+0x1fa4>
  802444:	d8c03217 	ldw	r3,200(sp)
  802448:	d9003317 	ldw	r4,204(sp)
  80244c:	1901dd16 	blt	r3,r4,802bc4 <___vfprintf_internal_r+0x1f2c>
  802450:	9480004c 	andi	r18,r18,1
  802454:	90022b1e 	bne	r18,zero,802d04 <___vfprintf_internal_r+0x206c>
  802458:	1805883a 	mov	r2,r3
  80245c:	18028016 	blt	r3,zero,802e60 <___vfprintf_internal_r+0x21c8>
  802460:	d8c03217 	ldw	r3,200(sp)
  802464:	044019c4 	movi	r17,103
  802468:	d8c02e15 	stw	r3,184(sp)
  80246c:	df002a07 	ldb	fp,168(sp)
  802470:	e001531e 	bne	fp,zero,8029c0 <___vfprintf_internal_r+0x1d28>
  802474:	df002783 	ldbu	fp,158(sp)
  802478:	d8802a15 	stw	r2,168(sp)
  80247c:	dc802b17 	ldw	r18,172(sp)
  802480:	d8002915 	stw	zero,164(sp)
  802484:	003bd106 	br	8013cc <__alt_data_end+0xff8013cc>
  802488:	d8802d17 	ldw	r2,180(sp)
  80248c:	d8c02d17 	ldw	r3,180(sp)
  802490:	d9002d17 	ldw	r4,180(sp)
  802494:	10800017 	ldw	r2,0(r2)
  802498:	18c00117 	ldw	r3,4(r3)
  80249c:	21000204 	addi	r4,r4,8
  8024a0:	d8803615 	stw	r2,216(sp)
  8024a4:	d8c03815 	stw	r3,224(sp)
  8024a8:	d9002d15 	stw	r4,180(sp)
  8024ac:	003b7506 	br	801284 <__alt_data_end+0xff801284>
  8024b0:	ac400007 	ldb	r17,0(r21)
  8024b4:	003a5906 	br	800e1c <__alt_data_end+0xff800e1c>
  8024b8:	9080100c 	andi	r2,r18,64
  8024bc:	1000a826 	beq	r2,zero,802760 <___vfprintf_internal_r+0x1ac8>
  8024c0:	d9002d17 	ldw	r4,180(sp)
  8024c4:	002d883a 	mov	r22,zero
  8024c8:	24c0000b 	ldhu	r19,0(r4)
  8024cc:	21000104 	addi	r4,r4,4
  8024d0:	d9002d15 	stw	r4,180(sp)
  8024d4:	003ccb06 	br	801804 <__alt_data_end+0xff801804>
  8024d8:	d8c02d17 	ldw	r3,180(sp)
  8024dc:	d9002917 	ldw	r4,164(sp)
  8024e0:	002d883a 	mov	r22,zero
  8024e4:	18800104 	addi	r2,r3,4
  8024e8:	1cc00017 	ldw	r19,0(r3)
  8024ec:	203ebb0e 	bge	r4,zero,801fdc <__alt_data_end+0xff801fdc>
  8024f0:	003ef106 	br	8020b8 <__alt_data_end+0xff8020b8>
  8024f4:	9080040c 	andi	r2,r18,16
  8024f8:	1000921e 	bne	r2,zero,802744 <___vfprintf_internal_r+0x1aac>
  8024fc:	9480100c 	andi	r18,r18,64
  802500:	90013926 	beq	r18,zero,8029e8 <___vfprintf_internal_r+0x1d50>
  802504:	d9002d17 	ldw	r4,180(sp)
  802508:	d9402f17 	ldw	r5,188(sp)
  80250c:	20800017 	ldw	r2,0(r4)
  802510:	21000104 	addi	r4,r4,4
  802514:	d9002d15 	stw	r4,180(sp)
  802518:	1140000d 	sth	r5,0(r2)
  80251c:	003a1606 	br	800d78 <__alt_data_end+0xff800d78>
  802520:	9080100c 	andi	r2,r18,64
  802524:	10008026 	beq	r2,zero,802728 <___vfprintf_internal_r+0x1a90>
  802528:	d8c02d17 	ldw	r3,180(sp)
  80252c:	1cc0000f 	ldh	r19,0(r3)
  802530:	18c00104 	addi	r3,r3,4
  802534:	d8c02d15 	stw	r3,180(sp)
  802538:	982dd7fa 	srai	r22,r19,31
  80253c:	b005883a 	mov	r2,r22
  802540:	003b1f06 	br	8011c0 <__alt_data_end+0xff8011c0>
  802544:	9080100c 	andi	r2,r18,64
  802548:	d8002785 	stb	zero,158(sp)
  80254c:	10008a1e 	bne	r2,zero,802778 <___vfprintf_internal_r+0x1ae0>
  802550:	d9402d17 	ldw	r5,180(sp)
  802554:	d8c02917 	ldw	r3,164(sp)
  802558:	002d883a 	mov	r22,zero
  80255c:	28800104 	addi	r2,r5,4
  802560:	2cc00017 	ldw	r19,0(r5)
  802564:	183e4b0e 	bge	r3,zero,801e94 <__alt_data_end+0xff801e94>
  802568:	9d86b03a 	or	r3,r19,r22
  80256c:	d8802d15 	stw	r2,180(sp)
  802570:	183e4c1e 	bne	r3,zero,801ea4 <__alt_data_end+0xff801ea4>
  802574:	0039883a 	mov	fp,zero
  802578:	0005883a 	mov	r2,zero
  80257c:	003d4006 	br	801a80 <__alt_data_end+0xff801a80>
  802580:	01402074 	movhi	r5,129
  802584:	297f9684 	addi	r5,r5,-422
  802588:	d9402b15 	stw	r5,172(sp)
  80258c:	d9402b17 	ldw	r5,172(sp)
  802590:	1c47883a 	add	r3,r3,r17
  802594:	10800044 	addi	r2,r2,1
  802598:	41400015 	stw	r5,0(r8)
  80259c:	44400115 	stw	r17,4(r8)
  8025a0:	d8c02015 	stw	r3,128(sp)
  8025a4:	d8801f15 	stw	r2,124(sp)
  8025a8:	010001c4 	movi	r4,7
  8025ac:	20bec816 	blt	r4,r2,8020d0 <__alt_data_end+0xff8020d0>
  8025b0:	42000204 	addi	r8,r8,8
  8025b4:	003ecd06 	br	8020ec <__alt_data_end+0xff8020ec>
  8025b8:	d9002917 	ldw	r4,164(sp)
  8025bc:	d8002785 	stb	zero,158(sp)
  8025c0:	203d2d16 	blt	r4,zero,801a78 <__alt_data_end+0xff801a78>
  8025c4:	00bfdfc4 	movi	r2,-129
  8025c8:	90a4703a 	and	r18,r18,r2
  8025cc:	003a9106 	br	801014 <__alt_data_end+0xff801014>
  8025d0:	01002074 	movhi	r4,129
  8025d4:	213f9684 	addi	r4,r4,-422
  8025d8:	d9002b15 	stw	r4,172(sp)
  8025dc:	003c0c06 	br	801610 <__alt_data_end+0xff801610>
  8025e0:	d9002c17 	ldw	r4,176(sp)
  8025e4:	d9801e04 	addi	r6,sp,120
  8025e8:	b80b883a 	mov	r5,r23
  8025ec:	08082940 	call	808294 <__sprint_r>
  8025f0:	103aab1e 	bne	r2,zero,8010a0 <__alt_data_end+0xff8010a0>
  8025f4:	d8c02017 	ldw	r3,128(sp)
  8025f8:	da000404 	addi	r8,sp,16
  8025fc:	003d4106 	br	801b04 <__alt_data_end+0xff801b04>
  802600:	d8801f17 	ldw	r2,124(sp)
  802604:	01402074 	movhi	r5,129
  802608:	01000044 	movi	r4,1
  80260c:	18c00044 	addi	r3,r3,1
  802610:	10800044 	addi	r2,r2,1
  802614:	297f9604 	addi	r5,r5,-424
  802618:	41000115 	stw	r4,4(r8)
  80261c:	41400015 	stw	r5,0(r8)
  802620:	d8c02015 	stw	r3,128(sp)
  802624:	d8801f15 	stw	r2,124(sp)
  802628:	010001c4 	movi	r4,7
  80262c:	20805c16 	blt	r4,r2,8027a0 <___vfprintf_internal_r+0x1b08>
  802630:	42000204 	addi	r8,r8,8
  802634:	8800041e 	bne	r17,zero,802648 <___vfprintf_internal_r+0x19b0>
  802638:	d8803317 	ldw	r2,204(sp)
  80263c:	1000021e 	bne	r2,zero,802648 <___vfprintf_internal_r+0x19b0>
  802640:	9080004c 	andi	r2,r18,1
  802644:	103c0926 	beq	r2,zero,80166c <__alt_data_end+0xff80166c>
  802648:	d9003717 	ldw	r4,220(sp)
  80264c:	d8801f17 	ldw	r2,124(sp)
  802650:	d9403417 	ldw	r5,208(sp)
  802654:	20c7883a 	add	r3,r4,r3
  802658:	10800044 	addi	r2,r2,1
  80265c:	41000115 	stw	r4,4(r8)
  802660:	41400015 	stw	r5,0(r8)
  802664:	d8c02015 	stw	r3,128(sp)
  802668:	d8801f15 	stw	r2,124(sp)
  80266c:	010001c4 	movi	r4,7
  802670:	20812116 	blt	r4,r2,802af8 <___vfprintf_internal_r+0x1e60>
  802674:	42000204 	addi	r8,r8,8
  802678:	0463c83a 	sub	r17,zero,r17
  80267c:	0440730e 	bge	zero,r17,80284c <___vfprintf_internal_r+0x1bb4>
  802680:	05800404 	movi	r22,16
  802684:	b440860e 	bge	r22,r17,8028a0 <___vfprintf_internal_r+0x1c08>
  802688:	01402074 	movhi	r5,129
  80268c:	297f9684 	addi	r5,r5,-422
  802690:	d9402b15 	stw	r5,172(sp)
  802694:	070001c4 	movi	fp,7
  802698:	dcc02c17 	ldw	r19,176(sp)
  80269c:	00000306 	br	8026ac <___vfprintf_internal_r+0x1a14>
  8026a0:	42000204 	addi	r8,r8,8
  8026a4:	8c7ffc04 	addi	r17,r17,-16
  8026a8:	b440800e 	bge	r22,r17,8028ac <___vfprintf_internal_r+0x1c14>
  8026ac:	18c00404 	addi	r3,r3,16
  8026b0:	10800044 	addi	r2,r2,1
  8026b4:	45000015 	stw	r20,0(r8)
  8026b8:	45800115 	stw	r22,4(r8)
  8026bc:	d8c02015 	stw	r3,128(sp)
  8026c0:	d8801f15 	stw	r2,124(sp)
  8026c4:	e0bff60e 	bge	fp,r2,8026a0 <__alt_data_end+0xff8026a0>
  8026c8:	d9801e04 	addi	r6,sp,120
  8026cc:	b80b883a 	mov	r5,r23
  8026d0:	9809883a 	mov	r4,r19
  8026d4:	08082940 	call	808294 <__sprint_r>
  8026d8:	103a711e 	bne	r2,zero,8010a0 <__alt_data_end+0xff8010a0>
  8026dc:	d8c02017 	ldw	r3,128(sp)
  8026e0:	d8801f17 	ldw	r2,124(sp)
  8026e4:	da000404 	addi	r8,sp,16
  8026e8:	003fee06 	br	8026a4 <__alt_data_end+0xff8026a4>
  8026ec:	00bfffc4 	movi	r2,-1
  8026f0:	003a6f06 	br	8010b0 <__alt_data_end+0xff8010b0>
  8026f4:	008011c4 	movi	r2,71
  8026f8:	1440b816 	blt	r2,r17,8029dc <___vfprintf_internal_r+0x1d44>
  8026fc:	04002074 	movhi	r16,129
  802700:	843f8804 	addi	r16,r16,-480
  802704:	00c000c4 	movi	r3,3
  802708:	00bfdfc4 	movi	r2,-129
  80270c:	d8c02a15 	stw	r3,168(sp)
  802710:	90a4703a 	and	r18,r18,r2
  802714:	df002783 	ldbu	fp,158(sp)
  802718:	d8c02e15 	stw	r3,184(sp)
  80271c:	d8002915 	stw	zero,164(sp)
  802720:	d8003215 	stw	zero,200(sp)
  802724:	003b2906 	br	8013cc <__alt_data_end+0xff8013cc>
  802728:	d9002d17 	ldw	r4,180(sp)
  80272c:	24c00017 	ldw	r19,0(r4)
  802730:	21000104 	addi	r4,r4,4
  802734:	d9002d15 	stw	r4,180(sp)
  802738:	982dd7fa 	srai	r22,r19,31
  80273c:	b005883a 	mov	r2,r22
  802740:	003a9f06 	br	8011c0 <__alt_data_end+0xff8011c0>
  802744:	d9402d17 	ldw	r5,180(sp)
  802748:	d8c02f17 	ldw	r3,188(sp)
  80274c:	28800017 	ldw	r2,0(r5)
  802750:	29400104 	addi	r5,r5,4
  802754:	d9402d15 	stw	r5,180(sp)
  802758:	10c00015 	stw	r3,0(r2)
  80275c:	00398606 	br	800d78 <__alt_data_end+0xff800d78>
  802760:	d9402d17 	ldw	r5,180(sp)
  802764:	002d883a 	mov	r22,zero
  802768:	2cc00017 	ldw	r19,0(r5)
  80276c:	29400104 	addi	r5,r5,4
  802770:	d9402d15 	stw	r5,180(sp)
  802774:	003c2306 	br	801804 <__alt_data_end+0xff801804>
  802778:	d8c02d17 	ldw	r3,180(sp)
  80277c:	d9002917 	ldw	r4,164(sp)
  802780:	002d883a 	mov	r22,zero
  802784:	18800104 	addi	r2,r3,4
  802788:	1cc0000b 	ldhu	r19,0(r3)
  80278c:	203dc10e 	bge	r4,zero,801e94 <__alt_data_end+0xff801e94>
  802790:	003f7506 	br	802568 <__alt_data_end+0xff802568>
  802794:	04002074 	movhi	r16,129
  802798:	843f8604 	addi	r16,r16,-488
  80279c:	003acc06 	br	8012d0 <__alt_data_end+0xff8012d0>
  8027a0:	d9002c17 	ldw	r4,176(sp)
  8027a4:	d9801e04 	addi	r6,sp,120
  8027a8:	b80b883a 	mov	r5,r23
  8027ac:	08082940 	call	808294 <__sprint_r>
  8027b0:	103a3b1e 	bne	r2,zero,8010a0 <__alt_data_end+0xff8010a0>
  8027b4:	dc402617 	ldw	r17,152(sp)
  8027b8:	d8c02017 	ldw	r3,128(sp)
  8027bc:	da000404 	addi	r8,sp,16
  8027c0:	003f9c06 	br	802634 <__alt_data_end+0xff802634>
  8027c4:	ac400043 	ldbu	r17,1(r21)
  8027c8:	94800814 	ori	r18,r18,32
  8027cc:	ad400044 	addi	r21,r21,1
  8027d0:	8c403fcc 	andi	r17,r17,255
  8027d4:	8c40201c 	xori	r17,r17,128
  8027d8:	8c7fe004 	addi	r17,r17,-128
  8027dc:	00398f06 	br	800e1c <__alt_data_end+0xff800e1c>
  8027e0:	d8c02d15 	stw	r3,180(sp)
  8027e4:	0039883a 	mov	fp,zero
  8027e8:	003e3506 	br	8020c0 <__alt_data_end+0xff8020c0>
  8027ec:	d9002c17 	ldw	r4,176(sp)
  8027f0:	d9801e04 	addi	r6,sp,120
  8027f4:	b80b883a 	mov	r5,r23
  8027f8:	08082940 	call	808294 <__sprint_r>
  8027fc:	103a281e 	bne	r2,zero,8010a0 <__alt_data_end+0xff8010a0>
  802800:	d8c02017 	ldw	r3,128(sp)
  802804:	da000404 	addi	r8,sp,16
  802808:	003cd006 	br	801b4c <__alt_data_end+0xff801b4c>
  80280c:	8009883a 	mov	r4,r16
  802810:	da003d15 	stw	r8,244(sp)
  802814:	0800c000 	call	800c00 <strlen>
  802818:	d8802e15 	stw	r2,184(sp)
  80281c:	da003d17 	ldw	r8,244(sp)
  802820:	103c340e 	bge	r2,zero,8018f4 <__alt_data_end+0xff8018f4>
  802824:	0005883a 	mov	r2,zero
  802828:	003c3206 	br	8018f4 <__alt_data_end+0xff8018f4>
  80282c:	d9002c17 	ldw	r4,176(sp)
  802830:	d9801e04 	addi	r6,sp,120
  802834:	b80b883a 	mov	r5,r23
  802838:	08082940 	call	808294 <__sprint_r>
  80283c:	103a181e 	bne	r2,zero,8010a0 <__alt_data_end+0xff8010a0>
  802840:	d8c02017 	ldw	r3,128(sp)
  802844:	d8801f17 	ldw	r2,124(sp)
  802848:	da000404 	addi	r8,sp,16
  80284c:	d9403317 	ldw	r5,204(sp)
  802850:	10800044 	addi	r2,r2,1
  802854:	44000015 	stw	r16,0(r8)
  802858:	28c7883a 	add	r3,r5,r3
  80285c:	003b7d06 	br	801654 <__alt_data_end+0xff801654>
  802860:	01002074 	movhi	r4,129
  802864:	213f9a84 	addi	r4,r4,-406
  802868:	d9003515 	stw	r4,212(sp)
  80286c:	003b1406 	br	8014c0 <__alt_data_end+0xff8014c0>
  802870:	013fffc4 	movi	r4,-1
  802874:	003a3506 	br	80114c <__alt_data_end+0xff80114c>
  802878:	0023883a 	mov	r17,zero
  80287c:	003d9d06 	br	801ef4 <__alt_data_end+0xff801ef4>
  802880:	d9002c17 	ldw	r4,176(sp)
  802884:	d9801e04 	addi	r6,sp,120
  802888:	b80b883a 	mov	r5,r23
  80288c:	08082940 	call	808294 <__sprint_r>
  802890:	103a031e 	bne	r2,zero,8010a0 <__alt_data_end+0xff8010a0>
  802894:	d8c02017 	ldw	r3,128(sp)
  802898:	da000404 	addi	r8,sp,16
  80289c:	003d9406 	br	801ef0 <__alt_data_end+0xff801ef0>
  8028a0:	01002074 	movhi	r4,129
  8028a4:	213f9684 	addi	r4,r4,-422
  8028a8:	d9002b15 	stw	r4,172(sp)
  8028ac:	d9002b17 	ldw	r4,172(sp)
  8028b0:	1c47883a 	add	r3,r3,r17
  8028b4:	10800044 	addi	r2,r2,1
  8028b8:	41000015 	stw	r4,0(r8)
  8028bc:	44400115 	stw	r17,4(r8)
  8028c0:	d8c02015 	stw	r3,128(sp)
  8028c4:	d8801f15 	stw	r2,124(sp)
  8028c8:	010001c4 	movi	r4,7
  8028cc:	20bfd716 	blt	r4,r2,80282c <__alt_data_end+0xff80282c>
  8028d0:	42000204 	addi	r8,r8,8
  8028d4:	003fdd06 	br	80284c <__alt_data_end+0xff80284c>
  8028d8:	d9002c17 	ldw	r4,176(sp)
  8028dc:	d9801e04 	addi	r6,sp,120
  8028e0:	b80b883a 	mov	r5,r23
  8028e4:	08082940 	call	808294 <__sprint_r>
  8028e8:	1039ed1e 	bne	r2,zero,8010a0 <__alt_data_end+0xff8010a0>
  8028ec:	d8802617 	ldw	r2,152(sp)
  8028f0:	d8c02017 	ldw	r3,128(sp)
  8028f4:	da000404 	addi	r8,sp,16
  8028f8:	003e1006 	br	80213c <__alt_data_end+0xff80213c>
  8028fc:	00800044 	movi	r2,1
  802900:	10803fcc 	andi	r2,r2,255
  802904:	00c00044 	movi	r3,1
  802908:	10fa3526 	beq	r2,r3,8011e0 <__alt_data_end+0xff8011e0>
  80290c:	00c00084 	movi	r3,2
  802910:	10fbcb26 	beq	r2,r3,801840 <__alt_data_end+0xff801840>
  802914:	003a8f06 	br	801354 <__alt_data_end+0xff801354>
  802918:	01002074 	movhi	r4,129
  80291c:	213f9a84 	addi	r4,r4,-406
  802920:	d9003515 	stw	r4,212(sp)
  802924:	003b7606 	br	801700 <__alt_data_end+0xff801700>
  802928:	d8802917 	ldw	r2,164(sp)
  80292c:	00c00184 	movi	r3,6
  802930:	1880012e 	bgeu	r3,r2,802938 <___vfprintf_internal_r+0x1ca0>
  802934:	1805883a 	mov	r2,r3
  802938:	d8802e15 	stw	r2,184(sp)
  80293c:	1000ef16 	blt	r2,zero,802cfc <___vfprintf_internal_r+0x2064>
  802940:	04002074 	movhi	r16,129
  802944:	d8802a15 	stw	r2,168(sp)
  802948:	dcc02d15 	stw	r19,180(sp)
  80294c:	d8002915 	stw	zero,164(sp)
  802950:	d8003215 	stw	zero,200(sp)
  802954:	843f9404 	addi	r16,r16,-432
  802958:	0039883a 	mov	fp,zero
  80295c:	003aa206 	br	8013e8 <__alt_data_end+0xff8013e8>
  802960:	0021883a 	mov	r16,zero
  802964:	003e0706 	br	802184 <__alt_data_end+0xff802184>
  802968:	d9002c17 	ldw	r4,176(sp)
  80296c:	d9801e04 	addi	r6,sp,120
  802970:	b80b883a 	mov	r5,r23
  802974:	08082940 	call	808294 <__sprint_r>
  802978:	1039c91e 	bne	r2,zero,8010a0 <__alt_data_end+0xff8010a0>
  80297c:	d8802617 	ldw	r2,152(sp)
  802980:	d9403317 	ldw	r5,204(sp)
  802984:	d8c02017 	ldw	r3,128(sp)
  802988:	da000404 	addi	r8,sp,16
  80298c:	2885c83a 	sub	r2,r5,r2
  802990:	003dfb06 	br	802180 <__alt_data_end+0xff802180>
  802994:	9080004c 	andi	r2,r18,1
  802998:	103e8f1e 	bne	r2,zero,8023d8 <__alt_data_end+0xff8023d8>
  80299c:	d8802117 	ldw	r2,132(sp)
  8029a0:	003e9e06 	br	80241c <__alt_data_end+0xff80241c>
  8029a4:	1025883a 	mov	r18,r2
  8029a8:	0039883a 	mov	fp,zero
  8029ac:	00800084 	movi	r2,2
  8029b0:	003fd306 	br	802900 <__alt_data_end+0xff802900>
  8029b4:	07000b44 	movi	fp,45
  8029b8:	df002785 	stb	fp,158(sp)
  8029bc:	003a4006 	br	8012c0 <__alt_data_end+0xff8012c0>
  8029c0:	00c00b44 	movi	r3,45
  8029c4:	d8c02785 	stb	r3,158(sp)
  8029c8:	d8802a15 	stw	r2,168(sp)
  8029cc:	dc802b17 	ldw	r18,172(sp)
  8029d0:	d8002915 	stw	zero,164(sp)
  8029d4:	07000b44 	movi	fp,45
  8029d8:	003a8006 	br	8013dc <__alt_data_end+0xff8013dc>
  8029dc:	04002074 	movhi	r16,129
  8029e0:	843f8904 	addi	r16,r16,-476
  8029e4:	003f4706 	br	802704 <__alt_data_end+0xff802704>
  8029e8:	d8c02d17 	ldw	r3,180(sp)
  8029ec:	d9002f17 	ldw	r4,188(sp)
  8029f0:	18800017 	ldw	r2,0(r3)
  8029f4:	18c00104 	addi	r3,r3,4
  8029f8:	d8c02d15 	stw	r3,180(sp)
  8029fc:	11000015 	stw	r4,0(r2)
  802a00:	0038dd06 	br	800d78 <__alt_data_end+0xff800d78>
  802a04:	dd802617 	ldw	r22,152(sp)
  802a08:	00bfff44 	movi	r2,-3
  802a0c:	b0801c16 	blt	r22,r2,802a80 <___vfprintf_internal_r+0x1de8>
  802a10:	d9402917 	ldw	r5,164(sp)
  802a14:	2d801a16 	blt	r5,r22,802a80 <___vfprintf_internal_r+0x1de8>
  802a18:	dd803215 	stw	r22,200(sp)
  802a1c:	003e8906 	br	802444 <__alt_data_end+0xff802444>
  802a20:	01002074 	movhi	r4,129
  802a24:	213f9684 	addi	r4,r4,-422
  802a28:	d9002b15 	stw	r4,172(sp)
  802a2c:	003c9106 	br	801c74 <__alt_data_end+0xff801c74>
  802a30:	e005883a 	mov	r2,fp
  802a34:	003e7906 	br	80241c <__alt_data_end+0xff80241c>
  802a38:	d9402917 	ldw	r5,164(sp)
  802a3c:	df002783 	ldbu	fp,158(sp)
  802a40:	dcc02d15 	stw	r19,180(sp)
  802a44:	d9402a15 	stw	r5,168(sp)
  802a48:	d9402e15 	stw	r5,184(sp)
  802a4c:	d8002915 	stw	zero,164(sp)
  802a50:	d8003215 	stw	zero,200(sp)
  802a54:	003a5d06 	br	8013cc <__alt_data_end+0xff8013cc>
  802a58:	9080004c 	andi	r2,r18,1
  802a5c:	0039883a 	mov	fp,zero
  802a60:	10000426 	beq	r2,zero,802a74 <___vfprintf_internal_r+0x1ddc>
  802a64:	00800c04 	movi	r2,48
  802a68:	dc001dc4 	addi	r16,sp,119
  802a6c:	d8801dc5 	stb	r2,119(sp)
  802a70:	003b8006 	br	801874 <__alt_data_end+0xff801874>
  802a74:	d8002e15 	stw	zero,184(sp)
  802a78:	dc001e04 	addi	r16,sp,120
  802a7c:	003a4d06 	br	8013b4 <__alt_data_end+0xff8013b4>
  802a80:	8c7fff84 	addi	r17,r17,-2
  802a84:	b5bfffc4 	addi	r22,r22,-1
  802a88:	dd802615 	stw	r22,152(sp)
  802a8c:	dc4022c5 	stb	r17,139(sp)
  802a90:	b000bf16 	blt	r22,zero,802d90 <___vfprintf_internal_r+0x20f8>
  802a94:	00800ac4 	movi	r2,43
  802a98:	d8802305 	stb	r2,140(sp)
  802a9c:	00800244 	movi	r2,9
  802aa0:	15807016 	blt	r2,r22,802c64 <___vfprintf_internal_r+0x1fcc>
  802aa4:	00800c04 	movi	r2,48
  802aa8:	b5800c04 	addi	r22,r22,48
  802aac:	d8802345 	stb	r2,141(sp)
  802ab0:	dd802385 	stb	r22,142(sp)
  802ab4:	d88023c4 	addi	r2,sp,143
  802ab8:	df0022c4 	addi	fp,sp,139
  802abc:	d8c03317 	ldw	r3,204(sp)
  802ac0:	1739c83a 	sub	fp,r2,fp
  802ac4:	d9003317 	ldw	r4,204(sp)
  802ac8:	e0c7883a 	add	r3,fp,r3
  802acc:	df003a15 	stw	fp,232(sp)
  802ad0:	d8c02e15 	stw	r3,184(sp)
  802ad4:	00800044 	movi	r2,1
  802ad8:	1100b30e 	bge	r2,r4,802da8 <___vfprintf_internal_r+0x2110>
  802adc:	d8c02e17 	ldw	r3,184(sp)
  802ae0:	18c00044 	addi	r3,r3,1
  802ae4:	d8c02e15 	stw	r3,184(sp)
  802ae8:	1805883a 	mov	r2,r3
  802aec:	1800ac16 	blt	r3,zero,802da0 <___vfprintf_internal_r+0x2108>
  802af0:	d8003215 	stw	zero,200(sp)
  802af4:	003e5d06 	br	80246c <__alt_data_end+0xff80246c>
  802af8:	d9002c17 	ldw	r4,176(sp)
  802afc:	d9801e04 	addi	r6,sp,120
  802b00:	b80b883a 	mov	r5,r23
  802b04:	08082940 	call	808294 <__sprint_r>
  802b08:	1039651e 	bne	r2,zero,8010a0 <__alt_data_end+0xff8010a0>
  802b0c:	dc402617 	ldw	r17,152(sp)
  802b10:	d8c02017 	ldw	r3,128(sp)
  802b14:	d8801f17 	ldw	r2,124(sp)
  802b18:	da000404 	addi	r8,sp,16
  802b1c:	003ed606 	br	802678 <__alt_data_end+0xff802678>
  802b20:	582b883a 	mov	r21,r11
  802b24:	d8002915 	stw	zero,164(sp)
  802b28:	0038bd06 	br	800e20 <__alt_data_end+0xff800e20>
  802b2c:	d8802917 	ldw	r2,164(sp)
  802b30:	103e071e 	bne	r2,zero,802350 <__alt_data_end+0xff802350>
  802b34:	dc002915 	stw	r16,164(sp)
  802b38:	003e0506 	br	802350 <__alt_data_end+0xff802350>
  802b3c:	d9002917 	ldw	r4,164(sp)
  802b40:	20c00044 	addi	r3,r4,1
  802b44:	003e0f06 	br	802384 <__alt_data_end+0xff802384>
  802b48:	01400184 	movi	r5,6
  802b4c:	d9402915 	stw	r5,164(sp)
  802b50:	003dff06 	br	802350 <__alt_data_end+0xff802350>
  802b54:	d8802104 	addi	r2,sp,132
  802b58:	d8800315 	stw	r2,12(sp)
  802b5c:	d8802504 	addi	r2,sp,148
  802b60:	d8800215 	stw	r2,8(sp)
  802b64:	d8802604 	addi	r2,sp,152
  802b68:	d8800115 	stw	r2,4(sp)
  802b6c:	d8802917 	ldw	r2,164(sp)
  802b70:	d9403617 	ldw	r5,216(sp)
  802b74:	d9002c17 	ldw	r4,176(sp)
  802b78:	d8800015 	stw	r2,0(sp)
  802b7c:	01c000c4 	movi	r7,3
  802b80:	980d883a 	mov	r6,r19
  802b84:	da003d15 	stw	r8,244(sp)
  802b88:	08032bc0 	call	8032bc <_dtoa_r>
  802b8c:	d8c02917 	ldw	r3,164(sp)
  802b90:	da003d17 	ldw	r8,244(sp)
  802b94:	1021883a 	mov	r16,r2
  802b98:	10f9883a 	add	fp,r2,r3
  802b9c:	81000007 	ldb	r4,0(r16)
  802ba0:	00800c04 	movi	r2,48
  802ba4:	20805e26 	beq	r4,r2,802d20 <___vfprintf_internal_r+0x2088>
  802ba8:	d8c02617 	ldw	r3,152(sp)
  802bac:	e0f9883a 	add	fp,fp,r3
  802bb0:	003e0a06 	br	8023dc <__alt_data_end+0xff8023dc>
  802bb4:	00c00b44 	movi	r3,45
  802bb8:	24e0003c 	xorhi	r19,r4,32768
  802bbc:	d8c02a05 	stb	r3,168(sp)
  802bc0:	003de906 	br	802368 <__alt_data_end+0xff802368>
  802bc4:	d8c03217 	ldw	r3,200(sp)
  802bc8:	00c07a0e 	bge	zero,r3,802db4 <___vfprintf_internal_r+0x211c>
  802bcc:	00800044 	movi	r2,1
  802bd0:	d9003317 	ldw	r4,204(sp)
  802bd4:	1105883a 	add	r2,r2,r4
  802bd8:	d8802e15 	stw	r2,184(sp)
  802bdc:	10004e16 	blt	r2,zero,802d18 <___vfprintf_internal_r+0x2080>
  802be0:	044019c4 	movi	r17,103
  802be4:	003e2106 	br	80246c <__alt_data_end+0xff80246c>
  802be8:	d9002917 	ldw	r4,164(sp)
  802bec:	d8802104 	addi	r2,sp,132
  802bf0:	d8800315 	stw	r2,12(sp)
  802bf4:	d9000015 	stw	r4,0(sp)
  802bf8:	d8802504 	addi	r2,sp,148
  802bfc:	d9403617 	ldw	r5,216(sp)
  802c00:	d9002c17 	ldw	r4,176(sp)
  802c04:	d8800215 	stw	r2,8(sp)
  802c08:	d8802604 	addi	r2,sp,152
  802c0c:	d8800115 	stw	r2,4(sp)
  802c10:	01c000c4 	movi	r7,3
  802c14:	980d883a 	mov	r6,r19
  802c18:	da003d15 	stw	r8,244(sp)
  802c1c:	08032bc0 	call	8032bc <_dtoa_r>
  802c20:	d8c02917 	ldw	r3,164(sp)
  802c24:	da003d17 	ldw	r8,244(sp)
  802c28:	1021883a 	mov	r16,r2
  802c2c:	00801184 	movi	r2,70
  802c30:	80f9883a 	add	fp,r16,r3
  802c34:	88bfd926 	beq	r17,r2,802b9c <__alt_data_end+0xff802b9c>
  802c38:	003de806 	br	8023dc <__alt_data_end+0xff8023dc>
  802c3c:	d9002917 	ldw	r4,164(sp)
  802c40:	00c04d0e 	bge	zero,r3,802d78 <___vfprintf_internal_r+0x20e0>
  802c44:	2000441e 	bne	r4,zero,802d58 <___vfprintf_internal_r+0x20c0>
  802c48:	9480004c 	andi	r18,r18,1
  802c4c:	9000421e 	bne	r18,zero,802d58 <___vfprintf_internal_r+0x20c0>
  802c50:	1805883a 	mov	r2,r3
  802c54:	18007016 	blt	r3,zero,802e18 <___vfprintf_internal_r+0x2180>
  802c58:	d8c03217 	ldw	r3,200(sp)
  802c5c:	d8c02e15 	stw	r3,184(sp)
  802c60:	003e0206 	br	80246c <__alt_data_end+0xff80246c>
  802c64:	df0022c4 	addi	fp,sp,139
  802c68:	dc002915 	stw	r16,164(sp)
  802c6c:	4027883a 	mov	r19,r8
  802c70:	e021883a 	mov	r16,fp
  802c74:	b009883a 	mov	r4,r22
  802c78:	01400284 	movi	r5,10
  802c7c:	080ac480 	call	80ac48 <__modsi3>
  802c80:	10800c04 	addi	r2,r2,48
  802c84:	843fffc4 	addi	r16,r16,-1
  802c88:	b009883a 	mov	r4,r22
  802c8c:	01400284 	movi	r5,10
  802c90:	80800005 	stb	r2,0(r16)
  802c94:	080abc40 	call	80abc4 <__divsi3>
  802c98:	102d883a 	mov	r22,r2
  802c9c:	00800244 	movi	r2,9
  802ca0:	15bff416 	blt	r2,r22,802c74 <__alt_data_end+0xff802c74>
  802ca4:	9811883a 	mov	r8,r19
  802ca8:	b0800c04 	addi	r2,r22,48
  802cac:	8027883a 	mov	r19,r16
  802cb0:	997fffc4 	addi	r5,r19,-1
  802cb4:	98bfffc5 	stb	r2,-1(r19)
  802cb8:	dc002917 	ldw	r16,164(sp)
  802cbc:	2f006a2e 	bgeu	r5,fp,802e68 <___vfprintf_internal_r+0x21d0>
  802cc0:	d9c02384 	addi	r7,sp,142
  802cc4:	3ccfc83a 	sub	r7,r7,r19
  802cc8:	d9002344 	addi	r4,sp,141
  802ccc:	e1cf883a 	add	r7,fp,r7
  802cd0:	00000106 	br	802cd8 <___vfprintf_internal_r+0x2040>
  802cd4:	28800003 	ldbu	r2,0(r5)
  802cd8:	20800005 	stb	r2,0(r4)
  802cdc:	21000044 	addi	r4,r4,1
  802ce0:	29400044 	addi	r5,r5,1
  802ce4:	393ffb1e 	bne	r7,r4,802cd4 <__alt_data_end+0xff802cd4>
  802ce8:	d8802304 	addi	r2,sp,140
  802cec:	14c5c83a 	sub	r2,r2,r19
  802cf0:	d8c02344 	addi	r3,sp,141
  802cf4:	1885883a 	add	r2,r3,r2
  802cf8:	003f7006 	br	802abc <__alt_data_end+0xff802abc>
  802cfc:	0005883a 	mov	r2,zero
  802d00:	003f0f06 	br	802940 <__alt_data_end+0xff802940>
  802d04:	d8c03217 	ldw	r3,200(sp)
  802d08:	18c00044 	addi	r3,r3,1
  802d0c:	d8c02e15 	stw	r3,184(sp)
  802d10:	1805883a 	mov	r2,r3
  802d14:	183fb20e 	bge	r3,zero,802be0 <__alt_data_end+0xff802be0>
  802d18:	0005883a 	mov	r2,zero
  802d1c:	003fb006 	br	802be0 <__alt_data_end+0xff802be0>
  802d20:	d9003617 	ldw	r4,216(sp)
  802d24:	000d883a 	mov	r6,zero
  802d28:	000f883a 	mov	r7,zero
  802d2c:	980b883a 	mov	r5,r19
  802d30:	d8c03c15 	stw	r3,240(sp)
  802d34:	da003d15 	stw	r8,244(sp)
  802d38:	080bf0c0 	call	80bf0c <__eqdf2>
  802d3c:	d8c03c17 	ldw	r3,240(sp)
  802d40:	da003d17 	ldw	r8,244(sp)
  802d44:	103f9826 	beq	r2,zero,802ba8 <__alt_data_end+0xff802ba8>
  802d48:	00800044 	movi	r2,1
  802d4c:	10c7c83a 	sub	r3,r2,r3
  802d50:	d8c02615 	stw	r3,152(sp)
  802d54:	003f9506 	br	802bac <__alt_data_end+0xff802bac>
  802d58:	d9002917 	ldw	r4,164(sp)
  802d5c:	d8c03217 	ldw	r3,200(sp)
  802d60:	20800044 	addi	r2,r4,1
  802d64:	1885883a 	add	r2,r3,r2
  802d68:	d8802e15 	stw	r2,184(sp)
  802d6c:	103dbf0e 	bge	r2,zero,80246c <__alt_data_end+0xff80246c>
  802d70:	0005883a 	mov	r2,zero
  802d74:	003dbd06 	br	80246c <__alt_data_end+0xff80246c>
  802d78:	2000211e 	bne	r4,zero,802e00 <___vfprintf_internal_r+0x2168>
  802d7c:	9480004c 	andi	r18,r18,1
  802d80:	90001f1e 	bne	r18,zero,802e00 <___vfprintf_internal_r+0x2168>
  802d84:	00800044 	movi	r2,1
  802d88:	d8802e15 	stw	r2,184(sp)
  802d8c:	003db706 	br	80246c <__alt_data_end+0xff80246c>
  802d90:	00800b44 	movi	r2,45
  802d94:	05adc83a 	sub	r22,zero,r22
  802d98:	d8802305 	stb	r2,140(sp)
  802d9c:	003f3f06 	br	802a9c <__alt_data_end+0xff802a9c>
  802da0:	0005883a 	mov	r2,zero
  802da4:	003f5206 	br	802af0 <__alt_data_end+0xff802af0>
  802da8:	90a4703a 	and	r18,r18,r2
  802dac:	903f4e26 	beq	r18,zero,802ae8 <__alt_data_end+0xff802ae8>
  802db0:	003f4a06 	br	802adc <__alt_data_end+0xff802adc>
  802db4:	00800084 	movi	r2,2
  802db8:	10c5c83a 	sub	r2,r2,r3
  802dbc:	003f8406 	br	802bd0 <__alt_data_end+0xff802bd0>
  802dc0:	d8802d17 	ldw	r2,180(sp)
  802dc4:	d9002d17 	ldw	r4,180(sp)
  802dc8:	ac400043 	ldbu	r17,1(r21)
  802dcc:	10800017 	ldw	r2,0(r2)
  802dd0:	582b883a 	mov	r21,r11
  802dd4:	d8802915 	stw	r2,164(sp)
  802dd8:	20800104 	addi	r2,r4,4
  802ddc:	d9002917 	ldw	r4,164(sp)
  802de0:	d8802d15 	stw	r2,180(sp)
  802de4:	203e7a0e 	bge	r4,zero,8027d0 <__alt_data_end+0xff8027d0>
  802de8:	8c403fcc 	andi	r17,r17,255
  802dec:	00bfffc4 	movi	r2,-1
  802df0:	8c40201c 	xori	r17,r17,128
  802df4:	d8802915 	stw	r2,164(sp)
  802df8:	8c7fe004 	addi	r17,r17,-128
  802dfc:	00380706 	br	800e1c <__alt_data_end+0xff800e1c>
  802e00:	d8c02917 	ldw	r3,164(sp)
  802e04:	18c00084 	addi	r3,r3,2
  802e08:	d8c02e15 	stw	r3,184(sp)
  802e0c:	1805883a 	mov	r2,r3
  802e10:	183d960e 	bge	r3,zero,80246c <__alt_data_end+0xff80246c>
  802e14:	003fd606 	br	802d70 <__alt_data_end+0xff802d70>
  802e18:	0005883a 	mov	r2,zero
  802e1c:	003f8e06 	br	802c58 <__alt_data_end+0xff802c58>
  802e20:	9080004c 	andi	r2,r18,1
  802e24:	103f811e 	bne	r2,zero,802c2c <__alt_data_end+0xff802c2c>
  802e28:	d8802117 	ldw	r2,132(sp)
  802e2c:	1405c83a 	sub	r2,r2,r16
  802e30:	d8803315 	stw	r2,204(sp)
  802e34:	b47ef326 	beq	r22,r17,802a04 <__alt_data_end+0xff802a04>
  802e38:	dd802617 	ldw	r22,152(sp)
  802e3c:	003f1106 	br	802a84 <__alt_data_end+0xff802a84>
  802e40:	d9c02785 	stb	r7,158(sp)
  802e44:	00390406 	br	801258 <__alt_data_end+0xff801258>
  802e48:	d9c02785 	stb	r7,158(sp)
  802e4c:	0038d306 	br	80119c <__alt_data_end+0xff80119c>
  802e50:	d9c02785 	stb	r7,158(sp)
  802e54:	003a6106 	br	8017dc <__alt_data_end+0xff8017dc>
  802e58:	d9c02785 	stb	r7,158(sp)
  802e5c:	003af806 	br	801a40 <__alt_data_end+0xff801a40>
  802e60:	0005883a 	mov	r2,zero
  802e64:	003d7e06 	br	802460 <__alt_data_end+0xff802460>
  802e68:	d8802344 	addi	r2,sp,141
  802e6c:	003f1306 	br	802abc <__alt_data_end+0xff802abc>
  802e70:	d9c02785 	stb	r7,158(sp)
  802e74:	00392306 	br	801304 <__alt_data_end+0xff801304>
  802e78:	d9c02785 	stb	r7,158(sp)
  802e7c:	003aa906 	br	801924 <__alt_data_end+0xff801924>
  802e80:	d9c02785 	stb	r7,158(sp)
  802e84:	003a3d06 	br	80177c <__alt_data_end+0xff80177c>
  802e88:	d9c02785 	stb	r7,158(sp)
  802e8c:	003aca06 	br	8019b8 <__alt_data_end+0xff8019b8>

00802e90 <__vfprintf_internal>:
  802e90:	00802074 	movhi	r2,129
  802e94:	1086af04 	addi	r2,r2,6844
  802e98:	300f883a 	mov	r7,r6
  802e9c:	280d883a 	mov	r6,r5
  802ea0:	200b883a 	mov	r5,r4
  802ea4:	11000017 	ldw	r4,0(r2)
  802ea8:	0800c981 	jmpi	800c98 <___vfprintf_internal_r>

00802eac <__sbprintf>:
  802eac:	2880030b 	ldhu	r2,12(r5)
  802eb0:	2ac01917 	ldw	r11,100(r5)
  802eb4:	2a80038b 	ldhu	r10,14(r5)
  802eb8:	2a400717 	ldw	r9,28(r5)
  802ebc:	2a000917 	ldw	r8,36(r5)
  802ec0:	defee204 	addi	sp,sp,-1144
  802ec4:	00c10004 	movi	r3,1024
  802ec8:	dc011a15 	stw	r16,1128(sp)
  802ecc:	10bfff4c 	andi	r2,r2,65533
  802ed0:	2821883a 	mov	r16,r5
  802ed4:	d8cb883a 	add	r5,sp,r3
  802ed8:	dc811c15 	stw	r18,1136(sp)
  802edc:	dc411b15 	stw	r17,1132(sp)
  802ee0:	dfc11d15 	stw	ra,1140(sp)
  802ee4:	2025883a 	mov	r18,r4
  802ee8:	d881030d 	sth	r2,1036(sp)
  802eec:	dac11915 	stw	r11,1124(sp)
  802ef0:	da81038d 	sth	r10,1038(sp)
  802ef4:	da410715 	stw	r9,1052(sp)
  802ef8:	da010915 	stw	r8,1060(sp)
  802efc:	dec10015 	stw	sp,1024(sp)
  802f00:	dec10415 	stw	sp,1040(sp)
  802f04:	d8c10215 	stw	r3,1032(sp)
  802f08:	d8c10515 	stw	r3,1044(sp)
  802f0c:	d8010615 	stw	zero,1048(sp)
  802f10:	0800c980 	call	800c98 <___vfprintf_internal_r>
  802f14:	1023883a 	mov	r17,r2
  802f18:	10000416 	blt	r2,zero,802f2c <__sbprintf+0x80>
  802f1c:	d9410004 	addi	r5,sp,1024
  802f20:	9009883a 	mov	r4,r18
  802f24:	0804b600 	call	804b60 <_fflush_r>
  802f28:	10000d1e 	bne	r2,zero,802f60 <__sbprintf+0xb4>
  802f2c:	d881030b 	ldhu	r2,1036(sp)
  802f30:	1080100c 	andi	r2,r2,64
  802f34:	10000326 	beq	r2,zero,802f44 <__sbprintf+0x98>
  802f38:	8080030b 	ldhu	r2,12(r16)
  802f3c:	10801014 	ori	r2,r2,64
  802f40:	8080030d 	sth	r2,12(r16)
  802f44:	8805883a 	mov	r2,r17
  802f48:	dfc11d17 	ldw	ra,1140(sp)
  802f4c:	dc811c17 	ldw	r18,1136(sp)
  802f50:	dc411b17 	ldw	r17,1132(sp)
  802f54:	dc011a17 	ldw	r16,1128(sp)
  802f58:	dec11e04 	addi	sp,sp,1144
  802f5c:	f800283a 	ret
  802f60:	047fffc4 	movi	r17,-1
  802f64:	003ff106 	br	802f2c <__alt_data_end+0xff802f2c>

00802f68 <__swsetup_r>:
  802f68:	00802074 	movhi	r2,129
  802f6c:	defffd04 	addi	sp,sp,-12
  802f70:	1086af04 	addi	r2,r2,6844
  802f74:	dc400115 	stw	r17,4(sp)
  802f78:	2023883a 	mov	r17,r4
  802f7c:	11000017 	ldw	r4,0(r2)
  802f80:	dc000015 	stw	r16,0(sp)
  802f84:	dfc00215 	stw	ra,8(sp)
  802f88:	2821883a 	mov	r16,r5
  802f8c:	20000226 	beq	r4,zero,802f98 <__swsetup_r+0x30>
  802f90:	20800e17 	ldw	r2,56(r4)
  802f94:	10003126 	beq	r2,zero,80305c <__swsetup_r+0xf4>
  802f98:	8080030b 	ldhu	r2,12(r16)
  802f9c:	10c0020c 	andi	r3,r2,8
  802fa0:	1009883a 	mov	r4,r2
  802fa4:	18000f26 	beq	r3,zero,802fe4 <__swsetup_r+0x7c>
  802fa8:	80c00417 	ldw	r3,16(r16)
  802fac:	18001526 	beq	r3,zero,803004 <__swsetup_r+0x9c>
  802fb0:	1100004c 	andi	r4,r2,1
  802fb4:	20001c1e 	bne	r4,zero,803028 <__swsetup_r+0xc0>
  802fb8:	1080008c 	andi	r2,r2,2
  802fbc:	1000291e 	bne	r2,zero,803064 <__swsetup_r+0xfc>
  802fc0:	80800517 	ldw	r2,20(r16)
  802fc4:	80800215 	stw	r2,8(r16)
  802fc8:	18001c26 	beq	r3,zero,80303c <__swsetup_r+0xd4>
  802fcc:	0005883a 	mov	r2,zero
  802fd0:	dfc00217 	ldw	ra,8(sp)
  802fd4:	dc400117 	ldw	r17,4(sp)
  802fd8:	dc000017 	ldw	r16,0(sp)
  802fdc:	dec00304 	addi	sp,sp,12
  802fe0:	f800283a 	ret
  802fe4:	2080040c 	andi	r2,r4,16
  802fe8:	10002e26 	beq	r2,zero,8030a4 <__swsetup_r+0x13c>
  802fec:	2080010c 	andi	r2,r4,4
  802ff0:	10001e1e 	bne	r2,zero,80306c <__swsetup_r+0x104>
  802ff4:	80c00417 	ldw	r3,16(r16)
  802ff8:	20800214 	ori	r2,r4,8
  802ffc:	8080030d 	sth	r2,12(r16)
  803000:	183feb1e 	bne	r3,zero,802fb0 <__alt_data_end+0xff802fb0>
  803004:	1100a00c 	andi	r4,r2,640
  803008:	01408004 	movi	r5,512
  80300c:	217fe826 	beq	r4,r5,802fb0 <__alt_data_end+0xff802fb0>
  803010:	800b883a 	mov	r5,r16
  803014:	8809883a 	mov	r4,r17
  803018:	0805ae00 	call	805ae0 <__smakebuf_r>
  80301c:	8080030b 	ldhu	r2,12(r16)
  803020:	80c00417 	ldw	r3,16(r16)
  803024:	003fe206 	br	802fb0 <__alt_data_end+0xff802fb0>
  803028:	80800517 	ldw	r2,20(r16)
  80302c:	80000215 	stw	zero,8(r16)
  803030:	0085c83a 	sub	r2,zero,r2
  803034:	80800615 	stw	r2,24(r16)
  803038:	183fe41e 	bne	r3,zero,802fcc <__alt_data_end+0xff802fcc>
  80303c:	80c0030b 	ldhu	r3,12(r16)
  803040:	0005883a 	mov	r2,zero
  803044:	1900200c 	andi	r4,r3,128
  803048:	203fe126 	beq	r4,zero,802fd0 <__alt_data_end+0xff802fd0>
  80304c:	18c01014 	ori	r3,r3,64
  803050:	80c0030d 	sth	r3,12(r16)
  803054:	00bfffc4 	movi	r2,-1
  803058:	003fdd06 	br	802fd0 <__alt_data_end+0xff802fd0>
  80305c:	0804f3c0 	call	804f3c <__sinit>
  803060:	003fcd06 	br	802f98 <__alt_data_end+0xff802f98>
  803064:	0005883a 	mov	r2,zero
  803068:	003fd606 	br	802fc4 <__alt_data_end+0xff802fc4>
  80306c:	81400c17 	ldw	r5,48(r16)
  803070:	28000626 	beq	r5,zero,80308c <__swsetup_r+0x124>
  803074:	80801004 	addi	r2,r16,64
  803078:	28800326 	beq	r5,r2,803088 <__swsetup_r+0x120>
  80307c:	8809883a 	mov	r4,r17
  803080:	08050b00 	call	8050b0 <_free_r>
  803084:	8100030b 	ldhu	r4,12(r16)
  803088:	80000c15 	stw	zero,48(r16)
  80308c:	80c00417 	ldw	r3,16(r16)
  803090:	00bff6c4 	movi	r2,-37
  803094:	1108703a 	and	r4,r2,r4
  803098:	80000115 	stw	zero,4(r16)
  80309c:	80c00015 	stw	r3,0(r16)
  8030a0:	003fd506 	br	802ff8 <__alt_data_end+0xff802ff8>
  8030a4:	00800244 	movi	r2,9
  8030a8:	88800015 	stw	r2,0(r17)
  8030ac:	20801014 	ori	r2,r4,64
  8030b0:	8080030d 	sth	r2,12(r16)
  8030b4:	00bfffc4 	movi	r2,-1
  8030b8:	003fc506 	br	802fd0 <__alt_data_end+0xff802fd0>

008030bc <quorem>:
  8030bc:	defff704 	addi	sp,sp,-36
  8030c0:	dc800215 	stw	r18,8(sp)
  8030c4:	20800417 	ldw	r2,16(r4)
  8030c8:	2c800417 	ldw	r18,16(r5)
  8030cc:	dfc00815 	stw	ra,32(sp)
  8030d0:	ddc00715 	stw	r23,28(sp)
  8030d4:	dd800615 	stw	r22,24(sp)
  8030d8:	dd400515 	stw	r21,20(sp)
  8030dc:	dd000415 	stw	r20,16(sp)
  8030e0:	dcc00315 	stw	r19,12(sp)
  8030e4:	dc400115 	stw	r17,4(sp)
  8030e8:	dc000015 	stw	r16,0(sp)
  8030ec:	14807116 	blt	r2,r18,8032b4 <quorem+0x1f8>
  8030f0:	94bfffc4 	addi	r18,r18,-1
  8030f4:	94ad883a 	add	r22,r18,r18
  8030f8:	b5ad883a 	add	r22,r22,r22
  8030fc:	2c400504 	addi	r17,r5,20
  803100:	8da9883a 	add	r20,r17,r22
  803104:	25400504 	addi	r21,r4,20
  803108:	282f883a 	mov	r23,r5
  80310c:	adad883a 	add	r22,r21,r22
  803110:	a1400017 	ldw	r5,0(r20)
  803114:	2021883a 	mov	r16,r4
  803118:	b1000017 	ldw	r4,0(r22)
  80311c:	29400044 	addi	r5,r5,1
  803120:	080acbc0 	call	80acbc <__udivsi3>
  803124:	1027883a 	mov	r19,r2
  803128:	10002c26 	beq	r2,zero,8031dc <quorem+0x120>
  80312c:	a813883a 	mov	r9,r21
  803130:	880b883a 	mov	r5,r17
  803134:	0009883a 	mov	r4,zero
  803138:	000d883a 	mov	r6,zero
  80313c:	2a000017 	ldw	r8,0(r5)
  803140:	49c00017 	ldw	r7,0(r9)
  803144:	29400104 	addi	r5,r5,4
  803148:	40bfffcc 	andi	r2,r8,65535
  80314c:	14c5383a 	mul	r2,r2,r19
  803150:	4010d43a 	srli	r8,r8,16
  803154:	38ffffcc 	andi	r3,r7,65535
  803158:	1105883a 	add	r2,r2,r4
  80315c:	1008d43a 	srli	r4,r2,16
  803160:	44d1383a 	mul	r8,r8,r19
  803164:	198d883a 	add	r6,r3,r6
  803168:	10ffffcc 	andi	r3,r2,65535
  80316c:	30c7c83a 	sub	r3,r6,r3
  803170:	380ed43a 	srli	r7,r7,16
  803174:	4105883a 	add	r2,r8,r4
  803178:	180dd43a 	srai	r6,r3,16
  80317c:	113fffcc 	andi	r4,r2,65535
  803180:	390fc83a 	sub	r7,r7,r4
  803184:	398d883a 	add	r6,r7,r6
  803188:	300e943a 	slli	r7,r6,16
  80318c:	18ffffcc 	andi	r3,r3,65535
  803190:	1008d43a 	srli	r4,r2,16
  803194:	38ceb03a 	or	r7,r7,r3
  803198:	49c00015 	stw	r7,0(r9)
  80319c:	300dd43a 	srai	r6,r6,16
  8031a0:	4a400104 	addi	r9,r9,4
  8031a4:	a17fe52e 	bgeu	r20,r5,80313c <__alt_data_end+0xff80313c>
  8031a8:	b0800017 	ldw	r2,0(r22)
  8031ac:	10000b1e 	bne	r2,zero,8031dc <quorem+0x120>
  8031b0:	b0bfff04 	addi	r2,r22,-4
  8031b4:	a880082e 	bgeu	r21,r2,8031d8 <quorem+0x11c>
  8031b8:	b0ffff17 	ldw	r3,-4(r22)
  8031bc:	18000326 	beq	r3,zero,8031cc <quorem+0x110>
  8031c0:	00000506 	br	8031d8 <quorem+0x11c>
  8031c4:	10c00017 	ldw	r3,0(r2)
  8031c8:	1800031e 	bne	r3,zero,8031d8 <quorem+0x11c>
  8031cc:	10bfff04 	addi	r2,r2,-4
  8031d0:	94bfffc4 	addi	r18,r18,-1
  8031d4:	a8bffb36 	bltu	r21,r2,8031c4 <__alt_data_end+0xff8031c4>
  8031d8:	84800415 	stw	r18,16(r16)
  8031dc:	b80b883a 	mov	r5,r23
  8031e0:	8009883a 	mov	r4,r16
  8031e4:	08072200 	call	807220 <__mcmp>
  8031e8:	10002616 	blt	r2,zero,803284 <quorem+0x1c8>
  8031ec:	9cc00044 	addi	r19,r19,1
  8031f0:	a805883a 	mov	r2,r21
  8031f4:	000b883a 	mov	r5,zero
  8031f8:	11000017 	ldw	r4,0(r2)
  8031fc:	89800017 	ldw	r6,0(r17)
  803200:	10800104 	addi	r2,r2,4
  803204:	20ffffcc 	andi	r3,r4,65535
  803208:	194b883a 	add	r5,r3,r5
  80320c:	30ffffcc 	andi	r3,r6,65535
  803210:	28c7c83a 	sub	r3,r5,r3
  803214:	300cd43a 	srli	r6,r6,16
  803218:	2008d43a 	srli	r4,r4,16
  80321c:	180bd43a 	srai	r5,r3,16
  803220:	18ffffcc 	andi	r3,r3,65535
  803224:	2189c83a 	sub	r4,r4,r6
  803228:	2149883a 	add	r4,r4,r5
  80322c:	200c943a 	slli	r6,r4,16
  803230:	8c400104 	addi	r17,r17,4
  803234:	200bd43a 	srai	r5,r4,16
  803238:	30c6b03a 	or	r3,r6,r3
  80323c:	10ffff15 	stw	r3,-4(r2)
  803240:	a47fed2e 	bgeu	r20,r17,8031f8 <__alt_data_end+0xff8031f8>
  803244:	9485883a 	add	r2,r18,r18
  803248:	1085883a 	add	r2,r2,r2
  80324c:	a887883a 	add	r3,r21,r2
  803250:	18800017 	ldw	r2,0(r3)
  803254:	10000b1e 	bne	r2,zero,803284 <quorem+0x1c8>
  803258:	18bfff04 	addi	r2,r3,-4
  80325c:	a880082e 	bgeu	r21,r2,803280 <quorem+0x1c4>
  803260:	18ffff17 	ldw	r3,-4(r3)
  803264:	18000326 	beq	r3,zero,803274 <quorem+0x1b8>
  803268:	00000506 	br	803280 <quorem+0x1c4>
  80326c:	10c00017 	ldw	r3,0(r2)
  803270:	1800031e 	bne	r3,zero,803280 <quorem+0x1c4>
  803274:	10bfff04 	addi	r2,r2,-4
  803278:	94bfffc4 	addi	r18,r18,-1
  80327c:	a8bffb36 	bltu	r21,r2,80326c <__alt_data_end+0xff80326c>
  803280:	84800415 	stw	r18,16(r16)
  803284:	9805883a 	mov	r2,r19
  803288:	dfc00817 	ldw	ra,32(sp)
  80328c:	ddc00717 	ldw	r23,28(sp)
  803290:	dd800617 	ldw	r22,24(sp)
  803294:	dd400517 	ldw	r21,20(sp)
  803298:	dd000417 	ldw	r20,16(sp)
  80329c:	dcc00317 	ldw	r19,12(sp)
  8032a0:	dc800217 	ldw	r18,8(sp)
  8032a4:	dc400117 	ldw	r17,4(sp)
  8032a8:	dc000017 	ldw	r16,0(sp)
  8032ac:	dec00904 	addi	sp,sp,36
  8032b0:	f800283a 	ret
  8032b4:	0005883a 	mov	r2,zero
  8032b8:	003ff306 	br	803288 <__alt_data_end+0xff803288>

008032bc <_dtoa_r>:
  8032bc:	20801017 	ldw	r2,64(r4)
  8032c0:	deffde04 	addi	sp,sp,-136
  8032c4:	df002015 	stw	fp,128(sp)
  8032c8:	dcc01b15 	stw	r19,108(sp)
  8032cc:	dc801a15 	stw	r18,104(sp)
  8032d0:	dc401915 	stw	r17,100(sp)
  8032d4:	dc001815 	stw	r16,96(sp)
  8032d8:	dfc02115 	stw	ra,132(sp)
  8032dc:	ddc01f15 	stw	r23,124(sp)
  8032e0:	dd801e15 	stw	r22,120(sp)
  8032e4:	dd401d15 	stw	r21,116(sp)
  8032e8:	dd001c15 	stw	r20,112(sp)
  8032ec:	d9c00315 	stw	r7,12(sp)
  8032f0:	2039883a 	mov	fp,r4
  8032f4:	3023883a 	mov	r17,r6
  8032f8:	2825883a 	mov	r18,r5
  8032fc:	dc002417 	ldw	r16,144(sp)
  803300:	3027883a 	mov	r19,r6
  803304:	10000826 	beq	r2,zero,803328 <_dtoa_r+0x6c>
  803308:	21801117 	ldw	r6,68(r4)
  80330c:	00c00044 	movi	r3,1
  803310:	100b883a 	mov	r5,r2
  803314:	1986983a 	sll	r3,r3,r6
  803318:	11800115 	stw	r6,4(r2)
  80331c:	10c00215 	stw	r3,8(r2)
  803320:	0806a000 	call	806a00 <_Bfree>
  803324:	e0001015 	stw	zero,64(fp)
  803328:	88002e16 	blt	r17,zero,8033e4 <_dtoa_r+0x128>
  80332c:	80000015 	stw	zero,0(r16)
  803330:	889ffc2c 	andhi	r2,r17,32752
  803334:	00dffc34 	movhi	r3,32752
  803338:	10c01c26 	beq	r2,r3,8033ac <_dtoa_r+0xf0>
  80333c:	000d883a 	mov	r6,zero
  803340:	000f883a 	mov	r7,zero
  803344:	9009883a 	mov	r4,r18
  803348:	980b883a 	mov	r5,r19
  80334c:	080bf0c0 	call	80bf0c <__eqdf2>
  803350:	10002b1e 	bne	r2,zero,803400 <_dtoa_r+0x144>
  803354:	d9c02317 	ldw	r7,140(sp)
  803358:	00800044 	movi	r2,1
  80335c:	38800015 	stw	r2,0(r7)
  803360:	d8802517 	ldw	r2,148(sp)
  803364:	10019e26 	beq	r2,zero,8039e0 <_dtoa_r+0x724>
  803368:	d8c02517 	ldw	r3,148(sp)
  80336c:	00802074 	movhi	r2,129
  803370:	10bf9644 	addi	r2,r2,-423
  803374:	18800015 	stw	r2,0(r3)
  803378:	10bfffc4 	addi	r2,r2,-1
  80337c:	dfc02117 	ldw	ra,132(sp)
  803380:	df002017 	ldw	fp,128(sp)
  803384:	ddc01f17 	ldw	r23,124(sp)
  803388:	dd801e17 	ldw	r22,120(sp)
  80338c:	dd401d17 	ldw	r21,116(sp)
  803390:	dd001c17 	ldw	r20,112(sp)
  803394:	dcc01b17 	ldw	r19,108(sp)
  803398:	dc801a17 	ldw	r18,104(sp)
  80339c:	dc401917 	ldw	r17,100(sp)
  8033a0:	dc001817 	ldw	r16,96(sp)
  8033a4:	dec02204 	addi	sp,sp,136
  8033a8:	f800283a 	ret
  8033ac:	d8c02317 	ldw	r3,140(sp)
  8033b0:	0089c3c4 	movi	r2,9999
  8033b4:	18800015 	stw	r2,0(r3)
  8033b8:	90017726 	beq	r18,zero,803998 <_dtoa_r+0x6dc>
  8033bc:	00802074 	movhi	r2,129
  8033c0:	10bfa204 	addi	r2,r2,-376
  8033c4:	d9002517 	ldw	r4,148(sp)
  8033c8:	203fec26 	beq	r4,zero,80337c <__alt_data_end+0xff80337c>
  8033cc:	10c000c7 	ldb	r3,3(r2)
  8033d0:	1801781e 	bne	r3,zero,8039b4 <_dtoa_r+0x6f8>
  8033d4:	10c000c4 	addi	r3,r2,3
  8033d8:	d9802517 	ldw	r6,148(sp)
  8033dc:	30c00015 	stw	r3,0(r6)
  8033e0:	003fe606 	br	80337c <__alt_data_end+0xff80337c>
  8033e4:	04e00034 	movhi	r19,32768
  8033e8:	9cffffc4 	addi	r19,r19,-1
  8033ec:	00800044 	movi	r2,1
  8033f0:	8ce6703a 	and	r19,r17,r19
  8033f4:	80800015 	stw	r2,0(r16)
  8033f8:	9823883a 	mov	r17,r19
  8033fc:	003fcc06 	br	803330 <__alt_data_end+0xff803330>
  803400:	d8800204 	addi	r2,sp,8
  803404:	d8800015 	stw	r2,0(sp)
  803408:	d9c00104 	addi	r7,sp,4
  80340c:	900b883a 	mov	r5,r18
  803410:	980d883a 	mov	r6,r19
  803414:	e009883a 	mov	r4,fp
  803418:	8820d53a 	srli	r16,r17,20
  80341c:	08075ec0 	call	8075ec <__d2b>
  803420:	d8800915 	stw	r2,36(sp)
  803424:	8001651e 	bne	r16,zero,8039bc <_dtoa_r+0x700>
  803428:	dd800217 	ldw	r22,8(sp)
  80342c:	dc000117 	ldw	r16,4(sp)
  803430:	00800804 	movi	r2,32
  803434:	b421883a 	add	r16,r22,r16
  803438:	80c10c84 	addi	r3,r16,1074
  80343c:	10c2d10e 	bge	r2,r3,803f84 <_dtoa_r+0xcc8>
  803440:	00801004 	movi	r2,64
  803444:	81010484 	addi	r4,r16,1042
  803448:	10c7c83a 	sub	r3,r2,r3
  80344c:	9108d83a 	srl	r4,r18,r4
  803450:	88e2983a 	sll	r17,r17,r3
  803454:	2448b03a 	or	r4,r4,r17
  803458:	080d2d40 	call	80d2d4 <__floatunsidf>
  80345c:	017f8434 	movhi	r5,65040
  803460:	01800044 	movi	r6,1
  803464:	1009883a 	mov	r4,r2
  803468:	194b883a 	add	r5,r3,r5
  80346c:	843fffc4 	addi	r16,r16,-1
  803470:	d9801115 	stw	r6,68(sp)
  803474:	000d883a 	mov	r6,zero
  803478:	01cffe34 	movhi	r7,16376
  80347c:	080c87c0 	call	80c87c <__subdf3>
  803480:	0198dbf4 	movhi	r6,25455
  803484:	01cff4f4 	movhi	r7,16339
  803488:	3190d844 	addi	r6,r6,17249
  80348c:	39e1e9c4 	addi	r7,r7,-30809
  803490:	1009883a 	mov	r4,r2
  803494:	180b883a 	mov	r5,r3
  803498:	080c1640 	call	80c164 <__muldf3>
  80349c:	01a2d874 	movhi	r6,35681
  8034a0:	01cff1f4 	movhi	r7,16327
  8034a4:	31b22cc4 	addi	r6,r6,-14157
  8034a8:	39e28a04 	addi	r7,r7,-30168
  8034ac:	180b883a 	mov	r5,r3
  8034b0:	1009883a 	mov	r4,r2
  8034b4:	080ad780 	call	80ad78 <__adddf3>
  8034b8:	8009883a 	mov	r4,r16
  8034bc:	1029883a 	mov	r20,r2
  8034c0:	1823883a 	mov	r17,r3
  8034c4:	080d1f80 	call	80d1f8 <__floatsidf>
  8034c8:	019427f4 	movhi	r6,20639
  8034cc:	01cff4f4 	movhi	r7,16339
  8034d0:	319e7ec4 	addi	r6,r6,31227
  8034d4:	39d104c4 	addi	r7,r7,17427
  8034d8:	1009883a 	mov	r4,r2
  8034dc:	180b883a 	mov	r5,r3
  8034e0:	080c1640 	call	80c164 <__muldf3>
  8034e4:	100d883a 	mov	r6,r2
  8034e8:	180f883a 	mov	r7,r3
  8034ec:	a009883a 	mov	r4,r20
  8034f0:	880b883a 	mov	r5,r17
  8034f4:	080ad780 	call	80ad78 <__adddf3>
  8034f8:	1009883a 	mov	r4,r2
  8034fc:	180b883a 	mov	r5,r3
  803500:	1029883a 	mov	r20,r2
  803504:	1823883a 	mov	r17,r3
  803508:	080d1780 	call	80d178 <__fixdfsi>
  80350c:	000d883a 	mov	r6,zero
  803510:	000f883a 	mov	r7,zero
  803514:	a009883a 	mov	r4,r20
  803518:	880b883a 	mov	r5,r17
  80351c:	d8800515 	stw	r2,20(sp)
  803520:	080c0700 	call	80c070 <__ledf2>
  803524:	10028716 	blt	r2,zero,803f44 <_dtoa_r+0xc88>
  803528:	d8c00517 	ldw	r3,20(sp)
  80352c:	00800584 	movi	r2,22
  803530:	10c27536 	bltu	r2,r3,803f08 <_dtoa_r+0xc4c>
  803534:	180490fa 	slli	r2,r3,3
  803538:	00c02074 	movhi	r3,129
  80353c:	18ffbe04 	addi	r3,r3,-264
  803540:	1885883a 	add	r2,r3,r2
  803544:	11000017 	ldw	r4,0(r2)
  803548:	11400117 	ldw	r5,4(r2)
  80354c:	900d883a 	mov	r6,r18
  803550:	980f883a 	mov	r7,r19
  803554:	080bf940 	call	80bf94 <__gedf2>
  803558:	00828d0e 	bge	zero,r2,803f90 <_dtoa_r+0xcd4>
  80355c:	d9000517 	ldw	r4,20(sp)
  803560:	d8000e15 	stw	zero,56(sp)
  803564:	213fffc4 	addi	r4,r4,-1
  803568:	d9000515 	stw	r4,20(sp)
  80356c:	b42dc83a 	sub	r22,r22,r16
  803570:	b5bfffc4 	addi	r22,r22,-1
  803574:	b0026f16 	blt	r22,zero,803f34 <_dtoa_r+0xc78>
  803578:	d8000815 	stw	zero,32(sp)
  80357c:	d9c00517 	ldw	r7,20(sp)
  803580:	38026416 	blt	r7,zero,803f14 <_dtoa_r+0xc58>
  803584:	b1ed883a 	add	r22,r22,r7
  803588:	d9c00d15 	stw	r7,52(sp)
  80358c:	d8000a15 	stw	zero,40(sp)
  803590:	d9800317 	ldw	r6,12(sp)
  803594:	00800244 	movi	r2,9
  803598:	11811436 	bltu	r2,r6,8039ec <_dtoa_r+0x730>
  80359c:	00800144 	movi	r2,5
  8035a0:	1184e10e 	bge	r2,r6,804928 <_dtoa_r+0x166c>
  8035a4:	31bfff04 	addi	r6,r6,-4
  8035a8:	d9800315 	stw	r6,12(sp)
  8035ac:	0023883a 	mov	r17,zero
  8035b0:	d9800317 	ldw	r6,12(sp)
  8035b4:	008000c4 	movi	r2,3
  8035b8:	30836726 	beq	r6,r2,804358 <_dtoa_r+0x109c>
  8035bc:	1183410e 	bge	r2,r6,8042c4 <_dtoa_r+0x1008>
  8035c0:	d9c00317 	ldw	r7,12(sp)
  8035c4:	00800104 	movi	r2,4
  8035c8:	38827c26 	beq	r7,r2,803fbc <_dtoa_r+0xd00>
  8035cc:	00800144 	movi	r2,5
  8035d0:	3884c41e 	bne	r7,r2,8048e4 <_dtoa_r+0x1628>
  8035d4:	00800044 	movi	r2,1
  8035d8:	d8800b15 	stw	r2,44(sp)
  8035dc:	d8c00517 	ldw	r3,20(sp)
  8035e0:	d9002217 	ldw	r4,136(sp)
  8035e4:	1907883a 	add	r3,r3,r4
  8035e8:	19800044 	addi	r6,r3,1
  8035ec:	d8c00c15 	stw	r3,48(sp)
  8035f0:	d9800615 	stw	r6,24(sp)
  8035f4:	0183a40e 	bge	zero,r6,804488 <_dtoa_r+0x11cc>
  8035f8:	d9800617 	ldw	r6,24(sp)
  8035fc:	3021883a 	mov	r16,r6
  803600:	e0001115 	stw	zero,68(fp)
  803604:	008005c4 	movi	r2,23
  803608:	1184c92e 	bgeu	r2,r6,804930 <_dtoa_r+0x1674>
  80360c:	00c00044 	movi	r3,1
  803610:	00800104 	movi	r2,4
  803614:	1085883a 	add	r2,r2,r2
  803618:	11000504 	addi	r4,r2,20
  80361c:	180b883a 	mov	r5,r3
  803620:	18c00044 	addi	r3,r3,1
  803624:	313ffb2e 	bgeu	r6,r4,803614 <__alt_data_end+0xff803614>
  803628:	e1401115 	stw	r5,68(fp)
  80362c:	e009883a 	mov	r4,fp
  803630:	08069580 	call	806958 <_Balloc>
  803634:	d8800715 	stw	r2,28(sp)
  803638:	e0801015 	stw	r2,64(fp)
  80363c:	00800384 	movi	r2,14
  803640:	1400f736 	bltu	r2,r16,803a20 <_dtoa_r+0x764>
  803644:	8800f626 	beq	r17,zero,803a20 <_dtoa_r+0x764>
  803648:	d9c00517 	ldw	r7,20(sp)
  80364c:	01c39a0e 	bge	zero,r7,8044b8 <_dtoa_r+0x11fc>
  803650:	388003cc 	andi	r2,r7,15
  803654:	100490fa 	slli	r2,r2,3
  803658:	382bd13a 	srai	r21,r7,4
  80365c:	00c02074 	movhi	r3,129
  803660:	18ffbe04 	addi	r3,r3,-264
  803664:	1885883a 	add	r2,r3,r2
  803668:	a8c0040c 	andi	r3,r21,16
  80366c:	12400017 	ldw	r9,0(r2)
  803670:	12000117 	ldw	r8,4(r2)
  803674:	18037926 	beq	r3,zero,80445c <_dtoa_r+0x11a0>
  803678:	00802074 	movhi	r2,129
  80367c:	10bfb404 	addi	r2,r2,-304
  803680:	11800817 	ldw	r6,32(r2)
  803684:	11c00917 	ldw	r7,36(r2)
  803688:	9009883a 	mov	r4,r18
  80368c:	980b883a 	mov	r5,r19
  803690:	da001715 	stw	r8,92(sp)
  803694:	da401615 	stw	r9,88(sp)
  803698:	080b6240 	call	80b624 <__divdf3>
  80369c:	da001717 	ldw	r8,92(sp)
  8036a0:	da401617 	ldw	r9,88(sp)
  8036a4:	ad4003cc 	andi	r21,r21,15
  8036a8:	040000c4 	movi	r16,3
  8036ac:	1023883a 	mov	r17,r2
  8036b0:	1829883a 	mov	r20,r3
  8036b4:	a8001126 	beq	r21,zero,8036fc <_dtoa_r+0x440>
  8036b8:	05c02074 	movhi	r23,129
  8036bc:	bdffb404 	addi	r23,r23,-304
  8036c0:	4805883a 	mov	r2,r9
  8036c4:	4007883a 	mov	r3,r8
  8036c8:	a980004c 	andi	r6,r21,1
  8036cc:	1009883a 	mov	r4,r2
  8036d0:	a82bd07a 	srai	r21,r21,1
  8036d4:	180b883a 	mov	r5,r3
  8036d8:	30000426 	beq	r6,zero,8036ec <_dtoa_r+0x430>
  8036dc:	b9800017 	ldw	r6,0(r23)
  8036e0:	b9c00117 	ldw	r7,4(r23)
  8036e4:	84000044 	addi	r16,r16,1
  8036e8:	080c1640 	call	80c164 <__muldf3>
  8036ec:	bdc00204 	addi	r23,r23,8
  8036f0:	a83ff51e 	bne	r21,zero,8036c8 <__alt_data_end+0xff8036c8>
  8036f4:	1013883a 	mov	r9,r2
  8036f8:	1811883a 	mov	r8,r3
  8036fc:	480d883a 	mov	r6,r9
  803700:	400f883a 	mov	r7,r8
  803704:	8809883a 	mov	r4,r17
  803708:	a00b883a 	mov	r5,r20
  80370c:	080b6240 	call	80b624 <__divdf3>
  803710:	d8800f15 	stw	r2,60(sp)
  803714:	d8c01015 	stw	r3,64(sp)
  803718:	d8c00e17 	ldw	r3,56(sp)
  80371c:	18000626 	beq	r3,zero,803738 <_dtoa_r+0x47c>
  803720:	d9000f17 	ldw	r4,60(sp)
  803724:	d9401017 	ldw	r5,64(sp)
  803728:	000d883a 	mov	r6,zero
  80372c:	01cffc34 	movhi	r7,16368
  803730:	080c0700 	call	80c070 <__ledf2>
  803734:	10040b16 	blt	r2,zero,804764 <_dtoa_r+0x14a8>
  803738:	8009883a 	mov	r4,r16
  80373c:	080d1f80 	call	80d1f8 <__floatsidf>
  803740:	d9800f17 	ldw	r6,60(sp)
  803744:	d9c01017 	ldw	r7,64(sp)
  803748:	1009883a 	mov	r4,r2
  80374c:	180b883a 	mov	r5,r3
  803750:	080c1640 	call	80c164 <__muldf3>
  803754:	000d883a 	mov	r6,zero
  803758:	01d00734 	movhi	r7,16412
  80375c:	1009883a 	mov	r4,r2
  803760:	180b883a 	mov	r5,r3
  803764:	080ad780 	call	80ad78 <__adddf3>
  803768:	1021883a 	mov	r16,r2
  80376c:	d8800617 	ldw	r2,24(sp)
  803770:	047f3034 	movhi	r17,64704
  803774:	1c63883a 	add	r17,r3,r17
  803778:	10031826 	beq	r2,zero,8043dc <_dtoa_r+0x1120>
  80377c:	d8c00517 	ldw	r3,20(sp)
  803780:	db000617 	ldw	r12,24(sp)
  803784:	d8c01315 	stw	r3,76(sp)
  803788:	d9000b17 	ldw	r4,44(sp)
  80378c:	20038f26 	beq	r4,zero,8045cc <_dtoa_r+0x1310>
  803790:	60bfffc4 	addi	r2,r12,-1
  803794:	100490fa 	slli	r2,r2,3
  803798:	00c02074 	movhi	r3,129
  80379c:	18ffbe04 	addi	r3,r3,-264
  8037a0:	1885883a 	add	r2,r3,r2
  8037a4:	11800017 	ldw	r6,0(r2)
  8037a8:	11c00117 	ldw	r7,4(r2)
  8037ac:	d8800717 	ldw	r2,28(sp)
  8037b0:	0009883a 	mov	r4,zero
  8037b4:	014ff834 	movhi	r5,16352
  8037b8:	db001615 	stw	r12,88(sp)
  8037bc:	15c00044 	addi	r23,r2,1
  8037c0:	080b6240 	call	80b624 <__divdf3>
  8037c4:	800d883a 	mov	r6,r16
  8037c8:	880f883a 	mov	r7,r17
  8037cc:	1009883a 	mov	r4,r2
  8037d0:	180b883a 	mov	r5,r3
  8037d4:	080c87c0 	call	80c87c <__subdf3>
  8037d8:	d9401017 	ldw	r5,64(sp)
  8037dc:	d9000f17 	ldw	r4,60(sp)
  8037e0:	102b883a 	mov	r21,r2
  8037e4:	d8c01215 	stw	r3,72(sp)
  8037e8:	080d1780 	call	80d178 <__fixdfsi>
  8037ec:	1009883a 	mov	r4,r2
  8037f0:	1029883a 	mov	r20,r2
  8037f4:	080d1f80 	call	80d1f8 <__floatsidf>
  8037f8:	d9000f17 	ldw	r4,60(sp)
  8037fc:	d9401017 	ldw	r5,64(sp)
  803800:	100d883a 	mov	r6,r2
  803804:	180f883a 	mov	r7,r3
  803808:	080c87c0 	call	80c87c <__subdf3>
  80380c:	1823883a 	mov	r17,r3
  803810:	d8c00717 	ldw	r3,28(sp)
  803814:	d9401217 	ldw	r5,72(sp)
  803818:	a2000c04 	addi	r8,r20,48
  80381c:	1021883a 	mov	r16,r2
  803820:	1a000005 	stb	r8,0(r3)
  803824:	800d883a 	mov	r6,r16
  803828:	880f883a 	mov	r7,r17
  80382c:	a809883a 	mov	r4,r21
  803830:	4029883a 	mov	r20,r8
  803834:	080bf940 	call	80bf94 <__gedf2>
  803838:	00841d16 	blt	zero,r2,8048b0 <_dtoa_r+0x15f4>
  80383c:	800d883a 	mov	r6,r16
  803840:	880f883a 	mov	r7,r17
  803844:	0009883a 	mov	r4,zero
  803848:	014ffc34 	movhi	r5,16368
  80384c:	080c87c0 	call	80c87c <__subdf3>
  803850:	d9401217 	ldw	r5,72(sp)
  803854:	100d883a 	mov	r6,r2
  803858:	180f883a 	mov	r7,r3
  80385c:	a809883a 	mov	r4,r21
  803860:	080bf940 	call	80bf94 <__gedf2>
  803864:	db001617 	ldw	r12,88(sp)
  803868:	00840e16 	blt	zero,r2,8048a4 <_dtoa_r+0x15e8>
  80386c:	00800044 	movi	r2,1
  803870:	13006b0e 	bge	r2,r12,803a20 <_dtoa_r+0x764>
  803874:	d9000717 	ldw	r4,28(sp)
  803878:	dd800f15 	stw	r22,60(sp)
  80387c:	dcc01015 	stw	r19,64(sp)
  803880:	2319883a 	add	r12,r4,r12
  803884:	dcc01217 	ldw	r19,72(sp)
  803888:	602d883a 	mov	r22,r12
  80388c:	dc801215 	stw	r18,72(sp)
  803890:	b825883a 	mov	r18,r23
  803894:	00000906 	br	8038bc <_dtoa_r+0x600>
  803898:	080c87c0 	call	80c87c <__subdf3>
  80389c:	a80d883a 	mov	r6,r21
  8038a0:	980f883a 	mov	r7,r19
  8038a4:	1009883a 	mov	r4,r2
  8038a8:	180b883a 	mov	r5,r3
  8038ac:	080c0700 	call	80c070 <__ledf2>
  8038b0:	1003e816 	blt	r2,zero,804854 <_dtoa_r+0x1598>
  8038b4:	b825883a 	mov	r18,r23
  8038b8:	bd83e926 	beq	r23,r22,804860 <_dtoa_r+0x15a4>
  8038bc:	a809883a 	mov	r4,r21
  8038c0:	980b883a 	mov	r5,r19
  8038c4:	000d883a 	mov	r6,zero
  8038c8:	01d00934 	movhi	r7,16420
  8038cc:	080c1640 	call	80c164 <__muldf3>
  8038d0:	000d883a 	mov	r6,zero
  8038d4:	01d00934 	movhi	r7,16420
  8038d8:	8009883a 	mov	r4,r16
  8038dc:	880b883a 	mov	r5,r17
  8038e0:	102b883a 	mov	r21,r2
  8038e4:	1827883a 	mov	r19,r3
  8038e8:	080c1640 	call	80c164 <__muldf3>
  8038ec:	180b883a 	mov	r5,r3
  8038f0:	1009883a 	mov	r4,r2
  8038f4:	1821883a 	mov	r16,r3
  8038f8:	1023883a 	mov	r17,r2
  8038fc:	080d1780 	call	80d178 <__fixdfsi>
  803900:	1009883a 	mov	r4,r2
  803904:	1029883a 	mov	r20,r2
  803908:	080d1f80 	call	80d1f8 <__floatsidf>
  80390c:	8809883a 	mov	r4,r17
  803910:	800b883a 	mov	r5,r16
  803914:	100d883a 	mov	r6,r2
  803918:	180f883a 	mov	r7,r3
  80391c:	080c87c0 	call	80c87c <__subdf3>
  803920:	a5000c04 	addi	r20,r20,48
  803924:	a80d883a 	mov	r6,r21
  803928:	980f883a 	mov	r7,r19
  80392c:	1009883a 	mov	r4,r2
  803930:	180b883a 	mov	r5,r3
  803934:	95000005 	stb	r20,0(r18)
  803938:	1021883a 	mov	r16,r2
  80393c:	1823883a 	mov	r17,r3
  803940:	080c0700 	call	80c070 <__ledf2>
  803944:	bdc00044 	addi	r23,r23,1
  803948:	800d883a 	mov	r6,r16
  80394c:	880f883a 	mov	r7,r17
  803950:	0009883a 	mov	r4,zero
  803954:	014ffc34 	movhi	r5,16368
  803958:	103fcf0e 	bge	r2,zero,803898 <__alt_data_end+0xff803898>
  80395c:	d8c01317 	ldw	r3,76(sp)
  803960:	d8c00515 	stw	r3,20(sp)
  803964:	d9400917 	ldw	r5,36(sp)
  803968:	e009883a 	mov	r4,fp
  80396c:	0806a000 	call	806a00 <_Bfree>
  803970:	d9000517 	ldw	r4,20(sp)
  803974:	d9802317 	ldw	r6,140(sp)
  803978:	d9c02517 	ldw	r7,148(sp)
  80397c:	b8000005 	stb	zero,0(r23)
  803980:	20800044 	addi	r2,r4,1
  803984:	30800015 	stw	r2,0(r6)
  803988:	3802aa26 	beq	r7,zero,804434 <_dtoa_r+0x1178>
  80398c:	3dc00015 	stw	r23,0(r7)
  803990:	d8800717 	ldw	r2,28(sp)
  803994:	003e7906 	br	80337c <__alt_data_end+0xff80337c>
  803998:	00800434 	movhi	r2,16
  80399c:	10bfffc4 	addi	r2,r2,-1
  8039a0:	88a2703a 	and	r17,r17,r2
  8039a4:	883e851e 	bne	r17,zero,8033bc <__alt_data_end+0xff8033bc>
  8039a8:	00802074 	movhi	r2,129
  8039ac:	10bf9f04 	addi	r2,r2,-388
  8039b0:	003e8406 	br	8033c4 <__alt_data_end+0xff8033c4>
  8039b4:	10c00204 	addi	r3,r2,8
  8039b8:	003e8706 	br	8033d8 <__alt_data_end+0xff8033d8>
  8039bc:	01400434 	movhi	r5,16
  8039c0:	297fffc4 	addi	r5,r5,-1
  8039c4:	994a703a 	and	r5,r19,r5
  8039c8:	9009883a 	mov	r4,r18
  8039cc:	843f0044 	addi	r16,r16,-1023
  8039d0:	294ffc34 	orhi	r5,r5,16368
  8039d4:	dd800217 	ldw	r22,8(sp)
  8039d8:	d8001115 	stw	zero,68(sp)
  8039dc:	003ea506 	br	803474 <__alt_data_end+0xff803474>
  8039e0:	00802074 	movhi	r2,129
  8039e4:	10bf9604 	addi	r2,r2,-424
  8039e8:	003e6406 	br	80337c <__alt_data_end+0xff80337c>
  8039ec:	e0001115 	stw	zero,68(fp)
  8039f0:	000b883a 	mov	r5,zero
  8039f4:	e009883a 	mov	r4,fp
  8039f8:	08069580 	call	806958 <_Balloc>
  8039fc:	01bfffc4 	movi	r6,-1
  803a00:	01c00044 	movi	r7,1
  803a04:	d8800715 	stw	r2,28(sp)
  803a08:	d9800c15 	stw	r6,48(sp)
  803a0c:	e0801015 	stw	r2,64(fp)
  803a10:	d8000315 	stw	zero,12(sp)
  803a14:	d9c00b15 	stw	r7,44(sp)
  803a18:	d9800615 	stw	r6,24(sp)
  803a1c:	d8002215 	stw	zero,136(sp)
  803a20:	d8800117 	ldw	r2,4(sp)
  803a24:	10008916 	blt	r2,zero,803c4c <_dtoa_r+0x990>
  803a28:	d9000517 	ldw	r4,20(sp)
  803a2c:	00c00384 	movi	r3,14
  803a30:	19008616 	blt	r3,r4,803c4c <_dtoa_r+0x990>
  803a34:	200490fa 	slli	r2,r4,3
  803a38:	00c02074 	movhi	r3,129
  803a3c:	d9802217 	ldw	r6,136(sp)
  803a40:	18ffbe04 	addi	r3,r3,-264
  803a44:	1885883a 	add	r2,r3,r2
  803a48:	14000017 	ldw	r16,0(r2)
  803a4c:	14400117 	ldw	r17,4(r2)
  803a50:	30016316 	blt	r6,zero,803fe0 <_dtoa_r+0xd24>
  803a54:	800d883a 	mov	r6,r16
  803a58:	880f883a 	mov	r7,r17
  803a5c:	9009883a 	mov	r4,r18
  803a60:	980b883a 	mov	r5,r19
  803a64:	080b6240 	call	80b624 <__divdf3>
  803a68:	180b883a 	mov	r5,r3
  803a6c:	1009883a 	mov	r4,r2
  803a70:	080d1780 	call	80d178 <__fixdfsi>
  803a74:	1009883a 	mov	r4,r2
  803a78:	102b883a 	mov	r21,r2
  803a7c:	080d1f80 	call	80d1f8 <__floatsidf>
  803a80:	800d883a 	mov	r6,r16
  803a84:	880f883a 	mov	r7,r17
  803a88:	1009883a 	mov	r4,r2
  803a8c:	180b883a 	mov	r5,r3
  803a90:	080c1640 	call	80c164 <__muldf3>
  803a94:	100d883a 	mov	r6,r2
  803a98:	180f883a 	mov	r7,r3
  803a9c:	9009883a 	mov	r4,r18
  803aa0:	980b883a 	mov	r5,r19
  803aa4:	080c87c0 	call	80c87c <__subdf3>
  803aa8:	d9c00717 	ldw	r7,28(sp)
  803aac:	1009883a 	mov	r4,r2
  803ab0:	a8800c04 	addi	r2,r21,48
  803ab4:	38800005 	stb	r2,0(r7)
  803ab8:	3dc00044 	addi	r23,r7,1
  803abc:	d9c00617 	ldw	r7,24(sp)
  803ac0:	01800044 	movi	r6,1
  803ac4:	180b883a 	mov	r5,r3
  803ac8:	2005883a 	mov	r2,r4
  803acc:	39803826 	beq	r7,r6,803bb0 <_dtoa_r+0x8f4>
  803ad0:	000d883a 	mov	r6,zero
  803ad4:	01d00934 	movhi	r7,16420
  803ad8:	080c1640 	call	80c164 <__muldf3>
  803adc:	000d883a 	mov	r6,zero
  803ae0:	000f883a 	mov	r7,zero
  803ae4:	1009883a 	mov	r4,r2
  803ae8:	180b883a 	mov	r5,r3
  803aec:	1025883a 	mov	r18,r2
  803af0:	1827883a 	mov	r19,r3
  803af4:	080bf0c0 	call	80bf0c <__eqdf2>
  803af8:	103f9a26 	beq	r2,zero,803964 <__alt_data_end+0xff803964>
  803afc:	d9c00617 	ldw	r7,24(sp)
  803b00:	d8c00717 	ldw	r3,28(sp)
  803b04:	b829883a 	mov	r20,r23
  803b08:	38bfffc4 	addi	r2,r7,-1
  803b0c:	18ad883a 	add	r22,r3,r2
  803b10:	00000a06 	br	803b3c <_dtoa_r+0x880>
  803b14:	080c1640 	call	80c164 <__muldf3>
  803b18:	000d883a 	mov	r6,zero
  803b1c:	000f883a 	mov	r7,zero
  803b20:	1009883a 	mov	r4,r2
  803b24:	180b883a 	mov	r5,r3
  803b28:	1025883a 	mov	r18,r2
  803b2c:	1827883a 	mov	r19,r3
  803b30:	b829883a 	mov	r20,r23
  803b34:	080bf0c0 	call	80bf0c <__eqdf2>
  803b38:	103f8a26 	beq	r2,zero,803964 <__alt_data_end+0xff803964>
  803b3c:	800d883a 	mov	r6,r16
  803b40:	880f883a 	mov	r7,r17
  803b44:	9009883a 	mov	r4,r18
  803b48:	980b883a 	mov	r5,r19
  803b4c:	080b6240 	call	80b624 <__divdf3>
  803b50:	180b883a 	mov	r5,r3
  803b54:	1009883a 	mov	r4,r2
  803b58:	080d1780 	call	80d178 <__fixdfsi>
  803b5c:	1009883a 	mov	r4,r2
  803b60:	102b883a 	mov	r21,r2
  803b64:	080d1f80 	call	80d1f8 <__floatsidf>
  803b68:	800d883a 	mov	r6,r16
  803b6c:	880f883a 	mov	r7,r17
  803b70:	1009883a 	mov	r4,r2
  803b74:	180b883a 	mov	r5,r3
  803b78:	080c1640 	call	80c164 <__muldf3>
  803b7c:	100d883a 	mov	r6,r2
  803b80:	180f883a 	mov	r7,r3
  803b84:	9009883a 	mov	r4,r18
  803b88:	980b883a 	mov	r5,r19
  803b8c:	080c87c0 	call	80c87c <__subdf3>
  803b90:	aa000c04 	addi	r8,r21,48
  803b94:	a2000005 	stb	r8,0(r20)
  803b98:	000d883a 	mov	r6,zero
  803b9c:	01d00934 	movhi	r7,16420
  803ba0:	1009883a 	mov	r4,r2
  803ba4:	180b883a 	mov	r5,r3
  803ba8:	a5c00044 	addi	r23,r20,1
  803bac:	b53fd91e 	bne	r22,r20,803b14 <__alt_data_end+0xff803b14>
  803bb0:	100d883a 	mov	r6,r2
  803bb4:	180f883a 	mov	r7,r3
  803bb8:	1009883a 	mov	r4,r2
  803bbc:	180b883a 	mov	r5,r3
  803bc0:	080ad780 	call	80ad78 <__adddf3>
  803bc4:	100d883a 	mov	r6,r2
  803bc8:	180f883a 	mov	r7,r3
  803bcc:	8009883a 	mov	r4,r16
  803bd0:	880b883a 	mov	r5,r17
  803bd4:	1027883a 	mov	r19,r2
  803bd8:	1825883a 	mov	r18,r3
  803bdc:	080c0700 	call	80c070 <__ledf2>
  803be0:	10000816 	blt	r2,zero,803c04 <_dtoa_r+0x948>
  803be4:	980d883a 	mov	r6,r19
  803be8:	900f883a 	mov	r7,r18
  803bec:	8009883a 	mov	r4,r16
  803bf0:	880b883a 	mov	r5,r17
  803bf4:	080bf0c0 	call	80bf0c <__eqdf2>
  803bf8:	103f5a1e 	bne	r2,zero,803964 <__alt_data_end+0xff803964>
  803bfc:	ad40004c 	andi	r21,r21,1
  803c00:	a83f5826 	beq	r21,zero,803964 <__alt_data_end+0xff803964>
  803c04:	bd3fffc3 	ldbu	r20,-1(r23)
  803c08:	b8bfffc4 	addi	r2,r23,-1
  803c0c:	1007883a 	mov	r3,r2
  803c10:	01400e44 	movi	r5,57
  803c14:	d9800717 	ldw	r6,28(sp)
  803c18:	00000506 	br	803c30 <_dtoa_r+0x974>
  803c1c:	18ffffc4 	addi	r3,r3,-1
  803c20:	11824726 	beq	r2,r6,804540 <_dtoa_r+0x1284>
  803c24:	1d000003 	ldbu	r20,0(r3)
  803c28:	102f883a 	mov	r23,r2
  803c2c:	10bfffc4 	addi	r2,r2,-1
  803c30:	a1003fcc 	andi	r4,r20,255
  803c34:	2100201c 	xori	r4,r4,128
  803c38:	213fe004 	addi	r4,r4,-128
  803c3c:	217ff726 	beq	r4,r5,803c1c <__alt_data_end+0xff803c1c>
  803c40:	a2000044 	addi	r8,r20,1
  803c44:	12000005 	stb	r8,0(r2)
  803c48:	003f4606 	br	803964 <__alt_data_end+0xff803964>
  803c4c:	d9000b17 	ldw	r4,44(sp)
  803c50:	2000c826 	beq	r4,zero,803f74 <_dtoa_r+0xcb8>
  803c54:	d9800317 	ldw	r6,12(sp)
  803c58:	00c00044 	movi	r3,1
  803c5c:	1980f90e 	bge	r3,r6,804044 <_dtoa_r+0xd88>
  803c60:	d8800617 	ldw	r2,24(sp)
  803c64:	d8c00a17 	ldw	r3,40(sp)
  803c68:	157fffc4 	addi	r21,r2,-1
  803c6c:	1d41f316 	blt	r3,r21,80443c <_dtoa_r+0x1180>
  803c70:	1d6bc83a 	sub	r21,r3,r21
  803c74:	d9c00617 	ldw	r7,24(sp)
  803c78:	3802aa16 	blt	r7,zero,804724 <_dtoa_r+0x1468>
  803c7c:	dd000817 	ldw	r20,32(sp)
  803c80:	d8800617 	ldw	r2,24(sp)
  803c84:	d8c00817 	ldw	r3,32(sp)
  803c88:	01400044 	movi	r5,1
  803c8c:	e009883a 	mov	r4,fp
  803c90:	1887883a 	add	r3,r3,r2
  803c94:	d8c00815 	stw	r3,32(sp)
  803c98:	b0ad883a 	add	r22,r22,r2
  803c9c:	0806d640 	call	806d64 <__i2b>
  803ca0:	1023883a 	mov	r17,r2
  803ca4:	a0000826 	beq	r20,zero,803cc8 <_dtoa_r+0xa0c>
  803ca8:	0580070e 	bge	zero,r22,803cc8 <_dtoa_r+0xa0c>
  803cac:	a005883a 	mov	r2,r20
  803cb0:	b500b916 	blt	r22,r20,803f98 <_dtoa_r+0xcdc>
  803cb4:	d9000817 	ldw	r4,32(sp)
  803cb8:	a0a9c83a 	sub	r20,r20,r2
  803cbc:	b0adc83a 	sub	r22,r22,r2
  803cc0:	2089c83a 	sub	r4,r4,r2
  803cc4:	d9000815 	stw	r4,32(sp)
  803cc8:	d9800a17 	ldw	r6,40(sp)
  803ccc:	0181810e 	bge	zero,r6,8042d4 <_dtoa_r+0x1018>
  803cd0:	d9c00b17 	ldw	r7,44(sp)
  803cd4:	3800b326 	beq	r7,zero,803fa4 <_dtoa_r+0xce8>
  803cd8:	a800b226 	beq	r21,zero,803fa4 <_dtoa_r+0xce8>
  803cdc:	880b883a 	mov	r5,r17
  803ce0:	a80d883a 	mov	r6,r21
  803ce4:	e009883a 	mov	r4,fp
  803ce8:	0806f980 	call	806f98 <__pow5mult>
  803cec:	d9800917 	ldw	r6,36(sp)
  803cf0:	100b883a 	mov	r5,r2
  803cf4:	e009883a 	mov	r4,fp
  803cf8:	1023883a 	mov	r17,r2
  803cfc:	0806da00 	call	806da0 <__multiply>
  803d00:	1021883a 	mov	r16,r2
  803d04:	d8800a17 	ldw	r2,40(sp)
  803d08:	d9400917 	ldw	r5,36(sp)
  803d0c:	e009883a 	mov	r4,fp
  803d10:	1545c83a 	sub	r2,r2,r21
  803d14:	d8800a15 	stw	r2,40(sp)
  803d18:	0806a000 	call	806a00 <_Bfree>
  803d1c:	d8c00a17 	ldw	r3,40(sp)
  803d20:	18009f1e 	bne	r3,zero,803fa0 <_dtoa_r+0xce4>
  803d24:	05c00044 	movi	r23,1
  803d28:	e009883a 	mov	r4,fp
  803d2c:	b80b883a 	mov	r5,r23
  803d30:	0806d640 	call	806d64 <__i2b>
  803d34:	d9000d17 	ldw	r4,52(sp)
  803d38:	102b883a 	mov	r21,r2
  803d3c:	2000ce26 	beq	r4,zero,804078 <_dtoa_r+0xdbc>
  803d40:	200d883a 	mov	r6,r4
  803d44:	100b883a 	mov	r5,r2
  803d48:	e009883a 	mov	r4,fp
  803d4c:	0806f980 	call	806f98 <__pow5mult>
  803d50:	d9800317 	ldw	r6,12(sp)
  803d54:	102b883a 	mov	r21,r2
  803d58:	b981810e 	bge	r23,r6,804360 <_dtoa_r+0x10a4>
  803d5c:	0027883a 	mov	r19,zero
  803d60:	a8800417 	ldw	r2,16(r21)
  803d64:	05c00804 	movi	r23,32
  803d68:	10800104 	addi	r2,r2,4
  803d6c:	1085883a 	add	r2,r2,r2
  803d70:	1085883a 	add	r2,r2,r2
  803d74:	a885883a 	add	r2,r21,r2
  803d78:	11000017 	ldw	r4,0(r2)
  803d7c:	0806c4c0 	call	806c4c <__hi0bits>
  803d80:	b885c83a 	sub	r2,r23,r2
  803d84:	1585883a 	add	r2,r2,r22
  803d88:	108007cc 	andi	r2,r2,31
  803d8c:	1000b326 	beq	r2,zero,80405c <_dtoa_r+0xda0>
  803d90:	00c00804 	movi	r3,32
  803d94:	1887c83a 	sub	r3,r3,r2
  803d98:	01000104 	movi	r4,4
  803d9c:	20c2cd0e 	bge	r4,r3,8048d4 <_dtoa_r+0x1618>
  803da0:	00c00704 	movi	r3,28
  803da4:	1885c83a 	sub	r2,r3,r2
  803da8:	d8c00817 	ldw	r3,32(sp)
  803dac:	a0a9883a 	add	r20,r20,r2
  803db0:	b0ad883a 	add	r22,r22,r2
  803db4:	1887883a 	add	r3,r3,r2
  803db8:	d8c00815 	stw	r3,32(sp)
  803dbc:	d9800817 	ldw	r6,32(sp)
  803dc0:	0180040e 	bge	zero,r6,803dd4 <_dtoa_r+0xb18>
  803dc4:	800b883a 	mov	r5,r16
  803dc8:	e009883a 	mov	r4,fp
  803dcc:	08070d80 	call	8070d8 <__lshift>
  803dd0:	1021883a 	mov	r16,r2
  803dd4:	0580050e 	bge	zero,r22,803dec <_dtoa_r+0xb30>
  803dd8:	a80b883a 	mov	r5,r21
  803ddc:	b00d883a 	mov	r6,r22
  803de0:	e009883a 	mov	r4,fp
  803de4:	08070d80 	call	8070d8 <__lshift>
  803de8:	102b883a 	mov	r21,r2
  803dec:	d9c00e17 	ldw	r7,56(sp)
  803df0:	3801211e 	bne	r7,zero,804278 <_dtoa_r+0xfbc>
  803df4:	d9800617 	ldw	r6,24(sp)
  803df8:	0181380e 	bge	zero,r6,8042dc <_dtoa_r+0x1020>
  803dfc:	d8c00b17 	ldw	r3,44(sp)
  803e00:	1800ab1e 	bne	r3,zero,8040b0 <_dtoa_r+0xdf4>
  803e04:	dc800717 	ldw	r18,28(sp)
  803e08:	dcc00617 	ldw	r19,24(sp)
  803e0c:	9029883a 	mov	r20,r18
  803e10:	00000206 	br	803e1c <_dtoa_r+0xb60>
  803e14:	0806a280 	call	806a28 <__multadd>
  803e18:	1021883a 	mov	r16,r2
  803e1c:	a80b883a 	mov	r5,r21
  803e20:	8009883a 	mov	r4,r16
  803e24:	08030bc0 	call	8030bc <quorem>
  803e28:	10800c04 	addi	r2,r2,48
  803e2c:	90800005 	stb	r2,0(r18)
  803e30:	94800044 	addi	r18,r18,1
  803e34:	9507c83a 	sub	r3,r18,r20
  803e38:	000f883a 	mov	r7,zero
  803e3c:	01800284 	movi	r6,10
  803e40:	800b883a 	mov	r5,r16
  803e44:	e009883a 	mov	r4,fp
  803e48:	1cfff216 	blt	r3,r19,803e14 <__alt_data_end+0xff803e14>
  803e4c:	1011883a 	mov	r8,r2
  803e50:	d8800617 	ldw	r2,24(sp)
  803e54:	0082370e 	bge	zero,r2,804734 <_dtoa_r+0x1478>
  803e58:	d9000717 	ldw	r4,28(sp)
  803e5c:	0025883a 	mov	r18,zero
  803e60:	20af883a 	add	r23,r4,r2
  803e64:	01800044 	movi	r6,1
  803e68:	800b883a 	mov	r5,r16
  803e6c:	e009883a 	mov	r4,fp
  803e70:	da001715 	stw	r8,92(sp)
  803e74:	08070d80 	call	8070d8 <__lshift>
  803e78:	a80b883a 	mov	r5,r21
  803e7c:	1009883a 	mov	r4,r2
  803e80:	d8800915 	stw	r2,36(sp)
  803e84:	08072200 	call	807220 <__mcmp>
  803e88:	da001717 	ldw	r8,92(sp)
  803e8c:	0081800e 	bge	zero,r2,804490 <_dtoa_r+0x11d4>
  803e90:	b93fffc3 	ldbu	r4,-1(r23)
  803e94:	b8bfffc4 	addi	r2,r23,-1
  803e98:	1007883a 	mov	r3,r2
  803e9c:	01800e44 	movi	r6,57
  803ea0:	d9c00717 	ldw	r7,28(sp)
  803ea4:	00000506 	br	803ebc <_dtoa_r+0xc00>
  803ea8:	18ffffc4 	addi	r3,r3,-1
  803eac:	11c12326 	beq	r2,r7,80433c <_dtoa_r+0x1080>
  803eb0:	19000003 	ldbu	r4,0(r3)
  803eb4:	102f883a 	mov	r23,r2
  803eb8:	10bfffc4 	addi	r2,r2,-1
  803ebc:	21403fcc 	andi	r5,r4,255
  803ec0:	2940201c 	xori	r5,r5,128
  803ec4:	297fe004 	addi	r5,r5,-128
  803ec8:	29bff726 	beq	r5,r6,803ea8 <__alt_data_end+0xff803ea8>
  803ecc:	21000044 	addi	r4,r4,1
  803ed0:	11000005 	stb	r4,0(r2)
  803ed4:	a80b883a 	mov	r5,r21
  803ed8:	e009883a 	mov	r4,fp
  803edc:	0806a000 	call	806a00 <_Bfree>
  803ee0:	883ea026 	beq	r17,zero,803964 <__alt_data_end+0xff803964>
  803ee4:	90000426 	beq	r18,zero,803ef8 <_dtoa_r+0xc3c>
  803ee8:	94400326 	beq	r18,r17,803ef8 <_dtoa_r+0xc3c>
  803eec:	900b883a 	mov	r5,r18
  803ef0:	e009883a 	mov	r4,fp
  803ef4:	0806a000 	call	806a00 <_Bfree>
  803ef8:	880b883a 	mov	r5,r17
  803efc:	e009883a 	mov	r4,fp
  803f00:	0806a000 	call	806a00 <_Bfree>
  803f04:	003e9706 	br	803964 <__alt_data_end+0xff803964>
  803f08:	01800044 	movi	r6,1
  803f0c:	d9800e15 	stw	r6,56(sp)
  803f10:	003d9606 	br	80356c <__alt_data_end+0xff80356c>
  803f14:	d8800817 	ldw	r2,32(sp)
  803f18:	d8c00517 	ldw	r3,20(sp)
  803f1c:	d8000d15 	stw	zero,52(sp)
  803f20:	10c5c83a 	sub	r2,r2,r3
  803f24:	00c9c83a 	sub	r4,zero,r3
  803f28:	d8800815 	stw	r2,32(sp)
  803f2c:	d9000a15 	stw	r4,40(sp)
  803f30:	003d9706 	br	803590 <__alt_data_end+0xff803590>
  803f34:	05adc83a 	sub	r22,zero,r22
  803f38:	dd800815 	stw	r22,32(sp)
  803f3c:	002d883a 	mov	r22,zero
  803f40:	003d8e06 	br	80357c <__alt_data_end+0xff80357c>
  803f44:	d9000517 	ldw	r4,20(sp)
  803f48:	080d1f80 	call	80d1f8 <__floatsidf>
  803f4c:	100d883a 	mov	r6,r2
  803f50:	180f883a 	mov	r7,r3
  803f54:	a009883a 	mov	r4,r20
  803f58:	880b883a 	mov	r5,r17
  803f5c:	080bf0c0 	call	80bf0c <__eqdf2>
  803f60:	103d7126 	beq	r2,zero,803528 <__alt_data_end+0xff803528>
  803f64:	d9c00517 	ldw	r7,20(sp)
  803f68:	39ffffc4 	addi	r7,r7,-1
  803f6c:	d9c00515 	stw	r7,20(sp)
  803f70:	003d6d06 	br	803528 <__alt_data_end+0xff803528>
  803f74:	dd400a17 	ldw	r21,40(sp)
  803f78:	dd000817 	ldw	r20,32(sp)
  803f7c:	0023883a 	mov	r17,zero
  803f80:	003f4806 	br	803ca4 <__alt_data_end+0xff803ca4>
  803f84:	10e3c83a 	sub	r17,r2,r3
  803f88:	9448983a 	sll	r4,r18,r17
  803f8c:	003d3206 	br	803458 <__alt_data_end+0xff803458>
  803f90:	d8000e15 	stw	zero,56(sp)
  803f94:	003d7506 	br	80356c <__alt_data_end+0xff80356c>
  803f98:	b005883a 	mov	r2,r22
  803f9c:	003f4506 	br	803cb4 <__alt_data_end+0xff803cb4>
  803fa0:	dc000915 	stw	r16,36(sp)
  803fa4:	d9800a17 	ldw	r6,40(sp)
  803fa8:	d9400917 	ldw	r5,36(sp)
  803fac:	e009883a 	mov	r4,fp
  803fb0:	0806f980 	call	806f98 <__pow5mult>
  803fb4:	1021883a 	mov	r16,r2
  803fb8:	003f5a06 	br	803d24 <__alt_data_end+0xff803d24>
  803fbc:	01c00044 	movi	r7,1
  803fc0:	d9c00b15 	stw	r7,44(sp)
  803fc4:	d8802217 	ldw	r2,136(sp)
  803fc8:	0081280e 	bge	zero,r2,80446c <_dtoa_r+0x11b0>
  803fcc:	100d883a 	mov	r6,r2
  803fd0:	1021883a 	mov	r16,r2
  803fd4:	d8800c15 	stw	r2,48(sp)
  803fd8:	d8800615 	stw	r2,24(sp)
  803fdc:	003d8806 	br	803600 <__alt_data_end+0xff803600>
  803fe0:	d8800617 	ldw	r2,24(sp)
  803fe4:	00be9b16 	blt	zero,r2,803a54 <__alt_data_end+0xff803a54>
  803fe8:	10010f1e 	bne	r2,zero,804428 <_dtoa_r+0x116c>
  803fec:	880b883a 	mov	r5,r17
  803ff0:	000d883a 	mov	r6,zero
  803ff4:	01d00534 	movhi	r7,16404
  803ff8:	8009883a 	mov	r4,r16
  803ffc:	080c1640 	call	80c164 <__muldf3>
  804000:	900d883a 	mov	r6,r18
  804004:	980f883a 	mov	r7,r19
  804008:	1009883a 	mov	r4,r2
  80400c:	180b883a 	mov	r5,r3
  804010:	080bf940 	call	80bf94 <__gedf2>
  804014:	002b883a 	mov	r21,zero
  804018:	0023883a 	mov	r17,zero
  80401c:	1000bf16 	blt	r2,zero,80431c <_dtoa_r+0x1060>
  804020:	d9802217 	ldw	r6,136(sp)
  804024:	ddc00717 	ldw	r23,28(sp)
  804028:	018c303a 	nor	r6,zero,r6
  80402c:	d9800515 	stw	r6,20(sp)
  804030:	a80b883a 	mov	r5,r21
  804034:	e009883a 	mov	r4,fp
  804038:	0806a000 	call	806a00 <_Bfree>
  80403c:	883e4926 	beq	r17,zero,803964 <__alt_data_end+0xff803964>
  804040:	003fad06 	br	803ef8 <__alt_data_end+0xff803ef8>
  804044:	d9c01117 	ldw	r7,68(sp)
  804048:	3801bc26 	beq	r7,zero,80473c <_dtoa_r+0x1480>
  80404c:	10810cc4 	addi	r2,r2,1075
  804050:	dd400a17 	ldw	r21,40(sp)
  804054:	dd000817 	ldw	r20,32(sp)
  804058:	003f0a06 	br	803c84 <__alt_data_end+0xff803c84>
  80405c:	00800704 	movi	r2,28
  804060:	d9000817 	ldw	r4,32(sp)
  804064:	a0a9883a 	add	r20,r20,r2
  804068:	b0ad883a 	add	r22,r22,r2
  80406c:	2089883a 	add	r4,r4,r2
  804070:	d9000815 	stw	r4,32(sp)
  804074:	003f5106 	br	803dbc <__alt_data_end+0xff803dbc>
  804078:	d8c00317 	ldw	r3,12(sp)
  80407c:	b8c1fc0e 	bge	r23,r3,804870 <_dtoa_r+0x15b4>
  804080:	0027883a 	mov	r19,zero
  804084:	b805883a 	mov	r2,r23
  804088:	003f3e06 	br	803d84 <__alt_data_end+0xff803d84>
  80408c:	880b883a 	mov	r5,r17
  804090:	e009883a 	mov	r4,fp
  804094:	000f883a 	mov	r7,zero
  804098:	01800284 	movi	r6,10
  80409c:	0806a280 	call	806a28 <__multadd>
  8040a0:	d9000c17 	ldw	r4,48(sp)
  8040a4:	1023883a 	mov	r17,r2
  8040a8:	0102040e 	bge	zero,r4,8048bc <_dtoa_r+0x1600>
  8040ac:	d9000615 	stw	r4,24(sp)
  8040b0:	0500050e 	bge	zero,r20,8040c8 <_dtoa_r+0xe0c>
  8040b4:	880b883a 	mov	r5,r17
  8040b8:	a00d883a 	mov	r6,r20
  8040bc:	e009883a 	mov	r4,fp
  8040c0:	08070d80 	call	8070d8 <__lshift>
  8040c4:	1023883a 	mov	r17,r2
  8040c8:	9801241e 	bne	r19,zero,80455c <_dtoa_r+0x12a0>
  8040cc:	8829883a 	mov	r20,r17
  8040d0:	d9000617 	ldw	r4,24(sp)
  8040d4:	dcc00717 	ldw	r19,28(sp)
  8040d8:	9480004c 	andi	r18,r18,1
  8040dc:	20bfffc4 	addi	r2,r4,-1
  8040e0:	9885883a 	add	r2,r19,r2
  8040e4:	d8800415 	stw	r2,16(sp)
  8040e8:	dc800615 	stw	r18,24(sp)
  8040ec:	a80b883a 	mov	r5,r21
  8040f0:	8009883a 	mov	r4,r16
  8040f4:	08030bc0 	call	8030bc <quorem>
  8040f8:	880b883a 	mov	r5,r17
  8040fc:	8009883a 	mov	r4,r16
  804100:	102f883a 	mov	r23,r2
  804104:	08072200 	call	807220 <__mcmp>
  804108:	a80b883a 	mov	r5,r21
  80410c:	a00d883a 	mov	r6,r20
  804110:	e009883a 	mov	r4,fp
  804114:	102d883a 	mov	r22,r2
  804118:	08072800 	call	807280 <__mdiff>
  80411c:	1007883a 	mov	r3,r2
  804120:	10800317 	ldw	r2,12(r2)
  804124:	bc800c04 	addi	r18,r23,48
  804128:	180b883a 	mov	r5,r3
  80412c:	10004e1e 	bne	r2,zero,804268 <_dtoa_r+0xfac>
  804130:	8009883a 	mov	r4,r16
  804134:	d8c01615 	stw	r3,88(sp)
  804138:	08072200 	call	807220 <__mcmp>
  80413c:	d8c01617 	ldw	r3,88(sp)
  804140:	e009883a 	mov	r4,fp
  804144:	d8801615 	stw	r2,88(sp)
  804148:	180b883a 	mov	r5,r3
  80414c:	0806a000 	call	806a00 <_Bfree>
  804150:	d8801617 	ldw	r2,88(sp)
  804154:	1000041e 	bne	r2,zero,804168 <_dtoa_r+0xeac>
  804158:	d9800317 	ldw	r6,12(sp)
  80415c:	3000021e 	bne	r6,zero,804168 <_dtoa_r+0xeac>
  804160:	d8c00617 	ldw	r3,24(sp)
  804164:	18003726 	beq	r3,zero,804244 <_dtoa_r+0xf88>
  804168:	b0002016 	blt	r22,zero,8041ec <_dtoa_r+0xf30>
  80416c:	b000041e 	bne	r22,zero,804180 <_dtoa_r+0xec4>
  804170:	d9000317 	ldw	r4,12(sp)
  804174:	2000021e 	bne	r4,zero,804180 <_dtoa_r+0xec4>
  804178:	d8c00617 	ldw	r3,24(sp)
  80417c:	18001b26 	beq	r3,zero,8041ec <_dtoa_r+0xf30>
  804180:	00810716 	blt	zero,r2,8045a0 <_dtoa_r+0x12e4>
  804184:	d8c00417 	ldw	r3,16(sp)
  804188:	9d800044 	addi	r22,r19,1
  80418c:	9c800005 	stb	r18,0(r19)
  804190:	b02f883a 	mov	r23,r22
  804194:	98c10626 	beq	r19,r3,8045b0 <_dtoa_r+0x12f4>
  804198:	800b883a 	mov	r5,r16
  80419c:	000f883a 	mov	r7,zero
  8041a0:	01800284 	movi	r6,10
  8041a4:	e009883a 	mov	r4,fp
  8041a8:	0806a280 	call	806a28 <__multadd>
  8041ac:	1021883a 	mov	r16,r2
  8041b0:	000f883a 	mov	r7,zero
  8041b4:	01800284 	movi	r6,10
  8041b8:	880b883a 	mov	r5,r17
  8041bc:	e009883a 	mov	r4,fp
  8041c0:	8d002526 	beq	r17,r20,804258 <_dtoa_r+0xf9c>
  8041c4:	0806a280 	call	806a28 <__multadd>
  8041c8:	a00b883a 	mov	r5,r20
  8041cc:	000f883a 	mov	r7,zero
  8041d0:	01800284 	movi	r6,10
  8041d4:	e009883a 	mov	r4,fp
  8041d8:	1023883a 	mov	r17,r2
  8041dc:	0806a280 	call	806a28 <__multadd>
  8041e0:	1029883a 	mov	r20,r2
  8041e4:	b027883a 	mov	r19,r22
  8041e8:	003fc006 	br	8040ec <__alt_data_end+0xff8040ec>
  8041ec:	9011883a 	mov	r8,r18
  8041f0:	00800e0e 	bge	zero,r2,80422c <_dtoa_r+0xf70>
  8041f4:	800b883a 	mov	r5,r16
  8041f8:	01800044 	movi	r6,1
  8041fc:	e009883a 	mov	r4,fp
  804200:	da001715 	stw	r8,92(sp)
  804204:	08070d80 	call	8070d8 <__lshift>
  804208:	a80b883a 	mov	r5,r21
  80420c:	1009883a 	mov	r4,r2
  804210:	1021883a 	mov	r16,r2
  804214:	08072200 	call	807220 <__mcmp>
  804218:	da001717 	ldw	r8,92(sp)
  80421c:	0081960e 	bge	zero,r2,804878 <_dtoa_r+0x15bc>
  804220:	00800e44 	movi	r2,57
  804224:	40817026 	beq	r8,r2,8047e8 <_dtoa_r+0x152c>
  804228:	ba000c44 	addi	r8,r23,49
  80422c:	8825883a 	mov	r18,r17
  804230:	9dc00044 	addi	r23,r19,1
  804234:	9a000005 	stb	r8,0(r19)
  804238:	a023883a 	mov	r17,r20
  80423c:	dc000915 	stw	r16,36(sp)
  804240:	003f2406 	br	803ed4 <__alt_data_end+0xff803ed4>
  804244:	00800e44 	movi	r2,57
  804248:	9011883a 	mov	r8,r18
  80424c:	90816626 	beq	r18,r2,8047e8 <_dtoa_r+0x152c>
  804250:	05bff516 	blt	zero,r22,804228 <__alt_data_end+0xff804228>
  804254:	003ff506 	br	80422c <__alt_data_end+0xff80422c>
  804258:	0806a280 	call	806a28 <__multadd>
  80425c:	1023883a 	mov	r17,r2
  804260:	1029883a 	mov	r20,r2
  804264:	003fdf06 	br	8041e4 <__alt_data_end+0xff8041e4>
  804268:	e009883a 	mov	r4,fp
  80426c:	0806a000 	call	806a00 <_Bfree>
  804270:	00800044 	movi	r2,1
  804274:	003fbc06 	br	804168 <__alt_data_end+0xff804168>
  804278:	a80b883a 	mov	r5,r21
  80427c:	8009883a 	mov	r4,r16
  804280:	08072200 	call	807220 <__mcmp>
  804284:	103edb0e 	bge	r2,zero,803df4 <__alt_data_end+0xff803df4>
  804288:	800b883a 	mov	r5,r16
  80428c:	000f883a 	mov	r7,zero
  804290:	01800284 	movi	r6,10
  804294:	e009883a 	mov	r4,fp
  804298:	0806a280 	call	806a28 <__multadd>
  80429c:	1021883a 	mov	r16,r2
  8042a0:	d8800517 	ldw	r2,20(sp)
  8042a4:	d8c00b17 	ldw	r3,44(sp)
  8042a8:	10bfffc4 	addi	r2,r2,-1
  8042ac:	d8800515 	stw	r2,20(sp)
  8042b0:	183f761e 	bne	r3,zero,80408c <__alt_data_end+0xff80408c>
  8042b4:	d9000c17 	ldw	r4,48(sp)
  8042b8:	0101730e 	bge	zero,r4,804888 <_dtoa_r+0x15cc>
  8042bc:	d9000615 	stw	r4,24(sp)
  8042c0:	003ed006 	br	803e04 <__alt_data_end+0xff803e04>
  8042c4:	00800084 	movi	r2,2
  8042c8:	3081861e 	bne	r6,r2,8048e4 <_dtoa_r+0x1628>
  8042cc:	d8000b15 	stw	zero,44(sp)
  8042d0:	003f3c06 	br	803fc4 <__alt_data_end+0xff803fc4>
  8042d4:	dc000917 	ldw	r16,36(sp)
  8042d8:	003e9206 	br	803d24 <__alt_data_end+0xff803d24>
  8042dc:	d9c00317 	ldw	r7,12(sp)
  8042e0:	00800084 	movi	r2,2
  8042e4:	11fec50e 	bge	r2,r7,803dfc <__alt_data_end+0xff803dfc>
  8042e8:	d9000617 	ldw	r4,24(sp)
  8042ec:	20013c1e 	bne	r4,zero,8047e0 <_dtoa_r+0x1524>
  8042f0:	a80b883a 	mov	r5,r21
  8042f4:	000f883a 	mov	r7,zero
  8042f8:	01800144 	movi	r6,5
  8042fc:	e009883a 	mov	r4,fp
  804300:	0806a280 	call	806a28 <__multadd>
  804304:	100b883a 	mov	r5,r2
  804308:	8009883a 	mov	r4,r16
  80430c:	102b883a 	mov	r21,r2
  804310:	08072200 	call	807220 <__mcmp>
  804314:	dc000915 	stw	r16,36(sp)
  804318:	00bf410e 	bge	zero,r2,804020 <__alt_data_end+0xff804020>
  80431c:	d9c00717 	ldw	r7,28(sp)
  804320:	00800c44 	movi	r2,49
  804324:	38800005 	stb	r2,0(r7)
  804328:	d8800517 	ldw	r2,20(sp)
  80432c:	3dc00044 	addi	r23,r7,1
  804330:	10800044 	addi	r2,r2,1
  804334:	d8800515 	stw	r2,20(sp)
  804338:	003f3d06 	br	804030 <__alt_data_end+0xff804030>
  80433c:	d9800517 	ldw	r6,20(sp)
  804340:	d9c00717 	ldw	r7,28(sp)
  804344:	00800c44 	movi	r2,49
  804348:	31800044 	addi	r6,r6,1
  80434c:	d9800515 	stw	r6,20(sp)
  804350:	38800005 	stb	r2,0(r7)
  804354:	003edf06 	br	803ed4 <__alt_data_end+0xff803ed4>
  804358:	d8000b15 	stw	zero,44(sp)
  80435c:	003c9f06 	br	8035dc <__alt_data_end+0xff8035dc>
  804360:	903e7e1e 	bne	r18,zero,803d5c <__alt_data_end+0xff803d5c>
  804364:	00800434 	movhi	r2,16
  804368:	10bfffc4 	addi	r2,r2,-1
  80436c:	9884703a 	and	r2,r19,r2
  804370:	1000ea1e 	bne	r2,zero,80471c <_dtoa_r+0x1460>
  804374:	9cdffc2c 	andhi	r19,r19,32752
  804378:	9800e826 	beq	r19,zero,80471c <_dtoa_r+0x1460>
  80437c:	d9c00817 	ldw	r7,32(sp)
  804380:	b5800044 	addi	r22,r22,1
  804384:	04c00044 	movi	r19,1
  804388:	39c00044 	addi	r7,r7,1
  80438c:	d9c00815 	stw	r7,32(sp)
  804390:	d8800d17 	ldw	r2,52(sp)
  804394:	103e721e 	bne	r2,zero,803d60 <__alt_data_end+0xff803d60>
  804398:	00800044 	movi	r2,1
  80439c:	003e7906 	br	803d84 <__alt_data_end+0xff803d84>
  8043a0:	8009883a 	mov	r4,r16
  8043a4:	080d1f80 	call	80d1f8 <__floatsidf>
  8043a8:	d9800f17 	ldw	r6,60(sp)
  8043ac:	d9c01017 	ldw	r7,64(sp)
  8043b0:	1009883a 	mov	r4,r2
  8043b4:	180b883a 	mov	r5,r3
  8043b8:	080c1640 	call	80c164 <__muldf3>
  8043bc:	000d883a 	mov	r6,zero
  8043c0:	01d00734 	movhi	r7,16412
  8043c4:	1009883a 	mov	r4,r2
  8043c8:	180b883a 	mov	r5,r3
  8043cc:	080ad780 	call	80ad78 <__adddf3>
  8043d0:	047f3034 	movhi	r17,64704
  8043d4:	1021883a 	mov	r16,r2
  8043d8:	1c63883a 	add	r17,r3,r17
  8043dc:	d9000f17 	ldw	r4,60(sp)
  8043e0:	d9401017 	ldw	r5,64(sp)
  8043e4:	000d883a 	mov	r6,zero
  8043e8:	01d00534 	movhi	r7,16404
  8043ec:	080c87c0 	call	80c87c <__subdf3>
  8043f0:	800d883a 	mov	r6,r16
  8043f4:	880f883a 	mov	r7,r17
  8043f8:	1009883a 	mov	r4,r2
  8043fc:	180b883a 	mov	r5,r3
  804400:	102b883a 	mov	r21,r2
  804404:	1829883a 	mov	r20,r3
  804408:	080bf940 	call	80bf94 <__gedf2>
  80440c:	00806c16 	blt	zero,r2,8045c0 <_dtoa_r+0x1304>
  804410:	89e0003c 	xorhi	r7,r17,32768
  804414:	800d883a 	mov	r6,r16
  804418:	a809883a 	mov	r4,r21
  80441c:	a00b883a 	mov	r5,r20
  804420:	080c0700 	call	80c070 <__ledf2>
  804424:	103d7e0e 	bge	r2,zero,803a20 <__alt_data_end+0xff803a20>
  804428:	002b883a 	mov	r21,zero
  80442c:	0023883a 	mov	r17,zero
  804430:	003efb06 	br	804020 <__alt_data_end+0xff804020>
  804434:	d8800717 	ldw	r2,28(sp)
  804438:	003bd006 	br	80337c <__alt_data_end+0xff80337c>
  80443c:	d9000a17 	ldw	r4,40(sp)
  804440:	d9800d17 	ldw	r6,52(sp)
  804444:	dd400a15 	stw	r21,40(sp)
  804448:	a905c83a 	sub	r2,r21,r4
  80444c:	308d883a 	add	r6,r6,r2
  804450:	d9800d15 	stw	r6,52(sp)
  804454:	002b883a 	mov	r21,zero
  804458:	003e0606 	br	803c74 <__alt_data_end+0xff803c74>
  80445c:	9023883a 	mov	r17,r18
  804460:	9829883a 	mov	r20,r19
  804464:	04000084 	movi	r16,2
  804468:	003c9206 	br	8036b4 <__alt_data_end+0xff8036b4>
  80446c:	04000044 	movi	r16,1
  804470:	dc000c15 	stw	r16,48(sp)
  804474:	dc000615 	stw	r16,24(sp)
  804478:	dc002215 	stw	r16,136(sp)
  80447c:	e0001115 	stw	zero,68(fp)
  804480:	000b883a 	mov	r5,zero
  804484:	003c6906 	br	80362c <__alt_data_end+0xff80362c>
  804488:	3021883a 	mov	r16,r6
  80448c:	003ffb06 	br	80447c <__alt_data_end+0xff80447c>
  804490:	1000021e 	bne	r2,zero,80449c <_dtoa_r+0x11e0>
  804494:	4200004c 	andi	r8,r8,1
  804498:	403e7d1e 	bne	r8,zero,803e90 <__alt_data_end+0xff803e90>
  80449c:	01000c04 	movi	r4,48
  8044a0:	00000106 	br	8044a8 <_dtoa_r+0x11ec>
  8044a4:	102f883a 	mov	r23,r2
  8044a8:	b8bfffc4 	addi	r2,r23,-1
  8044ac:	10c00007 	ldb	r3,0(r2)
  8044b0:	193ffc26 	beq	r3,r4,8044a4 <__alt_data_end+0xff8044a4>
  8044b4:	003e8706 	br	803ed4 <__alt_data_end+0xff803ed4>
  8044b8:	d8800517 	ldw	r2,20(sp)
  8044bc:	00a3c83a 	sub	r17,zero,r2
  8044c0:	8800a426 	beq	r17,zero,804754 <_dtoa_r+0x1498>
  8044c4:	888003cc 	andi	r2,r17,15
  8044c8:	100490fa 	slli	r2,r2,3
  8044cc:	00c02074 	movhi	r3,129
  8044d0:	18ffbe04 	addi	r3,r3,-264
  8044d4:	1885883a 	add	r2,r3,r2
  8044d8:	11800017 	ldw	r6,0(r2)
  8044dc:	11c00117 	ldw	r7,4(r2)
  8044e0:	9009883a 	mov	r4,r18
  8044e4:	980b883a 	mov	r5,r19
  8044e8:	8823d13a 	srai	r17,r17,4
  8044ec:	080c1640 	call	80c164 <__muldf3>
  8044f0:	d8800f15 	stw	r2,60(sp)
  8044f4:	d8c01015 	stw	r3,64(sp)
  8044f8:	8800e826 	beq	r17,zero,80489c <_dtoa_r+0x15e0>
  8044fc:	05002074 	movhi	r20,129
  804500:	a53fb404 	addi	r20,r20,-304
  804504:	04000084 	movi	r16,2
  804508:	8980004c 	andi	r6,r17,1
  80450c:	1009883a 	mov	r4,r2
  804510:	8823d07a 	srai	r17,r17,1
  804514:	180b883a 	mov	r5,r3
  804518:	30000426 	beq	r6,zero,80452c <_dtoa_r+0x1270>
  80451c:	a1800017 	ldw	r6,0(r20)
  804520:	a1c00117 	ldw	r7,4(r20)
  804524:	84000044 	addi	r16,r16,1
  804528:	080c1640 	call	80c164 <__muldf3>
  80452c:	a5000204 	addi	r20,r20,8
  804530:	883ff51e 	bne	r17,zero,804508 <__alt_data_end+0xff804508>
  804534:	d8800f15 	stw	r2,60(sp)
  804538:	d8c01015 	stw	r3,64(sp)
  80453c:	003c7606 	br	803718 <__alt_data_end+0xff803718>
  804540:	00c00c04 	movi	r3,48
  804544:	10c00005 	stb	r3,0(r2)
  804548:	d8c00517 	ldw	r3,20(sp)
  80454c:	bd3fffc3 	ldbu	r20,-1(r23)
  804550:	18c00044 	addi	r3,r3,1
  804554:	d8c00515 	stw	r3,20(sp)
  804558:	003db906 	br	803c40 <__alt_data_end+0xff803c40>
  80455c:	89400117 	ldw	r5,4(r17)
  804560:	e009883a 	mov	r4,fp
  804564:	08069580 	call	806958 <_Balloc>
  804568:	89800417 	ldw	r6,16(r17)
  80456c:	89400304 	addi	r5,r17,12
  804570:	11000304 	addi	r4,r2,12
  804574:	31800084 	addi	r6,r6,2
  804578:	318d883a 	add	r6,r6,r6
  80457c:	318d883a 	add	r6,r6,r6
  804580:	1027883a 	mov	r19,r2
  804584:	080658c0 	call	80658c <memcpy>
  804588:	01800044 	movi	r6,1
  80458c:	980b883a 	mov	r5,r19
  804590:	e009883a 	mov	r4,fp
  804594:	08070d80 	call	8070d8 <__lshift>
  804598:	1029883a 	mov	r20,r2
  80459c:	003ecc06 	br	8040d0 <__alt_data_end+0xff8040d0>
  8045a0:	00800e44 	movi	r2,57
  8045a4:	90809026 	beq	r18,r2,8047e8 <_dtoa_r+0x152c>
  8045a8:	92000044 	addi	r8,r18,1
  8045ac:	003f1f06 	br	80422c <__alt_data_end+0xff80422c>
  8045b0:	9011883a 	mov	r8,r18
  8045b4:	8825883a 	mov	r18,r17
  8045b8:	a023883a 	mov	r17,r20
  8045bc:	003e2906 	br	803e64 <__alt_data_end+0xff803e64>
  8045c0:	002b883a 	mov	r21,zero
  8045c4:	0023883a 	mov	r17,zero
  8045c8:	003f5406 	br	80431c <__alt_data_end+0xff80431c>
  8045cc:	61bfffc4 	addi	r6,r12,-1
  8045d0:	300490fa 	slli	r2,r6,3
  8045d4:	00c02074 	movhi	r3,129
  8045d8:	18ffbe04 	addi	r3,r3,-264
  8045dc:	1885883a 	add	r2,r3,r2
  8045e0:	11000017 	ldw	r4,0(r2)
  8045e4:	11400117 	ldw	r5,4(r2)
  8045e8:	d8800717 	ldw	r2,28(sp)
  8045ec:	880f883a 	mov	r7,r17
  8045f0:	d9801215 	stw	r6,72(sp)
  8045f4:	800d883a 	mov	r6,r16
  8045f8:	db001615 	stw	r12,88(sp)
  8045fc:	15c00044 	addi	r23,r2,1
  804600:	080c1640 	call	80c164 <__muldf3>
  804604:	d9401017 	ldw	r5,64(sp)
  804608:	d9000f17 	ldw	r4,60(sp)
  80460c:	d8c01515 	stw	r3,84(sp)
  804610:	d8801415 	stw	r2,80(sp)
  804614:	080d1780 	call	80d178 <__fixdfsi>
  804618:	1009883a 	mov	r4,r2
  80461c:	1021883a 	mov	r16,r2
  804620:	080d1f80 	call	80d1f8 <__floatsidf>
  804624:	d9000f17 	ldw	r4,60(sp)
  804628:	d9401017 	ldw	r5,64(sp)
  80462c:	100d883a 	mov	r6,r2
  804630:	180f883a 	mov	r7,r3
  804634:	080c87c0 	call	80c87c <__subdf3>
  804638:	1829883a 	mov	r20,r3
  80463c:	d8c00717 	ldw	r3,28(sp)
  804640:	84000c04 	addi	r16,r16,48
  804644:	1023883a 	mov	r17,r2
  804648:	1c000005 	stb	r16,0(r3)
  80464c:	db001617 	ldw	r12,88(sp)
  804650:	00800044 	movi	r2,1
  804654:	60802226 	beq	r12,r2,8046e0 <_dtoa_r+0x1424>
  804658:	d9c00717 	ldw	r7,28(sp)
  80465c:	8805883a 	mov	r2,r17
  804660:	b82b883a 	mov	r21,r23
  804664:	3b19883a 	add	r12,r7,r12
  804668:	6023883a 	mov	r17,r12
  80466c:	a007883a 	mov	r3,r20
  804670:	dc800f15 	stw	r18,60(sp)
  804674:	000d883a 	mov	r6,zero
  804678:	01d00934 	movhi	r7,16420
  80467c:	1009883a 	mov	r4,r2
  804680:	180b883a 	mov	r5,r3
  804684:	080c1640 	call	80c164 <__muldf3>
  804688:	180b883a 	mov	r5,r3
  80468c:	1009883a 	mov	r4,r2
  804690:	1829883a 	mov	r20,r3
  804694:	1025883a 	mov	r18,r2
  804698:	080d1780 	call	80d178 <__fixdfsi>
  80469c:	1009883a 	mov	r4,r2
  8046a0:	1021883a 	mov	r16,r2
  8046a4:	080d1f80 	call	80d1f8 <__floatsidf>
  8046a8:	100d883a 	mov	r6,r2
  8046ac:	180f883a 	mov	r7,r3
  8046b0:	9009883a 	mov	r4,r18
  8046b4:	a00b883a 	mov	r5,r20
  8046b8:	84000c04 	addi	r16,r16,48
  8046bc:	080c87c0 	call	80c87c <__subdf3>
  8046c0:	ad400044 	addi	r21,r21,1
  8046c4:	ac3fffc5 	stb	r16,-1(r21)
  8046c8:	ac7fea1e 	bne	r21,r17,804674 <__alt_data_end+0xff804674>
  8046cc:	1023883a 	mov	r17,r2
  8046d0:	d8801217 	ldw	r2,72(sp)
  8046d4:	dc800f17 	ldw	r18,60(sp)
  8046d8:	1829883a 	mov	r20,r3
  8046dc:	b8af883a 	add	r23,r23,r2
  8046e0:	d9001417 	ldw	r4,80(sp)
  8046e4:	d9401517 	ldw	r5,84(sp)
  8046e8:	000d883a 	mov	r6,zero
  8046ec:	01cff834 	movhi	r7,16352
  8046f0:	080ad780 	call	80ad78 <__adddf3>
  8046f4:	880d883a 	mov	r6,r17
  8046f8:	a00f883a 	mov	r7,r20
  8046fc:	1009883a 	mov	r4,r2
  804700:	180b883a 	mov	r5,r3
  804704:	080c0700 	call	80c070 <__ledf2>
  804708:	10003e0e 	bge	r2,zero,804804 <_dtoa_r+0x1548>
  80470c:	d9001317 	ldw	r4,76(sp)
  804710:	bd3fffc3 	ldbu	r20,-1(r23)
  804714:	d9000515 	stw	r4,20(sp)
  804718:	003d3b06 	br	803c08 <__alt_data_end+0xff803c08>
  80471c:	0027883a 	mov	r19,zero
  804720:	003f1b06 	br	804390 <__alt_data_end+0xff804390>
  804724:	d8800817 	ldw	r2,32(sp)
  804728:	11e9c83a 	sub	r20,r2,r7
  80472c:	0005883a 	mov	r2,zero
  804730:	003d5406 	br	803c84 <__alt_data_end+0xff803c84>
  804734:	00800044 	movi	r2,1
  804738:	003dc706 	br	803e58 <__alt_data_end+0xff803e58>
  80473c:	d8c00217 	ldw	r3,8(sp)
  804740:	00800d84 	movi	r2,54
  804744:	dd400a17 	ldw	r21,40(sp)
  804748:	10c5c83a 	sub	r2,r2,r3
  80474c:	dd000817 	ldw	r20,32(sp)
  804750:	003d4c06 	br	803c84 <__alt_data_end+0xff803c84>
  804754:	dc800f15 	stw	r18,60(sp)
  804758:	dcc01015 	stw	r19,64(sp)
  80475c:	04000084 	movi	r16,2
  804760:	003bed06 	br	803718 <__alt_data_end+0xff803718>
  804764:	d9000617 	ldw	r4,24(sp)
  804768:	203f0d26 	beq	r4,zero,8043a0 <__alt_data_end+0xff8043a0>
  80476c:	d9800c17 	ldw	r6,48(sp)
  804770:	01bcab0e 	bge	zero,r6,803a20 <__alt_data_end+0xff803a20>
  804774:	d9401017 	ldw	r5,64(sp)
  804778:	d9000f17 	ldw	r4,60(sp)
  80477c:	000d883a 	mov	r6,zero
  804780:	01d00934 	movhi	r7,16420
  804784:	080c1640 	call	80c164 <__muldf3>
  804788:	81000044 	addi	r4,r16,1
  80478c:	d8800f15 	stw	r2,60(sp)
  804790:	d8c01015 	stw	r3,64(sp)
  804794:	080d1f80 	call	80d1f8 <__floatsidf>
  804798:	d9800f17 	ldw	r6,60(sp)
  80479c:	d9c01017 	ldw	r7,64(sp)
  8047a0:	1009883a 	mov	r4,r2
  8047a4:	180b883a 	mov	r5,r3
  8047a8:	080c1640 	call	80c164 <__muldf3>
  8047ac:	01d00734 	movhi	r7,16412
  8047b0:	000d883a 	mov	r6,zero
  8047b4:	1009883a 	mov	r4,r2
  8047b8:	180b883a 	mov	r5,r3
  8047bc:	080ad780 	call	80ad78 <__adddf3>
  8047c0:	d9c00517 	ldw	r7,20(sp)
  8047c4:	047f3034 	movhi	r17,64704
  8047c8:	1021883a 	mov	r16,r2
  8047cc:	39ffffc4 	addi	r7,r7,-1
  8047d0:	d9c01315 	stw	r7,76(sp)
  8047d4:	1c63883a 	add	r17,r3,r17
  8047d8:	db000c17 	ldw	r12,48(sp)
  8047dc:	003bea06 	br	803788 <__alt_data_end+0xff803788>
  8047e0:	dc000915 	stw	r16,36(sp)
  8047e4:	003e0e06 	br	804020 <__alt_data_end+0xff804020>
  8047e8:	01000e44 	movi	r4,57
  8047ec:	8825883a 	mov	r18,r17
  8047f0:	9dc00044 	addi	r23,r19,1
  8047f4:	99000005 	stb	r4,0(r19)
  8047f8:	a023883a 	mov	r17,r20
  8047fc:	dc000915 	stw	r16,36(sp)
  804800:	003da406 	br	803e94 <__alt_data_end+0xff803e94>
  804804:	d9801417 	ldw	r6,80(sp)
  804808:	d9c01517 	ldw	r7,84(sp)
  80480c:	0009883a 	mov	r4,zero
  804810:	014ff834 	movhi	r5,16352
  804814:	080c87c0 	call	80c87c <__subdf3>
  804818:	880d883a 	mov	r6,r17
  80481c:	a00f883a 	mov	r7,r20
  804820:	1009883a 	mov	r4,r2
  804824:	180b883a 	mov	r5,r3
  804828:	080bf940 	call	80bf94 <__gedf2>
  80482c:	00bc7c0e 	bge	zero,r2,803a20 <__alt_data_end+0xff803a20>
  804830:	01000c04 	movi	r4,48
  804834:	00000106 	br	80483c <_dtoa_r+0x1580>
  804838:	102f883a 	mov	r23,r2
  80483c:	b8bfffc4 	addi	r2,r23,-1
  804840:	10c00007 	ldb	r3,0(r2)
  804844:	193ffc26 	beq	r3,r4,804838 <__alt_data_end+0xff804838>
  804848:	d9801317 	ldw	r6,76(sp)
  80484c:	d9800515 	stw	r6,20(sp)
  804850:	003c4406 	br	803964 <__alt_data_end+0xff803964>
  804854:	d9801317 	ldw	r6,76(sp)
  804858:	d9800515 	stw	r6,20(sp)
  80485c:	003cea06 	br	803c08 <__alt_data_end+0xff803c08>
  804860:	dd800f17 	ldw	r22,60(sp)
  804864:	dcc01017 	ldw	r19,64(sp)
  804868:	dc801217 	ldw	r18,72(sp)
  80486c:	003c6c06 	br	803a20 <__alt_data_end+0xff803a20>
  804870:	903e031e 	bne	r18,zero,804080 <__alt_data_end+0xff804080>
  804874:	003ebb06 	br	804364 <__alt_data_end+0xff804364>
  804878:	103e6c1e 	bne	r2,zero,80422c <__alt_data_end+0xff80422c>
  80487c:	4080004c 	andi	r2,r8,1
  804880:	103e6a26 	beq	r2,zero,80422c <__alt_data_end+0xff80422c>
  804884:	003e6606 	br	804220 <__alt_data_end+0xff804220>
  804888:	d8c00317 	ldw	r3,12(sp)
  80488c:	00800084 	movi	r2,2
  804890:	10c02916 	blt	r2,r3,804938 <_dtoa_r+0x167c>
  804894:	d9000c17 	ldw	r4,48(sp)
  804898:	003e8806 	br	8042bc <__alt_data_end+0xff8042bc>
  80489c:	04000084 	movi	r16,2
  8048a0:	003b9d06 	br	803718 <__alt_data_end+0xff803718>
  8048a4:	d9001317 	ldw	r4,76(sp)
  8048a8:	d9000515 	stw	r4,20(sp)
  8048ac:	003cd606 	br	803c08 <__alt_data_end+0xff803c08>
  8048b0:	d8801317 	ldw	r2,76(sp)
  8048b4:	d8800515 	stw	r2,20(sp)
  8048b8:	003c2a06 	br	803964 <__alt_data_end+0xff803964>
  8048bc:	d9800317 	ldw	r6,12(sp)
  8048c0:	00800084 	movi	r2,2
  8048c4:	11801516 	blt	r2,r6,80491c <_dtoa_r+0x1660>
  8048c8:	d9c00c17 	ldw	r7,48(sp)
  8048cc:	d9c00615 	stw	r7,24(sp)
  8048d0:	003df706 	br	8040b0 <__alt_data_end+0xff8040b0>
  8048d4:	193d3926 	beq	r3,r4,803dbc <__alt_data_end+0xff803dbc>
  8048d8:	00c00f04 	movi	r3,60
  8048dc:	1885c83a 	sub	r2,r3,r2
  8048e0:	003ddf06 	br	804060 <__alt_data_end+0xff804060>
  8048e4:	e009883a 	mov	r4,fp
  8048e8:	e0001115 	stw	zero,68(fp)
  8048ec:	000b883a 	mov	r5,zero
  8048f0:	08069580 	call	806958 <_Balloc>
  8048f4:	d8800715 	stw	r2,28(sp)
  8048f8:	d8c00717 	ldw	r3,28(sp)
  8048fc:	00bfffc4 	movi	r2,-1
  804900:	01000044 	movi	r4,1
  804904:	d8800c15 	stw	r2,48(sp)
  804908:	e0c01015 	stw	r3,64(fp)
  80490c:	d9000b15 	stw	r4,44(sp)
  804910:	d8800615 	stw	r2,24(sp)
  804914:	d8002215 	stw	zero,136(sp)
  804918:	003c4106 	br	803a20 <__alt_data_end+0xff803a20>
  80491c:	d8c00c17 	ldw	r3,48(sp)
  804920:	d8c00615 	stw	r3,24(sp)
  804924:	003e7006 	br	8042e8 <__alt_data_end+0xff8042e8>
  804928:	04400044 	movi	r17,1
  80492c:	003b2006 	br	8035b0 <__alt_data_end+0xff8035b0>
  804930:	000b883a 	mov	r5,zero
  804934:	003b3d06 	br	80362c <__alt_data_end+0xff80362c>
  804938:	d8800c17 	ldw	r2,48(sp)
  80493c:	d8800615 	stw	r2,24(sp)
  804940:	003e6906 	br	8042e8 <__alt_data_end+0xff8042e8>

00804944 <__sflush_r>:
  804944:	2880030b 	ldhu	r2,12(r5)
  804948:	defffb04 	addi	sp,sp,-20
  80494c:	dcc00315 	stw	r19,12(sp)
  804950:	dc400115 	stw	r17,4(sp)
  804954:	dfc00415 	stw	ra,16(sp)
  804958:	dc800215 	stw	r18,8(sp)
  80495c:	dc000015 	stw	r16,0(sp)
  804960:	10c0020c 	andi	r3,r2,8
  804964:	2823883a 	mov	r17,r5
  804968:	2027883a 	mov	r19,r4
  80496c:	1800311e 	bne	r3,zero,804a34 <__sflush_r+0xf0>
  804970:	28c00117 	ldw	r3,4(r5)
  804974:	10820014 	ori	r2,r2,2048
  804978:	2880030d 	sth	r2,12(r5)
  80497c:	00c04b0e 	bge	zero,r3,804aac <__sflush_r+0x168>
  804980:	8a000a17 	ldw	r8,40(r17)
  804984:	40002326 	beq	r8,zero,804a14 <__sflush_r+0xd0>
  804988:	9c000017 	ldw	r16,0(r19)
  80498c:	10c4000c 	andi	r3,r2,4096
  804990:	98000015 	stw	zero,0(r19)
  804994:	18004826 	beq	r3,zero,804ab8 <__sflush_r+0x174>
  804998:	89801417 	ldw	r6,80(r17)
  80499c:	10c0010c 	andi	r3,r2,4
  8049a0:	18000626 	beq	r3,zero,8049bc <__sflush_r+0x78>
  8049a4:	88c00117 	ldw	r3,4(r17)
  8049a8:	88800c17 	ldw	r2,48(r17)
  8049ac:	30cdc83a 	sub	r6,r6,r3
  8049b0:	10000226 	beq	r2,zero,8049bc <__sflush_r+0x78>
  8049b4:	88800f17 	ldw	r2,60(r17)
  8049b8:	308dc83a 	sub	r6,r6,r2
  8049bc:	89400717 	ldw	r5,28(r17)
  8049c0:	000f883a 	mov	r7,zero
  8049c4:	9809883a 	mov	r4,r19
  8049c8:	403ee83a 	callr	r8
  8049cc:	00ffffc4 	movi	r3,-1
  8049d0:	10c04426 	beq	r2,r3,804ae4 <__sflush_r+0x1a0>
  8049d4:	88c0030b 	ldhu	r3,12(r17)
  8049d8:	89000417 	ldw	r4,16(r17)
  8049dc:	88000115 	stw	zero,4(r17)
  8049e0:	197dffcc 	andi	r5,r3,63487
  8049e4:	8940030d 	sth	r5,12(r17)
  8049e8:	89000015 	stw	r4,0(r17)
  8049ec:	18c4000c 	andi	r3,r3,4096
  8049f0:	18002c1e 	bne	r3,zero,804aa4 <__sflush_r+0x160>
  8049f4:	89400c17 	ldw	r5,48(r17)
  8049f8:	9c000015 	stw	r16,0(r19)
  8049fc:	28000526 	beq	r5,zero,804a14 <__sflush_r+0xd0>
  804a00:	88801004 	addi	r2,r17,64
  804a04:	28800226 	beq	r5,r2,804a10 <__sflush_r+0xcc>
  804a08:	9809883a 	mov	r4,r19
  804a0c:	08050b00 	call	8050b0 <_free_r>
  804a10:	88000c15 	stw	zero,48(r17)
  804a14:	0005883a 	mov	r2,zero
  804a18:	dfc00417 	ldw	ra,16(sp)
  804a1c:	dcc00317 	ldw	r19,12(sp)
  804a20:	dc800217 	ldw	r18,8(sp)
  804a24:	dc400117 	ldw	r17,4(sp)
  804a28:	dc000017 	ldw	r16,0(sp)
  804a2c:	dec00504 	addi	sp,sp,20
  804a30:	f800283a 	ret
  804a34:	2c800417 	ldw	r18,16(r5)
  804a38:	903ff626 	beq	r18,zero,804a14 <__alt_data_end+0xff804a14>
  804a3c:	2c000017 	ldw	r16,0(r5)
  804a40:	108000cc 	andi	r2,r2,3
  804a44:	2c800015 	stw	r18,0(r5)
  804a48:	84a1c83a 	sub	r16,r16,r18
  804a4c:	1000131e 	bne	r2,zero,804a9c <__sflush_r+0x158>
  804a50:	28800517 	ldw	r2,20(r5)
  804a54:	88800215 	stw	r2,8(r17)
  804a58:	04000316 	blt	zero,r16,804a68 <__sflush_r+0x124>
  804a5c:	003fed06 	br	804a14 <__alt_data_end+0xff804a14>
  804a60:	90a5883a 	add	r18,r18,r2
  804a64:	043feb0e 	bge	zero,r16,804a14 <__alt_data_end+0xff804a14>
  804a68:	88800917 	ldw	r2,36(r17)
  804a6c:	89400717 	ldw	r5,28(r17)
  804a70:	800f883a 	mov	r7,r16
  804a74:	900d883a 	mov	r6,r18
  804a78:	9809883a 	mov	r4,r19
  804a7c:	103ee83a 	callr	r2
  804a80:	80a1c83a 	sub	r16,r16,r2
  804a84:	00bff616 	blt	zero,r2,804a60 <__alt_data_end+0xff804a60>
  804a88:	88c0030b 	ldhu	r3,12(r17)
  804a8c:	00bfffc4 	movi	r2,-1
  804a90:	18c01014 	ori	r3,r3,64
  804a94:	88c0030d 	sth	r3,12(r17)
  804a98:	003fdf06 	br	804a18 <__alt_data_end+0xff804a18>
  804a9c:	0005883a 	mov	r2,zero
  804aa0:	003fec06 	br	804a54 <__alt_data_end+0xff804a54>
  804aa4:	88801415 	stw	r2,80(r17)
  804aa8:	003fd206 	br	8049f4 <__alt_data_end+0xff8049f4>
  804aac:	28c00f17 	ldw	r3,60(r5)
  804ab0:	00ffb316 	blt	zero,r3,804980 <__alt_data_end+0xff804980>
  804ab4:	003fd706 	br	804a14 <__alt_data_end+0xff804a14>
  804ab8:	89400717 	ldw	r5,28(r17)
  804abc:	000d883a 	mov	r6,zero
  804ac0:	01c00044 	movi	r7,1
  804ac4:	9809883a 	mov	r4,r19
  804ac8:	403ee83a 	callr	r8
  804acc:	100d883a 	mov	r6,r2
  804ad0:	00bfffc4 	movi	r2,-1
  804ad4:	30801426 	beq	r6,r2,804b28 <__sflush_r+0x1e4>
  804ad8:	8880030b 	ldhu	r2,12(r17)
  804adc:	8a000a17 	ldw	r8,40(r17)
  804ae0:	003fae06 	br	80499c <__alt_data_end+0xff80499c>
  804ae4:	98c00017 	ldw	r3,0(r19)
  804ae8:	183fba26 	beq	r3,zero,8049d4 <__alt_data_end+0xff8049d4>
  804aec:	01000744 	movi	r4,29
  804af0:	19000626 	beq	r3,r4,804b0c <__sflush_r+0x1c8>
  804af4:	01000584 	movi	r4,22
  804af8:	19000426 	beq	r3,r4,804b0c <__sflush_r+0x1c8>
  804afc:	88c0030b 	ldhu	r3,12(r17)
  804b00:	18c01014 	ori	r3,r3,64
  804b04:	88c0030d 	sth	r3,12(r17)
  804b08:	003fc306 	br	804a18 <__alt_data_end+0xff804a18>
  804b0c:	8880030b 	ldhu	r2,12(r17)
  804b10:	88c00417 	ldw	r3,16(r17)
  804b14:	88000115 	stw	zero,4(r17)
  804b18:	10bdffcc 	andi	r2,r2,63487
  804b1c:	8880030d 	sth	r2,12(r17)
  804b20:	88c00015 	stw	r3,0(r17)
  804b24:	003fb306 	br	8049f4 <__alt_data_end+0xff8049f4>
  804b28:	98800017 	ldw	r2,0(r19)
  804b2c:	103fea26 	beq	r2,zero,804ad8 <__alt_data_end+0xff804ad8>
  804b30:	00c00744 	movi	r3,29
  804b34:	10c00226 	beq	r2,r3,804b40 <__sflush_r+0x1fc>
  804b38:	00c00584 	movi	r3,22
  804b3c:	10c0031e 	bne	r2,r3,804b4c <__sflush_r+0x208>
  804b40:	9c000015 	stw	r16,0(r19)
  804b44:	0005883a 	mov	r2,zero
  804b48:	003fb306 	br	804a18 <__alt_data_end+0xff804a18>
  804b4c:	88c0030b 	ldhu	r3,12(r17)
  804b50:	3005883a 	mov	r2,r6
  804b54:	18c01014 	ori	r3,r3,64
  804b58:	88c0030d 	sth	r3,12(r17)
  804b5c:	003fae06 	br	804a18 <__alt_data_end+0xff804a18>

00804b60 <_fflush_r>:
  804b60:	defffd04 	addi	sp,sp,-12
  804b64:	dc000115 	stw	r16,4(sp)
  804b68:	dfc00215 	stw	ra,8(sp)
  804b6c:	2021883a 	mov	r16,r4
  804b70:	20000226 	beq	r4,zero,804b7c <_fflush_r+0x1c>
  804b74:	20800e17 	ldw	r2,56(r4)
  804b78:	10000c26 	beq	r2,zero,804bac <_fflush_r+0x4c>
  804b7c:	2880030f 	ldh	r2,12(r5)
  804b80:	1000051e 	bne	r2,zero,804b98 <_fflush_r+0x38>
  804b84:	0005883a 	mov	r2,zero
  804b88:	dfc00217 	ldw	ra,8(sp)
  804b8c:	dc000117 	ldw	r16,4(sp)
  804b90:	dec00304 	addi	sp,sp,12
  804b94:	f800283a 	ret
  804b98:	8009883a 	mov	r4,r16
  804b9c:	dfc00217 	ldw	ra,8(sp)
  804ba0:	dc000117 	ldw	r16,4(sp)
  804ba4:	dec00304 	addi	sp,sp,12
  804ba8:	08049441 	jmpi	804944 <__sflush_r>
  804bac:	d9400015 	stw	r5,0(sp)
  804bb0:	0804f3c0 	call	804f3c <__sinit>
  804bb4:	d9400017 	ldw	r5,0(sp)
  804bb8:	003ff006 	br	804b7c <__alt_data_end+0xff804b7c>

00804bbc <fflush>:
  804bbc:	20000526 	beq	r4,zero,804bd4 <fflush+0x18>
  804bc0:	00802074 	movhi	r2,129
  804bc4:	1086af04 	addi	r2,r2,6844
  804bc8:	200b883a 	mov	r5,r4
  804bcc:	11000017 	ldw	r4,0(r2)
  804bd0:	0804b601 	jmpi	804b60 <_fflush_r>
  804bd4:	00802074 	movhi	r2,129
  804bd8:	1086ae04 	addi	r2,r2,6840
  804bdc:	11000017 	ldw	r4,0(r2)
  804be0:	01402034 	movhi	r5,128
  804be4:	2952d804 	addi	r5,r5,19296
  804be8:	08059401 	jmpi	805940 <_fwalk_reent>

00804bec <__fp_unlock>:
  804bec:	0005883a 	mov	r2,zero
  804bf0:	f800283a 	ret

00804bf4 <_cleanup_r>:
  804bf4:	01402074 	movhi	r5,129
  804bf8:	29665604 	addi	r5,r5,-26280
  804bfc:	08059401 	jmpi	805940 <_fwalk_reent>

00804c00 <__sinit.part.1>:
  804c00:	defff704 	addi	sp,sp,-36
  804c04:	00c02034 	movhi	r3,128
  804c08:	dfc00815 	stw	ra,32(sp)
  804c0c:	ddc00715 	stw	r23,28(sp)
  804c10:	dd800615 	stw	r22,24(sp)
  804c14:	dd400515 	stw	r21,20(sp)
  804c18:	dd000415 	stw	r20,16(sp)
  804c1c:	dcc00315 	stw	r19,12(sp)
  804c20:	dc800215 	stw	r18,8(sp)
  804c24:	dc400115 	stw	r17,4(sp)
  804c28:	dc000015 	stw	r16,0(sp)
  804c2c:	18d2fd04 	addi	r3,r3,19444
  804c30:	24000117 	ldw	r16,4(r4)
  804c34:	20c00f15 	stw	r3,60(r4)
  804c38:	2080bb04 	addi	r2,r4,748
  804c3c:	00c000c4 	movi	r3,3
  804c40:	20c0b915 	stw	r3,740(r4)
  804c44:	2080ba15 	stw	r2,744(r4)
  804c48:	2000b815 	stw	zero,736(r4)
  804c4c:	05c00204 	movi	r23,8
  804c50:	00800104 	movi	r2,4
  804c54:	2025883a 	mov	r18,r4
  804c58:	b80d883a 	mov	r6,r23
  804c5c:	81001704 	addi	r4,r16,92
  804c60:	000b883a 	mov	r5,zero
  804c64:	80000015 	stw	zero,0(r16)
  804c68:	80000115 	stw	zero,4(r16)
  804c6c:	80000215 	stw	zero,8(r16)
  804c70:	8080030d 	sth	r2,12(r16)
  804c74:	80001915 	stw	zero,100(r16)
  804c78:	8000038d 	sth	zero,14(r16)
  804c7c:	80000415 	stw	zero,16(r16)
  804c80:	80000515 	stw	zero,20(r16)
  804c84:	80000615 	stw	zero,24(r16)
  804c88:	08068300 	call	806830 <memset>
  804c8c:	05802034 	movhi	r22,128
  804c90:	94400217 	ldw	r17,8(r18)
  804c94:	05402034 	movhi	r21,128
  804c98:	05002074 	movhi	r20,129
  804c9c:	04c02074 	movhi	r19,129
  804ca0:	b59fe004 	addi	r22,r22,32640
  804ca4:	ad5ff704 	addi	r21,r21,32732
  804ca8:	a5201604 	addi	r20,r20,-32680
  804cac:	9ce02d04 	addi	r19,r19,-32588
  804cb0:	85800815 	stw	r22,32(r16)
  804cb4:	85400915 	stw	r21,36(r16)
  804cb8:	85000a15 	stw	r20,40(r16)
  804cbc:	84c00b15 	stw	r19,44(r16)
  804cc0:	84000715 	stw	r16,28(r16)
  804cc4:	00800284 	movi	r2,10
  804cc8:	8880030d 	sth	r2,12(r17)
  804ccc:	00800044 	movi	r2,1
  804cd0:	b80d883a 	mov	r6,r23
  804cd4:	89001704 	addi	r4,r17,92
  804cd8:	000b883a 	mov	r5,zero
  804cdc:	88000015 	stw	zero,0(r17)
  804ce0:	88000115 	stw	zero,4(r17)
  804ce4:	88000215 	stw	zero,8(r17)
  804ce8:	88001915 	stw	zero,100(r17)
  804cec:	8880038d 	sth	r2,14(r17)
  804cf0:	88000415 	stw	zero,16(r17)
  804cf4:	88000515 	stw	zero,20(r17)
  804cf8:	88000615 	stw	zero,24(r17)
  804cfc:	08068300 	call	806830 <memset>
  804d00:	94000317 	ldw	r16,12(r18)
  804d04:	00800484 	movi	r2,18
  804d08:	8c400715 	stw	r17,28(r17)
  804d0c:	8d800815 	stw	r22,32(r17)
  804d10:	8d400915 	stw	r21,36(r17)
  804d14:	8d000a15 	stw	r20,40(r17)
  804d18:	8cc00b15 	stw	r19,44(r17)
  804d1c:	8080030d 	sth	r2,12(r16)
  804d20:	00800084 	movi	r2,2
  804d24:	80000015 	stw	zero,0(r16)
  804d28:	80000115 	stw	zero,4(r16)
  804d2c:	80000215 	stw	zero,8(r16)
  804d30:	80001915 	stw	zero,100(r16)
  804d34:	8080038d 	sth	r2,14(r16)
  804d38:	80000415 	stw	zero,16(r16)
  804d3c:	80000515 	stw	zero,20(r16)
  804d40:	80000615 	stw	zero,24(r16)
  804d44:	b80d883a 	mov	r6,r23
  804d48:	000b883a 	mov	r5,zero
  804d4c:	81001704 	addi	r4,r16,92
  804d50:	08068300 	call	806830 <memset>
  804d54:	00800044 	movi	r2,1
  804d58:	84000715 	stw	r16,28(r16)
  804d5c:	85800815 	stw	r22,32(r16)
  804d60:	85400915 	stw	r21,36(r16)
  804d64:	85000a15 	stw	r20,40(r16)
  804d68:	84c00b15 	stw	r19,44(r16)
  804d6c:	90800e15 	stw	r2,56(r18)
  804d70:	dfc00817 	ldw	ra,32(sp)
  804d74:	ddc00717 	ldw	r23,28(sp)
  804d78:	dd800617 	ldw	r22,24(sp)
  804d7c:	dd400517 	ldw	r21,20(sp)
  804d80:	dd000417 	ldw	r20,16(sp)
  804d84:	dcc00317 	ldw	r19,12(sp)
  804d88:	dc800217 	ldw	r18,8(sp)
  804d8c:	dc400117 	ldw	r17,4(sp)
  804d90:	dc000017 	ldw	r16,0(sp)
  804d94:	dec00904 	addi	sp,sp,36
  804d98:	f800283a 	ret

00804d9c <__fp_lock>:
  804d9c:	0005883a 	mov	r2,zero
  804da0:	f800283a 	ret

00804da4 <__sfmoreglue>:
  804da4:	defffc04 	addi	sp,sp,-16
  804da8:	dc400115 	stw	r17,4(sp)
  804dac:	2c7fffc4 	addi	r17,r5,-1
  804db0:	8c401a24 	muli	r17,r17,104
  804db4:	dc800215 	stw	r18,8(sp)
  804db8:	2825883a 	mov	r18,r5
  804dbc:	89401d04 	addi	r5,r17,116
  804dc0:	dc000015 	stw	r16,0(sp)
  804dc4:	dfc00315 	stw	ra,12(sp)
  804dc8:	0805c9c0 	call	805c9c <_malloc_r>
  804dcc:	1021883a 	mov	r16,r2
  804dd0:	10000726 	beq	r2,zero,804df0 <__sfmoreglue+0x4c>
  804dd4:	11000304 	addi	r4,r2,12
  804dd8:	10000015 	stw	zero,0(r2)
  804ddc:	14800115 	stw	r18,4(r2)
  804de0:	11000215 	stw	r4,8(r2)
  804de4:	89801a04 	addi	r6,r17,104
  804de8:	000b883a 	mov	r5,zero
  804dec:	08068300 	call	806830 <memset>
  804df0:	8005883a 	mov	r2,r16
  804df4:	dfc00317 	ldw	ra,12(sp)
  804df8:	dc800217 	ldw	r18,8(sp)
  804dfc:	dc400117 	ldw	r17,4(sp)
  804e00:	dc000017 	ldw	r16,0(sp)
  804e04:	dec00404 	addi	sp,sp,16
  804e08:	f800283a 	ret

00804e0c <__sfp>:
  804e0c:	defffb04 	addi	sp,sp,-20
  804e10:	dc000015 	stw	r16,0(sp)
  804e14:	04002074 	movhi	r16,129
  804e18:	8406ae04 	addi	r16,r16,6840
  804e1c:	dcc00315 	stw	r19,12(sp)
  804e20:	2027883a 	mov	r19,r4
  804e24:	81000017 	ldw	r4,0(r16)
  804e28:	dfc00415 	stw	ra,16(sp)
  804e2c:	dc800215 	stw	r18,8(sp)
  804e30:	20800e17 	ldw	r2,56(r4)
  804e34:	dc400115 	stw	r17,4(sp)
  804e38:	1000021e 	bne	r2,zero,804e44 <__sfp+0x38>
  804e3c:	0804c000 	call	804c00 <__sinit.part.1>
  804e40:	81000017 	ldw	r4,0(r16)
  804e44:	2480b804 	addi	r18,r4,736
  804e48:	047fffc4 	movi	r17,-1
  804e4c:	91000117 	ldw	r4,4(r18)
  804e50:	94000217 	ldw	r16,8(r18)
  804e54:	213fffc4 	addi	r4,r4,-1
  804e58:	20000a16 	blt	r4,zero,804e84 <__sfp+0x78>
  804e5c:	8080030f 	ldh	r2,12(r16)
  804e60:	10000c26 	beq	r2,zero,804e94 <__sfp+0x88>
  804e64:	80c01d04 	addi	r3,r16,116
  804e68:	00000206 	br	804e74 <__sfp+0x68>
  804e6c:	18bfe60f 	ldh	r2,-104(r3)
  804e70:	10000826 	beq	r2,zero,804e94 <__sfp+0x88>
  804e74:	213fffc4 	addi	r4,r4,-1
  804e78:	1c3ffd04 	addi	r16,r3,-12
  804e7c:	18c01a04 	addi	r3,r3,104
  804e80:	247ffa1e 	bne	r4,r17,804e6c <__alt_data_end+0xff804e6c>
  804e84:	90800017 	ldw	r2,0(r18)
  804e88:	10001d26 	beq	r2,zero,804f00 <__sfp+0xf4>
  804e8c:	1025883a 	mov	r18,r2
  804e90:	003fee06 	br	804e4c <__alt_data_end+0xff804e4c>
  804e94:	00bfffc4 	movi	r2,-1
  804e98:	8080038d 	sth	r2,14(r16)
  804e9c:	00800044 	movi	r2,1
  804ea0:	8080030d 	sth	r2,12(r16)
  804ea4:	80001915 	stw	zero,100(r16)
  804ea8:	80000015 	stw	zero,0(r16)
  804eac:	80000215 	stw	zero,8(r16)
  804eb0:	80000115 	stw	zero,4(r16)
  804eb4:	80000415 	stw	zero,16(r16)
  804eb8:	80000515 	stw	zero,20(r16)
  804ebc:	80000615 	stw	zero,24(r16)
  804ec0:	01800204 	movi	r6,8
  804ec4:	000b883a 	mov	r5,zero
  804ec8:	81001704 	addi	r4,r16,92
  804ecc:	08068300 	call	806830 <memset>
  804ed0:	8005883a 	mov	r2,r16
  804ed4:	80000c15 	stw	zero,48(r16)
  804ed8:	80000d15 	stw	zero,52(r16)
  804edc:	80001115 	stw	zero,68(r16)
  804ee0:	80001215 	stw	zero,72(r16)
  804ee4:	dfc00417 	ldw	ra,16(sp)
  804ee8:	dcc00317 	ldw	r19,12(sp)
  804eec:	dc800217 	ldw	r18,8(sp)
  804ef0:	dc400117 	ldw	r17,4(sp)
  804ef4:	dc000017 	ldw	r16,0(sp)
  804ef8:	dec00504 	addi	sp,sp,20
  804efc:	f800283a 	ret
  804f00:	01400104 	movi	r5,4
  804f04:	9809883a 	mov	r4,r19
  804f08:	0804da40 	call	804da4 <__sfmoreglue>
  804f0c:	90800015 	stw	r2,0(r18)
  804f10:	103fde1e 	bne	r2,zero,804e8c <__alt_data_end+0xff804e8c>
  804f14:	00800304 	movi	r2,12
  804f18:	98800015 	stw	r2,0(r19)
  804f1c:	0005883a 	mov	r2,zero
  804f20:	003ff006 	br	804ee4 <__alt_data_end+0xff804ee4>

00804f24 <_cleanup>:
  804f24:	00802074 	movhi	r2,129
  804f28:	1086ae04 	addi	r2,r2,6840
  804f2c:	11000017 	ldw	r4,0(r2)
  804f30:	01402074 	movhi	r5,129
  804f34:	29665604 	addi	r5,r5,-26280
  804f38:	08059401 	jmpi	805940 <_fwalk_reent>

00804f3c <__sinit>:
  804f3c:	20800e17 	ldw	r2,56(r4)
  804f40:	10000126 	beq	r2,zero,804f48 <__sinit+0xc>
  804f44:	f800283a 	ret
  804f48:	0804c001 	jmpi	804c00 <__sinit.part.1>

00804f4c <__sfp_lock_acquire>:
  804f4c:	f800283a 	ret

00804f50 <__sfp_lock_release>:
  804f50:	f800283a 	ret

00804f54 <__sinit_lock_acquire>:
  804f54:	f800283a 	ret

00804f58 <__sinit_lock_release>:
  804f58:	f800283a 	ret

00804f5c <__fp_lock_all>:
  804f5c:	00802074 	movhi	r2,129
  804f60:	1086af04 	addi	r2,r2,6844
  804f64:	11000017 	ldw	r4,0(r2)
  804f68:	01402034 	movhi	r5,128
  804f6c:	29536704 	addi	r5,r5,19868
  804f70:	080587c1 	jmpi	80587c <_fwalk>

00804f74 <__fp_unlock_all>:
  804f74:	00802074 	movhi	r2,129
  804f78:	1086af04 	addi	r2,r2,6844
  804f7c:	11000017 	ldw	r4,0(r2)
  804f80:	01402034 	movhi	r5,128
  804f84:	2952fb04 	addi	r5,r5,19436
  804f88:	080587c1 	jmpi	80587c <_fwalk>

00804f8c <_malloc_trim_r>:
  804f8c:	defffb04 	addi	sp,sp,-20
  804f90:	dcc00315 	stw	r19,12(sp)
  804f94:	04c02074 	movhi	r19,129
  804f98:	dc800215 	stw	r18,8(sp)
  804f9c:	dc400115 	stw	r17,4(sp)
  804fa0:	dc000015 	stw	r16,0(sp)
  804fa4:	dfc00415 	stw	ra,16(sp)
  804fa8:	2821883a 	mov	r16,r5
  804fac:	9cc12a04 	addi	r19,r19,1192
  804fb0:	2025883a 	mov	r18,r4
  804fb4:	080d8f80 	call	80d8f8 <__malloc_lock>
  804fb8:	98800217 	ldw	r2,8(r19)
  804fbc:	14400117 	ldw	r17,4(r2)
  804fc0:	00bfff04 	movi	r2,-4
  804fc4:	88a2703a 	and	r17,r17,r2
  804fc8:	8c21c83a 	sub	r16,r17,r16
  804fcc:	8403fbc4 	addi	r16,r16,4079
  804fd0:	8020d33a 	srli	r16,r16,12
  804fd4:	0083ffc4 	movi	r2,4095
  804fd8:	843fffc4 	addi	r16,r16,-1
  804fdc:	8020933a 	slli	r16,r16,12
  804fe0:	1400060e 	bge	r2,r16,804ffc <_malloc_trim_r+0x70>
  804fe4:	000b883a 	mov	r5,zero
  804fe8:	9009883a 	mov	r4,r18
  804fec:	0807f2c0 	call	807f2c <_sbrk_r>
  804ff0:	98c00217 	ldw	r3,8(r19)
  804ff4:	1c47883a 	add	r3,r3,r17
  804ff8:	10c00a26 	beq	r2,r3,805024 <_malloc_trim_r+0x98>
  804ffc:	9009883a 	mov	r4,r18
  805000:	080d91c0 	call	80d91c <__malloc_unlock>
  805004:	0005883a 	mov	r2,zero
  805008:	dfc00417 	ldw	ra,16(sp)
  80500c:	dcc00317 	ldw	r19,12(sp)
  805010:	dc800217 	ldw	r18,8(sp)
  805014:	dc400117 	ldw	r17,4(sp)
  805018:	dc000017 	ldw	r16,0(sp)
  80501c:	dec00504 	addi	sp,sp,20
  805020:	f800283a 	ret
  805024:	040bc83a 	sub	r5,zero,r16
  805028:	9009883a 	mov	r4,r18
  80502c:	0807f2c0 	call	807f2c <_sbrk_r>
  805030:	00ffffc4 	movi	r3,-1
  805034:	10c00d26 	beq	r2,r3,80506c <_malloc_trim_r+0xe0>
  805038:	00c02074 	movhi	r3,129
  80503c:	18cd8704 	addi	r3,r3,13852
  805040:	18800017 	ldw	r2,0(r3)
  805044:	99000217 	ldw	r4,8(r19)
  805048:	8c23c83a 	sub	r17,r17,r16
  80504c:	8c400054 	ori	r17,r17,1
  805050:	1421c83a 	sub	r16,r2,r16
  805054:	24400115 	stw	r17,4(r4)
  805058:	9009883a 	mov	r4,r18
  80505c:	1c000015 	stw	r16,0(r3)
  805060:	080d91c0 	call	80d91c <__malloc_unlock>
  805064:	00800044 	movi	r2,1
  805068:	003fe706 	br	805008 <__alt_data_end+0xff805008>
  80506c:	000b883a 	mov	r5,zero
  805070:	9009883a 	mov	r4,r18
  805074:	0807f2c0 	call	807f2c <_sbrk_r>
  805078:	99000217 	ldw	r4,8(r19)
  80507c:	014003c4 	movi	r5,15
  805080:	1107c83a 	sub	r3,r2,r4
  805084:	28ffdd0e 	bge	r5,r3,804ffc <__alt_data_end+0xff804ffc>
  805088:	01402074 	movhi	r5,129
  80508c:	2946b104 	addi	r5,r5,6852
  805090:	29400017 	ldw	r5,0(r5)
  805094:	18c00054 	ori	r3,r3,1
  805098:	20c00115 	stw	r3,4(r4)
  80509c:	00c02074 	movhi	r3,129
  8050a0:	1145c83a 	sub	r2,r2,r5
  8050a4:	18cd8704 	addi	r3,r3,13852
  8050a8:	18800015 	stw	r2,0(r3)
  8050ac:	003fd306 	br	804ffc <__alt_data_end+0xff804ffc>

008050b0 <_free_r>:
  8050b0:	28004126 	beq	r5,zero,8051b8 <_free_r+0x108>
  8050b4:	defffd04 	addi	sp,sp,-12
  8050b8:	dc400115 	stw	r17,4(sp)
  8050bc:	dc000015 	stw	r16,0(sp)
  8050c0:	2023883a 	mov	r17,r4
  8050c4:	2821883a 	mov	r16,r5
  8050c8:	dfc00215 	stw	ra,8(sp)
  8050cc:	080d8f80 	call	80d8f8 <__malloc_lock>
  8050d0:	81ffff17 	ldw	r7,-4(r16)
  8050d4:	00bfff84 	movi	r2,-2
  8050d8:	01002074 	movhi	r4,129
  8050dc:	81bffe04 	addi	r6,r16,-8
  8050e0:	3884703a 	and	r2,r7,r2
  8050e4:	21012a04 	addi	r4,r4,1192
  8050e8:	308b883a 	add	r5,r6,r2
  8050ec:	2a400117 	ldw	r9,4(r5)
  8050f0:	22000217 	ldw	r8,8(r4)
  8050f4:	00ffff04 	movi	r3,-4
  8050f8:	48c6703a 	and	r3,r9,r3
  8050fc:	2a005726 	beq	r5,r8,80525c <_free_r+0x1ac>
  805100:	28c00115 	stw	r3,4(r5)
  805104:	39c0004c 	andi	r7,r7,1
  805108:	3800091e 	bne	r7,zero,805130 <_free_r+0x80>
  80510c:	823ffe17 	ldw	r8,-8(r16)
  805110:	22400204 	addi	r9,r4,8
  805114:	320dc83a 	sub	r6,r6,r8
  805118:	31c00217 	ldw	r7,8(r6)
  80511c:	1205883a 	add	r2,r2,r8
  805120:	3a406526 	beq	r7,r9,8052b8 <_free_r+0x208>
  805124:	32000317 	ldw	r8,12(r6)
  805128:	3a000315 	stw	r8,12(r7)
  80512c:	41c00215 	stw	r7,8(r8)
  805130:	28cf883a 	add	r7,r5,r3
  805134:	39c00117 	ldw	r7,4(r7)
  805138:	39c0004c 	andi	r7,r7,1
  80513c:	38003a26 	beq	r7,zero,805228 <_free_r+0x178>
  805140:	10c00054 	ori	r3,r2,1
  805144:	30c00115 	stw	r3,4(r6)
  805148:	3087883a 	add	r3,r6,r2
  80514c:	18800015 	stw	r2,0(r3)
  805150:	00c07fc4 	movi	r3,511
  805154:	18801936 	bltu	r3,r2,8051bc <_free_r+0x10c>
  805158:	1004d0fa 	srli	r2,r2,3
  80515c:	01c00044 	movi	r7,1
  805160:	21400117 	ldw	r5,4(r4)
  805164:	10c00044 	addi	r3,r2,1
  805168:	18c7883a 	add	r3,r3,r3
  80516c:	1005d0ba 	srai	r2,r2,2
  805170:	18c7883a 	add	r3,r3,r3
  805174:	18c7883a 	add	r3,r3,r3
  805178:	1907883a 	add	r3,r3,r4
  80517c:	3884983a 	sll	r2,r7,r2
  805180:	19c00017 	ldw	r7,0(r3)
  805184:	1a3ffe04 	addi	r8,r3,-8
  805188:	1144b03a 	or	r2,r2,r5
  80518c:	32000315 	stw	r8,12(r6)
  805190:	31c00215 	stw	r7,8(r6)
  805194:	20800115 	stw	r2,4(r4)
  805198:	19800015 	stw	r6,0(r3)
  80519c:	39800315 	stw	r6,12(r7)
  8051a0:	8809883a 	mov	r4,r17
  8051a4:	dfc00217 	ldw	ra,8(sp)
  8051a8:	dc400117 	ldw	r17,4(sp)
  8051ac:	dc000017 	ldw	r16,0(sp)
  8051b0:	dec00304 	addi	sp,sp,12
  8051b4:	080d91c1 	jmpi	80d91c <__malloc_unlock>
  8051b8:	f800283a 	ret
  8051bc:	100ad27a 	srli	r5,r2,9
  8051c0:	00c00104 	movi	r3,4
  8051c4:	19404a36 	bltu	r3,r5,8052f0 <_free_r+0x240>
  8051c8:	100ad1ba 	srli	r5,r2,6
  8051cc:	28c00e44 	addi	r3,r5,57
  8051d0:	18c7883a 	add	r3,r3,r3
  8051d4:	29400e04 	addi	r5,r5,56
  8051d8:	18c7883a 	add	r3,r3,r3
  8051dc:	18c7883a 	add	r3,r3,r3
  8051e0:	1909883a 	add	r4,r3,r4
  8051e4:	20c00017 	ldw	r3,0(r4)
  8051e8:	01c02074 	movhi	r7,129
  8051ec:	213ffe04 	addi	r4,r4,-8
  8051f0:	39c12a04 	addi	r7,r7,1192
  8051f4:	20c04426 	beq	r4,r3,805308 <_free_r+0x258>
  8051f8:	01ffff04 	movi	r7,-4
  8051fc:	19400117 	ldw	r5,4(r3)
  805200:	29ca703a 	and	r5,r5,r7
  805204:	1140022e 	bgeu	r2,r5,805210 <_free_r+0x160>
  805208:	18c00217 	ldw	r3,8(r3)
  80520c:	20fffb1e 	bne	r4,r3,8051fc <__alt_data_end+0xff8051fc>
  805210:	19000317 	ldw	r4,12(r3)
  805214:	31000315 	stw	r4,12(r6)
  805218:	30c00215 	stw	r3,8(r6)
  80521c:	21800215 	stw	r6,8(r4)
  805220:	19800315 	stw	r6,12(r3)
  805224:	003fde06 	br	8051a0 <__alt_data_end+0xff8051a0>
  805228:	29c00217 	ldw	r7,8(r5)
  80522c:	10c5883a 	add	r2,r2,r3
  805230:	00c02074 	movhi	r3,129
  805234:	18c12c04 	addi	r3,r3,1200
  805238:	38c03b26 	beq	r7,r3,805328 <_free_r+0x278>
  80523c:	2a000317 	ldw	r8,12(r5)
  805240:	11400054 	ori	r5,r2,1
  805244:	3087883a 	add	r3,r6,r2
  805248:	3a000315 	stw	r8,12(r7)
  80524c:	41c00215 	stw	r7,8(r8)
  805250:	31400115 	stw	r5,4(r6)
  805254:	18800015 	stw	r2,0(r3)
  805258:	003fbd06 	br	805150 <__alt_data_end+0xff805150>
  80525c:	39c0004c 	andi	r7,r7,1
  805260:	10c5883a 	add	r2,r2,r3
  805264:	3800071e 	bne	r7,zero,805284 <_free_r+0x1d4>
  805268:	81fffe17 	ldw	r7,-8(r16)
  80526c:	31cdc83a 	sub	r6,r6,r7
  805270:	30c00317 	ldw	r3,12(r6)
  805274:	31400217 	ldw	r5,8(r6)
  805278:	11c5883a 	add	r2,r2,r7
  80527c:	28c00315 	stw	r3,12(r5)
  805280:	19400215 	stw	r5,8(r3)
  805284:	10c00054 	ori	r3,r2,1
  805288:	30c00115 	stw	r3,4(r6)
  80528c:	00c02074 	movhi	r3,129
  805290:	18c6b204 	addi	r3,r3,6856
  805294:	18c00017 	ldw	r3,0(r3)
  805298:	21800215 	stw	r6,8(r4)
  80529c:	10ffc036 	bltu	r2,r3,8051a0 <__alt_data_end+0xff8051a0>
  8052a0:	00802074 	movhi	r2,129
  8052a4:	108d7e04 	addi	r2,r2,13816
  8052a8:	11400017 	ldw	r5,0(r2)
  8052ac:	8809883a 	mov	r4,r17
  8052b0:	0804f8c0 	call	804f8c <_malloc_trim_r>
  8052b4:	003fba06 	br	8051a0 <__alt_data_end+0xff8051a0>
  8052b8:	28c9883a 	add	r4,r5,r3
  8052bc:	21000117 	ldw	r4,4(r4)
  8052c0:	2100004c 	andi	r4,r4,1
  8052c4:	2000391e 	bne	r4,zero,8053ac <_free_r+0x2fc>
  8052c8:	29c00217 	ldw	r7,8(r5)
  8052cc:	29000317 	ldw	r4,12(r5)
  8052d0:	1885883a 	add	r2,r3,r2
  8052d4:	10c00054 	ori	r3,r2,1
  8052d8:	39000315 	stw	r4,12(r7)
  8052dc:	21c00215 	stw	r7,8(r4)
  8052e0:	30c00115 	stw	r3,4(r6)
  8052e4:	308d883a 	add	r6,r6,r2
  8052e8:	30800015 	stw	r2,0(r6)
  8052ec:	003fac06 	br	8051a0 <__alt_data_end+0xff8051a0>
  8052f0:	00c00504 	movi	r3,20
  8052f4:	19401536 	bltu	r3,r5,80534c <_free_r+0x29c>
  8052f8:	28c01704 	addi	r3,r5,92
  8052fc:	18c7883a 	add	r3,r3,r3
  805300:	294016c4 	addi	r5,r5,91
  805304:	003fb406 	br	8051d8 <__alt_data_end+0xff8051d8>
  805308:	280bd0ba 	srai	r5,r5,2
  80530c:	00c00044 	movi	r3,1
  805310:	38800117 	ldw	r2,4(r7)
  805314:	194a983a 	sll	r5,r3,r5
  805318:	2007883a 	mov	r3,r4
  80531c:	2884b03a 	or	r2,r5,r2
  805320:	38800115 	stw	r2,4(r7)
  805324:	003fbb06 	br	805214 <__alt_data_end+0xff805214>
  805328:	21800515 	stw	r6,20(r4)
  80532c:	21800415 	stw	r6,16(r4)
  805330:	10c00054 	ori	r3,r2,1
  805334:	31c00315 	stw	r7,12(r6)
  805338:	31c00215 	stw	r7,8(r6)
  80533c:	30c00115 	stw	r3,4(r6)
  805340:	308d883a 	add	r6,r6,r2
  805344:	30800015 	stw	r2,0(r6)
  805348:	003f9506 	br	8051a0 <__alt_data_end+0xff8051a0>
  80534c:	00c01504 	movi	r3,84
  805350:	19400536 	bltu	r3,r5,805368 <_free_r+0x2b8>
  805354:	100ad33a 	srli	r5,r2,12
  805358:	28c01bc4 	addi	r3,r5,111
  80535c:	18c7883a 	add	r3,r3,r3
  805360:	29401b84 	addi	r5,r5,110
  805364:	003f9c06 	br	8051d8 <__alt_data_end+0xff8051d8>
  805368:	00c05504 	movi	r3,340
  80536c:	19400536 	bltu	r3,r5,805384 <_free_r+0x2d4>
  805370:	100ad3fa 	srli	r5,r2,15
  805374:	28c01e04 	addi	r3,r5,120
  805378:	18c7883a 	add	r3,r3,r3
  80537c:	29401dc4 	addi	r5,r5,119
  805380:	003f9506 	br	8051d8 <__alt_data_end+0xff8051d8>
  805384:	00c15504 	movi	r3,1364
  805388:	19400536 	bltu	r3,r5,8053a0 <_free_r+0x2f0>
  80538c:	100ad4ba 	srli	r5,r2,18
  805390:	28c01f44 	addi	r3,r5,125
  805394:	18c7883a 	add	r3,r3,r3
  805398:	29401f04 	addi	r5,r5,124
  80539c:	003f8e06 	br	8051d8 <__alt_data_end+0xff8051d8>
  8053a0:	00c03f84 	movi	r3,254
  8053a4:	01401f84 	movi	r5,126
  8053a8:	003f8b06 	br	8051d8 <__alt_data_end+0xff8051d8>
  8053ac:	10c00054 	ori	r3,r2,1
  8053b0:	30c00115 	stw	r3,4(r6)
  8053b4:	308d883a 	add	r6,r6,r2
  8053b8:	30800015 	stw	r2,0(r6)
  8053bc:	003f7806 	br	8051a0 <__alt_data_end+0xff8051a0>

008053c0 <__sfvwrite_r>:
  8053c0:	30800217 	ldw	r2,8(r6)
  8053c4:	10006726 	beq	r2,zero,805564 <__sfvwrite_r+0x1a4>
  8053c8:	28c0030b 	ldhu	r3,12(r5)
  8053cc:	defff404 	addi	sp,sp,-48
  8053d0:	dd400715 	stw	r21,28(sp)
  8053d4:	dd000615 	stw	r20,24(sp)
  8053d8:	dc000215 	stw	r16,8(sp)
  8053dc:	dfc00b15 	stw	ra,44(sp)
  8053e0:	df000a15 	stw	fp,40(sp)
  8053e4:	ddc00915 	stw	r23,36(sp)
  8053e8:	dd800815 	stw	r22,32(sp)
  8053ec:	dcc00515 	stw	r19,20(sp)
  8053f0:	dc800415 	stw	r18,16(sp)
  8053f4:	dc400315 	stw	r17,12(sp)
  8053f8:	1880020c 	andi	r2,r3,8
  8053fc:	2821883a 	mov	r16,r5
  805400:	202b883a 	mov	r21,r4
  805404:	3029883a 	mov	r20,r6
  805408:	10002726 	beq	r2,zero,8054a8 <__sfvwrite_r+0xe8>
  80540c:	28800417 	ldw	r2,16(r5)
  805410:	10002526 	beq	r2,zero,8054a8 <__sfvwrite_r+0xe8>
  805414:	1880008c 	andi	r2,r3,2
  805418:	a4400017 	ldw	r17,0(r20)
  80541c:	10002a26 	beq	r2,zero,8054c8 <__sfvwrite_r+0x108>
  805420:	05a00034 	movhi	r22,32768
  805424:	0027883a 	mov	r19,zero
  805428:	0025883a 	mov	r18,zero
  80542c:	b5bf0004 	addi	r22,r22,-1024
  805430:	980d883a 	mov	r6,r19
  805434:	a809883a 	mov	r4,r21
  805438:	90004626 	beq	r18,zero,805554 <__sfvwrite_r+0x194>
  80543c:	900f883a 	mov	r7,r18
  805440:	b480022e 	bgeu	r22,r18,80544c <__sfvwrite_r+0x8c>
  805444:	01e00034 	movhi	r7,32768
  805448:	39ff0004 	addi	r7,r7,-1024
  80544c:	80800917 	ldw	r2,36(r16)
  805450:	81400717 	ldw	r5,28(r16)
  805454:	103ee83a 	callr	r2
  805458:	0080570e 	bge	zero,r2,8055b8 <__sfvwrite_r+0x1f8>
  80545c:	a0c00217 	ldw	r3,8(r20)
  805460:	98a7883a 	add	r19,r19,r2
  805464:	90a5c83a 	sub	r18,r18,r2
  805468:	1885c83a 	sub	r2,r3,r2
  80546c:	a0800215 	stw	r2,8(r20)
  805470:	103fef1e 	bne	r2,zero,805430 <__alt_data_end+0xff805430>
  805474:	0005883a 	mov	r2,zero
  805478:	dfc00b17 	ldw	ra,44(sp)
  80547c:	df000a17 	ldw	fp,40(sp)
  805480:	ddc00917 	ldw	r23,36(sp)
  805484:	dd800817 	ldw	r22,32(sp)
  805488:	dd400717 	ldw	r21,28(sp)
  80548c:	dd000617 	ldw	r20,24(sp)
  805490:	dcc00517 	ldw	r19,20(sp)
  805494:	dc800417 	ldw	r18,16(sp)
  805498:	dc400317 	ldw	r17,12(sp)
  80549c:	dc000217 	ldw	r16,8(sp)
  8054a0:	dec00c04 	addi	sp,sp,48
  8054a4:	f800283a 	ret
  8054a8:	800b883a 	mov	r5,r16
  8054ac:	a809883a 	mov	r4,r21
  8054b0:	0802f680 	call	802f68 <__swsetup_r>
  8054b4:	1000eb1e 	bne	r2,zero,805864 <__sfvwrite_r+0x4a4>
  8054b8:	80c0030b 	ldhu	r3,12(r16)
  8054bc:	a4400017 	ldw	r17,0(r20)
  8054c0:	1880008c 	andi	r2,r3,2
  8054c4:	103fd61e 	bne	r2,zero,805420 <__alt_data_end+0xff805420>
  8054c8:	1880004c 	andi	r2,r3,1
  8054cc:	10003f1e 	bne	r2,zero,8055cc <__sfvwrite_r+0x20c>
  8054d0:	0039883a 	mov	fp,zero
  8054d4:	0025883a 	mov	r18,zero
  8054d8:	90001a26 	beq	r18,zero,805544 <__sfvwrite_r+0x184>
  8054dc:	1880800c 	andi	r2,r3,512
  8054e0:	84c00217 	ldw	r19,8(r16)
  8054e4:	10002126 	beq	r2,zero,80556c <__sfvwrite_r+0x1ac>
  8054e8:	982f883a 	mov	r23,r19
  8054ec:	94c09336 	bltu	r18,r19,80573c <__sfvwrite_r+0x37c>
  8054f0:	1881200c 	andi	r2,r3,1152
  8054f4:	10009e1e 	bne	r2,zero,805770 <__sfvwrite_r+0x3b0>
  8054f8:	81000017 	ldw	r4,0(r16)
  8054fc:	b80d883a 	mov	r6,r23
  805500:	e00b883a 	mov	r5,fp
  805504:	08066d40 	call	8066d4 <memmove>
  805508:	80c00217 	ldw	r3,8(r16)
  80550c:	81000017 	ldw	r4,0(r16)
  805510:	9005883a 	mov	r2,r18
  805514:	1ce7c83a 	sub	r19,r3,r19
  805518:	25cf883a 	add	r7,r4,r23
  80551c:	84c00215 	stw	r19,8(r16)
  805520:	81c00015 	stw	r7,0(r16)
  805524:	a0c00217 	ldw	r3,8(r20)
  805528:	e0b9883a 	add	fp,fp,r2
  80552c:	90a5c83a 	sub	r18,r18,r2
  805530:	18a7c83a 	sub	r19,r3,r2
  805534:	a4c00215 	stw	r19,8(r20)
  805538:	983fce26 	beq	r19,zero,805474 <__alt_data_end+0xff805474>
  80553c:	80c0030b 	ldhu	r3,12(r16)
  805540:	903fe61e 	bne	r18,zero,8054dc <__alt_data_end+0xff8054dc>
  805544:	8f000017 	ldw	fp,0(r17)
  805548:	8c800117 	ldw	r18,4(r17)
  80554c:	8c400204 	addi	r17,r17,8
  805550:	003fe106 	br	8054d8 <__alt_data_end+0xff8054d8>
  805554:	8cc00017 	ldw	r19,0(r17)
  805558:	8c800117 	ldw	r18,4(r17)
  80555c:	8c400204 	addi	r17,r17,8
  805560:	003fb306 	br	805430 <__alt_data_end+0xff805430>
  805564:	0005883a 	mov	r2,zero
  805568:	f800283a 	ret
  80556c:	81000017 	ldw	r4,0(r16)
  805570:	80800417 	ldw	r2,16(r16)
  805574:	11005736 	bltu	r2,r4,8056d4 <__sfvwrite_r+0x314>
  805578:	85c00517 	ldw	r23,20(r16)
  80557c:	95c05536 	bltu	r18,r23,8056d4 <__sfvwrite_r+0x314>
  805580:	00a00034 	movhi	r2,32768
  805584:	10bfffc4 	addi	r2,r2,-1
  805588:	9009883a 	mov	r4,r18
  80558c:	1480012e 	bgeu	r2,r18,805594 <__sfvwrite_r+0x1d4>
  805590:	1009883a 	mov	r4,r2
  805594:	b80b883a 	mov	r5,r23
  805598:	080abc40 	call	80abc4 <__divsi3>
  80559c:	15cf383a 	mul	r7,r2,r23
  8055a0:	81400717 	ldw	r5,28(r16)
  8055a4:	80800917 	ldw	r2,36(r16)
  8055a8:	e00d883a 	mov	r6,fp
  8055ac:	a809883a 	mov	r4,r21
  8055b0:	103ee83a 	callr	r2
  8055b4:	00bfdb16 	blt	zero,r2,805524 <__alt_data_end+0xff805524>
  8055b8:	8080030b 	ldhu	r2,12(r16)
  8055bc:	10801014 	ori	r2,r2,64
  8055c0:	8080030d 	sth	r2,12(r16)
  8055c4:	00bfffc4 	movi	r2,-1
  8055c8:	003fab06 	br	805478 <__alt_data_end+0xff805478>
  8055cc:	0027883a 	mov	r19,zero
  8055d0:	0011883a 	mov	r8,zero
  8055d4:	0039883a 	mov	fp,zero
  8055d8:	0025883a 	mov	r18,zero
  8055dc:	90001f26 	beq	r18,zero,80565c <__sfvwrite_r+0x29c>
  8055e0:	40005a26 	beq	r8,zero,80574c <__sfvwrite_r+0x38c>
  8055e4:	982d883a 	mov	r22,r19
  8055e8:	94c0012e 	bgeu	r18,r19,8055f0 <__sfvwrite_r+0x230>
  8055ec:	902d883a 	mov	r22,r18
  8055f0:	81000017 	ldw	r4,0(r16)
  8055f4:	80800417 	ldw	r2,16(r16)
  8055f8:	b02f883a 	mov	r23,r22
  8055fc:	81c00517 	ldw	r7,20(r16)
  805600:	1100032e 	bgeu	r2,r4,805610 <__sfvwrite_r+0x250>
  805604:	80c00217 	ldw	r3,8(r16)
  805608:	38c7883a 	add	r3,r7,r3
  80560c:	1d801816 	blt	r3,r22,805670 <__sfvwrite_r+0x2b0>
  805610:	b1c03e16 	blt	r22,r7,80570c <__sfvwrite_r+0x34c>
  805614:	80800917 	ldw	r2,36(r16)
  805618:	81400717 	ldw	r5,28(r16)
  80561c:	e00d883a 	mov	r6,fp
  805620:	da000115 	stw	r8,4(sp)
  805624:	a809883a 	mov	r4,r21
  805628:	103ee83a 	callr	r2
  80562c:	102f883a 	mov	r23,r2
  805630:	da000117 	ldw	r8,4(sp)
  805634:	00bfe00e 	bge	zero,r2,8055b8 <__alt_data_end+0xff8055b8>
  805638:	9de7c83a 	sub	r19,r19,r23
  80563c:	98001f26 	beq	r19,zero,8056bc <__sfvwrite_r+0x2fc>
  805640:	a0800217 	ldw	r2,8(r20)
  805644:	e5f9883a 	add	fp,fp,r23
  805648:	95e5c83a 	sub	r18,r18,r23
  80564c:	15efc83a 	sub	r23,r2,r23
  805650:	a5c00215 	stw	r23,8(r20)
  805654:	b83f8726 	beq	r23,zero,805474 <__alt_data_end+0xff805474>
  805658:	903fe11e 	bne	r18,zero,8055e0 <__alt_data_end+0xff8055e0>
  80565c:	8f000017 	ldw	fp,0(r17)
  805660:	8c800117 	ldw	r18,4(r17)
  805664:	0011883a 	mov	r8,zero
  805668:	8c400204 	addi	r17,r17,8
  80566c:	003fdb06 	br	8055dc <__alt_data_end+0xff8055dc>
  805670:	180d883a 	mov	r6,r3
  805674:	e00b883a 	mov	r5,fp
  805678:	da000115 	stw	r8,4(sp)
  80567c:	d8c00015 	stw	r3,0(sp)
  805680:	08066d40 	call	8066d4 <memmove>
  805684:	d8c00017 	ldw	r3,0(sp)
  805688:	80800017 	ldw	r2,0(r16)
  80568c:	800b883a 	mov	r5,r16
  805690:	a809883a 	mov	r4,r21
  805694:	10c5883a 	add	r2,r2,r3
  805698:	80800015 	stw	r2,0(r16)
  80569c:	d8c00015 	stw	r3,0(sp)
  8056a0:	0804b600 	call	804b60 <_fflush_r>
  8056a4:	d8c00017 	ldw	r3,0(sp)
  8056a8:	da000117 	ldw	r8,4(sp)
  8056ac:	103fc21e 	bne	r2,zero,8055b8 <__alt_data_end+0xff8055b8>
  8056b0:	182f883a 	mov	r23,r3
  8056b4:	9de7c83a 	sub	r19,r19,r23
  8056b8:	983fe11e 	bne	r19,zero,805640 <__alt_data_end+0xff805640>
  8056bc:	800b883a 	mov	r5,r16
  8056c0:	a809883a 	mov	r4,r21
  8056c4:	0804b600 	call	804b60 <_fflush_r>
  8056c8:	103fbb1e 	bne	r2,zero,8055b8 <__alt_data_end+0xff8055b8>
  8056cc:	0011883a 	mov	r8,zero
  8056d0:	003fdb06 	br	805640 <__alt_data_end+0xff805640>
  8056d4:	94c0012e 	bgeu	r18,r19,8056dc <__sfvwrite_r+0x31c>
  8056d8:	9027883a 	mov	r19,r18
  8056dc:	980d883a 	mov	r6,r19
  8056e0:	e00b883a 	mov	r5,fp
  8056e4:	08066d40 	call	8066d4 <memmove>
  8056e8:	80800217 	ldw	r2,8(r16)
  8056ec:	80c00017 	ldw	r3,0(r16)
  8056f0:	14c5c83a 	sub	r2,r2,r19
  8056f4:	1cc7883a 	add	r3,r3,r19
  8056f8:	80800215 	stw	r2,8(r16)
  8056fc:	80c00015 	stw	r3,0(r16)
  805700:	10004326 	beq	r2,zero,805810 <__sfvwrite_r+0x450>
  805704:	9805883a 	mov	r2,r19
  805708:	003f8606 	br	805524 <__alt_data_end+0xff805524>
  80570c:	b00d883a 	mov	r6,r22
  805710:	e00b883a 	mov	r5,fp
  805714:	da000115 	stw	r8,4(sp)
  805718:	08066d40 	call	8066d4 <memmove>
  80571c:	80800217 	ldw	r2,8(r16)
  805720:	80c00017 	ldw	r3,0(r16)
  805724:	da000117 	ldw	r8,4(sp)
  805728:	1585c83a 	sub	r2,r2,r22
  80572c:	1dad883a 	add	r22,r3,r22
  805730:	80800215 	stw	r2,8(r16)
  805734:	85800015 	stw	r22,0(r16)
  805738:	003fbf06 	br	805638 <__alt_data_end+0xff805638>
  80573c:	81000017 	ldw	r4,0(r16)
  805740:	9027883a 	mov	r19,r18
  805744:	902f883a 	mov	r23,r18
  805748:	003f6c06 	br	8054fc <__alt_data_end+0xff8054fc>
  80574c:	900d883a 	mov	r6,r18
  805750:	01400284 	movi	r5,10
  805754:	e009883a 	mov	r4,fp
  805758:	08064a80 	call	8064a8 <memchr>
  80575c:	10003e26 	beq	r2,zero,805858 <__sfvwrite_r+0x498>
  805760:	10800044 	addi	r2,r2,1
  805764:	1727c83a 	sub	r19,r2,fp
  805768:	02000044 	movi	r8,1
  80576c:	003f9d06 	br	8055e4 <__alt_data_end+0xff8055e4>
  805770:	80800517 	ldw	r2,20(r16)
  805774:	81400417 	ldw	r5,16(r16)
  805778:	81c00017 	ldw	r7,0(r16)
  80577c:	10a7883a 	add	r19,r2,r2
  805780:	9885883a 	add	r2,r19,r2
  805784:	1026d7fa 	srli	r19,r2,31
  805788:	396dc83a 	sub	r22,r7,r5
  80578c:	b1000044 	addi	r4,r22,1
  805790:	9885883a 	add	r2,r19,r2
  805794:	1027d07a 	srai	r19,r2,1
  805798:	2485883a 	add	r2,r4,r18
  80579c:	980d883a 	mov	r6,r19
  8057a0:	9880022e 	bgeu	r19,r2,8057ac <__sfvwrite_r+0x3ec>
  8057a4:	1027883a 	mov	r19,r2
  8057a8:	100d883a 	mov	r6,r2
  8057ac:	18c1000c 	andi	r3,r3,1024
  8057b0:	18001c26 	beq	r3,zero,805824 <__sfvwrite_r+0x464>
  8057b4:	300b883a 	mov	r5,r6
  8057b8:	a809883a 	mov	r4,r21
  8057bc:	0805c9c0 	call	805c9c <_malloc_r>
  8057c0:	102f883a 	mov	r23,r2
  8057c4:	10002926 	beq	r2,zero,80586c <__sfvwrite_r+0x4ac>
  8057c8:	81400417 	ldw	r5,16(r16)
  8057cc:	b00d883a 	mov	r6,r22
  8057d0:	1009883a 	mov	r4,r2
  8057d4:	080658c0 	call	80658c <memcpy>
  8057d8:	8080030b 	ldhu	r2,12(r16)
  8057dc:	00fedfc4 	movi	r3,-1153
  8057e0:	10c4703a 	and	r2,r2,r3
  8057e4:	10802014 	ori	r2,r2,128
  8057e8:	8080030d 	sth	r2,12(r16)
  8057ec:	bd89883a 	add	r4,r23,r22
  8057f0:	9d8fc83a 	sub	r7,r19,r22
  8057f4:	85c00415 	stw	r23,16(r16)
  8057f8:	84c00515 	stw	r19,20(r16)
  8057fc:	81000015 	stw	r4,0(r16)
  805800:	9027883a 	mov	r19,r18
  805804:	81c00215 	stw	r7,8(r16)
  805808:	902f883a 	mov	r23,r18
  80580c:	003f3b06 	br	8054fc <__alt_data_end+0xff8054fc>
  805810:	800b883a 	mov	r5,r16
  805814:	a809883a 	mov	r4,r21
  805818:	0804b600 	call	804b60 <_fflush_r>
  80581c:	103fb926 	beq	r2,zero,805704 <__alt_data_end+0xff805704>
  805820:	003f6506 	br	8055b8 <__alt_data_end+0xff8055b8>
  805824:	a809883a 	mov	r4,r21
  805828:	08079540 	call	807954 <_realloc_r>
  80582c:	102f883a 	mov	r23,r2
  805830:	103fee1e 	bne	r2,zero,8057ec <__alt_data_end+0xff8057ec>
  805834:	81400417 	ldw	r5,16(r16)
  805838:	a809883a 	mov	r4,r21
  80583c:	08050b00 	call	8050b0 <_free_r>
  805840:	8080030b 	ldhu	r2,12(r16)
  805844:	00ffdfc4 	movi	r3,-129
  805848:	1884703a 	and	r2,r3,r2
  80584c:	00c00304 	movi	r3,12
  805850:	a8c00015 	stw	r3,0(r21)
  805854:	003f5906 	br	8055bc <__alt_data_end+0xff8055bc>
  805858:	94c00044 	addi	r19,r18,1
  80585c:	02000044 	movi	r8,1
  805860:	003f6006 	br	8055e4 <__alt_data_end+0xff8055e4>
  805864:	00bfffc4 	movi	r2,-1
  805868:	003f0306 	br	805478 <__alt_data_end+0xff805478>
  80586c:	00800304 	movi	r2,12
  805870:	a8800015 	stw	r2,0(r21)
  805874:	8080030b 	ldhu	r2,12(r16)
  805878:	003f5006 	br	8055bc <__alt_data_end+0xff8055bc>

0080587c <_fwalk>:
  80587c:	defff704 	addi	sp,sp,-36
  805880:	dd000415 	stw	r20,16(sp)
  805884:	dfc00815 	stw	ra,32(sp)
  805888:	ddc00715 	stw	r23,28(sp)
  80588c:	dd800615 	stw	r22,24(sp)
  805890:	dd400515 	stw	r21,20(sp)
  805894:	dcc00315 	stw	r19,12(sp)
  805898:	dc800215 	stw	r18,8(sp)
  80589c:	dc400115 	stw	r17,4(sp)
  8058a0:	dc000015 	stw	r16,0(sp)
  8058a4:	2500b804 	addi	r20,r4,736
  8058a8:	a0002326 	beq	r20,zero,805938 <_fwalk+0xbc>
  8058ac:	282b883a 	mov	r21,r5
  8058b0:	002f883a 	mov	r23,zero
  8058b4:	05800044 	movi	r22,1
  8058b8:	04ffffc4 	movi	r19,-1
  8058bc:	a4400117 	ldw	r17,4(r20)
  8058c0:	a4800217 	ldw	r18,8(r20)
  8058c4:	8c7fffc4 	addi	r17,r17,-1
  8058c8:	88000d16 	blt	r17,zero,805900 <_fwalk+0x84>
  8058cc:	94000304 	addi	r16,r18,12
  8058d0:	94800384 	addi	r18,r18,14
  8058d4:	8080000b 	ldhu	r2,0(r16)
  8058d8:	8c7fffc4 	addi	r17,r17,-1
  8058dc:	813ffd04 	addi	r4,r16,-12
  8058e0:	b080042e 	bgeu	r22,r2,8058f4 <_fwalk+0x78>
  8058e4:	9080000f 	ldh	r2,0(r18)
  8058e8:	14c00226 	beq	r2,r19,8058f4 <_fwalk+0x78>
  8058ec:	a83ee83a 	callr	r21
  8058f0:	b8aeb03a 	or	r23,r23,r2
  8058f4:	84001a04 	addi	r16,r16,104
  8058f8:	94801a04 	addi	r18,r18,104
  8058fc:	8cfff51e 	bne	r17,r19,8058d4 <__alt_data_end+0xff8058d4>
  805900:	a5000017 	ldw	r20,0(r20)
  805904:	a03fed1e 	bne	r20,zero,8058bc <__alt_data_end+0xff8058bc>
  805908:	b805883a 	mov	r2,r23
  80590c:	dfc00817 	ldw	ra,32(sp)
  805910:	ddc00717 	ldw	r23,28(sp)
  805914:	dd800617 	ldw	r22,24(sp)
  805918:	dd400517 	ldw	r21,20(sp)
  80591c:	dd000417 	ldw	r20,16(sp)
  805920:	dcc00317 	ldw	r19,12(sp)
  805924:	dc800217 	ldw	r18,8(sp)
  805928:	dc400117 	ldw	r17,4(sp)
  80592c:	dc000017 	ldw	r16,0(sp)
  805930:	dec00904 	addi	sp,sp,36
  805934:	f800283a 	ret
  805938:	002f883a 	mov	r23,zero
  80593c:	003ff206 	br	805908 <__alt_data_end+0xff805908>

00805940 <_fwalk_reent>:
  805940:	defff704 	addi	sp,sp,-36
  805944:	dd000415 	stw	r20,16(sp)
  805948:	dfc00815 	stw	ra,32(sp)
  80594c:	ddc00715 	stw	r23,28(sp)
  805950:	dd800615 	stw	r22,24(sp)
  805954:	dd400515 	stw	r21,20(sp)
  805958:	dcc00315 	stw	r19,12(sp)
  80595c:	dc800215 	stw	r18,8(sp)
  805960:	dc400115 	stw	r17,4(sp)
  805964:	dc000015 	stw	r16,0(sp)
  805968:	2500b804 	addi	r20,r4,736
  80596c:	a0002326 	beq	r20,zero,8059fc <_fwalk_reent+0xbc>
  805970:	282b883a 	mov	r21,r5
  805974:	2027883a 	mov	r19,r4
  805978:	002f883a 	mov	r23,zero
  80597c:	05800044 	movi	r22,1
  805980:	04bfffc4 	movi	r18,-1
  805984:	a4400117 	ldw	r17,4(r20)
  805988:	a4000217 	ldw	r16,8(r20)
  80598c:	8c7fffc4 	addi	r17,r17,-1
  805990:	88000c16 	blt	r17,zero,8059c4 <_fwalk_reent+0x84>
  805994:	84000304 	addi	r16,r16,12
  805998:	8080000b 	ldhu	r2,0(r16)
  80599c:	8c7fffc4 	addi	r17,r17,-1
  8059a0:	817ffd04 	addi	r5,r16,-12
  8059a4:	b080052e 	bgeu	r22,r2,8059bc <_fwalk_reent+0x7c>
  8059a8:	8080008f 	ldh	r2,2(r16)
  8059ac:	9809883a 	mov	r4,r19
  8059b0:	14800226 	beq	r2,r18,8059bc <_fwalk_reent+0x7c>
  8059b4:	a83ee83a 	callr	r21
  8059b8:	b8aeb03a 	or	r23,r23,r2
  8059bc:	84001a04 	addi	r16,r16,104
  8059c0:	8cbff51e 	bne	r17,r18,805998 <__alt_data_end+0xff805998>
  8059c4:	a5000017 	ldw	r20,0(r20)
  8059c8:	a03fee1e 	bne	r20,zero,805984 <__alt_data_end+0xff805984>
  8059cc:	b805883a 	mov	r2,r23
  8059d0:	dfc00817 	ldw	ra,32(sp)
  8059d4:	ddc00717 	ldw	r23,28(sp)
  8059d8:	dd800617 	ldw	r22,24(sp)
  8059dc:	dd400517 	ldw	r21,20(sp)
  8059e0:	dd000417 	ldw	r20,16(sp)
  8059e4:	dcc00317 	ldw	r19,12(sp)
  8059e8:	dc800217 	ldw	r18,8(sp)
  8059ec:	dc400117 	ldw	r17,4(sp)
  8059f0:	dc000017 	ldw	r16,0(sp)
  8059f4:	dec00904 	addi	sp,sp,36
  8059f8:	f800283a 	ret
  8059fc:	002f883a 	mov	r23,zero
  805a00:	003ff206 	br	8059cc <__alt_data_end+0xff8059cc>

00805a04 <_setlocale_r>:
  805a04:	30001b26 	beq	r6,zero,805a74 <_setlocale_r+0x70>
  805a08:	01402074 	movhi	r5,129
  805a0c:	defffe04 	addi	sp,sp,-8
  805a10:	297fa404 	addi	r5,r5,-368
  805a14:	3009883a 	mov	r4,r6
  805a18:	dc000015 	stw	r16,0(sp)
  805a1c:	dfc00115 	stw	ra,4(sp)
  805a20:	3021883a 	mov	r16,r6
  805a24:	08080bc0 	call	8080bc <strcmp>
  805a28:	1000061e 	bne	r2,zero,805a44 <_setlocale_r+0x40>
  805a2c:	00802074 	movhi	r2,129
  805a30:	10bfa304 	addi	r2,r2,-372
  805a34:	dfc00117 	ldw	ra,4(sp)
  805a38:	dc000017 	ldw	r16,0(sp)
  805a3c:	dec00204 	addi	sp,sp,8
  805a40:	f800283a 	ret
  805a44:	01402074 	movhi	r5,129
  805a48:	297fa304 	addi	r5,r5,-372
  805a4c:	8009883a 	mov	r4,r16
  805a50:	08080bc0 	call	8080bc <strcmp>
  805a54:	103ff526 	beq	r2,zero,805a2c <__alt_data_end+0xff805a2c>
  805a58:	01402074 	movhi	r5,129
  805a5c:	297f8e04 	addi	r5,r5,-456
  805a60:	8009883a 	mov	r4,r16
  805a64:	08080bc0 	call	8080bc <strcmp>
  805a68:	103ff026 	beq	r2,zero,805a2c <__alt_data_end+0xff805a2c>
  805a6c:	0005883a 	mov	r2,zero
  805a70:	003ff006 	br	805a34 <__alt_data_end+0xff805a34>
  805a74:	00802074 	movhi	r2,129
  805a78:	10bfa304 	addi	r2,r2,-372
  805a7c:	f800283a 	ret

00805a80 <__locale_charset>:
  805a80:	00802074 	movhi	r2,129
  805a84:	10811404 	addi	r2,r2,1104
  805a88:	f800283a 	ret

00805a8c <__locale_mb_cur_max>:
  805a8c:	00802074 	movhi	r2,129
  805a90:	1086b004 	addi	r2,r2,6848
  805a94:	10800017 	ldw	r2,0(r2)
  805a98:	f800283a 	ret

00805a9c <__locale_msgcharset>:
  805a9c:	00802074 	movhi	r2,129
  805aa0:	10810c04 	addi	r2,r2,1072
  805aa4:	f800283a 	ret

00805aa8 <__locale_cjk_lang>:
  805aa8:	0005883a 	mov	r2,zero
  805aac:	f800283a 	ret

00805ab0 <_localeconv_r>:
  805ab0:	00802074 	movhi	r2,129
  805ab4:	10811c04 	addi	r2,r2,1136
  805ab8:	f800283a 	ret

00805abc <setlocale>:
  805abc:	00802074 	movhi	r2,129
  805ac0:	1086af04 	addi	r2,r2,6844
  805ac4:	280d883a 	mov	r6,r5
  805ac8:	200b883a 	mov	r5,r4
  805acc:	11000017 	ldw	r4,0(r2)
  805ad0:	0805a041 	jmpi	805a04 <_setlocale_r>

00805ad4 <localeconv>:
  805ad4:	00802074 	movhi	r2,129
  805ad8:	10811c04 	addi	r2,r2,1136
  805adc:	f800283a 	ret

00805ae0 <__smakebuf_r>:
  805ae0:	2880030b 	ldhu	r2,12(r5)
  805ae4:	10c0008c 	andi	r3,r2,2
  805ae8:	1800411e 	bne	r3,zero,805bf0 <__smakebuf_r+0x110>
  805aec:	deffec04 	addi	sp,sp,-80
  805af0:	dc000f15 	stw	r16,60(sp)
  805af4:	2821883a 	mov	r16,r5
  805af8:	2940038f 	ldh	r5,14(r5)
  805afc:	dc401015 	stw	r17,64(sp)
  805b00:	dfc01315 	stw	ra,76(sp)
  805b04:	dcc01215 	stw	r19,72(sp)
  805b08:	dc801115 	stw	r18,68(sp)
  805b0c:	2023883a 	mov	r17,r4
  805b10:	28001c16 	blt	r5,zero,805b84 <__smakebuf_r+0xa4>
  805b14:	d80d883a 	mov	r6,sp
  805b18:	0809c640 	call	809c64 <_fstat_r>
  805b1c:	10001816 	blt	r2,zero,805b80 <__smakebuf_r+0xa0>
  805b20:	d8800117 	ldw	r2,4(sp)
  805b24:	00e00014 	movui	r3,32768
  805b28:	10bc000c 	andi	r2,r2,61440
  805b2c:	14c80020 	cmpeqi	r19,r2,8192
  805b30:	10c03726 	beq	r2,r3,805c10 <__smakebuf_r+0x130>
  805b34:	80c0030b 	ldhu	r3,12(r16)
  805b38:	18c20014 	ori	r3,r3,2048
  805b3c:	80c0030d 	sth	r3,12(r16)
  805b40:	00c80004 	movi	r3,8192
  805b44:	10c0521e 	bne	r2,r3,805c90 <__smakebuf_r+0x1b0>
  805b48:	8140038f 	ldh	r5,14(r16)
  805b4c:	8809883a 	mov	r4,r17
  805b50:	0809cc00 	call	809cc0 <_isatty_r>
  805b54:	10004c26 	beq	r2,zero,805c88 <__smakebuf_r+0x1a8>
  805b58:	8080030b 	ldhu	r2,12(r16)
  805b5c:	80c010c4 	addi	r3,r16,67
  805b60:	80c00015 	stw	r3,0(r16)
  805b64:	10800054 	ori	r2,r2,1
  805b68:	8080030d 	sth	r2,12(r16)
  805b6c:	00800044 	movi	r2,1
  805b70:	80c00415 	stw	r3,16(r16)
  805b74:	80800515 	stw	r2,20(r16)
  805b78:	04810004 	movi	r18,1024
  805b7c:	00000706 	br	805b9c <__smakebuf_r+0xbc>
  805b80:	8080030b 	ldhu	r2,12(r16)
  805b84:	10c0200c 	andi	r3,r2,128
  805b88:	18001f1e 	bne	r3,zero,805c08 <__smakebuf_r+0x128>
  805b8c:	04810004 	movi	r18,1024
  805b90:	10820014 	ori	r2,r2,2048
  805b94:	8080030d 	sth	r2,12(r16)
  805b98:	0027883a 	mov	r19,zero
  805b9c:	900b883a 	mov	r5,r18
  805ba0:	8809883a 	mov	r4,r17
  805ba4:	0805c9c0 	call	805c9c <_malloc_r>
  805ba8:	10002c26 	beq	r2,zero,805c5c <__smakebuf_r+0x17c>
  805bac:	80c0030b 	ldhu	r3,12(r16)
  805bb0:	01002034 	movhi	r4,128
  805bb4:	2112fd04 	addi	r4,r4,19444
  805bb8:	89000f15 	stw	r4,60(r17)
  805bbc:	18c02014 	ori	r3,r3,128
  805bc0:	80c0030d 	sth	r3,12(r16)
  805bc4:	80800015 	stw	r2,0(r16)
  805bc8:	80800415 	stw	r2,16(r16)
  805bcc:	84800515 	stw	r18,20(r16)
  805bd0:	98001a1e 	bne	r19,zero,805c3c <__smakebuf_r+0x15c>
  805bd4:	dfc01317 	ldw	ra,76(sp)
  805bd8:	dcc01217 	ldw	r19,72(sp)
  805bdc:	dc801117 	ldw	r18,68(sp)
  805be0:	dc401017 	ldw	r17,64(sp)
  805be4:	dc000f17 	ldw	r16,60(sp)
  805be8:	dec01404 	addi	sp,sp,80
  805bec:	f800283a 	ret
  805bf0:	288010c4 	addi	r2,r5,67
  805bf4:	28800015 	stw	r2,0(r5)
  805bf8:	28800415 	stw	r2,16(r5)
  805bfc:	00800044 	movi	r2,1
  805c00:	28800515 	stw	r2,20(r5)
  805c04:	f800283a 	ret
  805c08:	04801004 	movi	r18,64
  805c0c:	003fe006 	br	805b90 <__alt_data_end+0xff805b90>
  805c10:	81000a17 	ldw	r4,40(r16)
  805c14:	00c02074 	movhi	r3,129
  805c18:	18e01604 	addi	r3,r3,-32680
  805c1c:	20ffc51e 	bne	r4,r3,805b34 <__alt_data_end+0xff805b34>
  805c20:	8080030b 	ldhu	r2,12(r16)
  805c24:	04810004 	movi	r18,1024
  805c28:	84801315 	stw	r18,76(r16)
  805c2c:	1484b03a 	or	r2,r2,r18
  805c30:	8080030d 	sth	r2,12(r16)
  805c34:	0027883a 	mov	r19,zero
  805c38:	003fd806 	br	805b9c <__alt_data_end+0xff805b9c>
  805c3c:	8140038f 	ldh	r5,14(r16)
  805c40:	8809883a 	mov	r4,r17
  805c44:	0809cc00 	call	809cc0 <_isatty_r>
  805c48:	103fe226 	beq	r2,zero,805bd4 <__alt_data_end+0xff805bd4>
  805c4c:	8080030b 	ldhu	r2,12(r16)
  805c50:	10800054 	ori	r2,r2,1
  805c54:	8080030d 	sth	r2,12(r16)
  805c58:	003fde06 	br	805bd4 <__alt_data_end+0xff805bd4>
  805c5c:	8080030b 	ldhu	r2,12(r16)
  805c60:	10c0800c 	andi	r3,r2,512
  805c64:	183fdb1e 	bne	r3,zero,805bd4 <__alt_data_end+0xff805bd4>
  805c68:	10800094 	ori	r2,r2,2
  805c6c:	80c010c4 	addi	r3,r16,67
  805c70:	8080030d 	sth	r2,12(r16)
  805c74:	00800044 	movi	r2,1
  805c78:	80c00015 	stw	r3,0(r16)
  805c7c:	80c00415 	stw	r3,16(r16)
  805c80:	80800515 	stw	r2,20(r16)
  805c84:	003fd306 	br	805bd4 <__alt_data_end+0xff805bd4>
  805c88:	04810004 	movi	r18,1024
  805c8c:	003fc306 	br	805b9c <__alt_data_end+0xff805b9c>
  805c90:	0027883a 	mov	r19,zero
  805c94:	04810004 	movi	r18,1024
  805c98:	003fc006 	br	805b9c <__alt_data_end+0xff805b9c>

00805c9c <_malloc_r>:
  805c9c:	defff504 	addi	sp,sp,-44
  805ca0:	dc800315 	stw	r18,12(sp)
  805ca4:	dfc00a15 	stw	ra,40(sp)
  805ca8:	df000915 	stw	fp,36(sp)
  805cac:	ddc00815 	stw	r23,32(sp)
  805cb0:	dd800715 	stw	r22,28(sp)
  805cb4:	dd400615 	stw	r21,24(sp)
  805cb8:	dd000515 	stw	r20,20(sp)
  805cbc:	dcc00415 	stw	r19,16(sp)
  805cc0:	dc400215 	stw	r17,8(sp)
  805cc4:	dc000115 	stw	r16,4(sp)
  805cc8:	288002c4 	addi	r2,r5,11
  805ccc:	00c00584 	movi	r3,22
  805cd0:	2025883a 	mov	r18,r4
  805cd4:	18807f2e 	bgeu	r3,r2,805ed4 <_malloc_r+0x238>
  805cd8:	047ffe04 	movi	r17,-8
  805cdc:	1462703a 	and	r17,r2,r17
  805ce0:	8800a316 	blt	r17,zero,805f70 <_malloc_r+0x2d4>
  805ce4:	8940a236 	bltu	r17,r5,805f70 <_malloc_r+0x2d4>
  805ce8:	080d8f80 	call	80d8f8 <__malloc_lock>
  805cec:	00807dc4 	movi	r2,503
  805cf0:	1441e92e 	bgeu	r2,r17,806498 <_malloc_r+0x7fc>
  805cf4:	8804d27a 	srli	r2,r17,9
  805cf8:	1000a126 	beq	r2,zero,805f80 <_malloc_r+0x2e4>
  805cfc:	00c00104 	movi	r3,4
  805d00:	18811e36 	bltu	r3,r2,80617c <_malloc_r+0x4e0>
  805d04:	8804d1ba 	srli	r2,r17,6
  805d08:	12000e44 	addi	r8,r2,57
  805d0c:	11c00e04 	addi	r7,r2,56
  805d10:	4209883a 	add	r4,r8,r8
  805d14:	04c02074 	movhi	r19,129
  805d18:	2109883a 	add	r4,r4,r4
  805d1c:	9cc12a04 	addi	r19,r19,1192
  805d20:	2109883a 	add	r4,r4,r4
  805d24:	9909883a 	add	r4,r19,r4
  805d28:	24000117 	ldw	r16,4(r4)
  805d2c:	213ffe04 	addi	r4,r4,-8
  805d30:	24009726 	beq	r4,r16,805f90 <_malloc_r+0x2f4>
  805d34:	80800117 	ldw	r2,4(r16)
  805d38:	01bfff04 	movi	r6,-4
  805d3c:	014003c4 	movi	r5,15
  805d40:	1184703a 	and	r2,r2,r6
  805d44:	1447c83a 	sub	r3,r2,r17
  805d48:	28c00716 	blt	r5,r3,805d68 <_malloc_r+0xcc>
  805d4c:	1800920e 	bge	r3,zero,805f98 <_malloc_r+0x2fc>
  805d50:	84000317 	ldw	r16,12(r16)
  805d54:	24008e26 	beq	r4,r16,805f90 <_malloc_r+0x2f4>
  805d58:	80800117 	ldw	r2,4(r16)
  805d5c:	1184703a 	and	r2,r2,r6
  805d60:	1447c83a 	sub	r3,r2,r17
  805d64:	28fff90e 	bge	r5,r3,805d4c <__alt_data_end+0xff805d4c>
  805d68:	3809883a 	mov	r4,r7
  805d6c:	01802074 	movhi	r6,129
  805d70:	9c000417 	ldw	r16,16(r19)
  805d74:	31812a04 	addi	r6,r6,1192
  805d78:	32000204 	addi	r8,r6,8
  805d7c:	82013426 	beq	r16,r8,806250 <_malloc_r+0x5b4>
  805d80:	80c00117 	ldw	r3,4(r16)
  805d84:	00bfff04 	movi	r2,-4
  805d88:	188e703a 	and	r7,r3,r2
  805d8c:	3c45c83a 	sub	r2,r7,r17
  805d90:	00c003c4 	movi	r3,15
  805d94:	18811f16 	blt	r3,r2,806214 <_malloc_r+0x578>
  805d98:	32000515 	stw	r8,20(r6)
  805d9c:	32000415 	stw	r8,16(r6)
  805da0:	10007f0e 	bge	r2,zero,805fa0 <_malloc_r+0x304>
  805da4:	00807fc4 	movi	r2,511
  805da8:	11c0fd36 	bltu	r2,r7,8061a0 <_malloc_r+0x504>
  805dac:	3806d0fa 	srli	r3,r7,3
  805db0:	01c00044 	movi	r7,1
  805db4:	30800117 	ldw	r2,4(r6)
  805db8:	19400044 	addi	r5,r3,1
  805dbc:	294b883a 	add	r5,r5,r5
  805dc0:	1807d0ba 	srai	r3,r3,2
  805dc4:	294b883a 	add	r5,r5,r5
  805dc8:	294b883a 	add	r5,r5,r5
  805dcc:	298b883a 	add	r5,r5,r6
  805dd0:	38c6983a 	sll	r3,r7,r3
  805dd4:	29c00017 	ldw	r7,0(r5)
  805dd8:	2a7ffe04 	addi	r9,r5,-8
  805ddc:	1886b03a 	or	r3,r3,r2
  805de0:	82400315 	stw	r9,12(r16)
  805de4:	81c00215 	stw	r7,8(r16)
  805de8:	30c00115 	stw	r3,4(r6)
  805dec:	2c000015 	stw	r16,0(r5)
  805df0:	3c000315 	stw	r16,12(r7)
  805df4:	2005d0ba 	srai	r2,r4,2
  805df8:	01400044 	movi	r5,1
  805dfc:	288a983a 	sll	r5,r5,r2
  805e00:	19406f36 	bltu	r3,r5,805fc0 <_malloc_r+0x324>
  805e04:	28c4703a 	and	r2,r5,r3
  805e08:	10000a1e 	bne	r2,zero,805e34 <_malloc_r+0x198>
  805e0c:	00bfff04 	movi	r2,-4
  805e10:	294b883a 	add	r5,r5,r5
  805e14:	2088703a 	and	r4,r4,r2
  805e18:	28c4703a 	and	r2,r5,r3
  805e1c:	21000104 	addi	r4,r4,4
  805e20:	1000041e 	bne	r2,zero,805e34 <_malloc_r+0x198>
  805e24:	294b883a 	add	r5,r5,r5
  805e28:	28c4703a 	and	r2,r5,r3
  805e2c:	21000104 	addi	r4,r4,4
  805e30:	103ffc26 	beq	r2,zero,805e24 <__alt_data_end+0xff805e24>
  805e34:	02bfff04 	movi	r10,-4
  805e38:	024003c4 	movi	r9,15
  805e3c:	21800044 	addi	r6,r4,1
  805e40:	318d883a 	add	r6,r6,r6
  805e44:	318d883a 	add	r6,r6,r6
  805e48:	318d883a 	add	r6,r6,r6
  805e4c:	998d883a 	add	r6,r19,r6
  805e50:	333ffe04 	addi	r12,r6,-8
  805e54:	2017883a 	mov	r11,r4
  805e58:	31800104 	addi	r6,r6,4
  805e5c:	34000017 	ldw	r16,0(r6)
  805e60:	31fffd04 	addi	r7,r6,-12
  805e64:	81c0041e 	bne	r16,r7,805e78 <_malloc_r+0x1dc>
  805e68:	0000fb06 	br	806258 <_malloc_r+0x5bc>
  805e6c:	1801030e 	bge	r3,zero,80627c <_malloc_r+0x5e0>
  805e70:	84000317 	ldw	r16,12(r16)
  805e74:	81c0f826 	beq	r16,r7,806258 <_malloc_r+0x5bc>
  805e78:	80800117 	ldw	r2,4(r16)
  805e7c:	1284703a 	and	r2,r2,r10
  805e80:	1447c83a 	sub	r3,r2,r17
  805e84:	48fff90e 	bge	r9,r3,805e6c <__alt_data_end+0xff805e6c>
  805e88:	80800317 	ldw	r2,12(r16)
  805e8c:	81000217 	ldw	r4,8(r16)
  805e90:	89400054 	ori	r5,r17,1
  805e94:	81400115 	stw	r5,4(r16)
  805e98:	20800315 	stw	r2,12(r4)
  805e9c:	11000215 	stw	r4,8(r2)
  805ea0:	8463883a 	add	r17,r16,r17
  805ea4:	9c400515 	stw	r17,20(r19)
  805ea8:	9c400415 	stw	r17,16(r19)
  805eac:	18800054 	ori	r2,r3,1
  805eb0:	88800115 	stw	r2,4(r17)
  805eb4:	8a000315 	stw	r8,12(r17)
  805eb8:	8a000215 	stw	r8,8(r17)
  805ebc:	88e3883a 	add	r17,r17,r3
  805ec0:	88c00015 	stw	r3,0(r17)
  805ec4:	9009883a 	mov	r4,r18
  805ec8:	080d91c0 	call	80d91c <__malloc_unlock>
  805ecc:	80800204 	addi	r2,r16,8
  805ed0:	00001b06 	br	805f40 <_malloc_r+0x2a4>
  805ed4:	04400404 	movi	r17,16
  805ed8:	89402536 	bltu	r17,r5,805f70 <_malloc_r+0x2d4>
  805edc:	080d8f80 	call	80d8f8 <__malloc_lock>
  805ee0:	00800184 	movi	r2,6
  805ee4:	01000084 	movi	r4,2
  805ee8:	04c02074 	movhi	r19,129
  805eec:	1085883a 	add	r2,r2,r2
  805ef0:	9cc12a04 	addi	r19,r19,1192
  805ef4:	1085883a 	add	r2,r2,r2
  805ef8:	9885883a 	add	r2,r19,r2
  805efc:	14000117 	ldw	r16,4(r2)
  805f00:	10fffe04 	addi	r3,r2,-8
  805f04:	80c0d926 	beq	r16,r3,80626c <_malloc_r+0x5d0>
  805f08:	80c00117 	ldw	r3,4(r16)
  805f0c:	81000317 	ldw	r4,12(r16)
  805f10:	00bfff04 	movi	r2,-4
  805f14:	1884703a 	and	r2,r3,r2
  805f18:	81400217 	ldw	r5,8(r16)
  805f1c:	8085883a 	add	r2,r16,r2
  805f20:	10c00117 	ldw	r3,4(r2)
  805f24:	29000315 	stw	r4,12(r5)
  805f28:	21400215 	stw	r5,8(r4)
  805f2c:	18c00054 	ori	r3,r3,1
  805f30:	10c00115 	stw	r3,4(r2)
  805f34:	9009883a 	mov	r4,r18
  805f38:	080d91c0 	call	80d91c <__malloc_unlock>
  805f3c:	80800204 	addi	r2,r16,8
  805f40:	dfc00a17 	ldw	ra,40(sp)
  805f44:	df000917 	ldw	fp,36(sp)
  805f48:	ddc00817 	ldw	r23,32(sp)
  805f4c:	dd800717 	ldw	r22,28(sp)
  805f50:	dd400617 	ldw	r21,24(sp)
  805f54:	dd000517 	ldw	r20,20(sp)
  805f58:	dcc00417 	ldw	r19,16(sp)
  805f5c:	dc800317 	ldw	r18,12(sp)
  805f60:	dc400217 	ldw	r17,8(sp)
  805f64:	dc000117 	ldw	r16,4(sp)
  805f68:	dec00b04 	addi	sp,sp,44
  805f6c:	f800283a 	ret
  805f70:	00800304 	movi	r2,12
  805f74:	90800015 	stw	r2,0(r18)
  805f78:	0005883a 	mov	r2,zero
  805f7c:	003ff006 	br	805f40 <__alt_data_end+0xff805f40>
  805f80:	01002004 	movi	r4,128
  805f84:	02001004 	movi	r8,64
  805f88:	01c00fc4 	movi	r7,63
  805f8c:	003f6106 	br	805d14 <__alt_data_end+0xff805d14>
  805f90:	4009883a 	mov	r4,r8
  805f94:	003f7506 	br	805d6c <__alt_data_end+0xff805d6c>
  805f98:	81000317 	ldw	r4,12(r16)
  805f9c:	003fde06 	br	805f18 <__alt_data_end+0xff805f18>
  805fa0:	81c5883a 	add	r2,r16,r7
  805fa4:	11400117 	ldw	r5,4(r2)
  805fa8:	9009883a 	mov	r4,r18
  805fac:	29400054 	ori	r5,r5,1
  805fb0:	11400115 	stw	r5,4(r2)
  805fb4:	080d91c0 	call	80d91c <__malloc_unlock>
  805fb8:	80800204 	addi	r2,r16,8
  805fbc:	003fe006 	br	805f40 <__alt_data_end+0xff805f40>
  805fc0:	9c000217 	ldw	r16,8(r19)
  805fc4:	00bfff04 	movi	r2,-4
  805fc8:	85800117 	ldw	r22,4(r16)
  805fcc:	b0ac703a 	and	r22,r22,r2
  805fd0:	b4400336 	bltu	r22,r17,805fe0 <_malloc_r+0x344>
  805fd4:	b445c83a 	sub	r2,r22,r17
  805fd8:	00c003c4 	movi	r3,15
  805fdc:	18805d16 	blt	r3,r2,806154 <_malloc_r+0x4b8>
  805fe0:	05c02074 	movhi	r23,129
  805fe4:	00802074 	movhi	r2,129
  805fe8:	108d7e04 	addi	r2,r2,13816
  805fec:	bdc6b104 	addi	r23,r23,6852
  805ff0:	15400017 	ldw	r21,0(r2)
  805ff4:	b8c00017 	ldw	r3,0(r23)
  805ff8:	00bfffc4 	movi	r2,-1
  805ffc:	858d883a 	add	r6,r16,r22
  806000:	8d6b883a 	add	r21,r17,r21
  806004:	1880ea26 	beq	r3,r2,8063b0 <_malloc_r+0x714>
  806008:	ad4403c4 	addi	r21,r21,4111
  80600c:	00bc0004 	movi	r2,-4096
  806010:	a8aa703a 	and	r21,r21,r2
  806014:	a80b883a 	mov	r5,r21
  806018:	9009883a 	mov	r4,r18
  80601c:	d9800015 	stw	r6,0(sp)
  806020:	0807f2c0 	call	807f2c <_sbrk_r>
  806024:	1029883a 	mov	r20,r2
  806028:	00bfffc4 	movi	r2,-1
  80602c:	d9800017 	ldw	r6,0(sp)
  806030:	a080e826 	beq	r20,r2,8063d4 <_malloc_r+0x738>
  806034:	a180a636 	bltu	r20,r6,8062d0 <_malloc_r+0x634>
  806038:	07002074 	movhi	fp,129
  80603c:	e70d8704 	addi	fp,fp,13852
  806040:	e0800017 	ldw	r2,0(fp)
  806044:	a887883a 	add	r3,r21,r2
  806048:	e0c00015 	stw	r3,0(fp)
  80604c:	3500e626 	beq	r6,r20,8063e8 <_malloc_r+0x74c>
  806050:	b9000017 	ldw	r4,0(r23)
  806054:	00bfffc4 	movi	r2,-1
  806058:	2080ee26 	beq	r4,r2,806414 <_malloc_r+0x778>
  80605c:	a185c83a 	sub	r2,r20,r6
  806060:	10c5883a 	add	r2,r2,r3
  806064:	e0800015 	stw	r2,0(fp)
  806068:	a0c001cc 	andi	r3,r20,7
  80606c:	1800bc26 	beq	r3,zero,806360 <_malloc_r+0x6c4>
  806070:	a0e9c83a 	sub	r20,r20,r3
  806074:	00840204 	movi	r2,4104
  806078:	a5000204 	addi	r20,r20,8
  80607c:	10c7c83a 	sub	r3,r2,r3
  806080:	a545883a 	add	r2,r20,r21
  806084:	1083ffcc 	andi	r2,r2,4095
  806088:	18abc83a 	sub	r21,r3,r2
  80608c:	a80b883a 	mov	r5,r21
  806090:	9009883a 	mov	r4,r18
  806094:	0807f2c0 	call	807f2c <_sbrk_r>
  806098:	00ffffc4 	movi	r3,-1
  80609c:	10c0e126 	beq	r2,r3,806424 <_malloc_r+0x788>
  8060a0:	1505c83a 	sub	r2,r2,r20
  8060a4:	1545883a 	add	r2,r2,r21
  8060a8:	10800054 	ori	r2,r2,1
  8060ac:	e0c00017 	ldw	r3,0(fp)
  8060b0:	9d000215 	stw	r20,8(r19)
  8060b4:	a0800115 	stw	r2,4(r20)
  8060b8:	a8c7883a 	add	r3,r21,r3
  8060bc:	e0c00015 	stw	r3,0(fp)
  8060c0:	84c00e26 	beq	r16,r19,8060fc <_malloc_r+0x460>
  8060c4:	018003c4 	movi	r6,15
  8060c8:	3580a72e 	bgeu	r6,r22,806368 <_malloc_r+0x6cc>
  8060cc:	81400117 	ldw	r5,4(r16)
  8060d0:	013ffe04 	movi	r4,-8
  8060d4:	b0bffd04 	addi	r2,r22,-12
  8060d8:	1104703a 	and	r2,r2,r4
  8060dc:	2900004c 	andi	r4,r5,1
  8060e0:	2088b03a 	or	r4,r4,r2
  8060e4:	81000115 	stw	r4,4(r16)
  8060e8:	01400144 	movi	r5,5
  8060ec:	8089883a 	add	r4,r16,r2
  8060f0:	21400115 	stw	r5,4(r4)
  8060f4:	21400215 	stw	r5,8(r4)
  8060f8:	3080cd36 	bltu	r6,r2,806430 <_malloc_r+0x794>
  8060fc:	00802074 	movhi	r2,129
  806100:	108d7d04 	addi	r2,r2,13812
  806104:	11000017 	ldw	r4,0(r2)
  806108:	20c0012e 	bgeu	r4,r3,806110 <_malloc_r+0x474>
  80610c:	10c00015 	stw	r3,0(r2)
  806110:	00802074 	movhi	r2,129
  806114:	108d7c04 	addi	r2,r2,13808
  806118:	11000017 	ldw	r4,0(r2)
  80611c:	9c000217 	ldw	r16,8(r19)
  806120:	20c0012e 	bgeu	r4,r3,806128 <_malloc_r+0x48c>
  806124:	10c00015 	stw	r3,0(r2)
  806128:	80c00117 	ldw	r3,4(r16)
  80612c:	00bfff04 	movi	r2,-4
  806130:	1886703a 	and	r3,r3,r2
  806134:	1c45c83a 	sub	r2,r3,r17
  806138:	1c400236 	bltu	r3,r17,806144 <_malloc_r+0x4a8>
  80613c:	00c003c4 	movi	r3,15
  806140:	18800416 	blt	r3,r2,806154 <_malloc_r+0x4b8>
  806144:	9009883a 	mov	r4,r18
  806148:	080d91c0 	call	80d91c <__malloc_unlock>
  80614c:	0005883a 	mov	r2,zero
  806150:	003f7b06 	br	805f40 <__alt_data_end+0xff805f40>
  806154:	88c00054 	ori	r3,r17,1
  806158:	80c00115 	stw	r3,4(r16)
  80615c:	8463883a 	add	r17,r16,r17
  806160:	10800054 	ori	r2,r2,1
  806164:	9c400215 	stw	r17,8(r19)
  806168:	88800115 	stw	r2,4(r17)
  80616c:	9009883a 	mov	r4,r18
  806170:	080d91c0 	call	80d91c <__malloc_unlock>
  806174:	80800204 	addi	r2,r16,8
  806178:	003f7106 	br	805f40 <__alt_data_end+0xff805f40>
  80617c:	00c00504 	movi	r3,20
  806180:	18804a2e 	bgeu	r3,r2,8062ac <_malloc_r+0x610>
  806184:	00c01504 	movi	r3,84
  806188:	18806e36 	bltu	r3,r2,806344 <_malloc_r+0x6a8>
  80618c:	8804d33a 	srli	r2,r17,12
  806190:	12001bc4 	addi	r8,r2,111
  806194:	11c01b84 	addi	r7,r2,110
  806198:	4209883a 	add	r4,r8,r8
  80619c:	003edd06 	br	805d14 <__alt_data_end+0xff805d14>
  8061a0:	3804d27a 	srli	r2,r7,9
  8061a4:	00c00104 	movi	r3,4
  8061a8:	1880442e 	bgeu	r3,r2,8062bc <_malloc_r+0x620>
  8061ac:	00c00504 	movi	r3,20
  8061b0:	18808136 	bltu	r3,r2,8063b8 <_malloc_r+0x71c>
  8061b4:	11401704 	addi	r5,r2,92
  8061b8:	10c016c4 	addi	r3,r2,91
  8061bc:	294b883a 	add	r5,r5,r5
  8061c0:	294b883a 	add	r5,r5,r5
  8061c4:	294b883a 	add	r5,r5,r5
  8061c8:	994b883a 	add	r5,r19,r5
  8061cc:	28800017 	ldw	r2,0(r5)
  8061d0:	01802074 	movhi	r6,129
  8061d4:	297ffe04 	addi	r5,r5,-8
  8061d8:	31812a04 	addi	r6,r6,1192
  8061dc:	28806526 	beq	r5,r2,806374 <_malloc_r+0x6d8>
  8061e0:	01bfff04 	movi	r6,-4
  8061e4:	10c00117 	ldw	r3,4(r2)
  8061e8:	1986703a 	and	r3,r3,r6
  8061ec:	38c0022e 	bgeu	r7,r3,8061f8 <_malloc_r+0x55c>
  8061f0:	10800217 	ldw	r2,8(r2)
  8061f4:	28bffb1e 	bne	r5,r2,8061e4 <__alt_data_end+0xff8061e4>
  8061f8:	11400317 	ldw	r5,12(r2)
  8061fc:	98c00117 	ldw	r3,4(r19)
  806200:	81400315 	stw	r5,12(r16)
  806204:	80800215 	stw	r2,8(r16)
  806208:	2c000215 	stw	r16,8(r5)
  80620c:	14000315 	stw	r16,12(r2)
  806210:	003ef806 	br	805df4 <__alt_data_end+0xff805df4>
  806214:	88c00054 	ori	r3,r17,1
  806218:	80c00115 	stw	r3,4(r16)
  80621c:	8463883a 	add	r17,r16,r17
  806220:	34400515 	stw	r17,20(r6)
  806224:	34400415 	stw	r17,16(r6)
  806228:	10c00054 	ori	r3,r2,1
  80622c:	8a000315 	stw	r8,12(r17)
  806230:	8a000215 	stw	r8,8(r17)
  806234:	88c00115 	stw	r3,4(r17)
  806238:	88a3883a 	add	r17,r17,r2
  80623c:	88800015 	stw	r2,0(r17)
  806240:	9009883a 	mov	r4,r18
  806244:	080d91c0 	call	80d91c <__malloc_unlock>
  806248:	80800204 	addi	r2,r16,8
  80624c:	003f3c06 	br	805f40 <__alt_data_end+0xff805f40>
  806250:	30c00117 	ldw	r3,4(r6)
  806254:	003ee706 	br	805df4 <__alt_data_end+0xff805df4>
  806258:	5ac00044 	addi	r11,r11,1
  80625c:	588000cc 	andi	r2,r11,3
  806260:	31800204 	addi	r6,r6,8
  806264:	103efd1e 	bne	r2,zero,805e5c <__alt_data_end+0xff805e5c>
  806268:	00002406 	br	8062fc <_malloc_r+0x660>
  80626c:	14000317 	ldw	r16,12(r2)
  806270:	143f251e 	bne	r2,r16,805f08 <__alt_data_end+0xff805f08>
  806274:	21000084 	addi	r4,r4,2
  806278:	003ebc06 	br	805d6c <__alt_data_end+0xff805d6c>
  80627c:	8085883a 	add	r2,r16,r2
  806280:	10c00117 	ldw	r3,4(r2)
  806284:	81000317 	ldw	r4,12(r16)
  806288:	81400217 	ldw	r5,8(r16)
  80628c:	18c00054 	ori	r3,r3,1
  806290:	10c00115 	stw	r3,4(r2)
  806294:	29000315 	stw	r4,12(r5)
  806298:	21400215 	stw	r5,8(r4)
  80629c:	9009883a 	mov	r4,r18
  8062a0:	080d91c0 	call	80d91c <__malloc_unlock>
  8062a4:	80800204 	addi	r2,r16,8
  8062a8:	003f2506 	br	805f40 <__alt_data_end+0xff805f40>
  8062ac:	12001704 	addi	r8,r2,92
  8062b0:	11c016c4 	addi	r7,r2,91
  8062b4:	4209883a 	add	r4,r8,r8
  8062b8:	003e9606 	br	805d14 <__alt_data_end+0xff805d14>
  8062bc:	3804d1ba 	srli	r2,r7,6
  8062c0:	11400e44 	addi	r5,r2,57
  8062c4:	10c00e04 	addi	r3,r2,56
  8062c8:	294b883a 	add	r5,r5,r5
  8062cc:	003fbc06 	br	8061c0 <__alt_data_end+0xff8061c0>
  8062d0:	84ff5926 	beq	r16,r19,806038 <__alt_data_end+0xff806038>
  8062d4:	00802074 	movhi	r2,129
  8062d8:	10812a04 	addi	r2,r2,1192
  8062dc:	14000217 	ldw	r16,8(r2)
  8062e0:	00bfff04 	movi	r2,-4
  8062e4:	80c00117 	ldw	r3,4(r16)
  8062e8:	1886703a 	and	r3,r3,r2
  8062ec:	003f9106 	br	806134 <__alt_data_end+0xff806134>
  8062f0:	60800217 	ldw	r2,8(r12)
  8062f4:	213fffc4 	addi	r4,r4,-1
  8062f8:	1300651e 	bne	r2,r12,806490 <_malloc_r+0x7f4>
  8062fc:	208000cc 	andi	r2,r4,3
  806300:	633ffe04 	addi	r12,r12,-8
  806304:	103ffa1e 	bne	r2,zero,8062f0 <__alt_data_end+0xff8062f0>
  806308:	98800117 	ldw	r2,4(r19)
  80630c:	0146303a 	nor	r3,zero,r5
  806310:	1884703a 	and	r2,r3,r2
  806314:	98800115 	stw	r2,4(r19)
  806318:	294b883a 	add	r5,r5,r5
  80631c:	117f2836 	bltu	r2,r5,805fc0 <__alt_data_end+0xff805fc0>
  806320:	283f2726 	beq	r5,zero,805fc0 <__alt_data_end+0xff805fc0>
  806324:	2886703a 	and	r3,r5,r2
  806328:	5809883a 	mov	r4,r11
  80632c:	183ec31e 	bne	r3,zero,805e3c <__alt_data_end+0xff805e3c>
  806330:	294b883a 	add	r5,r5,r5
  806334:	2886703a 	and	r3,r5,r2
  806338:	21000104 	addi	r4,r4,4
  80633c:	183ffc26 	beq	r3,zero,806330 <__alt_data_end+0xff806330>
  806340:	003ebe06 	br	805e3c <__alt_data_end+0xff805e3c>
  806344:	00c05504 	movi	r3,340
  806348:	18801236 	bltu	r3,r2,806394 <_malloc_r+0x6f8>
  80634c:	8804d3fa 	srli	r2,r17,15
  806350:	12001e04 	addi	r8,r2,120
  806354:	11c01dc4 	addi	r7,r2,119
  806358:	4209883a 	add	r4,r8,r8
  80635c:	003e6d06 	br	805d14 <__alt_data_end+0xff805d14>
  806360:	00c40004 	movi	r3,4096
  806364:	003f4606 	br	806080 <__alt_data_end+0xff806080>
  806368:	00800044 	movi	r2,1
  80636c:	a0800115 	stw	r2,4(r20)
  806370:	003f7406 	br	806144 <__alt_data_end+0xff806144>
  806374:	1805d0ba 	srai	r2,r3,2
  806378:	01c00044 	movi	r7,1
  80637c:	30c00117 	ldw	r3,4(r6)
  806380:	388e983a 	sll	r7,r7,r2
  806384:	2805883a 	mov	r2,r5
  806388:	38c6b03a 	or	r3,r7,r3
  80638c:	30c00115 	stw	r3,4(r6)
  806390:	003f9b06 	br	806200 <__alt_data_end+0xff806200>
  806394:	00c15504 	movi	r3,1364
  806398:	18801a36 	bltu	r3,r2,806404 <_malloc_r+0x768>
  80639c:	8804d4ba 	srli	r2,r17,18
  8063a0:	12001f44 	addi	r8,r2,125
  8063a4:	11c01f04 	addi	r7,r2,124
  8063a8:	4209883a 	add	r4,r8,r8
  8063ac:	003e5906 	br	805d14 <__alt_data_end+0xff805d14>
  8063b0:	ad400404 	addi	r21,r21,16
  8063b4:	003f1706 	br	806014 <__alt_data_end+0xff806014>
  8063b8:	00c01504 	movi	r3,84
  8063bc:	18802336 	bltu	r3,r2,80644c <_malloc_r+0x7b0>
  8063c0:	3804d33a 	srli	r2,r7,12
  8063c4:	11401bc4 	addi	r5,r2,111
  8063c8:	10c01b84 	addi	r3,r2,110
  8063cc:	294b883a 	add	r5,r5,r5
  8063d0:	003f7b06 	br	8061c0 <__alt_data_end+0xff8061c0>
  8063d4:	9c000217 	ldw	r16,8(r19)
  8063d8:	00bfff04 	movi	r2,-4
  8063dc:	80c00117 	ldw	r3,4(r16)
  8063e0:	1886703a 	and	r3,r3,r2
  8063e4:	003f5306 	br	806134 <__alt_data_end+0xff806134>
  8063e8:	3083ffcc 	andi	r2,r6,4095
  8063ec:	103f181e 	bne	r2,zero,806050 <__alt_data_end+0xff806050>
  8063f0:	99000217 	ldw	r4,8(r19)
  8063f4:	b545883a 	add	r2,r22,r21
  8063f8:	10800054 	ori	r2,r2,1
  8063fc:	20800115 	stw	r2,4(r4)
  806400:	003f3e06 	br	8060fc <__alt_data_end+0xff8060fc>
  806404:	01003f84 	movi	r4,254
  806408:	02001fc4 	movi	r8,127
  80640c:	01c01f84 	movi	r7,126
  806410:	003e4006 	br	805d14 <__alt_data_end+0xff805d14>
  806414:	00802074 	movhi	r2,129
  806418:	1086b104 	addi	r2,r2,6852
  80641c:	15000015 	stw	r20,0(r2)
  806420:	003f1106 	br	806068 <__alt_data_end+0xff806068>
  806424:	00800044 	movi	r2,1
  806428:	002b883a 	mov	r21,zero
  80642c:	003f1f06 	br	8060ac <__alt_data_end+0xff8060ac>
  806430:	81400204 	addi	r5,r16,8
  806434:	9009883a 	mov	r4,r18
  806438:	08050b00 	call	8050b0 <_free_r>
  80643c:	00802074 	movhi	r2,129
  806440:	108d8704 	addi	r2,r2,13852
  806444:	10c00017 	ldw	r3,0(r2)
  806448:	003f2c06 	br	8060fc <__alt_data_end+0xff8060fc>
  80644c:	00c05504 	movi	r3,340
  806450:	18800536 	bltu	r3,r2,806468 <_malloc_r+0x7cc>
  806454:	3804d3fa 	srli	r2,r7,15
  806458:	11401e04 	addi	r5,r2,120
  80645c:	10c01dc4 	addi	r3,r2,119
  806460:	294b883a 	add	r5,r5,r5
  806464:	003f5606 	br	8061c0 <__alt_data_end+0xff8061c0>
  806468:	00c15504 	movi	r3,1364
  80646c:	18800536 	bltu	r3,r2,806484 <_malloc_r+0x7e8>
  806470:	3804d4ba 	srli	r2,r7,18
  806474:	11401f44 	addi	r5,r2,125
  806478:	10c01f04 	addi	r3,r2,124
  80647c:	294b883a 	add	r5,r5,r5
  806480:	003f4f06 	br	8061c0 <__alt_data_end+0xff8061c0>
  806484:	01403f84 	movi	r5,254
  806488:	00c01f84 	movi	r3,126
  80648c:	003f4c06 	br	8061c0 <__alt_data_end+0xff8061c0>
  806490:	98800117 	ldw	r2,4(r19)
  806494:	003fa006 	br	806318 <__alt_data_end+0xff806318>
  806498:	8808d0fa 	srli	r4,r17,3
  80649c:	20800044 	addi	r2,r4,1
  8064a0:	1085883a 	add	r2,r2,r2
  8064a4:	003e9006 	br	805ee8 <__alt_data_end+0xff805ee8>

008064a8 <memchr>:
  8064a8:	208000cc 	andi	r2,r4,3
  8064ac:	280f883a 	mov	r7,r5
  8064b0:	10003426 	beq	r2,zero,806584 <memchr+0xdc>
  8064b4:	30bfffc4 	addi	r2,r6,-1
  8064b8:	30001a26 	beq	r6,zero,806524 <memchr+0x7c>
  8064bc:	20c00003 	ldbu	r3,0(r4)
  8064c0:	29803fcc 	andi	r6,r5,255
  8064c4:	30c0051e 	bne	r6,r3,8064dc <memchr+0x34>
  8064c8:	00001806 	br	80652c <memchr+0x84>
  8064cc:	10001526 	beq	r2,zero,806524 <memchr+0x7c>
  8064d0:	20c00003 	ldbu	r3,0(r4)
  8064d4:	10bfffc4 	addi	r2,r2,-1
  8064d8:	30c01426 	beq	r6,r3,80652c <memchr+0x84>
  8064dc:	21000044 	addi	r4,r4,1
  8064e0:	20c000cc 	andi	r3,r4,3
  8064e4:	183ff91e 	bne	r3,zero,8064cc <__alt_data_end+0xff8064cc>
  8064e8:	020000c4 	movi	r8,3
  8064ec:	40801136 	bltu	r8,r2,806534 <memchr+0x8c>
  8064f0:	10000c26 	beq	r2,zero,806524 <memchr+0x7c>
  8064f4:	20c00003 	ldbu	r3,0(r4)
  8064f8:	29403fcc 	andi	r5,r5,255
  8064fc:	28c00b26 	beq	r5,r3,80652c <memchr+0x84>
  806500:	20c00044 	addi	r3,r4,1
  806504:	39803fcc 	andi	r6,r7,255
  806508:	2089883a 	add	r4,r4,r2
  80650c:	00000306 	br	80651c <memchr+0x74>
  806510:	18c00044 	addi	r3,r3,1
  806514:	197fffc3 	ldbu	r5,-1(r3)
  806518:	31400526 	beq	r6,r5,806530 <memchr+0x88>
  80651c:	1805883a 	mov	r2,r3
  806520:	20fffb1e 	bne	r4,r3,806510 <__alt_data_end+0xff806510>
  806524:	0005883a 	mov	r2,zero
  806528:	f800283a 	ret
  80652c:	2005883a 	mov	r2,r4
  806530:	f800283a 	ret
  806534:	28c03fcc 	andi	r3,r5,255
  806538:	1812923a 	slli	r9,r3,8
  80653c:	02ffbff4 	movhi	r11,65279
  806540:	02a02074 	movhi	r10,32897
  806544:	48d2b03a 	or	r9,r9,r3
  806548:	4806943a 	slli	r3,r9,16
  80654c:	5affbfc4 	addi	r11,r11,-257
  806550:	52a02004 	addi	r10,r10,-32640
  806554:	48d2b03a 	or	r9,r9,r3
  806558:	20c00017 	ldw	r3,0(r4)
  80655c:	48c6f03a 	xor	r3,r9,r3
  806560:	1acd883a 	add	r6,r3,r11
  806564:	00c6303a 	nor	r3,zero,r3
  806568:	30c6703a 	and	r3,r6,r3
  80656c:	1a86703a 	and	r3,r3,r10
  806570:	183fe01e 	bne	r3,zero,8064f4 <__alt_data_end+0xff8064f4>
  806574:	10bfff04 	addi	r2,r2,-4
  806578:	21000104 	addi	r4,r4,4
  80657c:	40bff636 	bltu	r8,r2,806558 <__alt_data_end+0xff806558>
  806580:	003fdb06 	br	8064f0 <__alt_data_end+0xff8064f0>
  806584:	3005883a 	mov	r2,r6
  806588:	003fd706 	br	8064e8 <__alt_data_end+0xff8064e8>

0080658c <memcpy>:
  80658c:	defffd04 	addi	sp,sp,-12
  806590:	dfc00215 	stw	ra,8(sp)
  806594:	dc400115 	stw	r17,4(sp)
  806598:	dc000015 	stw	r16,0(sp)
  80659c:	00c003c4 	movi	r3,15
  8065a0:	2005883a 	mov	r2,r4
  8065a4:	1980452e 	bgeu	r3,r6,8066bc <memcpy+0x130>
  8065a8:	2906b03a 	or	r3,r5,r4
  8065ac:	18c000cc 	andi	r3,r3,3
  8065b0:	1800441e 	bne	r3,zero,8066c4 <memcpy+0x138>
  8065b4:	347ffc04 	addi	r17,r6,-16
  8065b8:	8822d13a 	srli	r17,r17,4
  8065bc:	28c00104 	addi	r3,r5,4
  8065c0:	23400104 	addi	r13,r4,4
  8065c4:	8820913a 	slli	r16,r17,4
  8065c8:	2b000204 	addi	r12,r5,8
  8065cc:	22c00204 	addi	r11,r4,8
  8065d0:	84000504 	addi	r16,r16,20
  8065d4:	2a800304 	addi	r10,r5,12
  8065d8:	22400304 	addi	r9,r4,12
  8065dc:	2c21883a 	add	r16,r5,r16
  8065e0:	2811883a 	mov	r8,r5
  8065e4:	200f883a 	mov	r7,r4
  8065e8:	41000017 	ldw	r4,0(r8)
  8065ec:	1fc00017 	ldw	ra,0(r3)
  8065f0:	63c00017 	ldw	r15,0(r12)
  8065f4:	39000015 	stw	r4,0(r7)
  8065f8:	53800017 	ldw	r14,0(r10)
  8065fc:	6fc00015 	stw	ra,0(r13)
  806600:	5bc00015 	stw	r15,0(r11)
  806604:	4b800015 	stw	r14,0(r9)
  806608:	18c00404 	addi	r3,r3,16
  80660c:	39c00404 	addi	r7,r7,16
  806610:	42000404 	addi	r8,r8,16
  806614:	6b400404 	addi	r13,r13,16
  806618:	63000404 	addi	r12,r12,16
  80661c:	5ac00404 	addi	r11,r11,16
  806620:	52800404 	addi	r10,r10,16
  806624:	4a400404 	addi	r9,r9,16
  806628:	1c3fef1e 	bne	r3,r16,8065e8 <__alt_data_end+0xff8065e8>
  80662c:	89c00044 	addi	r7,r17,1
  806630:	380e913a 	slli	r7,r7,4
  806634:	310003cc 	andi	r4,r6,15
  806638:	02c000c4 	movi	r11,3
  80663c:	11c7883a 	add	r3,r2,r7
  806640:	29cb883a 	add	r5,r5,r7
  806644:	5900212e 	bgeu	r11,r4,8066cc <memcpy+0x140>
  806648:	1813883a 	mov	r9,r3
  80664c:	2811883a 	mov	r8,r5
  806650:	200f883a 	mov	r7,r4
  806654:	42800017 	ldw	r10,0(r8)
  806658:	4a400104 	addi	r9,r9,4
  80665c:	39ffff04 	addi	r7,r7,-4
  806660:	4abfff15 	stw	r10,-4(r9)
  806664:	42000104 	addi	r8,r8,4
  806668:	59fffa36 	bltu	r11,r7,806654 <__alt_data_end+0xff806654>
  80666c:	213fff04 	addi	r4,r4,-4
  806670:	2008d0ba 	srli	r4,r4,2
  806674:	318000cc 	andi	r6,r6,3
  806678:	21000044 	addi	r4,r4,1
  80667c:	2109883a 	add	r4,r4,r4
  806680:	2109883a 	add	r4,r4,r4
  806684:	1907883a 	add	r3,r3,r4
  806688:	290b883a 	add	r5,r5,r4
  80668c:	30000626 	beq	r6,zero,8066a8 <memcpy+0x11c>
  806690:	198d883a 	add	r6,r3,r6
  806694:	29c00003 	ldbu	r7,0(r5)
  806698:	18c00044 	addi	r3,r3,1
  80669c:	29400044 	addi	r5,r5,1
  8066a0:	19ffffc5 	stb	r7,-1(r3)
  8066a4:	19bffb1e 	bne	r3,r6,806694 <__alt_data_end+0xff806694>
  8066a8:	dfc00217 	ldw	ra,8(sp)
  8066ac:	dc400117 	ldw	r17,4(sp)
  8066b0:	dc000017 	ldw	r16,0(sp)
  8066b4:	dec00304 	addi	sp,sp,12
  8066b8:	f800283a 	ret
  8066bc:	2007883a 	mov	r3,r4
  8066c0:	003ff206 	br	80668c <__alt_data_end+0xff80668c>
  8066c4:	2007883a 	mov	r3,r4
  8066c8:	003ff106 	br	806690 <__alt_data_end+0xff806690>
  8066cc:	200d883a 	mov	r6,r4
  8066d0:	003fee06 	br	80668c <__alt_data_end+0xff80668c>

008066d4 <memmove>:
  8066d4:	2005883a 	mov	r2,r4
  8066d8:	29000b2e 	bgeu	r5,r4,806708 <memmove+0x34>
  8066dc:	298f883a 	add	r7,r5,r6
  8066e0:	21c0092e 	bgeu	r4,r7,806708 <memmove+0x34>
  8066e4:	2187883a 	add	r3,r4,r6
  8066e8:	198bc83a 	sub	r5,r3,r6
  8066ec:	30004826 	beq	r6,zero,806810 <memmove+0x13c>
  8066f0:	39ffffc4 	addi	r7,r7,-1
  8066f4:	39000003 	ldbu	r4,0(r7)
  8066f8:	18ffffc4 	addi	r3,r3,-1
  8066fc:	19000005 	stb	r4,0(r3)
  806700:	28fffb1e 	bne	r5,r3,8066f0 <__alt_data_end+0xff8066f0>
  806704:	f800283a 	ret
  806708:	00c003c4 	movi	r3,15
  80670c:	1980412e 	bgeu	r3,r6,806814 <memmove+0x140>
  806710:	2886b03a 	or	r3,r5,r2
  806714:	18c000cc 	andi	r3,r3,3
  806718:	1800401e 	bne	r3,zero,80681c <memmove+0x148>
  80671c:	33fffc04 	addi	r15,r6,-16
  806720:	781ed13a 	srli	r15,r15,4
  806724:	28c00104 	addi	r3,r5,4
  806728:	13400104 	addi	r13,r2,4
  80672c:	781c913a 	slli	r14,r15,4
  806730:	2b000204 	addi	r12,r5,8
  806734:	12c00204 	addi	r11,r2,8
  806738:	73800504 	addi	r14,r14,20
  80673c:	2a800304 	addi	r10,r5,12
  806740:	12400304 	addi	r9,r2,12
  806744:	2b9d883a 	add	r14,r5,r14
  806748:	2811883a 	mov	r8,r5
  80674c:	100f883a 	mov	r7,r2
  806750:	41000017 	ldw	r4,0(r8)
  806754:	39c00404 	addi	r7,r7,16
  806758:	18c00404 	addi	r3,r3,16
  80675c:	393ffc15 	stw	r4,-16(r7)
  806760:	193ffc17 	ldw	r4,-16(r3)
  806764:	6b400404 	addi	r13,r13,16
  806768:	5ac00404 	addi	r11,r11,16
  80676c:	693ffc15 	stw	r4,-16(r13)
  806770:	61000017 	ldw	r4,0(r12)
  806774:	4a400404 	addi	r9,r9,16
  806778:	42000404 	addi	r8,r8,16
  80677c:	593ffc15 	stw	r4,-16(r11)
  806780:	51000017 	ldw	r4,0(r10)
  806784:	63000404 	addi	r12,r12,16
  806788:	52800404 	addi	r10,r10,16
  80678c:	493ffc15 	stw	r4,-16(r9)
  806790:	1bbfef1e 	bne	r3,r14,806750 <__alt_data_end+0xff806750>
  806794:	79000044 	addi	r4,r15,1
  806798:	2008913a 	slli	r4,r4,4
  80679c:	328003cc 	andi	r10,r6,15
  8067a0:	02c000c4 	movi	r11,3
  8067a4:	1107883a 	add	r3,r2,r4
  8067a8:	290b883a 	add	r5,r5,r4
  8067ac:	5a801e2e 	bgeu	r11,r10,806828 <memmove+0x154>
  8067b0:	1813883a 	mov	r9,r3
  8067b4:	2811883a 	mov	r8,r5
  8067b8:	500f883a 	mov	r7,r10
  8067bc:	41000017 	ldw	r4,0(r8)
  8067c0:	4a400104 	addi	r9,r9,4
  8067c4:	39ffff04 	addi	r7,r7,-4
  8067c8:	493fff15 	stw	r4,-4(r9)
  8067cc:	42000104 	addi	r8,r8,4
  8067d0:	59fffa36 	bltu	r11,r7,8067bc <__alt_data_end+0xff8067bc>
  8067d4:	513fff04 	addi	r4,r10,-4
  8067d8:	2008d0ba 	srli	r4,r4,2
  8067dc:	318000cc 	andi	r6,r6,3
  8067e0:	21000044 	addi	r4,r4,1
  8067e4:	2109883a 	add	r4,r4,r4
  8067e8:	2109883a 	add	r4,r4,r4
  8067ec:	1907883a 	add	r3,r3,r4
  8067f0:	290b883a 	add	r5,r5,r4
  8067f4:	30000b26 	beq	r6,zero,806824 <memmove+0x150>
  8067f8:	198d883a 	add	r6,r3,r6
  8067fc:	29c00003 	ldbu	r7,0(r5)
  806800:	18c00044 	addi	r3,r3,1
  806804:	29400044 	addi	r5,r5,1
  806808:	19ffffc5 	stb	r7,-1(r3)
  80680c:	19bffb1e 	bne	r3,r6,8067fc <__alt_data_end+0xff8067fc>
  806810:	f800283a 	ret
  806814:	1007883a 	mov	r3,r2
  806818:	003ff606 	br	8067f4 <__alt_data_end+0xff8067f4>
  80681c:	1007883a 	mov	r3,r2
  806820:	003ff506 	br	8067f8 <__alt_data_end+0xff8067f8>
  806824:	f800283a 	ret
  806828:	500d883a 	mov	r6,r10
  80682c:	003ff106 	br	8067f4 <__alt_data_end+0xff8067f4>

00806830 <memset>:
  806830:	20c000cc 	andi	r3,r4,3
  806834:	2005883a 	mov	r2,r4
  806838:	18004426 	beq	r3,zero,80694c <memset+0x11c>
  80683c:	31ffffc4 	addi	r7,r6,-1
  806840:	30004026 	beq	r6,zero,806944 <memset+0x114>
  806844:	2813883a 	mov	r9,r5
  806848:	200d883a 	mov	r6,r4
  80684c:	2007883a 	mov	r3,r4
  806850:	00000406 	br	806864 <memset+0x34>
  806854:	3a3fffc4 	addi	r8,r7,-1
  806858:	31800044 	addi	r6,r6,1
  80685c:	38003926 	beq	r7,zero,806944 <memset+0x114>
  806860:	400f883a 	mov	r7,r8
  806864:	18c00044 	addi	r3,r3,1
  806868:	32400005 	stb	r9,0(r6)
  80686c:	1a0000cc 	andi	r8,r3,3
  806870:	403ff81e 	bne	r8,zero,806854 <__alt_data_end+0xff806854>
  806874:	010000c4 	movi	r4,3
  806878:	21c02d2e 	bgeu	r4,r7,806930 <memset+0x100>
  80687c:	29003fcc 	andi	r4,r5,255
  806880:	200c923a 	slli	r6,r4,8
  806884:	3108b03a 	or	r4,r6,r4
  806888:	200c943a 	slli	r6,r4,16
  80688c:	218cb03a 	or	r6,r4,r6
  806890:	010003c4 	movi	r4,15
  806894:	21c0182e 	bgeu	r4,r7,8068f8 <memset+0xc8>
  806898:	3b3ffc04 	addi	r12,r7,-16
  80689c:	6018d13a 	srli	r12,r12,4
  8068a0:	1a000104 	addi	r8,r3,4
  8068a4:	1ac00204 	addi	r11,r3,8
  8068a8:	6008913a 	slli	r4,r12,4
  8068ac:	1a800304 	addi	r10,r3,12
  8068b0:	1813883a 	mov	r9,r3
  8068b4:	21000504 	addi	r4,r4,20
  8068b8:	1909883a 	add	r4,r3,r4
  8068bc:	49800015 	stw	r6,0(r9)
  8068c0:	41800015 	stw	r6,0(r8)
  8068c4:	59800015 	stw	r6,0(r11)
  8068c8:	51800015 	stw	r6,0(r10)
  8068cc:	42000404 	addi	r8,r8,16
  8068d0:	4a400404 	addi	r9,r9,16
  8068d4:	5ac00404 	addi	r11,r11,16
  8068d8:	52800404 	addi	r10,r10,16
  8068dc:	413ff71e 	bne	r8,r4,8068bc <__alt_data_end+0xff8068bc>
  8068e0:	63000044 	addi	r12,r12,1
  8068e4:	6018913a 	slli	r12,r12,4
  8068e8:	39c003cc 	andi	r7,r7,15
  8068ec:	010000c4 	movi	r4,3
  8068f0:	1b07883a 	add	r3,r3,r12
  8068f4:	21c00e2e 	bgeu	r4,r7,806930 <memset+0x100>
  8068f8:	1813883a 	mov	r9,r3
  8068fc:	3811883a 	mov	r8,r7
  806900:	010000c4 	movi	r4,3
  806904:	49800015 	stw	r6,0(r9)
  806908:	423fff04 	addi	r8,r8,-4
  80690c:	4a400104 	addi	r9,r9,4
  806910:	223ffc36 	bltu	r4,r8,806904 <__alt_data_end+0xff806904>
  806914:	393fff04 	addi	r4,r7,-4
  806918:	2008d0ba 	srli	r4,r4,2
  80691c:	39c000cc 	andi	r7,r7,3
  806920:	21000044 	addi	r4,r4,1
  806924:	2109883a 	add	r4,r4,r4
  806928:	2109883a 	add	r4,r4,r4
  80692c:	1907883a 	add	r3,r3,r4
  806930:	38000526 	beq	r7,zero,806948 <memset+0x118>
  806934:	19cf883a 	add	r7,r3,r7
  806938:	19400005 	stb	r5,0(r3)
  80693c:	18c00044 	addi	r3,r3,1
  806940:	38fffd1e 	bne	r7,r3,806938 <__alt_data_end+0xff806938>
  806944:	f800283a 	ret
  806948:	f800283a 	ret
  80694c:	2007883a 	mov	r3,r4
  806950:	300f883a 	mov	r7,r6
  806954:	003fc706 	br	806874 <__alt_data_end+0xff806874>

00806958 <_Balloc>:
  806958:	20801317 	ldw	r2,76(r4)
  80695c:	defffc04 	addi	sp,sp,-16
  806960:	dc400115 	stw	r17,4(sp)
  806964:	dc000015 	stw	r16,0(sp)
  806968:	dfc00315 	stw	ra,12(sp)
  80696c:	dc800215 	stw	r18,8(sp)
  806970:	2023883a 	mov	r17,r4
  806974:	2821883a 	mov	r16,r5
  806978:	10000f26 	beq	r2,zero,8069b8 <_Balloc+0x60>
  80697c:	8407883a 	add	r3,r16,r16
  806980:	18c7883a 	add	r3,r3,r3
  806984:	10c7883a 	add	r3,r2,r3
  806988:	18800017 	ldw	r2,0(r3)
  80698c:	10001126 	beq	r2,zero,8069d4 <_Balloc+0x7c>
  806990:	11000017 	ldw	r4,0(r2)
  806994:	19000015 	stw	r4,0(r3)
  806998:	10000415 	stw	zero,16(r2)
  80699c:	10000315 	stw	zero,12(r2)
  8069a0:	dfc00317 	ldw	ra,12(sp)
  8069a4:	dc800217 	ldw	r18,8(sp)
  8069a8:	dc400117 	ldw	r17,4(sp)
  8069ac:	dc000017 	ldw	r16,0(sp)
  8069b0:	dec00404 	addi	sp,sp,16
  8069b4:	f800283a 	ret
  8069b8:	01800844 	movi	r6,33
  8069bc:	01400104 	movi	r5,4
  8069c0:	08098940 	call	809894 <_calloc_r>
  8069c4:	88801315 	stw	r2,76(r17)
  8069c8:	103fec1e 	bne	r2,zero,80697c <__alt_data_end+0xff80697c>
  8069cc:	0005883a 	mov	r2,zero
  8069d0:	003ff306 	br	8069a0 <__alt_data_end+0xff8069a0>
  8069d4:	01400044 	movi	r5,1
  8069d8:	2c24983a 	sll	r18,r5,r16
  8069dc:	8809883a 	mov	r4,r17
  8069e0:	91800144 	addi	r6,r18,5
  8069e4:	318d883a 	add	r6,r6,r6
  8069e8:	318d883a 	add	r6,r6,r6
  8069ec:	08098940 	call	809894 <_calloc_r>
  8069f0:	103ff626 	beq	r2,zero,8069cc <__alt_data_end+0xff8069cc>
  8069f4:	14000115 	stw	r16,4(r2)
  8069f8:	14800215 	stw	r18,8(r2)
  8069fc:	003fe606 	br	806998 <__alt_data_end+0xff806998>

00806a00 <_Bfree>:
  806a00:	28000826 	beq	r5,zero,806a24 <_Bfree+0x24>
  806a04:	28c00117 	ldw	r3,4(r5)
  806a08:	20801317 	ldw	r2,76(r4)
  806a0c:	18c7883a 	add	r3,r3,r3
  806a10:	18c7883a 	add	r3,r3,r3
  806a14:	10c5883a 	add	r2,r2,r3
  806a18:	10c00017 	ldw	r3,0(r2)
  806a1c:	28c00015 	stw	r3,0(r5)
  806a20:	11400015 	stw	r5,0(r2)
  806a24:	f800283a 	ret

00806a28 <__multadd>:
  806a28:	defffa04 	addi	sp,sp,-24
  806a2c:	dc800315 	stw	r18,12(sp)
  806a30:	dc400215 	stw	r17,8(sp)
  806a34:	dc000115 	stw	r16,4(sp)
  806a38:	2823883a 	mov	r17,r5
  806a3c:	2c000417 	ldw	r16,16(r5)
  806a40:	dfc00515 	stw	ra,20(sp)
  806a44:	dcc00415 	stw	r19,16(sp)
  806a48:	2025883a 	mov	r18,r4
  806a4c:	29400504 	addi	r5,r5,20
  806a50:	0011883a 	mov	r8,zero
  806a54:	28c00017 	ldw	r3,0(r5)
  806a58:	29400104 	addi	r5,r5,4
  806a5c:	42000044 	addi	r8,r8,1
  806a60:	18bfffcc 	andi	r2,r3,65535
  806a64:	1185383a 	mul	r2,r2,r6
  806a68:	1806d43a 	srli	r3,r3,16
  806a6c:	11cf883a 	add	r7,r2,r7
  806a70:	3808d43a 	srli	r4,r7,16
  806a74:	1987383a 	mul	r3,r3,r6
  806a78:	38bfffcc 	andi	r2,r7,65535
  806a7c:	1907883a 	add	r3,r3,r4
  806a80:	1808943a 	slli	r4,r3,16
  806a84:	180ed43a 	srli	r7,r3,16
  806a88:	2085883a 	add	r2,r4,r2
  806a8c:	28bfff15 	stw	r2,-4(r5)
  806a90:	443ff016 	blt	r8,r16,806a54 <__alt_data_end+0xff806a54>
  806a94:	38000926 	beq	r7,zero,806abc <__multadd+0x94>
  806a98:	88800217 	ldw	r2,8(r17)
  806a9c:	80800f0e 	bge	r16,r2,806adc <__multadd+0xb4>
  806aa0:	80800144 	addi	r2,r16,5
  806aa4:	1085883a 	add	r2,r2,r2
  806aa8:	1085883a 	add	r2,r2,r2
  806aac:	8885883a 	add	r2,r17,r2
  806ab0:	11c00015 	stw	r7,0(r2)
  806ab4:	84000044 	addi	r16,r16,1
  806ab8:	8c000415 	stw	r16,16(r17)
  806abc:	8805883a 	mov	r2,r17
  806ac0:	dfc00517 	ldw	ra,20(sp)
  806ac4:	dcc00417 	ldw	r19,16(sp)
  806ac8:	dc800317 	ldw	r18,12(sp)
  806acc:	dc400217 	ldw	r17,8(sp)
  806ad0:	dc000117 	ldw	r16,4(sp)
  806ad4:	dec00604 	addi	sp,sp,24
  806ad8:	f800283a 	ret
  806adc:	89400117 	ldw	r5,4(r17)
  806ae0:	9009883a 	mov	r4,r18
  806ae4:	d9c00015 	stw	r7,0(sp)
  806ae8:	29400044 	addi	r5,r5,1
  806aec:	08069580 	call	806958 <_Balloc>
  806af0:	89800417 	ldw	r6,16(r17)
  806af4:	89400304 	addi	r5,r17,12
  806af8:	11000304 	addi	r4,r2,12
  806afc:	31800084 	addi	r6,r6,2
  806b00:	318d883a 	add	r6,r6,r6
  806b04:	318d883a 	add	r6,r6,r6
  806b08:	1027883a 	mov	r19,r2
  806b0c:	080658c0 	call	80658c <memcpy>
  806b10:	d9c00017 	ldw	r7,0(sp)
  806b14:	88000a26 	beq	r17,zero,806b40 <__multadd+0x118>
  806b18:	88c00117 	ldw	r3,4(r17)
  806b1c:	90801317 	ldw	r2,76(r18)
  806b20:	18c7883a 	add	r3,r3,r3
  806b24:	18c7883a 	add	r3,r3,r3
  806b28:	10c5883a 	add	r2,r2,r3
  806b2c:	10c00017 	ldw	r3,0(r2)
  806b30:	88c00015 	stw	r3,0(r17)
  806b34:	14400015 	stw	r17,0(r2)
  806b38:	9823883a 	mov	r17,r19
  806b3c:	003fd806 	br	806aa0 <__alt_data_end+0xff806aa0>
  806b40:	9823883a 	mov	r17,r19
  806b44:	003fd606 	br	806aa0 <__alt_data_end+0xff806aa0>

00806b48 <__s2b>:
  806b48:	defff904 	addi	sp,sp,-28
  806b4c:	dc400115 	stw	r17,4(sp)
  806b50:	dc000015 	stw	r16,0(sp)
  806b54:	2023883a 	mov	r17,r4
  806b58:	2821883a 	mov	r16,r5
  806b5c:	39000204 	addi	r4,r7,8
  806b60:	01400244 	movi	r5,9
  806b64:	dcc00315 	stw	r19,12(sp)
  806b68:	dc800215 	stw	r18,8(sp)
  806b6c:	dfc00615 	stw	ra,24(sp)
  806b70:	dd400515 	stw	r21,20(sp)
  806b74:	dd000415 	stw	r20,16(sp)
  806b78:	3825883a 	mov	r18,r7
  806b7c:	3027883a 	mov	r19,r6
  806b80:	080abc40 	call	80abc4 <__divsi3>
  806b84:	00c00044 	movi	r3,1
  806b88:	000b883a 	mov	r5,zero
  806b8c:	1880030e 	bge	r3,r2,806b9c <__s2b+0x54>
  806b90:	18c7883a 	add	r3,r3,r3
  806b94:	29400044 	addi	r5,r5,1
  806b98:	18bffd16 	blt	r3,r2,806b90 <__alt_data_end+0xff806b90>
  806b9c:	8809883a 	mov	r4,r17
  806ba0:	08069580 	call	806958 <_Balloc>
  806ba4:	d8c00717 	ldw	r3,28(sp)
  806ba8:	10c00515 	stw	r3,20(r2)
  806bac:	00c00044 	movi	r3,1
  806bb0:	10c00415 	stw	r3,16(r2)
  806bb4:	00c00244 	movi	r3,9
  806bb8:	1cc0210e 	bge	r3,r19,806c40 <__s2b+0xf8>
  806bbc:	80eb883a 	add	r21,r16,r3
  806bc0:	a829883a 	mov	r20,r21
  806bc4:	84e1883a 	add	r16,r16,r19
  806bc8:	a1c00007 	ldb	r7,0(r20)
  806bcc:	01800284 	movi	r6,10
  806bd0:	a5000044 	addi	r20,r20,1
  806bd4:	100b883a 	mov	r5,r2
  806bd8:	39fff404 	addi	r7,r7,-48
  806bdc:	8809883a 	mov	r4,r17
  806be0:	0806a280 	call	806a28 <__multadd>
  806be4:	a43ff81e 	bne	r20,r16,806bc8 <__alt_data_end+0xff806bc8>
  806be8:	ace1883a 	add	r16,r21,r19
  806bec:	843ffe04 	addi	r16,r16,-8
  806bf0:	9c800a0e 	bge	r19,r18,806c1c <__s2b+0xd4>
  806bf4:	94e5c83a 	sub	r18,r18,r19
  806bf8:	84a5883a 	add	r18,r16,r18
  806bfc:	81c00007 	ldb	r7,0(r16)
  806c00:	01800284 	movi	r6,10
  806c04:	84000044 	addi	r16,r16,1
  806c08:	100b883a 	mov	r5,r2
  806c0c:	39fff404 	addi	r7,r7,-48
  806c10:	8809883a 	mov	r4,r17
  806c14:	0806a280 	call	806a28 <__multadd>
  806c18:	84bff81e 	bne	r16,r18,806bfc <__alt_data_end+0xff806bfc>
  806c1c:	dfc00617 	ldw	ra,24(sp)
  806c20:	dd400517 	ldw	r21,20(sp)
  806c24:	dd000417 	ldw	r20,16(sp)
  806c28:	dcc00317 	ldw	r19,12(sp)
  806c2c:	dc800217 	ldw	r18,8(sp)
  806c30:	dc400117 	ldw	r17,4(sp)
  806c34:	dc000017 	ldw	r16,0(sp)
  806c38:	dec00704 	addi	sp,sp,28
  806c3c:	f800283a 	ret
  806c40:	84000284 	addi	r16,r16,10
  806c44:	1827883a 	mov	r19,r3
  806c48:	003fe906 	br	806bf0 <__alt_data_end+0xff806bf0>

00806c4c <__hi0bits>:
  806c4c:	20bfffec 	andhi	r2,r4,65535
  806c50:	1000141e 	bne	r2,zero,806ca4 <__hi0bits+0x58>
  806c54:	2008943a 	slli	r4,r4,16
  806c58:	00800404 	movi	r2,16
  806c5c:	20ffc02c 	andhi	r3,r4,65280
  806c60:	1800021e 	bne	r3,zero,806c6c <__hi0bits+0x20>
  806c64:	2008923a 	slli	r4,r4,8
  806c68:	10800204 	addi	r2,r2,8
  806c6c:	20fc002c 	andhi	r3,r4,61440
  806c70:	1800021e 	bne	r3,zero,806c7c <__hi0bits+0x30>
  806c74:	2008913a 	slli	r4,r4,4
  806c78:	10800104 	addi	r2,r2,4
  806c7c:	20f0002c 	andhi	r3,r4,49152
  806c80:	1800031e 	bne	r3,zero,806c90 <__hi0bits+0x44>
  806c84:	2109883a 	add	r4,r4,r4
  806c88:	10800084 	addi	r2,r2,2
  806c8c:	2109883a 	add	r4,r4,r4
  806c90:	20000316 	blt	r4,zero,806ca0 <__hi0bits+0x54>
  806c94:	2110002c 	andhi	r4,r4,16384
  806c98:	2000041e 	bne	r4,zero,806cac <__hi0bits+0x60>
  806c9c:	00800804 	movi	r2,32
  806ca0:	f800283a 	ret
  806ca4:	0005883a 	mov	r2,zero
  806ca8:	003fec06 	br	806c5c <__alt_data_end+0xff806c5c>
  806cac:	10800044 	addi	r2,r2,1
  806cb0:	f800283a 	ret

00806cb4 <__lo0bits>:
  806cb4:	20c00017 	ldw	r3,0(r4)
  806cb8:	188001cc 	andi	r2,r3,7
  806cbc:	10000826 	beq	r2,zero,806ce0 <__lo0bits+0x2c>
  806cc0:	1880004c 	andi	r2,r3,1
  806cc4:	1000211e 	bne	r2,zero,806d4c <__lo0bits+0x98>
  806cc8:	1880008c 	andi	r2,r3,2
  806ccc:	1000211e 	bne	r2,zero,806d54 <__lo0bits+0xa0>
  806cd0:	1806d0ba 	srli	r3,r3,2
  806cd4:	00800084 	movi	r2,2
  806cd8:	20c00015 	stw	r3,0(r4)
  806cdc:	f800283a 	ret
  806ce0:	18bfffcc 	andi	r2,r3,65535
  806ce4:	10001326 	beq	r2,zero,806d34 <__lo0bits+0x80>
  806ce8:	0005883a 	mov	r2,zero
  806cec:	19403fcc 	andi	r5,r3,255
  806cf0:	2800021e 	bne	r5,zero,806cfc <__lo0bits+0x48>
  806cf4:	1806d23a 	srli	r3,r3,8
  806cf8:	10800204 	addi	r2,r2,8
  806cfc:	194003cc 	andi	r5,r3,15
  806d00:	2800021e 	bne	r5,zero,806d0c <__lo0bits+0x58>
  806d04:	1806d13a 	srli	r3,r3,4
  806d08:	10800104 	addi	r2,r2,4
  806d0c:	194000cc 	andi	r5,r3,3
  806d10:	2800021e 	bne	r5,zero,806d1c <__lo0bits+0x68>
  806d14:	1806d0ba 	srli	r3,r3,2
  806d18:	10800084 	addi	r2,r2,2
  806d1c:	1940004c 	andi	r5,r3,1
  806d20:	2800081e 	bne	r5,zero,806d44 <__lo0bits+0x90>
  806d24:	1806d07a 	srli	r3,r3,1
  806d28:	1800051e 	bne	r3,zero,806d40 <__lo0bits+0x8c>
  806d2c:	00800804 	movi	r2,32
  806d30:	f800283a 	ret
  806d34:	1806d43a 	srli	r3,r3,16
  806d38:	00800404 	movi	r2,16
  806d3c:	003feb06 	br	806cec <__alt_data_end+0xff806cec>
  806d40:	10800044 	addi	r2,r2,1
  806d44:	20c00015 	stw	r3,0(r4)
  806d48:	f800283a 	ret
  806d4c:	0005883a 	mov	r2,zero
  806d50:	f800283a 	ret
  806d54:	1806d07a 	srli	r3,r3,1
  806d58:	00800044 	movi	r2,1
  806d5c:	20c00015 	stw	r3,0(r4)
  806d60:	f800283a 	ret

00806d64 <__i2b>:
  806d64:	defffd04 	addi	sp,sp,-12
  806d68:	dc000015 	stw	r16,0(sp)
  806d6c:	04000044 	movi	r16,1
  806d70:	dc400115 	stw	r17,4(sp)
  806d74:	2823883a 	mov	r17,r5
  806d78:	800b883a 	mov	r5,r16
  806d7c:	dfc00215 	stw	ra,8(sp)
  806d80:	08069580 	call	806958 <_Balloc>
  806d84:	14400515 	stw	r17,20(r2)
  806d88:	14000415 	stw	r16,16(r2)
  806d8c:	dfc00217 	ldw	ra,8(sp)
  806d90:	dc400117 	ldw	r17,4(sp)
  806d94:	dc000017 	ldw	r16,0(sp)
  806d98:	dec00304 	addi	sp,sp,12
  806d9c:	f800283a 	ret

00806da0 <__multiply>:
  806da0:	defffa04 	addi	sp,sp,-24
  806da4:	dcc00315 	stw	r19,12(sp)
  806da8:	dc800215 	stw	r18,8(sp)
  806dac:	34c00417 	ldw	r19,16(r6)
  806db0:	2c800417 	ldw	r18,16(r5)
  806db4:	dd000415 	stw	r20,16(sp)
  806db8:	dc400115 	stw	r17,4(sp)
  806dbc:	dfc00515 	stw	ra,20(sp)
  806dc0:	dc000015 	stw	r16,0(sp)
  806dc4:	2829883a 	mov	r20,r5
  806dc8:	3023883a 	mov	r17,r6
  806dcc:	94c0050e 	bge	r18,r19,806de4 <__multiply+0x44>
  806dd0:	9007883a 	mov	r3,r18
  806dd4:	3029883a 	mov	r20,r6
  806dd8:	9825883a 	mov	r18,r19
  806ddc:	2823883a 	mov	r17,r5
  806de0:	1827883a 	mov	r19,r3
  806de4:	a0800217 	ldw	r2,8(r20)
  806de8:	94e1883a 	add	r16,r18,r19
  806dec:	a1400117 	ldw	r5,4(r20)
  806df0:	1400010e 	bge	r2,r16,806df8 <__multiply+0x58>
  806df4:	29400044 	addi	r5,r5,1
  806df8:	08069580 	call	806958 <_Balloc>
  806dfc:	8415883a 	add	r10,r16,r16
  806e00:	12c00504 	addi	r11,r2,20
  806e04:	5295883a 	add	r10,r10,r10
  806e08:	5a95883a 	add	r10,r11,r10
  806e0c:	5807883a 	mov	r3,r11
  806e10:	5a80032e 	bgeu	r11,r10,806e20 <__multiply+0x80>
  806e14:	18000015 	stw	zero,0(r3)
  806e18:	18c00104 	addi	r3,r3,4
  806e1c:	1abffd36 	bltu	r3,r10,806e14 <__alt_data_end+0xff806e14>
  806e20:	9ce7883a 	add	r19,r19,r19
  806e24:	94a5883a 	add	r18,r18,r18
  806e28:	89800504 	addi	r6,r17,20
  806e2c:	9ce7883a 	add	r19,r19,r19
  806e30:	a3400504 	addi	r13,r20,20
  806e34:	94a5883a 	add	r18,r18,r18
  806e38:	34d9883a 	add	r12,r6,r19
  806e3c:	6c93883a 	add	r9,r13,r18
  806e40:	3300422e 	bgeu	r6,r12,806f4c <__multiply+0x1ac>
  806e44:	37c00017 	ldw	ra,0(r6)
  806e48:	fbffffcc 	andi	r15,ra,65535
  806e4c:	78001b26 	beq	r15,zero,806ebc <__multiply+0x11c>
  806e50:	5811883a 	mov	r8,r11
  806e54:	681d883a 	mov	r14,r13
  806e58:	000f883a 	mov	r7,zero
  806e5c:	71000017 	ldw	r4,0(r14)
  806e60:	40c00017 	ldw	r3,0(r8)
  806e64:	73800104 	addi	r14,r14,4
  806e68:	217fffcc 	andi	r5,r4,65535
  806e6c:	2bcb383a 	mul	r5,r5,r15
  806e70:	2008d43a 	srli	r4,r4,16
  806e74:	1c7fffcc 	andi	r17,r3,65535
  806e78:	2c4b883a 	add	r5,r5,r17
  806e7c:	29cb883a 	add	r5,r5,r7
  806e80:	23c9383a 	mul	r4,r4,r15
  806e84:	1806d43a 	srli	r3,r3,16
  806e88:	280ed43a 	srli	r7,r5,16
  806e8c:	297fffcc 	andi	r5,r5,65535
  806e90:	20c7883a 	add	r3,r4,r3
  806e94:	19c7883a 	add	r3,r3,r7
  806e98:	1808943a 	slli	r4,r3,16
  806e9c:	4023883a 	mov	r17,r8
  806ea0:	180ed43a 	srli	r7,r3,16
  806ea4:	214ab03a 	or	r5,r4,r5
  806ea8:	41400015 	stw	r5,0(r8)
  806eac:	42000104 	addi	r8,r8,4
  806eb0:	727fea36 	bltu	r14,r9,806e5c <__alt_data_end+0xff806e5c>
  806eb4:	89c00115 	stw	r7,4(r17)
  806eb8:	37c00017 	ldw	ra,0(r6)
  806ebc:	f83ed43a 	srli	ra,ra,16
  806ec0:	f8001f26 	beq	ra,zero,806f40 <__multiply+0x1a0>
  806ec4:	58c00017 	ldw	r3,0(r11)
  806ec8:	681d883a 	mov	r14,r13
  806ecc:	581f883a 	mov	r15,r11
  806ed0:	1811883a 	mov	r8,r3
  806ed4:	5825883a 	mov	r18,r11
  806ed8:	000f883a 	mov	r7,zero
  806edc:	00000106 	br	806ee4 <__multiply+0x144>
  806ee0:	8825883a 	mov	r18,r17
  806ee4:	7140000b 	ldhu	r5,0(r14)
  806ee8:	4010d43a 	srli	r8,r8,16
  806eec:	193fffcc 	andi	r4,r3,65535
  806ef0:	2fcb383a 	mul	r5,r5,ra
  806ef4:	7bc00104 	addi	r15,r15,4
  806ef8:	73800104 	addi	r14,r14,4
  806efc:	2a0b883a 	add	r5,r5,r8
  806f00:	29cb883a 	add	r5,r5,r7
  806f04:	2806943a 	slli	r3,r5,16
  806f08:	94400104 	addi	r17,r18,4
  806f0c:	280ad43a 	srli	r5,r5,16
  806f10:	1908b03a 	or	r4,r3,r4
  806f14:	793fff15 	stw	r4,-4(r15)
  806f18:	70ffff17 	ldw	r3,-4(r14)
  806f1c:	8a000017 	ldw	r8,0(r17)
  806f20:	1806d43a 	srli	r3,r3,16
  806f24:	413fffcc 	andi	r4,r8,65535
  806f28:	1fc7383a 	mul	r3,r3,ra
  806f2c:	1907883a 	add	r3,r3,r4
  806f30:	1947883a 	add	r3,r3,r5
  806f34:	180ed43a 	srli	r7,r3,16
  806f38:	727fe936 	bltu	r14,r9,806ee0 <__alt_data_end+0xff806ee0>
  806f3c:	90c00115 	stw	r3,4(r18)
  806f40:	31800104 	addi	r6,r6,4
  806f44:	5ac00104 	addi	r11,r11,4
  806f48:	333fbe36 	bltu	r6,r12,806e44 <__alt_data_end+0xff806e44>
  806f4c:	0400090e 	bge	zero,r16,806f74 <__multiply+0x1d4>
  806f50:	50ffff17 	ldw	r3,-4(r10)
  806f54:	52bfff04 	addi	r10,r10,-4
  806f58:	18000326 	beq	r3,zero,806f68 <__multiply+0x1c8>
  806f5c:	00000506 	br	806f74 <__multiply+0x1d4>
  806f60:	50c00017 	ldw	r3,0(r10)
  806f64:	1800031e 	bne	r3,zero,806f74 <__multiply+0x1d4>
  806f68:	843fffc4 	addi	r16,r16,-1
  806f6c:	52bfff04 	addi	r10,r10,-4
  806f70:	803ffb1e 	bne	r16,zero,806f60 <__alt_data_end+0xff806f60>
  806f74:	14000415 	stw	r16,16(r2)
  806f78:	dfc00517 	ldw	ra,20(sp)
  806f7c:	dd000417 	ldw	r20,16(sp)
  806f80:	dcc00317 	ldw	r19,12(sp)
  806f84:	dc800217 	ldw	r18,8(sp)
  806f88:	dc400117 	ldw	r17,4(sp)
  806f8c:	dc000017 	ldw	r16,0(sp)
  806f90:	dec00604 	addi	sp,sp,24
  806f94:	f800283a 	ret

00806f98 <__pow5mult>:
  806f98:	defffa04 	addi	sp,sp,-24
  806f9c:	dcc00315 	stw	r19,12(sp)
  806fa0:	dc000015 	stw	r16,0(sp)
  806fa4:	dfc00515 	stw	ra,20(sp)
  806fa8:	dd000415 	stw	r20,16(sp)
  806fac:	dc800215 	stw	r18,8(sp)
  806fb0:	dc400115 	stw	r17,4(sp)
  806fb4:	308000cc 	andi	r2,r6,3
  806fb8:	3021883a 	mov	r16,r6
  806fbc:	2027883a 	mov	r19,r4
  806fc0:	10002f1e 	bne	r2,zero,807080 <__pow5mult+0xe8>
  806fc4:	2825883a 	mov	r18,r5
  806fc8:	8021d0ba 	srai	r16,r16,2
  806fcc:	80001a26 	beq	r16,zero,807038 <__pow5mult+0xa0>
  806fd0:	9c401217 	ldw	r17,72(r19)
  806fd4:	8800061e 	bne	r17,zero,806ff0 <__pow5mult+0x58>
  806fd8:	00003406 	br	8070ac <__pow5mult+0x114>
  806fdc:	8021d07a 	srai	r16,r16,1
  806fe0:	80001526 	beq	r16,zero,807038 <__pow5mult+0xa0>
  806fe4:	88800017 	ldw	r2,0(r17)
  806fe8:	10001c26 	beq	r2,zero,80705c <__pow5mult+0xc4>
  806fec:	1023883a 	mov	r17,r2
  806ff0:	8080004c 	andi	r2,r16,1
  806ff4:	103ff926 	beq	r2,zero,806fdc <__alt_data_end+0xff806fdc>
  806ff8:	880d883a 	mov	r6,r17
  806ffc:	900b883a 	mov	r5,r18
  807000:	9809883a 	mov	r4,r19
  807004:	0806da00 	call	806da0 <__multiply>
  807008:	90001b26 	beq	r18,zero,807078 <__pow5mult+0xe0>
  80700c:	91000117 	ldw	r4,4(r18)
  807010:	98c01317 	ldw	r3,76(r19)
  807014:	8021d07a 	srai	r16,r16,1
  807018:	2109883a 	add	r4,r4,r4
  80701c:	2109883a 	add	r4,r4,r4
  807020:	1907883a 	add	r3,r3,r4
  807024:	19000017 	ldw	r4,0(r3)
  807028:	91000015 	stw	r4,0(r18)
  80702c:	1c800015 	stw	r18,0(r3)
  807030:	1025883a 	mov	r18,r2
  807034:	803feb1e 	bne	r16,zero,806fe4 <__alt_data_end+0xff806fe4>
  807038:	9005883a 	mov	r2,r18
  80703c:	dfc00517 	ldw	ra,20(sp)
  807040:	dd000417 	ldw	r20,16(sp)
  807044:	dcc00317 	ldw	r19,12(sp)
  807048:	dc800217 	ldw	r18,8(sp)
  80704c:	dc400117 	ldw	r17,4(sp)
  807050:	dc000017 	ldw	r16,0(sp)
  807054:	dec00604 	addi	sp,sp,24
  807058:	f800283a 	ret
  80705c:	880d883a 	mov	r6,r17
  807060:	880b883a 	mov	r5,r17
  807064:	9809883a 	mov	r4,r19
  807068:	0806da00 	call	806da0 <__multiply>
  80706c:	88800015 	stw	r2,0(r17)
  807070:	10000015 	stw	zero,0(r2)
  807074:	003fdd06 	br	806fec <__alt_data_end+0xff806fec>
  807078:	1025883a 	mov	r18,r2
  80707c:	003fd706 	br	806fdc <__alt_data_end+0xff806fdc>
  807080:	10bfffc4 	addi	r2,r2,-1
  807084:	1085883a 	add	r2,r2,r2
  807088:	00c02074 	movhi	r3,129
  80708c:	18ffa704 	addi	r3,r3,-356
  807090:	1085883a 	add	r2,r2,r2
  807094:	1885883a 	add	r2,r3,r2
  807098:	11800017 	ldw	r6,0(r2)
  80709c:	000f883a 	mov	r7,zero
  8070a0:	0806a280 	call	806a28 <__multadd>
  8070a4:	1025883a 	mov	r18,r2
  8070a8:	003fc706 	br	806fc8 <__alt_data_end+0xff806fc8>
  8070ac:	05000044 	movi	r20,1
  8070b0:	a00b883a 	mov	r5,r20
  8070b4:	9809883a 	mov	r4,r19
  8070b8:	08069580 	call	806958 <_Balloc>
  8070bc:	1023883a 	mov	r17,r2
  8070c0:	00809c44 	movi	r2,625
  8070c4:	88800515 	stw	r2,20(r17)
  8070c8:	8d000415 	stw	r20,16(r17)
  8070cc:	9c401215 	stw	r17,72(r19)
  8070d0:	88000015 	stw	zero,0(r17)
  8070d4:	003fc606 	br	806ff0 <__alt_data_end+0xff806ff0>

008070d8 <__lshift>:
  8070d8:	defff904 	addi	sp,sp,-28
  8070dc:	dd400515 	stw	r21,20(sp)
  8070e0:	dcc00315 	stw	r19,12(sp)
  8070e4:	302bd17a 	srai	r21,r6,5
  8070e8:	2cc00417 	ldw	r19,16(r5)
  8070ec:	28800217 	ldw	r2,8(r5)
  8070f0:	dd000415 	stw	r20,16(sp)
  8070f4:	ace7883a 	add	r19,r21,r19
  8070f8:	dc800215 	stw	r18,8(sp)
  8070fc:	dc400115 	stw	r17,4(sp)
  807100:	dc000015 	stw	r16,0(sp)
  807104:	dfc00615 	stw	ra,24(sp)
  807108:	9c000044 	addi	r16,r19,1
  80710c:	2823883a 	mov	r17,r5
  807110:	3029883a 	mov	r20,r6
  807114:	2025883a 	mov	r18,r4
  807118:	29400117 	ldw	r5,4(r5)
  80711c:	1400030e 	bge	r2,r16,80712c <__lshift+0x54>
  807120:	1085883a 	add	r2,r2,r2
  807124:	29400044 	addi	r5,r5,1
  807128:	143ffd16 	blt	r2,r16,807120 <__alt_data_end+0xff807120>
  80712c:	9009883a 	mov	r4,r18
  807130:	08069580 	call	806958 <_Balloc>
  807134:	10c00504 	addi	r3,r2,20
  807138:	0540070e 	bge	zero,r21,807158 <__lshift+0x80>
  80713c:	ad6b883a 	add	r21,r21,r21
  807140:	ad6b883a 	add	r21,r21,r21
  807144:	1809883a 	mov	r4,r3
  807148:	1d47883a 	add	r3,r3,r21
  80714c:	20000015 	stw	zero,0(r4)
  807150:	21000104 	addi	r4,r4,4
  807154:	193ffd1e 	bne	r3,r4,80714c <__alt_data_end+0xff80714c>
  807158:	8a000417 	ldw	r8,16(r17)
  80715c:	89000504 	addi	r4,r17,20
  807160:	a18007cc 	andi	r6,r20,31
  807164:	4211883a 	add	r8,r8,r8
  807168:	4211883a 	add	r8,r8,r8
  80716c:	2211883a 	add	r8,r4,r8
  807170:	30002326 	beq	r6,zero,807200 <__lshift+0x128>
  807174:	02400804 	movi	r9,32
  807178:	4993c83a 	sub	r9,r9,r6
  80717c:	000b883a 	mov	r5,zero
  807180:	21c00017 	ldw	r7,0(r4)
  807184:	1815883a 	mov	r10,r3
  807188:	18c00104 	addi	r3,r3,4
  80718c:	398e983a 	sll	r7,r7,r6
  807190:	21000104 	addi	r4,r4,4
  807194:	394ab03a 	or	r5,r7,r5
  807198:	197fff15 	stw	r5,-4(r3)
  80719c:	217fff17 	ldw	r5,-4(r4)
  8071a0:	2a4ad83a 	srl	r5,r5,r9
  8071a4:	223ff636 	bltu	r4,r8,807180 <__alt_data_end+0xff807180>
  8071a8:	51400115 	stw	r5,4(r10)
  8071ac:	28001a1e 	bne	r5,zero,807218 <__lshift+0x140>
  8071b0:	843fffc4 	addi	r16,r16,-1
  8071b4:	14000415 	stw	r16,16(r2)
  8071b8:	88000826 	beq	r17,zero,8071dc <__lshift+0x104>
  8071bc:	89000117 	ldw	r4,4(r17)
  8071c0:	90c01317 	ldw	r3,76(r18)
  8071c4:	2109883a 	add	r4,r4,r4
  8071c8:	2109883a 	add	r4,r4,r4
  8071cc:	1907883a 	add	r3,r3,r4
  8071d0:	19000017 	ldw	r4,0(r3)
  8071d4:	89000015 	stw	r4,0(r17)
  8071d8:	1c400015 	stw	r17,0(r3)
  8071dc:	dfc00617 	ldw	ra,24(sp)
  8071e0:	dd400517 	ldw	r21,20(sp)
  8071e4:	dd000417 	ldw	r20,16(sp)
  8071e8:	dcc00317 	ldw	r19,12(sp)
  8071ec:	dc800217 	ldw	r18,8(sp)
  8071f0:	dc400117 	ldw	r17,4(sp)
  8071f4:	dc000017 	ldw	r16,0(sp)
  8071f8:	dec00704 	addi	sp,sp,28
  8071fc:	f800283a 	ret
  807200:	21400017 	ldw	r5,0(r4)
  807204:	18c00104 	addi	r3,r3,4
  807208:	21000104 	addi	r4,r4,4
  80720c:	197fff15 	stw	r5,-4(r3)
  807210:	223ffb36 	bltu	r4,r8,807200 <__alt_data_end+0xff807200>
  807214:	003fe606 	br	8071b0 <__alt_data_end+0xff8071b0>
  807218:	9c000084 	addi	r16,r19,2
  80721c:	003fe406 	br	8071b0 <__alt_data_end+0xff8071b0>

00807220 <__mcmp>:
  807220:	20800417 	ldw	r2,16(r4)
  807224:	28c00417 	ldw	r3,16(r5)
  807228:	10c5c83a 	sub	r2,r2,r3
  80722c:	1000111e 	bne	r2,zero,807274 <__mcmp+0x54>
  807230:	18c7883a 	add	r3,r3,r3
  807234:	18c7883a 	add	r3,r3,r3
  807238:	21000504 	addi	r4,r4,20
  80723c:	29400504 	addi	r5,r5,20
  807240:	20c5883a 	add	r2,r4,r3
  807244:	28cb883a 	add	r5,r5,r3
  807248:	00000106 	br	807250 <__mcmp+0x30>
  80724c:	20800a2e 	bgeu	r4,r2,807278 <__mcmp+0x58>
  807250:	10bfff04 	addi	r2,r2,-4
  807254:	297fff04 	addi	r5,r5,-4
  807258:	11800017 	ldw	r6,0(r2)
  80725c:	28c00017 	ldw	r3,0(r5)
  807260:	30fffa26 	beq	r6,r3,80724c <__alt_data_end+0xff80724c>
  807264:	30c00236 	bltu	r6,r3,807270 <__mcmp+0x50>
  807268:	00800044 	movi	r2,1
  80726c:	f800283a 	ret
  807270:	00bfffc4 	movi	r2,-1
  807274:	f800283a 	ret
  807278:	0005883a 	mov	r2,zero
  80727c:	f800283a 	ret

00807280 <__mdiff>:
  807280:	28c00417 	ldw	r3,16(r5)
  807284:	30800417 	ldw	r2,16(r6)
  807288:	defffa04 	addi	sp,sp,-24
  80728c:	dcc00315 	stw	r19,12(sp)
  807290:	dc800215 	stw	r18,8(sp)
  807294:	dfc00515 	stw	ra,20(sp)
  807298:	dd000415 	stw	r20,16(sp)
  80729c:	dc400115 	stw	r17,4(sp)
  8072a0:	dc000015 	stw	r16,0(sp)
  8072a4:	1887c83a 	sub	r3,r3,r2
  8072a8:	2825883a 	mov	r18,r5
  8072ac:	3027883a 	mov	r19,r6
  8072b0:	1800141e 	bne	r3,zero,807304 <__mdiff+0x84>
  8072b4:	1085883a 	add	r2,r2,r2
  8072b8:	1085883a 	add	r2,r2,r2
  8072bc:	2a000504 	addi	r8,r5,20
  8072c0:	34000504 	addi	r16,r6,20
  8072c4:	4087883a 	add	r3,r8,r2
  8072c8:	8085883a 	add	r2,r16,r2
  8072cc:	00000106 	br	8072d4 <__mdiff+0x54>
  8072d0:	40c0592e 	bgeu	r8,r3,807438 <__mdiff+0x1b8>
  8072d4:	18ffff04 	addi	r3,r3,-4
  8072d8:	10bfff04 	addi	r2,r2,-4
  8072dc:	19c00017 	ldw	r7,0(r3)
  8072e0:	11400017 	ldw	r5,0(r2)
  8072e4:	397ffa26 	beq	r7,r5,8072d0 <__alt_data_end+0xff8072d0>
  8072e8:	3940592e 	bgeu	r7,r5,807450 <__mdiff+0x1d0>
  8072ec:	9005883a 	mov	r2,r18
  8072f0:	4023883a 	mov	r17,r8
  8072f4:	9825883a 	mov	r18,r19
  8072f8:	05000044 	movi	r20,1
  8072fc:	1027883a 	mov	r19,r2
  807300:	00000406 	br	807314 <__mdiff+0x94>
  807304:	18005616 	blt	r3,zero,807460 <__mdiff+0x1e0>
  807308:	34400504 	addi	r17,r6,20
  80730c:	2c000504 	addi	r16,r5,20
  807310:	0029883a 	mov	r20,zero
  807314:	91400117 	ldw	r5,4(r18)
  807318:	08069580 	call	806958 <_Balloc>
  80731c:	92400417 	ldw	r9,16(r18)
  807320:	9b000417 	ldw	r12,16(r19)
  807324:	12c00504 	addi	r11,r2,20
  807328:	4a51883a 	add	r8,r9,r9
  80732c:	6319883a 	add	r12,r12,r12
  807330:	4211883a 	add	r8,r8,r8
  807334:	6319883a 	add	r12,r12,r12
  807338:	15000315 	stw	r20,12(r2)
  80733c:	8211883a 	add	r8,r16,r8
  807340:	8b19883a 	add	r12,r17,r12
  807344:	0007883a 	mov	r3,zero
  807348:	81400017 	ldw	r5,0(r16)
  80734c:	89c00017 	ldw	r7,0(r17)
  807350:	59800104 	addi	r6,r11,4
  807354:	293fffcc 	andi	r4,r5,65535
  807358:	20c7883a 	add	r3,r4,r3
  80735c:	393fffcc 	andi	r4,r7,65535
  807360:	1909c83a 	sub	r4,r3,r4
  807364:	280ad43a 	srli	r5,r5,16
  807368:	380ed43a 	srli	r7,r7,16
  80736c:	2007d43a 	srai	r3,r4,16
  807370:	213fffcc 	andi	r4,r4,65535
  807374:	29cbc83a 	sub	r5,r5,r7
  807378:	28c7883a 	add	r3,r5,r3
  80737c:	180a943a 	slli	r5,r3,16
  807380:	8c400104 	addi	r17,r17,4
  807384:	84000104 	addi	r16,r16,4
  807388:	2908b03a 	or	r4,r5,r4
  80738c:	59000015 	stw	r4,0(r11)
  807390:	1807d43a 	srai	r3,r3,16
  807394:	3015883a 	mov	r10,r6
  807398:	3017883a 	mov	r11,r6
  80739c:	8b3fea36 	bltu	r17,r12,807348 <__alt_data_end+0xff807348>
  8073a0:	8200162e 	bgeu	r16,r8,8073fc <__mdiff+0x17c>
  8073a4:	8017883a 	mov	r11,r16
  8073a8:	59400017 	ldw	r5,0(r11)
  8073ac:	31800104 	addi	r6,r6,4
  8073b0:	5ac00104 	addi	r11,r11,4
  8073b4:	293fffcc 	andi	r4,r5,65535
  8073b8:	20c7883a 	add	r3,r4,r3
  8073bc:	280ed43a 	srli	r7,r5,16
  8073c0:	180bd43a 	srai	r5,r3,16
  8073c4:	193fffcc 	andi	r4,r3,65535
  8073c8:	3947883a 	add	r3,r7,r5
  8073cc:	180a943a 	slli	r5,r3,16
  8073d0:	1807d43a 	srai	r3,r3,16
  8073d4:	2908b03a 	or	r4,r5,r4
  8073d8:	313fff15 	stw	r4,-4(r6)
  8073dc:	5a3ff236 	bltu	r11,r8,8073a8 <__alt_data_end+0xff8073a8>
  8073e0:	0406303a 	nor	r3,zero,r16
  8073e4:	1a07883a 	add	r3,r3,r8
  8073e8:	1806d0ba 	srli	r3,r3,2
  8073ec:	18c00044 	addi	r3,r3,1
  8073f0:	18c7883a 	add	r3,r3,r3
  8073f4:	18c7883a 	add	r3,r3,r3
  8073f8:	50d5883a 	add	r10,r10,r3
  8073fc:	50ffff04 	addi	r3,r10,-4
  807400:	2000041e 	bne	r4,zero,807414 <__mdiff+0x194>
  807404:	18ffff04 	addi	r3,r3,-4
  807408:	19000017 	ldw	r4,0(r3)
  80740c:	4a7fffc4 	addi	r9,r9,-1
  807410:	203ffc26 	beq	r4,zero,807404 <__alt_data_end+0xff807404>
  807414:	12400415 	stw	r9,16(r2)
  807418:	dfc00517 	ldw	ra,20(sp)
  80741c:	dd000417 	ldw	r20,16(sp)
  807420:	dcc00317 	ldw	r19,12(sp)
  807424:	dc800217 	ldw	r18,8(sp)
  807428:	dc400117 	ldw	r17,4(sp)
  80742c:	dc000017 	ldw	r16,0(sp)
  807430:	dec00604 	addi	sp,sp,24
  807434:	f800283a 	ret
  807438:	000b883a 	mov	r5,zero
  80743c:	08069580 	call	806958 <_Balloc>
  807440:	00c00044 	movi	r3,1
  807444:	10c00415 	stw	r3,16(r2)
  807448:	10000515 	stw	zero,20(r2)
  80744c:	003ff206 	br	807418 <__alt_data_end+0xff807418>
  807450:	8023883a 	mov	r17,r16
  807454:	0029883a 	mov	r20,zero
  807458:	4021883a 	mov	r16,r8
  80745c:	003fad06 	br	807314 <__alt_data_end+0xff807314>
  807460:	9005883a 	mov	r2,r18
  807464:	94400504 	addi	r17,r18,20
  807468:	9c000504 	addi	r16,r19,20
  80746c:	9825883a 	mov	r18,r19
  807470:	05000044 	movi	r20,1
  807474:	1027883a 	mov	r19,r2
  807478:	003fa606 	br	807314 <__alt_data_end+0xff807314>

0080747c <__ulp>:
  80747c:	295ffc2c 	andhi	r5,r5,32752
  807480:	00bf3034 	movhi	r2,64704
  807484:	2887883a 	add	r3,r5,r2
  807488:	00c0020e 	bge	zero,r3,807494 <__ulp+0x18>
  80748c:	0005883a 	mov	r2,zero
  807490:	f800283a 	ret
  807494:	00c7c83a 	sub	r3,zero,r3
  807498:	1807d53a 	srai	r3,r3,20
  80749c:	008004c4 	movi	r2,19
  8074a0:	10c00b0e 	bge	r2,r3,8074d0 <__ulp+0x54>
  8074a4:	18bffb04 	addi	r2,r3,-20
  8074a8:	01000784 	movi	r4,30
  8074ac:	0007883a 	mov	r3,zero
  8074b0:	20800516 	blt	r4,r2,8074c8 <__ulp+0x4c>
  8074b4:	010007c4 	movi	r4,31
  8074b8:	2089c83a 	sub	r4,r4,r2
  8074bc:	00800044 	movi	r2,1
  8074c0:	1104983a 	sll	r2,r2,r4
  8074c4:	f800283a 	ret
  8074c8:	00800044 	movi	r2,1
  8074cc:	f800283a 	ret
  8074d0:	01400234 	movhi	r5,8
  8074d4:	28c7d83a 	sra	r3,r5,r3
  8074d8:	0005883a 	mov	r2,zero
  8074dc:	f800283a 	ret

008074e0 <__b2d>:
  8074e0:	defffa04 	addi	sp,sp,-24
  8074e4:	dc000015 	stw	r16,0(sp)
  8074e8:	24000417 	ldw	r16,16(r4)
  8074ec:	dc400115 	stw	r17,4(sp)
  8074f0:	24400504 	addi	r17,r4,20
  8074f4:	8421883a 	add	r16,r16,r16
  8074f8:	8421883a 	add	r16,r16,r16
  8074fc:	8c21883a 	add	r16,r17,r16
  807500:	dc800215 	stw	r18,8(sp)
  807504:	84bfff17 	ldw	r18,-4(r16)
  807508:	dd000415 	stw	r20,16(sp)
  80750c:	dcc00315 	stw	r19,12(sp)
  807510:	9009883a 	mov	r4,r18
  807514:	2829883a 	mov	r20,r5
  807518:	dfc00515 	stw	ra,20(sp)
  80751c:	0806c4c0 	call	806c4c <__hi0bits>
  807520:	00c00804 	movi	r3,32
  807524:	1889c83a 	sub	r4,r3,r2
  807528:	a1000015 	stw	r4,0(r20)
  80752c:	01000284 	movi	r4,10
  807530:	84ffff04 	addi	r19,r16,-4
  807534:	20801216 	blt	r4,r2,807580 <__b2d+0xa0>
  807538:	018002c4 	movi	r6,11
  80753c:	308dc83a 	sub	r6,r6,r2
  807540:	9186d83a 	srl	r3,r18,r6
  807544:	18cffc34 	orhi	r3,r3,16368
  807548:	8cc0212e 	bgeu	r17,r19,8075d0 <__b2d+0xf0>
  80754c:	813ffe17 	ldw	r4,-8(r16)
  807550:	218cd83a 	srl	r6,r4,r6
  807554:	10800544 	addi	r2,r2,21
  807558:	9084983a 	sll	r2,r18,r2
  80755c:	1184b03a 	or	r2,r2,r6
  807560:	dfc00517 	ldw	ra,20(sp)
  807564:	dd000417 	ldw	r20,16(sp)
  807568:	dcc00317 	ldw	r19,12(sp)
  80756c:	dc800217 	ldw	r18,8(sp)
  807570:	dc400117 	ldw	r17,4(sp)
  807574:	dc000017 	ldw	r16,0(sp)
  807578:	dec00604 	addi	sp,sp,24
  80757c:	f800283a 	ret
  807580:	8cc00f2e 	bgeu	r17,r19,8075c0 <__b2d+0xe0>
  807584:	117ffd44 	addi	r5,r2,-11
  807588:	80bffe17 	ldw	r2,-8(r16)
  80758c:	28000e26 	beq	r5,zero,8075c8 <__b2d+0xe8>
  807590:	1949c83a 	sub	r4,r3,r5
  807594:	9164983a 	sll	r18,r18,r5
  807598:	1106d83a 	srl	r3,r2,r4
  80759c:	81bffe04 	addi	r6,r16,-8
  8075a0:	948ffc34 	orhi	r18,r18,16368
  8075a4:	90c6b03a 	or	r3,r18,r3
  8075a8:	89800e2e 	bgeu	r17,r6,8075e4 <__b2d+0x104>
  8075ac:	81bffd17 	ldw	r6,-12(r16)
  8075b0:	1144983a 	sll	r2,r2,r5
  8075b4:	310ad83a 	srl	r5,r6,r4
  8075b8:	2884b03a 	or	r2,r5,r2
  8075bc:	003fe806 	br	807560 <__alt_data_end+0xff807560>
  8075c0:	10bffd44 	addi	r2,r2,-11
  8075c4:	1000041e 	bne	r2,zero,8075d8 <__b2d+0xf8>
  8075c8:	90cffc34 	orhi	r3,r18,16368
  8075cc:	003fe406 	br	807560 <__alt_data_end+0xff807560>
  8075d0:	000d883a 	mov	r6,zero
  8075d4:	003fdf06 	br	807554 <__alt_data_end+0xff807554>
  8075d8:	90a4983a 	sll	r18,r18,r2
  8075dc:	0005883a 	mov	r2,zero
  8075e0:	003ff906 	br	8075c8 <__alt_data_end+0xff8075c8>
  8075e4:	1144983a 	sll	r2,r2,r5
  8075e8:	003fdd06 	br	807560 <__alt_data_end+0xff807560>

008075ec <__d2b>:
  8075ec:	defff804 	addi	sp,sp,-32
  8075f0:	dc000215 	stw	r16,8(sp)
  8075f4:	3021883a 	mov	r16,r6
  8075f8:	dc400315 	stw	r17,12(sp)
  8075fc:	8022907a 	slli	r17,r16,1
  807600:	dd000615 	stw	r20,24(sp)
  807604:	2829883a 	mov	r20,r5
  807608:	01400044 	movi	r5,1
  80760c:	dcc00515 	stw	r19,20(sp)
  807610:	dc800415 	stw	r18,16(sp)
  807614:	dfc00715 	stw	ra,28(sp)
  807618:	3825883a 	mov	r18,r7
  80761c:	8822d57a 	srli	r17,r17,21
  807620:	08069580 	call	806958 <_Balloc>
  807624:	1027883a 	mov	r19,r2
  807628:	00800434 	movhi	r2,16
  80762c:	10bfffc4 	addi	r2,r2,-1
  807630:	808c703a 	and	r6,r16,r2
  807634:	88000126 	beq	r17,zero,80763c <__d2b+0x50>
  807638:	31800434 	orhi	r6,r6,16
  80763c:	d9800015 	stw	r6,0(sp)
  807640:	a0002426 	beq	r20,zero,8076d4 <__d2b+0xe8>
  807644:	d9000104 	addi	r4,sp,4
  807648:	dd000115 	stw	r20,4(sp)
  80764c:	0806cb40 	call	806cb4 <__lo0bits>
  807650:	d8c00017 	ldw	r3,0(sp)
  807654:	10002f1e 	bne	r2,zero,807714 <__d2b+0x128>
  807658:	d9000117 	ldw	r4,4(sp)
  80765c:	99000515 	stw	r4,20(r19)
  807660:	1821003a 	cmpeq	r16,r3,zero
  807664:	01000084 	movi	r4,2
  807668:	2421c83a 	sub	r16,r4,r16
  80766c:	98c00615 	stw	r3,24(r19)
  807670:	9c000415 	stw	r16,16(r19)
  807674:	88001f1e 	bne	r17,zero,8076f4 <__d2b+0x108>
  807678:	10bef384 	addi	r2,r2,-1074
  80767c:	90800015 	stw	r2,0(r18)
  807680:	00900034 	movhi	r2,16384
  807684:	10bfffc4 	addi	r2,r2,-1
  807688:	8085883a 	add	r2,r16,r2
  80768c:	1085883a 	add	r2,r2,r2
  807690:	1085883a 	add	r2,r2,r2
  807694:	9885883a 	add	r2,r19,r2
  807698:	11000517 	ldw	r4,20(r2)
  80769c:	8020917a 	slli	r16,r16,5
  8076a0:	0806c4c0 	call	806c4c <__hi0bits>
  8076a4:	d8c00817 	ldw	r3,32(sp)
  8076a8:	8085c83a 	sub	r2,r16,r2
  8076ac:	18800015 	stw	r2,0(r3)
  8076b0:	9805883a 	mov	r2,r19
  8076b4:	dfc00717 	ldw	ra,28(sp)
  8076b8:	dd000617 	ldw	r20,24(sp)
  8076bc:	dcc00517 	ldw	r19,20(sp)
  8076c0:	dc800417 	ldw	r18,16(sp)
  8076c4:	dc400317 	ldw	r17,12(sp)
  8076c8:	dc000217 	ldw	r16,8(sp)
  8076cc:	dec00804 	addi	sp,sp,32
  8076d0:	f800283a 	ret
  8076d4:	d809883a 	mov	r4,sp
  8076d8:	0806cb40 	call	806cb4 <__lo0bits>
  8076dc:	d8c00017 	ldw	r3,0(sp)
  8076e0:	04000044 	movi	r16,1
  8076e4:	9c000415 	stw	r16,16(r19)
  8076e8:	98c00515 	stw	r3,20(r19)
  8076ec:	10800804 	addi	r2,r2,32
  8076f0:	883fe126 	beq	r17,zero,807678 <__alt_data_end+0xff807678>
  8076f4:	00c00d44 	movi	r3,53
  8076f8:	8c7ef344 	addi	r17,r17,-1075
  8076fc:	88a3883a 	add	r17,r17,r2
  807700:	1885c83a 	sub	r2,r3,r2
  807704:	d8c00817 	ldw	r3,32(sp)
  807708:	94400015 	stw	r17,0(r18)
  80770c:	18800015 	stw	r2,0(r3)
  807710:	003fe706 	br	8076b0 <__alt_data_end+0xff8076b0>
  807714:	01000804 	movi	r4,32
  807718:	2089c83a 	sub	r4,r4,r2
  80771c:	1908983a 	sll	r4,r3,r4
  807720:	d9400117 	ldw	r5,4(sp)
  807724:	1886d83a 	srl	r3,r3,r2
  807728:	2148b03a 	or	r4,r4,r5
  80772c:	99000515 	stw	r4,20(r19)
  807730:	d8c00015 	stw	r3,0(sp)
  807734:	003fca06 	br	807660 <__alt_data_end+0xff807660>

00807738 <__ratio>:
  807738:	defff904 	addi	sp,sp,-28
  80773c:	dc400315 	stw	r17,12(sp)
  807740:	2823883a 	mov	r17,r5
  807744:	d9400104 	addi	r5,sp,4
  807748:	dfc00615 	stw	ra,24(sp)
  80774c:	dcc00515 	stw	r19,20(sp)
  807750:	dc800415 	stw	r18,16(sp)
  807754:	2027883a 	mov	r19,r4
  807758:	dc000215 	stw	r16,8(sp)
  80775c:	08074e00 	call	8074e0 <__b2d>
  807760:	d80b883a 	mov	r5,sp
  807764:	8809883a 	mov	r4,r17
  807768:	1025883a 	mov	r18,r2
  80776c:	1821883a 	mov	r16,r3
  807770:	08074e00 	call	8074e0 <__b2d>
  807774:	8a000417 	ldw	r8,16(r17)
  807778:	99000417 	ldw	r4,16(r19)
  80777c:	d9400117 	ldw	r5,4(sp)
  807780:	2209c83a 	sub	r4,r4,r8
  807784:	2010917a 	slli	r8,r4,5
  807788:	d9000017 	ldw	r4,0(sp)
  80778c:	2909c83a 	sub	r4,r5,r4
  807790:	4109883a 	add	r4,r8,r4
  807794:	01000e0e 	bge	zero,r4,8077d0 <__ratio+0x98>
  807798:	2008953a 	slli	r4,r4,20
  80779c:	2421883a 	add	r16,r4,r16
  8077a0:	100d883a 	mov	r6,r2
  8077a4:	180f883a 	mov	r7,r3
  8077a8:	9009883a 	mov	r4,r18
  8077ac:	800b883a 	mov	r5,r16
  8077b0:	080b6240 	call	80b624 <__divdf3>
  8077b4:	dfc00617 	ldw	ra,24(sp)
  8077b8:	dcc00517 	ldw	r19,20(sp)
  8077bc:	dc800417 	ldw	r18,16(sp)
  8077c0:	dc400317 	ldw	r17,12(sp)
  8077c4:	dc000217 	ldw	r16,8(sp)
  8077c8:	dec00704 	addi	sp,sp,28
  8077cc:	f800283a 	ret
  8077d0:	2008953a 	slli	r4,r4,20
  8077d4:	1907c83a 	sub	r3,r3,r4
  8077d8:	003ff106 	br	8077a0 <__alt_data_end+0xff8077a0>

008077dc <_mprec_log10>:
  8077dc:	defffe04 	addi	sp,sp,-8
  8077e0:	dc000015 	stw	r16,0(sp)
  8077e4:	dfc00115 	stw	ra,4(sp)
  8077e8:	008005c4 	movi	r2,23
  8077ec:	2021883a 	mov	r16,r4
  8077f0:	11000d0e 	bge	r2,r4,807828 <_mprec_log10+0x4c>
  8077f4:	0005883a 	mov	r2,zero
  8077f8:	00cffc34 	movhi	r3,16368
  8077fc:	843fffc4 	addi	r16,r16,-1
  807800:	000d883a 	mov	r6,zero
  807804:	01d00934 	movhi	r7,16420
  807808:	1009883a 	mov	r4,r2
  80780c:	180b883a 	mov	r5,r3
  807810:	080c1640 	call	80c164 <__muldf3>
  807814:	803ff91e 	bne	r16,zero,8077fc <__alt_data_end+0xff8077fc>
  807818:	dfc00117 	ldw	ra,4(sp)
  80781c:	dc000017 	ldw	r16,0(sp)
  807820:	dec00204 	addi	sp,sp,8
  807824:	f800283a 	ret
  807828:	202090fa 	slli	r16,r4,3
  80782c:	00802074 	movhi	r2,129
  807830:	10bfbe04 	addi	r2,r2,-264
  807834:	1421883a 	add	r16,r2,r16
  807838:	80800017 	ldw	r2,0(r16)
  80783c:	80c00117 	ldw	r3,4(r16)
  807840:	dfc00117 	ldw	ra,4(sp)
  807844:	dc000017 	ldw	r16,0(sp)
  807848:	dec00204 	addi	sp,sp,8
  80784c:	f800283a 	ret

00807850 <__copybits>:
  807850:	297fffc4 	addi	r5,r5,-1
  807854:	280fd17a 	srai	r7,r5,5
  807858:	30c00417 	ldw	r3,16(r6)
  80785c:	30800504 	addi	r2,r6,20
  807860:	39c00044 	addi	r7,r7,1
  807864:	18c7883a 	add	r3,r3,r3
  807868:	39cf883a 	add	r7,r7,r7
  80786c:	18c7883a 	add	r3,r3,r3
  807870:	39cf883a 	add	r7,r7,r7
  807874:	10c7883a 	add	r3,r2,r3
  807878:	21cf883a 	add	r7,r4,r7
  80787c:	10c00d2e 	bgeu	r2,r3,8078b4 <__copybits+0x64>
  807880:	200b883a 	mov	r5,r4
  807884:	12000017 	ldw	r8,0(r2)
  807888:	29400104 	addi	r5,r5,4
  80788c:	10800104 	addi	r2,r2,4
  807890:	2a3fff15 	stw	r8,-4(r5)
  807894:	10fffb36 	bltu	r2,r3,807884 <__alt_data_end+0xff807884>
  807898:	1985c83a 	sub	r2,r3,r6
  80789c:	10bffac4 	addi	r2,r2,-21
  8078a0:	1004d0ba 	srli	r2,r2,2
  8078a4:	10800044 	addi	r2,r2,1
  8078a8:	1085883a 	add	r2,r2,r2
  8078ac:	1085883a 	add	r2,r2,r2
  8078b0:	2089883a 	add	r4,r4,r2
  8078b4:	21c0032e 	bgeu	r4,r7,8078c4 <__copybits+0x74>
  8078b8:	20000015 	stw	zero,0(r4)
  8078bc:	21000104 	addi	r4,r4,4
  8078c0:	21fffd36 	bltu	r4,r7,8078b8 <__alt_data_end+0xff8078b8>
  8078c4:	f800283a 	ret

008078c8 <__any_on>:
  8078c8:	20c00417 	ldw	r3,16(r4)
  8078cc:	2805d17a 	srai	r2,r5,5
  8078d0:	21000504 	addi	r4,r4,20
  8078d4:	18800d0e 	bge	r3,r2,80790c <__any_on+0x44>
  8078d8:	18c7883a 	add	r3,r3,r3
  8078dc:	18c7883a 	add	r3,r3,r3
  8078e0:	20c7883a 	add	r3,r4,r3
  8078e4:	20c0192e 	bgeu	r4,r3,80794c <__any_on+0x84>
  8078e8:	18bfff17 	ldw	r2,-4(r3)
  8078ec:	18ffff04 	addi	r3,r3,-4
  8078f0:	1000041e 	bne	r2,zero,807904 <__any_on+0x3c>
  8078f4:	20c0142e 	bgeu	r4,r3,807948 <__any_on+0x80>
  8078f8:	18ffff04 	addi	r3,r3,-4
  8078fc:	19400017 	ldw	r5,0(r3)
  807900:	283ffc26 	beq	r5,zero,8078f4 <__alt_data_end+0xff8078f4>
  807904:	00800044 	movi	r2,1
  807908:	f800283a 	ret
  80790c:	10c00a0e 	bge	r2,r3,807938 <__any_on+0x70>
  807910:	1085883a 	add	r2,r2,r2
  807914:	1085883a 	add	r2,r2,r2
  807918:	294007cc 	andi	r5,r5,31
  80791c:	2087883a 	add	r3,r4,r2
  807920:	283ff026 	beq	r5,zero,8078e4 <__alt_data_end+0xff8078e4>
  807924:	19800017 	ldw	r6,0(r3)
  807928:	3144d83a 	srl	r2,r6,r5
  80792c:	114a983a 	sll	r5,r2,r5
  807930:	317ff41e 	bne	r6,r5,807904 <__alt_data_end+0xff807904>
  807934:	003feb06 	br	8078e4 <__alt_data_end+0xff8078e4>
  807938:	1085883a 	add	r2,r2,r2
  80793c:	1085883a 	add	r2,r2,r2
  807940:	2087883a 	add	r3,r4,r2
  807944:	003fe706 	br	8078e4 <__alt_data_end+0xff8078e4>
  807948:	f800283a 	ret
  80794c:	0005883a 	mov	r2,zero
  807950:	f800283a 	ret

00807954 <_realloc_r>:
  807954:	defff604 	addi	sp,sp,-40
  807958:	dc800215 	stw	r18,8(sp)
  80795c:	dfc00915 	stw	ra,36(sp)
  807960:	df000815 	stw	fp,32(sp)
  807964:	ddc00715 	stw	r23,28(sp)
  807968:	dd800615 	stw	r22,24(sp)
  80796c:	dd400515 	stw	r21,20(sp)
  807970:	dd000415 	stw	r20,16(sp)
  807974:	dcc00315 	stw	r19,12(sp)
  807978:	dc400115 	stw	r17,4(sp)
  80797c:	dc000015 	stw	r16,0(sp)
  807980:	3025883a 	mov	r18,r6
  807984:	2800b726 	beq	r5,zero,807c64 <_realloc_r+0x310>
  807988:	282b883a 	mov	r21,r5
  80798c:	2029883a 	mov	r20,r4
  807990:	080d8f80 	call	80d8f8 <__malloc_lock>
  807994:	a8bfff17 	ldw	r2,-4(r21)
  807998:	043fff04 	movi	r16,-4
  80799c:	90c002c4 	addi	r3,r18,11
  8079a0:	01000584 	movi	r4,22
  8079a4:	acfffe04 	addi	r19,r21,-8
  8079a8:	1420703a 	and	r16,r2,r16
  8079ac:	20c0332e 	bgeu	r4,r3,807a7c <_realloc_r+0x128>
  8079b0:	047ffe04 	movi	r17,-8
  8079b4:	1c62703a 	and	r17,r3,r17
  8079b8:	8807883a 	mov	r3,r17
  8079bc:	88005816 	blt	r17,zero,807b20 <_realloc_r+0x1cc>
  8079c0:	8c805736 	bltu	r17,r18,807b20 <_realloc_r+0x1cc>
  8079c4:	80c0300e 	bge	r16,r3,807a88 <_realloc_r+0x134>
  8079c8:	07002074 	movhi	fp,129
  8079cc:	e7012a04 	addi	fp,fp,1192
  8079d0:	e1c00217 	ldw	r7,8(fp)
  8079d4:	9c09883a 	add	r4,r19,r16
  8079d8:	22000117 	ldw	r8,4(r4)
  8079dc:	21c06326 	beq	r4,r7,807b6c <_realloc_r+0x218>
  8079e0:	017fff84 	movi	r5,-2
  8079e4:	414a703a 	and	r5,r8,r5
  8079e8:	214b883a 	add	r5,r4,r5
  8079ec:	29800117 	ldw	r6,4(r5)
  8079f0:	3180004c 	andi	r6,r6,1
  8079f4:	30003f26 	beq	r6,zero,807af4 <_realloc_r+0x1a0>
  8079f8:	1080004c 	andi	r2,r2,1
  8079fc:	10008326 	beq	r2,zero,807c0c <_realloc_r+0x2b8>
  807a00:	900b883a 	mov	r5,r18
  807a04:	a009883a 	mov	r4,r20
  807a08:	0805c9c0 	call	805c9c <_malloc_r>
  807a0c:	1025883a 	mov	r18,r2
  807a10:	10011e26 	beq	r2,zero,807e8c <_realloc_r+0x538>
  807a14:	a93fff17 	ldw	r4,-4(r21)
  807a18:	10fffe04 	addi	r3,r2,-8
  807a1c:	00bfff84 	movi	r2,-2
  807a20:	2084703a 	and	r2,r4,r2
  807a24:	9885883a 	add	r2,r19,r2
  807a28:	1880ee26 	beq	r3,r2,807de4 <_realloc_r+0x490>
  807a2c:	81bfff04 	addi	r6,r16,-4
  807a30:	00800904 	movi	r2,36
  807a34:	1180b836 	bltu	r2,r6,807d18 <_realloc_r+0x3c4>
  807a38:	00c004c4 	movi	r3,19
  807a3c:	19809636 	bltu	r3,r6,807c98 <_realloc_r+0x344>
  807a40:	9005883a 	mov	r2,r18
  807a44:	a807883a 	mov	r3,r21
  807a48:	19000017 	ldw	r4,0(r3)
  807a4c:	11000015 	stw	r4,0(r2)
  807a50:	19000117 	ldw	r4,4(r3)
  807a54:	11000115 	stw	r4,4(r2)
  807a58:	18c00217 	ldw	r3,8(r3)
  807a5c:	10c00215 	stw	r3,8(r2)
  807a60:	a80b883a 	mov	r5,r21
  807a64:	a009883a 	mov	r4,r20
  807a68:	08050b00 	call	8050b0 <_free_r>
  807a6c:	a009883a 	mov	r4,r20
  807a70:	080d91c0 	call	80d91c <__malloc_unlock>
  807a74:	9005883a 	mov	r2,r18
  807a78:	00001206 	br	807ac4 <_realloc_r+0x170>
  807a7c:	00c00404 	movi	r3,16
  807a80:	1823883a 	mov	r17,r3
  807a84:	003fce06 	br	8079c0 <__alt_data_end+0xff8079c0>
  807a88:	a825883a 	mov	r18,r21
  807a8c:	8445c83a 	sub	r2,r16,r17
  807a90:	00c003c4 	movi	r3,15
  807a94:	18802636 	bltu	r3,r2,807b30 <_realloc_r+0x1dc>
  807a98:	99800117 	ldw	r6,4(r19)
  807a9c:	9c07883a 	add	r3,r19,r16
  807aa0:	3180004c 	andi	r6,r6,1
  807aa4:	3420b03a 	or	r16,r6,r16
  807aa8:	9c000115 	stw	r16,4(r19)
  807aac:	18800117 	ldw	r2,4(r3)
  807ab0:	10800054 	ori	r2,r2,1
  807ab4:	18800115 	stw	r2,4(r3)
  807ab8:	a009883a 	mov	r4,r20
  807abc:	080d91c0 	call	80d91c <__malloc_unlock>
  807ac0:	9005883a 	mov	r2,r18
  807ac4:	dfc00917 	ldw	ra,36(sp)
  807ac8:	df000817 	ldw	fp,32(sp)
  807acc:	ddc00717 	ldw	r23,28(sp)
  807ad0:	dd800617 	ldw	r22,24(sp)
  807ad4:	dd400517 	ldw	r21,20(sp)
  807ad8:	dd000417 	ldw	r20,16(sp)
  807adc:	dcc00317 	ldw	r19,12(sp)
  807ae0:	dc800217 	ldw	r18,8(sp)
  807ae4:	dc400117 	ldw	r17,4(sp)
  807ae8:	dc000017 	ldw	r16,0(sp)
  807aec:	dec00a04 	addi	sp,sp,40
  807af0:	f800283a 	ret
  807af4:	017fff04 	movi	r5,-4
  807af8:	414a703a 	and	r5,r8,r5
  807afc:	814d883a 	add	r6,r16,r5
  807b00:	30c01f16 	blt	r6,r3,807b80 <_realloc_r+0x22c>
  807b04:	20800317 	ldw	r2,12(r4)
  807b08:	20c00217 	ldw	r3,8(r4)
  807b0c:	a825883a 	mov	r18,r21
  807b10:	3021883a 	mov	r16,r6
  807b14:	18800315 	stw	r2,12(r3)
  807b18:	10c00215 	stw	r3,8(r2)
  807b1c:	003fdb06 	br	807a8c <__alt_data_end+0xff807a8c>
  807b20:	00800304 	movi	r2,12
  807b24:	a0800015 	stw	r2,0(r20)
  807b28:	0005883a 	mov	r2,zero
  807b2c:	003fe506 	br	807ac4 <__alt_data_end+0xff807ac4>
  807b30:	98c00117 	ldw	r3,4(r19)
  807b34:	9c4b883a 	add	r5,r19,r17
  807b38:	11000054 	ori	r4,r2,1
  807b3c:	18c0004c 	andi	r3,r3,1
  807b40:	1c62b03a 	or	r17,r3,r17
  807b44:	9c400115 	stw	r17,4(r19)
  807b48:	29000115 	stw	r4,4(r5)
  807b4c:	2885883a 	add	r2,r5,r2
  807b50:	10c00117 	ldw	r3,4(r2)
  807b54:	29400204 	addi	r5,r5,8
  807b58:	a009883a 	mov	r4,r20
  807b5c:	18c00054 	ori	r3,r3,1
  807b60:	10c00115 	stw	r3,4(r2)
  807b64:	08050b00 	call	8050b0 <_free_r>
  807b68:	003fd306 	br	807ab8 <__alt_data_end+0xff807ab8>
  807b6c:	017fff04 	movi	r5,-4
  807b70:	414a703a 	and	r5,r8,r5
  807b74:	89800404 	addi	r6,r17,16
  807b78:	8151883a 	add	r8,r16,r5
  807b7c:	4180590e 	bge	r8,r6,807ce4 <_realloc_r+0x390>
  807b80:	1080004c 	andi	r2,r2,1
  807b84:	103f9e1e 	bne	r2,zero,807a00 <__alt_data_end+0xff807a00>
  807b88:	adbffe17 	ldw	r22,-8(r21)
  807b8c:	00bfff04 	movi	r2,-4
  807b90:	9dadc83a 	sub	r22,r19,r22
  807b94:	b1800117 	ldw	r6,4(r22)
  807b98:	3084703a 	and	r2,r6,r2
  807b9c:	20002026 	beq	r4,zero,807c20 <_realloc_r+0x2cc>
  807ba0:	80af883a 	add	r23,r16,r2
  807ba4:	b96f883a 	add	r23,r23,r5
  807ba8:	21c05f26 	beq	r4,r7,807d28 <_realloc_r+0x3d4>
  807bac:	b8c01c16 	blt	r23,r3,807c20 <_realloc_r+0x2cc>
  807bb0:	20800317 	ldw	r2,12(r4)
  807bb4:	20c00217 	ldw	r3,8(r4)
  807bb8:	81bfff04 	addi	r6,r16,-4
  807bbc:	01000904 	movi	r4,36
  807bc0:	18800315 	stw	r2,12(r3)
  807bc4:	10c00215 	stw	r3,8(r2)
  807bc8:	b0c00217 	ldw	r3,8(r22)
  807bcc:	b0800317 	ldw	r2,12(r22)
  807bd0:	b4800204 	addi	r18,r22,8
  807bd4:	18800315 	stw	r2,12(r3)
  807bd8:	10c00215 	stw	r3,8(r2)
  807bdc:	21801b36 	bltu	r4,r6,807c4c <_realloc_r+0x2f8>
  807be0:	008004c4 	movi	r2,19
  807be4:	1180352e 	bgeu	r2,r6,807cbc <_realloc_r+0x368>
  807be8:	a8800017 	ldw	r2,0(r21)
  807bec:	b0800215 	stw	r2,8(r22)
  807bf0:	a8800117 	ldw	r2,4(r21)
  807bf4:	b0800315 	stw	r2,12(r22)
  807bf8:	008006c4 	movi	r2,27
  807bfc:	11807f36 	bltu	r2,r6,807dfc <_realloc_r+0x4a8>
  807c00:	b0800404 	addi	r2,r22,16
  807c04:	ad400204 	addi	r21,r21,8
  807c08:	00002d06 	br	807cc0 <_realloc_r+0x36c>
  807c0c:	adbffe17 	ldw	r22,-8(r21)
  807c10:	00bfff04 	movi	r2,-4
  807c14:	9dadc83a 	sub	r22,r19,r22
  807c18:	b1000117 	ldw	r4,4(r22)
  807c1c:	2084703a 	and	r2,r4,r2
  807c20:	b03f7726 	beq	r22,zero,807a00 <__alt_data_end+0xff807a00>
  807c24:	80af883a 	add	r23,r16,r2
  807c28:	b8ff7516 	blt	r23,r3,807a00 <__alt_data_end+0xff807a00>
  807c2c:	b0800317 	ldw	r2,12(r22)
  807c30:	b0c00217 	ldw	r3,8(r22)
  807c34:	81bfff04 	addi	r6,r16,-4
  807c38:	01000904 	movi	r4,36
  807c3c:	18800315 	stw	r2,12(r3)
  807c40:	10c00215 	stw	r3,8(r2)
  807c44:	b4800204 	addi	r18,r22,8
  807c48:	21bfe52e 	bgeu	r4,r6,807be0 <__alt_data_end+0xff807be0>
  807c4c:	a80b883a 	mov	r5,r21
  807c50:	9009883a 	mov	r4,r18
  807c54:	08066d40 	call	8066d4 <memmove>
  807c58:	b821883a 	mov	r16,r23
  807c5c:	b027883a 	mov	r19,r22
  807c60:	003f8a06 	br	807a8c <__alt_data_end+0xff807a8c>
  807c64:	300b883a 	mov	r5,r6
  807c68:	dfc00917 	ldw	ra,36(sp)
  807c6c:	df000817 	ldw	fp,32(sp)
  807c70:	ddc00717 	ldw	r23,28(sp)
  807c74:	dd800617 	ldw	r22,24(sp)
  807c78:	dd400517 	ldw	r21,20(sp)
  807c7c:	dd000417 	ldw	r20,16(sp)
  807c80:	dcc00317 	ldw	r19,12(sp)
  807c84:	dc800217 	ldw	r18,8(sp)
  807c88:	dc400117 	ldw	r17,4(sp)
  807c8c:	dc000017 	ldw	r16,0(sp)
  807c90:	dec00a04 	addi	sp,sp,40
  807c94:	0805c9c1 	jmpi	805c9c <_malloc_r>
  807c98:	a8c00017 	ldw	r3,0(r21)
  807c9c:	90c00015 	stw	r3,0(r18)
  807ca0:	a8c00117 	ldw	r3,4(r21)
  807ca4:	90c00115 	stw	r3,4(r18)
  807ca8:	00c006c4 	movi	r3,27
  807cac:	19804536 	bltu	r3,r6,807dc4 <_realloc_r+0x470>
  807cb0:	90800204 	addi	r2,r18,8
  807cb4:	a8c00204 	addi	r3,r21,8
  807cb8:	003f6306 	br	807a48 <__alt_data_end+0xff807a48>
  807cbc:	9005883a 	mov	r2,r18
  807cc0:	a8c00017 	ldw	r3,0(r21)
  807cc4:	b821883a 	mov	r16,r23
  807cc8:	b027883a 	mov	r19,r22
  807ccc:	10c00015 	stw	r3,0(r2)
  807cd0:	a8c00117 	ldw	r3,4(r21)
  807cd4:	10c00115 	stw	r3,4(r2)
  807cd8:	a8c00217 	ldw	r3,8(r21)
  807cdc:	10c00215 	stw	r3,8(r2)
  807ce0:	003f6a06 	br	807a8c <__alt_data_end+0xff807a8c>
  807ce4:	9c67883a 	add	r19,r19,r17
  807ce8:	4445c83a 	sub	r2,r8,r17
  807cec:	e4c00215 	stw	r19,8(fp)
  807cf0:	10800054 	ori	r2,r2,1
  807cf4:	98800115 	stw	r2,4(r19)
  807cf8:	a8bfff17 	ldw	r2,-4(r21)
  807cfc:	a009883a 	mov	r4,r20
  807d00:	1080004c 	andi	r2,r2,1
  807d04:	1462b03a 	or	r17,r2,r17
  807d08:	ac7fff15 	stw	r17,-4(r21)
  807d0c:	080d91c0 	call	80d91c <__malloc_unlock>
  807d10:	a805883a 	mov	r2,r21
  807d14:	003f6b06 	br	807ac4 <__alt_data_end+0xff807ac4>
  807d18:	a80b883a 	mov	r5,r21
  807d1c:	9009883a 	mov	r4,r18
  807d20:	08066d40 	call	8066d4 <memmove>
  807d24:	003f4e06 	br	807a60 <__alt_data_end+0xff807a60>
  807d28:	89000404 	addi	r4,r17,16
  807d2c:	b93fbc16 	blt	r23,r4,807c20 <__alt_data_end+0xff807c20>
  807d30:	b0800317 	ldw	r2,12(r22)
  807d34:	b0c00217 	ldw	r3,8(r22)
  807d38:	81bfff04 	addi	r6,r16,-4
  807d3c:	01000904 	movi	r4,36
  807d40:	18800315 	stw	r2,12(r3)
  807d44:	10c00215 	stw	r3,8(r2)
  807d48:	b4800204 	addi	r18,r22,8
  807d4c:	21804336 	bltu	r4,r6,807e5c <_realloc_r+0x508>
  807d50:	008004c4 	movi	r2,19
  807d54:	11803f2e 	bgeu	r2,r6,807e54 <_realloc_r+0x500>
  807d58:	a8800017 	ldw	r2,0(r21)
  807d5c:	b0800215 	stw	r2,8(r22)
  807d60:	a8800117 	ldw	r2,4(r21)
  807d64:	b0800315 	stw	r2,12(r22)
  807d68:	008006c4 	movi	r2,27
  807d6c:	11803f36 	bltu	r2,r6,807e6c <_realloc_r+0x518>
  807d70:	b0800404 	addi	r2,r22,16
  807d74:	ad400204 	addi	r21,r21,8
  807d78:	a8c00017 	ldw	r3,0(r21)
  807d7c:	10c00015 	stw	r3,0(r2)
  807d80:	a8c00117 	ldw	r3,4(r21)
  807d84:	10c00115 	stw	r3,4(r2)
  807d88:	a8c00217 	ldw	r3,8(r21)
  807d8c:	10c00215 	stw	r3,8(r2)
  807d90:	b447883a 	add	r3,r22,r17
  807d94:	bc45c83a 	sub	r2,r23,r17
  807d98:	e0c00215 	stw	r3,8(fp)
  807d9c:	10800054 	ori	r2,r2,1
  807da0:	18800115 	stw	r2,4(r3)
  807da4:	b0800117 	ldw	r2,4(r22)
  807da8:	a009883a 	mov	r4,r20
  807dac:	1080004c 	andi	r2,r2,1
  807db0:	1462b03a 	or	r17,r2,r17
  807db4:	b4400115 	stw	r17,4(r22)
  807db8:	080d91c0 	call	80d91c <__malloc_unlock>
  807dbc:	9005883a 	mov	r2,r18
  807dc0:	003f4006 	br	807ac4 <__alt_data_end+0xff807ac4>
  807dc4:	a8c00217 	ldw	r3,8(r21)
  807dc8:	90c00215 	stw	r3,8(r18)
  807dcc:	a8c00317 	ldw	r3,12(r21)
  807dd0:	90c00315 	stw	r3,12(r18)
  807dd4:	30801126 	beq	r6,r2,807e1c <_realloc_r+0x4c8>
  807dd8:	90800404 	addi	r2,r18,16
  807ddc:	a8c00404 	addi	r3,r21,16
  807de0:	003f1906 	br	807a48 <__alt_data_end+0xff807a48>
  807de4:	90ffff17 	ldw	r3,-4(r18)
  807de8:	00bfff04 	movi	r2,-4
  807dec:	a825883a 	mov	r18,r21
  807df0:	1884703a 	and	r2,r3,r2
  807df4:	80a1883a 	add	r16,r16,r2
  807df8:	003f2406 	br	807a8c <__alt_data_end+0xff807a8c>
  807dfc:	a8800217 	ldw	r2,8(r21)
  807e00:	b0800415 	stw	r2,16(r22)
  807e04:	a8800317 	ldw	r2,12(r21)
  807e08:	b0800515 	stw	r2,20(r22)
  807e0c:	31000a26 	beq	r6,r4,807e38 <_realloc_r+0x4e4>
  807e10:	b0800604 	addi	r2,r22,24
  807e14:	ad400404 	addi	r21,r21,16
  807e18:	003fa906 	br	807cc0 <__alt_data_end+0xff807cc0>
  807e1c:	a9000417 	ldw	r4,16(r21)
  807e20:	90800604 	addi	r2,r18,24
  807e24:	a8c00604 	addi	r3,r21,24
  807e28:	91000415 	stw	r4,16(r18)
  807e2c:	a9000517 	ldw	r4,20(r21)
  807e30:	91000515 	stw	r4,20(r18)
  807e34:	003f0406 	br	807a48 <__alt_data_end+0xff807a48>
  807e38:	a8c00417 	ldw	r3,16(r21)
  807e3c:	ad400604 	addi	r21,r21,24
  807e40:	b0800804 	addi	r2,r22,32
  807e44:	b0c00615 	stw	r3,24(r22)
  807e48:	a8ffff17 	ldw	r3,-4(r21)
  807e4c:	b0c00715 	stw	r3,28(r22)
  807e50:	003f9b06 	br	807cc0 <__alt_data_end+0xff807cc0>
  807e54:	9005883a 	mov	r2,r18
  807e58:	003fc706 	br	807d78 <__alt_data_end+0xff807d78>
  807e5c:	a80b883a 	mov	r5,r21
  807e60:	9009883a 	mov	r4,r18
  807e64:	08066d40 	call	8066d4 <memmove>
  807e68:	003fc906 	br	807d90 <__alt_data_end+0xff807d90>
  807e6c:	a8800217 	ldw	r2,8(r21)
  807e70:	b0800415 	stw	r2,16(r22)
  807e74:	a8800317 	ldw	r2,12(r21)
  807e78:	b0800515 	stw	r2,20(r22)
  807e7c:	31000726 	beq	r6,r4,807e9c <_realloc_r+0x548>
  807e80:	b0800604 	addi	r2,r22,24
  807e84:	ad400404 	addi	r21,r21,16
  807e88:	003fbb06 	br	807d78 <__alt_data_end+0xff807d78>
  807e8c:	a009883a 	mov	r4,r20
  807e90:	080d91c0 	call	80d91c <__malloc_unlock>
  807e94:	0005883a 	mov	r2,zero
  807e98:	003f0a06 	br	807ac4 <__alt_data_end+0xff807ac4>
  807e9c:	a8c00417 	ldw	r3,16(r21)
  807ea0:	ad400604 	addi	r21,r21,24
  807ea4:	b0800804 	addi	r2,r22,32
  807ea8:	b0c00615 	stw	r3,24(r22)
  807eac:	a8ffff17 	ldw	r3,-4(r21)
  807eb0:	b0c00715 	stw	r3,28(r22)
  807eb4:	003fb006 	br	807d78 <__alt_data_end+0xff807d78>

00807eb8 <__fpclassifyd>:
  807eb8:	00a00034 	movhi	r2,32768
  807ebc:	10bfffc4 	addi	r2,r2,-1
  807ec0:	2884703a 	and	r2,r5,r2
  807ec4:	10000726 	beq	r2,zero,807ee4 <__fpclassifyd+0x2c>
  807ec8:	00fffc34 	movhi	r3,65520
  807ecc:	019ff834 	movhi	r6,32736
  807ed0:	28c7883a 	add	r3,r5,r3
  807ed4:	31bfffc4 	addi	r6,r6,-1
  807ed8:	30c00536 	bltu	r6,r3,807ef0 <__fpclassifyd+0x38>
  807edc:	00800104 	movi	r2,4
  807ee0:	f800283a 	ret
  807ee4:	2000021e 	bne	r4,zero,807ef0 <__fpclassifyd+0x38>
  807ee8:	00800084 	movi	r2,2
  807eec:	f800283a 	ret
  807ef0:	00dffc34 	movhi	r3,32752
  807ef4:	019ff834 	movhi	r6,32736
  807ef8:	28cb883a 	add	r5,r5,r3
  807efc:	31bfffc4 	addi	r6,r6,-1
  807f00:	317ff62e 	bgeu	r6,r5,807edc <__alt_data_end+0xff807edc>
  807f04:	01400434 	movhi	r5,16
  807f08:	297fffc4 	addi	r5,r5,-1
  807f0c:	28800236 	bltu	r5,r2,807f18 <__fpclassifyd+0x60>
  807f10:	008000c4 	movi	r2,3
  807f14:	f800283a 	ret
  807f18:	10c00226 	beq	r2,r3,807f24 <__fpclassifyd+0x6c>
  807f1c:	0005883a 	mov	r2,zero
  807f20:	f800283a 	ret
  807f24:	2005003a 	cmpeq	r2,r4,zero
  807f28:	f800283a 	ret

00807f2c <_sbrk_r>:
  807f2c:	defffd04 	addi	sp,sp,-12
  807f30:	dc000015 	stw	r16,0(sp)
  807f34:	04002074 	movhi	r16,129
  807f38:	dc400115 	stw	r17,4(sp)
  807f3c:	840d7f04 	addi	r16,r16,13820
  807f40:	2023883a 	mov	r17,r4
  807f44:	2809883a 	mov	r4,r5
  807f48:	dfc00215 	stw	ra,8(sp)
  807f4c:	80000015 	stw	zero,0(r16)
  807f50:	080db180 	call	80db18 <sbrk>
  807f54:	00ffffc4 	movi	r3,-1
  807f58:	10c00526 	beq	r2,r3,807f70 <_sbrk_r+0x44>
  807f5c:	dfc00217 	ldw	ra,8(sp)
  807f60:	dc400117 	ldw	r17,4(sp)
  807f64:	dc000017 	ldw	r16,0(sp)
  807f68:	dec00304 	addi	sp,sp,12
  807f6c:	f800283a 	ret
  807f70:	80c00017 	ldw	r3,0(r16)
  807f74:	183ff926 	beq	r3,zero,807f5c <__alt_data_end+0xff807f5c>
  807f78:	88c00015 	stw	r3,0(r17)
  807f7c:	003ff706 	br	807f5c <__alt_data_end+0xff807f5c>

00807f80 <__sread>:
  807f80:	defffe04 	addi	sp,sp,-8
  807f84:	dc000015 	stw	r16,0(sp)
  807f88:	2821883a 	mov	r16,r5
  807f8c:	2940038f 	ldh	r5,14(r5)
  807f90:	dfc00115 	stw	ra,4(sp)
  807f94:	0809d740 	call	809d74 <_read_r>
  807f98:	10000716 	blt	r2,zero,807fb8 <__sread+0x38>
  807f9c:	80c01417 	ldw	r3,80(r16)
  807fa0:	1887883a 	add	r3,r3,r2
  807fa4:	80c01415 	stw	r3,80(r16)
  807fa8:	dfc00117 	ldw	ra,4(sp)
  807fac:	dc000017 	ldw	r16,0(sp)
  807fb0:	dec00204 	addi	sp,sp,8
  807fb4:	f800283a 	ret
  807fb8:	80c0030b 	ldhu	r3,12(r16)
  807fbc:	18fbffcc 	andi	r3,r3,61439
  807fc0:	80c0030d 	sth	r3,12(r16)
  807fc4:	dfc00117 	ldw	ra,4(sp)
  807fc8:	dc000017 	ldw	r16,0(sp)
  807fcc:	dec00204 	addi	sp,sp,8
  807fd0:	f800283a 	ret

00807fd4 <__seofread>:
  807fd4:	0005883a 	mov	r2,zero
  807fd8:	f800283a 	ret

00807fdc <__swrite>:
  807fdc:	2880030b 	ldhu	r2,12(r5)
  807fe0:	defffb04 	addi	sp,sp,-20
  807fe4:	dcc00315 	stw	r19,12(sp)
  807fe8:	dc800215 	stw	r18,8(sp)
  807fec:	dc400115 	stw	r17,4(sp)
  807ff0:	dc000015 	stw	r16,0(sp)
  807ff4:	dfc00415 	stw	ra,16(sp)
  807ff8:	10c0400c 	andi	r3,r2,256
  807ffc:	2821883a 	mov	r16,r5
  808000:	2023883a 	mov	r17,r4
  808004:	3025883a 	mov	r18,r6
  808008:	3827883a 	mov	r19,r7
  80800c:	18000526 	beq	r3,zero,808024 <__swrite+0x48>
  808010:	2940038f 	ldh	r5,14(r5)
  808014:	01c00084 	movi	r7,2
  808018:	000d883a 	mov	r6,zero
  80801c:	0809d140 	call	809d14 <_lseek_r>
  808020:	8080030b 	ldhu	r2,12(r16)
  808024:	8140038f 	ldh	r5,14(r16)
  808028:	10bbffcc 	andi	r2,r2,61439
  80802c:	980f883a 	mov	r7,r19
  808030:	900d883a 	mov	r6,r18
  808034:	8809883a 	mov	r4,r17
  808038:	8080030d 	sth	r2,12(r16)
  80803c:	dfc00417 	ldw	ra,16(sp)
  808040:	dcc00317 	ldw	r19,12(sp)
  808044:	dc800217 	ldw	r18,8(sp)
  808048:	dc400117 	ldw	r17,4(sp)
  80804c:	dc000017 	ldw	r16,0(sp)
  808050:	dec00504 	addi	sp,sp,20
  808054:	08097e01 	jmpi	8097e0 <_write_r>

00808058 <__sseek>:
  808058:	defffe04 	addi	sp,sp,-8
  80805c:	dc000015 	stw	r16,0(sp)
  808060:	2821883a 	mov	r16,r5
  808064:	2940038f 	ldh	r5,14(r5)
  808068:	dfc00115 	stw	ra,4(sp)
  80806c:	0809d140 	call	809d14 <_lseek_r>
  808070:	00ffffc4 	movi	r3,-1
  808074:	10c00826 	beq	r2,r3,808098 <__sseek+0x40>
  808078:	80c0030b 	ldhu	r3,12(r16)
  80807c:	80801415 	stw	r2,80(r16)
  808080:	18c40014 	ori	r3,r3,4096
  808084:	80c0030d 	sth	r3,12(r16)
  808088:	dfc00117 	ldw	ra,4(sp)
  80808c:	dc000017 	ldw	r16,0(sp)
  808090:	dec00204 	addi	sp,sp,8
  808094:	f800283a 	ret
  808098:	80c0030b 	ldhu	r3,12(r16)
  80809c:	18fbffcc 	andi	r3,r3,61439
  8080a0:	80c0030d 	sth	r3,12(r16)
  8080a4:	dfc00117 	ldw	ra,4(sp)
  8080a8:	dc000017 	ldw	r16,0(sp)
  8080ac:	dec00204 	addi	sp,sp,8
  8080b0:	f800283a 	ret

008080b4 <__sclose>:
  8080b4:	2940038f 	ldh	r5,14(r5)
  8080b8:	08098401 	jmpi	809840 <_close_r>

008080bc <strcmp>:
  8080bc:	2144b03a 	or	r2,r4,r5
  8080c0:	108000cc 	andi	r2,r2,3
  8080c4:	1000171e 	bne	r2,zero,808124 <strcmp+0x68>
  8080c8:	20800017 	ldw	r2,0(r4)
  8080cc:	28c00017 	ldw	r3,0(r5)
  8080d0:	10c0141e 	bne	r2,r3,808124 <strcmp+0x68>
  8080d4:	027fbff4 	movhi	r9,65279
  8080d8:	4a7fbfc4 	addi	r9,r9,-257
  8080dc:	0086303a 	nor	r3,zero,r2
  8080e0:	02202074 	movhi	r8,32897
  8080e4:	1245883a 	add	r2,r2,r9
  8080e8:	42202004 	addi	r8,r8,-32640
  8080ec:	10c4703a 	and	r2,r2,r3
  8080f0:	1204703a 	and	r2,r2,r8
  8080f4:	10000226 	beq	r2,zero,808100 <strcmp+0x44>
  8080f8:	00002306 	br	808188 <strcmp+0xcc>
  8080fc:	1000221e 	bne	r2,zero,808188 <strcmp+0xcc>
  808100:	21000104 	addi	r4,r4,4
  808104:	20c00017 	ldw	r3,0(r4)
  808108:	29400104 	addi	r5,r5,4
  80810c:	29800017 	ldw	r6,0(r5)
  808110:	1a4f883a 	add	r7,r3,r9
  808114:	00c4303a 	nor	r2,zero,r3
  808118:	3884703a 	and	r2,r7,r2
  80811c:	1204703a 	and	r2,r2,r8
  808120:	19bff626 	beq	r3,r6,8080fc <__alt_data_end+0xff8080fc>
  808124:	20800003 	ldbu	r2,0(r4)
  808128:	10c03fcc 	andi	r3,r2,255
  80812c:	18c0201c 	xori	r3,r3,128
  808130:	18ffe004 	addi	r3,r3,-128
  808134:	18000c26 	beq	r3,zero,808168 <strcmp+0xac>
  808138:	29800007 	ldb	r6,0(r5)
  80813c:	19800326 	beq	r3,r6,80814c <strcmp+0x90>
  808140:	00001306 	br	808190 <strcmp+0xd4>
  808144:	29800007 	ldb	r6,0(r5)
  808148:	11800b1e 	bne	r2,r6,808178 <strcmp+0xbc>
  80814c:	21000044 	addi	r4,r4,1
  808150:	20c00003 	ldbu	r3,0(r4)
  808154:	29400044 	addi	r5,r5,1
  808158:	18803fcc 	andi	r2,r3,255
  80815c:	1080201c 	xori	r2,r2,128
  808160:	10bfe004 	addi	r2,r2,-128
  808164:	103ff71e 	bne	r2,zero,808144 <__alt_data_end+0xff808144>
  808168:	0007883a 	mov	r3,zero
  80816c:	28800003 	ldbu	r2,0(r5)
  808170:	1885c83a 	sub	r2,r3,r2
  808174:	f800283a 	ret
  808178:	28800003 	ldbu	r2,0(r5)
  80817c:	18c03fcc 	andi	r3,r3,255
  808180:	1885c83a 	sub	r2,r3,r2
  808184:	f800283a 	ret
  808188:	0005883a 	mov	r2,zero
  80818c:	f800283a 	ret
  808190:	10c03fcc 	andi	r3,r2,255
  808194:	003ff506 	br	80816c <__alt_data_end+0xff80816c>

00808198 <__sprint_r.part.0>:
  808198:	28801917 	ldw	r2,100(r5)
  80819c:	defff604 	addi	sp,sp,-40
  8081a0:	dd400515 	stw	r21,20(sp)
  8081a4:	dfc00915 	stw	ra,36(sp)
  8081a8:	df000815 	stw	fp,32(sp)
  8081ac:	ddc00715 	stw	r23,28(sp)
  8081b0:	dd800615 	stw	r22,24(sp)
  8081b4:	dd000415 	stw	r20,16(sp)
  8081b8:	dcc00315 	stw	r19,12(sp)
  8081bc:	dc800215 	stw	r18,8(sp)
  8081c0:	dc400115 	stw	r17,4(sp)
  8081c4:	dc000015 	stw	r16,0(sp)
  8081c8:	1088000c 	andi	r2,r2,8192
  8081cc:	302b883a 	mov	r21,r6
  8081d0:	10002e26 	beq	r2,zero,80828c <__sprint_r.part.0+0xf4>
  8081d4:	30800217 	ldw	r2,8(r6)
  8081d8:	35800017 	ldw	r22,0(r6)
  8081dc:	10002926 	beq	r2,zero,808284 <__sprint_r.part.0+0xec>
  8081e0:	2827883a 	mov	r19,r5
  8081e4:	2029883a 	mov	r20,r4
  8081e8:	b5c00104 	addi	r23,r22,4
  8081ec:	04bfffc4 	movi	r18,-1
  8081f0:	bc400017 	ldw	r17,0(r23)
  8081f4:	b4000017 	ldw	r16,0(r22)
  8081f8:	0039883a 	mov	fp,zero
  8081fc:	8822d0ba 	srli	r17,r17,2
  808200:	8800031e 	bne	r17,zero,808210 <__sprint_r.part.0+0x78>
  808204:	00001806 	br	808268 <__sprint_r.part.0+0xd0>
  808208:	84000104 	addi	r16,r16,4
  80820c:	8f001526 	beq	r17,fp,808264 <__sprint_r.part.0+0xcc>
  808210:	81400017 	ldw	r5,0(r16)
  808214:	980d883a 	mov	r6,r19
  808218:	a009883a 	mov	r4,r20
  80821c:	0809bc00 	call	809bc0 <_fputwc_r>
  808220:	e7000044 	addi	fp,fp,1
  808224:	14bff81e 	bne	r2,r18,808208 <__alt_data_end+0xff808208>
  808228:	9005883a 	mov	r2,r18
  80822c:	a8000215 	stw	zero,8(r21)
  808230:	a8000115 	stw	zero,4(r21)
  808234:	dfc00917 	ldw	ra,36(sp)
  808238:	df000817 	ldw	fp,32(sp)
  80823c:	ddc00717 	ldw	r23,28(sp)
  808240:	dd800617 	ldw	r22,24(sp)
  808244:	dd400517 	ldw	r21,20(sp)
  808248:	dd000417 	ldw	r20,16(sp)
  80824c:	dcc00317 	ldw	r19,12(sp)
  808250:	dc800217 	ldw	r18,8(sp)
  808254:	dc400117 	ldw	r17,4(sp)
  808258:	dc000017 	ldw	r16,0(sp)
  80825c:	dec00a04 	addi	sp,sp,40
  808260:	f800283a 	ret
  808264:	a8800217 	ldw	r2,8(r21)
  808268:	8c63883a 	add	r17,r17,r17
  80826c:	8c63883a 	add	r17,r17,r17
  808270:	1445c83a 	sub	r2,r2,r17
  808274:	a8800215 	stw	r2,8(r21)
  808278:	b5800204 	addi	r22,r22,8
  80827c:	bdc00204 	addi	r23,r23,8
  808280:	103fdb1e 	bne	r2,zero,8081f0 <__alt_data_end+0xff8081f0>
  808284:	0005883a 	mov	r2,zero
  808288:	003fe806 	br	80822c <__alt_data_end+0xff80822c>
  80828c:	08053c00 	call	8053c0 <__sfvwrite_r>
  808290:	003fe606 	br	80822c <__alt_data_end+0xff80822c>

00808294 <__sprint_r>:
  808294:	30c00217 	ldw	r3,8(r6)
  808298:	18000126 	beq	r3,zero,8082a0 <__sprint_r+0xc>
  80829c:	08081981 	jmpi	808198 <__sprint_r.part.0>
  8082a0:	30000115 	stw	zero,4(r6)
  8082a4:	0005883a 	mov	r2,zero
  8082a8:	f800283a 	ret

008082ac <___vfiprintf_internal_r>:
  8082ac:	deffc904 	addi	sp,sp,-220
  8082b0:	df003515 	stw	fp,212(sp)
  8082b4:	dd003115 	stw	r20,196(sp)
  8082b8:	dfc03615 	stw	ra,216(sp)
  8082bc:	ddc03415 	stw	r23,208(sp)
  8082c0:	dd803315 	stw	r22,204(sp)
  8082c4:	dd403215 	stw	r21,200(sp)
  8082c8:	dcc03015 	stw	r19,192(sp)
  8082cc:	dc802f15 	stw	r18,188(sp)
  8082d0:	dc402e15 	stw	r17,184(sp)
  8082d4:	dc002d15 	stw	r16,180(sp)
  8082d8:	d9002015 	stw	r4,128(sp)
  8082dc:	d9c02215 	stw	r7,136(sp)
  8082e0:	2829883a 	mov	r20,r5
  8082e4:	3039883a 	mov	fp,r6
  8082e8:	20000226 	beq	r4,zero,8082f4 <___vfiprintf_internal_r+0x48>
  8082ec:	20800e17 	ldw	r2,56(r4)
  8082f0:	1000cf26 	beq	r2,zero,808630 <___vfiprintf_internal_r+0x384>
  8082f4:	a080030b 	ldhu	r2,12(r20)
  8082f8:	10c8000c 	andi	r3,r2,8192
  8082fc:	1800061e 	bne	r3,zero,808318 <___vfiprintf_internal_r+0x6c>
  808300:	a1001917 	ldw	r4,100(r20)
  808304:	00f7ffc4 	movi	r3,-8193
  808308:	10880014 	ori	r2,r2,8192
  80830c:	20c6703a 	and	r3,r4,r3
  808310:	a080030d 	sth	r2,12(r20)
  808314:	a0c01915 	stw	r3,100(r20)
  808318:	10c0020c 	andi	r3,r2,8
  80831c:	1800a926 	beq	r3,zero,8085c4 <___vfiprintf_internal_r+0x318>
  808320:	a0c00417 	ldw	r3,16(r20)
  808324:	1800a726 	beq	r3,zero,8085c4 <___vfiprintf_internal_r+0x318>
  808328:	1080068c 	andi	r2,r2,26
  80832c:	00c00284 	movi	r3,10
  808330:	10c0ac26 	beq	r2,r3,8085e4 <___vfiprintf_internal_r+0x338>
  808334:	da801a04 	addi	r10,sp,104
  808338:	da801e15 	stw	r10,120(sp)
  80833c:	d8801e17 	ldw	r2,120(sp)
  808340:	da8019c4 	addi	r10,sp,103
  808344:	05802074 	movhi	r22,129
  808348:	05c02074 	movhi	r23,129
  80834c:	da801f15 	stw	r10,124(sp)
  808350:	1295c83a 	sub	r10,r2,r10
  808354:	b5bff404 	addi	r22,r22,-48
  808358:	bdfff004 	addi	r23,r23,-64
  80835c:	dec01a15 	stw	sp,104(sp)
  808360:	d8001c15 	stw	zero,112(sp)
  808364:	d8001b15 	stw	zero,108(sp)
  808368:	d8002615 	stw	zero,152(sp)
  80836c:	d8002315 	stw	zero,140(sp)
  808370:	da802715 	stw	r10,156(sp)
  808374:	d811883a 	mov	r8,sp
  808378:	dd002115 	stw	r20,132(sp)
  80837c:	e021883a 	mov	r16,fp
  808380:	80800007 	ldb	r2,0(r16)
  808384:	1003ea26 	beq	r2,zero,809330 <___vfiprintf_internal_r+0x1084>
  808388:	00c00944 	movi	r3,37
  80838c:	8025883a 	mov	r18,r16
  808390:	10c0021e 	bne	r2,r3,80839c <___vfiprintf_internal_r+0xf0>
  808394:	00001606 	br	8083f0 <___vfiprintf_internal_r+0x144>
  808398:	10c00326 	beq	r2,r3,8083a8 <___vfiprintf_internal_r+0xfc>
  80839c:	94800044 	addi	r18,r18,1
  8083a0:	90800007 	ldb	r2,0(r18)
  8083a4:	103ffc1e 	bne	r2,zero,808398 <__alt_data_end+0xff808398>
  8083a8:	9423c83a 	sub	r17,r18,r16
  8083ac:	88001026 	beq	r17,zero,8083f0 <___vfiprintf_internal_r+0x144>
  8083b0:	d8c01c17 	ldw	r3,112(sp)
  8083b4:	d8801b17 	ldw	r2,108(sp)
  8083b8:	44000015 	stw	r16,0(r8)
  8083bc:	88c7883a 	add	r3,r17,r3
  8083c0:	10800044 	addi	r2,r2,1
  8083c4:	44400115 	stw	r17,4(r8)
  8083c8:	d8c01c15 	stw	r3,112(sp)
  8083cc:	d8801b15 	stw	r2,108(sp)
  8083d0:	010001c4 	movi	r4,7
  8083d4:	2080760e 	bge	r4,r2,8085b0 <___vfiprintf_internal_r+0x304>
  8083d8:	1803821e 	bne	r3,zero,8091e4 <___vfiprintf_internal_r+0xf38>
  8083dc:	da802317 	ldw	r10,140(sp)
  8083e0:	d8001b15 	stw	zero,108(sp)
  8083e4:	d811883a 	mov	r8,sp
  8083e8:	5455883a 	add	r10,r10,r17
  8083ec:	da802315 	stw	r10,140(sp)
  8083f0:	90800007 	ldb	r2,0(r18)
  8083f4:	10044626 	beq	r2,zero,809510 <___vfiprintf_internal_r+0x1264>
  8083f8:	90c00047 	ldb	r3,1(r18)
  8083fc:	94000044 	addi	r16,r18,1
  808400:	d8001d85 	stb	zero,118(sp)
  808404:	0009883a 	mov	r4,zero
  808408:	000f883a 	mov	r7,zero
  80840c:	027fffc4 	movi	r9,-1
  808410:	0023883a 	mov	r17,zero
  808414:	0029883a 	mov	r20,zero
  808418:	01401604 	movi	r5,88
  80841c:	01800244 	movi	r6,9
  808420:	03400a84 	movi	r13,42
  808424:	03001b04 	movi	r12,108
  808428:	84000044 	addi	r16,r16,1
  80842c:	18bff804 	addi	r2,r3,-32
  808430:	28827336 	bltu	r5,r2,808e00 <___vfiprintf_internal_r+0xb54>
  808434:	100490ba 	slli	r2,r2,2
  808438:	02802074 	movhi	r10,129
  80843c:	52a11304 	addi	r10,r10,-31668
  808440:	1285883a 	add	r2,r2,r10
  808444:	10800017 	ldw	r2,0(r2)
  808448:	1000683a 	jmp	r2
  80844c:	00808b34 	movhi	r2,556
  808450:	00808e00 	call	808e0 <__alt_mem_sdram-0x77f720>
  808454:	00808e00 	call	808e0 <__alt_mem_sdram-0x77f720>
  808458:	00808b54 	movui	r2,557
  80845c:	00808e00 	call	808e0 <__alt_mem_sdram-0x77f720>
  808460:	00808e00 	call	808e0 <__alt_mem_sdram-0x77f720>
  808464:	00808e00 	call	808e0 <__alt_mem_sdram-0x77f720>
  808468:	00808e00 	call	808e0 <__alt_mem_sdram-0x77f720>
  80846c:	00808e00 	call	808e0 <__alt_mem_sdram-0x77f720>
  808470:	00808e00 	call	808e0 <__alt_mem_sdram-0x77f720>
  808474:	00808d3c 	xorhi	r2,zero,564
  808478:	00808d58 	cmpnei	r2,zero,565
  80847c:	00808e00 	call	808e0 <__alt_mem_sdram-0x77f720>
  808480:	00808640 	call	80864 <__alt_mem_sdram-0x77f79c>
  808484:	00808d68 	cmpgeui	r2,zero,565
  808488:	00808e00 	call	808e0 <__alt_mem_sdram-0x77f720>
  80848c:	00808b60 	cmpeqi	r2,zero,557
  808490:	00808b6c 	andhi	r2,zero,557
  808494:	00808b6c 	andhi	r2,zero,557
  808498:	00808b6c 	andhi	r2,zero,557
  80849c:	00808b6c 	andhi	r2,zero,557
  8084a0:	00808b6c 	andhi	r2,zero,557
  8084a4:	00808b6c 	andhi	r2,zero,557
  8084a8:	00808b6c 	andhi	r2,zero,557
  8084ac:	00808b6c 	andhi	r2,zero,557
  8084b0:	00808b6c 	andhi	r2,zero,557
  8084b4:	00808e00 	call	808e0 <__alt_mem_sdram-0x77f720>
  8084b8:	00808e00 	call	808e0 <__alt_mem_sdram-0x77f720>
  8084bc:	00808e00 	call	808e0 <__alt_mem_sdram-0x77f720>
  8084c0:	00808e00 	call	808e0 <__alt_mem_sdram-0x77f720>
  8084c4:	00808e00 	call	808e0 <__alt_mem_sdram-0x77f720>
  8084c8:	00808e00 	call	808e0 <__alt_mem_sdram-0x77f720>
  8084cc:	00808e00 	call	808e0 <__alt_mem_sdram-0x77f720>
  8084d0:	00808e00 	call	808e0 <__alt_mem_sdram-0x77f720>
  8084d4:	00808e00 	call	808e0 <__alt_mem_sdram-0x77f720>
  8084d8:	00808e00 	call	808e0 <__alt_mem_sdram-0x77f720>
  8084dc:	00808b98 	cmpnei	r2,zero,558
  8084e0:	00808e00 	call	808e0 <__alt_mem_sdram-0x77f720>
  8084e4:	00808e00 	call	808e0 <__alt_mem_sdram-0x77f720>
  8084e8:	00808e00 	call	808e0 <__alt_mem_sdram-0x77f720>
  8084ec:	00808e00 	call	808e0 <__alt_mem_sdram-0x77f720>
  8084f0:	00808e00 	call	808e0 <__alt_mem_sdram-0x77f720>
  8084f4:	00808e00 	call	808e0 <__alt_mem_sdram-0x77f720>
  8084f8:	00808e00 	call	808e0 <__alt_mem_sdram-0x77f720>
  8084fc:	00808e00 	call	808e0 <__alt_mem_sdram-0x77f720>
  808500:	00808e00 	call	808e0 <__alt_mem_sdram-0x77f720>
  808504:	00808e00 	call	808e0 <__alt_mem_sdram-0x77f720>
  808508:	00808bd0 	cmplti	r2,zero,559
  80850c:	00808e00 	call	808e0 <__alt_mem_sdram-0x77f720>
  808510:	00808e00 	call	808e0 <__alt_mem_sdram-0x77f720>
  808514:	00808e00 	call	808e0 <__alt_mem_sdram-0x77f720>
  808518:	00808e00 	call	808e0 <__alt_mem_sdram-0x77f720>
  80851c:	00808e00 	call	808e0 <__alt_mem_sdram-0x77f720>
  808520:	00808c28 	cmpgeui	r2,zero,560
  808524:	00808e00 	call	808e0 <__alt_mem_sdram-0x77f720>
  808528:	00808e00 	call	808e0 <__alt_mem_sdram-0x77f720>
  80852c:	00808c98 	cmpnei	r2,zero,562
  808530:	00808e00 	call	808e0 <__alt_mem_sdram-0x77f720>
  808534:	00808e00 	call	808e0 <__alt_mem_sdram-0x77f720>
  808538:	00808e00 	call	808e0 <__alt_mem_sdram-0x77f720>
  80853c:	00808e00 	call	808e0 <__alt_mem_sdram-0x77f720>
  808540:	00808e00 	call	808e0 <__alt_mem_sdram-0x77f720>
  808544:	00808e00 	call	808e0 <__alt_mem_sdram-0x77f720>
  808548:	00808e00 	call	808e0 <__alt_mem_sdram-0x77f720>
  80854c:	00808e00 	call	808e0 <__alt_mem_sdram-0x77f720>
  808550:	00808e00 	call	808e0 <__alt_mem_sdram-0x77f720>
  808554:	00808e00 	call	808e0 <__alt_mem_sdram-0x77f720>
  808558:	00808a44 	movi	r2,553
  80855c:	00808a70 	cmpltui	r2,zero,553
  808560:	00808e00 	call	808e0 <__alt_mem_sdram-0x77f720>
  808564:	00808e00 	call	808e0 <__alt_mem_sdram-0x77f720>
  808568:	00808e00 	call	808e0 <__alt_mem_sdram-0x77f720>
  80856c:	00808da8 	cmpgeui	r2,zero,566
  808570:	00808a70 	cmpltui	r2,zero,553
  808574:	00808e00 	call	808e0 <__alt_mem_sdram-0x77f720>
  808578:	00808e00 	call	808e0 <__alt_mem_sdram-0x77f720>
  80857c:	00808904 	movi	r2,548
  808580:	00808e00 	call	808e0 <__alt_mem_sdram-0x77f720>
  808584:	00808914 	movui	r2,548
  808588:	00808950 	cmplti	r2,zero,549
  80858c:	0080864c 	andi	r2,zero,537
  808590:	008088f8 	rdprs	r2,zero,547
  808594:	00808e00 	call	808e0 <__alt_mem_sdram-0x77f720>
  808598:	00808cd4 	movui	r2,563
  80859c:	00808e00 	call	808e0 <__alt_mem_sdram-0x77f720>
  8085a0:	00808d2c 	andhi	r2,zero,564
  8085a4:	00808e00 	call	808e0 <__alt_mem_sdram-0x77f720>
  8085a8:	00808e00 	call	808e0 <__alt_mem_sdram-0x77f720>
  8085ac:	008089f0 	cmpltui	r2,zero,551
  8085b0:	42000204 	addi	r8,r8,8
  8085b4:	da802317 	ldw	r10,140(sp)
  8085b8:	5455883a 	add	r10,r10,r17
  8085bc:	da802315 	stw	r10,140(sp)
  8085c0:	003f8b06 	br	8083f0 <__alt_data_end+0xff8083f0>
  8085c4:	d9002017 	ldw	r4,128(sp)
  8085c8:	a00b883a 	mov	r5,r20
  8085cc:	0802f680 	call	802f68 <__swsetup_r>
  8085d0:	1003b11e 	bne	r2,zero,809498 <___vfiprintf_internal_r+0x11ec>
  8085d4:	a080030b 	ldhu	r2,12(r20)
  8085d8:	00c00284 	movi	r3,10
  8085dc:	1080068c 	andi	r2,r2,26
  8085e0:	10ff541e 	bne	r2,r3,808334 <__alt_data_end+0xff808334>
  8085e4:	a080038f 	ldh	r2,14(r20)
  8085e8:	103f5216 	blt	r2,zero,808334 <__alt_data_end+0xff808334>
  8085ec:	d9c02217 	ldw	r7,136(sp)
  8085f0:	d9002017 	ldw	r4,128(sp)
  8085f4:	e00d883a 	mov	r6,fp
  8085f8:	a00b883a 	mov	r5,r20
  8085fc:	08097240 	call	809724 <__sbprintf>
  808600:	dfc03617 	ldw	ra,216(sp)
  808604:	df003517 	ldw	fp,212(sp)
  808608:	ddc03417 	ldw	r23,208(sp)
  80860c:	dd803317 	ldw	r22,204(sp)
  808610:	dd403217 	ldw	r21,200(sp)
  808614:	dd003117 	ldw	r20,196(sp)
  808618:	dcc03017 	ldw	r19,192(sp)
  80861c:	dc802f17 	ldw	r18,188(sp)
  808620:	dc402e17 	ldw	r17,184(sp)
  808624:	dc002d17 	ldw	r16,180(sp)
  808628:	dec03704 	addi	sp,sp,220
  80862c:	f800283a 	ret
  808630:	0804f3c0 	call	804f3c <__sinit>
  808634:	003f2f06 	br	8082f4 <__alt_data_end+0xff8082f4>
  808638:	0463c83a 	sub	r17,zero,r17
  80863c:	d8802215 	stw	r2,136(sp)
  808640:	a5000114 	ori	r20,r20,4
  808644:	80c00007 	ldb	r3,0(r16)
  808648:	003f7706 	br	808428 <__alt_data_end+0xff808428>
  80864c:	00800c04 	movi	r2,48
  808650:	da802217 	ldw	r10,136(sp)
  808654:	d8801d05 	stb	r2,116(sp)
  808658:	00801e04 	movi	r2,120
  80865c:	d8801d45 	stb	r2,117(sp)
  808660:	d8001d85 	stb	zero,118(sp)
  808664:	50c00104 	addi	r3,r10,4
  808668:	54800017 	ldw	r18,0(r10)
  80866c:	0027883a 	mov	r19,zero
  808670:	a0800094 	ori	r2,r20,2
  808674:	48030b16 	blt	r9,zero,8092a4 <___vfiprintf_internal_r+0xff8>
  808678:	00bfdfc4 	movi	r2,-129
  80867c:	a096703a 	and	r11,r20,r2
  808680:	d8c02215 	stw	r3,136(sp)
  808684:	5d000094 	ori	r20,r11,2
  808688:	90032b1e 	bne	r18,zero,809338 <___vfiprintf_internal_r+0x108c>
  80868c:	00802074 	movhi	r2,129
  808690:	10bf8f04 	addi	r2,r2,-452
  808694:	d8802615 	stw	r2,152(sp)
  808698:	0039883a 	mov	fp,zero
  80869c:	48017b1e 	bne	r9,zero,808c8c <___vfiprintf_internal_r+0x9e0>
  8086a0:	0013883a 	mov	r9,zero
  8086a4:	0027883a 	mov	r19,zero
  8086a8:	dd401a04 	addi	r21,sp,104
  8086ac:	4825883a 	mov	r18,r9
  8086b0:	4cc0010e 	bge	r9,r19,8086b8 <___vfiprintf_internal_r+0x40c>
  8086b4:	9825883a 	mov	r18,r19
  8086b8:	e7003fcc 	andi	fp,fp,255
  8086bc:	e700201c 	xori	fp,fp,128
  8086c0:	e73fe004 	addi	fp,fp,-128
  8086c4:	e0000126 	beq	fp,zero,8086cc <___vfiprintf_internal_r+0x420>
  8086c8:	94800044 	addi	r18,r18,1
  8086cc:	a380008c 	andi	r14,r20,2
  8086d0:	70000126 	beq	r14,zero,8086d8 <___vfiprintf_internal_r+0x42c>
  8086d4:	94800084 	addi	r18,r18,2
  8086d8:	a700210c 	andi	fp,r20,132
  8086dc:	e001df1e 	bne	fp,zero,808e5c <___vfiprintf_internal_r+0xbb0>
  8086e0:	8c87c83a 	sub	r3,r17,r18
  8086e4:	00c1dd0e 	bge	zero,r3,808e5c <___vfiprintf_internal_r+0xbb0>
  8086e8:	01c00404 	movi	r7,16
  8086ec:	d8801c17 	ldw	r2,112(sp)
  8086f0:	38c3ad0e 	bge	r7,r3,8095a8 <___vfiprintf_internal_r+0x12fc>
  8086f4:	02802074 	movhi	r10,129
  8086f8:	52bff404 	addi	r10,r10,-48
  8086fc:	dc002915 	stw	r16,164(sp)
  808700:	d9801b17 	ldw	r6,108(sp)
  808704:	da802415 	stw	r10,144(sp)
  808708:	03c001c4 	movi	r15,7
  80870c:	da402515 	stw	r9,148(sp)
  808710:	db802815 	stw	r14,160(sp)
  808714:	1821883a 	mov	r16,r3
  808718:	00000506 	br	808730 <___vfiprintf_internal_r+0x484>
  80871c:	31400084 	addi	r5,r6,2
  808720:	42000204 	addi	r8,r8,8
  808724:	200d883a 	mov	r6,r4
  808728:	843ffc04 	addi	r16,r16,-16
  80872c:	3c000d0e 	bge	r7,r16,808764 <___vfiprintf_internal_r+0x4b8>
  808730:	10800404 	addi	r2,r2,16
  808734:	31000044 	addi	r4,r6,1
  808738:	45800015 	stw	r22,0(r8)
  80873c:	41c00115 	stw	r7,4(r8)
  808740:	d8801c15 	stw	r2,112(sp)
  808744:	d9001b15 	stw	r4,108(sp)
  808748:	793ff40e 	bge	r15,r4,80871c <__alt_data_end+0xff80871c>
  80874c:	1001b51e 	bne	r2,zero,808e24 <___vfiprintf_internal_r+0xb78>
  808750:	843ffc04 	addi	r16,r16,-16
  808754:	000d883a 	mov	r6,zero
  808758:	01400044 	movi	r5,1
  80875c:	d811883a 	mov	r8,sp
  808760:	3c3ff316 	blt	r7,r16,808730 <__alt_data_end+0xff808730>
  808764:	8007883a 	mov	r3,r16
  808768:	da402517 	ldw	r9,148(sp)
  80876c:	db802817 	ldw	r14,160(sp)
  808770:	dc002917 	ldw	r16,164(sp)
  808774:	da802417 	ldw	r10,144(sp)
  808778:	1885883a 	add	r2,r3,r2
  80877c:	40c00115 	stw	r3,4(r8)
  808780:	42800015 	stw	r10,0(r8)
  808784:	d8801c15 	stw	r2,112(sp)
  808788:	d9401b15 	stw	r5,108(sp)
  80878c:	00c001c4 	movi	r3,7
  808790:	19426016 	blt	r3,r5,809114 <___vfiprintf_internal_r+0xe68>
  808794:	d8c01d87 	ldb	r3,118(sp)
  808798:	42000204 	addi	r8,r8,8
  80879c:	29000044 	addi	r4,r5,1
  8087a0:	1801b31e 	bne	r3,zero,808e70 <___vfiprintf_internal_r+0xbc4>
  8087a4:	7001c026 	beq	r14,zero,808ea8 <___vfiprintf_internal_r+0xbfc>
  8087a8:	d8c01d04 	addi	r3,sp,116
  8087ac:	10800084 	addi	r2,r2,2
  8087b0:	40c00015 	stw	r3,0(r8)
  8087b4:	00c00084 	movi	r3,2
  8087b8:	40c00115 	stw	r3,4(r8)
  8087bc:	d8801c15 	stw	r2,112(sp)
  8087c0:	d9001b15 	stw	r4,108(sp)
  8087c4:	00c001c4 	movi	r3,7
  8087c8:	1902650e 	bge	r3,r4,809160 <___vfiprintf_internal_r+0xeb4>
  8087cc:	10029a1e 	bne	r2,zero,809238 <___vfiprintf_internal_r+0xf8c>
  8087d0:	00c02004 	movi	r3,128
  8087d4:	01000044 	movi	r4,1
  8087d8:	000b883a 	mov	r5,zero
  8087dc:	d811883a 	mov	r8,sp
  8087e0:	e0c1b31e 	bne	fp,r3,808eb0 <___vfiprintf_internal_r+0xc04>
  8087e4:	8cb9c83a 	sub	fp,r17,r18
  8087e8:	0701b10e 	bge	zero,fp,808eb0 <___vfiprintf_internal_r+0xc04>
  8087ec:	01c00404 	movi	r7,16
  8087f0:	3f03890e 	bge	r7,fp,809618 <___vfiprintf_internal_r+0x136c>
  8087f4:	00c02074 	movhi	r3,129
  8087f8:	18fff004 	addi	r3,r3,-64
  8087fc:	d8c02415 	stw	r3,144(sp)
  808800:	8007883a 	mov	r3,r16
  808804:	034001c4 	movi	r13,7
  808808:	e021883a 	mov	r16,fp
  80880c:	da402515 	stw	r9,148(sp)
  808810:	1839883a 	mov	fp,r3
  808814:	00000506 	br	80882c <___vfiprintf_internal_r+0x580>
  808818:	29800084 	addi	r6,r5,2
  80881c:	42000204 	addi	r8,r8,8
  808820:	180b883a 	mov	r5,r3
  808824:	843ffc04 	addi	r16,r16,-16
  808828:	3c000d0e 	bge	r7,r16,808860 <___vfiprintf_internal_r+0x5b4>
  80882c:	10800404 	addi	r2,r2,16
  808830:	28c00044 	addi	r3,r5,1
  808834:	45c00015 	stw	r23,0(r8)
  808838:	41c00115 	stw	r7,4(r8)
  80883c:	d8801c15 	stw	r2,112(sp)
  808840:	d8c01b15 	stw	r3,108(sp)
  808844:	68fff40e 	bge	r13,r3,808818 <__alt_data_end+0xff808818>
  808848:	1002241e 	bne	r2,zero,8090dc <___vfiprintf_internal_r+0xe30>
  80884c:	843ffc04 	addi	r16,r16,-16
  808850:	01800044 	movi	r6,1
  808854:	000b883a 	mov	r5,zero
  808858:	d811883a 	mov	r8,sp
  80885c:	3c3ff316 	blt	r7,r16,80882c <__alt_data_end+0xff80882c>
  808860:	da402517 	ldw	r9,148(sp)
  808864:	e007883a 	mov	r3,fp
  808868:	8039883a 	mov	fp,r16
  80886c:	1821883a 	mov	r16,r3
  808870:	d8c02417 	ldw	r3,144(sp)
  808874:	1705883a 	add	r2,r2,fp
  808878:	47000115 	stw	fp,4(r8)
  80887c:	40c00015 	stw	r3,0(r8)
  808880:	d8801c15 	stw	r2,112(sp)
  808884:	d9801b15 	stw	r6,108(sp)
  808888:	00c001c4 	movi	r3,7
  80888c:	19827616 	blt	r3,r6,809268 <___vfiprintf_internal_r+0xfbc>
  808890:	4cf9c83a 	sub	fp,r9,r19
  808894:	42000204 	addi	r8,r8,8
  808898:	31000044 	addi	r4,r6,1
  80889c:	300b883a 	mov	r5,r6
  8088a0:	07018516 	blt	zero,fp,808eb8 <___vfiprintf_internal_r+0xc0c>
  8088a4:	9885883a 	add	r2,r19,r2
  8088a8:	45400015 	stw	r21,0(r8)
  8088ac:	44c00115 	stw	r19,4(r8)
  8088b0:	d8801c15 	stw	r2,112(sp)
  8088b4:	d9001b15 	stw	r4,108(sp)
  8088b8:	00c001c4 	movi	r3,7
  8088bc:	1901dd0e 	bge	r3,r4,809034 <___vfiprintf_internal_r+0xd88>
  8088c0:	1002401e 	bne	r2,zero,8091c4 <___vfiprintf_internal_r+0xf18>
  8088c4:	d8001b15 	stw	zero,108(sp)
  8088c8:	a2c0010c 	andi	r11,r20,4
  8088cc:	58000226 	beq	r11,zero,8088d8 <___vfiprintf_internal_r+0x62c>
  8088d0:	8ca7c83a 	sub	r19,r17,r18
  8088d4:	04c2f216 	blt	zero,r19,8094a0 <___vfiprintf_internal_r+0x11f4>
  8088d8:	8c80010e 	bge	r17,r18,8088e0 <___vfiprintf_internal_r+0x634>
  8088dc:	9023883a 	mov	r17,r18
  8088e0:	da802317 	ldw	r10,140(sp)
  8088e4:	5455883a 	add	r10,r10,r17
  8088e8:	da802315 	stw	r10,140(sp)
  8088ec:	d8001b15 	stw	zero,108(sp)
  8088f0:	d811883a 	mov	r8,sp
  8088f4:	003ea206 	br	808380 <__alt_data_end+0xff808380>
  8088f8:	a5000814 	ori	r20,r20,32
  8088fc:	80c00007 	ldb	r3,0(r16)
  808900:	003ec906 	br	808428 <__alt_data_end+0xff808428>
  808904:	80c00007 	ldb	r3,0(r16)
  808908:	1b030926 	beq	r3,r12,809530 <___vfiprintf_internal_r+0x1284>
  80890c:	a5000414 	ori	r20,r20,16
  808910:	003ec506 	br	808428 <__alt_data_end+0xff808428>
  808914:	21003fcc 	andi	r4,r4,255
  808918:	20035e1e 	bne	r4,zero,809694 <___vfiprintf_internal_r+0x13e8>
  80891c:	a080080c 	andi	r2,r20,32
  808920:	1002a526 	beq	r2,zero,8093b8 <___vfiprintf_internal_r+0x110c>
  808924:	da802217 	ldw	r10,136(sp)
  808928:	50800017 	ldw	r2,0(r10)
  80892c:	da802317 	ldw	r10,140(sp)
  808930:	5007d7fa 	srai	r3,r10,31
  808934:	da802217 	ldw	r10,136(sp)
  808938:	10c00115 	stw	r3,4(r2)
  80893c:	52800104 	addi	r10,r10,4
  808940:	da802215 	stw	r10,136(sp)
  808944:	da802317 	ldw	r10,140(sp)
  808948:	12800015 	stw	r10,0(r2)
  80894c:	003e8c06 	br	808380 <__alt_data_end+0xff808380>
  808950:	21003fcc 	andi	r4,r4,255
  808954:	2003511e 	bne	r4,zero,80969c <___vfiprintf_internal_r+0x13f0>
  808958:	a080080c 	andi	r2,r20,32
  80895c:	1000a126 	beq	r2,zero,808be4 <___vfiprintf_internal_r+0x938>
  808960:	da802217 	ldw	r10,136(sp)
  808964:	d8001d85 	stb	zero,118(sp)
  808968:	50800204 	addi	r2,r10,8
  80896c:	54800017 	ldw	r18,0(r10)
  808970:	54c00117 	ldw	r19,4(r10)
  808974:	4802b416 	blt	r9,zero,809448 <___vfiprintf_internal_r+0x119c>
  808978:	013fdfc4 	movi	r4,-129
  80897c:	94c6b03a 	or	r3,r18,r19
  808980:	d8802215 	stw	r2,136(sp)
  808984:	a128703a 	and	r20,r20,r4
  808988:	1800a226 	beq	r3,zero,808c14 <___vfiprintf_internal_r+0x968>
  80898c:	0039883a 	mov	fp,zero
  808990:	dd401a04 	addi	r21,sp,104
  808994:	9006d0fa 	srli	r3,r18,3
  808998:	9808977a 	slli	r4,r19,29
  80899c:	9826d0fa 	srli	r19,r19,3
  8089a0:	948001cc 	andi	r18,r18,7
  8089a4:	90800c04 	addi	r2,r18,48
  8089a8:	ad7fffc4 	addi	r21,r21,-1
  8089ac:	20e4b03a 	or	r18,r4,r3
  8089b0:	a8800005 	stb	r2,0(r21)
  8089b4:	94c6b03a 	or	r3,r18,r19
  8089b8:	183ff61e 	bne	r3,zero,808994 <__alt_data_end+0xff808994>
  8089bc:	a0c0004c 	andi	r3,r20,1
  8089c0:	18005926 	beq	r3,zero,808b28 <___vfiprintf_internal_r+0x87c>
  8089c4:	10803fcc 	andi	r2,r2,255
  8089c8:	1080201c 	xori	r2,r2,128
  8089cc:	10bfe004 	addi	r2,r2,-128
  8089d0:	00c00c04 	movi	r3,48
  8089d4:	10c05426 	beq	r2,r3,808b28 <___vfiprintf_internal_r+0x87c>
  8089d8:	da801e17 	ldw	r10,120(sp)
  8089dc:	a8bfffc4 	addi	r2,r21,-1
  8089e0:	a8ffffc5 	stb	r3,-1(r21)
  8089e4:	50a7c83a 	sub	r19,r10,r2
  8089e8:	102b883a 	mov	r21,r2
  8089ec:	003f2f06 	br	8086ac <__alt_data_end+0xff8086ac>
  8089f0:	21003fcc 	andi	r4,r4,255
  8089f4:	2003421e 	bne	r4,zero,809700 <___vfiprintf_internal_r+0x1454>
  8089f8:	00802074 	movhi	r2,129
  8089fc:	10bf8f04 	addi	r2,r2,-452
  808a00:	d8802615 	stw	r2,152(sp)
  808a04:	a080080c 	andi	r2,r20,32
  808a08:	1000aa26 	beq	r2,zero,808cb4 <___vfiprintf_internal_r+0xa08>
  808a0c:	da802217 	ldw	r10,136(sp)
  808a10:	54800017 	ldw	r18,0(r10)
  808a14:	54c00117 	ldw	r19,4(r10)
  808a18:	52800204 	addi	r10,r10,8
  808a1c:	da802215 	stw	r10,136(sp)
  808a20:	a080004c 	andi	r2,r20,1
  808a24:	1001d226 	beq	r2,zero,809170 <___vfiprintf_internal_r+0xec4>
  808a28:	94c4b03a 	or	r2,r18,r19
  808a2c:	1002351e 	bne	r2,zero,809304 <___vfiprintf_internal_r+0x1058>
  808a30:	d8001d85 	stb	zero,118(sp)
  808a34:	48022216 	blt	r9,zero,8092c0 <___vfiprintf_internal_r+0x1014>
  808a38:	00bfdfc4 	movi	r2,-129
  808a3c:	a0a8703a 	and	r20,r20,r2
  808a40:	003f1506 	br	808698 <__alt_data_end+0xff808698>
  808a44:	da802217 	ldw	r10,136(sp)
  808a48:	04800044 	movi	r18,1
  808a4c:	d8001d85 	stb	zero,118(sp)
  808a50:	50800017 	ldw	r2,0(r10)
  808a54:	52800104 	addi	r10,r10,4
  808a58:	da802215 	stw	r10,136(sp)
  808a5c:	d8801005 	stb	r2,64(sp)
  808a60:	9027883a 	mov	r19,r18
  808a64:	dd401004 	addi	r21,sp,64
  808a68:	0013883a 	mov	r9,zero
  808a6c:	003f1706 	br	8086cc <__alt_data_end+0xff8086cc>
  808a70:	21003fcc 	andi	r4,r4,255
  808a74:	2003201e 	bne	r4,zero,8096f8 <___vfiprintf_internal_r+0x144c>
  808a78:	a080080c 	andi	r2,r20,32
  808a7c:	10004b26 	beq	r2,zero,808bac <___vfiprintf_internal_r+0x900>
  808a80:	da802217 	ldw	r10,136(sp)
  808a84:	50800117 	ldw	r2,4(r10)
  808a88:	54800017 	ldw	r18,0(r10)
  808a8c:	52800204 	addi	r10,r10,8
  808a90:	da802215 	stw	r10,136(sp)
  808a94:	1027883a 	mov	r19,r2
  808a98:	10022c16 	blt	r2,zero,80934c <___vfiprintf_internal_r+0x10a0>
  808a9c:	df001d83 	ldbu	fp,118(sp)
  808aa0:	48007216 	blt	r9,zero,808c6c <___vfiprintf_internal_r+0x9c0>
  808aa4:	00ffdfc4 	movi	r3,-129
  808aa8:	94c4b03a 	or	r2,r18,r19
  808aac:	a0e8703a 	and	r20,r20,r3
  808ab0:	1000cc26 	beq	r2,zero,808de4 <___vfiprintf_internal_r+0xb38>
  808ab4:	98021026 	beq	r19,zero,8092f8 <___vfiprintf_internal_r+0x104c>
  808ab8:	dc402415 	stw	r17,144(sp)
  808abc:	dc002515 	stw	r16,148(sp)
  808ac0:	9823883a 	mov	r17,r19
  808ac4:	9021883a 	mov	r16,r18
  808ac8:	dd401a04 	addi	r21,sp,104
  808acc:	4825883a 	mov	r18,r9
  808ad0:	4027883a 	mov	r19,r8
  808ad4:	8009883a 	mov	r4,r16
  808ad8:	880b883a 	mov	r5,r17
  808adc:	01800284 	movi	r6,10
  808ae0:	000f883a 	mov	r7,zero
  808ae4:	080a68c0 	call	80a68c <__umoddi3>
  808ae8:	10800c04 	addi	r2,r2,48
  808aec:	ad7fffc4 	addi	r21,r21,-1
  808af0:	8009883a 	mov	r4,r16
  808af4:	880b883a 	mov	r5,r17
  808af8:	a8800005 	stb	r2,0(r21)
  808afc:	01800284 	movi	r6,10
  808b00:	000f883a 	mov	r7,zero
  808b04:	080a1140 	call	80a114 <__udivdi3>
  808b08:	1021883a 	mov	r16,r2
  808b0c:	10c4b03a 	or	r2,r2,r3
  808b10:	1823883a 	mov	r17,r3
  808b14:	103fef1e 	bne	r2,zero,808ad4 <__alt_data_end+0xff808ad4>
  808b18:	dc402417 	ldw	r17,144(sp)
  808b1c:	dc002517 	ldw	r16,148(sp)
  808b20:	9013883a 	mov	r9,r18
  808b24:	9811883a 	mov	r8,r19
  808b28:	da801e17 	ldw	r10,120(sp)
  808b2c:	5567c83a 	sub	r19,r10,r21
  808b30:	003ede06 	br	8086ac <__alt_data_end+0xff8086ac>
  808b34:	38803fcc 	andi	r2,r7,255
  808b38:	1080201c 	xori	r2,r2,128
  808b3c:	10bfe004 	addi	r2,r2,-128
  808b40:	1002371e 	bne	r2,zero,809420 <___vfiprintf_internal_r+0x1174>
  808b44:	01000044 	movi	r4,1
  808b48:	01c00804 	movi	r7,32
  808b4c:	80c00007 	ldb	r3,0(r16)
  808b50:	003e3506 	br	808428 <__alt_data_end+0xff808428>
  808b54:	a5000054 	ori	r20,r20,1
  808b58:	80c00007 	ldb	r3,0(r16)
  808b5c:	003e3206 	br	808428 <__alt_data_end+0xff808428>
  808b60:	a5002014 	ori	r20,r20,128
  808b64:	80c00007 	ldb	r3,0(r16)
  808b68:	003e2f06 	br	808428 <__alt_data_end+0xff808428>
  808b6c:	8015883a 	mov	r10,r16
  808b70:	0023883a 	mov	r17,zero
  808b74:	18bff404 	addi	r2,r3,-48
  808b78:	50c00007 	ldb	r3,0(r10)
  808b7c:	8c4002a4 	muli	r17,r17,10
  808b80:	84000044 	addi	r16,r16,1
  808b84:	8015883a 	mov	r10,r16
  808b88:	1463883a 	add	r17,r2,r17
  808b8c:	18bff404 	addi	r2,r3,-48
  808b90:	30bff92e 	bgeu	r6,r2,808b78 <__alt_data_end+0xff808b78>
  808b94:	003e2506 	br	80842c <__alt_data_end+0xff80842c>
  808b98:	21003fcc 	andi	r4,r4,255
  808b9c:	2002d41e 	bne	r4,zero,8096f0 <___vfiprintf_internal_r+0x1444>
  808ba0:	a5000414 	ori	r20,r20,16
  808ba4:	a080080c 	andi	r2,r20,32
  808ba8:	103fb51e 	bne	r2,zero,808a80 <__alt_data_end+0xff808a80>
  808bac:	a080040c 	andi	r2,r20,16
  808bb0:	1001f826 	beq	r2,zero,809394 <___vfiprintf_internal_r+0x10e8>
  808bb4:	da802217 	ldw	r10,136(sp)
  808bb8:	54800017 	ldw	r18,0(r10)
  808bbc:	52800104 	addi	r10,r10,4
  808bc0:	da802215 	stw	r10,136(sp)
  808bc4:	9027d7fa 	srai	r19,r18,31
  808bc8:	9805883a 	mov	r2,r19
  808bcc:	003fb206 	br	808a98 <__alt_data_end+0xff808a98>
  808bd0:	21003fcc 	andi	r4,r4,255
  808bd4:	2002c41e 	bne	r4,zero,8096e8 <___vfiprintf_internal_r+0x143c>
  808bd8:	a5000414 	ori	r20,r20,16
  808bdc:	a080080c 	andi	r2,r20,32
  808be0:	103f5f1e 	bne	r2,zero,808960 <__alt_data_end+0xff808960>
  808be4:	a080040c 	andi	r2,r20,16
  808be8:	10020f26 	beq	r2,zero,809428 <___vfiprintf_internal_r+0x117c>
  808bec:	da802217 	ldw	r10,136(sp)
  808bf0:	d8001d85 	stb	zero,118(sp)
  808bf4:	0027883a 	mov	r19,zero
  808bf8:	50800104 	addi	r2,r10,4
  808bfc:	54800017 	ldw	r18,0(r10)
  808c00:	48021116 	blt	r9,zero,809448 <___vfiprintf_internal_r+0x119c>
  808c04:	00ffdfc4 	movi	r3,-129
  808c08:	d8802215 	stw	r2,136(sp)
  808c0c:	a0e8703a 	and	r20,r20,r3
  808c10:	903f5e1e 	bne	r18,zero,80898c <__alt_data_end+0xff80898c>
  808c14:	0039883a 	mov	fp,zero
  808c18:	4802a626 	beq	r9,zero,8096b4 <___vfiprintf_internal_r+0x1408>
  808c1c:	0025883a 	mov	r18,zero
  808c20:	0027883a 	mov	r19,zero
  808c24:	003f5a06 	br	808990 <__alt_data_end+0xff808990>
  808c28:	21003fcc 	andi	r4,r4,255
  808c2c:	20029f1e 	bne	r4,zero,8096ac <___vfiprintf_internal_r+0x1400>
  808c30:	a5000414 	ori	r20,r20,16
  808c34:	a080080c 	andi	r2,r20,32
  808c38:	10005e1e 	bne	r2,zero,808db4 <___vfiprintf_internal_r+0xb08>
  808c3c:	a080040c 	andi	r2,r20,16
  808c40:	1001a21e 	bne	r2,zero,8092cc <___vfiprintf_internal_r+0x1020>
  808c44:	a080100c 	andi	r2,r20,64
  808c48:	d8001d85 	stb	zero,118(sp)
  808c4c:	da802217 	ldw	r10,136(sp)
  808c50:	1002231e 	bne	r2,zero,8094e0 <___vfiprintf_internal_r+0x1234>
  808c54:	50800104 	addi	r2,r10,4
  808c58:	54800017 	ldw	r18,0(r10)
  808c5c:	0027883a 	mov	r19,zero
  808c60:	4801a00e 	bge	r9,zero,8092e4 <___vfiprintf_internal_r+0x1038>
  808c64:	d8802215 	stw	r2,136(sp)
  808c68:	0039883a 	mov	fp,zero
  808c6c:	94c4b03a 	or	r2,r18,r19
  808c70:	103f901e 	bne	r2,zero,808ab4 <__alt_data_end+0xff808ab4>
  808c74:	00800044 	movi	r2,1
  808c78:	10803fcc 	andi	r2,r2,255
  808c7c:	00c00044 	movi	r3,1
  808c80:	10c05926 	beq	r2,r3,808de8 <___vfiprintf_internal_r+0xb3c>
  808c84:	00c00084 	movi	r3,2
  808c88:	10ffe41e 	bne	r2,r3,808c1c <__alt_data_end+0xff808c1c>
  808c8c:	0025883a 	mov	r18,zero
  808c90:	0027883a 	mov	r19,zero
  808c94:	00013d06 	br	80918c <___vfiprintf_internal_r+0xee0>
  808c98:	21003fcc 	andi	r4,r4,255
  808c9c:	2002811e 	bne	r4,zero,8096a4 <___vfiprintf_internal_r+0x13f8>
  808ca0:	00802074 	movhi	r2,129
  808ca4:	10bf8a04 	addi	r2,r2,-472
  808ca8:	d8802615 	stw	r2,152(sp)
  808cac:	a080080c 	andi	r2,r20,32
  808cb0:	103f561e 	bne	r2,zero,808a0c <__alt_data_end+0xff808a0c>
  808cb4:	a080040c 	andi	r2,r20,16
  808cb8:	1001d126 	beq	r2,zero,809400 <___vfiprintf_internal_r+0x1154>
  808cbc:	da802217 	ldw	r10,136(sp)
  808cc0:	0027883a 	mov	r19,zero
  808cc4:	54800017 	ldw	r18,0(r10)
  808cc8:	52800104 	addi	r10,r10,4
  808ccc:	da802215 	stw	r10,136(sp)
  808cd0:	003f5306 	br	808a20 <__alt_data_end+0xff808a20>
  808cd4:	da802217 	ldw	r10,136(sp)
  808cd8:	d8001d85 	stb	zero,118(sp)
  808cdc:	55400017 	ldw	r21,0(r10)
  808ce0:	50c00104 	addi	r3,r10,4
  808ce4:	a8024226 	beq	r21,zero,8095f0 <___vfiprintf_internal_r+0x1344>
  808ce8:	48021816 	blt	r9,zero,80954c <___vfiprintf_internal_r+0x12a0>
  808cec:	480d883a 	mov	r6,r9
  808cf0:	000b883a 	mov	r5,zero
  808cf4:	a809883a 	mov	r4,r21
  808cf8:	d8c02a15 	stw	r3,168(sp)
  808cfc:	da002b15 	stw	r8,172(sp)
  808d00:	da402c15 	stw	r9,176(sp)
  808d04:	08064a80 	call	8064a8 <memchr>
  808d08:	d8c02a17 	ldw	r3,168(sp)
  808d0c:	da002b17 	ldw	r8,172(sp)
  808d10:	da402c17 	ldw	r9,176(sp)
  808d14:	10024826 	beq	r2,zero,809638 <___vfiprintf_internal_r+0x138c>
  808d18:	1567c83a 	sub	r19,r2,r21
  808d1c:	df001d83 	ldbu	fp,118(sp)
  808d20:	d8c02215 	stw	r3,136(sp)
  808d24:	0013883a 	mov	r9,zero
  808d28:	003e6006 	br	8086ac <__alt_data_end+0xff8086ac>
  808d2c:	21003fcc 	andi	r4,r4,255
  808d30:	203fc026 	beq	r4,zero,808c34 <__alt_data_end+0xff808c34>
  808d34:	d9c01d85 	stb	r7,118(sp)
  808d38:	003fbe06 	br	808c34 <__alt_data_end+0xff808c34>
  808d3c:	da802217 	ldw	r10,136(sp)
  808d40:	54400017 	ldw	r17,0(r10)
  808d44:	50800104 	addi	r2,r10,4
  808d48:	883e3b16 	blt	r17,zero,808638 <__alt_data_end+0xff808638>
  808d4c:	d8802215 	stw	r2,136(sp)
  808d50:	80c00007 	ldb	r3,0(r16)
  808d54:	003db406 	br	808428 <__alt_data_end+0xff808428>
  808d58:	01000044 	movi	r4,1
  808d5c:	01c00ac4 	movi	r7,43
  808d60:	80c00007 	ldb	r3,0(r16)
  808d64:	003db006 	br	808428 <__alt_data_end+0xff808428>
  808d68:	80c00007 	ldb	r3,0(r16)
  808d6c:	82800044 	addi	r10,r16,1
  808d70:	1b423c26 	beq	r3,r13,809664 <___vfiprintf_internal_r+0x13b8>
  808d74:	18bff404 	addi	r2,r3,-48
  808d78:	0013883a 	mov	r9,zero
  808d7c:	30822b36 	bltu	r6,r2,80962c <___vfiprintf_internal_r+0x1380>
  808d80:	50c00007 	ldb	r3,0(r10)
  808d84:	4a4002a4 	muli	r9,r9,10
  808d88:	54000044 	addi	r16,r10,1
  808d8c:	8015883a 	mov	r10,r16
  808d90:	4893883a 	add	r9,r9,r2
  808d94:	18bff404 	addi	r2,r3,-48
  808d98:	30bff92e 	bgeu	r6,r2,808d80 <__alt_data_end+0xff808d80>
  808d9c:	483da30e 	bge	r9,zero,80842c <__alt_data_end+0xff80842c>
  808da0:	027fffc4 	movi	r9,-1
  808da4:	003da106 	br	80842c <__alt_data_end+0xff80842c>
  808da8:	a5001014 	ori	r20,r20,64
  808dac:	80c00007 	ldb	r3,0(r16)
  808db0:	003d9d06 	br	808428 <__alt_data_end+0xff808428>
  808db4:	da802217 	ldw	r10,136(sp)
  808db8:	d8001d85 	stb	zero,118(sp)
  808dbc:	50c00204 	addi	r3,r10,8
  808dc0:	54800017 	ldw	r18,0(r10)
  808dc4:	54c00117 	ldw	r19,4(r10)
  808dc8:	4801ca16 	blt	r9,zero,8094f4 <___vfiprintf_internal_r+0x1248>
  808dcc:	013fdfc4 	movi	r4,-129
  808dd0:	94c4b03a 	or	r2,r18,r19
  808dd4:	d8c02215 	stw	r3,136(sp)
  808dd8:	a128703a 	and	r20,r20,r4
  808ddc:	0039883a 	mov	fp,zero
  808de0:	103f341e 	bne	r2,zero,808ab4 <__alt_data_end+0xff808ab4>
  808de4:	483e2e26 	beq	r9,zero,8086a0 <__alt_data_end+0xff8086a0>
  808de8:	0025883a 	mov	r18,zero
  808dec:	94800c04 	addi	r18,r18,48
  808df0:	dc8019c5 	stb	r18,103(sp)
  808df4:	dcc02717 	ldw	r19,156(sp)
  808df8:	dd4019c4 	addi	r21,sp,103
  808dfc:	003e2b06 	br	8086ac <__alt_data_end+0xff8086ac>
  808e00:	21003fcc 	andi	r4,r4,255
  808e04:	2002361e 	bne	r4,zero,8096e0 <___vfiprintf_internal_r+0x1434>
  808e08:	1801c126 	beq	r3,zero,809510 <___vfiprintf_internal_r+0x1264>
  808e0c:	04800044 	movi	r18,1
  808e10:	d8c01005 	stb	r3,64(sp)
  808e14:	d8001d85 	stb	zero,118(sp)
  808e18:	9027883a 	mov	r19,r18
  808e1c:	dd401004 	addi	r21,sp,64
  808e20:	003f1106 	br	808a68 <__alt_data_end+0xff808a68>
  808e24:	d9402117 	ldw	r5,132(sp)
  808e28:	d9002017 	ldw	r4,128(sp)
  808e2c:	d9801a04 	addi	r6,sp,104
  808e30:	d9c02b15 	stw	r7,172(sp)
  808e34:	dbc02a15 	stw	r15,168(sp)
  808e38:	08081980 	call	808198 <__sprint_r.part.0>
  808e3c:	d9c02b17 	ldw	r7,172(sp)
  808e40:	dbc02a17 	ldw	r15,168(sp)
  808e44:	10006d1e 	bne	r2,zero,808ffc <___vfiprintf_internal_r+0xd50>
  808e48:	d9801b17 	ldw	r6,108(sp)
  808e4c:	d8801c17 	ldw	r2,112(sp)
  808e50:	d811883a 	mov	r8,sp
  808e54:	31400044 	addi	r5,r6,1
  808e58:	003e3306 	br	808728 <__alt_data_end+0xff808728>
  808e5c:	d9401b17 	ldw	r5,108(sp)
  808e60:	d8801c17 	ldw	r2,112(sp)
  808e64:	29000044 	addi	r4,r5,1
  808e68:	d8c01d87 	ldb	r3,118(sp)
  808e6c:	183e4d26 	beq	r3,zero,8087a4 <__alt_data_end+0xff8087a4>
  808e70:	00c00044 	movi	r3,1
  808e74:	d9401d84 	addi	r5,sp,118
  808e78:	10c5883a 	add	r2,r2,r3
  808e7c:	41400015 	stw	r5,0(r8)
  808e80:	40c00115 	stw	r3,4(r8)
  808e84:	d8801c15 	stw	r2,112(sp)
  808e88:	d9001b15 	stw	r4,108(sp)
  808e8c:	014001c4 	movi	r5,7
  808e90:	2900a90e 	bge	r5,r4,809138 <___vfiprintf_internal_r+0xe8c>
  808e94:	1000da1e 	bne	r2,zero,809200 <___vfiprintf_internal_r+0xf54>
  808e98:	7000ab1e 	bne	r14,zero,809148 <___vfiprintf_internal_r+0xe9c>
  808e9c:	000b883a 	mov	r5,zero
  808ea0:	1809883a 	mov	r4,r3
  808ea4:	d811883a 	mov	r8,sp
  808ea8:	00c02004 	movi	r3,128
  808eac:	e0fe4d26 	beq	fp,r3,8087e4 <__alt_data_end+0xff8087e4>
  808eb0:	4cf9c83a 	sub	fp,r9,r19
  808eb4:	073e7b0e 	bge	zero,fp,8088a4 <__alt_data_end+0xff8088a4>
  808eb8:	01c00404 	movi	r7,16
  808ebc:	3f01900e 	bge	r7,fp,809500 <___vfiprintf_internal_r+0x1254>
  808ec0:	00c02074 	movhi	r3,129
  808ec4:	18fff004 	addi	r3,r3,-64
  808ec8:	d8c02415 	stw	r3,144(sp)
  808ecc:	034001c4 	movi	r13,7
  808ed0:	00000506 	br	808ee8 <___vfiprintf_internal_r+0xc3c>
  808ed4:	29000084 	addi	r4,r5,2
  808ed8:	42000204 	addi	r8,r8,8
  808edc:	180b883a 	mov	r5,r3
  808ee0:	e73ffc04 	addi	fp,fp,-16
  808ee4:	3f000d0e 	bge	r7,fp,808f1c <___vfiprintf_internal_r+0xc70>
  808ee8:	10800404 	addi	r2,r2,16
  808eec:	28c00044 	addi	r3,r5,1
  808ef0:	45c00015 	stw	r23,0(r8)
  808ef4:	41c00115 	stw	r7,4(r8)
  808ef8:	d8801c15 	stw	r2,112(sp)
  808efc:	d8c01b15 	stw	r3,108(sp)
  808f00:	68fff40e 	bge	r13,r3,808ed4 <__alt_data_end+0xff808ed4>
  808f04:	1000101e 	bne	r2,zero,808f48 <___vfiprintf_internal_r+0xc9c>
  808f08:	e73ffc04 	addi	fp,fp,-16
  808f0c:	01000044 	movi	r4,1
  808f10:	000b883a 	mov	r5,zero
  808f14:	d811883a 	mov	r8,sp
  808f18:	3f3ff316 	blt	r7,fp,808ee8 <__alt_data_end+0xff808ee8>
  808f1c:	da802417 	ldw	r10,144(sp)
  808f20:	1705883a 	add	r2,r2,fp
  808f24:	47000115 	stw	fp,4(r8)
  808f28:	42800015 	stw	r10,0(r8)
  808f2c:	d8801c15 	stw	r2,112(sp)
  808f30:	d9001b15 	stw	r4,108(sp)
  808f34:	00c001c4 	movi	r3,7
  808f38:	19003616 	blt	r3,r4,809014 <___vfiprintf_internal_r+0xd68>
  808f3c:	42000204 	addi	r8,r8,8
  808f40:	21000044 	addi	r4,r4,1
  808f44:	003e5706 	br	8088a4 <__alt_data_end+0xff8088a4>
  808f48:	d9402117 	ldw	r5,132(sp)
  808f4c:	d9002017 	ldw	r4,128(sp)
  808f50:	d9801a04 	addi	r6,sp,104
  808f54:	d9c02b15 	stw	r7,172(sp)
  808f58:	db402a15 	stw	r13,168(sp)
  808f5c:	08081980 	call	808198 <__sprint_r.part.0>
  808f60:	d9c02b17 	ldw	r7,172(sp)
  808f64:	db402a17 	ldw	r13,168(sp)
  808f68:	1000241e 	bne	r2,zero,808ffc <___vfiprintf_internal_r+0xd50>
  808f6c:	d9401b17 	ldw	r5,108(sp)
  808f70:	d8801c17 	ldw	r2,112(sp)
  808f74:	d811883a 	mov	r8,sp
  808f78:	29000044 	addi	r4,r5,1
  808f7c:	003fd806 	br	808ee0 <__alt_data_end+0xff808ee0>
  808f80:	d9401b17 	ldw	r5,108(sp)
  808f84:	00c02074 	movhi	r3,129
  808f88:	18fff404 	addi	r3,r3,-48
  808f8c:	d8c02415 	stw	r3,144(sp)
  808f90:	29400044 	addi	r5,r5,1
  808f94:	d8c02417 	ldw	r3,144(sp)
  808f98:	14c5883a 	add	r2,r2,r19
  808f9c:	44c00115 	stw	r19,4(r8)
  808fa0:	40c00015 	stw	r3,0(r8)
  808fa4:	d8801c15 	stw	r2,112(sp)
  808fa8:	d9401b15 	stw	r5,108(sp)
  808fac:	00c001c4 	movi	r3,7
  808fb0:	1940070e 	bge	r3,r5,808fd0 <___vfiprintf_internal_r+0xd24>
  808fb4:	103e4826 	beq	r2,zero,8088d8 <__alt_data_end+0xff8088d8>
  808fb8:	d9402117 	ldw	r5,132(sp)
  808fbc:	d9002017 	ldw	r4,128(sp)
  808fc0:	d9801a04 	addi	r6,sp,104
  808fc4:	08081980 	call	808198 <__sprint_r.part.0>
  808fc8:	10000c1e 	bne	r2,zero,808ffc <___vfiprintf_internal_r+0xd50>
  808fcc:	d8801c17 	ldw	r2,112(sp)
  808fd0:	8c80010e 	bge	r17,r18,808fd8 <___vfiprintf_internal_r+0xd2c>
  808fd4:	9023883a 	mov	r17,r18
  808fd8:	da802317 	ldw	r10,140(sp)
  808fdc:	5455883a 	add	r10,r10,r17
  808fe0:	da802315 	stw	r10,140(sp)
  808fe4:	103e4126 	beq	r2,zero,8088ec <__alt_data_end+0xff8088ec>
  808fe8:	d9402117 	ldw	r5,132(sp)
  808fec:	d9002017 	ldw	r4,128(sp)
  808ff0:	d9801a04 	addi	r6,sp,104
  808ff4:	08081980 	call	808198 <__sprint_r.part.0>
  808ff8:	103e3c26 	beq	r2,zero,8088ec <__alt_data_end+0xff8088ec>
  808ffc:	dd002117 	ldw	r20,132(sp)
  809000:	a080030b 	ldhu	r2,12(r20)
  809004:	1080100c 	andi	r2,r2,64
  809008:	1001231e 	bne	r2,zero,809498 <___vfiprintf_internal_r+0x11ec>
  80900c:	d8802317 	ldw	r2,140(sp)
  809010:	003d7b06 	br	808600 <__alt_data_end+0xff808600>
  809014:	1000991e 	bne	r2,zero,80927c <___vfiprintf_internal_r+0xfd0>
  809018:	00c00044 	movi	r3,1
  80901c:	9805883a 	mov	r2,r19
  809020:	dd400015 	stw	r21,0(sp)
  809024:	dcc00115 	stw	r19,4(sp)
  809028:	dcc01c15 	stw	r19,112(sp)
  80902c:	d8c01b15 	stw	r3,108(sp)
  809030:	d811883a 	mov	r8,sp
  809034:	42000204 	addi	r8,r8,8
  809038:	a2c0010c 	andi	r11,r20,4
  80903c:	583fe426 	beq	r11,zero,808fd0 <__alt_data_end+0xff808fd0>
  809040:	8ca7c83a 	sub	r19,r17,r18
  809044:	04ffe20e 	bge	zero,r19,808fd0 <__alt_data_end+0xff808fd0>
  809048:	01c00404 	movi	r7,16
  80904c:	3cffcc0e 	bge	r7,r19,808f80 <__alt_data_end+0xff808f80>
  809050:	02802074 	movhi	r10,129
  809054:	52bff404 	addi	r10,r10,-48
  809058:	d9001b17 	ldw	r4,108(sp)
  80905c:	da802415 	stw	r10,144(sp)
  809060:	382b883a 	mov	r21,r7
  809064:	050001c4 	movi	r20,7
  809068:	df002017 	ldw	fp,128(sp)
  80906c:	00000506 	br	809084 <___vfiprintf_internal_r+0xdd8>
  809070:	21400084 	addi	r5,r4,2
  809074:	42000204 	addi	r8,r8,8
  809078:	1809883a 	mov	r4,r3
  80907c:	9cfffc04 	addi	r19,r19,-16
  809080:	acffc40e 	bge	r21,r19,808f94 <__alt_data_end+0xff808f94>
  809084:	10800404 	addi	r2,r2,16
  809088:	20c00044 	addi	r3,r4,1
  80908c:	45800015 	stw	r22,0(r8)
  809090:	45400115 	stw	r21,4(r8)
  809094:	d8801c15 	stw	r2,112(sp)
  809098:	d8c01b15 	stw	r3,108(sp)
  80909c:	a0fff40e 	bge	r20,r3,809070 <__alt_data_end+0xff809070>
  8090a0:	1000041e 	bne	r2,zero,8090b4 <___vfiprintf_internal_r+0xe08>
  8090a4:	01400044 	movi	r5,1
  8090a8:	0009883a 	mov	r4,zero
  8090ac:	d811883a 	mov	r8,sp
  8090b0:	003ff206 	br	80907c <__alt_data_end+0xff80907c>
  8090b4:	d9402117 	ldw	r5,132(sp)
  8090b8:	d9801a04 	addi	r6,sp,104
  8090bc:	e009883a 	mov	r4,fp
  8090c0:	08081980 	call	808198 <__sprint_r.part.0>
  8090c4:	103fcd1e 	bne	r2,zero,808ffc <__alt_data_end+0xff808ffc>
  8090c8:	d9001b17 	ldw	r4,108(sp)
  8090cc:	d8801c17 	ldw	r2,112(sp)
  8090d0:	d811883a 	mov	r8,sp
  8090d4:	21400044 	addi	r5,r4,1
  8090d8:	003fe806 	br	80907c <__alt_data_end+0xff80907c>
  8090dc:	d9402117 	ldw	r5,132(sp)
  8090e0:	d9002017 	ldw	r4,128(sp)
  8090e4:	d9801a04 	addi	r6,sp,104
  8090e8:	d9c02b15 	stw	r7,172(sp)
  8090ec:	db402a15 	stw	r13,168(sp)
  8090f0:	08081980 	call	808198 <__sprint_r.part.0>
  8090f4:	d9c02b17 	ldw	r7,172(sp)
  8090f8:	db402a17 	ldw	r13,168(sp)
  8090fc:	103fbf1e 	bne	r2,zero,808ffc <__alt_data_end+0xff808ffc>
  809100:	d9401b17 	ldw	r5,108(sp)
  809104:	d8801c17 	ldw	r2,112(sp)
  809108:	d811883a 	mov	r8,sp
  80910c:	29800044 	addi	r6,r5,1
  809110:	003dc406 	br	808824 <__alt_data_end+0xff808824>
  809114:	1000d21e 	bne	r2,zero,809460 <___vfiprintf_internal_r+0x11b4>
  809118:	d8c01d87 	ldb	r3,118(sp)
  80911c:	18009526 	beq	r3,zero,809374 <___vfiprintf_internal_r+0x10c8>
  809120:	00800044 	movi	r2,1
  809124:	d8c01d84 	addi	r3,sp,118
  809128:	1009883a 	mov	r4,r2
  80912c:	d8c00015 	stw	r3,0(sp)
  809130:	d8800115 	stw	r2,4(sp)
  809134:	d811883a 	mov	r8,sp
  809138:	200b883a 	mov	r5,r4
  80913c:	42000204 	addi	r8,r8,8
  809140:	21000044 	addi	r4,r4,1
  809144:	003d9706 	br	8087a4 <__alt_data_end+0xff8087a4>
  809148:	d9001d04 	addi	r4,sp,116
  80914c:	00800084 	movi	r2,2
  809150:	d9000015 	stw	r4,0(sp)
  809154:	d8800115 	stw	r2,4(sp)
  809158:	1809883a 	mov	r4,r3
  80915c:	d811883a 	mov	r8,sp
  809160:	200b883a 	mov	r5,r4
  809164:	42000204 	addi	r8,r8,8
  809168:	21000044 	addi	r4,r4,1
  80916c:	003f4e06 	br	808ea8 <__alt_data_end+0xff808ea8>
  809170:	d8001d85 	stb	zero,118(sp)
  809174:	48005016 	blt	r9,zero,8092b8 <___vfiprintf_internal_r+0x100c>
  809178:	00ffdfc4 	movi	r3,-129
  80917c:	94c4b03a 	or	r2,r18,r19
  809180:	a0e8703a 	and	r20,r20,r3
  809184:	103d4426 	beq	r2,zero,808698 <__alt_data_end+0xff808698>
  809188:	0039883a 	mov	fp,zero
  80918c:	d9002617 	ldw	r4,152(sp)
  809190:	dd401a04 	addi	r21,sp,104
  809194:	908003cc 	andi	r2,r18,15
  809198:	9806973a 	slli	r3,r19,28
  80919c:	2085883a 	add	r2,r4,r2
  8091a0:	9024d13a 	srli	r18,r18,4
  8091a4:	10800003 	ldbu	r2,0(r2)
  8091a8:	9826d13a 	srli	r19,r19,4
  8091ac:	ad7fffc4 	addi	r21,r21,-1
  8091b0:	1ca4b03a 	or	r18,r3,r18
  8091b4:	a8800005 	stb	r2,0(r21)
  8091b8:	94c4b03a 	or	r2,r18,r19
  8091bc:	103ff51e 	bne	r2,zero,809194 <__alt_data_end+0xff809194>
  8091c0:	003e5906 	br	808b28 <__alt_data_end+0xff808b28>
  8091c4:	d9402117 	ldw	r5,132(sp)
  8091c8:	d9002017 	ldw	r4,128(sp)
  8091cc:	d9801a04 	addi	r6,sp,104
  8091d0:	08081980 	call	808198 <__sprint_r.part.0>
  8091d4:	103f891e 	bne	r2,zero,808ffc <__alt_data_end+0xff808ffc>
  8091d8:	d8801c17 	ldw	r2,112(sp)
  8091dc:	d811883a 	mov	r8,sp
  8091e0:	003f9506 	br	809038 <__alt_data_end+0xff809038>
  8091e4:	d9402117 	ldw	r5,132(sp)
  8091e8:	d9002017 	ldw	r4,128(sp)
  8091ec:	d9801a04 	addi	r6,sp,104
  8091f0:	08081980 	call	808198 <__sprint_r.part.0>
  8091f4:	103f811e 	bne	r2,zero,808ffc <__alt_data_end+0xff808ffc>
  8091f8:	d811883a 	mov	r8,sp
  8091fc:	003ced06 	br	8085b4 <__alt_data_end+0xff8085b4>
  809200:	d9402117 	ldw	r5,132(sp)
  809204:	d9002017 	ldw	r4,128(sp)
  809208:	d9801a04 	addi	r6,sp,104
  80920c:	da402c15 	stw	r9,176(sp)
  809210:	db802a15 	stw	r14,168(sp)
  809214:	08081980 	call	808198 <__sprint_r.part.0>
  809218:	da402c17 	ldw	r9,176(sp)
  80921c:	db802a17 	ldw	r14,168(sp)
  809220:	103f761e 	bne	r2,zero,808ffc <__alt_data_end+0xff808ffc>
  809224:	d9401b17 	ldw	r5,108(sp)
  809228:	d8801c17 	ldw	r2,112(sp)
  80922c:	d811883a 	mov	r8,sp
  809230:	29000044 	addi	r4,r5,1
  809234:	003d5b06 	br	8087a4 <__alt_data_end+0xff8087a4>
  809238:	d9402117 	ldw	r5,132(sp)
  80923c:	d9002017 	ldw	r4,128(sp)
  809240:	d9801a04 	addi	r6,sp,104
  809244:	da402c15 	stw	r9,176(sp)
  809248:	08081980 	call	808198 <__sprint_r.part.0>
  80924c:	da402c17 	ldw	r9,176(sp)
  809250:	103f6a1e 	bne	r2,zero,808ffc <__alt_data_end+0xff808ffc>
  809254:	d9401b17 	ldw	r5,108(sp)
  809258:	d8801c17 	ldw	r2,112(sp)
  80925c:	d811883a 	mov	r8,sp
  809260:	29000044 	addi	r4,r5,1
  809264:	003f1006 	br	808ea8 <__alt_data_end+0xff808ea8>
  809268:	1000c31e 	bne	r2,zero,809578 <___vfiprintf_internal_r+0x12cc>
  80926c:	01000044 	movi	r4,1
  809270:	000b883a 	mov	r5,zero
  809274:	d811883a 	mov	r8,sp
  809278:	003f0d06 	br	808eb0 <__alt_data_end+0xff808eb0>
  80927c:	d9402117 	ldw	r5,132(sp)
  809280:	d9002017 	ldw	r4,128(sp)
  809284:	d9801a04 	addi	r6,sp,104
  809288:	08081980 	call	808198 <__sprint_r.part.0>
  80928c:	103f5b1e 	bne	r2,zero,808ffc <__alt_data_end+0xff808ffc>
  809290:	d9001b17 	ldw	r4,108(sp)
  809294:	d8801c17 	ldw	r2,112(sp)
  809298:	d811883a 	mov	r8,sp
  80929c:	21000044 	addi	r4,r4,1
  8092a0:	003d8006 	br	8088a4 <__alt_data_end+0xff8088a4>
  8092a4:	01002074 	movhi	r4,129
  8092a8:	213f8f04 	addi	r4,r4,-452
  8092ac:	d9002615 	stw	r4,152(sp)
  8092b0:	d8c02215 	stw	r3,136(sp)
  8092b4:	1029883a 	mov	r20,r2
  8092b8:	94c4b03a 	or	r2,r18,r19
  8092bc:	103fb21e 	bne	r2,zero,809188 <__alt_data_end+0xff809188>
  8092c0:	0039883a 	mov	fp,zero
  8092c4:	00800084 	movi	r2,2
  8092c8:	003e6b06 	br	808c78 <__alt_data_end+0xff808c78>
  8092cc:	da802217 	ldw	r10,136(sp)
  8092d0:	d8001d85 	stb	zero,118(sp)
  8092d4:	0027883a 	mov	r19,zero
  8092d8:	50800104 	addi	r2,r10,4
  8092dc:	54800017 	ldw	r18,0(r10)
  8092e0:	483e6016 	blt	r9,zero,808c64 <__alt_data_end+0xff808c64>
  8092e4:	00ffdfc4 	movi	r3,-129
  8092e8:	d8802215 	stw	r2,136(sp)
  8092ec:	a0e8703a 	and	r20,r20,r3
  8092f0:	0039883a 	mov	fp,zero
  8092f4:	903ebb26 	beq	r18,zero,808de4 <__alt_data_end+0xff808de4>
  8092f8:	00800244 	movi	r2,9
  8092fc:	14bdee36 	bltu	r2,r18,808ab8 <__alt_data_end+0xff808ab8>
  809300:	003eba06 	br	808dec <__alt_data_end+0xff808dec>
  809304:	00800c04 	movi	r2,48
  809308:	d8c01d45 	stb	r3,117(sp)
  80930c:	d8801d05 	stb	r2,116(sp)
  809310:	d8001d85 	stb	zero,118(sp)
  809314:	a0c00094 	ori	r3,r20,2
  809318:	4800a916 	blt	r9,zero,8095c0 <___vfiprintf_internal_r+0x1314>
  80931c:	00bfdfc4 	movi	r2,-129
  809320:	a096703a 	and	r11,r20,r2
  809324:	5d000094 	ori	r20,r11,2
  809328:	0039883a 	mov	fp,zero
  80932c:	003f9706 	br	80918c <__alt_data_end+0xff80918c>
  809330:	8025883a 	mov	r18,r16
  809334:	003c2e06 	br	8083f0 <__alt_data_end+0xff8083f0>
  809338:	00802074 	movhi	r2,129
  80933c:	10bf8f04 	addi	r2,r2,-452
  809340:	0039883a 	mov	fp,zero
  809344:	d8802615 	stw	r2,152(sp)
  809348:	003f9006 	br	80918c <__alt_data_end+0xff80918c>
  80934c:	04a5c83a 	sub	r18,zero,r18
  809350:	07000b44 	movi	fp,45
  809354:	9004c03a 	cmpne	r2,r18,zero
  809358:	04e7c83a 	sub	r19,zero,r19
  80935c:	df001d85 	stb	fp,118(sp)
  809360:	98a7c83a 	sub	r19,r19,r2
  809364:	48009f16 	blt	r9,zero,8095e4 <___vfiprintf_internal_r+0x1338>
  809368:	00bfdfc4 	movi	r2,-129
  80936c:	a0a8703a 	and	r20,r20,r2
  809370:	003dd006 	br	808ab4 <__alt_data_end+0xff808ab4>
  809374:	70004c26 	beq	r14,zero,8094a8 <___vfiprintf_internal_r+0x11fc>
  809378:	00800084 	movi	r2,2
  80937c:	d8c01d04 	addi	r3,sp,116
  809380:	d8c00015 	stw	r3,0(sp)
  809384:	d8800115 	stw	r2,4(sp)
  809388:	01000044 	movi	r4,1
  80938c:	d811883a 	mov	r8,sp
  809390:	003f7306 	br	809160 <__alt_data_end+0xff809160>
  809394:	a080100c 	andi	r2,r20,64
  809398:	da802217 	ldw	r10,136(sp)
  80939c:	103e0626 	beq	r2,zero,808bb8 <__alt_data_end+0xff808bb8>
  8093a0:	5480000f 	ldh	r18,0(r10)
  8093a4:	52800104 	addi	r10,r10,4
  8093a8:	da802215 	stw	r10,136(sp)
  8093ac:	9027d7fa 	srai	r19,r18,31
  8093b0:	9805883a 	mov	r2,r19
  8093b4:	003db806 	br	808a98 <__alt_data_end+0xff808a98>
  8093b8:	a080040c 	andi	r2,r20,16
  8093bc:	1000091e 	bne	r2,zero,8093e4 <___vfiprintf_internal_r+0x1138>
  8093c0:	a2c0100c 	andi	r11,r20,64
  8093c4:	58000726 	beq	r11,zero,8093e4 <___vfiprintf_internal_r+0x1138>
  8093c8:	da802217 	ldw	r10,136(sp)
  8093cc:	50800017 	ldw	r2,0(r10)
  8093d0:	52800104 	addi	r10,r10,4
  8093d4:	da802215 	stw	r10,136(sp)
  8093d8:	da802317 	ldw	r10,140(sp)
  8093dc:	1280000d 	sth	r10,0(r2)
  8093e0:	003be706 	br	808380 <__alt_data_end+0xff808380>
  8093e4:	da802217 	ldw	r10,136(sp)
  8093e8:	50800017 	ldw	r2,0(r10)
  8093ec:	52800104 	addi	r10,r10,4
  8093f0:	da802215 	stw	r10,136(sp)
  8093f4:	da802317 	ldw	r10,140(sp)
  8093f8:	12800015 	stw	r10,0(r2)
  8093fc:	003be006 	br	808380 <__alt_data_end+0xff808380>
  809400:	a080100c 	andi	r2,r20,64
  809404:	da802217 	ldw	r10,136(sp)
  809408:	10003026 	beq	r2,zero,8094cc <___vfiprintf_internal_r+0x1220>
  80940c:	5480000b 	ldhu	r18,0(r10)
  809410:	52800104 	addi	r10,r10,4
  809414:	0027883a 	mov	r19,zero
  809418:	da802215 	stw	r10,136(sp)
  80941c:	003d8006 	br	808a20 <__alt_data_end+0xff808a20>
  809420:	80c00007 	ldb	r3,0(r16)
  809424:	003c0006 	br	808428 <__alt_data_end+0xff808428>
  809428:	a080100c 	andi	r2,r20,64
  80942c:	d8001d85 	stb	zero,118(sp)
  809430:	da802217 	ldw	r10,136(sp)
  809434:	1000201e 	bne	r2,zero,8094b8 <___vfiprintf_internal_r+0x120c>
  809438:	50800104 	addi	r2,r10,4
  80943c:	54800017 	ldw	r18,0(r10)
  809440:	0027883a 	mov	r19,zero
  809444:	483def0e 	bge	r9,zero,808c04 <__alt_data_end+0xff808c04>
  809448:	94c6b03a 	or	r3,r18,r19
  80944c:	d8802215 	stw	r2,136(sp)
  809450:	183d4e1e 	bne	r3,zero,80898c <__alt_data_end+0xff80898c>
  809454:	0039883a 	mov	fp,zero
  809458:	0005883a 	mov	r2,zero
  80945c:	003e0606 	br	808c78 <__alt_data_end+0xff808c78>
  809460:	d9402117 	ldw	r5,132(sp)
  809464:	d9002017 	ldw	r4,128(sp)
  809468:	d9801a04 	addi	r6,sp,104
  80946c:	da402c15 	stw	r9,176(sp)
  809470:	db802a15 	stw	r14,168(sp)
  809474:	08081980 	call	808198 <__sprint_r.part.0>
  809478:	da402c17 	ldw	r9,176(sp)
  80947c:	db802a17 	ldw	r14,168(sp)
  809480:	103ede1e 	bne	r2,zero,808ffc <__alt_data_end+0xff808ffc>
  809484:	d9401b17 	ldw	r5,108(sp)
  809488:	d8801c17 	ldw	r2,112(sp)
  80948c:	d811883a 	mov	r8,sp
  809490:	29000044 	addi	r4,r5,1
  809494:	003e7406 	br	808e68 <__alt_data_end+0xff808e68>
  809498:	00bfffc4 	movi	r2,-1
  80949c:	003c5806 	br	808600 <__alt_data_end+0xff808600>
  8094a0:	d811883a 	mov	r8,sp
  8094a4:	003ee806 	br	809048 <__alt_data_end+0xff809048>
  8094a8:	000b883a 	mov	r5,zero
  8094ac:	01000044 	movi	r4,1
  8094b0:	d811883a 	mov	r8,sp
  8094b4:	003e7c06 	br	808ea8 <__alt_data_end+0xff808ea8>
  8094b8:	50800104 	addi	r2,r10,4
  8094bc:	5480000b 	ldhu	r18,0(r10)
  8094c0:	0027883a 	mov	r19,zero
  8094c4:	483dcf0e 	bge	r9,zero,808c04 <__alt_data_end+0xff808c04>
  8094c8:	003fdf06 	br	809448 <__alt_data_end+0xff809448>
  8094cc:	54800017 	ldw	r18,0(r10)
  8094d0:	52800104 	addi	r10,r10,4
  8094d4:	0027883a 	mov	r19,zero
  8094d8:	da802215 	stw	r10,136(sp)
  8094dc:	003d5006 	br	808a20 <__alt_data_end+0xff808a20>
  8094e0:	50800104 	addi	r2,r10,4
  8094e4:	5480000b 	ldhu	r18,0(r10)
  8094e8:	0027883a 	mov	r19,zero
  8094ec:	483f7d0e 	bge	r9,zero,8092e4 <__alt_data_end+0xff8092e4>
  8094f0:	003ddc06 	br	808c64 <__alt_data_end+0xff808c64>
  8094f4:	d8c02215 	stw	r3,136(sp)
  8094f8:	0039883a 	mov	fp,zero
  8094fc:	003ddb06 	br	808c6c <__alt_data_end+0xff808c6c>
  809500:	02802074 	movhi	r10,129
  809504:	52bff004 	addi	r10,r10,-64
  809508:	da802415 	stw	r10,144(sp)
  80950c:	003e8306 	br	808f1c <__alt_data_end+0xff808f1c>
  809510:	d8801c17 	ldw	r2,112(sp)
  809514:	dd002117 	ldw	r20,132(sp)
  809518:	103eb926 	beq	r2,zero,809000 <__alt_data_end+0xff809000>
  80951c:	d9002017 	ldw	r4,128(sp)
  809520:	d9801a04 	addi	r6,sp,104
  809524:	a00b883a 	mov	r5,r20
  809528:	08081980 	call	808198 <__sprint_r.part.0>
  80952c:	003eb406 	br	809000 <__alt_data_end+0xff809000>
  809530:	80c00043 	ldbu	r3,1(r16)
  809534:	a5000814 	ori	r20,r20,32
  809538:	84000044 	addi	r16,r16,1
  80953c:	18c03fcc 	andi	r3,r3,255
  809540:	18c0201c 	xori	r3,r3,128
  809544:	18ffe004 	addi	r3,r3,-128
  809548:	003bb706 	br	808428 <__alt_data_end+0xff808428>
  80954c:	a809883a 	mov	r4,r21
  809550:	d8c02a15 	stw	r3,168(sp)
  809554:	da002b15 	stw	r8,172(sp)
  809558:	0800c000 	call	800c00 <strlen>
  80955c:	d8c02a17 	ldw	r3,168(sp)
  809560:	1027883a 	mov	r19,r2
  809564:	df001d83 	ldbu	fp,118(sp)
  809568:	d8c02215 	stw	r3,136(sp)
  80956c:	0013883a 	mov	r9,zero
  809570:	da002b17 	ldw	r8,172(sp)
  809574:	003c4d06 	br	8086ac <__alt_data_end+0xff8086ac>
  809578:	d9402117 	ldw	r5,132(sp)
  80957c:	d9002017 	ldw	r4,128(sp)
  809580:	d9801a04 	addi	r6,sp,104
  809584:	da402c15 	stw	r9,176(sp)
  809588:	08081980 	call	808198 <__sprint_r.part.0>
  80958c:	da402c17 	ldw	r9,176(sp)
  809590:	103e9a1e 	bne	r2,zero,808ffc <__alt_data_end+0xff808ffc>
  809594:	d9401b17 	ldw	r5,108(sp)
  809598:	d8801c17 	ldw	r2,112(sp)
  80959c:	d811883a 	mov	r8,sp
  8095a0:	29000044 	addi	r4,r5,1
  8095a4:	003e4206 	br	808eb0 <__alt_data_end+0xff808eb0>
  8095a8:	d9401b17 	ldw	r5,108(sp)
  8095ac:	01002074 	movhi	r4,129
  8095b0:	213ff404 	addi	r4,r4,-48
  8095b4:	d9002415 	stw	r4,144(sp)
  8095b8:	29400044 	addi	r5,r5,1
  8095bc:	003c6d06 	br	808774 <__alt_data_end+0xff808774>
  8095c0:	0039883a 	mov	fp,zero
  8095c4:	00800084 	movi	r2,2
  8095c8:	10803fcc 	andi	r2,r2,255
  8095cc:	01000044 	movi	r4,1
  8095d0:	11001e26 	beq	r2,r4,80964c <___vfiprintf_internal_r+0x13a0>
  8095d4:	01000084 	movi	r4,2
  8095d8:	11001e1e 	bne	r2,r4,809654 <___vfiprintf_internal_r+0x13a8>
  8095dc:	1829883a 	mov	r20,r3
  8095e0:	003eea06 	br	80918c <__alt_data_end+0xff80918c>
  8095e4:	a007883a 	mov	r3,r20
  8095e8:	00800044 	movi	r2,1
  8095ec:	003ff606 	br	8095c8 <__alt_data_end+0xff8095c8>
  8095f0:	00800184 	movi	r2,6
  8095f4:	1240012e 	bgeu	r2,r9,8095fc <___vfiprintf_internal_r+0x1350>
  8095f8:	1013883a 	mov	r9,r2
  8095fc:	4827883a 	mov	r19,r9
  809600:	4825883a 	mov	r18,r9
  809604:	48001516 	blt	r9,zero,80965c <___vfiprintf_internal_r+0x13b0>
  809608:	05402074 	movhi	r21,129
  80960c:	d8c02215 	stw	r3,136(sp)
  809610:	ad7f9404 	addi	r21,r21,-432
  809614:	003d1406 	br	808a68 <__alt_data_end+0xff808a68>
  809618:	02802074 	movhi	r10,129
  80961c:	52bff004 	addi	r10,r10,-64
  809620:	da802415 	stw	r10,144(sp)
  809624:	200d883a 	mov	r6,r4
  809628:	003c9106 	br	808870 <__alt_data_end+0xff808870>
  80962c:	5021883a 	mov	r16,r10
  809630:	0013883a 	mov	r9,zero
  809634:	003b7d06 	br	80842c <__alt_data_end+0xff80842c>
  809638:	4827883a 	mov	r19,r9
  80963c:	df001d83 	ldbu	fp,118(sp)
  809640:	d8c02215 	stw	r3,136(sp)
  809644:	0013883a 	mov	r9,zero
  809648:	003c1806 	br	8086ac <__alt_data_end+0xff8086ac>
  80964c:	1829883a 	mov	r20,r3
  809650:	003d1806 	br	808ab4 <__alt_data_end+0xff808ab4>
  809654:	1829883a 	mov	r20,r3
  809658:	003ccd06 	br	808990 <__alt_data_end+0xff808990>
  80965c:	0025883a 	mov	r18,zero
  809660:	003fe906 	br	809608 <__alt_data_end+0xff809608>
  809664:	d8802217 	ldw	r2,136(sp)
  809668:	80c00043 	ldbu	r3,1(r16)
  80966c:	5021883a 	mov	r16,r10
  809670:	12400017 	ldw	r9,0(r2)
  809674:	10800104 	addi	r2,r2,4
  809678:	d8802215 	stw	r2,136(sp)
  80967c:	483faf0e 	bge	r9,zero,80953c <__alt_data_end+0xff80953c>
  809680:	18c03fcc 	andi	r3,r3,255
  809684:	18c0201c 	xori	r3,r3,128
  809688:	027fffc4 	movi	r9,-1
  80968c:	18ffe004 	addi	r3,r3,-128
  809690:	003b6506 	br	808428 <__alt_data_end+0xff808428>
  809694:	d9c01d85 	stb	r7,118(sp)
  809698:	003ca006 	br	80891c <__alt_data_end+0xff80891c>
  80969c:	d9c01d85 	stb	r7,118(sp)
  8096a0:	003cad06 	br	808958 <__alt_data_end+0xff808958>
  8096a4:	d9c01d85 	stb	r7,118(sp)
  8096a8:	003d7d06 	br	808ca0 <__alt_data_end+0xff808ca0>
  8096ac:	d9c01d85 	stb	r7,118(sp)
  8096b0:	003d5f06 	br	808c30 <__alt_data_end+0xff808c30>
  8096b4:	a080004c 	andi	r2,r20,1
  8096b8:	0039883a 	mov	fp,zero
  8096bc:	10000526 	beq	r2,zero,8096d4 <___vfiprintf_internal_r+0x1428>
  8096c0:	00800c04 	movi	r2,48
  8096c4:	d88019c5 	stb	r2,103(sp)
  8096c8:	dcc02717 	ldw	r19,156(sp)
  8096cc:	dd4019c4 	addi	r21,sp,103
  8096d0:	003bf606 	br	8086ac <__alt_data_end+0xff8086ac>
  8096d4:	0027883a 	mov	r19,zero
  8096d8:	dd401a04 	addi	r21,sp,104
  8096dc:	003bf306 	br	8086ac <__alt_data_end+0xff8086ac>
  8096e0:	d9c01d85 	stb	r7,118(sp)
  8096e4:	003dc806 	br	808e08 <__alt_data_end+0xff808e08>
  8096e8:	d9c01d85 	stb	r7,118(sp)
  8096ec:	003d3a06 	br	808bd8 <__alt_data_end+0xff808bd8>
  8096f0:	d9c01d85 	stb	r7,118(sp)
  8096f4:	003d2a06 	br	808ba0 <__alt_data_end+0xff808ba0>
  8096f8:	d9c01d85 	stb	r7,118(sp)
  8096fc:	003cde06 	br	808a78 <__alt_data_end+0xff808a78>
  809700:	d9c01d85 	stb	r7,118(sp)
  809704:	003cbc06 	br	8089f8 <__alt_data_end+0xff8089f8>

00809708 <__vfiprintf_internal>:
  809708:	00802074 	movhi	r2,129
  80970c:	1086af04 	addi	r2,r2,6844
  809710:	300f883a 	mov	r7,r6
  809714:	280d883a 	mov	r6,r5
  809718:	200b883a 	mov	r5,r4
  80971c:	11000017 	ldw	r4,0(r2)
  809720:	08082ac1 	jmpi	8082ac <___vfiprintf_internal_r>

00809724 <__sbprintf>:
  809724:	2880030b 	ldhu	r2,12(r5)
  809728:	2ac01917 	ldw	r11,100(r5)
  80972c:	2a80038b 	ldhu	r10,14(r5)
  809730:	2a400717 	ldw	r9,28(r5)
  809734:	2a000917 	ldw	r8,36(r5)
  809738:	defee204 	addi	sp,sp,-1144
  80973c:	00c10004 	movi	r3,1024
  809740:	dc011a15 	stw	r16,1128(sp)
  809744:	10bfff4c 	andi	r2,r2,65533
  809748:	2821883a 	mov	r16,r5
  80974c:	d8cb883a 	add	r5,sp,r3
  809750:	dc811c15 	stw	r18,1136(sp)
  809754:	dc411b15 	stw	r17,1132(sp)
  809758:	dfc11d15 	stw	ra,1140(sp)
  80975c:	2025883a 	mov	r18,r4
  809760:	d881030d 	sth	r2,1036(sp)
  809764:	dac11915 	stw	r11,1124(sp)
  809768:	da81038d 	sth	r10,1038(sp)
  80976c:	da410715 	stw	r9,1052(sp)
  809770:	da010915 	stw	r8,1060(sp)
  809774:	dec10015 	stw	sp,1024(sp)
  809778:	dec10415 	stw	sp,1040(sp)
  80977c:	d8c10215 	stw	r3,1032(sp)
  809780:	d8c10515 	stw	r3,1044(sp)
  809784:	d8010615 	stw	zero,1048(sp)
  809788:	08082ac0 	call	8082ac <___vfiprintf_internal_r>
  80978c:	1023883a 	mov	r17,r2
  809790:	10000416 	blt	r2,zero,8097a4 <__sbprintf+0x80>
  809794:	d9410004 	addi	r5,sp,1024
  809798:	9009883a 	mov	r4,r18
  80979c:	0804b600 	call	804b60 <_fflush_r>
  8097a0:	10000d1e 	bne	r2,zero,8097d8 <__sbprintf+0xb4>
  8097a4:	d881030b 	ldhu	r2,1036(sp)
  8097a8:	1080100c 	andi	r2,r2,64
  8097ac:	10000326 	beq	r2,zero,8097bc <__sbprintf+0x98>
  8097b0:	8080030b 	ldhu	r2,12(r16)
  8097b4:	10801014 	ori	r2,r2,64
  8097b8:	8080030d 	sth	r2,12(r16)
  8097bc:	8805883a 	mov	r2,r17
  8097c0:	dfc11d17 	ldw	ra,1140(sp)
  8097c4:	dc811c17 	ldw	r18,1136(sp)
  8097c8:	dc411b17 	ldw	r17,1132(sp)
  8097cc:	dc011a17 	ldw	r16,1128(sp)
  8097d0:	dec11e04 	addi	sp,sp,1144
  8097d4:	f800283a 	ret
  8097d8:	047fffc4 	movi	r17,-1
  8097dc:	003ff106 	br	8097a4 <__alt_data_end+0xff8097a4>

008097e0 <_write_r>:
  8097e0:	defffd04 	addi	sp,sp,-12
  8097e4:	2805883a 	mov	r2,r5
  8097e8:	dc000015 	stw	r16,0(sp)
  8097ec:	04002074 	movhi	r16,129
  8097f0:	dc400115 	stw	r17,4(sp)
  8097f4:	300b883a 	mov	r5,r6
  8097f8:	840d7f04 	addi	r16,r16,13820
  8097fc:	2023883a 	mov	r17,r4
  809800:	380d883a 	mov	r6,r7
  809804:	1009883a 	mov	r4,r2
  809808:	dfc00215 	stw	ra,8(sp)
  80980c:	80000015 	stw	zero,0(r16)
  809810:	080dcb80 	call	80dcb8 <write>
  809814:	00ffffc4 	movi	r3,-1
  809818:	10c00526 	beq	r2,r3,809830 <_write_r+0x50>
  80981c:	dfc00217 	ldw	ra,8(sp)
  809820:	dc400117 	ldw	r17,4(sp)
  809824:	dc000017 	ldw	r16,0(sp)
  809828:	dec00304 	addi	sp,sp,12
  80982c:	f800283a 	ret
  809830:	80c00017 	ldw	r3,0(r16)
  809834:	183ff926 	beq	r3,zero,80981c <__alt_data_end+0xff80981c>
  809838:	88c00015 	stw	r3,0(r17)
  80983c:	003ff706 	br	80981c <__alt_data_end+0xff80981c>

00809840 <_close_r>:
  809840:	defffd04 	addi	sp,sp,-12
  809844:	dc000015 	stw	r16,0(sp)
  809848:	04002074 	movhi	r16,129
  80984c:	dc400115 	stw	r17,4(sp)
  809850:	840d7f04 	addi	r16,r16,13820
  809854:	2023883a 	mov	r17,r4
  809858:	2809883a 	mov	r4,r5
  80985c:	dfc00215 	stw	ra,8(sp)
  809860:	80000015 	stw	zero,0(r16)
  809864:	080d3b80 	call	80d3b8 <close>
  809868:	00ffffc4 	movi	r3,-1
  80986c:	10c00526 	beq	r2,r3,809884 <_close_r+0x44>
  809870:	dfc00217 	ldw	ra,8(sp)
  809874:	dc400117 	ldw	r17,4(sp)
  809878:	dc000017 	ldw	r16,0(sp)
  80987c:	dec00304 	addi	sp,sp,12
  809880:	f800283a 	ret
  809884:	80c00017 	ldw	r3,0(r16)
  809888:	183ff926 	beq	r3,zero,809870 <__alt_data_end+0xff809870>
  80988c:	88c00015 	stw	r3,0(r17)
  809890:	003ff706 	br	809870 <__alt_data_end+0xff809870>

00809894 <_calloc_r>:
  809894:	298b383a 	mul	r5,r5,r6
  809898:	defffe04 	addi	sp,sp,-8
  80989c:	dfc00115 	stw	ra,4(sp)
  8098a0:	dc000015 	stw	r16,0(sp)
  8098a4:	0805c9c0 	call	805c9c <_malloc_r>
  8098a8:	10002926 	beq	r2,zero,809950 <_calloc_r+0xbc>
  8098ac:	11bfff17 	ldw	r6,-4(r2)
  8098b0:	1021883a 	mov	r16,r2
  8098b4:	00bfff04 	movi	r2,-4
  8098b8:	308c703a 	and	r6,r6,r2
  8098bc:	00c00904 	movi	r3,36
  8098c0:	308d883a 	add	r6,r6,r2
  8098c4:	19801636 	bltu	r3,r6,809920 <_calloc_r+0x8c>
  8098c8:	008004c4 	movi	r2,19
  8098cc:	11800b2e 	bgeu	r2,r6,8098fc <_calloc_r+0x68>
  8098d0:	80000015 	stw	zero,0(r16)
  8098d4:	80000115 	stw	zero,4(r16)
  8098d8:	008006c4 	movi	r2,27
  8098dc:	11801a2e 	bgeu	r2,r6,809948 <_calloc_r+0xb4>
  8098e0:	80000215 	stw	zero,8(r16)
  8098e4:	80000315 	stw	zero,12(r16)
  8098e8:	30c0151e 	bne	r6,r3,809940 <_calloc_r+0xac>
  8098ec:	80000415 	stw	zero,16(r16)
  8098f0:	80800604 	addi	r2,r16,24
  8098f4:	80000515 	stw	zero,20(r16)
  8098f8:	00000106 	br	809900 <_calloc_r+0x6c>
  8098fc:	8005883a 	mov	r2,r16
  809900:	10000015 	stw	zero,0(r2)
  809904:	10000115 	stw	zero,4(r2)
  809908:	10000215 	stw	zero,8(r2)
  80990c:	8005883a 	mov	r2,r16
  809910:	dfc00117 	ldw	ra,4(sp)
  809914:	dc000017 	ldw	r16,0(sp)
  809918:	dec00204 	addi	sp,sp,8
  80991c:	f800283a 	ret
  809920:	000b883a 	mov	r5,zero
  809924:	8009883a 	mov	r4,r16
  809928:	08068300 	call	806830 <memset>
  80992c:	8005883a 	mov	r2,r16
  809930:	dfc00117 	ldw	ra,4(sp)
  809934:	dc000017 	ldw	r16,0(sp)
  809938:	dec00204 	addi	sp,sp,8
  80993c:	f800283a 	ret
  809940:	80800404 	addi	r2,r16,16
  809944:	003fee06 	br	809900 <__alt_data_end+0xff809900>
  809948:	80800204 	addi	r2,r16,8
  80994c:	003fec06 	br	809900 <__alt_data_end+0xff809900>
  809950:	0005883a 	mov	r2,zero
  809954:	003fee06 	br	809910 <__alt_data_end+0xff809910>

00809958 <_fclose_r>:
  809958:	28003926 	beq	r5,zero,809a40 <_fclose_r+0xe8>
  80995c:	defffc04 	addi	sp,sp,-16
  809960:	dc400115 	stw	r17,4(sp)
  809964:	dc000015 	stw	r16,0(sp)
  809968:	dfc00315 	stw	ra,12(sp)
  80996c:	dc800215 	stw	r18,8(sp)
  809970:	2023883a 	mov	r17,r4
  809974:	2821883a 	mov	r16,r5
  809978:	20000226 	beq	r4,zero,809984 <_fclose_r+0x2c>
  80997c:	20800e17 	ldw	r2,56(r4)
  809980:	10002726 	beq	r2,zero,809a20 <_fclose_r+0xc8>
  809984:	8080030f 	ldh	r2,12(r16)
  809988:	1000071e 	bne	r2,zero,8099a8 <_fclose_r+0x50>
  80998c:	0005883a 	mov	r2,zero
  809990:	dfc00317 	ldw	ra,12(sp)
  809994:	dc800217 	ldw	r18,8(sp)
  809998:	dc400117 	ldw	r17,4(sp)
  80999c:	dc000017 	ldw	r16,0(sp)
  8099a0:	dec00404 	addi	sp,sp,16
  8099a4:	f800283a 	ret
  8099a8:	800b883a 	mov	r5,r16
  8099ac:	8809883a 	mov	r4,r17
  8099b0:	08049440 	call	804944 <__sflush_r>
  8099b4:	1025883a 	mov	r18,r2
  8099b8:	80800b17 	ldw	r2,44(r16)
  8099bc:	10000426 	beq	r2,zero,8099d0 <_fclose_r+0x78>
  8099c0:	81400717 	ldw	r5,28(r16)
  8099c4:	8809883a 	mov	r4,r17
  8099c8:	103ee83a 	callr	r2
  8099cc:	10001616 	blt	r2,zero,809a28 <_fclose_r+0xd0>
  8099d0:	8080030b 	ldhu	r2,12(r16)
  8099d4:	1080200c 	andi	r2,r2,128
  8099d8:	1000151e 	bne	r2,zero,809a30 <_fclose_r+0xd8>
  8099dc:	81400c17 	ldw	r5,48(r16)
  8099e0:	28000526 	beq	r5,zero,8099f8 <_fclose_r+0xa0>
  8099e4:	80801004 	addi	r2,r16,64
  8099e8:	28800226 	beq	r5,r2,8099f4 <_fclose_r+0x9c>
  8099ec:	8809883a 	mov	r4,r17
  8099f0:	08050b00 	call	8050b0 <_free_r>
  8099f4:	80000c15 	stw	zero,48(r16)
  8099f8:	81401117 	ldw	r5,68(r16)
  8099fc:	28000326 	beq	r5,zero,809a0c <_fclose_r+0xb4>
  809a00:	8809883a 	mov	r4,r17
  809a04:	08050b00 	call	8050b0 <_free_r>
  809a08:	80001115 	stw	zero,68(r16)
  809a0c:	0804f4c0 	call	804f4c <__sfp_lock_acquire>
  809a10:	8000030d 	sth	zero,12(r16)
  809a14:	0804f500 	call	804f50 <__sfp_lock_release>
  809a18:	9005883a 	mov	r2,r18
  809a1c:	003fdc06 	br	809990 <__alt_data_end+0xff809990>
  809a20:	0804f3c0 	call	804f3c <__sinit>
  809a24:	003fd706 	br	809984 <__alt_data_end+0xff809984>
  809a28:	04bfffc4 	movi	r18,-1
  809a2c:	003fe806 	br	8099d0 <__alt_data_end+0xff8099d0>
  809a30:	81400417 	ldw	r5,16(r16)
  809a34:	8809883a 	mov	r4,r17
  809a38:	08050b00 	call	8050b0 <_free_r>
  809a3c:	003fe706 	br	8099dc <__alt_data_end+0xff8099dc>
  809a40:	0005883a 	mov	r2,zero
  809a44:	f800283a 	ret

00809a48 <fclose>:
  809a48:	00802074 	movhi	r2,129
  809a4c:	1086af04 	addi	r2,r2,6844
  809a50:	200b883a 	mov	r5,r4
  809a54:	11000017 	ldw	r4,0(r2)
  809a58:	08099581 	jmpi	809958 <_fclose_r>

00809a5c <__fputwc>:
  809a5c:	defff804 	addi	sp,sp,-32
  809a60:	dcc00415 	stw	r19,16(sp)
  809a64:	dc800315 	stw	r18,12(sp)
  809a68:	dc000115 	stw	r16,4(sp)
  809a6c:	dfc00715 	stw	ra,28(sp)
  809a70:	dd400615 	stw	r21,24(sp)
  809a74:	dd000515 	stw	r20,20(sp)
  809a78:	dc400215 	stw	r17,8(sp)
  809a7c:	2027883a 	mov	r19,r4
  809a80:	2825883a 	mov	r18,r5
  809a84:	3021883a 	mov	r16,r6
  809a88:	0805a8c0 	call	805a8c <__locale_mb_cur_max>
  809a8c:	00c00044 	movi	r3,1
  809a90:	10c03e26 	beq	r2,r3,809b8c <__fputwc+0x130>
  809a94:	81c01704 	addi	r7,r16,92
  809a98:	900d883a 	mov	r6,r18
  809a9c:	d80b883a 	mov	r5,sp
  809aa0:	9809883a 	mov	r4,r19
  809aa4:	0809f2c0 	call	809f2c <_wcrtomb_r>
  809aa8:	1029883a 	mov	r20,r2
  809aac:	00bfffc4 	movi	r2,-1
  809ab0:	a0802026 	beq	r20,r2,809b34 <__fputwc+0xd8>
  809ab4:	d9400003 	ldbu	r5,0(sp)
  809ab8:	a0001c26 	beq	r20,zero,809b2c <__fputwc+0xd0>
  809abc:	0023883a 	mov	r17,zero
  809ac0:	05400284 	movi	r21,10
  809ac4:	00000906 	br	809aec <__fputwc+0x90>
  809ac8:	80800017 	ldw	r2,0(r16)
  809acc:	11400005 	stb	r5,0(r2)
  809ad0:	80c00017 	ldw	r3,0(r16)
  809ad4:	18c00044 	addi	r3,r3,1
  809ad8:	80c00015 	stw	r3,0(r16)
  809adc:	8c400044 	addi	r17,r17,1
  809ae0:	dc45883a 	add	r2,sp,r17
  809ae4:	8d00112e 	bgeu	r17,r20,809b2c <__fputwc+0xd0>
  809ae8:	11400003 	ldbu	r5,0(r2)
  809aec:	80c00217 	ldw	r3,8(r16)
  809af0:	18ffffc4 	addi	r3,r3,-1
  809af4:	80c00215 	stw	r3,8(r16)
  809af8:	183ff30e 	bge	r3,zero,809ac8 <__alt_data_end+0xff809ac8>
  809afc:	80800617 	ldw	r2,24(r16)
  809b00:	18801916 	blt	r3,r2,809b68 <__fputwc+0x10c>
  809b04:	80800017 	ldw	r2,0(r16)
  809b08:	11400005 	stb	r5,0(r2)
  809b0c:	80800017 	ldw	r2,0(r16)
  809b10:	10c00003 	ldbu	r3,0(r2)
  809b14:	10800044 	addi	r2,r2,1
  809b18:	1d402326 	beq	r3,r21,809ba8 <__fputwc+0x14c>
  809b1c:	80800015 	stw	r2,0(r16)
  809b20:	8c400044 	addi	r17,r17,1
  809b24:	dc45883a 	add	r2,sp,r17
  809b28:	8d3fef36 	bltu	r17,r20,809ae8 <__alt_data_end+0xff809ae8>
  809b2c:	9005883a 	mov	r2,r18
  809b30:	00000406 	br	809b44 <__fputwc+0xe8>
  809b34:	80c0030b 	ldhu	r3,12(r16)
  809b38:	a005883a 	mov	r2,r20
  809b3c:	18c01014 	ori	r3,r3,64
  809b40:	80c0030d 	sth	r3,12(r16)
  809b44:	dfc00717 	ldw	ra,28(sp)
  809b48:	dd400617 	ldw	r21,24(sp)
  809b4c:	dd000517 	ldw	r20,20(sp)
  809b50:	dcc00417 	ldw	r19,16(sp)
  809b54:	dc800317 	ldw	r18,12(sp)
  809b58:	dc400217 	ldw	r17,8(sp)
  809b5c:	dc000117 	ldw	r16,4(sp)
  809b60:	dec00804 	addi	sp,sp,32
  809b64:	f800283a 	ret
  809b68:	800d883a 	mov	r6,r16
  809b6c:	29403fcc 	andi	r5,r5,255
  809b70:	9809883a 	mov	r4,r19
  809b74:	0809dd40 	call	809dd4 <__swbuf_r>
  809b78:	10bfffe0 	cmpeqi	r2,r2,-1
  809b7c:	10803fcc 	andi	r2,r2,255
  809b80:	103fd626 	beq	r2,zero,809adc <__alt_data_end+0xff809adc>
  809b84:	00bfffc4 	movi	r2,-1
  809b88:	003fee06 	br	809b44 <__alt_data_end+0xff809b44>
  809b8c:	90ffffc4 	addi	r3,r18,-1
  809b90:	01003f84 	movi	r4,254
  809b94:	20ffbf36 	bltu	r4,r3,809a94 <__alt_data_end+0xff809a94>
  809b98:	900b883a 	mov	r5,r18
  809b9c:	dc800005 	stb	r18,0(sp)
  809ba0:	1029883a 	mov	r20,r2
  809ba4:	003fc506 	br	809abc <__alt_data_end+0xff809abc>
  809ba8:	800d883a 	mov	r6,r16
  809bac:	a80b883a 	mov	r5,r21
  809bb0:	9809883a 	mov	r4,r19
  809bb4:	0809dd40 	call	809dd4 <__swbuf_r>
  809bb8:	10bfffe0 	cmpeqi	r2,r2,-1
  809bbc:	003fef06 	br	809b7c <__alt_data_end+0xff809b7c>

00809bc0 <_fputwc_r>:
  809bc0:	3080030b 	ldhu	r2,12(r6)
  809bc4:	10c8000c 	andi	r3,r2,8192
  809bc8:	1800051e 	bne	r3,zero,809be0 <_fputwc_r+0x20>
  809bcc:	30c01917 	ldw	r3,100(r6)
  809bd0:	10880014 	ori	r2,r2,8192
  809bd4:	3080030d 	sth	r2,12(r6)
  809bd8:	18880014 	ori	r2,r3,8192
  809bdc:	30801915 	stw	r2,100(r6)
  809be0:	0809a5c1 	jmpi	809a5c <__fputwc>

00809be4 <fputwc>:
  809be4:	00802074 	movhi	r2,129
  809be8:	defffc04 	addi	sp,sp,-16
  809bec:	1086af04 	addi	r2,r2,6844
  809bf0:	dc000115 	stw	r16,4(sp)
  809bf4:	14000017 	ldw	r16,0(r2)
  809bf8:	dc400215 	stw	r17,8(sp)
  809bfc:	dfc00315 	stw	ra,12(sp)
  809c00:	2023883a 	mov	r17,r4
  809c04:	80000226 	beq	r16,zero,809c10 <fputwc+0x2c>
  809c08:	80800e17 	ldw	r2,56(r16)
  809c0c:	10001026 	beq	r2,zero,809c50 <fputwc+0x6c>
  809c10:	2880030b 	ldhu	r2,12(r5)
  809c14:	10c8000c 	andi	r3,r2,8192
  809c18:	1800051e 	bne	r3,zero,809c30 <fputwc+0x4c>
  809c1c:	28c01917 	ldw	r3,100(r5)
  809c20:	10880014 	ori	r2,r2,8192
  809c24:	2880030d 	sth	r2,12(r5)
  809c28:	18880014 	ori	r2,r3,8192
  809c2c:	28801915 	stw	r2,100(r5)
  809c30:	280d883a 	mov	r6,r5
  809c34:	8009883a 	mov	r4,r16
  809c38:	880b883a 	mov	r5,r17
  809c3c:	dfc00317 	ldw	ra,12(sp)
  809c40:	dc400217 	ldw	r17,8(sp)
  809c44:	dc000117 	ldw	r16,4(sp)
  809c48:	dec00404 	addi	sp,sp,16
  809c4c:	0809a5c1 	jmpi	809a5c <__fputwc>
  809c50:	8009883a 	mov	r4,r16
  809c54:	d9400015 	stw	r5,0(sp)
  809c58:	0804f3c0 	call	804f3c <__sinit>
  809c5c:	d9400017 	ldw	r5,0(sp)
  809c60:	003feb06 	br	809c10 <__alt_data_end+0xff809c10>

00809c64 <_fstat_r>:
  809c64:	defffd04 	addi	sp,sp,-12
  809c68:	2805883a 	mov	r2,r5
  809c6c:	dc000015 	stw	r16,0(sp)
  809c70:	04002074 	movhi	r16,129
  809c74:	dc400115 	stw	r17,4(sp)
  809c78:	840d7f04 	addi	r16,r16,13820
  809c7c:	2023883a 	mov	r17,r4
  809c80:	300b883a 	mov	r5,r6
  809c84:	1009883a 	mov	r4,r2
  809c88:	dfc00215 	stw	ra,8(sp)
  809c8c:	80000015 	stw	zero,0(r16)
  809c90:	080d4f00 	call	80d4f0 <fstat>
  809c94:	00ffffc4 	movi	r3,-1
  809c98:	10c00526 	beq	r2,r3,809cb0 <_fstat_r+0x4c>
  809c9c:	dfc00217 	ldw	ra,8(sp)
  809ca0:	dc400117 	ldw	r17,4(sp)
  809ca4:	dc000017 	ldw	r16,0(sp)
  809ca8:	dec00304 	addi	sp,sp,12
  809cac:	f800283a 	ret
  809cb0:	80c00017 	ldw	r3,0(r16)
  809cb4:	183ff926 	beq	r3,zero,809c9c <__alt_data_end+0xff809c9c>
  809cb8:	88c00015 	stw	r3,0(r17)
  809cbc:	003ff706 	br	809c9c <__alt_data_end+0xff809c9c>

00809cc0 <_isatty_r>:
  809cc0:	defffd04 	addi	sp,sp,-12
  809cc4:	dc000015 	stw	r16,0(sp)
  809cc8:	04002074 	movhi	r16,129
  809ccc:	dc400115 	stw	r17,4(sp)
  809cd0:	840d7f04 	addi	r16,r16,13820
  809cd4:	2023883a 	mov	r17,r4
  809cd8:	2809883a 	mov	r4,r5
  809cdc:	dfc00215 	stw	ra,8(sp)
  809ce0:	80000015 	stw	zero,0(r16)
  809ce4:	080d5dc0 	call	80d5dc <isatty>
  809ce8:	00ffffc4 	movi	r3,-1
  809cec:	10c00526 	beq	r2,r3,809d04 <_isatty_r+0x44>
  809cf0:	dfc00217 	ldw	ra,8(sp)
  809cf4:	dc400117 	ldw	r17,4(sp)
  809cf8:	dc000017 	ldw	r16,0(sp)
  809cfc:	dec00304 	addi	sp,sp,12
  809d00:	f800283a 	ret
  809d04:	80c00017 	ldw	r3,0(r16)
  809d08:	183ff926 	beq	r3,zero,809cf0 <__alt_data_end+0xff809cf0>
  809d0c:	88c00015 	stw	r3,0(r17)
  809d10:	003ff706 	br	809cf0 <__alt_data_end+0xff809cf0>

00809d14 <_lseek_r>:
  809d14:	defffd04 	addi	sp,sp,-12
  809d18:	2805883a 	mov	r2,r5
  809d1c:	dc000015 	stw	r16,0(sp)
  809d20:	04002074 	movhi	r16,129
  809d24:	dc400115 	stw	r17,4(sp)
  809d28:	300b883a 	mov	r5,r6
  809d2c:	840d7f04 	addi	r16,r16,13820
  809d30:	2023883a 	mov	r17,r4
  809d34:	380d883a 	mov	r6,r7
  809d38:	1009883a 	mov	r4,r2
  809d3c:	dfc00215 	stw	ra,8(sp)
  809d40:	80000015 	stw	zero,0(r16)
  809d44:	080d7a80 	call	80d7a8 <lseek>
  809d48:	00ffffc4 	movi	r3,-1
  809d4c:	10c00526 	beq	r2,r3,809d64 <_lseek_r+0x50>
  809d50:	dfc00217 	ldw	ra,8(sp)
  809d54:	dc400117 	ldw	r17,4(sp)
  809d58:	dc000017 	ldw	r16,0(sp)
  809d5c:	dec00304 	addi	sp,sp,12
  809d60:	f800283a 	ret
  809d64:	80c00017 	ldw	r3,0(r16)
  809d68:	183ff926 	beq	r3,zero,809d50 <__alt_data_end+0xff809d50>
  809d6c:	88c00015 	stw	r3,0(r17)
  809d70:	003ff706 	br	809d50 <__alt_data_end+0xff809d50>

00809d74 <_read_r>:
  809d74:	defffd04 	addi	sp,sp,-12
  809d78:	2805883a 	mov	r2,r5
  809d7c:	dc000015 	stw	r16,0(sp)
  809d80:	04002074 	movhi	r16,129
  809d84:	dc400115 	stw	r17,4(sp)
  809d88:	300b883a 	mov	r5,r6
  809d8c:	840d7f04 	addi	r16,r16,13820
  809d90:	2023883a 	mov	r17,r4
  809d94:	380d883a 	mov	r6,r7
  809d98:	1009883a 	mov	r4,r2
  809d9c:	dfc00215 	stw	ra,8(sp)
  809da0:	80000015 	stw	zero,0(r16)
  809da4:	080d9b80 	call	80d9b8 <read>
  809da8:	00ffffc4 	movi	r3,-1
  809dac:	10c00526 	beq	r2,r3,809dc4 <_read_r+0x50>
  809db0:	dfc00217 	ldw	ra,8(sp)
  809db4:	dc400117 	ldw	r17,4(sp)
  809db8:	dc000017 	ldw	r16,0(sp)
  809dbc:	dec00304 	addi	sp,sp,12
  809dc0:	f800283a 	ret
  809dc4:	80c00017 	ldw	r3,0(r16)
  809dc8:	183ff926 	beq	r3,zero,809db0 <__alt_data_end+0xff809db0>
  809dcc:	88c00015 	stw	r3,0(r17)
  809dd0:	003ff706 	br	809db0 <__alt_data_end+0xff809db0>

00809dd4 <__swbuf_r>:
  809dd4:	defffb04 	addi	sp,sp,-20
  809dd8:	dcc00315 	stw	r19,12(sp)
  809ddc:	dc800215 	stw	r18,8(sp)
  809de0:	dc000015 	stw	r16,0(sp)
  809de4:	dfc00415 	stw	ra,16(sp)
  809de8:	dc400115 	stw	r17,4(sp)
  809dec:	2025883a 	mov	r18,r4
  809df0:	2827883a 	mov	r19,r5
  809df4:	3021883a 	mov	r16,r6
  809df8:	20000226 	beq	r4,zero,809e04 <__swbuf_r+0x30>
  809dfc:	20800e17 	ldw	r2,56(r4)
  809e00:	10004226 	beq	r2,zero,809f0c <__swbuf_r+0x138>
  809e04:	80800617 	ldw	r2,24(r16)
  809e08:	8100030b 	ldhu	r4,12(r16)
  809e0c:	80800215 	stw	r2,8(r16)
  809e10:	2080020c 	andi	r2,r4,8
  809e14:	10003626 	beq	r2,zero,809ef0 <__swbuf_r+0x11c>
  809e18:	80c00417 	ldw	r3,16(r16)
  809e1c:	18003426 	beq	r3,zero,809ef0 <__swbuf_r+0x11c>
  809e20:	2088000c 	andi	r2,r4,8192
  809e24:	9c403fcc 	andi	r17,r19,255
  809e28:	10001a26 	beq	r2,zero,809e94 <__swbuf_r+0xc0>
  809e2c:	80800017 	ldw	r2,0(r16)
  809e30:	81000517 	ldw	r4,20(r16)
  809e34:	10c7c83a 	sub	r3,r2,r3
  809e38:	1900200e 	bge	r3,r4,809ebc <__swbuf_r+0xe8>
  809e3c:	18c00044 	addi	r3,r3,1
  809e40:	81000217 	ldw	r4,8(r16)
  809e44:	11400044 	addi	r5,r2,1
  809e48:	81400015 	stw	r5,0(r16)
  809e4c:	213fffc4 	addi	r4,r4,-1
  809e50:	81000215 	stw	r4,8(r16)
  809e54:	14c00005 	stb	r19,0(r2)
  809e58:	80800517 	ldw	r2,20(r16)
  809e5c:	10c01e26 	beq	r2,r3,809ed8 <__swbuf_r+0x104>
  809e60:	8080030b 	ldhu	r2,12(r16)
  809e64:	1080004c 	andi	r2,r2,1
  809e68:	10000226 	beq	r2,zero,809e74 <__swbuf_r+0xa0>
  809e6c:	00800284 	movi	r2,10
  809e70:	88801926 	beq	r17,r2,809ed8 <__swbuf_r+0x104>
  809e74:	8805883a 	mov	r2,r17
  809e78:	dfc00417 	ldw	ra,16(sp)
  809e7c:	dcc00317 	ldw	r19,12(sp)
  809e80:	dc800217 	ldw	r18,8(sp)
  809e84:	dc400117 	ldw	r17,4(sp)
  809e88:	dc000017 	ldw	r16,0(sp)
  809e8c:	dec00504 	addi	sp,sp,20
  809e90:	f800283a 	ret
  809e94:	81401917 	ldw	r5,100(r16)
  809e98:	00b7ffc4 	movi	r2,-8193
  809e9c:	21080014 	ori	r4,r4,8192
  809ea0:	2884703a 	and	r2,r5,r2
  809ea4:	80801915 	stw	r2,100(r16)
  809ea8:	80800017 	ldw	r2,0(r16)
  809eac:	8100030d 	sth	r4,12(r16)
  809eb0:	81000517 	ldw	r4,20(r16)
  809eb4:	10c7c83a 	sub	r3,r2,r3
  809eb8:	193fe016 	blt	r3,r4,809e3c <__alt_data_end+0xff809e3c>
  809ebc:	800b883a 	mov	r5,r16
  809ec0:	9009883a 	mov	r4,r18
  809ec4:	0804b600 	call	804b60 <_fflush_r>
  809ec8:	1000071e 	bne	r2,zero,809ee8 <__swbuf_r+0x114>
  809ecc:	80800017 	ldw	r2,0(r16)
  809ed0:	00c00044 	movi	r3,1
  809ed4:	003fda06 	br	809e40 <__alt_data_end+0xff809e40>
  809ed8:	800b883a 	mov	r5,r16
  809edc:	9009883a 	mov	r4,r18
  809ee0:	0804b600 	call	804b60 <_fflush_r>
  809ee4:	103fe326 	beq	r2,zero,809e74 <__alt_data_end+0xff809e74>
  809ee8:	00bfffc4 	movi	r2,-1
  809eec:	003fe206 	br	809e78 <__alt_data_end+0xff809e78>
  809ef0:	800b883a 	mov	r5,r16
  809ef4:	9009883a 	mov	r4,r18
  809ef8:	0802f680 	call	802f68 <__swsetup_r>
  809efc:	103ffa1e 	bne	r2,zero,809ee8 <__alt_data_end+0xff809ee8>
  809f00:	8100030b 	ldhu	r4,12(r16)
  809f04:	80c00417 	ldw	r3,16(r16)
  809f08:	003fc506 	br	809e20 <__alt_data_end+0xff809e20>
  809f0c:	0804f3c0 	call	804f3c <__sinit>
  809f10:	003fbc06 	br	809e04 <__alt_data_end+0xff809e04>

00809f14 <__swbuf>:
  809f14:	00802074 	movhi	r2,129
  809f18:	1086af04 	addi	r2,r2,6844
  809f1c:	280d883a 	mov	r6,r5
  809f20:	200b883a 	mov	r5,r4
  809f24:	11000017 	ldw	r4,0(r2)
  809f28:	0809dd41 	jmpi	809dd4 <__swbuf_r>

00809f2c <_wcrtomb_r>:
  809f2c:	defff604 	addi	sp,sp,-40
  809f30:	00802074 	movhi	r2,129
  809f34:	dc800815 	stw	r18,32(sp)
  809f38:	dc400715 	stw	r17,28(sp)
  809f3c:	dc000615 	stw	r16,24(sp)
  809f40:	1086b304 	addi	r2,r2,6860
  809f44:	dfc00915 	stw	ra,36(sp)
  809f48:	2021883a 	mov	r16,r4
  809f4c:	3823883a 	mov	r17,r7
  809f50:	14800017 	ldw	r18,0(r2)
  809f54:	28001426 	beq	r5,zero,809fa8 <_wcrtomb_r+0x7c>
  809f58:	d9400415 	stw	r5,16(sp)
  809f5c:	d9800515 	stw	r6,20(sp)
  809f60:	0805a800 	call	805a80 <__locale_charset>
  809f64:	d9800517 	ldw	r6,20(sp)
  809f68:	d9400417 	ldw	r5,16(sp)
  809f6c:	100f883a 	mov	r7,r2
  809f70:	dc400015 	stw	r17,0(sp)
  809f74:	8009883a 	mov	r4,r16
  809f78:	903ee83a 	callr	r18
  809f7c:	00ffffc4 	movi	r3,-1
  809f80:	10c0031e 	bne	r2,r3,809f90 <_wcrtomb_r+0x64>
  809f84:	88000015 	stw	zero,0(r17)
  809f88:	00c02284 	movi	r3,138
  809f8c:	80c00015 	stw	r3,0(r16)
  809f90:	dfc00917 	ldw	ra,36(sp)
  809f94:	dc800817 	ldw	r18,32(sp)
  809f98:	dc400717 	ldw	r17,28(sp)
  809f9c:	dc000617 	ldw	r16,24(sp)
  809fa0:	dec00a04 	addi	sp,sp,40
  809fa4:	f800283a 	ret
  809fa8:	0805a800 	call	805a80 <__locale_charset>
  809fac:	100f883a 	mov	r7,r2
  809fb0:	dc400015 	stw	r17,0(sp)
  809fb4:	000d883a 	mov	r6,zero
  809fb8:	d9400104 	addi	r5,sp,4
  809fbc:	8009883a 	mov	r4,r16
  809fc0:	903ee83a 	callr	r18
  809fc4:	003fed06 	br	809f7c <__alt_data_end+0xff809f7c>

00809fc8 <wcrtomb>:
  809fc8:	defff604 	addi	sp,sp,-40
  809fcc:	00802074 	movhi	r2,129
  809fd0:	dc800615 	stw	r18,24(sp)
  809fd4:	dc400515 	stw	r17,20(sp)
  809fd8:	1086af04 	addi	r2,r2,6844
  809fdc:	dfc00915 	stw	ra,36(sp)
  809fe0:	dd000815 	stw	r20,32(sp)
  809fe4:	dcc00715 	stw	r19,28(sp)
  809fe8:	dc000415 	stw	r16,16(sp)
  809fec:	3025883a 	mov	r18,r6
  809ff0:	14400017 	ldw	r17,0(r2)
  809ff4:	20001926 	beq	r4,zero,80a05c <wcrtomb+0x94>
  809ff8:	00802074 	movhi	r2,129
  809ffc:	1086b304 	addi	r2,r2,6860
  80a000:	15000017 	ldw	r20,0(r2)
  80a004:	2021883a 	mov	r16,r4
  80a008:	2827883a 	mov	r19,r5
  80a00c:	0805a800 	call	805a80 <__locale_charset>
  80a010:	100f883a 	mov	r7,r2
  80a014:	dc800015 	stw	r18,0(sp)
  80a018:	980d883a 	mov	r6,r19
  80a01c:	800b883a 	mov	r5,r16
  80a020:	8809883a 	mov	r4,r17
  80a024:	a03ee83a 	callr	r20
  80a028:	00ffffc4 	movi	r3,-1
  80a02c:	10c0031e 	bne	r2,r3,80a03c <wcrtomb+0x74>
  80a030:	90000015 	stw	zero,0(r18)
  80a034:	00c02284 	movi	r3,138
  80a038:	88c00015 	stw	r3,0(r17)
  80a03c:	dfc00917 	ldw	ra,36(sp)
  80a040:	dd000817 	ldw	r20,32(sp)
  80a044:	dcc00717 	ldw	r19,28(sp)
  80a048:	dc800617 	ldw	r18,24(sp)
  80a04c:	dc400517 	ldw	r17,20(sp)
  80a050:	dc000417 	ldw	r16,16(sp)
  80a054:	dec00a04 	addi	sp,sp,40
  80a058:	f800283a 	ret
  80a05c:	00802074 	movhi	r2,129
  80a060:	1086b304 	addi	r2,r2,6860
  80a064:	14000017 	ldw	r16,0(r2)
  80a068:	0805a800 	call	805a80 <__locale_charset>
  80a06c:	100f883a 	mov	r7,r2
  80a070:	dc800015 	stw	r18,0(sp)
  80a074:	000d883a 	mov	r6,zero
  80a078:	d9400104 	addi	r5,sp,4
  80a07c:	8809883a 	mov	r4,r17
  80a080:	803ee83a 	callr	r16
  80a084:	003fe806 	br	80a028 <__alt_data_end+0xff80a028>

0080a088 <__ascii_wctomb>:
  80a088:	28000526 	beq	r5,zero,80a0a0 <__ascii_wctomb+0x18>
  80a08c:	00803fc4 	movi	r2,255
  80a090:	11800536 	bltu	r2,r6,80a0a8 <__ascii_wctomb+0x20>
  80a094:	29800005 	stb	r6,0(r5)
  80a098:	00800044 	movi	r2,1
  80a09c:	f800283a 	ret
  80a0a0:	0005883a 	mov	r2,zero
  80a0a4:	f800283a 	ret
  80a0a8:	00802284 	movi	r2,138
  80a0ac:	20800015 	stw	r2,0(r4)
  80a0b0:	00bfffc4 	movi	r2,-1
  80a0b4:	f800283a 	ret

0080a0b8 <_wctomb_r>:
  80a0b8:	00802074 	movhi	r2,129
  80a0bc:	defff904 	addi	sp,sp,-28
  80a0c0:	1086b304 	addi	r2,r2,6860
  80a0c4:	dfc00615 	stw	ra,24(sp)
  80a0c8:	dc400515 	stw	r17,20(sp)
  80a0cc:	dc000415 	stw	r16,16(sp)
  80a0d0:	3823883a 	mov	r17,r7
  80a0d4:	14000017 	ldw	r16,0(r2)
  80a0d8:	d9000115 	stw	r4,4(sp)
  80a0dc:	d9400215 	stw	r5,8(sp)
  80a0e0:	d9800315 	stw	r6,12(sp)
  80a0e4:	0805a800 	call	805a80 <__locale_charset>
  80a0e8:	d9800317 	ldw	r6,12(sp)
  80a0ec:	d9400217 	ldw	r5,8(sp)
  80a0f0:	d9000117 	ldw	r4,4(sp)
  80a0f4:	100f883a 	mov	r7,r2
  80a0f8:	dc400015 	stw	r17,0(sp)
  80a0fc:	803ee83a 	callr	r16
  80a100:	dfc00617 	ldw	ra,24(sp)
  80a104:	dc400517 	ldw	r17,20(sp)
  80a108:	dc000417 	ldw	r16,16(sp)
  80a10c:	dec00704 	addi	sp,sp,28
  80a110:	f800283a 	ret

0080a114 <__udivdi3>:
  80a114:	defff504 	addi	sp,sp,-44
  80a118:	dcc00415 	stw	r19,16(sp)
  80a11c:	dc000115 	stw	r16,4(sp)
  80a120:	dfc00a15 	stw	ra,40(sp)
  80a124:	df000915 	stw	fp,36(sp)
  80a128:	ddc00815 	stw	r23,32(sp)
  80a12c:	dd800715 	stw	r22,28(sp)
  80a130:	dd400615 	stw	r21,24(sp)
  80a134:	dd000515 	stw	r20,20(sp)
  80a138:	dc800315 	stw	r18,12(sp)
  80a13c:	dc400215 	stw	r17,8(sp)
  80a140:	2027883a 	mov	r19,r4
  80a144:	2821883a 	mov	r16,r5
  80a148:	3800411e 	bne	r7,zero,80a250 <__udivdi3+0x13c>
  80a14c:	3023883a 	mov	r17,r6
  80a150:	2025883a 	mov	r18,r4
  80a154:	2980522e 	bgeu	r5,r6,80a2a0 <__udivdi3+0x18c>
  80a158:	00bfffd4 	movui	r2,65535
  80a15c:	282d883a 	mov	r22,r5
  80a160:	1180a836 	bltu	r2,r6,80a404 <__udivdi3+0x2f0>
  80a164:	00803fc4 	movi	r2,255
  80a168:	1185803a 	cmpltu	r2,r2,r6
  80a16c:	100490fa 	slli	r2,r2,3
  80a170:	3086d83a 	srl	r3,r6,r2
  80a174:	01002074 	movhi	r4,129
  80a178:	213f44c4 	addi	r4,r4,-749
  80a17c:	20c7883a 	add	r3,r4,r3
  80a180:	18c00003 	ldbu	r3,0(r3)
  80a184:	1885883a 	add	r2,r3,r2
  80a188:	00c00804 	movi	r3,32
  80a18c:	1887c83a 	sub	r3,r3,r2
  80a190:	18000526 	beq	r3,zero,80a1a8 <__udivdi3+0x94>
  80a194:	80e0983a 	sll	r16,r16,r3
  80a198:	9884d83a 	srl	r2,r19,r2
  80a19c:	30e2983a 	sll	r17,r6,r3
  80a1a0:	98e4983a 	sll	r18,r19,r3
  80a1a4:	142cb03a 	or	r22,r2,r16
  80a1a8:	882ad43a 	srli	r21,r17,16
  80a1ac:	b009883a 	mov	r4,r22
  80a1b0:	8d3fffcc 	andi	r20,r17,65535
  80a1b4:	a80b883a 	mov	r5,r21
  80a1b8:	080ad200 	call	80ad20 <__umodsi3>
  80a1bc:	b009883a 	mov	r4,r22
  80a1c0:	a80b883a 	mov	r5,r21
  80a1c4:	1027883a 	mov	r19,r2
  80a1c8:	080acbc0 	call	80acbc <__udivsi3>
  80a1cc:	102d883a 	mov	r22,r2
  80a1d0:	9826943a 	slli	r19,r19,16
  80a1d4:	9004d43a 	srli	r2,r18,16
  80a1d8:	a5a1383a 	mul	r16,r20,r22
  80a1dc:	14c4b03a 	or	r2,r2,r19
  80a1e0:	1400052e 	bgeu	r2,r16,80a1f8 <__udivdi3+0xe4>
  80a1e4:	1445883a 	add	r2,r2,r17
  80a1e8:	b0ffffc4 	addi	r3,r22,-1
  80a1ec:	14400136 	bltu	r2,r17,80a1f4 <__udivdi3+0xe0>
  80a1f0:	14012336 	bltu	r2,r16,80a680 <__udivdi3+0x56c>
  80a1f4:	182d883a 	mov	r22,r3
  80a1f8:	1421c83a 	sub	r16,r2,r16
  80a1fc:	a80b883a 	mov	r5,r21
  80a200:	8009883a 	mov	r4,r16
  80a204:	080ad200 	call	80ad20 <__umodsi3>
  80a208:	1027883a 	mov	r19,r2
  80a20c:	a80b883a 	mov	r5,r21
  80a210:	8009883a 	mov	r4,r16
  80a214:	080acbc0 	call	80acbc <__udivsi3>
  80a218:	9826943a 	slli	r19,r19,16
  80a21c:	a0a9383a 	mul	r20,r20,r2
  80a220:	94bfffcc 	andi	r18,r18,65535
  80a224:	94e4b03a 	or	r18,r18,r19
  80a228:	9500052e 	bgeu	r18,r20,80a240 <__udivdi3+0x12c>
  80a22c:	8ca5883a 	add	r18,r17,r18
  80a230:	10ffffc4 	addi	r3,r2,-1
  80a234:	9440f136 	bltu	r18,r17,80a5fc <__udivdi3+0x4e8>
  80a238:	9500f02e 	bgeu	r18,r20,80a5fc <__udivdi3+0x4e8>
  80a23c:	10bfff84 	addi	r2,r2,-2
  80a240:	b00c943a 	slli	r6,r22,16
  80a244:	0007883a 	mov	r3,zero
  80a248:	3084b03a 	or	r2,r6,r2
  80a24c:	00005906 	br	80a3b4 <__udivdi3+0x2a0>
  80a250:	29c05636 	bltu	r5,r7,80a3ac <__udivdi3+0x298>
  80a254:	00bfffd4 	movui	r2,65535
  80a258:	11c0622e 	bgeu	r2,r7,80a3e4 <__udivdi3+0x2d0>
  80a25c:	00804034 	movhi	r2,256
  80a260:	10bfffc4 	addi	r2,r2,-1
  80a264:	11c0ee36 	bltu	r2,r7,80a620 <__udivdi3+0x50c>
  80a268:	00800404 	movi	r2,16
  80a26c:	3886d83a 	srl	r3,r7,r2
  80a270:	01002074 	movhi	r4,129
  80a274:	213f44c4 	addi	r4,r4,-749
  80a278:	20c7883a 	add	r3,r4,r3
  80a27c:	18c00003 	ldbu	r3,0(r3)
  80a280:	05400804 	movi	r21,32
  80a284:	1885883a 	add	r2,r3,r2
  80a288:	a8abc83a 	sub	r21,r21,r2
  80a28c:	a800621e 	bne	r21,zero,80a418 <__udivdi3+0x304>
  80a290:	3c00e936 	bltu	r7,r16,80a638 <__udivdi3+0x524>
  80a294:	9985403a 	cmpgeu	r2,r19,r6
  80a298:	0007883a 	mov	r3,zero
  80a29c:	00004506 	br	80a3b4 <__udivdi3+0x2a0>
  80a2a0:	3000041e 	bne	r6,zero,80a2b4 <__udivdi3+0x1a0>
  80a2a4:	000b883a 	mov	r5,zero
  80a2a8:	01000044 	movi	r4,1
  80a2ac:	080acbc0 	call	80acbc <__udivsi3>
  80a2b0:	1023883a 	mov	r17,r2
  80a2b4:	00bfffd4 	movui	r2,65535
  80a2b8:	14404e2e 	bgeu	r2,r17,80a3f4 <__udivdi3+0x2e0>
  80a2bc:	00804034 	movhi	r2,256
  80a2c0:	10bfffc4 	addi	r2,r2,-1
  80a2c4:	1440d836 	bltu	r2,r17,80a628 <__udivdi3+0x514>
  80a2c8:	00800404 	movi	r2,16
  80a2cc:	8886d83a 	srl	r3,r17,r2
  80a2d0:	01002074 	movhi	r4,129
  80a2d4:	213f44c4 	addi	r4,r4,-749
  80a2d8:	20c7883a 	add	r3,r4,r3
  80a2dc:	18c00003 	ldbu	r3,0(r3)
  80a2e0:	1885883a 	add	r2,r3,r2
  80a2e4:	00c00804 	movi	r3,32
  80a2e8:	1887c83a 	sub	r3,r3,r2
  80a2ec:	18008f1e 	bne	r3,zero,80a52c <__udivdi3+0x418>
  80a2f0:	882ad43a 	srli	r21,r17,16
  80a2f4:	8461c83a 	sub	r16,r16,r17
  80a2f8:	8d3fffcc 	andi	r20,r17,65535
  80a2fc:	00c00044 	movi	r3,1
  80a300:	8009883a 	mov	r4,r16
  80a304:	a80b883a 	mov	r5,r21
  80a308:	d8c00015 	stw	r3,0(sp)
  80a30c:	080ad200 	call	80ad20 <__umodsi3>
  80a310:	8009883a 	mov	r4,r16
  80a314:	a80b883a 	mov	r5,r21
  80a318:	1027883a 	mov	r19,r2
  80a31c:	080acbc0 	call	80acbc <__udivsi3>
  80a320:	9826943a 	slli	r19,r19,16
  80a324:	9008d43a 	srli	r4,r18,16
  80a328:	1521383a 	mul	r16,r2,r20
  80a32c:	102d883a 	mov	r22,r2
  80a330:	24c8b03a 	or	r4,r4,r19
  80a334:	d8c00017 	ldw	r3,0(sp)
  80a338:	2400052e 	bgeu	r4,r16,80a350 <__udivdi3+0x23c>
  80a33c:	2449883a 	add	r4,r4,r17
  80a340:	b0bfffc4 	addi	r2,r22,-1
  80a344:	24400136 	bltu	r4,r17,80a34c <__udivdi3+0x238>
  80a348:	2400ca36 	bltu	r4,r16,80a674 <__udivdi3+0x560>
  80a34c:	102d883a 	mov	r22,r2
  80a350:	2421c83a 	sub	r16,r4,r16
  80a354:	a80b883a 	mov	r5,r21
  80a358:	8009883a 	mov	r4,r16
  80a35c:	d8c00015 	stw	r3,0(sp)
  80a360:	080ad200 	call	80ad20 <__umodsi3>
  80a364:	1027883a 	mov	r19,r2
  80a368:	a80b883a 	mov	r5,r21
  80a36c:	8009883a 	mov	r4,r16
  80a370:	080acbc0 	call	80acbc <__udivsi3>
  80a374:	9826943a 	slli	r19,r19,16
  80a378:	1529383a 	mul	r20,r2,r20
  80a37c:	94bfffcc 	andi	r18,r18,65535
  80a380:	94e4b03a 	or	r18,r18,r19
  80a384:	d8c00017 	ldw	r3,0(sp)
  80a388:	9500052e 	bgeu	r18,r20,80a3a0 <__udivdi3+0x28c>
  80a38c:	8ca5883a 	add	r18,r17,r18
  80a390:	113fffc4 	addi	r4,r2,-1
  80a394:	94409736 	bltu	r18,r17,80a5f4 <__udivdi3+0x4e0>
  80a398:	9500962e 	bgeu	r18,r20,80a5f4 <__udivdi3+0x4e0>
  80a39c:	10bfff84 	addi	r2,r2,-2
  80a3a0:	b00c943a 	slli	r6,r22,16
  80a3a4:	3084b03a 	or	r2,r6,r2
  80a3a8:	00000206 	br	80a3b4 <__udivdi3+0x2a0>
  80a3ac:	0007883a 	mov	r3,zero
  80a3b0:	0005883a 	mov	r2,zero
  80a3b4:	dfc00a17 	ldw	ra,40(sp)
  80a3b8:	df000917 	ldw	fp,36(sp)
  80a3bc:	ddc00817 	ldw	r23,32(sp)
  80a3c0:	dd800717 	ldw	r22,28(sp)
  80a3c4:	dd400617 	ldw	r21,24(sp)
  80a3c8:	dd000517 	ldw	r20,20(sp)
  80a3cc:	dcc00417 	ldw	r19,16(sp)
  80a3d0:	dc800317 	ldw	r18,12(sp)
  80a3d4:	dc400217 	ldw	r17,8(sp)
  80a3d8:	dc000117 	ldw	r16,4(sp)
  80a3dc:	dec00b04 	addi	sp,sp,44
  80a3e0:	f800283a 	ret
  80a3e4:	00803fc4 	movi	r2,255
  80a3e8:	11c5803a 	cmpltu	r2,r2,r7
  80a3ec:	100490fa 	slli	r2,r2,3
  80a3f0:	003f9e06 	br	80a26c <__alt_data_end+0xff80a26c>
  80a3f4:	00803fc4 	movi	r2,255
  80a3f8:	1445803a 	cmpltu	r2,r2,r17
  80a3fc:	100490fa 	slli	r2,r2,3
  80a400:	003fb206 	br	80a2cc <__alt_data_end+0xff80a2cc>
  80a404:	00804034 	movhi	r2,256
  80a408:	10bfffc4 	addi	r2,r2,-1
  80a40c:	11808836 	bltu	r2,r6,80a630 <__udivdi3+0x51c>
  80a410:	00800404 	movi	r2,16
  80a414:	003f5606 	br	80a170 <__alt_data_end+0xff80a170>
  80a418:	30aed83a 	srl	r23,r6,r2
  80a41c:	3d4e983a 	sll	r7,r7,r21
  80a420:	80acd83a 	srl	r22,r16,r2
  80a424:	9884d83a 	srl	r2,r19,r2
  80a428:	3deeb03a 	or	r23,r7,r23
  80a42c:	b824d43a 	srli	r18,r23,16
  80a430:	8560983a 	sll	r16,r16,r21
  80a434:	b009883a 	mov	r4,r22
  80a438:	900b883a 	mov	r5,r18
  80a43c:	3568983a 	sll	r20,r6,r21
  80a440:	1420b03a 	or	r16,r2,r16
  80a444:	080ad200 	call	80ad20 <__umodsi3>
  80a448:	b009883a 	mov	r4,r22
  80a44c:	900b883a 	mov	r5,r18
  80a450:	1023883a 	mov	r17,r2
  80a454:	080acbc0 	call	80acbc <__udivsi3>
  80a458:	8808943a 	slli	r4,r17,16
  80a45c:	bf3fffcc 	andi	fp,r23,65535
  80a460:	8006d43a 	srli	r3,r16,16
  80a464:	e0a3383a 	mul	r17,fp,r2
  80a468:	100d883a 	mov	r6,r2
  80a46c:	1906b03a 	or	r3,r3,r4
  80a470:	1c40042e 	bgeu	r3,r17,80a484 <__udivdi3+0x370>
  80a474:	1dc7883a 	add	r3,r3,r23
  80a478:	10bfffc4 	addi	r2,r2,-1
  80a47c:	1dc0752e 	bgeu	r3,r23,80a654 <__udivdi3+0x540>
  80a480:	100d883a 	mov	r6,r2
  80a484:	1c63c83a 	sub	r17,r3,r17
  80a488:	900b883a 	mov	r5,r18
  80a48c:	8809883a 	mov	r4,r17
  80a490:	d9800015 	stw	r6,0(sp)
  80a494:	080ad200 	call	80ad20 <__umodsi3>
  80a498:	102d883a 	mov	r22,r2
  80a49c:	8809883a 	mov	r4,r17
  80a4a0:	900b883a 	mov	r5,r18
  80a4a4:	080acbc0 	call	80acbc <__udivsi3>
  80a4a8:	b02c943a 	slli	r22,r22,16
  80a4ac:	e089383a 	mul	r4,fp,r2
  80a4b0:	843fffcc 	andi	r16,r16,65535
  80a4b4:	85a0b03a 	or	r16,r16,r22
  80a4b8:	d9800017 	ldw	r6,0(sp)
  80a4bc:	8100042e 	bgeu	r16,r4,80a4d0 <__udivdi3+0x3bc>
  80a4c0:	85e1883a 	add	r16,r16,r23
  80a4c4:	10ffffc4 	addi	r3,r2,-1
  80a4c8:	85c05e2e 	bgeu	r16,r23,80a644 <__udivdi3+0x530>
  80a4cc:	1805883a 	mov	r2,r3
  80a4d0:	300c943a 	slli	r6,r6,16
  80a4d4:	a17fffcc 	andi	r5,r20,65535
  80a4d8:	a028d43a 	srli	r20,r20,16
  80a4dc:	3084b03a 	or	r2,r6,r2
  80a4e0:	10ffffcc 	andi	r3,r2,65535
  80a4e4:	100cd43a 	srli	r6,r2,16
  80a4e8:	194f383a 	mul	r7,r3,r5
  80a4ec:	1d07383a 	mul	r3,r3,r20
  80a4f0:	314b383a 	mul	r5,r6,r5
  80a4f4:	3810d43a 	srli	r8,r7,16
  80a4f8:	8121c83a 	sub	r16,r16,r4
  80a4fc:	1947883a 	add	r3,r3,r5
  80a500:	40c7883a 	add	r3,r8,r3
  80a504:	350d383a 	mul	r6,r6,r20
  80a508:	1940022e 	bgeu	r3,r5,80a514 <__udivdi3+0x400>
  80a50c:	01000074 	movhi	r4,1
  80a510:	310d883a 	add	r6,r6,r4
  80a514:	1828d43a 	srli	r20,r3,16
  80a518:	a18d883a 	add	r6,r20,r6
  80a51c:	81803e36 	bltu	r16,r6,80a618 <__udivdi3+0x504>
  80a520:	81803826 	beq	r16,r6,80a604 <__udivdi3+0x4f0>
  80a524:	0007883a 	mov	r3,zero
  80a528:	003fa206 	br	80a3b4 <__alt_data_end+0xff80a3b4>
  80a52c:	88e2983a 	sll	r17,r17,r3
  80a530:	80a8d83a 	srl	r20,r16,r2
  80a534:	80e0983a 	sll	r16,r16,r3
  80a538:	882ad43a 	srli	r21,r17,16
  80a53c:	9884d83a 	srl	r2,r19,r2
  80a540:	a009883a 	mov	r4,r20
  80a544:	a80b883a 	mov	r5,r21
  80a548:	142eb03a 	or	r23,r2,r16
  80a54c:	98e4983a 	sll	r18,r19,r3
  80a550:	080ad200 	call	80ad20 <__umodsi3>
  80a554:	a009883a 	mov	r4,r20
  80a558:	a80b883a 	mov	r5,r21
  80a55c:	1021883a 	mov	r16,r2
  80a560:	080acbc0 	call	80acbc <__udivsi3>
  80a564:	1039883a 	mov	fp,r2
  80a568:	8d3fffcc 	andi	r20,r17,65535
  80a56c:	8020943a 	slli	r16,r16,16
  80a570:	b804d43a 	srli	r2,r23,16
  80a574:	a72d383a 	mul	r22,r20,fp
  80a578:	1404b03a 	or	r2,r2,r16
  80a57c:	1580062e 	bgeu	r2,r22,80a598 <__udivdi3+0x484>
  80a580:	1445883a 	add	r2,r2,r17
  80a584:	e0ffffc4 	addi	r3,fp,-1
  80a588:	14403836 	bltu	r2,r17,80a66c <__udivdi3+0x558>
  80a58c:	1580372e 	bgeu	r2,r22,80a66c <__udivdi3+0x558>
  80a590:	e73fff84 	addi	fp,fp,-2
  80a594:	1445883a 	add	r2,r2,r17
  80a598:	15adc83a 	sub	r22,r2,r22
  80a59c:	a80b883a 	mov	r5,r21
  80a5a0:	b009883a 	mov	r4,r22
  80a5a4:	080ad200 	call	80ad20 <__umodsi3>
  80a5a8:	1027883a 	mov	r19,r2
  80a5ac:	b009883a 	mov	r4,r22
  80a5b0:	a80b883a 	mov	r5,r21
  80a5b4:	080acbc0 	call	80acbc <__udivsi3>
  80a5b8:	9826943a 	slli	r19,r19,16
  80a5bc:	a0a1383a 	mul	r16,r20,r2
  80a5c0:	b93fffcc 	andi	r4,r23,65535
  80a5c4:	24c8b03a 	or	r4,r4,r19
  80a5c8:	2400062e 	bgeu	r4,r16,80a5e4 <__udivdi3+0x4d0>
  80a5cc:	2449883a 	add	r4,r4,r17
  80a5d0:	10ffffc4 	addi	r3,r2,-1
  80a5d4:	24402336 	bltu	r4,r17,80a664 <__udivdi3+0x550>
  80a5d8:	2400222e 	bgeu	r4,r16,80a664 <__udivdi3+0x550>
  80a5dc:	10bfff84 	addi	r2,r2,-2
  80a5e0:	2449883a 	add	r4,r4,r17
  80a5e4:	e038943a 	slli	fp,fp,16
  80a5e8:	2421c83a 	sub	r16,r4,r16
  80a5ec:	e086b03a 	or	r3,fp,r2
  80a5f0:	003f4306 	br	80a300 <__alt_data_end+0xff80a300>
  80a5f4:	2005883a 	mov	r2,r4
  80a5f8:	003f6906 	br	80a3a0 <__alt_data_end+0xff80a3a0>
  80a5fc:	1805883a 	mov	r2,r3
  80a600:	003f0f06 	br	80a240 <__alt_data_end+0xff80a240>
  80a604:	1806943a 	slli	r3,r3,16
  80a608:	9d66983a 	sll	r19,r19,r21
  80a60c:	39ffffcc 	andi	r7,r7,65535
  80a610:	19c7883a 	add	r3,r3,r7
  80a614:	98ffc32e 	bgeu	r19,r3,80a524 <__alt_data_end+0xff80a524>
  80a618:	10bfffc4 	addi	r2,r2,-1
  80a61c:	003fc106 	br	80a524 <__alt_data_end+0xff80a524>
  80a620:	00800604 	movi	r2,24
  80a624:	003f1106 	br	80a26c <__alt_data_end+0xff80a26c>
  80a628:	00800604 	movi	r2,24
  80a62c:	003f2706 	br	80a2cc <__alt_data_end+0xff80a2cc>
  80a630:	00800604 	movi	r2,24
  80a634:	003ece06 	br	80a170 <__alt_data_end+0xff80a170>
  80a638:	0007883a 	mov	r3,zero
  80a63c:	00800044 	movi	r2,1
  80a640:	003f5c06 	br	80a3b4 <__alt_data_end+0xff80a3b4>
  80a644:	813fa12e 	bgeu	r16,r4,80a4cc <__alt_data_end+0xff80a4cc>
  80a648:	10bfff84 	addi	r2,r2,-2
  80a64c:	85e1883a 	add	r16,r16,r23
  80a650:	003f9f06 	br	80a4d0 <__alt_data_end+0xff80a4d0>
  80a654:	1c7f8a2e 	bgeu	r3,r17,80a480 <__alt_data_end+0xff80a480>
  80a658:	31bfff84 	addi	r6,r6,-2
  80a65c:	1dc7883a 	add	r3,r3,r23
  80a660:	003f8806 	br	80a484 <__alt_data_end+0xff80a484>
  80a664:	1805883a 	mov	r2,r3
  80a668:	003fde06 	br	80a5e4 <__alt_data_end+0xff80a5e4>
  80a66c:	1839883a 	mov	fp,r3
  80a670:	003fc906 	br	80a598 <__alt_data_end+0xff80a598>
  80a674:	b5bfff84 	addi	r22,r22,-2
  80a678:	2449883a 	add	r4,r4,r17
  80a67c:	003f3406 	br	80a350 <__alt_data_end+0xff80a350>
  80a680:	b5bfff84 	addi	r22,r22,-2
  80a684:	1445883a 	add	r2,r2,r17
  80a688:	003edb06 	br	80a1f8 <__alt_data_end+0xff80a1f8>

0080a68c <__umoddi3>:
  80a68c:	defff404 	addi	sp,sp,-48
  80a690:	df000a15 	stw	fp,40(sp)
  80a694:	dc400315 	stw	r17,12(sp)
  80a698:	dc000215 	stw	r16,8(sp)
  80a69c:	dfc00b15 	stw	ra,44(sp)
  80a6a0:	ddc00915 	stw	r23,36(sp)
  80a6a4:	dd800815 	stw	r22,32(sp)
  80a6a8:	dd400715 	stw	r21,28(sp)
  80a6ac:	dd000615 	stw	r20,24(sp)
  80a6b0:	dcc00515 	stw	r19,20(sp)
  80a6b4:	dc800415 	stw	r18,16(sp)
  80a6b8:	2021883a 	mov	r16,r4
  80a6bc:	2823883a 	mov	r17,r5
  80a6c0:	2839883a 	mov	fp,r5
  80a6c4:	38003c1e 	bne	r7,zero,80a7b8 <__umoddi3+0x12c>
  80a6c8:	3027883a 	mov	r19,r6
  80a6cc:	2029883a 	mov	r20,r4
  80a6d0:	2980512e 	bgeu	r5,r6,80a818 <__umoddi3+0x18c>
  80a6d4:	00bfffd4 	movui	r2,65535
  80a6d8:	11809a36 	bltu	r2,r6,80a944 <__umoddi3+0x2b8>
  80a6dc:	01003fc4 	movi	r4,255
  80a6e0:	2189803a 	cmpltu	r4,r4,r6
  80a6e4:	200890fa 	slli	r4,r4,3
  80a6e8:	3104d83a 	srl	r2,r6,r4
  80a6ec:	00c02074 	movhi	r3,129
  80a6f0:	18ff44c4 	addi	r3,r3,-749
  80a6f4:	1885883a 	add	r2,r3,r2
  80a6f8:	10c00003 	ldbu	r3,0(r2)
  80a6fc:	00800804 	movi	r2,32
  80a700:	1909883a 	add	r4,r3,r4
  80a704:	1125c83a 	sub	r18,r2,r4
  80a708:	90000526 	beq	r18,zero,80a720 <__umoddi3+0x94>
  80a70c:	8ca2983a 	sll	r17,r17,r18
  80a710:	8108d83a 	srl	r4,r16,r4
  80a714:	34a6983a 	sll	r19,r6,r18
  80a718:	84a8983a 	sll	r20,r16,r18
  80a71c:	2478b03a 	or	fp,r4,r17
  80a720:	982ed43a 	srli	r23,r19,16
  80a724:	e009883a 	mov	r4,fp
  80a728:	9dbfffcc 	andi	r22,r19,65535
  80a72c:	b80b883a 	mov	r5,r23
  80a730:	080ad200 	call	80ad20 <__umodsi3>
  80a734:	e009883a 	mov	r4,fp
  80a738:	b80b883a 	mov	r5,r23
  80a73c:	102b883a 	mov	r21,r2
  80a740:	080acbc0 	call	80acbc <__udivsi3>
  80a744:	a806943a 	slli	r3,r21,16
  80a748:	a008d43a 	srli	r4,r20,16
  80a74c:	b085383a 	mul	r2,r22,r2
  80a750:	20c8b03a 	or	r4,r4,r3
  80a754:	2080032e 	bgeu	r4,r2,80a764 <__umoddi3+0xd8>
  80a758:	24c9883a 	add	r4,r4,r19
  80a75c:	24c00136 	bltu	r4,r19,80a764 <__umoddi3+0xd8>
  80a760:	20811036 	bltu	r4,r2,80aba4 <__umoddi3+0x518>
  80a764:	20abc83a 	sub	r21,r4,r2
  80a768:	b80b883a 	mov	r5,r23
  80a76c:	a809883a 	mov	r4,r21
  80a770:	080ad200 	call	80ad20 <__umodsi3>
  80a774:	1023883a 	mov	r17,r2
  80a778:	b80b883a 	mov	r5,r23
  80a77c:	a809883a 	mov	r4,r21
  80a780:	080acbc0 	call	80acbc <__udivsi3>
  80a784:	8822943a 	slli	r17,r17,16
  80a788:	b085383a 	mul	r2,r22,r2
  80a78c:	a0ffffcc 	andi	r3,r20,65535
  80a790:	1c46b03a 	or	r3,r3,r17
  80a794:	1880042e 	bgeu	r3,r2,80a7a8 <__umoddi3+0x11c>
  80a798:	1cc7883a 	add	r3,r3,r19
  80a79c:	1cc00236 	bltu	r3,r19,80a7a8 <__umoddi3+0x11c>
  80a7a0:	1880012e 	bgeu	r3,r2,80a7a8 <__umoddi3+0x11c>
  80a7a4:	1cc7883a 	add	r3,r3,r19
  80a7a8:	1885c83a 	sub	r2,r3,r2
  80a7ac:	1484d83a 	srl	r2,r2,r18
  80a7b0:	0007883a 	mov	r3,zero
  80a7b4:	00004f06 	br	80a8f4 <__umoddi3+0x268>
  80a7b8:	29c04c36 	bltu	r5,r7,80a8ec <__umoddi3+0x260>
  80a7bc:	00bfffd4 	movui	r2,65535
  80a7c0:	11c0582e 	bgeu	r2,r7,80a924 <__umoddi3+0x298>
  80a7c4:	00804034 	movhi	r2,256
  80a7c8:	10bfffc4 	addi	r2,r2,-1
  80a7cc:	11c0e736 	bltu	r2,r7,80ab6c <__umoddi3+0x4e0>
  80a7d0:	01000404 	movi	r4,16
  80a7d4:	3904d83a 	srl	r2,r7,r4
  80a7d8:	00c02074 	movhi	r3,129
  80a7dc:	18ff44c4 	addi	r3,r3,-749
  80a7e0:	1885883a 	add	r2,r3,r2
  80a7e4:	14c00003 	ldbu	r19,0(r2)
  80a7e8:	00c00804 	movi	r3,32
  80a7ec:	9927883a 	add	r19,r19,r4
  80a7f0:	1ce9c83a 	sub	r20,r3,r19
  80a7f4:	a000581e 	bne	r20,zero,80a958 <__umoddi3+0x2cc>
  80a7f8:	3c400136 	bltu	r7,r17,80a800 <__umoddi3+0x174>
  80a7fc:	8180eb36 	bltu	r16,r6,80abac <__umoddi3+0x520>
  80a800:	8185c83a 	sub	r2,r16,r6
  80a804:	89e3c83a 	sub	r17,r17,r7
  80a808:	8089803a 	cmpltu	r4,r16,r2
  80a80c:	8939c83a 	sub	fp,r17,r4
  80a810:	e007883a 	mov	r3,fp
  80a814:	00003706 	br	80a8f4 <__umoddi3+0x268>
  80a818:	3000041e 	bne	r6,zero,80a82c <__umoddi3+0x1a0>
  80a81c:	000b883a 	mov	r5,zero
  80a820:	01000044 	movi	r4,1
  80a824:	080acbc0 	call	80acbc <__udivsi3>
  80a828:	1027883a 	mov	r19,r2
  80a82c:	00bfffd4 	movui	r2,65535
  80a830:	14c0402e 	bgeu	r2,r19,80a934 <__umoddi3+0x2a8>
  80a834:	00804034 	movhi	r2,256
  80a838:	10bfffc4 	addi	r2,r2,-1
  80a83c:	14c0cd36 	bltu	r2,r19,80ab74 <__umoddi3+0x4e8>
  80a840:	00800404 	movi	r2,16
  80a844:	9886d83a 	srl	r3,r19,r2
  80a848:	01002074 	movhi	r4,129
  80a84c:	213f44c4 	addi	r4,r4,-749
  80a850:	20c7883a 	add	r3,r4,r3
  80a854:	18c00003 	ldbu	r3,0(r3)
  80a858:	1887883a 	add	r3,r3,r2
  80a85c:	00800804 	movi	r2,32
  80a860:	10e5c83a 	sub	r18,r2,r3
  80a864:	9000901e 	bne	r18,zero,80aaa8 <__umoddi3+0x41c>
  80a868:	982cd43a 	srli	r22,r19,16
  80a86c:	8ce3c83a 	sub	r17,r17,r19
  80a870:	9d7fffcc 	andi	r21,r19,65535
  80a874:	b00b883a 	mov	r5,r22
  80a878:	8809883a 	mov	r4,r17
  80a87c:	080ad200 	call	80ad20 <__umodsi3>
  80a880:	8809883a 	mov	r4,r17
  80a884:	b00b883a 	mov	r5,r22
  80a888:	1021883a 	mov	r16,r2
  80a88c:	080acbc0 	call	80acbc <__udivsi3>
  80a890:	8006943a 	slli	r3,r16,16
  80a894:	a008d43a 	srli	r4,r20,16
  80a898:	1545383a 	mul	r2,r2,r21
  80a89c:	20c8b03a 	or	r4,r4,r3
  80a8a0:	2080042e 	bgeu	r4,r2,80a8b4 <__umoddi3+0x228>
  80a8a4:	24c9883a 	add	r4,r4,r19
  80a8a8:	24c00236 	bltu	r4,r19,80a8b4 <__umoddi3+0x228>
  80a8ac:	2080012e 	bgeu	r4,r2,80a8b4 <__umoddi3+0x228>
  80a8b0:	24c9883a 	add	r4,r4,r19
  80a8b4:	20a1c83a 	sub	r16,r4,r2
  80a8b8:	b00b883a 	mov	r5,r22
  80a8bc:	8009883a 	mov	r4,r16
  80a8c0:	080ad200 	call	80ad20 <__umodsi3>
  80a8c4:	1023883a 	mov	r17,r2
  80a8c8:	b00b883a 	mov	r5,r22
  80a8cc:	8009883a 	mov	r4,r16
  80a8d0:	080acbc0 	call	80acbc <__udivsi3>
  80a8d4:	8822943a 	slli	r17,r17,16
  80a8d8:	1545383a 	mul	r2,r2,r21
  80a8dc:	a53fffcc 	andi	r20,r20,65535
  80a8e0:	a446b03a 	or	r3,r20,r17
  80a8e4:	18bfb02e 	bgeu	r3,r2,80a7a8 <__alt_data_end+0xff80a7a8>
  80a8e8:	003fab06 	br	80a798 <__alt_data_end+0xff80a798>
  80a8ec:	2005883a 	mov	r2,r4
  80a8f0:	2807883a 	mov	r3,r5
  80a8f4:	dfc00b17 	ldw	ra,44(sp)
  80a8f8:	df000a17 	ldw	fp,40(sp)
  80a8fc:	ddc00917 	ldw	r23,36(sp)
  80a900:	dd800817 	ldw	r22,32(sp)
  80a904:	dd400717 	ldw	r21,28(sp)
  80a908:	dd000617 	ldw	r20,24(sp)
  80a90c:	dcc00517 	ldw	r19,20(sp)
  80a910:	dc800417 	ldw	r18,16(sp)
  80a914:	dc400317 	ldw	r17,12(sp)
  80a918:	dc000217 	ldw	r16,8(sp)
  80a91c:	dec00c04 	addi	sp,sp,48
  80a920:	f800283a 	ret
  80a924:	04c03fc4 	movi	r19,255
  80a928:	99c9803a 	cmpltu	r4,r19,r7
  80a92c:	200890fa 	slli	r4,r4,3
  80a930:	003fa806 	br	80a7d4 <__alt_data_end+0xff80a7d4>
  80a934:	00803fc4 	movi	r2,255
  80a938:	14c5803a 	cmpltu	r2,r2,r19
  80a93c:	100490fa 	slli	r2,r2,3
  80a940:	003fc006 	br	80a844 <__alt_data_end+0xff80a844>
  80a944:	00804034 	movhi	r2,256
  80a948:	10bfffc4 	addi	r2,r2,-1
  80a94c:	11808b36 	bltu	r2,r6,80ab7c <__umoddi3+0x4f0>
  80a950:	01000404 	movi	r4,16
  80a954:	003f6406 	br	80a6e8 <__alt_data_end+0xff80a6e8>
  80a958:	34c4d83a 	srl	r2,r6,r19
  80a95c:	3d0e983a 	sll	r7,r7,r20
  80a960:	8cf8d83a 	srl	fp,r17,r19
  80a964:	8d10983a 	sll	r8,r17,r20
  80a968:	38aab03a 	or	r21,r7,r2
  80a96c:	a82cd43a 	srli	r22,r21,16
  80a970:	84e2d83a 	srl	r17,r16,r19
  80a974:	e009883a 	mov	r4,fp
  80a978:	b00b883a 	mov	r5,r22
  80a97c:	8a22b03a 	or	r17,r17,r8
  80a980:	3524983a 	sll	r18,r6,r20
  80a984:	080ad200 	call	80ad20 <__umodsi3>
  80a988:	e009883a 	mov	r4,fp
  80a98c:	b00b883a 	mov	r5,r22
  80a990:	102f883a 	mov	r23,r2
  80a994:	080acbc0 	call	80acbc <__udivsi3>
  80a998:	100d883a 	mov	r6,r2
  80a99c:	b808943a 	slli	r4,r23,16
  80a9a0:	aa3fffcc 	andi	r8,r21,65535
  80a9a4:	8804d43a 	srli	r2,r17,16
  80a9a8:	41af383a 	mul	r23,r8,r6
  80a9ac:	8520983a 	sll	r16,r16,r20
  80a9b0:	1104b03a 	or	r2,r2,r4
  80a9b4:	15c0042e 	bgeu	r2,r23,80a9c8 <__umoddi3+0x33c>
  80a9b8:	1545883a 	add	r2,r2,r21
  80a9bc:	30ffffc4 	addi	r3,r6,-1
  80a9c0:	1540742e 	bgeu	r2,r21,80ab94 <__umoddi3+0x508>
  80a9c4:	180d883a 	mov	r6,r3
  80a9c8:	15efc83a 	sub	r23,r2,r23
  80a9cc:	b00b883a 	mov	r5,r22
  80a9d0:	b809883a 	mov	r4,r23
  80a9d4:	d9800115 	stw	r6,4(sp)
  80a9d8:	da000015 	stw	r8,0(sp)
  80a9dc:	080ad200 	call	80ad20 <__umodsi3>
  80a9e0:	b00b883a 	mov	r5,r22
  80a9e4:	b809883a 	mov	r4,r23
  80a9e8:	1039883a 	mov	fp,r2
  80a9ec:	080acbc0 	call	80acbc <__udivsi3>
  80a9f0:	da000017 	ldw	r8,0(sp)
  80a9f4:	e038943a 	slli	fp,fp,16
  80a9f8:	100b883a 	mov	r5,r2
  80a9fc:	4089383a 	mul	r4,r8,r2
  80aa00:	8a3fffcc 	andi	r8,r17,65535
  80aa04:	4710b03a 	or	r8,r8,fp
  80aa08:	d9800117 	ldw	r6,4(sp)
  80aa0c:	4100042e 	bgeu	r8,r4,80aa20 <__umoddi3+0x394>
  80aa10:	4551883a 	add	r8,r8,r21
  80aa14:	10bfffc4 	addi	r2,r2,-1
  80aa18:	45405a2e 	bgeu	r8,r21,80ab84 <__umoddi3+0x4f8>
  80aa1c:	100b883a 	mov	r5,r2
  80aa20:	300c943a 	slli	r6,r6,16
  80aa24:	91ffffcc 	andi	r7,r18,65535
  80aa28:	9004d43a 	srli	r2,r18,16
  80aa2c:	314cb03a 	or	r6,r6,r5
  80aa30:	317fffcc 	andi	r5,r6,65535
  80aa34:	300cd43a 	srli	r6,r6,16
  80aa38:	29d3383a 	mul	r9,r5,r7
  80aa3c:	288b383a 	mul	r5,r5,r2
  80aa40:	31cf383a 	mul	r7,r6,r7
  80aa44:	4806d43a 	srli	r3,r9,16
  80aa48:	4111c83a 	sub	r8,r8,r4
  80aa4c:	29cb883a 	add	r5,r5,r7
  80aa50:	194b883a 	add	r5,r3,r5
  80aa54:	3085383a 	mul	r2,r6,r2
  80aa58:	29c0022e 	bgeu	r5,r7,80aa64 <__umoddi3+0x3d8>
  80aa5c:	00c00074 	movhi	r3,1
  80aa60:	10c5883a 	add	r2,r2,r3
  80aa64:	2808d43a 	srli	r4,r5,16
  80aa68:	280a943a 	slli	r5,r5,16
  80aa6c:	4a7fffcc 	andi	r9,r9,65535
  80aa70:	2085883a 	add	r2,r4,r2
  80aa74:	2a4b883a 	add	r5,r5,r9
  80aa78:	40803636 	bltu	r8,r2,80ab54 <__umoddi3+0x4c8>
  80aa7c:	40804d26 	beq	r8,r2,80abb4 <__umoddi3+0x528>
  80aa80:	4089c83a 	sub	r4,r8,r2
  80aa84:	280f883a 	mov	r7,r5
  80aa88:	81cfc83a 	sub	r7,r16,r7
  80aa8c:	81c7803a 	cmpltu	r3,r16,r7
  80aa90:	20c7c83a 	sub	r3,r4,r3
  80aa94:	1cc4983a 	sll	r2,r3,r19
  80aa98:	3d0ed83a 	srl	r7,r7,r20
  80aa9c:	1d06d83a 	srl	r3,r3,r20
  80aaa0:	11c4b03a 	or	r2,r2,r7
  80aaa4:	003f9306 	br	80a8f4 <__alt_data_end+0xff80a8f4>
  80aaa8:	9ca6983a 	sll	r19,r19,r18
  80aaac:	88e8d83a 	srl	r20,r17,r3
  80aab0:	80c4d83a 	srl	r2,r16,r3
  80aab4:	982cd43a 	srli	r22,r19,16
  80aab8:	8ca2983a 	sll	r17,r17,r18
  80aabc:	a009883a 	mov	r4,r20
  80aac0:	b00b883a 	mov	r5,r22
  80aac4:	1478b03a 	or	fp,r2,r17
  80aac8:	080ad200 	call	80ad20 <__umodsi3>
  80aacc:	a009883a 	mov	r4,r20
  80aad0:	b00b883a 	mov	r5,r22
  80aad4:	1023883a 	mov	r17,r2
  80aad8:	080acbc0 	call	80acbc <__udivsi3>
  80aadc:	9d7fffcc 	andi	r21,r19,65535
  80aae0:	880a943a 	slli	r5,r17,16
  80aae4:	e008d43a 	srli	r4,fp,16
  80aae8:	a885383a 	mul	r2,r21,r2
  80aaec:	84a8983a 	sll	r20,r16,r18
  80aaf0:	2148b03a 	or	r4,r4,r5
  80aaf4:	2080042e 	bgeu	r4,r2,80ab08 <__umoddi3+0x47c>
  80aaf8:	24c9883a 	add	r4,r4,r19
  80aafc:	24c00236 	bltu	r4,r19,80ab08 <__umoddi3+0x47c>
  80ab00:	2080012e 	bgeu	r4,r2,80ab08 <__umoddi3+0x47c>
  80ab04:	24c9883a 	add	r4,r4,r19
  80ab08:	20a3c83a 	sub	r17,r4,r2
  80ab0c:	b00b883a 	mov	r5,r22
  80ab10:	8809883a 	mov	r4,r17
  80ab14:	080ad200 	call	80ad20 <__umodsi3>
  80ab18:	102f883a 	mov	r23,r2
  80ab1c:	8809883a 	mov	r4,r17
  80ab20:	b00b883a 	mov	r5,r22
  80ab24:	080acbc0 	call	80acbc <__udivsi3>
  80ab28:	b82e943a 	slli	r23,r23,16
  80ab2c:	a885383a 	mul	r2,r21,r2
  80ab30:	e13fffcc 	andi	r4,fp,65535
  80ab34:	25c8b03a 	or	r4,r4,r23
  80ab38:	2080042e 	bgeu	r4,r2,80ab4c <__umoddi3+0x4c0>
  80ab3c:	24c9883a 	add	r4,r4,r19
  80ab40:	24c00236 	bltu	r4,r19,80ab4c <__umoddi3+0x4c0>
  80ab44:	2080012e 	bgeu	r4,r2,80ab4c <__umoddi3+0x4c0>
  80ab48:	24c9883a 	add	r4,r4,r19
  80ab4c:	20a3c83a 	sub	r17,r4,r2
  80ab50:	003f4806 	br	80a874 <__alt_data_end+0xff80a874>
  80ab54:	2c8fc83a 	sub	r7,r5,r18
  80ab58:	1545c83a 	sub	r2,r2,r21
  80ab5c:	29cb803a 	cmpltu	r5,r5,r7
  80ab60:	1145c83a 	sub	r2,r2,r5
  80ab64:	4089c83a 	sub	r4,r8,r2
  80ab68:	003fc706 	br	80aa88 <__alt_data_end+0xff80aa88>
  80ab6c:	01000604 	movi	r4,24
  80ab70:	003f1806 	br	80a7d4 <__alt_data_end+0xff80a7d4>
  80ab74:	00800604 	movi	r2,24
  80ab78:	003f3206 	br	80a844 <__alt_data_end+0xff80a844>
  80ab7c:	01000604 	movi	r4,24
  80ab80:	003ed906 	br	80a6e8 <__alt_data_end+0xff80a6e8>
  80ab84:	413fa52e 	bgeu	r8,r4,80aa1c <__alt_data_end+0xff80aa1c>
  80ab88:	297fff84 	addi	r5,r5,-2
  80ab8c:	4551883a 	add	r8,r8,r21
  80ab90:	003fa306 	br	80aa20 <__alt_data_end+0xff80aa20>
  80ab94:	15ff8b2e 	bgeu	r2,r23,80a9c4 <__alt_data_end+0xff80a9c4>
  80ab98:	31bfff84 	addi	r6,r6,-2
  80ab9c:	1545883a 	add	r2,r2,r21
  80aba0:	003f8906 	br	80a9c8 <__alt_data_end+0xff80a9c8>
  80aba4:	24c9883a 	add	r4,r4,r19
  80aba8:	003eee06 	br	80a764 <__alt_data_end+0xff80a764>
  80abac:	8005883a 	mov	r2,r16
  80abb0:	003f1706 	br	80a810 <__alt_data_end+0xff80a810>
  80abb4:	817fe736 	bltu	r16,r5,80ab54 <__alt_data_end+0xff80ab54>
  80abb8:	280f883a 	mov	r7,r5
  80abbc:	0009883a 	mov	r4,zero
  80abc0:	003fb106 	br	80aa88 <__alt_data_end+0xff80aa88>

0080abc4 <__divsi3>:
  80abc4:	20001b16 	blt	r4,zero,80ac34 <__divsi3+0x70>
  80abc8:	000f883a 	mov	r7,zero
  80abcc:	28001616 	blt	r5,zero,80ac28 <__divsi3+0x64>
  80abd0:	200d883a 	mov	r6,r4
  80abd4:	29001a2e 	bgeu	r5,r4,80ac40 <__divsi3+0x7c>
  80abd8:	00800804 	movi	r2,32
  80abdc:	00c00044 	movi	r3,1
  80abe0:	00000106 	br	80abe8 <__divsi3+0x24>
  80abe4:	10000d26 	beq	r2,zero,80ac1c <__divsi3+0x58>
  80abe8:	294b883a 	add	r5,r5,r5
  80abec:	10bfffc4 	addi	r2,r2,-1
  80abf0:	18c7883a 	add	r3,r3,r3
  80abf4:	293ffb36 	bltu	r5,r4,80abe4 <__alt_data_end+0xff80abe4>
  80abf8:	0005883a 	mov	r2,zero
  80abfc:	18000726 	beq	r3,zero,80ac1c <__divsi3+0x58>
  80ac00:	0005883a 	mov	r2,zero
  80ac04:	31400236 	bltu	r6,r5,80ac10 <__divsi3+0x4c>
  80ac08:	314dc83a 	sub	r6,r6,r5
  80ac0c:	10c4b03a 	or	r2,r2,r3
  80ac10:	1806d07a 	srli	r3,r3,1
  80ac14:	280ad07a 	srli	r5,r5,1
  80ac18:	183ffa1e 	bne	r3,zero,80ac04 <__alt_data_end+0xff80ac04>
  80ac1c:	38000126 	beq	r7,zero,80ac24 <__divsi3+0x60>
  80ac20:	0085c83a 	sub	r2,zero,r2
  80ac24:	f800283a 	ret
  80ac28:	014bc83a 	sub	r5,zero,r5
  80ac2c:	39c0005c 	xori	r7,r7,1
  80ac30:	003fe706 	br	80abd0 <__alt_data_end+0xff80abd0>
  80ac34:	0109c83a 	sub	r4,zero,r4
  80ac38:	01c00044 	movi	r7,1
  80ac3c:	003fe306 	br	80abcc <__alt_data_end+0xff80abcc>
  80ac40:	00c00044 	movi	r3,1
  80ac44:	003fee06 	br	80ac00 <__alt_data_end+0xff80ac00>

0080ac48 <__modsi3>:
  80ac48:	20001716 	blt	r4,zero,80aca8 <__modsi3+0x60>
  80ac4c:	000f883a 	mov	r7,zero
  80ac50:	2005883a 	mov	r2,r4
  80ac54:	28001216 	blt	r5,zero,80aca0 <__modsi3+0x58>
  80ac58:	2900162e 	bgeu	r5,r4,80acb4 <__modsi3+0x6c>
  80ac5c:	01800804 	movi	r6,32
  80ac60:	00c00044 	movi	r3,1
  80ac64:	00000106 	br	80ac6c <__modsi3+0x24>
  80ac68:	30000a26 	beq	r6,zero,80ac94 <__modsi3+0x4c>
  80ac6c:	294b883a 	add	r5,r5,r5
  80ac70:	31bfffc4 	addi	r6,r6,-1
  80ac74:	18c7883a 	add	r3,r3,r3
  80ac78:	293ffb36 	bltu	r5,r4,80ac68 <__alt_data_end+0xff80ac68>
  80ac7c:	18000526 	beq	r3,zero,80ac94 <__modsi3+0x4c>
  80ac80:	1806d07a 	srli	r3,r3,1
  80ac84:	11400136 	bltu	r2,r5,80ac8c <__modsi3+0x44>
  80ac88:	1145c83a 	sub	r2,r2,r5
  80ac8c:	280ad07a 	srli	r5,r5,1
  80ac90:	183ffb1e 	bne	r3,zero,80ac80 <__alt_data_end+0xff80ac80>
  80ac94:	38000126 	beq	r7,zero,80ac9c <__modsi3+0x54>
  80ac98:	0085c83a 	sub	r2,zero,r2
  80ac9c:	f800283a 	ret
  80aca0:	014bc83a 	sub	r5,zero,r5
  80aca4:	003fec06 	br	80ac58 <__alt_data_end+0xff80ac58>
  80aca8:	0109c83a 	sub	r4,zero,r4
  80acac:	01c00044 	movi	r7,1
  80acb0:	003fe706 	br	80ac50 <__alt_data_end+0xff80ac50>
  80acb4:	00c00044 	movi	r3,1
  80acb8:	003ff106 	br	80ac80 <__alt_data_end+0xff80ac80>

0080acbc <__udivsi3>:
  80acbc:	200d883a 	mov	r6,r4
  80acc0:	2900152e 	bgeu	r5,r4,80ad18 <__udivsi3+0x5c>
  80acc4:	28001416 	blt	r5,zero,80ad18 <__udivsi3+0x5c>
  80acc8:	00800804 	movi	r2,32
  80accc:	00c00044 	movi	r3,1
  80acd0:	00000206 	br	80acdc <__udivsi3+0x20>
  80acd4:	10000e26 	beq	r2,zero,80ad10 <__udivsi3+0x54>
  80acd8:	28000516 	blt	r5,zero,80acf0 <__udivsi3+0x34>
  80acdc:	294b883a 	add	r5,r5,r5
  80ace0:	10bfffc4 	addi	r2,r2,-1
  80ace4:	18c7883a 	add	r3,r3,r3
  80ace8:	293ffa36 	bltu	r5,r4,80acd4 <__alt_data_end+0xff80acd4>
  80acec:	18000826 	beq	r3,zero,80ad10 <__udivsi3+0x54>
  80acf0:	0005883a 	mov	r2,zero
  80acf4:	31400236 	bltu	r6,r5,80ad00 <__udivsi3+0x44>
  80acf8:	314dc83a 	sub	r6,r6,r5
  80acfc:	10c4b03a 	or	r2,r2,r3
  80ad00:	1806d07a 	srli	r3,r3,1
  80ad04:	280ad07a 	srli	r5,r5,1
  80ad08:	183ffa1e 	bne	r3,zero,80acf4 <__alt_data_end+0xff80acf4>
  80ad0c:	f800283a 	ret
  80ad10:	0005883a 	mov	r2,zero
  80ad14:	f800283a 	ret
  80ad18:	00c00044 	movi	r3,1
  80ad1c:	003ff406 	br	80acf0 <__alt_data_end+0xff80acf0>

0080ad20 <__umodsi3>:
  80ad20:	2005883a 	mov	r2,r4
  80ad24:	2900122e 	bgeu	r5,r4,80ad70 <__umodsi3+0x50>
  80ad28:	28001116 	blt	r5,zero,80ad70 <__umodsi3+0x50>
  80ad2c:	01800804 	movi	r6,32
  80ad30:	00c00044 	movi	r3,1
  80ad34:	00000206 	br	80ad40 <__umodsi3+0x20>
  80ad38:	30000c26 	beq	r6,zero,80ad6c <__umodsi3+0x4c>
  80ad3c:	28000516 	blt	r5,zero,80ad54 <__umodsi3+0x34>
  80ad40:	294b883a 	add	r5,r5,r5
  80ad44:	31bfffc4 	addi	r6,r6,-1
  80ad48:	18c7883a 	add	r3,r3,r3
  80ad4c:	293ffa36 	bltu	r5,r4,80ad38 <__alt_data_end+0xff80ad38>
  80ad50:	18000626 	beq	r3,zero,80ad6c <__umodsi3+0x4c>
  80ad54:	1806d07a 	srli	r3,r3,1
  80ad58:	11400136 	bltu	r2,r5,80ad60 <__umodsi3+0x40>
  80ad5c:	1145c83a 	sub	r2,r2,r5
  80ad60:	280ad07a 	srli	r5,r5,1
  80ad64:	183ffb1e 	bne	r3,zero,80ad54 <__alt_data_end+0xff80ad54>
  80ad68:	f800283a 	ret
  80ad6c:	f800283a 	ret
  80ad70:	00c00044 	movi	r3,1
  80ad74:	003ff706 	br	80ad54 <__alt_data_end+0xff80ad54>

0080ad78 <__adddf3>:
  80ad78:	02c00434 	movhi	r11,16
  80ad7c:	5affffc4 	addi	r11,r11,-1
  80ad80:	2806d7fa 	srli	r3,r5,31
  80ad84:	2ad4703a 	and	r10,r5,r11
  80ad88:	3ad2703a 	and	r9,r7,r11
  80ad8c:	3804d53a 	srli	r2,r7,20
  80ad90:	3018d77a 	srli	r12,r6,29
  80ad94:	280ad53a 	srli	r5,r5,20
  80ad98:	501490fa 	slli	r10,r10,3
  80ad9c:	2010d77a 	srli	r8,r4,29
  80ada0:	481290fa 	slli	r9,r9,3
  80ada4:	380ed7fa 	srli	r7,r7,31
  80ada8:	defffb04 	addi	sp,sp,-20
  80adac:	dc800215 	stw	r18,8(sp)
  80adb0:	dc400115 	stw	r17,4(sp)
  80adb4:	dc000015 	stw	r16,0(sp)
  80adb8:	dfc00415 	stw	ra,16(sp)
  80adbc:	dcc00315 	stw	r19,12(sp)
  80adc0:	1c803fcc 	andi	r18,r3,255
  80adc4:	2c01ffcc 	andi	r16,r5,2047
  80adc8:	5210b03a 	or	r8,r10,r8
  80adcc:	202290fa 	slli	r17,r4,3
  80add0:	1081ffcc 	andi	r2,r2,2047
  80add4:	4b12b03a 	or	r9,r9,r12
  80add8:	300c90fa 	slli	r6,r6,3
  80addc:	91c07526 	beq	r18,r7,80afb4 <__adddf3+0x23c>
  80ade0:	8087c83a 	sub	r3,r16,r2
  80ade4:	00c0ab0e 	bge	zero,r3,80b094 <__adddf3+0x31c>
  80ade8:	10002a1e 	bne	r2,zero,80ae94 <__adddf3+0x11c>
  80adec:	4984b03a 	or	r2,r9,r6
  80adf0:	1000961e 	bne	r2,zero,80b04c <__adddf3+0x2d4>
  80adf4:	888001cc 	andi	r2,r17,7
  80adf8:	10000726 	beq	r2,zero,80ae18 <__adddf3+0xa0>
  80adfc:	888003cc 	andi	r2,r17,15
  80ae00:	00c00104 	movi	r3,4
  80ae04:	10c00426 	beq	r2,r3,80ae18 <__adddf3+0xa0>
  80ae08:	88c7883a 	add	r3,r17,r3
  80ae0c:	1c63803a 	cmpltu	r17,r3,r17
  80ae10:	4451883a 	add	r8,r8,r17
  80ae14:	1823883a 	mov	r17,r3
  80ae18:	4080202c 	andhi	r2,r8,128
  80ae1c:	10005926 	beq	r2,zero,80af84 <__adddf3+0x20c>
  80ae20:	84000044 	addi	r16,r16,1
  80ae24:	0081ffc4 	movi	r2,2047
  80ae28:	8080ba26 	beq	r16,r2,80b114 <__adddf3+0x39c>
  80ae2c:	00bfe034 	movhi	r2,65408
  80ae30:	10bfffc4 	addi	r2,r2,-1
  80ae34:	4090703a 	and	r8,r8,r2
  80ae38:	4004977a 	slli	r2,r8,29
  80ae3c:	4010927a 	slli	r8,r8,9
  80ae40:	8822d0fa 	srli	r17,r17,3
  80ae44:	8401ffcc 	andi	r16,r16,2047
  80ae48:	4010d33a 	srli	r8,r8,12
  80ae4c:	9007883a 	mov	r3,r18
  80ae50:	1444b03a 	or	r2,r2,r17
  80ae54:	8401ffcc 	andi	r16,r16,2047
  80ae58:	8020953a 	slli	r16,r16,20
  80ae5c:	18c03fcc 	andi	r3,r3,255
  80ae60:	01000434 	movhi	r4,16
  80ae64:	213fffc4 	addi	r4,r4,-1
  80ae68:	180697fa 	slli	r3,r3,31
  80ae6c:	4110703a 	and	r8,r8,r4
  80ae70:	4410b03a 	or	r8,r8,r16
  80ae74:	40c6b03a 	or	r3,r8,r3
  80ae78:	dfc00417 	ldw	ra,16(sp)
  80ae7c:	dcc00317 	ldw	r19,12(sp)
  80ae80:	dc800217 	ldw	r18,8(sp)
  80ae84:	dc400117 	ldw	r17,4(sp)
  80ae88:	dc000017 	ldw	r16,0(sp)
  80ae8c:	dec00504 	addi	sp,sp,20
  80ae90:	f800283a 	ret
  80ae94:	0081ffc4 	movi	r2,2047
  80ae98:	80bfd626 	beq	r16,r2,80adf4 <__alt_data_end+0xff80adf4>
  80ae9c:	4a402034 	orhi	r9,r9,128
  80aea0:	00800e04 	movi	r2,56
  80aea4:	10c09f16 	blt	r2,r3,80b124 <__adddf3+0x3ac>
  80aea8:	008007c4 	movi	r2,31
  80aeac:	10c0c216 	blt	r2,r3,80b1b8 <__adddf3+0x440>
  80aeb0:	00800804 	movi	r2,32
  80aeb4:	10c5c83a 	sub	r2,r2,r3
  80aeb8:	488a983a 	sll	r5,r9,r2
  80aebc:	30c8d83a 	srl	r4,r6,r3
  80aec0:	3084983a 	sll	r2,r6,r2
  80aec4:	48c6d83a 	srl	r3,r9,r3
  80aec8:	290cb03a 	or	r6,r5,r4
  80aecc:	1004c03a 	cmpne	r2,r2,zero
  80aed0:	308cb03a 	or	r6,r6,r2
  80aed4:	898dc83a 	sub	r6,r17,r6
  80aed8:	89a3803a 	cmpltu	r17,r17,r6
  80aedc:	40d1c83a 	sub	r8,r8,r3
  80aee0:	4451c83a 	sub	r8,r8,r17
  80aee4:	3023883a 	mov	r17,r6
  80aee8:	4080202c 	andhi	r2,r8,128
  80aeec:	10002326 	beq	r2,zero,80af7c <__adddf3+0x204>
  80aef0:	04c02034 	movhi	r19,128
  80aef4:	9cffffc4 	addi	r19,r19,-1
  80aef8:	44e6703a 	and	r19,r8,r19
  80aefc:	98007626 	beq	r19,zero,80b0d8 <__adddf3+0x360>
  80af00:	9809883a 	mov	r4,r19
  80af04:	0800a5c0 	call	800a5c <__clzsi2>
  80af08:	10fffe04 	addi	r3,r2,-8
  80af0c:	010007c4 	movi	r4,31
  80af10:	20c07716 	blt	r4,r3,80b0f0 <__adddf3+0x378>
  80af14:	00800804 	movi	r2,32
  80af18:	10c5c83a 	sub	r2,r2,r3
  80af1c:	8884d83a 	srl	r2,r17,r2
  80af20:	98d0983a 	sll	r8,r19,r3
  80af24:	88e2983a 	sll	r17,r17,r3
  80af28:	1204b03a 	or	r2,r2,r8
  80af2c:	1c007416 	blt	r3,r16,80b100 <__adddf3+0x388>
  80af30:	1c21c83a 	sub	r16,r3,r16
  80af34:	82000044 	addi	r8,r16,1
  80af38:	00c007c4 	movi	r3,31
  80af3c:	1a009116 	blt	r3,r8,80b184 <__adddf3+0x40c>
  80af40:	00c00804 	movi	r3,32
  80af44:	1a07c83a 	sub	r3,r3,r8
  80af48:	8a08d83a 	srl	r4,r17,r8
  80af4c:	88e2983a 	sll	r17,r17,r3
  80af50:	10c6983a 	sll	r3,r2,r3
  80af54:	1210d83a 	srl	r8,r2,r8
  80af58:	8804c03a 	cmpne	r2,r17,zero
  80af5c:	1906b03a 	or	r3,r3,r4
  80af60:	18a2b03a 	or	r17,r3,r2
  80af64:	0021883a 	mov	r16,zero
  80af68:	003fa206 	br	80adf4 <__alt_data_end+0xff80adf4>
  80af6c:	1890b03a 	or	r8,r3,r2
  80af70:	40017d26 	beq	r8,zero,80b568 <__adddf3+0x7f0>
  80af74:	1011883a 	mov	r8,r2
  80af78:	1823883a 	mov	r17,r3
  80af7c:	888001cc 	andi	r2,r17,7
  80af80:	103f9e1e 	bne	r2,zero,80adfc <__alt_data_end+0xff80adfc>
  80af84:	4004977a 	slli	r2,r8,29
  80af88:	8822d0fa 	srli	r17,r17,3
  80af8c:	4010d0fa 	srli	r8,r8,3
  80af90:	9007883a 	mov	r3,r18
  80af94:	1444b03a 	or	r2,r2,r17
  80af98:	0101ffc4 	movi	r4,2047
  80af9c:	81002426 	beq	r16,r4,80b030 <__adddf3+0x2b8>
  80afa0:	8120703a 	and	r16,r16,r4
  80afa4:	01000434 	movhi	r4,16
  80afa8:	213fffc4 	addi	r4,r4,-1
  80afac:	4110703a 	and	r8,r8,r4
  80afb0:	003fa806 	br	80ae54 <__alt_data_end+0xff80ae54>
  80afb4:	8089c83a 	sub	r4,r16,r2
  80afb8:	01005e0e 	bge	zero,r4,80b134 <__adddf3+0x3bc>
  80afbc:	10002b26 	beq	r2,zero,80b06c <__adddf3+0x2f4>
  80afc0:	0081ffc4 	movi	r2,2047
  80afc4:	80bf8b26 	beq	r16,r2,80adf4 <__alt_data_end+0xff80adf4>
  80afc8:	4a402034 	orhi	r9,r9,128
  80afcc:	00800e04 	movi	r2,56
  80afd0:	1100a40e 	bge	r2,r4,80b264 <__adddf3+0x4ec>
  80afd4:	498cb03a 	or	r6,r9,r6
  80afd8:	300ac03a 	cmpne	r5,r6,zero
  80afdc:	0013883a 	mov	r9,zero
  80afe0:	2c4b883a 	add	r5,r5,r17
  80afe4:	2c63803a 	cmpltu	r17,r5,r17
  80afe8:	4a11883a 	add	r8,r9,r8
  80afec:	8a11883a 	add	r8,r17,r8
  80aff0:	2823883a 	mov	r17,r5
  80aff4:	4080202c 	andhi	r2,r8,128
  80aff8:	103fe026 	beq	r2,zero,80af7c <__alt_data_end+0xff80af7c>
  80affc:	84000044 	addi	r16,r16,1
  80b000:	0081ffc4 	movi	r2,2047
  80b004:	8080d226 	beq	r16,r2,80b350 <__adddf3+0x5d8>
  80b008:	00bfe034 	movhi	r2,65408
  80b00c:	10bfffc4 	addi	r2,r2,-1
  80b010:	4090703a 	and	r8,r8,r2
  80b014:	880ad07a 	srli	r5,r17,1
  80b018:	400897fa 	slli	r4,r8,31
  80b01c:	88c0004c 	andi	r3,r17,1
  80b020:	28e2b03a 	or	r17,r5,r3
  80b024:	4010d07a 	srli	r8,r8,1
  80b028:	2462b03a 	or	r17,r4,r17
  80b02c:	003f7106 	br	80adf4 <__alt_data_end+0xff80adf4>
  80b030:	4088b03a 	or	r4,r8,r2
  80b034:	20014526 	beq	r4,zero,80b54c <__adddf3+0x7d4>
  80b038:	01000434 	movhi	r4,16
  80b03c:	42000234 	orhi	r8,r8,8
  80b040:	213fffc4 	addi	r4,r4,-1
  80b044:	4110703a 	and	r8,r8,r4
  80b048:	003f8206 	br	80ae54 <__alt_data_end+0xff80ae54>
  80b04c:	18ffffc4 	addi	r3,r3,-1
  80b050:	1800491e 	bne	r3,zero,80b178 <__adddf3+0x400>
  80b054:	898bc83a 	sub	r5,r17,r6
  80b058:	8963803a 	cmpltu	r17,r17,r5
  80b05c:	4251c83a 	sub	r8,r8,r9
  80b060:	4451c83a 	sub	r8,r8,r17
  80b064:	2823883a 	mov	r17,r5
  80b068:	003f9f06 	br	80aee8 <__alt_data_end+0xff80aee8>
  80b06c:	4984b03a 	or	r2,r9,r6
  80b070:	103f6026 	beq	r2,zero,80adf4 <__alt_data_end+0xff80adf4>
  80b074:	213fffc4 	addi	r4,r4,-1
  80b078:	2000931e 	bne	r4,zero,80b2c8 <__adddf3+0x550>
  80b07c:	898d883a 	add	r6,r17,r6
  80b080:	3463803a 	cmpltu	r17,r6,r17
  80b084:	4251883a 	add	r8,r8,r9
  80b088:	8a11883a 	add	r8,r17,r8
  80b08c:	3023883a 	mov	r17,r6
  80b090:	003fd806 	br	80aff4 <__alt_data_end+0xff80aff4>
  80b094:	1800541e 	bne	r3,zero,80b1e8 <__adddf3+0x470>
  80b098:	80800044 	addi	r2,r16,1
  80b09c:	1081ffcc 	andi	r2,r2,2047
  80b0a0:	00c00044 	movi	r3,1
  80b0a4:	1880a00e 	bge	r3,r2,80b328 <__adddf3+0x5b0>
  80b0a8:	8989c83a 	sub	r4,r17,r6
  80b0ac:	8905803a 	cmpltu	r2,r17,r4
  80b0b0:	4267c83a 	sub	r19,r8,r9
  80b0b4:	98a7c83a 	sub	r19,r19,r2
  80b0b8:	9880202c 	andhi	r2,r19,128
  80b0bc:	10006326 	beq	r2,zero,80b24c <__adddf3+0x4d4>
  80b0c0:	3463c83a 	sub	r17,r6,r17
  80b0c4:	4a07c83a 	sub	r3,r9,r8
  80b0c8:	344d803a 	cmpltu	r6,r6,r17
  80b0cc:	19a7c83a 	sub	r19,r3,r6
  80b0d0:	3825883a 	mov	r18,r7
  80b0d4:	983f8a1e 	bne	r19,zero,80af00 <__alt_data_end+0xff80af00>
  80b0d8:	8809883a 	mov	r4,r17
  80b0dc:	0800a5c0 	call	800a5c <__clzsi2>
  80b0e0:	10800804 	addi	r2,r2,32
  80b0e4:	10fffe04 	addi	r3,r2,-8
  80b0e8:	010007c4 	movi	r4,31
  80b0ec:	20ff890e 	bge	r4,r3,80af14 <__alt_data_end+0xff80af14>
  80b0f0:	10bff604 	addi	r2,r2,-40
  80b0f4:	8884983a 	sll	r2,r17,r2
  80b0f8:	0023883a 	mov	r17,zero
  80b0fc:	1c3f8c0e 	bge	r3,r16,80af30 <__alt_data_end+0xff80af30>
  80b100:	023fe034 	movhi	r8,65408
  80b104:	423fffc4 	addi	r8,r8,-1
  80b108:	80e1c83a 	sub	r16,r16,r3
  80b10c:	1210703a 	and	r8,r2,r8
  80b110:	003f3806 	br	80adf4 <__alt_data_end+0xff80adf4>
  80b114:	9007883a 	mov	r3,r18
  80b118:	0011883a 	mov	r8,zero
  80b11c:	0005883a 	mov	r2,zero
  80b120:	003f4c06 	br	80ae54 <__alt_data_end+0xff80ae54>
  80b124:	498cb03a 	or	r6,r9,r6
  80b128:	300cc03a 	cmpne	r6,r6,zero
  80b12c:	0007883a 	mov	r3,zero
  80b130:	003f6806 	br	80aed4 <__alt_data_end+0xff80aed4>
  80b134:	20009c1e 	bne	r4,zero,80b3a8 <__adddf3+0x630>
  80b138:	80800044 	addi	r2,r16,1
  80b13c:	1141ffcc 	andi	r5,r2,2047
  80b140:	01000044 	movi	r4,1
  80b144:	2140670e 	bge	r4,r5,80b2e4 <__adddf3+0x56c>
  80b148:	0101ffc4 	movi	r4,2047
  80b14c:	11007f26 	beq	r2,r4,80b34c <__adddf3+0x5d4>
  80b150:	898d883a 	add	r6,r17,r6
  80b154:	4247883a 	add	r3,r8,r9
  80b158:	3451803a 	cmpltu	r8,r6,r17
  80b15c:	40d1883a 	add	r8,r8,r3
  80b160:	402297fa 	slli	r17,r8,31
  80b164:	300cd07a 	srli	r6,r6,1
  80b168:	4010d07a 	srli	r8,r8,1
  80b16c:	1021883a 	mov	r16,r2
  80b170:	89a2b03a 	or	r17,r17,r6
  80b174:	003f1f06 	br	80adf4 <__alt_data_end+0xff80adf4>
  80b178:	0081ffc4 	movi	r2,2047
  80b17c:	80bf481e 	bne	r16,r2,80aea0 <__alt_data_end+0xff80aea0>
  80b180:	003f1c06 	br	80adf4 <__alt_data_end+0xff80adf4>
  80b184:	843ff844 	addi	r16,r16,-31
  80b188:	01000804 	movi	r4,32
  80b18c:	1406d83a 	srl	r3,r2,r16
  80b190:	41005026 	beq	r8,r4,80b2d4 <__adddf3+0x55c>
  80b194:	01001004 	movi	r4,64
  80b198:	2211c83a 	sub	r8,r4,r8
  80b19c:	1204983a 	sll	r2,r2,r8
  80b1a0:	88a2b03a 	or	r17,r17,r2
  80b1a4:	8822c03a 	cmpne	r17,r17,zero
  80b1a8:	1c62b03a 	or	r17,r3,r17
  80b1ac:	0011883a 	mov	r8,zero
  80b1b0:	0021883a 	mov	r16,zero
  80b1b4:	003f7106 	br	80af7c <__alt_data_end+0xff80af7c>
  80b1b8:	193ff804 	addi	r4,r3,-32
  80b1bc:	00800804 	movi	r2,32
  80b1c0:	4908d83a 	srl	r4,r9,r4
  80b1c4:	18804526 	beq	r3,r2,80b2dc <__adddf3+0x564>
  80b1c8:	00801004 	movi	r2,64
  80b1cc:	10c5c83a 	sub	r2,r2,r3
  80b1d0:	4886983a 	sll	r3,r9,r2
  80b1d4:	198cb03a 	or	r6,r3,r6
  80b1d8:	300cc03a 	cmpne	r6,r6,zero
  80b1dc:	218cb03a 	or	r6,r4,r6
  80b1e0:	0007883a 	mov	r3,zero
  80b1e4:	003f3b06 	br	80aed4 <__alt_data_end+0xff80aed4>
  80b1e8:	80002a26 	beq	r16,zero,80b294 <__adddf3+0x51c>
  80b1ec:	0101ffc4 	movi	r4,2047
  80b1f0:	11006826 	beq	r2,r4,80b394 <__adddf3+0x61c>
  80b1f4:	00c7c83a 	sub	r3,zero,r3
  80b1f8:	42002034 	orhi	r8,r8,128
  80b1fc:	01000e04 	movi	r4,56
  80b200:	20c07c16 	blt	r4,r3,80b3f4 <__adddf3+0x67c>
  80b204:	010007c4 	movi	r4,31
  80b208:	20c0da16 	blt	r4,r3,80b574 <__adddf3+0x7fc>
  80b20c:	01000804 	movi	r4,32
  80b210:	20c9c83a 	sub	r4,r4,r3
  80b214:	4114983a 	sll	r10,r8,r4
  80b218:	88cad83a 	srl	r5,r17,r3
  80b21c:	8908983a 	sll	r4,r17,r4
  80b220:	40c6d83a 	srl	r3,r8,r3
  80b224:	5162b03a 	or	r17,r10,r5
  80b228:	2008c03a 	cmpne	r4,r4,zero
  80b22c:	8922b03a 	or	r17,r17,r4
  80b230:	3463c83a 	sub	r17,r6,r17
  80b234:	48c7c83a 	sub	r3,r9,r3
  80b238:	344d803a 	cmpltu	r6,r6,r17
  80b23c:	1991c83a 	sub	r8,r3,r6
  80b240:	1021883a 	mov	r16,r2
  80b244:	3825883a 	mov	r18,r7
  80b248:	003f2706 	br	80aee8 <__alt_data_end+0xff80aee8>
  80b24c:	24d0b03a 	or	r8,r4,r19
  80b250:	40001b1e 	bne	r8,zero,80b2c0 <__adddf3+0x548>
  80b254:	0005883a 	mov	r2,zero
  80b258:	0007883a 	mov	r3,zero
  80b25c:	0021883a 	mov	r16,zero
  80b260:	003f4d06 	br	80af98 <__alt_data_end+0xff80af98>
  80b264:	008007c4 	movi	r2,31
  80b268:	11003c16 	blt	r2,r4,80b35c <__adddf3+0x5e4>
  80b26c:	00800804 	movi	r2,32
  80b270:	1105c83a 	sub	r2,r2,r4
  80b274:	488e983a 	sll	r7,r9,r2
  80b278:	310ad83a 	srl	r5,r6,r4
  80b27c:	3084983a 	sll	r2,r6,r2
  80b280:	4912d83a 	srl	r9,r9,r4
  80b284:	394ab03a 	or	r5,r7,r5
  80b288:	1004c03a 	cmpne	r2,r2,zero
  80b28c:	288ab03a 	or	r5,r5,r2
  80b290:	003f5306 	br	80afe0 <__alt_data_end+0xff80afe0>
  80b294:	4448b03a 	or	r4,r8,r17
  80b298:	20003e26 	beq	r4,zero,80b394 <__adddf3+0x61c>
  80b29c:	00c6303a 	nor	r3,zero,r3
  80b2a0:	18003a1e 	bne	r3,zero,80b38c <__adddf3+0x614>
  80b2a4:	3463c83a 	sub	r17,r6,r17
  80b2a8:	4a07c83a 	sub	r3,r9,r8
  80b2ac:	344d803a 	cmpltu	r6,r6,r17
  80b2b0:	1991c83a 	sub	r8,r3,r6
  80b2b4:	1021883a 	mov	r16,r2
  80b2b8:	3825883a 	mov	r18,r7
  80b2bc:	003f0a06 	br	80aee8 <__alt_data_end+0xff80aee8>
  80b2c0:	2023883a 	mov	r17,r4
  80b2c4:	003f0d06 	br	80aefc <__alt_data_end+0xff80aefc>
  80b2c8:	0081ffc4 	movi	r2,2047
  80b2cc:	80bf3f1e 	bne	r16,r2,80afcc <__alt_data_end+0xff80afcc>
  80b2d0:	003ec806 	br	80adf4 <__alt_data_end+0xff80adf4>
  80b2d4:	0005883a 	mov	r2,zero
  80b2d8:	003fb106 	br	80b1a0 <__alt_data_end+0xff80b1a0>
  80b2dc:	0007883a 	mov	r3,zero
  80b2e0:	003fbc06 	br	80b1d4 <__alt_data_end+0xff80b1d4>
  80b2e4:	4444b03a 	or	r2,r8,r17
  80b2e8:	8000871e 	bne	r16,zero,80b508 <__adddf3+0x790>
  80b2ec:	1000ba26 	beq	r2,zero,80b5d8 <__adddf3+0x860>
  80b2f0:	4984b03a 	or	r2,r9,r6
  80b2f4:	103ebf26 	beq	r2,zero,80adf4 <__alt_data_end+0xff80adf4>
  80b2f8:	8985883a 	add	r2,r17,r6
  80b2fc:	4247883a 	add	r3,r8,r9
  80b300:	1451803a 	cmpltu	r8,r2,r17
  80b304:	40d1883a 	add	r8,r8,r3
  80b308:	40c0202c 	andhi	r3,r8,128
  80b30c:	1023883a 	mov	r17,r2
  80b310:	183f1a26 	beq	r3,zero,80af7c <__alt_data_end+0xff80af7c>
  80b314:	00bfe034 	movhi	r2,65408
  80b318:	10bfffc4 	addi	r2,r2,-1
  80b31c:	2021883a 	mov	r16,r4
  80b320:	4090703a 	and	r8,r8,r2
  80b324:	003eb306 	br	80adf4 <__alt_data_end+0xff80adf4>
  80b328:	4444b03a 	or	r2,r8,r17
  80b32c:	8000291e 	bne	r16,zero,80b3d4 <__adddf3+0x65c>
  80b330:	10004b1e 	bne	r2,zero,80b460 <__adddf3+0x6e8>
  80b334:	4990b03a 	or	r8,r9,r6
  80b338:	40008b26 	beq	r8,zero,80b568 <__adddf3+0x7f0>
  80b33c:	4811883a 	mov	r8,r9
  80b340:	3023883a 	mov	r17,r6
  80b344:	3825883a 	mov	r18,r7
  80b348:	003eaa06 	br	80adf4 <__alt_data_end+0xff80adf4>
  80b34c:	1021883a 	mov	r16,r2
  80b350:	0011883a 	mov	r8,zero
  80b354:	0005883a 	mov	r2,zero
  80b358:	003f0f06 	br	80af98 <__alt_data_end+0xff80af98>
  80b35c:	217ff804 	addi	r5,r4,-32
  80b360:	00800804 	movi	r2,32
  80b364:	494ad83a 	srl	r5,r9,r5
  80b368:	20807d26 	beq	r4,r2,80b560 <__adddf3+0x7e8>
  80b36c:	00801004 	movi	r2,64
  80b370:	1109c83a 	sub	r4,r2,r4
  80b374:	4912983a 	sll	r9,r9,r4
  80b378:	498cb03a 	or	r6,r9,r6
  80b37c:	300cc03a 	cmpne	r6,r6,zero
  80b380:	298ab03a 	or	r5,r5,r6
  80b384:	0013883a 	mov	r9,zero
  80b388:	003f1506 	br	80afe0 <__alt_data_end+0xff80afe0>
  80b38c:	0101ffc4 	movi	r4,2047
  80b390:	113f9a1e 	bne	r2,r4,80b1fc <__alt_data_end+0xff80b1fc>
  80b394:	4811883a 	mov	r8,r9
  80b398:	3023883a 	mov	r17,r6
  80b39c:	1021883a 	mov	r16,r2
  80b3a0:	3825883a 	mov	r18,r7
  80b3a4:	003e9306 	br	80adf4 <__alt_data_end+0xff80adf4>
  80b3a8:	8000161e 	bne	r16,zero,80b404 <__adddf3+0x68c>
  80b3ac:	444ab03a 	or	r5,r8,r17
  80b3b0:	28005126 	beq	r5,zero,80b4f8 <__adddf3+0x780>
  80b3b4:	0108303a 	nor	r4,zero,r4
  80b3b8:	20004d1e 	bne	r4,zero,80b4f0 <__adddf3+0x778>
  80b3bc:	89a3883a 	add	r17,r17,r6
  80b3c0:	4253883a 	add	r9,r8,r9
  80b3c4:	898d803a 	cmpltu	r6,r17,r6
  80b3c8:	3251883a 	add	r8,r6,r9
  80b3cc:	1021883a 	mov	r16,r2
  80b3d0:	003f0806 	br	80aff4 <__alt_data_end+0xff80aff4>
  80b3d4:	1000301e 	bne	r2,zero,80b498 <__adddf3+0x720>
  80b3d8:	4984b03a 	or	r2,r9,r6
  80b3dc:	10007126 	beq	r2,zero,80b5a4 <__adddf3+0x82c>
  80b3e0:	4811883a 	mov	r8,r9
  80b3e4:	3023883a 	mov	r17,r6
  80b3e8:	3825883a 	mov	r18,r7
  80b3ec:	0401ffc4 	movi	r16,2047
  80b3f0:	003e8006 	br	80adf4 <__alt_data_end+0xff80adf4>
  80b3f4:	4462b03a 	or	r17,r8,r17
  80b3f8:	8822c03a 	cmpne	r17,r17,zero
  80b3fc:	0007883a 	mov	r3,zero
  80b400:	003f8b06 	br	80b230 <__alt_data_end+0xff80b230>
  80b404:	0141ffc4 	movi	r5,2047
  80b408:	11403b26 	beq	r2,r5,80b4f8 <__adddf3+0x780>
  80b40c:	0109c83a 	sub	r4,zero,r4
  80b410:	42002034 	orhi	r8,r8,128
  80b414:	01400e04 	movi	r5,56
  80b418:	29006716 	blt	r5,r4,80b5b8 <__adddf3+0x840>
  80b41c:	014007c4 	movi	r5,31
  80b420:	29007016 	blt	r5,r4,80b5e4 <__adddf3+0x86c>
  80b424:	01400804 	movi	r5,32
  80b428:	290bc83a 	sub	r5,r5,r4
  80b42c:	4154983a 	sll	r10,r8,r5
  80b430:	890ed83a 	srl	r7,r17,r4
  80b434:	894a983a 	sll	r5,r17,r5
  80b438:	4108d83a 	srl	r4,r8,r4
  80b43c:	51e2b03a 	or	r17,r10,r7
  80b440:	280ac03a 	cmpne	r5,r5,zero
  80b444:	8962b03a 	or	r17,r17,r5
  80b448:	89a3883a 	add	r17,r17,r6
  80b44c:	2253883a 	add	r9,r4,r9
  80b450:	898d803a 	cmpltu	r6,r17,r6
  80b454:	3251883a 	add	r8,r6,r9
  80b458:	1021883a 	mov	r16,r2
  80b45c:	003ee506 	br	80aff4 <__alt_data_end+0xff80aff4>
  80b460:	4984b03a 	or	r2,r9,r6
  80b464:	103e6326 	beq	r2,zero,80adf4 <__alt_data_end+0xff80adf4>
  80b468:	8987c83a 	sub	r3,r17,r6
  80b46c:	88c9803a 	cmpltu	r4,r17,r3
  80b470:	4245c83a 	sub	r2,r8,r9
  80b474:	1105c83a 	sub	r2,r2,r4
  80b478:	1100202c 	andhi	r4,r2,128
  80b47c:	203ebb26 	beq	r4,zero,80af6c <__alt_data_end+0xff80af6c>
  80b480:	3463c83a 	sub	r17,r6,r17
  80b484:	4a07c83a 	sub	r3,r9,r8
  80b488:	344d803a 	cmpltu	r6,r6,r17
  80b48c:	1991c83a 	sub	r8,r3,r6
  80b490:	3825883a 	mov	r18,r7
  80b494:	003e5706 	br	80adf4 <__alt_data_end+0xff80adf4>
  80b498:	4984b03a 	or	r2,r9,r6
  80b49c:	10002e26 	beq	r2,zero,80b558 <__adddf3+0x7e0>
  80b4a0:	4004d0fa 	srli	r2,r8,3
  80b4a4:	8822d0fa 	srli	r17,r17,3
  80b4a8:	4010977a 	slli	r8,r8,29
  80b4ac:	10c0022c 	andhi	r3,r2,8
  80b4b0:	4462b03a 	or	r17,r8,r17
  80b4b4:	18000826 	beq	r3,zero,80b4d8 <__adddf3+0x760>
  80b4b8:	4808d0fa 	srli	r4,r9,3
  80b4bc:	20c0022c 	andhi	r3,r4,8
  80b4c0:	1800051e 	bne	r3,zero,80b4d8 <__adddf3+0x760>
  80b4c4:	300cd0fa 	srli	r6,r6,3
  80b4c8:	4806977a 	slli	r3,r9,29
  80b4cc:	2005883a 	mov	r2,r4
  80b4d0:	3825883a 	mov	r18,r7
  80b4d4:	19a2b03a 	or	r17,r3,r6
  80b4d8:	8810d77a 	srli	r8,r17,29
  80b4dc:	100490fa 	slli	r2,r2,3
  80b4e0:	882290fa 	slli	r17,r17,3
  80b4e4:	0401ffc4 	movi	r16,2047
  80b4e8:	4090b03a 	or	r8,r8,r2
  80b4ec:	003e4106 	br	80adf4 <__alt_data_end+0xff80adf4>
  80b4f0:	0141ffc4 	movi	r5,2047
  80b4f4:	117fc71e 	bne	r2,r5,80b414 <__alt_data_end+0xff80b414>
  80b4f8:	4811883a 	mov	r8,r9
  80b4fc:	3023883a 	mov	r17,r6
  80b500:	1021883a 	mov	r16,r2
  80b504:	003e3b06 	br	80adf4 <__alt_data_end+0xff80adf4>
  80b508:	10002f26 	beq	r2,zero,80b5c8 <__adddf3+0x850>
  80b50c:	4984b03a 	or	r2,r9,r6
  80b510:	10001126 	beq	r2,zero,80b558 <__adddf3+0x7e0>
  80b514:	4004d0fa 	srli	r2,r8,3
  80b518:	8822d0fa 	srli	r17,r17,3
  80b51c:	4010977a 	slli	r8,r8,29
  80b520:	10c0022c 	andhi	r3,r2,8
  80b524:	4462b03a 	or	r17,r8,r17
  80b528:	183feb26 	beq	r3,zero,80b4d8 <__alt_data_end+0xff80b4d8>
  80b52c:	4808d0fa 	srli	r4,r9,3
  80b530:	20c0022c 	andhi	r3,r4,8
  80b534:	183fe81e 	bne	r3,zero,80b4d8 <__alt_data_end+0xff80b4d8>
  80b538:	300cd0fa 	srli	r6,r6,3
  80b53c:	4806977a 	slli	r3,r9,29
  80b540:	2005883a 	mov	r2,r4
  80b544:	19a2b03a 	or	r17,r3,r6
  80b548:	003fe306 	br	80b4d8 <__alt_data_end+0xff80b4d8>
  80b54c:	0011883a 	mov	r8,zero
  80b550:	0005883a 	mov	r2,zero
  80b554:	003e3f06 	br	80ae54 <__alt_data_end+0xff80ae54>
  80b558:	0401ffc4 	movi	r16,2047
  80b55c:	003e2506 	br	80adf4 <__alt_data_end+0xff80adf4>
  80b560:	0013883a 	mov	r9,zero
  80b564:	003f8406 	br	80b378 <__alt_data_end+0xff80b378>
  80b568:	0005883a 	mov	r2,zero
  80b56c:	0007883a 	mov	r3,zero
  80b570:	003e8906 	br	80af98 <__alt_data_end+0xff80af98>
  80b574:	197ff804 	addi	r5,r3,-32
  80b578:	01000804 	movi	r4,32
  80b57c:	414ad83a 	srl	r5,r8,r5
  80b580:	19002426 	beq	r3,r4,80b614 <__adddf3+0x89c>
  80b584:	01001004 	movi	r4,64
  80b588:	20c7c83a 	sub	r3,r4,r3
  80b58c:	40c6983a 	sll	r3,r8,r3
  80b590:	1c46b03a 	or	r3,r3,r17
  80b594:	1806c03a 	cmpne	r3,r3,zero
  80b598:	28e2b03a 	or	r17,r5,r3
  80b59c:	0007883a 	mov	r3,zero
  80b5a0:	003f2306 	br	80b230 <__alt_data_end+0xff80b230>
  80b5a4:	0007883a 	mov	r3,zero
  80b5a8:	5811883a 	mov	r8,r11
  80b5ac:	00bfffc4 	movi	r2,-1
  80b5b0:	0401ffc4 	movi	r16,2047
  80b5b4:	003e7806 	br	80af98 <__alt_data_end+0xff80af98>
  80b5b8:	4462b03a 	or	r17,r8,r17
  80b5bc:	8822c03a 	cmpne	r17,r17,zero
  80b5c0:	0009883a 	mov	r4,zero
  80b5c4:	003fa006 	br	80b448 <__alt_data_end+0xff80b448>
  80b5c8:	4811883a 	mov	r8,r9
  80b5cc:	3023883a 	mov	r17,r6
  80b5d0:	0401ffc4 	movi	r16,2047
  80b5d4:	003e0706 	br	80adf4 <__alt_data_end+0xff80adf4>
  80b5d8:	4811883a 	mov	r8,r9
  80b5dc:	3023883a 	mov	r17,r6
  80b5e0:	003e0406 	br	80adf4 <__alt_data_end+0xff80adf4>
  80b5e4:	21fff804 	addi	r7,r4,-32
  80b5e8:	01400804 	movi	r5,32
  80b5ec:	41ced83a 	srl	r7,r8,r7
  80b5f0:	21400a26 	beq	r4,r5,80b61c <__adddf3+0x8a4>
  80b5f4:	01401004 	movi	r5,64
  80b5f8:	2909c83a 	sub	r4,r5,r4
  80b5fc:	4108983a 	sll	r4,r8,r4
  80b600:	2448b03a 	or	r4,r4,r17
  80b604:	2008c03a 	cmpne	r4,r4,zero
  80b608:	3922b03a 	or	r17,r7,r4
  80b60c:	0009883a 	mov	r4,zero
  80b610:	003f8d06 	br	80b448 <__alt_data_end+0xff80b448>
  80b614:	0007883a 	mov	r3,zero
  80b618:	003fdd06 	br	80b590 <__alt_data_end+0xff80b590>
  80b61c:	0009883a 	mov	r4,zero
  80b620:	003ff706 	br	80b600 <__alt_data_end+0xff80b600>

0080b624 <__divdf3>:
  80b624:	defff204 	addi	sp,sp,-56
  80b628:	dd400915 	stw	r21,36(sp)
  80b62c:	282ad53a 	srli	r21,r5,20
  80b630:	dd000815 	stw	r20,32(sp)
  80b634:	2828d7fa 	srli	r20,r5,31
  80b638:	dc000415 	stw	r16,16(sp)
  80b63c:	04000434 	movhi	r16,16
  80b640:	df000c15 	stw	fp,48(sp)
  80b644:	843fffc4 	addi	r16,r16,-1
  80b648:	dfc00d15 	stw	ra,52(sp)
  80b64c:	ddc00b15 	stw	r23,44(sp)
  80b650:	dd800a15 	stw	r22,40(sp)
  80b654:	dcc00715 	stw	r19,28(sp)
  80b658:	dc800615 	stw	r18,24(sp)
  80b65c:	dc400515 	stw	r17,20(sp)
  80b660:	ad41ffcc 	andi	r21,r21,2047
  80b664:	2c20703a 	and	r16,r5,r16
  80b668:	a7003fcc 	andi	fp,r20,255
  80b66c:	a8006126 	beq	r21,zero,80b7f4 <__divdf3+0x1d0>
  80b670:	0081ffc4 	movi	r2,2047
  80b674:	2025883a 	mov	r18,r4
  80b678:	a8803726 	beq	r21,r2,80b758 <__divdf3+0x134>
  80b67c:	80800434 	orhi	r2,r16,16
  80b680:	100490fa 	slli	r2,r2,3
  80b684:	2020d77a 	srli	r16,r4,29
  80b688:	202490fa 	slli	r18,r4,3
  80b68c:	ad7f0044 	addi	r21,r21,-1023
  80b690:	80a0b03a 	or	r16,r16,r2
  80b694:	0027883a 	mov	r19,zero
  80b698:	0013883a 	mov	r9,zero
  80b69c:	3804d53a 	srli	r2,r7,20
  80b6a0:	382cd7fa 	srli	r22,r7,31
  80b6a4:	04400434 	movhi	r17,16
  80b6a8:	8c7fffc4 	addi	r17,r17,-1
  80b6ac:	1081ffcc 	andi	r2,r2,2047
  80b6b0:	3011883a 	mov	r8,r6
  80b6b4:	3c62703a 	and	r17,r7,r17
  80b6b8:	b5c03fcc 	andi	r23,r22,255
  80b6bc:	10006c26 	beq	r2,zero,80b870 <__divdf3+0x24c>
  80b6c0:	00c1ffc4 	movi	r3,2047
  80b6c4:	10c06426 	beq	r2,r3,80b858 <__divdf3+0x234>
  80b6c8:	88c00434 	orhi	r3,r17,16
  80b6cc:	180690fa 	slli	r3,r3,3
  80b6d0:	3022d77a 	srli	r17,r6,29
  80b6d4:	301090fa 	slli	r8,r6,3
  80b6d8:	10bf0044 	addi	r2,r2,-1023
  80b6dc:	88e2b03a 	or	r17,r17,r3
  80b6e0:	000f883a 	mov	r7,zero
  80b6e4:	a58cf03a 	xor	r6,r20,r22
  80b6e8:	3cc8b03a 	or	r4,r7,r19
  80b6ec:	a8abc83a 	sub	r21,r21,r2
  80b6f0:	008003c4 	movi	r2,15
  80b6f4:	3007883a 	mov	r3,r6
  80b6f8:	34c03fcc 	andi	r19,r6,255
  80b6fc:	11009036 	bltu	r2,r4,80b940 <__divdf3+0x31c>
  80b700:	200890ba 	slli	r4,r4,2
  80b704:	00802074 	movhi	r2,129
  80b708:	10adc604 	addi	r2,r2,-18664
  80b70c:	2089883a 	add	r4,r4,r2
  80b710:	20800017 	ldw	r2,0(r4)
  80b714:	1000683a 	jmp	r2
  80b718:	0080b940 	call	80b94 <__alt_mem_sdram-0x77f46c>
  80b71c:	0080b790 	cmplti	r2,zero,734
  80b720:	0080b930 	cmpltui	r2,zero,740
  80b724:	0080b784 	movi	r2,734
  80b728:	0080b930 	cmpltui	r2,zero,740
  80b72c:	0080b904 	movi	r2,740
  80b730:	0080b930 	cmpltui	r2,zero,740
  80b734:	0080b784 	movi	r2,734
  80b738:	0080b790 	cmplti	r2,zero,734
  80b73c:	0080b790 	cmplti	r2,zero,734
  80b740:	0080b904 	movi	r2,740
  80b744:	0080b784 	movi	r2,734
  80b748:	0080b774 	movhi	r2,733
  80b74c:	0080b774 	movhi	r2,733
  80b750:	0080b774 	movhi	r2,733
  80b754:	0080bc24 	muli	r2,zero,752
  80b758:	2404b03a 	or	r2,r4,r16
  80b75c:	1000661e 	bne	r2,zero,80b8f8 <__divdf3+0x2d4>
  80b760:	04c00204 	movi	r19,8
  80b764:	0021883a 	mov	r16,zero
  80b768:	0025883a 	mov	r18,zero
  80b76c:	02400084 	movi	r9,2
  80b770:	003fca06 	br	80b69c <__alt_data_end+0xff80b69c>
  80b774:	8023883a 	mov	r17,r16
  80b778:	9011883a 	mov	r8,r18
  80b77c:	e02f883a 	mov	r23,fp
  80b780:	480f883a 	mov	r7,r9
  80b784:	00800084 	movi	r2,2
  80b788:	3881311e 	bne	r7,r2,80bc50 <__divdf3+0x62c>
  80b78c:	b827883a 	mov	r19,r23
  80b790:	98c0004c 	andi	r3,r19,1
  80b794:	0081ffc4 	movi	r2,2047
  80b798:	000b883a 	mov	r5,zero
  80b79c:	0025883a 	mov	r18,zero
  80b7a0:	1004953a 	slli	r2,r2,20
  80b7a4:	18c03fcc 	andi	r3,r3,255
  80b7a8:	04400434 	movhi	r17,16
  80b7ac:	8c7fffc4 	addi	r17,r17,-1
  80b7b0:	180697fa 	slli	r3,r3,31
  80b7b4:	2c4a703a 	and	r5,r5,r17
  80b7b8:	288ab03a 	or	r5,r5,r2
  80b7bc:	28c6b03a 	or	r3,r5,r3
  80b7c0:	9005883a 	mov	r2,r18
  80b7c4:	dfc00d17 	ldw	ra,52(sp)
  80b7c8:	df000c17 	ldw	fp,48(sp)
  80b7cc:	ddc00b17 	ldw	r23,44(sp)
  80b7d0:	dd800a17 	ldw	r22,40(sp)
  80b7d4:	dd400917 	ldw	r21,36(sp)
  80b7d8:	dd000817 	ldw	r20,32(sp)
  80b7dc:	dcc00717 	ldw	r19,28(sp)
  80b7e0:	dc800617 	ldw	r18,24(sp)
  80b7e4:	dc400517 	ldw	r17,20(sp)
  80b7e8:	dc000417 	ldw	r16,16(sp)
  80b7ec:	dec00e04 	addi	sp,sp,56
  80b7f0:	f800283a 	ret
  80b7f4:	2404b03a 	or	r2,r4,r16
  80b7f8:	2027883a 	mov	r19,r4
  80b7fc:	10003926 	beq	r2,zero,80b8e4 <__divdf3+0x2c0>
  80b800:	80012e26 	beq	r16,zero,80bcbc <__divdf3+0x698>
  80b804:	8009883a 	mov	r4,r16
  80b808:	d9800315 	stw	r6,12(sp)
  80b80c:	d9c00215 	stw	r7,8(sp)
  80b810:	0800a5c0 	call	800a5c <__clzsi2>
  80b814:	d9800317 	ldw	r6,12(sp)
  80b818:	d9c00217 	ldw	r7,8(sp)
  80b81c:	113ffd44 	addi	r4,r2,-11
  80b820:	00c00704 	movi	r3,28
  80b824:	19012116 	blt	r3,r4,80bcac <__divdf3+0x688>
  80b828:	00c00744 	movi	r3,29
  80b82c:	147ffe04 	addi	r17,r2,-8
  80b830:	1907c83a 	sub	r3,r3,r4
  80b834:	8460983a 	sll	r16,r16,r17
  80b838:	98c6d83a 	srl	r3,r19,r3
  80b83c:	9c64983a 	sll	r18,r19,r17
  80b840:	1c20b03a 	or	r16,r3,r16
  80b844:	1080fcc4 	addi	r2,r2,1011
  80b848:	00abc83a 	sub	r21,zero,r2
  80b84c:	0027883a 	mov	r19,zero
  80b850:	0013883a 	mov	r9,zero
  80b854:	003f9106 	br	80b69c <__alt_data_end+0xff80b69c>
  80b858:	3446b03a 	or	r3,r6,r17
  80b85c:	18001f1e 	bne	r3,zero,80b8dc <__divdf3+0x2b8>
  80b860:	0023883a 	mov	r17,zero
  80b864:	0011883a 	mov	r8,zero
  80b868:	01c00084 	movi	r7,2
  80b86c:	003f9d06 	br	80b6e4 <__alt_data_end+0xff80b6e4>
  80b870:	3446b03a 	or	r3,r6,r17
  80b874:	18001526 	beq	r3,zero,80b8cc <__divdf3+0x2a8>
  80b878:	88011b26 	beq	r17,zero,80bce8 <__divdf3+0x6c4>
  80b87c:	8809883a 	mov	r4,r17
  80b880:	d9800315 	stw	r6,12(sp)
  80b884:	da400115 	stw	r9,4(sp)
  80b888:	0800a5c0 	call	800a5c <__clzsi2>
  80b88c:	d9800317 	ldw	r6,12(sp)
  80b890:	da400117 	ldw	r9,4(sp)
  80b894:	113ffd44 	addi	r4,r2,-11
  80b898:	00c00704 	movi	r3,28
  80b89c:	19010e16 	blt	r3,r4,80bcd8 <__divdf3+0x6b4>
  80b8a0:	00c00744 	movi	r3,29
  80b8a4:	123ffe04 	addi	r8,r2,-8
  80b8a8:	1907c83a 	sub	r3,r3,r4
  80b8ac:	8a22983a 	sll	r17,r17,r8
  80b8b0:	30c6d83a 	srl	r3,r6,r3
  80b8b4:	3210983a 	sll	r8,r6,r8
  80b8b8:	1c62b03a 	or	r17,r3,r17
  80b8bc:	1080fcc4 	addi	r2,r2,1011
  80b8c0:	0085c83a 	sub	r2,zero,r2
  80b8c4:	000f883a 	mov	r7,zero
  80b8c8:	003f8606 	br	80b6e4 <__alt_data_end+0xff80b6e4>
  80b8cc:	0023883a 	mov	r17,zero
  80b8d0:	0011883a 	mov	r8,zero
  80b8d4:	01c00044 	movi	r7,1
  80b8d8:	003f8206 	br	80b6e4 <__alt_data_end+0xff80b6e4>
  80b8dc:	01c000c4 	movi	r7,3
  80b8e0:	003f8006 	br	80b6e4 <__alt_data_end+0xff80b6e4>
  80b8e4:	04c00104 	movi	r19,4
  80b8e8:	0021883a 	mov	r16,zero
  80b8ec:	0025883a 	mov	r18,zero
  80b8f0:	02400044 	movi	r9,1
  80b8f4:	003f6906 	br	80b69c <__alt_data_end+0xff80b69c>
  80b8f8:	04c00304 	movi	r19,12
  80b8fc:	024000c4 	movi	r9,3
  80b900:	003f6606 	br	80b69c <__alt_data_end+0xff80b69c>
  80b904:	01400434 	movhi	r5,16
  80b908:	0007883a 	mov	r3,zero
  80b90c:	297fffc4 	addi	r5,r5,-1
  80b910:	04bfffc4 	movi	r18,-1
  80b914:	0081ffc4 	movi	r2,2047
  80b918:	003fa106 	br	80b7a0 <__alt_data_end+0xff80b7a0>
  80b91c:	00c00044 	movi	r3,1
  80b920:	1887c83a 	sub	r3,r3,r2
  80b924:	01000e04 	movi	r4,56
  80b928:	20c1210e 	bge	r4,r3,80bdb0 <__divdf3+0x78c>
  80b92c:	98c0004c 	andi	r3,r19,1
  80b930:	0005883a 	mov	r2,zero
  80b934:	000b883a 	mov	r5,zero
  80b938:	0025883a 	mov	r18,zero
  80b93c:	003f9806 	br	80b7a0 <__alt_data_end+0xff80b7a0>
  80b940:	8c00fd36 	bltu	r17,r16,80bd38 <__divdf3+0x714>
  80b944:	8440fb26 	beq	r16,r17,80bd34 <__divdf3+0x710>
  80b948:	8007883a 	mov	r3,r16
  80b94c:	ad7fffc4 	addi	r21,r21,-1
  80b950:	0021883a 	mov	r16,zero
  80b954:	4004d63a 	srli	r2,r8,24
  80b958:	8822923a 	slli	r17,r17,8
  80b95c:	1809883a 	mov	r4,r3
  80b960:	402c923a 	slli	r22,r8,8
  80b964:	88b8b03a 	or	fp,r17,r2
  80b968:	e028d43a 	srli	r20,fp,16
  80b96c:	d8c00015 	stw	r3,0(sp)
  80b970:	e5ffffcc 	andi	r23,fp,65535
  80b974:	a00b883a 	mov	r5,r20
  80b978:	080acbc0 	call	80acbc <__udivsi3>
  80b97c:	d8c00017 	ldw	r3,0(sp)
  80b980:	a00b883a 	mov	r5,r20
  80b984:	d8800315 	stw	r2,12(sp)
  80b988:	1809883a 	mov	r4,r3
  80b98c:	080ad200 	call	80ad20 <__umodsi3>
  80b990:	d9800317 	ldw	r6,12(sp)
  80b994:	1006943a 	slli	r3,r2,16
  80b998:	9004d43a 	srli	r2,r18,16
  80b99c:	b9a3383a 	mul	r17,r23,r6
  80b9a0:	10c4b03a 	or	r2,r2,r3
  80b9a4:	1440062e 	bgeu	r2,r17,80b9c0 <__divdf3+0x39c>
  80b9a8:	1705883a 	add	r2,r2,fp
  80b9ac:	30ffffc4 	addi	r3,r6,-1
  80b9b0:	1700ee36 	bltu	r2,fp,80bd6c <__divdf3+0x748>
  80b9b4:	1440ed2e 	bgeu	r2,r17,80bd6c <__divdf3+0x748>
  80b9b8:	31bfff84 	addi	r6,r6,-2
  80b9bc:	1705883a 	add	r2,r2,fp
  80b9c0:	1463c83a 	sub	r17,r2,r17
  80b9c4:	a00b883a 	mov	r5,r20
  80b9c8:	8809883a 	mov	r4,r17
  80b9cc:	d9800315 	stw	r6,12(sp)
  80b9d0:	080acbc0 	call	80acbc <__udivsi3>
  80b9d4:	a00b883a 	mov	r5,r20
  80b9d8:	8809883a 	mov	r4,r17
  80b9dc:	d8800215 	stw	r2,8(sp)
  80b9e0:	080ad200 	call	80ad20 <__umodsi3>
  80b9e4:	d9c00217 	ldw	r7,8(sp)
  80b9e8:	1004943a 	slli	r2,r2,16
  80b9ec:	94bfffcc 	andi	r18,r18,65535
  80b9f0:	b9d1383a 	mul	r8,r23,r7
  80b9f4:	90a4b03a 	or	r18,r18,r2
  80b9f8:	d9800317 	ldw	r6,12(sp)
  80b9fc:	9200062e 	bgeu	r18,r8,80ba18 <__divdf3+0x3f4>
  80ba00:	9725883a 	add	r18,r18,fp
  80ba04:	38bfffc4 	addi	r2,r7,-1
  80ba08:	9700d636 	bltu	r18,fp,80bd64 <__divdf3+0x740>
  80ba0c:	9200d52e 	bgeu	r18,r8,80bd64 <__divdf3+0x740>
  80ba10:	39ffff84 	addi	r7,r7,-2
  80ba14:	9725883a 	add	r18,r18,fp
  80ba18:	3004943a 	slli	r2,r6,16
  80ba1c:	b012d43a 	srli	r9,r22,16
  80ba20:	b1bfffcc 	andi	r6,r22,65535
  80ba24:	11e2b03a 	or	r17,r2,r7
  80ba28:	8806d43a 	srli	r3,r17,16
  80ba2c:	893fffcc 	andi	r4,r17,65535
  80ba30:	218b383a 	mul	r5,r4,r6
  80ba34:	30c5383a 	mul	r2,r6,r3
  80ba38:	2249383a 	mul	r4,r4,r9
  80ba3c:	280ed43a 	srli	r7,r5,16
  80ba40:	9225c83a 	sub	r18,r18,r8
  80ba44:	2089883a 	add	r4,r4,r2
  80ba48:	3909883a 	add	r4,r7,r4
  80ba4c:	1a47383a 	mul	r3,r3,r9
  80ba50:	2080022e 	bgeu	r4,r2,80ba5c <__divdf3+0x438>
  80ba54:	00800074 	movhi	r2,1
  80ba58:	1887883a 	add	r3,r3,r2
  80ba5c:	2004d43a 	srli	r2,r4,16
  80ba60:	2008943a 	slli	r4,r4,16
  80ba64:	297fffcc 	andi	r5,r5,65535
  80ba68:	10c7883a 	add	r3,r2,r3
  80ba6c:	2149883a 	add	r4,r4,r5
  80ba70:	90c0a536 	bltu	r18,r3,80bd08 <__divdf3+0x6e4>
  80ba74:	90c0bf26 	beq	r18,r3,80bd74 <__divdf3+0x750>
  80ba78:	90c7c83a 	sub	r3,r18,r3
  80ba7c:	810fc83a 	sub	r7,r16,r4
  80ba80:	81e5803a 	cmpltu	r18,r16,r7
  80ba84:	1ca5c83a 	sub	r18,r3,r18
  80ba88:	e480c126 	beq	fp,r18,80bd90 <__divdf3+0x76c>
  80ba8c:	a00b883a 	mov	r5,r20
  80ba90:	9009883a 	mov	r4,r18
  80ba94:	d9800315 	stw	r6,12(sp)
  80ba98:	d9c00215 	stw	r7,8(sp)
  80ba9c:	da400115 	stw	r9,4(sp)
  80baa0:	080acbc0 	call	80acbc <__udivsi3>
  80baa4:	a00b883a 	mov	r5,r20
  80baa8:	9009883a 	mov	r4,r18
  80baac:	d8800015 	stw	r2,0(sp)
  80bab0:	080ad200 	call	80ad20 <__umodsi3>
  80bab4:	d9c00217 	ldw	r7,8(sp)
  80bab8:	da000017 	ldw	r8,0(sp)
  80babc:	1006943a 	slli	r3,r2,16
  80bac0:	3804d43a 	srli	r2,r7,16
  80bac4:	ba21383a 	mul	r16,r23,r8
  80bac8:	d9800317 	ldw	r6,12(sp)
  80bacc:	10c4b03a 	or	r2,r2,r3
  80bad0:	da400117 	ldw	r9,4(sp)
  80bad4:	1400062e 	bgeu	r2,r16,80baf0 <__divdf3+0x4cc>
  80bad8:	1705883a 	add	r2,r2,fp
  80badc:	40ffffc4 	addi	r3,r8,-1
  80bae0:	1700ad36 	bltu	r2,fp,80bd98 <__divdf3+0x774>
  80bae4:	1400ac2e 	bgeu	r2,r16,80bd98 <__divdf3+0x774>
  80bae8:	423fff84 	addi	r8,r8,-2
  80baec:	1705883a 	add	r2,r2,fp
  80baf0:	1421c83a 	sub	r16,r2,r16
  80baf4:	a00b883a 	mov	r5,r20
  80baf8:	8009883a 	mov	r4,r16
  80bafc:	d9800315 	stw	r6,12(sp)
  80bb00:	d9c00215 	stw	r7,8(sp)
  80bb04:	da000015 	stw	r8,0(sp)
  80bb08:	da400115 	stw	r9,4(sp)
  80bb0c:	080acbc0 	call	80acbc <__udivsi3>
  80bb10:	8009883a 	mov	r4,r16
  80bb14:	a00b883a 	mov	r5,r20
  80bb18:	1025883a 	mov	r18,r2
  80bb1c:	080ad200 	call	80ad20 <__umodsi3>
  80bb20:	d9c00217 	ldw	r7,8(sp)
  80bb24:	1004943a 	slli	r2,r2,16
  80bb28:	bcaf383a 	mul	r23,r23,r18
  80bb2c:	393fffcc 	andi	r4,r7,65535
  80bb30:	2088b03a 	or	r4,r4,r2
  80bb34:	d9800317 	ldw	r6,12(sp)
  80bb38:	da000017 	ldw	r8,0(sp)
  80bb3c:	da400117 	ldw	r9,4(sp)
  80bb40:	25c0062e 	bgeu	r4,r23,80bb5c <__divdf3+0x538>
  80bb44:	2709883a 	add	r4,r4,fp
  80bb48:	90bfffc4 	addi	r2,r18,-1
  80bb4c:	27009436 	bltu	r4,fp,80bda0 <__divdf3+0x77c>
  80bb50:	25c0932e 	bgeu	r4,r23,80bda0 <__divdf3+0x77c>
  80bb54:	94bfff84 	addi	r18,r18,-2
  80bb58:	2709883a 	add	r4,r4,fp
  80bb5c:	4004943a 	slli	r2,r8,16
  80bb60:	25efc83a 	sub	r23,r4,r23
  80bb64:	1490b03a 	or	r8,r2,r18
  80bb68:	4008d43a 	srli	r4,r8,16
  80bb6c:	40ffffcc 	andi	r3,r8,65535
  80bb70:	30c5383a 	mul	r2,r6,r3
  80bb74:	1a47383a 	mul	r3,r3,r9
  80bb78:	310d383a 	mul	r6,r6,r4
  80bb7c:	100ad43a 	srli	r5,r2,16
  80bb80:	4913383a 	mul	r9,r9,r4
  80bb84:	1987883a 	add	r3,r3,r6
  80bb88:	28c7883a 	add	r3,r5,r3
  80bb8c:	1980022e 	bgeu	r3,r6,80bb98 <__divdf3+0x574>
  80bb90:	01000074 	movhi	r4,1
  80bb94:	4913883a 	add	r9,r9,r4
  80bb98:	1808d43a 	srli	r4,r3,16
  80bb9c:	1806943a 	slli	r3,r3,16
  80bba0:	10bfffcc 	andi	r2,r2,65535
  80bba4:	2253883a 	add	r9,r4,r9
  80bba8:	1887883a 	add	r3,r3,r2
  80bbac:	ba403836 	bltu	r23,r9,80bc90 <__divdf3+0x66c>
  80bbb0:	ba403626 	beq	r23,r9,80bc8c <__divdf3+0x668>
  80bbb4:	42000054 	ori	r8,r8,1
  80bbb8:	a880ffc4 	addi	r2,r21,1023
  80bbbc:	00bf570e 	bge	zero,r2,80b91c <__alt_data_end+0xff80b91c>
  80bbc0:	40c001cc 	andi	r3,r8,7
  80bbc4:	18000726 	beq	r3,zero,80bbe4 <__divdf3+0x5c0>
  80bbc8:	40c003cc 	andi	r3,r8,15
  80bbcc:	01000104 	movi	r4,4
  80bbd0:	19000426 	beq	r3,r4,80bbe4 <__divdf3+0x5c0>
  80bbd4:	4107883a 	add	r3,r8,r4
  80bbd8:	1a11803a 	cmpltu	r8,r3,r8
  80bbdc:	8a23883a 	add	r17,r17,r8
  80bbe0:	1811883a 	mov	r8,r3
  80bbe4:	88c0402c 	andhi	r3,r17,256
  80bbe8:	18000426 	beq	r3,zero,80bbfc <__divdf3+0x5d8>
  80bbec:	00ffc034 	movhi	r3,65280
  80bbf0:	18ffffc4 	addi	r3,r3,-1
  80bbf4:	a8810004 	addi	r2,r21,1024
  80bbf8:	88e2703a 	and	r17,r17,r3
  80bbfc:	00c1ff84 	movi	r3,2046
  80bc00:	18bee316 	blt	r3,r2,80b790 <__alt_data_end+0xff80b790>
  80bc04:	8824977a 	slli	r18,r17,29
  80bc08:	4010d0fa 	srli	r8,r8,3
  80bc0c:	8822927a 	slli	r17,r17,9
  80bc10:	1081ffcc 	andi	r2,r2,2047
  80bc14:	9224b03a 	or	r18,r18,r8
  80bc18:	880ad33a 	srli	r5,r17,12
  80bc1c:	98c0004c 	andi	r3,r19,1
  80bc20:	003edf06 	br	80b7a0 <__alt_data_end+0xff80b7a0>
  80bc24:	8080022c 	andhi	r2,r16,8
  80bc28:	10001226 	beq	r2,zero,80bc74 <__divdf3+0x650>
  80bc2c:	8880022c 	andhi	r2,r17,8
  80bc30:	1000101e 	bne	r2,zero,80bc74 <__divdf3+0x650>
  80bc34:	00800434 	movhi	r2,16
  80bc38:	89400234 	orhi	r5,r17,8
  80bc3c:	10bfffc4 	addi	r2,r2,-1
  80bc40:	b007883a 	mov	r3,r22
  80bc44:	288a703a 	and	r5,r5,r2
  80bc48:	4025883a 	mov	r18,r8
  80bc4c:	003f3106 	br	80b914 <__alt_data_end+0xff80b914>
  80bc50:	008000c4 	movi	r2,3
  80bc54:	3880a626 	beq	r7,r2,80bef0 <__divdf3+0x8cc>
  80bc58:	00800044 	movi	r2,1
  80bc5c:	3880521e 	bne	r7,r2,80bda8 <__divdf3+0x784>
  80bc60:	b807883a 	mov	r3,r23
  80bc64:	0005883a 	mov	r2,zero
  80bc68:	000b883a 	mov	r5,zero
  80bc6c:	0025883a 	mov	r18,zero
  80bc70:	003ecb06 	br	80b7a0 <__alt_data_end+0xff80b7a0>
  80bc74:	00800434 	movhi	r2,16
  80bc78:	81400234 	orhi	r5,r16,8
  80bc7c:	10bfffc4 	addi	r2,r2,-1
  80bc80:	a007883a 	mov	r3,r20
  80bc84:	288a703a 	and	r5,r5,r2
  80bc88:	003f2206 	br	80b914 <__alt_data_end+0xff80b914>
  80bc8c:	183fca26 	beq	r3,zero,80bbb8 <__alt_data_end+0xff80bbb8>
  80bc90:	e5ef883a 	add	r23,fp,r23
  80bc94:	40bfffc4 	addi	r2,r8,-1
  80bc98:	bf00392e 	bgeu	r23,fp,80bd80 <__divdf3+0x75c>
  80bc9c:	1011883a 	mov	r8,r2
  80bca0:	ba7fc41e 	bne	r23,r9,80bbb4 <__alt_data_end+0xff80bbb4>
  80bca4:	b0ffc31e 	bne	r22,r3,80bbb4 <__alt_data_end+0xff80bbb4>
  80bca8:	003fc306 	br	80bbb8 <__alt_data_end+0xff80bbb8>
  80bcac:	143ff604 	addi	r16,r2,-40
  80bcb0:	9c20983a 	sll	r16,r19,r16
  80bcb4:	0025883a 	mov	r18,zero
  80bcb8:	003ee206 	br	80b844 <__alt_data_end+0xff80b844>
  80bcbc:	d9800315 	stw	r6,12(sp)
  80bcc0:	d9c00215 	stw	r7,8(sp)
  80bcc4:	0800a5c0 	call	800a5c <__clzsi2>
  80bcc8:	10800804 	addi	r2,r2,32
  80bccc:	d9c00217 	ldw	r7,8(sp)
  80bcd0:	d9800317 	ldw	r6,12(sp)
  80bcd4:	003ed106 	br	80b81c <__alt_data_end+0xff80b81c>
  80bcd8:	147ff604 	addi	r17,r2,-40
  80bcdc:	3462983a 	sll	r17,r6,r17
  80bce0:	0011883a 	mov	r8,zero
  80bce4:	003ef506 	br	80b8bc <__alt_data_end+0xff80b8bc>
  80bce8:	3009883a 	mov	r4,r6
  80bcec:	d9800315 	stw	r6,12(sp)
  80bcf0:	da400115 	stw	r9,4(sp)
  80bcf4:	0800a5c0 	call	800a5c <__clzsi2>
  80bcf8:	10800804 	addi	r2,r2,32
  80bcfc:	da400117 	ldw	r9,4(sp)
  80bd00:	d9800317 	ldw	r6,12(sp)
  80bd04:	003ee306 	br	80b894 <__alt_data_end+0xff80b894>
  80bd08:	85a1883a 	add	r16,r16,r22
  80bd0c:	8585803a 	cmpltu	r2,r16,r22
  80bd10:	1705883a 	add	r2,r2,fp
  80bd14:	14a5883a 	add	r18,r2,r18
  80bd18:	88bfffc4 	addi	r2,r17,-1
  80bd1c:	e4800c2e 	bgeu	fp,r18,80bd50 <__divdf3+0x72c>
  80bd20:	90c03e36 	bltu	r18,r3,80be1c <__divdf3+0x7f8>
  80bd24:	1c806926 	beq	r3,r18,80becc <__divdf3+0x8a8>
  80bd28:	90c7c83a 	sub	r3,r18,r3
  80bd2c:	1023883a 	mov	r17,r2
  80bd30:	003f5206 	br	80ba7c <__alt_data_end+0xff80ba7c>
  80bd34:	923f0436 	bltu	r18,r8,80b948 <__alt_data_end+0xff80b948>
  80bd38:	800897fa 	slli	r4,r16,31
  80bd3c:	9004d07a 	srli	r2,r18,1
  80bd40:	8006d07a 	srli	r3,r16,1
  80bd44:	902097fa 	slli	r16,r18,31
  80bd48:	20a4b03a 	or	r18,r4,r2
  80bd4c:	003f0106 	br	80b954 <__alt_data_end+0xff80b954>
  80bd50:	e4bff51e 	bne	fp,r18,80bd28 <__alt_data_end+0xff80bd28>
  80bd54:	85bff22e 	bgeu	r16,r22,80bd20 <__alt_data_end+0xff80bd20>
  80bd58:	e0c7c83a 	sub	r3,fp,r3
  80bd5c:	1023883a 	mov	r17,r2
  80bd60:	003f4606 	br	80ba7c <__alt_data_end+0xff80ba7c>
  80bd64:	100f883a 	mov	r7,r2
  80bd68:	003f2b06 	br	80ba18 <__alt_data_end+0xff80ba18>
  80bd6c:	180d883a 	mov	r6,r3
  80bd70:	003f1306 	br	80b9c0 <__alt_data_end+0xff80b9c0>
  80bd74:	813fe436 	bltu	r16,r4,80bd08 <__alt_data_end+0xff80bd08>
  80bd78:	0007883a 	mov	r3,zero
  80bd7c:	003f3f06 	br	80ba7c <__alt_data_end+0xff80ba7c>
  80bd80:	ba402c36 	bltu	r23,r9,80be34 <__divdf3+0x810>
  80bd84:	4dc05426 	beq	r9,r23,80bed8 <__divdf3+0x8b4>
  80bd88:	1011883a 	mov	r8,r2
  80bd8c:	003f8906 	br	80bbb4 <__alt_data_end+0xff80bbb4>
  80bd90:	023fffc4 	movi	r8,-1
  80bd94:	003f8806 	br	80bbb8 <__alt_data_end+0xff80bbb8>
  80bd98:	1811883a 	mov	r8,r3
  80bd9c:	003f5406 	br	80baf0 <__alt_data_end+0xff80baf0>
  80bda0:	1025883a 	mov	r18,r2
  80bda4:	003f6d06 	br	80bb5c <__alt_data_end+0xff80bb5c>
  80bda8:	b827883a 	mov	r19,r23
  80bdac:	003f8206 	br	80bbb8 <__alt_data_end+0xff80bbb8>
  80bdb0:	010007c4 	movi	r4,31
  80bdb4:	20c02616 	blt	r4,r3,80be50 <__divdf3+0x82c>
  80bdb8:	00800804 	movi	r2,32
  80bdbc:	10c5c83a 	sub	r2,r2,r3
  80bdc0:	888a983a 	sll	r5,r17,r2
  80bdc4:	40c8d83a 	srl	r4,r8,r3
  80bdc8:	4084983a 	sll	r2,r8,r2
  80bdcc:	88e2d83a 	srl	r17,r17,r3
  80bdd0:	2906b03a 	or	r3,r5,r4
  80bdd4:	1004c03a 	cmpne	r2,r2,zero
  80bdd8:	1886b03a 	or	r3,r3,r2
  80bddc:	188001cc 	andi	r2,r3,7
  80bde0:	10000726 	beq	r2,zero,80be00 <__divdf3+0x7dc>
  80bde4:	188003cc 	andi	r2,r3,15
  80bde8:	01000104 	movi	r4,4
  80bdec:	11000426 	beq	r2,r4,80be00 <__divdf3+0x7dc>
  80bdf0:	1805883a 	mov	r2,r3
  80bdf4:	10c00104 	addi	r3,r2,4
  80bdf8:	1885803a 	cmpltu	r2,r3,r2
  80bdfc:	88a3883a 	add	r17,r17,r2
  80be00:	8880202c 	andhi	r2,r17,128
  80be04:	10002726 	beq	r2,zero,80bea4 <__divdf3+0x880>
  80be08:	98c0004c 	andi	r3,r19,1
  80be0c:	00800044 	movi	r2,1
  80be10:	000b883a 	mov	r5,zero
  80be14:	0025883a 	mov	r18,zero
  80be18:	003e6106 	br	80b7a0 <__alt_data_end+0xff80b7a0>
  80be1c:	85a1883a 	add	r16,r16,r22
  80be20:	8585803a 	cmpltu	r2,r16,r22
  80be24:	1705883a 	add	r2,r2,fp
  80be28:	14a5883a 	add	r18,r2,r18
  80be2c:	8c7fff84 	addi	r17,r17,-2
  80be30:	003f1106 	br	80ba78 <__alt_data_end+0xff80ba78>
  80be34:	b589883a 	add	r4,r22,r22
  80be38:	25ad803a 	cmpltu	r22,r4,r22
  80be3c:	b739883a 	add	fp,r22,fp
  80be40:	40bfff84 	addi	r2,r8,-2
  80be44:	bf2f883a 	add	r23,r23,fp
  80be48:	202d883a 	mov	r22,r4
  80be4c:	003f9306 	br	80bc9c <__alt_data_end+0xff80bc9c>
  80be50:	013ff844 	movi	r4,-31
  80be54:	2085c83a 	sub	r2,r4,r2
  80be58:	8888d83a 	srl	r4,r17,r2
  80be5c:	00800804 	movi	r2,32
  80be60:	18802126 	beq	r3,r2,80bee8 <__divdf3+0x8c4>
  80be64:	00801004 	movi	r2,64
  80be68:	10c5c83a 	sub	r2,r2,r3
  80be6c:	8884983a 	sll	r2,r17,r2
  80be70:	1204b03a 	or	r2,r2,r8
  80be74:	1004c03a 	cmpne	r2,r2,zero
  80be78:	2084b03a 	or	r2,r4,r2
  80be7c:	144001cc 	andi	r17,r2,7
  80be80:	88000d1e 	bne	r17,zero,80beb8 <__divdf3+0x894>
  80be84:	000b883a 	mov	r5,zero
  80be88:	1024d0fa 	srli	r18,r2,3
  80be8c:	98c0004c 	andi	r3,r19,1
  80be90:	0005883a 	mov	r2,zero
  80be94:	9464b03a 	or	r18,r18,r17
  80be98:	003e4106 	br	80b7a0 <__alt_data_end+0xff80b7a0>
  80be9c:	1007883a 	mov	r3,r2
  80bea0:	0023883a 	mov	r17,zero
  80bea4:	880a927a 	slli	r5,r17,9
  80bea8:	1805883a 	mov	r2,r3
  80beac:	8822977a 	slli	r17,r17,29
  80beb0:	280ad33a 	srli	r5,r5,12
  80beb4:	003ff406 	br	80be88 <__alt_data_end+0xff80be88>
  80beb8:	10c003cc 	andi	r3,r2,15
  80bebc:	01000104 	movi	r4,4
  80bec0:	193ff626 	beq	r3,r4,80be9c <__alt_data_end+0xff80be9c>
  80bec4:	0023883a 	mov	r17,zero
  80bec8:	003fca06 	br	80bdf4 <__alt_data_end+0xff80bdf4>
  80becc:	813fd336 	bltu	r16,r4,80be1c <__alt_data_end+0xff80be1c>
  80bed0:	1023883a 	mov	r17,r2
  80bed4:	003fa806 	br	80bd78 <__alt_data_end+0xff80bd78>
  80bed8:	b0ffd636 	bltu	r22,r3,80be34 <__alt_data_end+0xff80be34>
  80bedc:	1011883a 	mov	r8,r2
  80bee0:	b0ff341e 	bne	r22,r3,80bbb4 <__alt_data_end+0xff80bbb4>
  80bee4:	003f3406 	br	80bbb8 <__alt_data_end+0xff80bbb8>
  80bee8:	0005883a 	mov	r2,zero
  80beec:	003fe006 	br	80be70 <__alt_data_end+0xff80be70>
  80bef0:	00800434 	movhi	r2,16
  80bef4:	89400234 	orhi	r5,r17,8
  80bef8:	10bfffc4 	addi	r2,r2,-1
  80befc:	b807883a 	mov	r3,r23
  80bf00:	288a703a 	and	r5,r5,r2
  80bf04:	4025883a 	mov	r18,r8
  80bf08:	003e8206 	br	80b914 <__alt_data_end+0xff80b914>

0080bf0c <__eqdf2>:
  80bf0c:	2804d53a 	srli	r2,r5,20
  80bf10:	3806d53a 	srli	r3,r7,20
  80bf14:	02000434 	movhi	r8,16
  80bf18:	423fffc4 	addi	r8,r8,-1
  80bf1c:	1081ffcc 	andi	r2,r2,2047
  80bf20:	0281ffc4 	movi	r10,2047
  80bf24:	2a12703a 	and	r9,r5,r8
  80bf28:	18c1ffcc 	andi	r3,r3,2047
  80bf2c:	3a10703a 	and	r8,r7,r8
  80bf30:	280ad7fa 	srli	r5,r5,31
  80bf34:	380ed7fa 	srli	r7,r7,31
  80bf38:	12801026 	beq	r2,r10,80bf7c <__eqdf2+0x70>
  80bf3c:	0281ffc4 	movi	r10,2047
  80bf40:	1a800a26 	beq	r3,r10,80bf6c <__eqdf2+0x60>
  80bf44:	10c00226 	beq	r2,r3,80bf50 <__eqdf2+0x44>
  80bf48:	00800044 	movi	r2,1
  80bf4c:	f800283a 	ret
  80bf50:	4a3ffd1e 	bne	r9,r8,80bf48 <__alt_data_end+0xff80bf48>
  80bf54:	21bffc1e 	bne	r4,r6,80bf48 <__alt_data_end+0xff80bf48>
  80bf58:	29c00c26 	beq	r5,r7,80bf8c <__eqdf2+0x80>
  80bf5c:	103ffa1e 	bne	r2,zero,80bf48 <__alt_data_end+0xff80bf48>
  80bf60:	2244b03a 	or	r2,r4,r9
  80bf64:	1004c03a 	cmpne	r2,r2,zero
  80bf68:	f800283a 	ret
  80bf6c:	3214b03a 	or	r10,r6,r8
  80bf70:	503ff426 	beq	r10,zero,80bf44 <__alt_data_end+0xff80bf44>
  80bf74:	00800044 	movi	r2,1
  80bf78:	f800283a 	ret
  80bf7c:	2254b03a 	or	r10,r4,r9
  80bf80:	503fee26 	beq	r10,zero,80bf3c <__alt_data_end+0xff80bf3c>
  80bf84:	00800044 	movi	r2,1
  80bf88:	f800283a 	ret
  80bf8c:	0005883a 	mov	r2,zero
  80bf90:	f800283a 	ret

0080bf94 <__gedf2>:
  80bf94:	2804d53a 	srli	r2,r5,20
  80bf98:	3806d53a 	srli	r3,r7,20
  80bf9c:	02000434 	movhi	r8,16
  80bfa0:	423fffc4 	addi	r8,r8,-1
  80bfa4:	1081ffcc 	andi	r2,r2,2047
  80bfa8:	0241ffc4 	movi	r9,2047
  80bfac:	2a14703a 	and	r10,r5,r8
  80bfb0:	18c1ffcc 	andi	r3,r3,2047
  80bfb4:	3a10703a 	and	r8,r7,r8
  80bfb8:	280ad7fa 	srli	r5,r5,31
  80bfbc:	380ed7fa 	srli	r7,r7,31
  80bfc0:	12401d26 	beq	r2,r9,80c038 <__gedf2+0xa4>
  80bfc4:	0241ffc4 	movi	r9,2047
  80bfc8:	1a401226 	beq	r3,r9,80c014 <__gedf2+0x80>
  80bfcc:	1000081e 	bne	r2,zero,80bff0 <__gedf2+0x5c>
  80bfd0:	2296b03a 	or	r11,r4,r10
  80bfd4:	5813003a 	cmpeq	r9,r11,zero
  80bfd8:	1800091e 	bne	r3,zero,80c000 <__gedf2+0x6c>
  80bfdc:	3218b03a 	or	r12,r6,r8
  80bfe0:	6000071e 	bne	r12,zero,80c000 <__gedf2+0x6c>
  80bfe4:	0005883a 	mov	r2,zero
  80bfe8:	5800101e 	bne	r11,zero,80c02c <__gedf2+0x98>
  80bfec:	f800283a 	ret
  80bff0:	18000c1e 	bne	r3,zero,80c024 <__gedf2+0x90>
  80bff4:	3212b03a 	or	r9,r6,r8
  80bff8:	48000c26 	beq	r9,zero,80c02c <__gedf2+0x98>
  80bffc:	0013883a 	mov	r9,zero
  80c000:	39c03fcc 	andi	r7,r7,255
  80c004:	48000826 	beq	r9,zero,80c028 <__gedf2+0x94>
  80c008:	38000926 	beq	r7,zero,80c030 <__gedf2+0x9c>
  80c00c:	00800044 	movi	r2,1
  80c010:	f800283a 	ret
  80c014:	3212b03a 	or	r9,r6,r8
  80c018:	483fec26 	beq	r9,zero,80bfcc <__alt_data_end+0xff80bfcc>
  80c01c:	00bfff84 	movi	r2,-2
  80c020:	f800283a 	ret
  80c024:	39c03fcc 	andi	r7,r7,255
  80c028:	29c00626 	beq	r5,r7,80c044 <__gedf2+0xb0>
  80c02c:	283ff726 	beq	r5,zero,80c00c <__alt_data_end+0xff80c00c>
  80c030:	00bfffc4 	movi	r2,-1
  80c034:	f800283a 	ret
  80c038:	2292b03a 	or	r9,r4,r10
  80c03c:	483fe126 	beq	r9,zero,80bfc4 <__alt_data_end+0xff80bfc4>
  80c040:	003ff606 	br	80c01c <__alt_data_end+0xff80c01c>
  80c044:	18bff916 	blt	r3,r2,80c02c <__alt_data_end+0xff80c02c>
  80c048:	10c00316 	blt	r2,r3,80c058 <__gedf2+0xc4>
  80c04c:	42bff736 	bltu	r8,r10,80c02c <__alt_data_end+0xff80c02c>
  80c050:	52000326 	beq	r10,r8,80c060 <__gedf2+0xcc>
  80c054:	5200042e 	bgeu	r10,r8,80c068 <__gedf2+0xd4>
  80c058:	283fec1e 	bne	r5,zero,80c00c <__alt_data_end+0xff80c00c>
  80c05c:	003ff406 	br	80c030 <__alt_data_end+0xff80c030>
  80c060:	313ff236 	bltu	r6,r4,80c02c <__alt_data_end+0xff80c02c>
  80c064:	21bffc36 	bltu	r4,r6,80c058 <__alt_data_end+0xff80c058>
  80c068:	0005883a 	mov	r2,zero
  80c06c:	f800283a 	ret

0080c070 <__ledf2>:
  80c070:	2804d53a 	srli	r2,r5,20
  80c074:	3810d53a 	srli	r8,r7,20
  80c078:	00c00434 	movhi	r3,16
  80c07c:	18ffffc4 	addi	r3,r3,-1
  80c080:	1081ffcc 	andi	r2,r2,2047
  80c084:	0241ffc4 	movi	r9,2047
  80c088:	28d4703a 	and	r10,r5,r3
  80c08c:	4201ffcc 	andi	r8,r8,2047
  80c090:	38c6703a 	and	r3,r7,r3
  80c094:	280ad7fa 	srli	r5,r5,31
  80c098:	380ed7fa 	srli	r7,r7,31
  80c09c:	12401f26 	beq	r2,r9,80c11c <__ledf2+0xac>
  80c0a0:	0241ffc4 	movi	r9,2047
  80c0a4:	42401426 	beq	r8,r9,80c0f8 <__ledf2+0x88>
  80c0a8:	1000091e 	bne	r2,zero,80c0d0 <__ledf2+0x60>
  80c0ac:	2296b03a 	or	r11,r4,r10
  80c0b0:	5813003a 	cmpeq	r9,r11,zero
  80c0b4:	29403fcc 	andi	r5,r5,255
  80c0b8:	40000a1e 	bne	r8,zero,80c0e4 <__ledf2+0x74>
  80c0bc:	30d8b03a 	or	r12,r6,r3
  80c0c0:	6000081e 	bne	r12,zero,80c0e4 <__ledf2+0x74>
  80c0c4:	0005883a 	mov	r2,zero
  80c0c8:	5800111e 	bne	r11,zero,80c110 <__ledf2+0xa0>
  80c0cc:	f800283a 	ret
  80c0d0:	29403fcc 	andi	r5,r5,255
  80c0d4:	40000c1e 	bne	r8,zero,80c108 <__ledf2+0x98>
  80c0d8:	30d2b03a 	or	r9,r6,r3
  80c0dc:	48000c26 	beq	r9,zero,80c110 <__ledf2+0xa0>
  80c0e0:	0013883a 	mov	r9,zero
  80c0e4:	39c03fcc 	andi	r7,r7,255
  80c0e8:	48000826 	beq	r9,zero,80c10c <__ledf2+0x9c>
  80c0ec:	38001126 	beq	r7,zero,80c134 <__ledf2+0xc4>
  80c0f0:	00800044 	movi	r2,1
  80c0f4:	f800283a 	ret
  80c0f8:	30d2b03a 	or	r9,r6,r3
  80c0fc:	483fea26 	beq	r9,zero,80c0a8 <__alt_data_end+0xff80c0a8>
  80c100:	00800084 	movi	r2,2
  80c104:	f800283a 	ret
  80c108:	39c03fcc 	andi	r7,r7,255
  80c10c:	39400726 	beq	r7,r5,80c12c <__ledf2+0xbc>
  80c110:	2800081e 	bne	r5,zero,80c134 <__ledf2+0xc4>
  80c114:	00800044 	movi	r2,1
  80c118:	f800283a 	ret
  80c11c:	2292b03a 	or	r9,r4,r10
  80c120:	483fdf26 	beq	r9,zero,80c0a0 <__alt_data_end+0xff80c0a0>
  80c124:	00800084 	movi	r2,2
  80c128:	f800283a 	ret
  80c12c:	4080030e 	bge	r8,r2,80c13c <__ledf2+0xcc>
  80c130:	383fef26 	beq	r7,zero,80c0f0 <__alt_data_end+0xff80c0f0>
  80c134:	00bfffc4 	movi	r2,-1
  80c138:	f800283a 	ret
  80c13c:	123feb16 	blt	r2,r8,80c0ec <__alt_data_end+0xff80c0ec>
  80c140:	1abff336 	bltu	r3,r10,80c110 <__alt_data_end+0xff80c110>
  80c144:	50c00326 	beq	r10,r3,80c154 <__ledf2+0xe4>
  80c148:	50c0042e 	bgeu	r10,r3,80c15c <__ledf2+0xec>
  80c14c:	283fe81e 	bne	r5,zero,80c0f0 <__alt_data_end+0xff80c0f0>
  80c150:	003ff806 	br	80c134 <__alt_data_end+0xff80c134>
  80c154:	313fee36 	bltu	r6,r4,80c110 <__alt_data_end+0xff80c110>
  80c158:	21bffc36 	bltu	r4,r6,80c14c <__alt_data_end+0xff80c14c>
  80c15c:	0005883a 	mov	r2,zero
  80c160:	f800283a 	ret

0080c164 <__muldf3>:
  80c164:	defff304 	addi	sp,sp,-52
  80c168:	2804d53a 	srli	r2,r5,20
  80c16c:	dd800915 	stw	r22,36(sp)
  80c170:	282cd7fa 	srli	r22,r5,31
  80c174:	dc000315 	stw	r16,12(sp)
  80c178:	04000434 	movhi	r16,16
  80c17c:	dd400815 	stw	r21,32(sp)
  80c180:	dc800515 	stw	r18,20(sp)
  80c184:	843fffc4 	addi	r16,r16,-1
  80c188:	dfc00c15 	stw	ra,48(sp)
  80c18c:	df000b15 	stw	fp,44(sp)
  80c190:	ddc00a15 	stw	r23,40(sp)
  80c194:	dd000715 	stw	r20,28(sp)
  80c198:	dcc00615 	stw	r19,24(sp)
  80c19c:	dc400415 	stw	r17,16(sp)
  80c1a0:	1481ffcc 	andi	r18,r2,2047
  80c1a4:	2c20703a 	and	r16,r5,r16
  80c1a8:	b02b883a 	mov	r21,r22
  80c1ac:	b2403fcc 	andi	r9,r22,255
  80c1b0:	90006026 	beq	r18,zero,80c334 <__muldf3+0x1d0>
  80c1b4:	0081ffc4 	movi	r2,2047
  80c1b8:	2029883a 	mov	r20,r4
  80c1bc:	90803626 	beq	r18,r2,80c298 <__muldf3+0x134>
  80c1c0:	80800434 	orhi	r2,r16,16
  80c1c4:	100490fa 	slli	r2,r2,3
  80c1c8:	2020d77a 	srli	r16,r4,29
  80c1cc:	202890fa 	slli	r20,r4,3
  80c1d0:	94bf0044 	addi	r18,r18,-1023
  80c1d4:	80a0b03a 	or	r16,r16,r2
  80c1d8:	0027883a 	mov	r19,zero
  80c1dc:	0039883a 	mov	fp,zero
  80c1e0:	3804d53a 	srli	r2,r7,20
  80c1e4:	382ed7fa 	srli	r23,r7,31
  80c1e8:	04400434 	movhi	r17,16
  80c1ec:	8c7fffc4 	addi	r17,r17,-1
  80c1f0:	1081ffcc 	andi	r2,r2,2047
  80c1f4:	3011883a 	mov	r8,r6
  80c1f8:	3c62703a 	and	r17,r7,r17
  80c1fc:	ba803fcc 	andi	r10,r23,255
  80c200:	10006d26 	beq	r2,zero,80c3b8 <__muldf3+0x254>
  80c204:	00c1ffc4 	movi	r3,2047
  80c208:	10c06526 	beq	r2,r3,80c3a0 <__muldf3+0x23c>
  80c20c:	88c00434 	orhi	r3,r17,16
  80c210:	180690fa 	slli	r3,r3,3
  80c214:	3022d77a 	srli	r17,r6,29
  80c218:	301090fa 	slli	r8,r6,3
  80c21c:	10bf0044 	addi	r2,r2,-1023
  80c220:	88e2b03a 	or	r17,r17,r3
  80c224:	000b883a 	mov	r5,zero
  80c228:	9085883a 	add	r2,r18,r2
  80c22c:	2cc8b03a 	or	r4,r5,r19
  80c230:	00c003c4 	movi	r3,15
  80c234:	bdacf03a 	xor	r22,r23,r22
  80c238:	12c00044 	addi	r11,r2,1
  80c23c:	19009936 	bltu	r3,r4,80c4a4 <__muldf3+0x340>
  80c240:	200890ba 	slli	r4,r4,2
  80c244:	00c02074 	movhi	r3,129
  80c248:	18f09604 	addi	r3,r3,-15784
  80c24c:	20c9883a 	add	r4,r4,r3
  80c250:	20c00017 	ldw	r3,0(r4)
  80c254:	1800683a 	jmp	r3
  80c258:	0080c4a4 	muli	r2,zero,786
  80c25c:	0080c2b8 	rdprs	r2,zero,778
  80c260:	0080c2b8 	rdprs	r2,zero,778
  80c264:	0080c2b4 	movhi	r2,778
  80c268:	0080c480 	call	80c48 <__alt_mem_sdram-0x77f3b8>
  80c26c:	0080c480 	call	80c48 <__alt_mem_sdram-0x77f3b8>
  80c270:	0080c468 	cmpgeui	r2,zero,785
  80c274:	0080c2b4 	movhi	r2,778
  80c278:	0080c480 	call	80c48 <__alt_mem_sdram-0x77f3b8>
  80c27c:	0080c468 	cmpgeui	r2,zero,785
  80c280:	0080c480 	call	80c48 <__alt_mem_sdram-0x77f3b8>
  80c284:	0080c2b4 	movhi	r2,778
  80c288:	0080c490 	cmplti	r2,zero,786
  80c28c:	0080c490 	cmplti	r2,zero,786
  80c290:	0080c490 	cmplti	r2,zero,786
  80c294:	0080c6ac 	andhi	r2,zero,794
  80c298:	2404b03a 	or	r2,r4,r16
  80c29c:	10006f1e 	bne	r2,zero,80c45c <__muldf3+0x2f8>
  80c2a0:	04c00204 	movi	r19,8
  80c2a4:	0021883a 	mov	r16,zero
  80c2a8:	0029883a 	mov	r20,zero
  80c2ac:	07000084 	movi	fp,2
  80c2b0:	003fcb06 	br	80c1e0 <__alt_data_end+0xff80c1e0>
  80c2b4:	502d883a 	mov	r22,r10
  80c2b8:	00800084 	movi	r2,2
  80c2bc:	28805726 	beq	r5,r2,80c41c <__muldf3+0x2b8>
  80c2c0:	008000c4 	movi	r2,3
  80c2c4:	28816626 	beq	r5,r2,80c860 <__muldf3+0x6fc>
  80c2c8:	00800044 	movi	r2,1
  80c2cc:	2881411e 	bne	r5,r2,80c7d4 <__muldf3+0x670>
  80c2d0:	b02b883a 	mov	r21,r22
  80c2d4:	0005883a 	mov	r2,zero
  80c2d8:	000b883a 	mov	r5,zero
  80c2dc:	0029883a 	mov	r20,zero
  80c2e0:	1004953a 	slli	r2,r2,20
  80c2e4:	a8c03fcc 	andi	r3,r21,255
  80c2e8:	04400434 	movhi	r17,16
  80c2ec:	8c7fffc4 	addi	r17,r17,-1
  80c2f0:	180697fa 	slli	r3,r3,31
  80c2f4:	2c4a703a 	and	r5,r5,r17
  80c2f8:	288ab03a 	or	r5,r5,r2
  80c2fc:	28c6b03a 	or	r3,r5,r3
  80c300:	a005883a 	mov	r2,r20
  80c304:	dfc00c17 	ldw	ra,48(sp)
  80c308:	df000b17 	ldw	fp,44(sp)
  80c30c:	ddc00a17 	ldw	r23,40(sp)
  80c310:	dd800917 	ldw	r22,36(sp)
  80c314:	dd400817 	ldw	r21,32(sp)
  80c318:	dd000717 	ldw	r20,28(sp)
  80c31c:	dcc00617 	ldw	r19,24(sp)
  80c320:	dc800517 	ldw	r18,20(sp)
  80c324:	dc400417 	ldw	r17,16(sp)
  80c328:	dc000317 	ldw	r16,12(sp)
  80c32c:	dec00d04 	addi	sp,sp,52
  80c330:	f800283a 	ret
  80c334:	2404b03a 	or	r2,r4,r16
  80c338:	2027883a 	mov	r19,r4
  80c33c:	10004226 	beq	r2,zero,80c448 <__muldf3+0x2e4>
  80c340:	8000fc26 	beq	r16,zero,80c734 <__muldf3+0x5d0>
  80c344:	8009883a 	mov	r4,r16
  80c348:	d9800215 	stw	r6,8(sp)
  80c34c:	d9c00015 	stw	r7,0(sp)
  80c350:	da400115 	stw	r9,4(sp)
  80c354:	0800a5c0 	call	800a5c <__clzsi2>
  80c358:	d9800217 	ldw	r6,8(sp)
  80c35c:	d9c00017 	ldw	r7,0(sp)
  80c360:	da400117 	ldw	r9,4(sp)
  80c364:	113ffd44 	addi	r4,r2,-11
  80c368:	00c00704 	movi	r3,28
  80c36c:	1900ed16 	blt	r3,r4,80c724 <__muldf3+0x5c0>
  80c370:	00c00744 	movi	r3,29
  80c374:	147ffe04 	addi	r17,r2,-8
  80c378:	1907c83a 	sub	r3,r3,r4
  80c37c:	8460983a 	sll	r16,r16,r17
  80c380:	98c6d83a 	srl	r3,r19,r3
  80c384:	9c68983a 	sll	r20,r19,r17
  80c388:	1c20b03a 	or	r16,r3,r16
  80c38c:	1080fcc4 	addi	r2,r2,1011
  80c390:	00a5c83a 	sub	r18,zero,r2
  80c394:	0027883a 	mov	r19,zero
  80c398:	0039883a 	mov	fp,zero
  80c39c:	003f9006 	br	80c1e0 <__alt_data_end+0xff80c1e0>
  80c3a0:	3446b03a 	or	r3,r6,r17
  80c3a4:	1800261e 	bne	r3,zero,80c440 <__muldf3+0x2dc>
  80c3a8:	0023883a 	mov	r17,zero
  80c3ac:	0011883a 	mov	r8,zero
  80c3b0:	01400084 	movi	r5,2
  80c3b4:	003f9c06 	br	80c228 <__alt_data_end+0xff80c228>
  80c3b8:	3446b03a 	or	r3,r6,r17
  80c3bc:	18001c26 	beq	r3,zero,80c430 <__muldf3+0x2cc>
  80c3c0:	8800ce26 	beq	r17,zero,80c6fc <__muldf3+0x598>
  80c3c4:	8809883a 	mov	r4,r17
  80c3c8:	d9800215 	stw	r6,8(sp)
  80c3cc:	da400115 	stw	r9,4(sp)
  80c3d0:	da800015 	stw	r10,0(sp)
  80c3d4:	0800a5c0 	call	800a5c <__clzsi2>
  80c3d8:	d9800217 	ldw	r6,8(sp)
  80c3dc:	da400117 	ldw	r9,4(sp)
  80c3e0:	da800017 	ldw	r10,0(sp)
  80c3e4:	113ffd44 	addi	r4,r2,-11
  80c3e8:	00c00704 	movi	r3,28
  80c3ec:	1900bf16 	blt	r3,r4,80c6ec <__muldf3+0x588>
  80c3f0:	00c00744 	movi	r3,29
  80c3f4:	123ffe04 	addi	r8,r2,-8
  80c3f8:	1907c83a 	sub	r3,r3,r4
  80c3fc:	8a22983a 	sll	r17,r17,r8
  80c400:	30c6d83a 	srl	r3,r6,r3
  80c404:	3210983a 	sll	r8,r6,r8
  80c408:	1c62b03a 	or	r17,r3,r17
  80c40c:	1080fcc4 	addi	r2,r2,1011
  80c410:	0085c83a 	sub	r2,zero,r2
  80c414:	000b883a 	mov	r5,zero
  80c418:	003f8306 	br	80c228 <__alt_data_end+0xff80c228>
  80c41c:	b02b883a 	mov	r21,r22
  80c420:	0081ffc4 	movi	r2,2047
  80c424:	000b883a 	mov	r5,zero
  80c428:	0029883a 	mov	r20,zero
  80c42c:	003fac06 	br	80c2e0 <__alt_data_end+0xff80c2e0>
  80c430:	0023883a 	mov	r17,zero
  80c434:	0011883a 	mov	r8,zero
  80c438:	01400044 	movi	r5,1
  80c43c:	003f7a06 	br	80c228 <__alt_data_end+0xff80c228>
  80c440:	014000c4 	movi	r5,3
  80c444:	003f7806 	br	80c228 <__alt_data_end+0xff80c228>
  80c448:	04c00104 	movi	r19,4
  80c44c:	0021883a 	mov	r16,zero
  80c450:	0029883a 	mov	r20,zero
  80c454:	07000044 	movi	fp,1
  80c458:	003f6106 	br	80c1e0 <__alt_data_end+0xff80c1e0>
  80c45c:	04c00304 	movi	r19,12
  80c460:	070000c4 	movi	fp,3
  80c464:	003f5e06 	br	80c1e0 <__alt_data_end+0xff80c1e0>
  80c468:	01400434 	movhi	r5,16
  80c46c:	002b883a 	mov	r21,zero
  80c470:	297fffc4 	addi	r5,r5,-1
  80c474:	053fffc4 	movi	r20,-1
  80c478:	0081ffc4 	movi	r2,2047
  80c47c:	003f9806 	br	80c2e0 <__alt_data_end+0xff80c2e0>
  80c480:	8023883a 	mov	r17,r16
  80c484:	a011883a 	mov	r8,r20
  80c488:	e00b883a 	mov	r5,fp
  80c48c:	003f8a06 	br	80c2b8 <__alt_data_end+0xff80c2b8>
  80c490:	8023883a 	mov	r17,r16
  80c494:	a011883a 	mov	r8,r20
  80c498:	482d883a 	mov	r22,r9
  80c49c:	e00b883a 	mov	r5,fp
  80c4a0:	003f8506 	br	80c2b8 <__alt_data_end+0xff80c2b8>
  80c4a4:	a00ad43a 	srli	r5,r20,16
  80c4a8:	401ad43a 	srli	r13,r8,16
  80c4ac:	a53fffcc 	andi	r20,r20,65535
  80c4b0:	423fffcc 	andi	r8,r8,65535
  80c4b4:	4519383a 	mul	r12,r8,r20
  80c4b8:	4147383a 	mul	r3,r8,r5
  80c4bc:	6d09383a 	mul	r4,r13,r20
  80c4c0:	600cd43a 	srli	r6,r12,16
  80c4c4:	2b5d383a 	mul	r14,r5,r13
  80c4c8:	20c9883a 	add	r4,r4,r3
  80c4cc:	310d883a 	add	r6,r6,r4
  80c4d0:	30c0022e 	bgeu	r6,r3,80c4dc <__muldf3+0x378>
  80c4d4:	00c00074 	movhi	r3,1
  80c4d8:	70dd883a 	add	r14,r14,r3
  80c4dc:	8826d43a 	srli	r19,r17,16
  80c4e0:	8bffffcc 	andi	r15,r17,65535
  80c4e4:	7d23383a 	mul	r17,r15,r20
  80c4e8:	7949383a 	mul	r4,r15,r5
  80c4ec:	9d29383a 	mul	r20,r19,r20
  80c4f0:	8814d43a 	srli	r10,r17,16
  80c4f4:	3012943a 	slli	r9,r6,16
  80c4f8:	a129883a 	add	r20,r20,r4
  80c4fc:	633fffcc 	andi	r12,r12,65535
  80c500:	5515883a 	add	r10,r10,r20
  80c504:	3006d43a 	srli	r3,r6,16
  80c508:	4b13883a 	add	r9,r9,r12
  80c50c:	2ccb383a 	mul	r5,r5,r19
  80c510:	5100022e 	bgeu	r10,r4,80c51c <__muldf3+0x3b8>
  80c514:	01000074 	movhi	r4,1
  80c518:	290b883a 	add	r5,r5,r4
  80c51c:	802ad43a 	srli	r21,r16,16
  80c520:	843fffcc 	andi	r16,r16,65535
  80c524:	440d383a 	mul	r6,r8,r16
  80c528:	4565383a 	mul	r18,r8,r21
  80c52c:	8349383a 	mul	r4,r16,r13
  80c530:	500e943a 	slli	r7,r10,16
  80c534:	3010d43a 	srli	r8,r6,16
  80c538:	5028d43a 	srli	r20,r10,16
  80c53c:	2489883a 	add	r4,r4,r18
  80c540:	8abfffcc 	andi	r10,r17,65535
  80c544:	3a95883a 	add	r10,r7,r10
  80c548:	4119883a 	add	r12,r8,r4
  80c54c:	a169883a 	add	r20,r20,r5
  80c550:	1a87883a 	add	r3,r3,r10
  80c554:	6d5b383a 	mul	r13,r13,r21
  80c558:	6480022e 	bgeu	r12,r18,80c564 <__muldf3+0x400>
  80c55c:	01000074 	movhi	r4,1
  80c560:	691b883a 	add	r13,r13,r4
  80c564:	7c25383a 	mul	r18,r15,r16
  80c568:	7d4b383a 	mul	r5,r15,r21
  80c56c:	84cf383a 	mul	r7,r16,r19
  80c570:	901ed43a 	srli	r15,r18,16
  80c574:	6008d43a 	srli	r4,r12,16
  80c578:	6010943a 	slli	r8,r12,16
  80c57c:	394f883a 	add	r7,r7,r5
  80c580:	333fffcc 	andi	r12,r6,65535
  80c584:	79df883a 	add	r15,r15,r7
  80c588:	235b883a 	add	r13,r4,r13
  80c58c:	9d63383a 	mul	r17,r19,r21
  80c590:	4309883a 	add	r4,r8,r12
  80c594:	7940022e 	bgeu	r15,r5,80c5a0 <__muldf3+0x43c>
  80c598:	01400074 	movhi	r5,1
  80c59c:	8963883a 	add	r17,r17,r5
  80c5a0:	780a943a 	slli	r5,r15,16
  80c5a4:	91bfffcc 	andi	r6,r18,65535
  80c5a8:	70c7883a 	add	r3,r14,r3
  80c5ac:	298d883a 	add	r6,r5,r6
  80c5b0:	1a8f803a 	cmpltu	r7,r3,r10
  80c5b4:	350b883a 	add	r5,r6,r20
  80c5b8:	20c7883a 	add	r3,r4,r3
  80c5bc:	3955883a 	add	r10,r7,r5
  80c5c0:	1909803a 	cmpltu	r4,r3,r4
  80c5c4:	6a91883a 	add	r8,r13,r10
  80c5c8:	780cd43a 	srli	r6,r15,16
  80c5cc:	2219883a 	add	r12,r4,r8
  80c5d0:	2d0b803a 	cmpltu	r5,r5,r20
  80c5d4:	51cf803a 	cmpltu	r7,r10,r7
  80c5d8:	29ceb03a 	or	r7,r5,r7
  80c5dc:	4351803a 	cmpltu	r8,r8,r13
  80c5e0:	610b803a 	cmpltu	r5,r12,r4
  80c5e4:	4148b03a 	or	r4,r8,r5
  80c5e8:	398f883a 	add	r7,r7,r6
  80c5ec:	3909883a 	add	r4,r7,r4
  80c5f0:	1810927a 	slli	r8,r3,9
  80c5f4:	2449883a 	add	r4,r4,r17
  80c5f8:	2008927a 	slli	r4,r4,9
  80c5fc:	6022d5fa 	srli	r17,r12,23
  80c600:	1806d5fa 	srli	r3,r3,23
  80c604:	4252b03a 	or	r9,r8,r9
  80c608:	600a927a 	slli	r5,r12,9
  80c60c:	4810c03a 	cmpne	r8,r9,zero
  80c610:	2462b03a 	or	r17,r4,r17
  80c614:	40c6b03a 	or	r3,r8,r3
  80c618:	8900402c 	andhi	r4,r17,256
  80c61c:	1950b03a 	or	r8,r3,r5
  80c620:	20000726 	beq	r4,zero,80c640 <__muldf3+0x4dc>
  80c624:	4006d07a 	srli	r3,r8,1
  80c628:	880497fa 	slli	r2,r17,31
  80c62c:	4200004c 	andi	r8,r8,1
  80c630:	8822d07a 	srli	r17,r17,1
  80c634:	1a10b03a 	or	r8,r3,r8
  80c638:	1210b03a 	or	r8,r2,r8
  80c63c:	5805883a 	mov	r2,r11
  80c640:	1140ffc4 	addi	r5,r2,1023
  80c644:	0140440e 	bge	zero,r5,80c758 <__muldf3+0x5f4>
  80c648:	40c001cc 	andi	r3,r8,7
  80c64c:	18000726 	beq	r3,zero,80c66c <__muldf3+0x508>
  80c650:	40c003cc 	andi	r3,r8,15
  80c654:	01000104 	movi	r4,4
  80c658:	19000426 	beq	r3,r4,80c66c <__muldf3+0x508>
  80c65c:	4107883a 	add	r3,r8,r4
  80c660:	1a11803a 	cmpltu	r8,r3,r8
  80c664:	8a23883a 	add	r17,r17,r8
  80c668:	1811883a 	mov	r8,r3
  80c66c:	88c0402c 	andhi	r3,r17,256
  80c670:	18000426 	beq	r3,zero,80c684 <__muldf3+0x520>
  80c674:	11410004 	addi	r5,r2,1024
  80c678:	00bfc034 	movhi	r2,65280
  80c67c:	10bfffc4 	addi	r2,r2,-1
  80c680:	88a2703a 	and	r17,r17,r2
  80c684:	0081ff84 	movi	r2,2046
  80c688:	117f6416 	blt	r2,r5,80c41c <__alt_data_end+0xff80c41c>
  80c68c:	8828977a 	slli	r20,r17,29
  80c690:	4010d0fa 	srli	r8,r8,3
  80c694:	8822927a 	slli	r17,r17,9
  80c698:	2881ffcc 	andi	r2,r5,2047
  80c69c:	a228b03a 	or	r20,r20,r8
  80c6a0:	880ad33a 	srli	r5,r17,12
  80c6a4:	b02b883a 	mov	r21,r22
  80c6a8:	003f0d06 	br	80c2e0 <__alt_data_end+0xff80c2e0>
  80c6ac:	8080022c 	andhi	r2,r16,8
  80c6b0:	10000926 	beq	r2,zero,80c6d8 <__muldf3+0x574>
  80c6b4:	8880022c 	andhi	r2,r17,8
  80c6b8:	1000071e 	bne	r2,zero,80c6d8 <__muldf3+0x574>
  80c6bc:	00800434 	movhi	r2,16
  80c6c0:	89400234 	orhi	r5,r17,8
  80c6c4:	10bfffc4 	addi	r2,r2,-1
  80c6c8:	b82b883a 	mov	r21,r23
  80c6cc:	288a703a 	and	r5,r5,r2
  80c6d0:	4029883a 	mov	r20,r8
  80c6d4:	003f6806 	br	80c478 <__alt_data_end+0xff80c478>
  80c6d8:	00800434 	movhi	r2,16
  80c6dc:	81400234 	orhi	r5,r16,8
  80c6e0:	10bfffc4 	addi	r2,r2,-1
  80c6e4:	288a703a 	and	r5,r5,r2
  80c6e8:	003f6306 	br	80c478 <__alt_data_end+0xff80c478>
  80c6ec:	147ff604 	addi	r17,r2,-40
  80c6f0:	3462983a 	sll	r17,r6,r17
  80c6f4:	0011883a 	mov	r8,zero
  80c6f8:	003f4406 	br	80c40c <__alt_data_end+0xff80c40c>
  80c6fc:	3009883a 	mov	r4,r6
  80c700:	d9800215 	stw	r6,8(sp)
  80c704:	da400115 	stw	r9,4(sp)
  80c708:	da800015 	stw	r10,0(sp)
  80c70c:	0800a5c0 	call	800a5c <__clzsi2>
  80c710:	10800804 	addi	r2,r2,32
  80c714:	da800017 	ldw	r10,0(sp)
  80c718:	da400117 	ldw	r9,4(sp)
  80c71c:	d9800217 	ldw	r6,8(sp)
  80c720:	003f3006 	br	80c3e4 <__alt_data_end+0xff80c3e4>
  80c724:	143ff604 	addi	r16,r2,-40
  80c728:	9c20983a 	sll	r16,r19,r16
  80c72c:	0029883a 	mov	r20,zero
  80c730:	003f1606 	br	80c38c <__alt_data_end+0xff80c38c>
  80c734:	d9800215 	stw	r6,8(sp)
  80c738:	d9c00015 	stw	r7,0(sp)
  80c73c:	da400115 	stw	r9,4(sp)
  80c740:	0800a5c0 	call	800a5c <__clzsi2>
  80c744:	10800804 	addi	r2,r2,32
  80c748:	da400117 	ldw	r9,4(sp)
  80c74c:	d9c00017 	ldw	r7,0(sp)
  80c750:	d9800217 	ldw	r6,8(sp)
  80c754:	003f0306 	br	80c364 <__alt_data_end+0xff80c364>
  80c758:	00c00044 	movi	r3,1
  80c75c:	1947c83a 	sub	r3,r3,r5
  80c760:	00800e04 	movi	r2,56
  80c764:	10feda16 	blt	r2,r3,80c2d0 <__alt_data_end+0xff80c2d0>
  80c768:	008007c4 	movi	r2,31
  80c76c:	10c01b16 	blt	r2,r3,80c7dc <__muldf3+0x678>
  80c770:	00800804 	movi	r2,32
  80c774:	10c5c83a 	sub	r2,r2,r3
  80c778:	888a983a 	sll	r5,r17,r2
  80c77c:	40c8d83a 	srl	r4,r8,r3
  80c780:	4084983a 	sll	r2,r8,r2
  80c784:	88e2d83a 	srl	r17,r17,r3
  80c788:	2906b03a 	or	r3,r5,r4
  80c78c:	1004c03a 	cmpne	r2,r2,zero
  80c790:	1886b03a 	or	r3,r3,r2
  80c794:	188001cc 	andi	r2,r3,7
  80c798:	10000726 	beq	r2,zero,80c7b8 <__muldf3+0x654>
  80c79c:	188003cc 	andi	r2,r3,15
  80c7a0:	01000104 	movi	r4,4
  80c7a4:	11000426 	beq	r2,r4,80c7b8 <__muldf3+0x654>
  80c7a8:	1805883a 	mov	r2,r3
  80c7ac:	10c00104 	addi	r3,r2,4
  80c7b0:	1885803a 	cmpltu	r2,r3,r2
  80c7b4:	88a3883a 	add	r17,r17,r2
  80c7b8:	8880202c 	andhi	r2,r17,128
  80c7bc:	10001c26 	beq	r2,zero,80c830 <__muldf3+0x6cc>
  80c7c0:	b02b883a 	mov	r21,r22
  80c7c4:	00800044 	movi	r2,1
  80c7c8:	000b883a 	mov	r5,zero
  80c7cc:	0029883a 	mov	r20,zero
  80c7d0:	003ec306 	br	80c2e0 <__alt_data_end+0xff80c2e0>
  80c7d4:	5805883a 	mov	r2,r11
  80c7d8:	003f9906 	br	80c640 <__alt_data_end+0xff80c640>
  80c7dc:	00bff844 	movi	r2,-31
  80c7e0:	1145c83a 	sub	r2,r2,r5
  80c7e4:	8888d83a 	srl	r4,r17,r2
  80c7e8:	00800804 	movi	r2,32
  80c7ec:	18801a26 	beq	r3,r2,80c858 <__muldf3+0x6f4>
  80c7f0:	00801004 	movi	r2,64
  80c7f4:	10c5c83a 	sub	r2,r2,r3
  80c7f8:	8884983a 	sll	r2,r17,r2
  80c7fc:	1204b03a 	or	r2,r2,r8
  80c800:	1004c03a 	cmpne	r2,r2,zero
  80c804:	2084b03a 	or	r2,r4,r2
  80c808:	144001cc 	andi	r17,r2,7
  80c80c:	88000d1e 	bne	r17,zero,80c844 <__muldf3+0x6e0>
  80c810:	000b883a 	mov	r5,zero
  80c814:	1028d0fa 	srli	r20,r2,3
  80c818:	b02b883a 	mov	r21,r22
  80c81c:	0005883a 	mov	r2,zero
  80c820:	a468b03a 	or	r20,r20,r17
  80c824:	003eae06 	br	80c2e0 <__alt_data_end+0xff80c2e0>
  80c828:	1007883a 	mov	r3,r2
  80c82c:	0023883a 	mov	r17,zero
  80c830:	880a927a 	slli	r5,r17,9
  80c834:	1805883a 	mov	r2,r3
  80c838:	8822977a 	slli	r17,r17,29
  80c83c:	280ad33a 	srli	r5,r5,12
  80c840:	003ff406 	br	80c814 <__alt_data_end+0xff80c814>
  80c844:	10c003cc 	andi	r3,r2,15
  80c848:	01000104 	movi	r4,4
  80c84c:	193ff626 	beq	r3,r4,80c828 <__alt_data_end+0xff80c828>
  80c850:	0023883a 	mov	r17,zero
  80c854:	003fd506 	br	80c7ac <__alt_data_end+0xff80c7ac>
  80c858:	0005883a 	mov	r2,zero
  80c85c:	003fe706 	br	80c7fc <__alt_data_end+0xff80c7fc>
  80c860:	00800434 	movhi	r2,16
  80c864:	89400234 	orhi	r5,r17,8
  80c868:	10bfffc4 	addi	r2,r2,-1
  80c86c:	b02b883a 	mov	r21,r22
  80c870:	288a703a 	and	r5,r5,r2
  80c874:	4029883a 	mov	r20,r8
  80c878:	003eff06 	br	80c478 <__alt_data_end+0xff80c478>

0080c87c <__subdf3>:
  80c87c:	02000434 	movhi	r8,16
  80c880:	423fffc4 	addi	r8,r8,-1
  80c884:	defffb04 	addi	sp,sp,-20
  80c888:	2a14703a 	and	r10,r5,r8
  80c88c:	3812d53a 	srli	r9,r7,20
  80c890:	3a10703a 	and	r8,r7,r8
  80c894:	2006d77a 	srli	r3,r4,29
  80c898:	3004d77a 	srli	r2,r6,29
  80c89c:	dc000015 	stw	r16,0(sp)
  80c8a0:	501490fa 	slli	r10,r10,3
  80c8a4:	2820d53a 	srli	r16,r5,20
  80c8a8:	401090fa 	slli	r8,r8,3
  80c8ac:	dc800215 	stw	r18,8(sp)
  80c8b0:	dc400115 	stw	r17,4(sp)
  80c8b4:	dfc00415 	stw	ra,16(sp)
  80c8b8:	202290fa 	slli	r17,r4,3
  80c8bc:	dcc00315 	stw	r19,12(sp)
  80c8c0:	4a41ffcc 	andi	r9,r9,2047
  80c8c4:	0101ffc4 	movi	r4,2047
  80c8c8:	2824d7fa 	srli	r18,r5,31
  80c8cc:	8401ffcc 	andi	r16,r16,2047
  80c8d0:	50c6b03a 	or	r3,r10,r3
  80c8d4:	380ed7fa 	srli	r7,r7,31
  80c8d8:	408ab03a 	or	r5,r8,r2
  80c8dc:	300c90fa 	slli	r6,r6,3
  80c8e0:	49009626 	beq	r9,r4,80cb3c <__subdf3+0x2c0>
  80c8e4:	39c0005c 	xori	r7,r7,1
  80c8e8:	8245c83a 	sub	r2,r16,r9
  80c8ec:	3c807426 	beq	r7,r18,80cac0 <__subdf3+0x244>
  80c8f0:	0080af0e 	bge	zero,r2,80cbb0 <__subdf3+0x334>
  80c8f4:	48002a1e 	bne	r9,zero,80c9a0 <__subdf3+0x124>
  80c8f8:	2988b03a 	or	r4,r5,r6
  80c8fc:	20009a1e 	bne	r4,zero,80cb68 <__subdf3+0x2ec>
  80c900:	888001cc 	andi	r2,r17,7
  80c904:	10000726 	beq	r2,zero,80c924 <__subdf3+0xa8>
  80c908:	888003cc 	andi	r2,r17,15
  80c90c:	01000104 	movi	r4,4
  80c910:	11000426 	beq	r2,r4,80c924 <__subdf3+0xa8>
  80c914:	890b883a 	add	r5,r17,r4
  80c918:	2c63803a 	cmpltu	r17,r5,r17
  80c91c:	1c47883a 	add	r3,r3,r17
  80c920:	2823883a 	mov	r17,r5
  80c924:	1880202c 	andhi	r2,r3,128
  80c928:	10005926 	beq	r2,zero,80ca90 <__subdf3+0x214>
  80c92c:	84000044 	addi	r16,r16,1
  80c930:	0081ffc4 	movi	r2,2047
  80c934:	8080be26 	beq	r16,r2,80cc30 <__subdf3+0x3b4>
  80c938:	017fe034 	movhi	r5,65408
  80c93c:	297fffc4 	addi	r5,r5,-1
  80c940:	1946703a 	and	r3,r3,r5
  80c944:	1804977a 	slli	r2,r3,29
  80c948:	1806927a 	slli	r3,r3,9
  80c94c:	8822d0fa 	srli	r17,r17,3
  80c950:	8401ffcc 	andi	r16,r16,2047
  80c954:	180ad33a 	srli	r5,r3,12
  80c958:	9100004c 	andi	r4,r18,1
  80c95c:	1444b03a 	or	r2,r2,r17
  80c960:	80c1ffcc 	andi	r3,r16,2047
  80c964:	1820953a 	slli	r16,r3,20
  80c968:	20c03fcc 	andi	r3,r4,255
  80c96c:	180897fa 	slli	r4,r3,31
  80c970:	00c00434 	movhi	r3,16
  80c974:	18ffffc4 	addi	r3,r3,-1
  80c978:	28c6703a 	and	r3,r5,r3
  80c97c:	1c06b03a 	or	r3,r3,r16
  80c980:	1906b03a 	or	r3,r3,r4
  80c984:	dfc00417 	ldw	ra,16(sp)
  80c988:	dcc00317 	ldw	r19,12(sp)
  80c98c:	dc800217 	ldw	r18,8(sp)
  80c990:	dc400117 	ldw	r17,4(sp)
  80c994:	dc000017 	ldw	r16,0(sp)
  80c998:	dec00504 	addi	sp,sp,20
  80c99c:	f800283a 	ret
  80c9a0:	0101ffc4 	movi	r4,2047
  80c9a4:	813fd626 	beq	r16,r4,80c900 <__alt_data_end+0xff80c900>
  80c9a8:	29402034 	orhi	r5,r5,128
  80c9ac:	01000e04 	movi	r4,56
  80c9b0:	2080a316 	blt	r4,r2,80cc40 <__subdf3+0x3c4>
  80c9b4:	010007c4 	movi	r4,31
  80c9b8:	2080c616 	blt	r4,r2,80ccd4 <__subdf3+0x458>
  80c9bc:	01000804 	movi	r4,32
  80c9c0:	2089c83a 	sub	r4,r4,r2
  80c9c4:	2910983a 	sll	r8,r5,r4
  80c9c8:	308ed83a 	srl	r7,r6,r2
  80c9cc:	3108983a 	sll	r4,r6,r4
  80c9d0:	2884d83a 	srl	r2,r5,r2
  80c9d4:	41ccb03a 	or	r6,r8,r7
  80c9d8:	2008c03a 	cmpne	r4,r4,zero
  80c9dc:	310cb03a 	or	r6,r6,r4
  80c9e0:	898dc83a 	sub	r6,r17,r6
  80c9e4:	89a3803a 	cmpltu	r17,r17,r6
  80c9e8:	1887c83a 	sub	r3,r3,r2
  80c9ec:	1c47c83a 	sub	r3,r3,r17
  80c9f0:	3023883a 	mov	r17,r6
  80c9f4:	1880202c 	andhi	r2,r3,128
  80c9f8:	10002326 	beq	r2,zero,80ca88 <__subdf3+0x20c>
  80c9fc:	04c02034 	movhi	r19,128
  80ca00:	9cffffc4 	addi	r19,r19,-1
  80ca04:	1ce6703a 	and	r19,r3,r19
  80ca08:	98007a26 	beq	r19,zero,80cbf4 <__subdf3+0x378>
  80ca0c:	9809883a 	mov	r4,r19
  80ca10:	0800a5c0 	call	800a5c <__clzsi2>
  80ca14:	113ffe04 	addi	r4,r2,-8
  80ca18:	00c007c4 	movi	r3,31
  80ca1c:	19007b16 	blt	r3,r4,80cc0c <__subdf3+0x390>
  80ca20:	00800804 	movi	r2,32
  80ca24:	1105c83a 	sub	r2,r2,r4
  80ca28:	8884d83a 	srl	r2,r17,r2
  80ca2c:	9906983a 	sll	r3,r19,r4
  80ca30:	8922983a 	sll	r17,r17,r4
  80ca34:	10c4b03a 	or	r2,r2,r3
  80ca38:	24007816 	blt	r4,r16,80cc1c <__subdf3+0x3a0>
  80ca3c:	2421c83a 	sub	r16,r4,r16
  80ca40:	80c00044 	addi	r3,r16,1
  80ca44:	010007c4 	movi	r4,31
  80ca48:	20c09516 	blt	r4,r3,80cca0 <__subdf3+0x424>
  80ca4c:	01400804 	movi	r5,32
  80ca50:	28cbc83a 	sub	r5,r5,r3
  80ca54:	88c8d83a 	srl	r4,r17,r3
  80ca58:	8962983a 	sll	r17,r17,r5
  80ca5c:	114a983a 	sll	r5,r2,r5
  80ca60:	10c6d83a 	srl	r3,r2,r3
  80ca64:	8804c03a 	cmpne	r2,r17,zero
  80ca68:	290ab03a 	or	r5,r5,r4
  80ca6c:	28a2b03a 	or	r17,r5,r2
  80ca70:	0021883a 	mov	r16,zero
  80ca74:	003fa206 	br	80c900 <__alt_data_end+0xff80c900>
  80ca78:	2090b03a 	or	r8,r4,r2
  80ca7c:	40018e26 	beq	r8,zero,80d0b8 <__subdf3+0x83c>
  80ca80:	1007883a 	mov	r3,r2
  80ca84:	2023883a 	mov	r17,r4
  80ca88:	888001cc 	andi	r2,r17,7
  80ca8c:	103f9e1e 	bne	r2,zero,80c908 <__alt_data_end+0xff80c908>
  80ca90:	1804977a 	slli	r2,r3,29
  80ca94:	8822d0fa 	srli	r17,r17,3
  80ca98:	1810d0fa 	srli	r8,r3,3
  80ca9c:	9100004c 	andi	r4,r18,1
  80caa0:	1444b03a 	or	r2,r2,r17
  80caa4:	00c1ffc4 	movi	r3,2047
  80caa8:	80c02826 	beq	r16,r3,80cb4c <__subdf3+0x2d0>
  80caac:	01400434 	movhi	r5,16
  80cab0:	297fffc4 	addi	r5,r5,-1
  80cab4:	80e0703a 	and	r16,r16,r3
  80cab8:	414a703a 	and	r5,r8,r5
  80cabc:	003fa806 	br	80c960 <__alt_data_end+0xff80c960>
  80cac0:	0080630e 	bge	zero,r2,80cc50 <__subdf3+0x3d4>
  80cac4:	48003026 	beq	r9,zero,80cb88 <__subdf3+0x30c>
  80cac8:	0101ffc4 	movi	r4,2047
  80cacc:	813f8c26 	beq	r16,r4,80c900 <__alt_data_end+0xff80c900>
  80cad0:	29402034 	orhi	r5,r5,128
  80cad4:	01000e04 	movi	r4,56
  80cad8:	2080a90e 	bge	r4,r2,80cd80 <__subdf3+0x504>
  80cadc:	298cb03a 	or	r6,r5,r6
  80cae0:	3012c03a 	cmpne	r9,r6,zero
  80cae4:	0005883a 	mov	r2,zero
  80cae8:	4c53883a 	add	r9,r9,r17
  80caec:	4c63803a 	cmpltu	r17,r9,r17
  80caf0:	10c7883a 	add	r3,r2,r3
  80caf4:	88c7883a 	add	r3,r17,r3
  80caf8:	4823883a 	mov	r17,r9
  80cafc:	1880202c 	andhi	r2,r3,128
  80cb00:	1000d026 	beq	r2,zero,80ce44 <__subdf3+0x5c8>
  80cb04:	84000044 	addi	r16,r16,1
  80cb08:	0081ffc4 	movi	r2,2047
  80cb0c:	8080fe26 	beq	r16,r2,80cf08 <__subdf3+0x68c>
  80cb10:	00bfe034 	movhi	r2,65408
  80cb14:	10bfffc4 	addi	r2,r2,-1
  80cb18:	1886703a 	and	r3,r3,r2
  80cb1c:	880ad07a 	srli	r5,r17,1
  80cb20:	180497fa 	slli	r2,r3,31
  80cb24:	8900004c 	andi	r4,r17,1
  80cb28:	2922b03a 	or	r17,r5,r4
  80cb2c:	1806d07a 	srli	r3,r3,1
  80cb30:	1462b03a 	or	r17,r2,r17
  80cb34:	3825883a 	mov	r18,r7
  80cb38:	003f7106 	br	80c900 <__alt_data_end+0xff80c900>
  80cb3c:	2984b03a 	or	r2,r5,r6
  80cb40:	103f6826 	beq	r2,zero,80c8e4 <__alt_data_end+0xff80c8e4>
  80cb44:	39c03fcc 	andi	r7,r7,255
  80cb48:	003f6706 	br	80c8e8 <__alt_data_end+0xff80c8e8>
  80cb4c:	4086b03a 	or	r3,r8,r2
  80cb50:	18015226 	beq	r3,zero,80d09c <__subdf3+0x820>
  80cb54:	00c00434 	movhi	r3,16
  80cb58:	41400234 	orhi	r5,r8,8
  80cb5c:	18ffffc4 	addi	r3,r3,-1
  80cb60:	28ca703a 	and	r5,r5,r3
  80cb64:	003f7e06 	br	80c960 <__alt_data_end+0xff80c960>
  80cb68:	10bfffc4 	addi	r2,r2,-1
  80cb6c:	1000491e 	bne	r2,zero,80cc94 <__subdf3+0x418>
  80cb70:	898fc83a 	sub	r7,r17,r6
  80cb74:	89e3803a 	cmpltu	r17,r17,r7
  80cb78:	1947c83a 	sub	r3,r3,r5
  80cb7c:	1c47c83a 	sub	r3,r3,r17
  80cb80:	3823883a 	mov	r17,r7
  80cb84:	003f9b06 	br	80c9f4 <__alt_data_end+0xff80c9f4>
  80cb88:	2988b03a 	or	r4,r5,r6
  80cb8c:	203f5c26 	beq	r4,zero,80c900 <__alt_data_end+0xff80c900>
  80cb90:	10bfffc4 	addi	r2,r2,-1
  80cb94:	1000931e 	bne	r2,zero,80cde4 <__subdf3+0x568>
  80cb98:	898d883a 	add	r6,r17,r6
  80cb9c:	3463803a 	cmpltu	r17,r6,r17
  80cba0:	1947883a 	add	r3,r3,r5
  80cba4:	88c7883a 	add	r3,r17,r3
  80cba8:	3023883a 	mov	r17,r6
  80cbac:	003fd306 	br	80cafc <__alt_data_end+0xff80cafc>
  80cbb0:	1000541e 	bne	r2,zero,80cd04 <__subdf3+0x488>
  80cbb4:	80800044 	addi	r2,r16,1
  80cbb8:	1081ffcc 	andi	r2,r2,2047
  80cbbc:	01000044 	movi	r4,1
  80cbc0:	2080a20e 	bge	r4,r2,80ce4c <__subdf3+0x5d0>
  80cbc4:	8989c83a 	sub	r4,r17,r6
  80cbc8:	8905803a 	cmpltu	r2,r17,r4
  80cbcc:	1967c83a 	sub	r19,r3,r5
  80cbd0:	98a7c83a 	sub	r19,r19,r2
  80cbd4:	9880202c 	andhi	r2,r19,128
  80cbd8:	10006326 	beq	r2,zero,80cd68 <__subdf3+0x4ec>
  80cbdc:	3463c83a 	sub	r17,r6,r17
  80cbe0:	28c7c83a 	sub	r3,r5,r3
  80cbe4:	344d803a 	cmpltu	r6,r6,r17
  80cbe8:	19a7c83a 	sub	r19,r3,r6
  80cbec:	3825883a 	mov	r18,r7
  80cbf0:	983f861e 	bne	r19,zero,80ca0c <__alt_data_end+0xff80ca0c>
  80cbf4:	8809883a 	mov	r4,r17
  80cbf8:	0800a5c0 	call	800a5c <__clzsi2>
  80cbfc:	10800804 	addi	r2,r2,32
  80cc00:	113ffe04 	addi	r4,r2,-8
  80cc04:	00c007c4 	movi	r3,31
  80cc08:	193f850e 	bge	r3,r4,80ca20 <__alt_data_end+0xff80ca20>
  80cc0c:	10bff604 	addi	r2,r2,-40
  80cc10:	8884983a 	sll	r2,r17,r2
  80cc14:	0023883a 	mov	r17,zero
  80cc18:	243f880e 	bge	r4,r16,80ca3c <__alt_data_end+0xff80ca3c>
  80cc1c:	00ffe034 	movhi	r3,65408
  80cc20:	18ffffc4 	addi	r3,r3,-1
  80cc24:	8121c83a 	sub	r16,r16,r4
  80cc28:	10c6703a 	and	r3,r2,r3
  80cc2c:	003f3406 	br	80c900 <__alt_data_end+0xff80c900>
  80cc30:	9100004c 	andi	r4,r18,1
  80cc34:	000b883a 	mov	r5,zero
  80cc38:	0005883a 	mov	r2,zero
  80cc3c:	003f4806 	br	80c960 <__alt_data_end+0xff80c960>
  80cc40:	298cb03a 	or	r6,r5,r6
  80cc44:	300cc03a 	cmpne	r6,r6,zero
  80cc48:	0005883a 	mov	r2,zero
  80cc4c:	003f6406 	br	80c9e0 <__alt_data_end+0xff80c9e0>
  80cc50:	10009a1e 	bne	r2,zero,80cebc <__subdf3+0x640>
  80cc54:	82400044 	addi	r9,r16,1
  80cc58:	4881ffcc 	andi	r2,r9,2047
  80cc5c:	02800044 	movi	r10,1
  80cc60:	5080670e 	bge	r10,r2,80ce00 <__subdf3+0x584>
  80cc64:	0081ffc4 	movi	r2,2047
  80cc68:	4880af26 	beq	r9,r2,80cf28 <__subdf3+0x6ac>
  80cc6c:	898d883a 	add	r6,r17,r6
  80cc70:	1945883a 	add	r2,r3,r5
  80cc74:	3447803a 	cmpltu	r3,r6,r17
  80cc78:	1887883a 	add	r3,r3,r2
  80cc7c:	182297fa 	slli	r17,r3,31
  80cc80:	300cd07a 	srli	r6,r6,1
  80cc84:	1806d07a 	srli	r3,r3,1
  80cc88:	4821883a 	mov	r16,r9
  80cc8c:	89a2b03a 	or	r17,r17,r6
  80cc90:	003f1b06 	br	80c900 <__alt_data_end+0xff80c900>
  80cc94:	0101ffc4 	movi	r4,2047
  80cc98:	813f441e 	bne	r16,r4,80c9ac <__alt_data_end+0xff80c9ac>
  80cc9c:	003f1806 	br	80c900 <__alt_data_end+0xff80c900>
  80cca0:	843ff844 	addi	r16,r16,-31
  80cca4:	01400804 	movi	r5,32
  80cca8:	1408d83a 	srl	r4,r2,r16
  80ccac:	19405026 	beq	r3,r5,80cdf0 <__subdf3+0x574>
  80ccb0:	01401004 	movi	r5,64
  80ccb4:	28c7c83a 	sub	r3,r5,r3
  80ccb8:	10c4983a 	sll	r2,r2,r3
  80ccbc:	88a2b03a 	or	r17,r17,r2
  80ccc0:	8822c03a 	cmpne	r17,r17,zero
  80ccc4:	2462b03a 	or	r17,r4,r17
  80ccc8:	0007883a 	mov	r3,zero
  80cccc:	0021883a 	mov	r16,zero
  80ccd0:	003f6d06 	br	80ca88 <__alt_data_end+0xff80ca88>
  80ccd4:	11fff804 	addi	r7,r2,-32
  80ccd8:	01000804 	movi	r4,32
  80ccdc:	29ced83a 	srl	r7,r5,r7
  80cce0:	11004526 	beq	r2,r4,80cdf8 <__subdf3+0x57c>
  80cce4:	01001004 	movi	r4,64
  80cce8:	2089c83a 	sub	r4,r4,r2
  80ccec:	2904983a 	sll	r2,r5,r4
  80ccf0:	118cb03a 	or	r6,r2,r6
  80ccf4:	300cc03a 	cmpne	r6,r6,zero
  80ccf8:	398cb03a 	or	r6,r7,r6
  80ccfc:	0005883a 	mov	r2,zero
  80cd00:	003f3706 	br	80c9e0 <__alt_data_end+0xff80c9e0>
  80cd04:	80002a26 	beq	r16,zero,80cdb0 <__subdf3+0x534>
  80cd08:	0101ffc4 	movi	r4,2047
  80cd0c:	49006626 	beq	r9,r4,80cea8 <__subdf3+0x62c>
  80cd10:	0085c83a 	sub	r2,zero,r2
  80cd14:	18c02034 	orhi	r3,r3,128
  80cd18:	01000e04 	movi	r4,56
  80cd1c:	20807e16 	blt	r4,r2,80cf18 <__subdf3+0x69c>
  80cd20:	010007c4 	movi	r4,31
  80cd24:	2080e716 	blt	r4,r2,80d0c4 <__subdf3+0x848>
  80cd28:	01000804 	movi	r4,32
  80cd2c:	2089c83a 	sub	r4,r4,r2
  80cd30:	1914983a 	sll	r10,r3,r4
  80cd34:	8890d83a 	srl	r8,r17,r2
  80cd38:	8908983a 	sll	r4,r17,r4
  80cd3c:	1884d83a 	srl	r2,r3,r2
  80cd40:	5222b03a 	or	r17,r10,r8
  80cd44:	2006c03a 	cmpne	r3,r4,zero
  80cd48:	88e2b03a 	or	r17,r17,r3
  80cd4c:	3463c83a 	sub	r17,r6,r17
  80cd50:	2885c83a 	sub	r2,r5,r2
  80cd54:	344d803a 	cmpltu	r6,r6,r17
  80cd58:	1187c83a 	sub	r3,r2,r6
  80cd5c:	4821883a 	mov	r16,r9
  80cd60:	3825883a 	mov	r18,r7
  80cd64:	003f2306 	br	80c9f4 <__alt_data_end+0xff80c9f4>
  80cd68:	24d0b03a 	or	r8,r4,r19
  80cd6c:	40001b1e 	bne	r8,zero,80cddc <__subdf3+0x560>
  80cd70:	0005883a 	mov	r2,zero
  80cd74:	0009883a 	mov	r4,zero
  80cd78:	0021883a 	mov	r16,zero
  80cd7c:	003f4906 	br	80caa4 <__alt_data_end+0xff80caa4>
  80cd80:	010007c4 	movi	r4,31
  80cd84:	20803a16 	blt	r4,r2,80ce70 <__subdf3+0x5f4>
  80cd88:	01000804 	movi	r4,32
  80cd8c:	2089c83a 	sub	r4,r4,r2
  80cd90:	2912983a 	sll	r9,r5,r4
  80cd94:	3090d83a 	srl	r8,r6,r2
  80cd98:	3108983a 	sll	r4,r6,r4
  80cd9c:	2884d83a 	srl	r2,r5,r2
  80cda0:	4a12b03a 	or	r9,r9,r8
  80cda4:	2008c03a 	cmpne	r4,r4,zero
  80cda8:	4912b03a 	or	r9,r9,r4
  80cdac:	003f4e06 	br	80cae8 <__alt_data_end+0xff80cae8>
  80cdb0:	1c48b03a 	or	r4,r3,r17
  80cdb4:	20003c26 	beq	r4,zero,80cea8 <__subdf3+0x62c>
  80cdb8:	0084303a 	nor	r2,zero,r2
  80cdbc:	1000381e 	bne	r2,zero,80cea0 <__subdf3+0x624>
  80cdc0:	3463c83a 	sub	r17,r6,r17
  80cdc4:	28c5c83a 	sub	r2,r5,r3
  80cdc8:	344d803a 	cmpltu	r6,r6,r17
  80cdcc:	1187c83a 	sub	r3,r2,r6
  80cdd0:	4821883a 	mov	r16,r9
  80cdd4:	3825883a 	mov	r18,r7
  80cdd8:	003f0606 	br	80c9f4 <__alt_data_end+0xff80c9f4>
  80cddc:	2023883a 	mov	r17,r4
  80cde0:	003f0906 	br	80ca08 <__alt_data_end+0xff80ca08>
  80cde4:	0101ffc4 	movi	r4,2047
  80cde8:	813f3a1e 	bne	r16,r4,80cad4 <__alt_data_end+0xff80cad4>
  80cdec:	003ec406 	br	80c900 <__alt_data_end+0xff80c900>
  80cdf0:	0005883a 	mov	r2,zero
  80cdf4:	003fb106 	br	80ccbc <__alt_data_end+0xff80ccbc>
  80cdf8:	0005883a 	mov	r2,zero
  80cdfc:	003fbc06 	br	80ccf0 <__alt_data_end+0xff80ccf0>
  80ce00:	1c44b03a 	or	r2,r3,r17
  80ce04:	80008e1e 	bne	r16,zero,80d040 <__subdf3+0x7c4>
  80ce08:	1000c826 	beq	r2,zero,80d12c <__subdf3+0x8b0>
  80ce0c:	2984b03a 	or	r2,r5,r6
  80ce10:	103ebb26 	beq	r2,zero,80c900 <__alt_data_end+0xff80c900>
  80ce14:	8989883a 	add	r4,r17,r6
  80ce18:	1945883a 	add	r2,r3,r5
  80ce1c:	2447803a 	cmpltu	r3,r4,r17
  80ce20:	1887883a 	add	r3,r3,r2
  80ce24:	1880202c 	andhi	r2,r3,128
  80ce28:	2023883a 	mov	r17,r4
  80ce2c:	103f1626 	beq	r2,zero,80ca88 <__alt_data_end+0xff80ca88>
  80ce30:	00bfe034 	movhi	r2,65408
  80ce34:	10bfffc4 	addi	r2,r2,-1
  80ce38:	5021883a 	mov	r16,r10
  80ce3c:	1886703a 	and	r3,r3,r2
  80ce40:	003eaf06 	br	80c900 <__alt_data_end+0xff80c900>
  80ce44:	3825883a 	mov	r18,r7
  80ce48:	003f0f06 	br	80ca88 <__alt_data_end+0xff80ca88>
  80ce4c:	1c44b03a 	or	r2,r3,r17
  80ce50:	8000251e 	bne	r16,zero,80cee8 <__subdf3+0x66c>
  80ce54:	1000661e 	bne	r2,zero,80cff0 <__subdf3+0x774>
  80ce58:	2990b03a 	or	r8,r5,r6
  80ce5c:	40009626 	beq	r8,zero,80d0b8 <__subdf3+0x83c>
  80ce60:	2807883a 	mov	r3,r5
  80ce64:	3023883a 	mov	r17,r6
  80ce68:	3825883a 	mov	r18,r7
  80ce6c:	003ea406 	br	80c900 <__alt_data_end+0xff80c900>
  80ce70:	127ff804 	addi	r9,r2,-32
  80ce74:	01000804 	movi	r4,32
  80ce78:	2a52d83a 	srl	r9,r5,r9
  80ce7c:	11008c26 	beq	r2,r4,80d0b0 <__subdf3+0x834>
  80ce80:	01001004 	movi	r4,64
  80ce84:	2085c83a 	sub	r2,r4,r2
  80ce88:	2884983a 	sll	r2,r5,r2
  80ce8c:	118cb03a 	or	r6,r2,r6
  80ce90:	300cc03a 	cmpne	r6,r6,zero
  80ce94:	4992b03a 	or	r9,r9,r6
  80ce98:	0005883a 	mov	r2,zero
  80ce9c:	003f1206 	br	80cae8 <__alt_data_end+0xff80cae8>
  80cea0:	0101ffc4 	movi	r4,2047
  80cea4:	493f9c1e 	bne	r9,r4,80cd18 <__alt_data_end+0xff80cd18>
  80cea8:	2807883a 	mov	r3,r5
  80ceac:	3023883a 	mov	r17,r6
  80ceb0:	4821883a 	mov	r16,r9
  80ceb4:	3825883a 	mov	r18,r7
  80ceb8:	003e9106 	br	80c900 <__alt_data_end+0xff80c900>
  80cebc:	80001f1e 	bne	r16,zero,80cf3c <__subdf3+0x6c0>
  80cec0:	1c48b03a 	or	r4,r3,r17
  80cec4:	20005a26 	beq	r4,zero,80d030 <__subdf3+0x7b4>
  80cec8:	0084303a 	nor	r2,zero,r2
  80cecc:	1000561e 	bne	r2,zero,80d028 <__subdf3+0x7ac>
  80ced0:	89a3883a 	add	r17,r17,r6
  80ced4:	1945883a 	add	r2,r3,r5
  80ced8:	898d803a 	cmpltu	r6,r17,r6
  80cedc:	3087883a 	add	r3,r6,r2
  80cee0:	4821883a 	mov	r16,r9
  80cee4:	003f0506 	br	80cafc <__alt_data_end+0xff80cafc>
  80cee8:	10002b1e 	bne	r2,zero,80cf98 <__subdf3+0x71c>
  80ceec:	2984b03a 	or	r2,r5,r6
  80cef0:	10008026 	beq	r2,zero,80d0f4 <__subdf3+0x878>
  80cef4:	2807883a 	mov	r3,r5
  80cef8:	3023883a 	mov	r17,r6
  80cefc:	3825883a 	mov	r18,r7
  80cf00:	0401ffc4 	movi	r16,2047
  80cf04:	003e7e06 	br	80c900 <__alt_data_end+0xff80c900>
  80cf08:	3809883a 	mov	r4,r7
  80cf0c:	0011883a 	mov	r8,zero
  80cf10:	0005883a 	mov	r2,zero
  80cf14:	003ee306 	br	80caa4 <__alt_data_end+0xff80caa4>
  80cf18:	1c62b03a 	or	r17,r3,r17
  80cf1c:	8822c03a 	cmpne	r17,r17,zero
  80cf20:	0005883a 	mov	r2,zero
  80cf24:	003f8906 	br	80cd4c <__alt_data_end+0xff80cd4c>
  80cf28:	3809883a 	mov	r4,r7
  80cf2c:	4821883a 	mov	r16,r9
  80cf30:	0011883a 	mov	r8,zero
  80cf34:	0005883a 	mov	r2,zero
  80cf38:	003eda06 	br	80caa4 <__alt_data_end+0xff80caa4>
  80cf3c:	0101ffc4 	movi	r4,2047
  80cf40:	49003b26 	beq	r9,r4,80d030 <__subdf3+0x7b4>
  80cf44:	0085c83a 	sub	r2,zero,r2
  80cf48:	18c02034 	orhi	r3,r3,128
  80cf4c:	01000e04 	movi	r4,56
  80cf50:	20806e16 	blt	r4,r2,80d10c <__subdf3+0x890>
  80cf54:	010007c4 	movi	r4,31
  80cf58:	20807716 	blt	r4,r2,80d138 <__subdf3+0x8bc>
  80cf5c:	01000804 	movi	r4,32
  80cf60:	2089c83a 	sub	r4,r4,r2
  80cf64:	1914983a 	sll	r10,r3,r4
  80cf68:	8890d83a 	srl	r8,r17,r2
  80cf6c:	8908983a 	sll	r4,r17,r4
  80cf70:	1884d83a 	srl	r2,r3,r2
  80cf74:	5222b03a 	or	r17,r10,r8
  80cf78:	2006c03a 	cmpne	r3,r4,zero
  80cf7c:	88e2b03a 	or	r17,r17,r3
  80cf80:	89a3883a 	add	r17,r17,r6
  80cf84:	1145883a 	add	r2,r2,r5
  80cf88:	898d803a 	cmpltu	r6,r17,r6
  80cf8c:	3087883a 	add	r3,r6,r2
  80cf90:	4821883a 	mov	r16,r9
  80cf94:	003ed906 	br	80cafc <__alt_data_end+0xff80cafc>
  80cf98:	2984b03a 	or	r2,r5,r6
  80cf9c:	10004226 	beq	r2,zero,80d0a8 <__subdf3+0x82c>
  80cfa0:	1808d0fa 	srli	r4,r3,3
  80cfa4:	8822d0fa 	srli	r17,r17,3
  80cfa8:	1806977a 	slli	r3,r3,29
  80cfac:	2080022c 	andhi	r2,r4,8
  80cfb0:	1c62b03a 	or	r17,r3,r17
  80cfb4:	10000826 	beq	r2,zero,80cfd8 <__subdf3+0x75c>
  80cfb8:	2812d0fa 	srli	r9,r5,3
  80cfbc:	4880022c 	andhi	r2,r9,8
  80cfc0:	1000051e 	bne	r2,zero,80cfd8 <__subdf3+0x75c>
  80cfc4:	300cd0fa 	srli	r6,r6,3
  80cfc8:	2804977a 	slli	r2,r5,29
  80cfcc:	4809883a 	mov	r4,r9
  80cfd0:	3825883a 	mov	r18,r7
  80cfd4:	11a2b03a 	or	r17,r2,r6
  80cfd8:	8806d77a 	srli	r3,r17,29
  80cfdc:	200890fa 	slli	r4,r4,3
  80cfe0:	882290fa 	slli	r17,r17,3
  80cfe4:	0401ffc4 	movi	r16,2047
  80cfe8:	1906b03a 	or	r3,r3,r4
  80cfec:	003e4406 	br	80c900 <__alt_data_end+0xff80c900>
  80cff0:	2984b03a 	or	r2,r5,r6
  80cff4:	103e4226 	beq	r2,zero,80c900 <__alt_data_end+0xff80c900>
  80cff8:	8989c83a 	sub	r4,r17,r6
  80cffc:	8911803a 	cmpltu	r8,r17,r4
  80d000:	1945c83a 	sub	r2,r3,r5
  80d004:	1205c83a 	sub	r2,r2,r8
  80d008:	1200202c 	andhi	r8,r2,128
  80d00c:	403e9a26 	beq	r8,zero,80ca78 <__alt_data_end+0xff80ca78>
  80d010:	3463c83a 	sub	r17,r6,r17
  80d014:	28c5c83a 	sub	r2,r5,r3
  80d018:	344d803a 	cmpltu	r6,r6,r17
  80d01c:	1187c83a 	sub	r3,r2,r6
  80d020:	3825883a 	mov	r18,r7
  80d024:	003e3606 	br	80c900 <__alt_data_end+0xff80c900>
  80d028:	0101ffc4 	movi	r4,2047
  80d02c:	493fc71e 	bne	r9,r4,80cf4c <__alt_data_end+0xff80cf4c>
  80d030:	2807883a 	mov	r3,r5
  80d034:	3023883a 	mov	r17,r6
  80d038:	4821883a 	mov	r16,r9
  80d03c:	003e3006 	br	80c900 <__alt_data_end+0xff80c900>
  80d040:	10003626 	beq	r2,zero,80d11c <__subdf3+0x8a0>
  80d044:	2984b03a 	or	r2,r5,r6
  80d048:	10001726 	beq	r2,zero,80d0a8 <__subdf3+0x82c>
  80d04c:	1808d0fa 	srli	r4,r3,3
  80d050:	8822d0fa 	srli	r17,r17,3
  80d054:	1806977a 	slli	r3,r3,29
  80d058:	2080022c 	andhi	r2,r4,8
  80d05c:	1c62b03a 	or	r17,r3,r17
  80d060:	10000726 	beq	r2,zero,80d080 <__subdf3+0x804>
  80d064:	2812d0fa 	srli	r9,r5,3
  80d068:	4880022c 	andhi	r2,r9,8
  80d06c:	1000041e 	bne	r2,zero,80d080 <__subdf3+0x804>
  80d070:	300cd0fa 	srli	r6,r6,3
  80d074:	2804977a 	slli	r2,r5,29
  80d078:	4809883a 	mov	r4,r9
  80d07c:	11a2b03a 	or	r17,r2,r6
  80d080:	8806d77a 	srli	r3,r17,29
  80d084:	200890fa 	slli	r4,r4,3
  80d088:	882290fa 	slli	r17,r17,3
  80d08c:	3825883a 	mov	r18,r7
  80d090:	1906b03a 	or	r3,r3,r4
  80d094:	0401ffc4 	movi	r16,2047
  80d098:	003e1906 	br	80c900 <__alt_data_end+0xff80c900>
  80d09c:	000b883a 	mov	r5,zero
  80d0a0:	0005883a 	mov	r2,zero
  80d0a4:	003e2e06 	br	80c960 <__alt_data_end+0xff80c960>
  80d0a8:	0401ffc4 	movi	r16,2047
  80d0ac:	003e1406 	br	80c900 <__alt_data_end+0xff80c900>
  80d0b0:	0005883a 	mov	r2,zero
  80d0b4:	003f7506 	br	80ce8c <__alt_data_end+0xff80ce8c>
  80d0b8:	0005883a 	mov	r2,zero
  80d0bc:	0009883a 	mov	r4,zero
  80d0c0:	003e7806 	br	80caa4 <__alt_data_end+0xff80caa4>
  80d0c4:	123ff804 	addi	r8,r2,-32
  80d0c8:	01000804 	movi	r4,32
  80d0cc:	1a10d83a 	srl	r8,r3,r8
  80d0d0:	11002526 	beq	r2,r4,80d168 <__subdf3+0x8ec>
  80d0d4:	01001004 	movi	r4,64
  80d0d8:	2085c83a 	sub	r2,r4,r2
  80d0dc:	1884983a 	sll	r2,r3,r2
  80d0e0:	1444b03a 	or	r2,r2,r17
  80d0e4:	1004c03a 	cmpne	r2,r2,zero
  80d0e8:	40a2b03a 	or	r17,r8,r2
  80d0ec:	0005883a 	mov	r2,zero
  80d0f0:	003f1606 	br	80cd4c <__alt_data_end+0xff80cd4c>
  80d0f4:	02000434 	movhi	r8,16
  80d0f8:	0009883a 	mov	r4,zero
  80d0fc:	423fffc4 	addi	r8,r8,-1
  80d100:	00bfffc4 	movi	r2,-1
  80d104:	0401ffc4 	movi	r16,2047
  80d108:	003e6606 	br	80caa4 <__alt_data_end+0xff80caa4>
  80d10c:	1c62b03a 	or	r17,r3,r17
  80d110:	8822c03a 	cmpne	r17,r17,zero
  80d114:	0005883a 	mov	r2,zero
  80d118:	003f9906 	br	80cf80 <__alt_data_end+0xff80cf80>
  80d11c:	2807883a 	mov	r3,r5
  80d120:	3023883a 	mov	r17,r6
  80d124:	0401ffc4 	movi	r16,2047
  80d128:	003df506 	br	80c900 <__alt_data_end+0xff80c900>
  80d12c:	2807883a 	mov	r3,r5
  80d130:	3023883a 	mov	r17,r6
  80d134:	003df206 	br	80c900 <__alt_data_end+0xff80c900>
  80d138:	123ff804 	addi	r8,r2,-32
  80d13c:	01000804 	movi	r4,32
  80d140:	1a10d83a 	srl	r8,r3,r8
  80d144:	11000a26 	beq	r2,r4,80d170 <__subdf3+0x8f4>
  80d148:	01001004 	movi	r4,64
  80d14c:	2085c83a 	sub	r2,r4,r2
  80d150:	1884983a 	sll	r2,r3,r2
  80d154:	1444b03a 	or	r2,r2,r17
  80d158:	1004c03a 	cmpne	r2,r2,zero
  80d15c:	40a2b03a 	or	r17,r8,r2
  80d160:	0005883a 	mov	r2,zero
  80d164:	003f8606 	br	80cf80 <__alt_data_end+0xff80cf80>
  80d168:	0005883a 	mov	r2,zero
  80d16c:	003fdc06 	br	80d0e0 <__alt_data_end+0xff80d0e0>
  80d170:	0005883a 	mov	r2,zero
  80d174:	003ff706 	br	80d154 <__alt_data_end+0xff80d154>

0080d178 <__fixdfsi>:
  80d178:	280cd53a 	srli	r6,r5,20
  80d17c:	00c00434 	movhi	r3,16
  80d180:	18ffffc4 	addi	r3,r3,-1
  80d184:	3181ffcc 	andi	r6,r6,2047
  80d188:	01c0ff84 	movi	r7,1022
  80d18c:	28c6703a 	and	r3,r5,r3
  80d190:	280ad7fa 	srli	r5,r5,31
  80d194:	3980120e 	bge	r7,r6,80d1e0 <__fixdfsi+0x68>
  80d198:	00810744 	movi	r2,1053
  80d19c:	11800c16 	blt	r2,r6,80d1d0 <__fixdfsi+0x58>
  80d1a0:	00810cc4 	movi	r2,1075
  80d1a4:	1185c83a 	sub	r2,r2,r6
  80d1a8:	01c007c4 	movi	r7,31
  80d1ac:	18c00434 	orhi	r3,r3,16
  80d1b0:	38800d16 	blt	r7,r2,80d1e8 <__fixdfsi+0x70>
  80d1b4:	31befb44 	addi	r6,r6,-1043
  80d1b8:	2084d83a 	srl	r2,r4,r2
  80d1bc:	1986983a 	sll	r3,r3,r6
  80d1c0:	1884b03a 	or	r2,r3,r2
  80d1c4:	28000726 	beq	r5,zero,80d1e4 <__fixdfsi+0x6c>
  80d1c8:	0085c83a 	sub	r2,zero,r2
  80d1cc:	f800283a 	ret
  80d1d0:	00a00034 	movhi	r2,32768
  80d1d4:	10bfffc4 	addi	r2,r2,-1
  80d1d8:	2885883a 	add	r2,r5,r2
  80d1dc:	f800283a 	ret
  80d1e0:	0005883a 	mov	r2,zero
  80d1e4:	f800283a 	ret
  80d1e8:	008104c4 	movi	r2,1043
  80d1ec:	1185c83a 	sub	r2,r2,r6
  80d1f0:	1884d83a 	srl	r2,r3,r2
  80d1f4:	003ff306 	br	80d1c4 <__alt_data_end+0xff80d1c4>

0080d1f8 <__floatsidf>:
  80d1f8:	defffd04 	addi	sp,sp,-12
  80d1fc:	dfc00215 	stw	ra,8(sp)
  80d200:	dc400115 	stw	r17,4(sp)
  80d204:	dc000015 	stw	r16,0(sp)
  80d208:	20002b26 	beq	r4,zero,80d2b8 <__floatsidf+0xc0>
  80d20c:	2023883a 	mov	r17,r4
  80d210:	2020d7fa 	srli	r16,r4,31
  80d214:	20002d16 	blt	r4,zero,80d2cc <__floatsidf+0xd4>
  80d218:	8809883a 	mov	r4,r17
  80d21c:	0800a5c0 	call	800a5c <__clzsi2>
  80d220:	01410784 	movi	r5,1054
  80d224:	288bc83a 	sub	r5,r5,r2
  80d228:	01010cc4 	movi	r4,1075
  80d22c:	2149c83a 	sub	r4,r4,r5
  80d230:	00c007c4 	movi	r3,31
  80d234:	1900160e 	bge	r3,r4,80d290 <__floatsidf+0x98>
  80d238:	00c104c4 	movi	r3,1043
  80d23c:	1947c83a 	sub	r3,r3,r5
  80d240:	88c6983a 	sll	r3,r17,r3
  80d244:	00800434 	movhi	r2,16
  80d248:	10bfffc4 	addi	r2,r2,-1
  80d24c:	1886703a 	and	r3,r3,r2
  80d250:	2941ffcc 	andi	r5,r5,2047
  80d254:	800d883a 	mov	r6,r16
  80d258:	0005883a 	mov	r2,zero
  80d25c:	280a953a 	slli	r5,r5,20
  80d260:	31803fcc 	andi	r6,r6,255
  80d264:	01000434 	movhi	r4,16
  80d268:	300c97fa 	slli	r6,r6,31
  80d26c:	213fffc4 	addi	r4,r4,-1
  80d270:	1906703a 	and	r3,r3,r4
  80d274:	1946b03a 	or	r3,r3,r5
  80d278:	1986b03a 	or	r3,r3,r6
  80d27c:	dfc00217 	ldw	ra,8(sp)
  80d280:	dc400117 	ldw	r17,4(sp)
  80d284:	dc000017 	ldw	r16,0(sp)
  80d288:	dec00304 	addi	sp,sp,12
  80d28c:	f800283a 	ret
  80d290:	00c002c4 	movi	r3,11
  80d294:	1887c83a 	sub	r3,r3,r2
  80d298:	88c6d83a 	srl	r3,r17,r3
  80d29c:	8904983a 	sll	r2,r17,r4
  80d2a0:	01000434 	movhi	r4,16
  80d2a4:	213fffc4 	addi	r4,r4,-1
  80d2a8:	2941ffcc 	andi	r5,r5,2047
  80d2ac:	1906703a 	and	r3,r3,r4
  80d2b0:	800d883a 	mov	r6,r16
  80d2b4:	003fe906 	br	80d25c <__alt_data_end+0xff80d25c>
  80d2b8:	000d883a 	mov	r6,zero
  80d2bc:	000b883a 	mov	r5,zero
  80d2c0:	0007883a 	mov	r3,zero
  80d2c4:	0005883a 	mov	r2,zero
  80d2c8:	003fe406 	br	80d25c <__alt_data_end+0xff80d25c>
  80d2cc:	0123c83a 	sub	r17,zero,r4
  80d2d0:	003fd106 	br	80d218 <__alt_data_end+0xff80d218>

0080d2d4 <__floatunsidf>:
  80d2d4:	defffe04 	addi	sp,sp,-8
  80d2d8:	dc000015 	stw	r16,0(sp)
  80d2dc:	dfc00115 	stw	ra,4(sp)
  80d2e0:	2021883a 	mov	r16,r4
  80d2e4:	20002226 	beq	r4,zero,80d370 <__floatunsidf+0x9c>
  80d2e8:	0800a5c0 	call	800a5c <__clzsi2>
  80d2ec:	01010784 	movi	r4,1054
  80d2f0:	2089c83a 	sub	r4,r4,r2
  80d2f4:	01810cc4 	movi	r6,1075
  80d2f8:	310dc83a 	sub	r6,r6,r4
  80d2fc:	00c007c4 	movi	r3,31
  80d300:	1980120e 	bge	r3,r6,80d34c <__floatunsidf+0x78>
  80d304:	00c104c4 	movi	r3,1043
  80d308:	1907c83a 	sub	r3,r3,r4
  80d30c:	80ca983a 	sll	r5,r16,r3
  80d310:	00800434 	movhi	r2,16
  80d314:	10bfffc4 	addi	r2,r2,-1
  80d318:	2101ffcc 	andi	r4,r4,2047
  80d31c:	0021883a 	mov	r16,zero
  80d320:	288a703a 	and	r5,r5,r2
  80d324:	2008953a 	slli	r4,r4,20
  80d328:	00c00434 	movhi	r3,16
  80d32c:	18ffffc4 	addi	r3,r3,-1
  80d330:	28c6703a 	and	r3,r5,r3
  80d334:	8005883a 	mov	r2,r16
  80d338:	1906b03a 	or	r3,r3,r4
  80d33c:	dfc00117 	ldw	ra,4(sp)
  80d340:	dc000017 	ldw	r16,0(sp)
  80d344:	dec00204 	addi	sp,sp,8
  80d348:	f800283a 	ret
  80d34c:	00c002c4 	movi	r3,11
  80d350:	188bc83a 	sub	r5,r3,r2
  80d354:	814ad83a 	srl	r5,r16,r5
  80d358:	00c00434 	movhi	r3,16
  80d35c:	18ffffc4 	addi	r3,r3,-1
  80d360:	81a0983a 	sll	r16,r16,r6
  80d364:	2101ffcc 	andi	r4,r4,2047
  80d368:	28ca703a 	and	r5,r5,r3
  80d36c:	003fed06 	br	80d324 <__alt_data_end+0xff80d324>
  80d370:	0009883a 	mov	r4,zero
  80d374:	000b883a 	mov	r5,zero
  80d378:	003fea06 	br	80d324 <__alt_data_end+0xff80d324>

0080d37c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80d37c:	defffe04 	addi	sp,sp,-8
  80d380:	dfc00115 	stw	ra,4(sp)
  80d384:	df000015 	stw	fp,0(sp)
  80d388:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80d38c:	d0a00b17 	ldw	r2,-32724(gp)
  80d390:	10000326 	beq	r2,zero,80d3a0 <alt_get_errno+0x24>
  80d394:	d0a00b17 	ldw	r2,-32724(gp)
  80d398:	103ee83a 	callr	r2
  80d39c:	00000106 	br	80d3a4 <alt_get_errno+0x28>
  80d3a0:	d0a6d104 	addi	r2,gp,-25788
}
  80d3a4:	e037883a 	mov	sp,fp
  80d3a8:	dfc00117 	ldw	ra,4(sp)
  80d3ac:	df000017 	ldw	fp,0(sp)
  80d3b0:	dec00204 	addi	sp,sp,8
  80d3b4:	f800283a 	ret

0080d3b8 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
  80d3b8:	defffb04 	addi	sp,sp,-20
  80d3bc:	dfc00415 	stw	ra,16(sp)
  80d3c0:	df000315 	stw	fp,12(sp)
  80d3c4:	df000304 	addi	fp,sp,12
  80d3c8:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
  80d3cc:	e0bfff17 	ldw	r2,-4(fp)
  80d3d0:	10000616 	blt	r2,zero,80d3ec <close+0x34>
  80d3d4:	e0bfff17 	ldw	r2,-4(fp)
  80d3d8:	10c00324 	muli	r3,r2,12
  80d3dc:	00802074 	movhi	r2,129
  80d3e0:	10823604 	addi	r2,r2,2264
  80d3e4:	1885883a 	add	r2,r3,r2
  80d3e8:	00000106 	br	80d3f0 <close+0x38>
  80d3ec:	0005883a 	mov	r2,zero
  80d3f0:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
  80d3f4:	e0bffd17 	ldw	r2,-12(fp)
  80d3f8:	10001926 	beq	r2,zero,80d460 <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
  80d3fc:	e0bffd17 	ldw	r2,-12(fp)
  80d400:	10800017 	ldw	r2,0(r2)
  80d404:	10800417 	ldw	r2,16(r2)
  80d408:	10000626 	beq	r2,zero,80d424 <close+0x6c>
  80d40c:	e0bffd17 	ldw	r2,-12(fp)
  80d410:	10800017 	ldw	r2,0(r2)
  80d414:	10800417 	ldw	r2,16(r2)
  80d418:	e13ffd17 	ldw	r4,-12(fp)
  80d41c:	103ee83a 	callr	r2
  80d420:	00000106 	br	80d428 <close+0x70>
  80d424:	0005883a 	mov	r2,zero
  80d428:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
  80d42c:	e13fff17 	ldw	r4,-4(fp)
  80d430:	080dab40 	call	80dab4 <alt_release_fd>
    if (rval < 0)
  80d434:	e0bffe17 	ldw	r2,-8(fp)
  80d438:	1000070e 	bge	r2,zero,80d458 <close+0xa0>
    {
      ALT_ERRNO = -rval;
  80d43c:	080d37c0 	call	80d37c <alt_get_errno>
  80d440:	1007883a 	mov	r3,r2
  80d444:	e0bffe17 	ldw	r2,-8(fp)
  80d448:	0085c83a 	sub	r2,zero,r2
  80d44c:	18800015 	stw	r2,0(r3)
      return -1;
  80d450:	00bfffc4 	movi	r2,-1
  80d454:	00000706 	br	80d474 <close+0xbc>
    }
    return 0;
  80d458:	0005883a 	mov	r2,zero
  80d45c:	00000506 	br	80d474 <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
  80d460:	080d37c0 	call	80d37c <alt_get_errno>
  80d464:	1007883a 	mov	r3,r2
  80d468:	00801444 	movi	r2,81
  80d46c:	18800015 	stw	r2,0(r3)
    return -1;
  80d470:	00bfffc4 	movi	r2,-1
  }
}
  80d474:	e037883a 	mov	sp,fp
  80d478:	dfc00117 	ldw	ra,4(sp)
  80d47c:	df000017 	ldw	fp,0(sp)
  80d480:	dec00204 	addi	sp,sp,8
  80d484:	f800283a 	ret

0080d488 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
  80d488:	defffc04 	addi	sp,sp,-16
  80d48c:	df000315 	stw	fp,12(sp)
  80d490:	df000304 	addi	fp,sp,12
  80d494:	e13ffd15 	stw	r4,-12(fp)
  80d498:	e17ffe15 	stw	r5,-8(fp)
  80d49c:	e1bfff15 	stw	r6,-4(fp)
  return len;
  80d4a0:	e0bfff17 	ldw	r2,-4(fp)
}
  80d4a4:	e037883a 	mov	sp,fp
  80d4a8:	df000017 	ldw	fp,0(sp)
  80d4ac:	dec00104 	addi	sp,sp,4
  80d4b0:	f800283a 	ret

0080d4b4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80d4b4:	defffe04 	addi	sp,sp,-8
  80d4b8:	dfc00115 	stw	ra,4(sp)
  80d4bc:	df000015 	stw	fp,0(sp)
  80d4c0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80d4c4:	d0a00b17 	ldw	r2,-32724(gp)
  80d4c8:	10000326 	beq	r2,zero,80d4d8 <alt_get_errno+0x24>
  80d4cc:	d0a00b17 	ldw	r2,-32724(gp)
  80d4d0:	103ee83a 	callr	r2
  80d4d4:	00000106 	br	80d4dc <alt_get_errno+0x28>
  80d4d8:	d0a6d104 	addi	r2,gp,-25788
}
  80d4dc:	e037883a 	mov	sp,fp
  80d4e0:	dfc00117 	ldw	ra,4(sp)
  80d4e4:	df000017 	ldw	fp,0(sp)
  80d4e8:	dec00204 	addi	sp,sp,8
  80d4ec:	f800283a 	ret

0080d4f0 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
  80d4f0:	defffb04 	addi	sp,sp,-20
  80d4f4:	dfc00415 	stw	ra,16(sp)
  80d4f8:	df000315 	stw	fp,12(sp)
  80d4fc:	df000304 	addi	fp,sp,12
  80d500:	e13ffe15 	stw	r4,-8(fp)
  80d504:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80d508:	e0bffe17 	ldw	r2,-8(fp)
  80d50c:	10000616 	blt	r2,zero,80d528 <fstat+0x38>
  80d510:	e0bffe17 	ldw	r2,-8(fp)
  80d514:	10c00324 	muli	r3,r2,12
  80d518:	00802074 	movhi	r2,129
  80d51c:	10823604 	addi	r2,r2,2264
  80d520:	1885883a 	add	r2,r3,r2
  80d524:	00000106 	br	80d52c <fstat+0x3c>
  80d528:	0005883a 	mov	r2,zero
  80d52c:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
  80d530:	e0bffd17 	ldw	r2,-12(fp)
  80d534:	10001026 	beq	r2,zero,80d578 <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
  80d538:	e0bffd17 	ldw	r2,-12(fp)
  80d53c:	10800017 	ldw	r2,0(r2)
  80d540:	10800817 	ldw	r2,32(r2)
  80d544:	10000726 	beq	r2,zero,80d564 <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
  80d548:	e0bffd17 	ldw	r2,-12(fp)
  80d54c:	10800017 	ldw	r2,0(r2)
  80d550:	10800817 	ldw	r2,32(r2)
  80d554:	e17fff17 	ldw	r5,-4(fp)
  80d558:	e13ffd17 	ldw	r4,-12(fp)
  80d55c:	103ee83a 	callr	r2
  80d560:	00000a06 	br	80d58c <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
  80d564:	e0bfff17 	ldw	r2,-4(fp)
  80d568:	00c80004 	movi	r3,8192
  80d56c:	10c00115 	stw	r3,4(r2)
      return 0;
  80d570:	0005883a 	mov	r2,zero
  80d574:	00000506 	br	80d58c <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
  80d578:	080d4b40 	call	80d4b4 <alt_get_errno>
  80d57c:	1007883a 	mov	r3,r2
  80d580:	00801444 	movi	r2,81
  80d584:	18800015 	stw	r2,0(r3)
    return -1;
  80d588:	00bfffc4 	movi	r2,-1
  }
}
  80d58c:	e037883a 	mov	sp,fp
  80d590:	dfc00117 	ldw	ra,4(sp)
  80d594:	df000017 	ldw	fp,0(sp)
  80d598:	dec00204 	addi	sp,sp,8
  80d59c:	f800283a 	ret

0080d5a0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80d5a0:	defffe04 	addi	sp,sp,-8
  80d5a4:	dfc00115 	stw	ra,4(sp)
  80d5a8:	df000015 	stw	fp,0(sp)
  80d5ac:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80d5b0:	d0a00b17 	ldw	r2,-32724(gp)
  80d5b4:	10000326 	beq	r2,zero,80d5c4 <alt_get_errno+0x24>
  80d5b8:	d0a00b17 	ldw	r2,-32724(gp)
  80d5bc:	103ee83a 	callr	r2
  80d5c0:	00000106 	br	80d5c8 <alt_get_errno+0x28>
  80d5c4:	d0a6d104 	addi	r2,gp,-25788
}
  80d5c8:	e037883a 	mov	sp,fp
  80d5cc:	dfc00117 	ldw	ra,4(sp)
  80d5d0:	df000017 	ldw	fp,0(sp)
  80d5d4:	dec00204 	addi	sp,sp,8
  80d5d8:	f800283a 	ret

0080d5dc <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
  80d5dc:	deffed04 	addi	sp,sp,-76
  80d5e0:	dfc01215 	stw	ra,72(sp)
  80d5e4:	df001115 	stw	fp,68(sp)
  80d5e8:	df001104 	addi	fp,sp,68
  80d5ec:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80d5f0:	e0bfff17 	ldw	r2,-4(fp)
  80d5f4:	10000616 	blt	r2,zero,80d610 <isatty+0x34>
  80d5f8:	e0bfff17 	ldw	r2,-4(fp)
  80d5fc:	10c00324 	muli	r3,r2,12
  80d600:	00802074 	movhi	r2,129
  80d604:	10823604 	addi	r2,r2,2264
  80d608:	1885883a 	add	r2,r3,r2
  80d60c:	00000106 	br	80d614 <isatty+0x38>
  80d610:	0005883a 	mov	r2,zero
  80d614:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
  80d618:	e0bfef17 	ldw	r2,-68(fp)
  80d61c:	10000e26 	beq	r2,zero,80d658 <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
  80d620:	e0bfef17 	ldw	r2,-68(fp)
  80d624:	10800017 	ldw	r2,0(r2)
  80d628:	10800817 	ldw	r2,32(r2)
  80d62c:	1000021e 	bne	r2,zero,80d638 <isatty+0x5c>
    {
      return 1;
  80d630:	00800044 	movi	r2,1
  80d634:	00000d06 	br	80d66c <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
  80d638:	e0bff004 	addi	r2,fp,-64
  80d63c:	100b883a 	mov	r5,r2
  80d640:	e13fff17 	ldw	r4,-4(fp)
  80d644:	080d4f00 	call	80d4f0 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
  80d648:	e0bff117 	ldw	r2,-60(fp)
  80d64c:	10880020 	cmpeqi	r2,r2,8192
  80d650:	10803fcc 	andi	r2,r2,255
  80d654:	00000506 	br	80d66c <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
  80d658:	080d5a00 	call	80d5a0 <alt_get_errno>
  80d65c:	1007883a 	mov	r3,r2
  80d660:	00801444 	movi	r2,81
  80d664:	18800015 	stw	r2,0(r3)
    return 0;
  80d668:	0005883a 	mov	r2,zero
  }
}
  80d66c:	e037883a 	mov	sp,fp
  80d670:	dfc00117 	ldw	ra,4(sp)
  80d674:	df000017 	ldw	fp,0(sp)
  80d678:	dec00204 	addi	sp,sp,8
  80d67c:	f800283a 	ret

0080d680 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
  80d680:	defffc04 	addi	sp,sp,-16
  80d684:	df000315 	stw	fp,12(sp)
  80d688:	df000304 	addi	fp,sp,12
  80d68c:	e13ffd15 	stw	r4,-12(fp)
  80d690:	e17ffe15 	stw	r5,-8(fp)
  80d694:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
  80d698:	e0fffe17 	ldw	r3,-8(fp)
  80d69c:	e0bffd17 	ldw	r2,-12(fp)
  80d6a0:	18800c26 	beq	r3,r2,80d6d4 <alt_load_section+0x54>
  {
    while( to != end )
  80d6a4:	00000806 	br	80d6c8 <alt_load_section+0x48>
    {
      *to++ = *from++;
  80d6a8:	e0bffe17 	ldw	r2,-8(fp)
  80d6ac:	10c00104 	addi	r3,r2,4
  80d6b0:	e0fffe15 	stw	r3,-8(fp)
  80d6b4:	e0fffd17 	ldw	r3,-12(fp)
  80d6b8:	19000104 	addi	r4,r3,4
  80d6bc:	e13ffd15 	stw	r4,-12(fp)
  80d6c0:	18c00017 	ldw	r3,0(r3)
  80d6c4:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
  80d6c8:	e0fffe17 	ldw	r3,-8(fp)
  80d6cc:	e0bfff17 	ldw	r2,-4(fp)
  80d6d0:	18bff51e 	bne	r3,r2,80d6a8 <__alt_data_end+0xff80d6a8>
    {
      *to++ = *from++;
    }
  }
}
  80d6d4:	0001883a 	nop
  80d6d8:	e037883a 	mov	sp,fp
  80d6dc:	df000017 	ldw	fp,0(sp)
  80d6e0:	dec00104 	addi	sp,sp,4
  80d6e4:	f800283a 	ret

0080d6e8 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
  80d6e8:	defffe04 	addi	sp,sp,-8
  80d6ec:	dfc00115 	stw	ra,4(sp)
  80d6f0:	df000015 	stw	fp,0(sp)
  80d6f4:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
  80d6f8:	01802074 	movhi	r6,129
  80d6fc:	3186be04 	addi	r6,r6,6904
  80d700:	01402074 	movhi	r5,129
  80d704:	29400304 	addi	r5,r5,12
  80d708:	01002074 	movhi	r4,129
  80d70c:	2106be04 	addi	r4,r4,6904
  80d710:	080d6800 	call	80d680 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
  80d714:	01802034 	movhi	r6,128
  80d718:	31809104 	addi	r6,r6,580
  80d71c:	01402034 	movhi	r5,128
  80d720:	29400804 	addi	r5,r5,32
  80d724:	01002034 	movhi	r4,128
  80d728:	21000804 	addi	r4,r4,32
  80d72c:	080d6800 	call	80d680 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
  80d730:	01802074 	movhi	r6,129
  80d734:	31800304 	addi	r6,r6,12
  80d738:	01402074 	movhi	r5,129
  80d73c:	297f3404 	addi	r5,r5,-816
  80d740:	01002074 	movhi	r4,129
  80d744:	213f3404 	addi	r4,r4,-816
  80d748:	080d6800 	call	80d680 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
  80d74c:	080eb080 	call	80eb08 <alt_dcache_flush_all>
  alt_icache_flush_all();
  80d750:	080ecf00 	call	80ecf0 <alt_icache_flush_all>
}
  80d754:	0001883a 	nop
  80d758:	e037883a 	mov	sp,fp
  80d75c:	dfc00117 	ldw	ra,4(sp)
  80d760:	df000017 	ldw	fp,0(sp)
  80d764:	dec00204 	addi	sp,sp,8
  80d768:	f800283a 	ret

0080d76c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80d76c:	defffe04 	addi	sp,sp,-8
  80d770:	dfc00115 	stw	ra,4(sp)
  80d774:	df000015 	stw	fp,0(sp)
  80d778:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80d77c:	d0a00b17 	ldw	r2,-32724(gp)
  80d780:	10000326 	beq	r2,zero,80d790 <alt_get_errno+0x24>
  80d784:	d0a00b17 	ldw	r2,-32724(gp)
  80d788:	103ee83a 	callr	r2
  80d78c:	00000106 	br	80d794 <alt_get_errno+0x28>
  80d790:	d0a6d104 	addi	r2,gp,-25788
}
  80d794:	e037883a 	mov	sp,fp
  80d798:	dfc00117 	ldw	ra,4(sp)
  80d79c:	df000017 	ldw	fp,0(sp)
  80d7a0:	dec00204 	addi	sp,sp,8
  80d7a4:	f800283a 	ret

0080d7a8 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
  80d7a8:	defff904 	addi	sp,sp,-28
  80d7ac:	dfc00615 	stw	ra,24(sp)
  80d7b0:	df000515 	stw	fp,20(sp)
  80d7b4:	df000504 	addi	fp,sp,20
  80d7b8:	e13ffd15 	stw	r4,-12(fp)
  80d7bc:	e17ffe15 	stw	r5,-8(fp)
  80d7c0:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
  80d7c4:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80d7c8:	e0bffd17 	ldw	r2,-12(fp)
  80d7cc:	10000616 	blt	r2,zero,80d7e8 <lseek+0x40>
  80d7d0:	e0bffd17 	ldw	r2,-12(fp)
  80d7d4:	10c00324 	muli	r3,r2,12
  80d7d8:	00802074 	movhi	r2,129
  80d7dc:	10823604 	addi	r2,r2,2264
  80d7e0:	1885883a 	add	r2,r3,r2
  80d7e4:	00000106 	br	80d7ec <lseek+0x44>
  80d7e8:	0005883a 	mov	r2,zero
  80d7ec:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
  80d7f0:	e0bffc17 	ldw	r2,-16(fp)
  80d7f4:	10001026 	beq	r2,zero,80d838 <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
  80d7f8:	e0bffc17 	ldw	r2,-16(fp)
  80d7fc:	10800017 	ldw	r2,0(r2)
  80d800:	10800717 	ldw	r2,28(r2)
  80d804:	10000926 	beq	r2,zero,80d82c <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
  80d808:	e0bffc17 	ldw	r2,-16(fp)
  80d80c:	10800017 	ldw	r2,0(r2)
  80d810:	10800717 	ldw	r2,28(r2)
  80d814:	e1bfff17 	ldw	r6,-4(fp)
  80d818:	e17ffe17 	ldw	r5,-8(fp)
  80d81c:	e13ffc17 	ldw	r4,-16(fp)
  80d820:	103ee83a 	callr	r2
  80d824:	e0bffb15 	stw	r2,-20(fp)
  80d828:	00000506 	br	80d840 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
  80d82c:	00bfde84 	movi	r2,-134
  80d830:	e0bffb15 	stw	r2,-20(fp)
  80d834:	00000206 	br	80d840 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
  80d838:	00bfebc4 	movi	r2,-81
  80d83c:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
  80d840:	e0bffb17 	ldw	r2,-20(fp)
  80d844:	1000070e 	bge	r2,zero,80d864 <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
  80d848:	080d76c0 	call	80d76c <alt_get_errno>
  80d84c:	1007883a 	mov	r3,r2
  80d850:	e0bffb17 	ldw	r2,-20(fp)
  80d854:	0085c83a 	sub	r2,zero,r2
  80d858:	18800015 	stw	r2,0(r3)
    rc = -1;
  80d85c:	00bfffc4 	movi	r2,-1
  80d860:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
  80d864:	e0bffb17 	ldw	r2,-20(fp)
}
  80d868:	e037883a 	mov	sp,fp
  80d86c:	dfc00117 	ldw	ra,4(sp)
  80d870:	df000017 	ldw	fp,0(sp)
  80d874:	dec00204 	addi	sp,sp,8
  80d878:	f800283a 	ret

0080d87c <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
  80d87c:	defffd04 	addi	sp,sp,-12
  80d880:	dfc00215 	stw	ra,8(sp)
  80d884:	df000115 	stw	fp,4(sp)
  80d888:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
  80d88c:	0009883a 	mov	r4,zero
  80d890:	080dde40 	call	80dde4 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
  80d894:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
  80d898:	080de1c0 	call	80de1c <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
  80d89c:	01802074 	movhi	r6,129
  80d8a0:	31bffb04 	addi	r6,r6,-20
  80d8a4:	01402074 	movhi	r5,129
  80d8a8:	297ffb04 	addi	r5,r5,-20
  80d8ac:	01002074 	movhi	r4,129
  80d8b0:	213ffb04 	addi	r4,r4,-20
  80d8b4:	080f0880 	call	80f088 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
  80d8b8:	080ec300 	call	80ec30 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
  80d8bc:	01002074 	movhi	r4,129
  80d8c0:	213b2404 	addi	r4,r4,-4976
  80d8c4:	080f8880 	call	80f888 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
  80d8c8:	d0a6d217 	ldw	r2,-25784(gp)
  80d8cc:	d0e6d317 	ldw	r3,-25780(gp)
  80d8d0:	d126d417 	ldw	r4,-25776(gp)
  80d8d4:	200d883a 	mov	r6,r4
  80d8d8:	180b883a 	mov	r5,r3
  80d8dc:	1009883a 	mov	r4,r2
  80d8e0:	08003680 	call	800368 <main>
  80d8e4:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
  80d8e8:	01000044 	movi	r4,1
  80d8ec:	080d3b80 	call	80d3b8 <close>
  exit (result);
  80d8f0:	e13fff17 	ldw	r4,-4(fp)
  80d8f4:	080f89c0 	call	80f89c <exit>

0080d8f8 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
  80d8f8:	defffe04 	addi	sp,sp,-8
  80d8fc:	df000115 	stw	fp,4(sp)
  80d900:	df000104 	addi	fp,sp,4
  80d904:	e13fff15 	stw	r4,-4(fp)
}
  80d908:	0001883a 	nop
  80d90c:	e037883a 	mov	sp,fp
  80d910:	df000017 	ldw	fp,0(sp)
  80d914:	dec00104 	addi	sp,sp,4
  80d918:	f800283a 	ret

0080d91c <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
  80d91c:	defffe04 	addi	sp,sp,-8
  80d920:	df000115 	stw	fp,4(sp)
  80d924:	df000104 	addi	fp,sp,4
  80d928:	e13fff15 	stw	r4,-4(fp)
}
  80d92c:	0001883a 	nop
  80d930:	e037883a 	mov	sp,fp
  80d934:	df000017 	ldw	fp,0(sp)
  80d938:	dec00104 	addi	sp,sp,4
  80d93c:	f800283a 	ret

0080d940 <alt_putstr>:
 * Uses the ALT_DRIVER_WRITE() macro to call directly to driver if available.
 * Otherwise, uses newlib provided fputs() routine.
 */
int 
alt_putstr(const char* str)
{
  80d940:	defffd04 	addi	sp,sp,-12
  80d944:	dfc00215 	stw	ra,8(sp)
  80d948:	df000115 	stw	fp,4(sp)
  80d94c:	df000104 	addi	fp,sp,4
  80d950:	e13fff15 	stw	r4,-4(fp)
#else
#ifdef ALT_USE_DIRECT_DRIVERS
    ALT_DRIVER_WRITE_EXTERNS(ALT_STDOUT_DEV);
    return ALT_DRIVER_WRITE(ALT_STDOUT_DEV, str, strlen(str), 0);
#else
    return fputs(str, stdout);
  80d954:	d0a00117 	ldw	r2,-32764(gp)
  80d958:	10800217 	ldw	r2,8(r2)
  80d95c:	100b883a 	mov	r5,r2
  80d960:	e13fff17 	ldw	r4,-4(fp)
  80d964:	080f9700 	call	80f970 <fputs>
#endif
#endif
}
  80d968:	e037883a 	mov	sp,fp
  80d96c:	dfc00117 	ldw	ra,4(sp)
  80d970:	df000017 	ldw	fp,0(sp)
  80d974:	dec00204 	addi	sp,sp,8
  80d978:	f800283a 	ret

0080d97c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80d97c:	defffe04 	addi	sp,sp,-8
  80d980:	dfc00115 	stw	ra,4(sp)
  80d984:	df000015 	stw	fp,0(sp)
  80d988:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80d98c:	d0a00b17 	ldw	r2,-32724(gp)
  80d990:	10000326 	beq	r2,zero,80d9a0 <alt_get_errno+0x24>
  80d994:	d0a00b17 	ldw	r2,-32724(gp)
  80d998:	103ee83a 	callr	r2
  80d99c:	00000106 	br	80d9a4 <alt_get_errno+0x28>
  80d9a0:	d0a6d104 	addi	r2,gp,-25788
}
  80d9a4:	e037883a 	mov	sp,fp
  80d9a8:	dfc00117 	ldw	ra,4(sp)
  80d9ac:	df000017 	ldw	fp,0(sp)
  80d9b0:	dec00204 	addi	sp,sp,8
  80d9b4:	f800283a 	ret

0080d9b8 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
  80d9b8:	defff904 	addi	sp,sp,-28
  80d9bc:	dfc00615 	stw	ra,24(sp)
  80d9c0:	df000515 	stw	fp,20(sp)
  80d9c4:	df000504 	addi	fp,sp,20
  80d9c8:	e13ffd15 	stw	r4,-12(fp)
  80d9cc:	e17ffe15 	stw	r5,-8(fp)
  80d9d0:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80d9d4:	e0bffd17 	ldw	r2,-12(fp)
  80d9d8:	10000616 	blt	r2,zero,80d9f4 <read+0x3c>
  80d9dc:	e0bffd17 	ldw	r2,-12(fp)
  80d9e0:	10c00324 	muli	r3,r2,12
  80d9e4:	00802074 	movhi	r2,129
  80d9e8:	10823604 	addi	r2,r2,2264
  80d9ec:	1885883a 	add	r2,r3,r2
  80d9f0:	00000106 	br	80d9f8 <read+0x40>
  80d9f4:	0005883a 	mov	r2,zero
  80d9f8:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
  80d9fc:	e0bffb17 	ldw	r2,-20(fp)
  80da00:	10002226 	beq	r2,zero,80da8c <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
  80da04:	e0bffb17 	ldw	r2,-20(fp)
  80da08:	10800217 	ldw	r2,8(r2)
  80da0c:	108000cc 	andi	r2,r2,3
  80da10:	10800060 	cmpeqi	r2,r2,1
  80da14:	1000181e 	bne	r2,zero,80da78 <read+0xc0>
        (fd->dev->read))
  80da18:	e0bffb17 	ldw	r2,-20(fp)
  80da1c:	10800017 	ldw	r2,0(r2)
  80da20:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
  80da24:	10001426 	beq	r2,zero,80da78 <read+0xc0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
  80da28:	e0bffb17 	ldw	r2,-20(fp)
  80da2c:	10800017 	ldw	r2,0(r2)
  80da30:	10800517 	ldw	r2,20(r2)
  80da34:	e0ffff17 	ldw	r3,-4(fp)
  80da38:	180d883a 	mov	r6,r3
  80da3c:	e17ffe17 	ldw	r5,-8(fp)
  80da40:	e13ffb17 	ldw	r4,-20(fp)
  80da44:	103ee83a 	callr	r2
  80da48:	e0bffc15 	stw	r2,-16(fp)
  80da4c:	e0bffc17 	ldw	r2,-16(fp)
  80da50:	1000070e 	bge	r2,zero,80da70 <read+0xb8>
        {
          ALT_ERRNO = -rval;
  80da54:	080d97c0 	call	80d97c <alt_get_errno>
  80da58:	1007883a 	mov	r3,r2
  80da5c:	e0bffc17 	ldw	r2,-16(fp)
  80da60:	0085c83a 	sub	r2,zero,r2
  80da64:	18800015 	stw	r2,0(r3)
          return -1;
  80da68:	00bfffc4 	movi	r2,-1
  80da6c:	00000c06 	br	80daa0 <read+0xe8>
        }
        return rval;
  80da70:	e0bffc17 	ldw	r2,-16(fp)
  80da74:	00000a06 	br	80daa0 <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
  80da78:	080d97c0 	call	80d97c <alt_get_errno>
  80da7c:	1007883a 	mov	r3,r2
  80da80:	00800344 	movi	r2,13
  80da84:	18800015 	stw	r2,0(r3)
  80da88:	00000406 	br	80da9c <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
  80da8c:	080d97c0 	call	80d97c <alt_get_errno>
  80da90:	1007883a 	mov	r3,r2
  80da94:	00801444 	movi	r2,81
  80da98:	18800015 	stw	r2,0(r3)
  }
  return -1;
  80da9c:	00bfffc4 	movi	r2,-1
}
  80daa0:	e037883a 	mov	sp,fp
  80daa4:	dfc00117 	ldw	ra,4(sp)
  80daa8:	df000017 	ldw	fp,0(sp)
  80daac:	dec00204 	addi	sp,sp,8
  80dab0:	f800283a 	ret

0080dab4 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
  80dab4:	defffe04 	addi	sp,sp,-8
  80dab8:	df000115 	stw	fp,4(sp)
  80dabc:	df000104 	addi	fp,sp,4
  80dac0:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
  80dac4:	e0bfff17 	ldw	r2,-4(fp)
  80dac8:	108000d0 	cmplti	r2,r2,3
  80dacc:	10000d1e 	bne	r2,zero,80db04 <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
  80dad0:	00802074 	movhi	r2,129
  80dad4:	10823604 	addi	r2,r2,2264
  80dad8:	e0ffff17 	ldw	r3,-4(fp)
  80dadc:	18c00324 	muli	r3,r3,12
  80dae0:	10c5883a 	add	r2,r2,r3
  80dae4:	10800204 	addi	r2,r2,8
  80dae8:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
  80daec:	00802074 	movhi	r2,129
  80daf0:	10823604 	addi	r2,r2,2264
  80daf4:	e0ffff17 	ldw	r3,-4(fp)
  80daf8:	18c00324 	muli	r3,r3,12
  80dafc:	10c5883a 	add	r2,r2,r3
  80db00:	10000015 	stw	zero,0(r2)
  }
}
  80db04:	0001883a 	nop
  80db08:	e037883a 	mov	sp,fp
  80db0c:	df000017 	ldw	fp,0(sp)
  80db10:	dec00104 	addi	sp,sp,4
  80db14:	f800283a 	ret

0080db18 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
  80db18:	defff904 	addi	sp,sp,-28
  80db1c:	df000615 	stw	fp,24(sp)
  80db20:	df000604 	addi	fp,sp,24
  80db24:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80db28:	0005303a 	rdctl	r2,status
  80db2c:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80db30:	e0fffe17 	ldw	r3,-8(fp)
  80db34:	00bfff84 	movi	r2,-2
  80db38:	1884703a 	and	r2,r3,r2
  80db3c:	1001703a 	wrctl	status,r2
  
  return context;
  80db40:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
  80db44:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
  80db48:	d0a00c17 	ldw	r2,-32720(gp)
  80db4c:	10c000c4 	addi	r3,r2,3
  80db50:	00bfff04 	movi	r2,-4
  80db54:	1884703a 	and	r2,r3,r2
  80db58:	d0a00c15 	stw	r2,-32720(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
  80db5c:	d0e00c17 	ldw	r3,-32720(gp)
  80db60:	e0bfff17 	ldw	r2,-4(fp)
  80db64:	1887883a 	add	r3,r3,r2
  80db68:	00804034 	movhi	r2,256
  80db6c:	10800004 	addi	r2,r2,0
  80db70:	10c0062e 	bgeu	r2,r3,80db8c <sbrk+0x74>
  80db74:	e0bffb17 	ldw	r2,-20(fp)
  80db78:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80db7c:	e0bffa17 	ldw	r2,-24(fp)
  80db80:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  80db84:	00bfffc4 	movi	r2,-1
  80db88:	00000b06 	br	80dbb8 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
  80db8c:	d0a00c17 	ldw	r2,-32720(gp)
  80db90:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
  80db94:	d0e00c17 	ldw	r3,-32720(gp)
  80db98:	e0bfff17 	ldw	r2,-4(fp)
  80db9c:	1885883a 	add	r2,r3,r2
  80dba0:	d0a00c15 	stw	r2,-32720(gp)
  80dba4:	e0bffb17 	ldw	r2,-20(fp)
  80dba8:	e0bffc15 	stw	r2,-16(fp)
  80dbac:	e0bffc17 	ldw	r2,-16(fp)
  80dbb0:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
  80dbb4:	e0bffd17 	ldw	r2,-12(fp)
} 
  80dbb8:	e037883a 	mov	sp,fp
  80dbbc:	df000017 	ldw	fp,0(sp)
  80dbc0:	dec00104 	addi	sp,sp,4
  80dbc4:	f800283a 	ret

0080dbc8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80dbc8:	defffe04 	addi	sp,sp,-8
  80dbcc:	dfc00115 	stw	ra,4(sp)
  80dbd0:	df000015 	stw	fp,0(sp)
  80dbd4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80dbd8:	d0a00b17 	ldw	r2,-32724(gp)
  80dbdc:	10000326 	beq	r2,zero,80dbec <alt_get_errno+0x24>
  80dbe0:	d0a00b17 	ldw	r2,-32724(gp)
  80dbe4:	103ee83a 	callr	r2
  80dbe8:	00000106 	br	80dbf0 <alt_get_errno+0x28>
  80dbec:	d0a6d104 	addi	r2,gp,-25788
}
  80dbf0:	e037883a 	mov	sp,fp
  80dbf4:	dfc00117 	ldw	ra,4(sp)
  80dbf8:	df000017 	ldw	fp,0(sp)
  80dbfc:	dec00204 	addi	sp,sp,8
  80dc00:	f800283a 	ret

0080dc04 <times>:
 *
 * ALT_TIMES is mapped onto the times() system call in alt_syscall.h
 */
 
clock_t ALT_TIMES (struct tms *buf)
{
  80dc04:	defffc04 	addi	sp,sp,-16
  80dc08:	dfc00315 	stw	ra,12(sp)
  80dc0c:	df000215 	stw	fp,8(sp)
  80dc10:	df000204 	addi	fp,sp,8
  80dc14:	e13fff15 	stw	r4,-4(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
  80dc18:	d0a6d717 	ldw	r2,-25764(gp)
  clock_t ticks = alt_nticks(); 
  80dc1c:	e0bffe15 	stw	r2,-8(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
  80dc20:	d0a6d617 	ldw	r2,-25768(gp)

  /* If there is no system clock present, generate an error */

  if (!alt_ticks_per_second())
  80dc24:	1000061e 	bne	r2,zero,80dc40 <times+0x3c>
  {
    ALT_ERRNO = ENOSYS;
  80dc28:	080dbc80 	call	80dbc8 <alt_get_errno>
  80dc2c:	1007883a 	mov	r3,r2
  80dc30:	00801604 	movi	r2,88
  80dc34:	18800015 	stw	r2,0(r3)
    return 0;
  80dc38:	0005883a 	mov	r2,zero
  80dc3c:	00000a06 	br	80dc68 <times+0x64>
  }

  /* Otherwise return the elapsed time */

  buf->tms_utime  = 0;
  80dc40:	e0bfff17 	ldw	r2,-4(fp)
  80dc44:	10000015 	stw	zero,0(r2)
  buf->tms_stime  = ticks;
  80dc48:	e0bfff17 	ldw	r2,-4(fp)
  80dc4c:	e0fffe17 	ldw	r3,-8(fp)
  80dc50:	10c00115 	stw	r3,4(r2)
  buf->tms_cutime = 0;
  80dc54:	e0bfff17 	ldw	r2,-4(fp)
  80dc58:	10000215 	stw	zero,8(r2)
  buf->tms_cstime = 0;
  80dc5c:	e0bfff17 	ldw	r2,-4(fp)
  80dc60:	10000315 	stw	zero,12(r2)

  return ticks;
  80dc64:	e0bffe17 	ldw	r2,-8(fp)
}
  80dc68:	e037883a 	mov	sp,fp
  80dc6c:	dfc00117 	ldw	ra,4(sp)
  80dc70:	df000017 	ldw	fp,0(sp)
  80dc74:	dec00204 	addi	sp,sp,8
  80dc78:	f800283a 	ret

0080dc7c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80dc7c:	defffe04 	addi	sp,sp,-8
  80dc80:	dfc00115 	stw	ra,4(sp)
  80dc84:	df000015 	stw	fp,0(sp)
  80dc88:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80dc8c:	d0a00b17 	ldw	r2,-32724(gp)
  80dc90:	10000326 	beq	r2,zero,80dca0 <alt_get_errno+0x24>
  80dc94:	d0a00b17 	ldw	r2,-32724(gp)
  80dc98:	103ee83a 	callr	r2
  80dc9c:	00000106 	br	80dca4 <alt_get_errno+0x28>
  80dca0:	d0a6d104 	addi	r2,gp,-25788
}
  80dca4:	e037883a 	mov	sp,fp
  80dca8:	dfc00117 	ldw	ra,4(sp)
  80dcac:	df000017 	ldw	fp,0(sp)
  80dcb0:	dec00204 	addi	sp,sp,8
  80dcb4:	f800283a 	ret

0080dcb8 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
  80dcb8:	defff904 	addi	sp,sp,-28
  80dcbc:	dfc00615 	stw	ra,24(sp)
  80dcc0:	df000515 	stw	fp,20(sp)
  80dcc4:	df000504 	addi	fp,sp,20
  80dcc8:	e13ffd15 	stw	r4,-12(fp)
  80dccc:	e17ffe15 	stw	r5,-8(fp)
  80dcd0:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80dcd4:	e0bffd17 	ldw	r2,-12(fp)
  80dcd8:	10000616 	blt	r2,zero,80dcf4 <write+0x3c>
  80dcdc:	e0bffd17 	ldw	r2,-12(fp)
  80dce0:	10c00324 	muli	r3,r2,12
  80dce4:	00802074 	movhi	r2,129
  80dce8:	10823604 	addi	r2,r2,2264
  80dcec:	1885883a 	add	r2,r3,r2
  80dcf0:	00000106 	br	80dcf8 <write+0x40>
  80dcf4:	0005883a 	mov	r2,zero
  80dcf8:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
  80dcfc:	e0bffb17 	ldw	r2,-20(fp)
  80dd00:	10002126 	beq	r2,zero,80dd88 <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
  80dd04:	e0bffb17 	ldw	r2,-20(fp)
  80dd08:	10800217 	ldw	r2,8(r2)
  80dd0c:	108000cc 	andi	r2,r2,3
  80dd10:	10001826 	beq	r2,zero,80dd74 <write+0xbc>
  80dd14:	e0bffb17 	ldw	r2,-20(fp)
  80dd18:	10800017 	ldw	r2,0(r2)
  80dd1c:	10800617 	ldw	r2,24(r2)
  80dd20:	10001426 	beq	r2,zero,80dd74 <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
  80dd24:	e0bffb17 	ldw	r2,-20(fp)
  80dd28:	10800017 	ldw	r2,0(r2)
  80dd2c:	10800617 	ldw	r2,24(r2)
  80dd30:	e0ffff17 	ldw	r3,-4(fp)
  80dd34:	180d883a 	mov	r6,r3
  80dd38:	e17ffe17 	ldw	r5,-8(fp)
  80dd3c:	e13ffb17 	ldw	r4,-20(fp)
  80dd40:	103ee83a 	callr	r2
  80dd44:	e0bffc15 	stw	r2,-16(fp)
  80dd48:	e0bffc17 	ldw	r2,-16(fp)
  80dd4c:	1000070e 	bge	r2,zero,80dd6c <write+0xb4>
      {
        ALT_ERRNO = -rval;
  80dd50:	080dc7c0 	call	80dc7c <alt_get_errno>
  80dd54:	1007883a 	mov	r3,r2
  80dd58:	e0bffc17 	ldw	r2,-16(fp)
  80dd5c:	0085c83a 	sub	r2,zero,r2
  80dd60:	18800015 	stw	r2,0(r3)
        return -1;
  80dd64:	00bfffc4 	movi	r2,-1
  80dd68:	00000c06 	br	80dd9c <write+0xe4>
      }
      return rval;
  80dd6c:	e0bffc17 	ldw	r2,-16(fp)
  80dd70:	00000a06 	br	80dd9c <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
  80dd74:	080dc7c0 	call	80dc7c <alt_get_errno>
  80dd78:	1007883a 	mov	r3,r2
  80dd7c:	00800344 	movi	r2,13
  80dd80:	18800015 	stw	r2,0(r3)
  80dd84:	00000406 	br	80dd98 <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
  80dd88:	080dc7c0 	call	80dc7c <alt_get_errno>
  80dd8c:	1007883a 	mov	r3,r2
  80dd90:	00801444 	movi	r2,81
  80dd94:	18800015 	stw	r2,0(r3)
  }
  return -1;
  80dd98:	00bfffc4 	movi	r2,-1
}
  80dd9c:	e037883a 	mov	sp,fp
  80dda0:	dfc00117 	ldw	ra,4(sp)
  80dda4:	df000017 	ldw	fp,0(sp)
  80dda8:	dec00204 	addi	sp,sp,8
  80ddac:	f800283a 	ret

0080ddb0 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
  80ddb0:	defffd04 	addi	sp,sp,-12
  80ddb4:	dfc00215 	stw	ra,8(sp)
  80ddb8:	df000115 	stw	fp,4(sp)
  80ddbc:	df000104 	addi	fp,sp,4
  80ddc0:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
  80ddc4:	d1600804 	addi	r5,gp,-32736
  80ddc8:	e13fff17 	ldw	r4,-4(fp)
  80ddcc:	080eb8c0 	call	80eb8c <alt_dev_llist_insert>
}
  80ddd0:	e037883a 	mov	sp,fp
  80ddd4:	dfc00117 	ldw	ra,4(sp)
  80ddd8:	df000017 	ldw	fp,0(sp)
  80dddc:	dec00204 	addi	sp,sp,8
  80dde0:	f800283a 	ret

0080dde4 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
  80dde4:	defffd04 	addi	sp,sp,-12
  80dde8:	dfc00215 	stw	ra,8(sp)
  80ddec:	df000115 	stw	fp,4(sp)
  80ddf0:	df000104 	addi	fp,sp,4
  80ddf4:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( CPU, cpu);
  80ddf8:	080f4fc0 	call	80f4fc <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
  80ddfc:	00800044 	movi	r2,1
  80de00:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
  80de04:	0001883a 	nop
  80de08:	e037883a 	mov	sp,fp
  80de0c:	dfc00117 	ldw	ra,4(sp)
  80de10:	df000017 	ldw	fp,0(sp)
  80de14:	dec00204 	addi	sp,sp,8
  80de18:	f800283a 	ret

0080de1c <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
  80de1c:	defffe04 	addi	sp,sp,-8
  80de20:	dfc00115 	stw	ra,4(sp)
  80de24:	df000015 	stw	fp,0(sp)
  80de28:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( SYS_CLK_TIMER, sys_clk_timer);
  80de2c:	01c0fa04 	movi	r7,1000
  80de30:	01800044 	movi	r6,1
  80de34:	000b883a 	mov	r5,zero
  80de38:	01004034 	movhi	r4,256
  80de3c:	21040004 	addi	r4,r4,4096
  80de40:	080e9600 	call	80e960 <alt_avalon_timer_sc_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, jtag_uart);
  80de44:	01800404 	movi	r6,16
  80de48:	000b883a 	mov	r5,zero
  80de4c:	01002074 	movhi	r4,129
  80de50:	2102a004 	addi	r4,r4,2688
  80de54:	080dfe40 	call	80dfe4 <altera_avalon_jtag_uart_init>
  80de58:	01002074 	movhi	r4,129
  80de5c:	21029604 	addi	r4,r4,2648
  80de60:	080ddb00 	call	80ddb0 <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID, sysid);
  80de64:	0001883a 	nop
}
  80de68:	0001883a 	nop
  80de6c:	e037883a 	mov	sp,fp
  80de70:	dfc00117 	ldw	ra,4(sp)
  80de74:	df000017 	ldw	fp,0(sp)
  80de78:	dec00204 	addi	sp,sp,8
  80de7c:	f800283a 	ret

0080de80 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
  80de80:	defffa04 	addi	sp,sp,-24
  80de84:	dfc00515 	stw	ra,20(sp)
  80de88:	df000415 	stw	fp,16(sp)
  80de8c:	df000404 	addi	fp,sp,16
  80de90:	e13ffd15 	stw	r4,-12(fp)
  80de94:	e17ffe15 	stw	r5,-8(fp)
  80de98:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  80de9c:	e0bffd17 	ldw	r2,-12(fp)
  80dea0:	10800017 	ldw	r2,0(r2)
  80dea4:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
  80dea8:	e0bffc17 	ldw	r2,-16(fp)
  80deac:	10c00a04 	addi	r3,r2,40
  80deb0:	e0bffd17 	ldw	r2,-12(fp)
  80deb4:	10800217 	ldw	r2,8(r2)
  80deb8:	100f883a 	mov	r7,r2
  80debc:	e1bfff17 	ldw	r6,-4(fp)
  80dec0:	e17ffe17 	ldw	r5,-8(fp)
  80dec4:	1809883a 	mov	r4,r3
  80dec8:	080e4a80 	call	80e4a8 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
  80decc:	e037883a 	mov	sp,fp
  80ded0:	dfc00117 	ldw	ra,4(sp)
  80ded4:	df000017 	ldw	fp,0(sp)
  80ded8:	dec00204 	addi	sp,sp,8
  80dedc:	f800283a 	ret

0080dee0 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
  80dee0:	defffa04 	addi	sp,sp,-24
  80dee4:	dfc00515 	stw	ra,20(sp)
  80dee8:	df000415 	stw	fp,16(sp)
  80deec:	df000404 	addi	fp,sp,16
  80def0:	e13ffd15 	stw	r4,-12(fp)
  80def4:	e17ffe15 	stw	r5,-8(fp)
  80def8:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  80defc:	e0bffd17 	ldw	r2,-12(fp)
  80df00:	10800017 	ldw	r2,0(r2)
  80df04:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
  80df08:	e0bffc17 	ldw	r2,-16(fp)
  80df0c:	10c00a04 	addi	r3,r2,40
  80df10:	e0bffd17 	ldw	r2,-12(fp)
  80df14:	10800217 	ldw	r2,8(r2)
  80df18:	100f883a 	mov	r7,r2
  80df1c:	e1bfff17 	ldw	r6,-4(fp)
  80df20:	e17ffe17 	ldw	r5,-8(fp)
  80df24:	1809883a 	mov	r4,r3
  80df28:	080e6c40 	call	80e6c4 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
  80df2c:	e037883a 	mov	sp,fp
  80df30:	dfc00117 	ldw	ra,4(sp)
  80df34:	df000017 	ldw	fp,0(sp)
  80df38:	dec00204 	addi	sp,sp,8
  80df3c:	f800283a 	ret

0080df40 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
  80df40:	defffc04 	addi	sp,sp,-16
  80df44:	dfc00315 	stw	ra,12(sp)
  80df48:	df000215 	stw	fp,8(sp)
  80df4c:	df000204 	addi	fp,sp,8
  80df50:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  80df54:	e0bfff17 	ldw	r2,-4(fp)
  80df58:	10800017 	ldw	r2,0(r2)
  80df5c:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
  80df60:	e0bffe17 	ldw	r2,-8(fp)
  80df64:	10c00a04 	addi	r3,r2,40
  80df68:	e0bfff17 	ldw	r2,-4(fp)
  80df6c:	10800217 	ldw	r2,8(r2)
  80df70:	100b883a 	mov	r5,r2
  80df74:	1809883a 	mov	r4,r3
  80df78:	080e3500 	call	80e350 <altera_avalon_jtag_uart_close>
}
  80df7c:	e037883a 	mov	sp,fp
  80df80:	dfc00117 	ldw	ra,4(sp)
  80df84:	df000017 	ldw	fp,0(sp)
  80df88:	dec00204 	addi	sp,sp,8
  80df8c:	f800283a 	ret

0080df90 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
  80df90:	defffa04 	addi	sp,sp,-24
  80df94:	dfc00515 	stw	ra,20(sp)
  80df98:	df000415 	stw	fp,16(sp)
  80df9c:	df000404 	addi	fp,sp,16
  80dfa0:	e13ffd15 	stw	r4,-12(fp)
  80dfa4:	e17ffe15 	stw	r5,-8(fp)
  80dfa8:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
  80dfac:	e0bffd17 	ldw	r2,-12(fp)
  80dfb0:	10800017 	ldw	r2,0(r2)
  80dfb4:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
  80dfb8:	e0bffc17 	ldw	r2,-16(fp)
  80dfbc:	10800a04 	addi	r2,r2,40
  80dfc0:	e1bfff17 	ldw	r6,-4(fp)
  80dfc4:	e17ffe17 	ldw	r5,-8(fp)
  80dfc8:	1009883a 	mov	r4,r2
  80dfcc:	080e3b80 	call	80e3b8 <altera_avalon_jtag_uart_ioctl>
}
  80dfd0:	e037883a 	mov	sp,fp
  80dfd4:	dfc00117 	ldw	ra,4(sp)
  80dfd8:	df000017 	ldw	fp,0(sp)
  80dfdc:	dec00204 	addi	sp,sp,8
  80dfe0:	f800283a 	ret

0080dfe4 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
  80dfe4:	defffa04 	addi	sp,sp,-24
  80dfe8:	dfc00515 	stw	ra,20(sp)
  80dfec:	df000415 	stw	fp,16(sp)
  80dff0:	df000404 	addi	fp,sp,16
  80dff4:	e13ffd15 	stw	r4,-12(fp)
  80dff8:	e17ffe15 	stw	r5,-8(fp)
  80dffc:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  80e000:	e0bffd17 	ldw	r2,-12(fp)
  80e004:	00c00044 	movi	r3,1
  80e008:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
  80e00c:	e0bffd17 	ldw	r2,-12(fp)
  80e010:	10800017 	ldw	r2,0(r2)
  80e014:	10800104 	addi	r2,r2,4
  80e018:	1007883a 	mov	r3,r2
  80e01c:	e0bffd17 	ldw	r2,-12(fp)
  80e020:	10800817 	ldw	r2,32(r2)
  80e024:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
  80e028:	e0bffe17 	ldw	r2,-8(fp)
  80e02c:	e0ffff17 	ldw	r3,-4(fp)
  80e030:	d8000015 	stw	zero,0(sp)
  80e034:	e1fffd17 	ldw	r7,-12(fp)
  80e038:	01802074 	movhi	r6,129
  80e03c:	31b82904 	addi	r6,r6,-8028
  80e040:	180b883a 	mov	r5,r3
  80e044:	1009883a 	mov	r4,r2
  80e048:	080ed240 	call	80ed24 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
  80e04c:	e0bffd17 	ldw	r2,-12(fp)
  80e050:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
  80e054:	e0bffd17 	ldw	r2,-12(fp)
  80e058:	10800204 	addi	r2,r2,8
  80e05c:	d0e6d617 	ldw	r3,-25768(gp)
  80e060:	e1fffd17 	ldw	r7,-12(fp)
  80e064:	01802074 	movhi	r6,129
  80e068:	31b8ac04 	addi	r6,r6,-7504
  80e06c:	180b883a 	mov	r5,r3
  80e070:	1009883a 	mov	r4,r2
  80e074:	080e9dc0 	call	80e9dc <alt_alarm_start>
  80e078:	1000040e 	bge	r2,zero,80e08c <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
  80e07c:	e0fffd17 	ldw	r3,-12(fp)
  80e080:	00a00034 	movhi	r2,32768
  80e084:	10bfffc4 	addi	r2,r2,-1
  80e088:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
  80e08c:	0001883a 	nop
  80e090:	e037883a 	mov	sp,fp
  80e094:	dfc00117 	ldw	ra,4(sp)
  80e098:	df000017 	ldw	fp,0(sp)
  80e09c:	dec00204 	addi	sp,sp,8
  80e0a0:	f800283a 	ret

0080e0a4 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
  80e0a4:	defff804 	addi	sp,sp,-32
  80e0a8:	df000715 	stw	fp,28(sp)
  80e0ac:	df000704 	addi	fp,sp,28
  80e0b0:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
  80e0b4:	e0bfff17 	ldw	r2,-4(fp)
  80e0b8:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
  80e0bc:	e0bffb17 	ldw	r2,-20(fp)
  80e0c0:	10800017 	ldw	r2,0(r2)
  80e0c4:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  80e0c8:	e0bffc17 	ldw	r2,-16(fp)
  80e0cc:	10800104 	addi	r2,r2,4
  80e0d0:	10800037 	ldwio	r2,0(r2)
  80e0d4:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
  80e0d8:	e0bffd17 	ldw	r2,-12(fp)
  80e0dc:	1080c00c 	andi	r2,r2,768
  80e0e0:	10006d26 	beq	r2,zero,80e298 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
  80e0e4:	e0bffd17 	ldw	r2,-12(fp)
  80e0e8:	1080400c 	andi	r2,r2,256
  80e0ec:	10003526 	beq	r2,zero,80e1c4 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
  80e0f0:	00800074 	movhi	r2,1
  80e0f4:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80e0f8:	e0bffb17 	ldw	r2,-20(fp)
  80e0fc:	10800a17 	ldw	r2,40(r2)
  80e100:	10800044 	addi	r2,r2,1
  80e104:	1081ffcc 	andi	r2,r2,2047
  80e108:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
  80e10c:	e0bffb17 	ldw	r2,-20(fp)
  80e110:	10c00b17 	ldw	r3,44(r2)
  80e114:	e0bffe17 	ldw	r2,-8(fp)
  80e118:	18801526 	beq	r3,r2,80e170 <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
  80e11c:	e0bffc17 	ldw	r2,-16(fp)
  80e120:	10800037 	ldwio	r2,0(r2)
  80e124:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
  80e128:	e0bff917 	ldw	r2,-28(fp)
  80e12c:	10a0000c 	andi	r2,r2,32768
  80e130:	10001126 	beq	r2,zero,80e178 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
  80e134:	e0bffb17 	ldw	r2,-20(fp)
  80e138:	10800a17 	ldw	r2,40(r2)
  80e13c:	e0fff917 	ldw	r3,-28(fp)
  80e140:	1809883a 	mov	r4,r3
  80e144:	e0fffb17 	ldw	r3,-20(fp)
  80e148:	1885883a 	add	r2,r3,r2
  80e14c:	10800e04 	addi	r2,r2,56
  80e150:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80e154:	e0bffb17 	ldw	r2,-20(fp)
  80e158:	10800a17 	ldw	r2,40(r2)
  80e15c:	10800044 	addi	r2,r2,1
  80e160:	10c1ffcc 	andi	r3,r2,2047
  80e164:	e0bffb17 	ldw	r2,-20(fp)
  80e168:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
  80e16c:	003fe206 	br	80e0f8 <__alt_data_end+0xff80e0f8>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
  80e170:	0001883a 	nop
  80e174:	00000106 	br	80e17c <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
  80e178:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
  80e17c:	e0bff917 	ldw	r2,-28(fp)
  80e180:	10bfffec 	andhi	r2,r2,65535
  80e184:	10000f26 	beq	r2,zero,80e1c4 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  80e188:	e0bffb17 	ldw	r2,-20(fp)
  80e18c:	10c00817 	ldw	r3,32(r2)
  80e190:	00bfff84 	movi	r2,-2
  80e194:	1886703a 	and	r3,r3,r2
  80e198:	e0bffb17 	ldw	r2,-20(fp)
  80e19c:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
  80e1a0:	e0bffc17 	ldw	r2,-16(fp)
  80e1a4:	10800104 	addi	r2,r2,4
  80e1a8:	1007883a 	mov	r3,r2
  80e1ac:	e0bffb17 	ldw	r2,-20(fp)
  80e1b0:	10800817 	ldw	r2,32(r2)
  80e1b4:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  80e1b8:	e0bffc17 	ldw	r2,-16(fp)
  80e1bc:	10800104 	addi	r2,r2,4
  80e1c0:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
  80e1c4:	e0bffd17 	ldw	r2,-12(fp)
  80e1c8:	1080800c 	andi	r2,r2,512
  80e1cc:	103fbe26 	beq	r2,zero,80e0c8 <__alt_data_end+0xff80e0c8>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
  80e1d0:	e0bffd17 	ldw	r2,-12(fp)
  80e1d4:	1004d43a 	srli	r2,r2,16
  80e1d8:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
  80e1dc:	00001406 	br	80e230 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
  80e1e0:	e0bffc17 	ldw	r2,-16(fp)
  80e1e4:	e0fffb17 	ldw	r3,-20(fp)
  80e1e8:	18c00d17 	ldw	r3,52(r3)
  80e1ec:	e13ffb17 	ldw	r4,-20(fp)
  80e1f0:	20c7883a 	add	r3,r4,r3
  80e1f4:	18c20e04 	addi	r3,r3,2104
  80e1f8:	18c00003 	ldbu	r3,0(r3)
  80e1fc:	18c03fcc 	andi	r3,r3,255
  80e200:	18c0201c 	xori	r3,r3,128
  80e204:	18ffe004 	addi	r3,r3,-128
  80e208:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80e20c:	e0bffb17 	ldw	r2,-20(fp)
  80e210:	10800d17 	ldw	r2,52(r2)
  80e214:	10800044 	addi	r2,r2,1
  80e218:	10c1ffcc 	andi	r3,r2,2047
  80e21c:	e0bffb17 	ldw	r2,-20(fp)
  80e220:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
  80e224:	e0bffa17 	ldw	r2,-24(fp)
  80e228:	10bfffc4 	addi	r2,r2,-1
  80e22c:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
  80e230:	e0bffa17 	ldw	r2,-24(fp)
  80e234:	10000526 	beq	r2,zero,80e24c <altera_avalon_jtag_uart_irq+0x1a8>
  80e238:	e0bffb17 	ldw	r2,-20(fp)
  80e23c:	10c00d17 	ldw	r3,52(r2)
  80e240:	e0bffb17 	ldw	r2,-20(fp)
  80e244:	10800c17 	ldw	r2,48(r2)
  80e248:	18bfe51e 	bne	r3,r2,80e1e0 <__alt_data_end+0xff80e1e0>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
  80e24c:	e0bffa17 	ldw	r2,-24(fp)
  80e250:	103f9d26 	beq	r2,zero,80e0c8 <__alt_data_end+0xff80e0c8>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
  80e254:	e0bffb17 	ldw	r2,-20(fp)
  80e258:	10c00817 	ldw	r3,32(r2)
  80e25c:	00bfff44 	movi	r2,-3
  80e260:	1886703a 	and	r3,r3,r2
  80e264:	e0bffb17 	ldw	r2,-20(fp)
  80e268:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  80e26c:	e0bffb17 	ldw	r2,-20(fp)
  80e270:	10800017 	ldw	r2,0(r2)
  80e274:	10800104 	addi	r2,r2,4
  80e278:	1007883a 	mov	r3,r2
  80e27c:	e0bffb17 	ldw	r2,-20(fp)
  80e280:	10800817 	ldw	r2,32(r2)
  80e284:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  80e288:	e0bffc17 	ldw	r2,-16(fp)
  80e28c:	10800104 	addi	r2,r2,4
  80e290:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
  80e294:	003f8c06 	br	80e0c8 <__alt_data_end+0xff80e0c8>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
  80e298:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
  80e29c:	0001883a 	nop
  80e2a0:	e037883a 	mov	sp,fp
  80e2a4:	df000017 	ldw	fp,0(sp)
  80e2a8:	dec00104 	addi	sp,sp,4
  80e2ac:	f800283a 	ret

0080e2b0 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
  80e2b0:	defff804 	addi	sp,sp,-32
  80e2b4:	df000715 	stw	fp,28(sp)
  80e2b8:	df000704 	addi	fp,sp,28
  80e2bc:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
  80e2c0:	e0bffb17 	ldw	r2,-20(fp)
  80e2c4:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
  80e2c8:	e0bff917 	ldw	r2,-28(fp)
  80e2cc:	10800017 	ldw	r2,0(r2)
  80e2d0:	10800104 	addi	r2,r2,4
  80e2d4:	10800037 	ldwio	r2,0(r2)
  80e2d8:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
  80e2dc:	e0bffa17 	ldw	r2,-24(fp)
  80e2e0:	1081000c 	andi	r2,r2,1024
  80e2e4:	10000b26 	beq	r2,zero,80e314 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
  80e2e8:	e0bff917 	ldw	r2,-28(fp)
  80e2ec:	10800017 	ldw	r2,0(r2)
  80e2f0:	10800104 	addi	r2,r2,4
  80e2f4:	1007883a 	mov	r3,r2
  80e2f8:	e0bff917 	ldw	r2,-28(fp)
  80e2fc:	10800817 	ldw	r2,32(r2)
  80e300:	10810014 	ori	r2,r2,1024
  80e304:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
  80e308:	e0bff917 	ldw	r2,-28(fp)
  80e30c:	10000915 	stw	zero,36(r2)
  80e310:	00000a06 	br	80e33c <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
  80e314:	e0bff917 	ldw	r2,-28(fp)
  80e318:	10c00917 	ldw	r3,36(r2)
  80e31c:	00a00034 	movhi	r2,32768
  80e320:	10bfff04 	addi	r2,r2,-4
  80e324:	10c00536 	bltu	r2,r3,80e33c <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
  80e328:	e0bff917 	ldw	r2,-28(fp)
  80e32c:	10800917 	ldw	r2,36(r2)
  80e330:	10c00044 	addi	r3,r2,1
  80e334:	e0bff917 	ldw	r2,-28(fp)
  80e338:	10c00915 	stw	r3,36(r2)
  80e33c:	d0a6d617 	ldw	r2,-25768(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
  80e340:	e037883a 	mov	sp,fp
  80e344:	df000017 	ldw	fp,0(sp)
  80e348:	dec00104 	addi	sp,sp,4
  80e34c:	f800283a 	ret

0080e350 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
  80e350:	defffd04 	addi	sp,sp,-12
  80e354:	df000215 	stw	fp,8(sp)
  80e358:	df000204 	addi	fp,sp,8
  80e35c:	e13ffe15 	stw	r4,-8(fp)
  80e360:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
  80e364:	00000506 	br	80e37c <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
  80e368:	e0bfff17 	ldw	r2,-4(fp)
  80e36c:	1090000c 	andi	r2,r2,16384
  80e370:	10000226 	beq	r2,zero,80e37c <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
  80e374:	00bffd44 	movi	r2,-11
  80e378:	00000b06 	br	80e3a8 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
  80e37c:	e0bffe17 	ldw	r2,-8(fp)
  80e380:	10c00d17 	ldw	r3,52(r2)
  80e384:	e0bffe17 	ldw	r2,-8(fp)
  80e388:	10800c17 	ldw	r2,48(r2)
  80e38c:	18800526 	beq	r3,r2,80e3a4 <altera_avalon_jtag_uart_close+0x54>
  80e390:	e0bffe17 	ldw	r2,-8(fp)
  80e394:	10c00917 	ldw	r3,36(r2)
  80e398:	e0bffe17 	ldw	r2,-8(fp)
  80e39c:	10800117 	ldw	r2,4(r2)
  80e3a0:	18bff136 	bltu	r3,r2,80e368 <__alt_data_end+0xff80e368>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
  80e3a4:	0005883a 	mov	r2,zero
}
  80e3a8:	e037883a 	mov	sp,fp
  80e3ac:	df000017 	ldw	fp,0(sp)
  80e3b0:	dec00104 	addi	sp,sp,4
  80e3b4:	f800283a 	ret

0080e3b8 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
  80e3b8:	defffa04 	addi	sp,sp,-24
  80e3bc:	df000515 	stw	fp,20(sp)
  80e3c0:	df000504 	addi	fp,sp,20
  80e3c4:	e13ffd15 	stw	r4,-12(fp)
  80e3c8:	e17ffe15 	stw	r5,-8(fp)
  80e3cc:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
  80e3d0:	00bff9c4 	movi	r2,-25
  80e3d4:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
  80e3d8:	e0bffe17 	ldw	r2,-8(fp)
  80e3dc:	10da8060 	cmpeqi	r3,r2,27137
  80e3e0:	1800031e 	bne	r3,zero,80e3f0 <altera_avalon_jtag_uart_ioctl+0x38>
  80e3e4:	109a80a0 	cmpeqi	r2,r2,27138
  80e3e8:	1000181e 	bne	r2,zero,80e44c <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
  80e3ec:	00002906 	br	80e494 <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
  80e3f0:	e0bffd17 	ldw	r2,-12(fp)
  80e3f4:	10c00117 	ldw	r3,4(r2)
  80e3f8:	00a00034 	movhi	r2,32768
  80e3fc:	10bfffc4 	addi	r2,r2,-1
  80e400:	18802126 	beq	r3,r2,80e488 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
  80e404:	e0bfff17 	ldw	r2,-4(fp)
  80e408:	10800017 	ldw	r2,0(r2)
  80e40c:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
  80e410:	e0bffc17 	ldw	r2,-16(fp)
  80e414:	10800090 	cmplti	r2,r2,2
  80e418:	1000061e 	bne	r2,zero,80e434 <altera_avalon_jtag_uart_ioctl+0x7c>
  80e41c:	e0fffc17 	ldw	r3,-16(fp)
  80e420:	00a00034 	movhi	r2,32768
  80e424:	10bfffc4 	addi	r2,r2,-1
  80e428:	18800226 	beq	r3,r2,80e434 <altera_avalon_jtag_uart_ioctl+0x7c>
  80e42c:	e0bffc17 	ldw	r2,-16(fp)
  80e430:	00000206 	br	80e43c <altera_avalon_jtag_uart_ioctl+0x84>
  80e434:	00a00034 	movhi	r2,32768
  80e438:	10bfff84 	addi	r2,r2,-2
  80e43c:	e0fffd17 	ldw	r3,-12(fp)
  80e440:	18800115 	stw	r2,4(r3)
      rc = 0;
  80e444:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
  80e448:	00000f06 	br	80e488 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
  80e44c:	e0bffd17 	ldw	r2,-12(fp)
  80e450:	10c00117 	ldw	r3,4(r2)
  80e454:	00a00034 	movhi	r2,32768
  80e458:	10bfffc4 	addi	r2,r2,-1
  80e45c:	18800c26 	beq	r3,r2,80e490 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
  80e460:	e0bffd17 	ldw	r2,-12(fp)
  80e464:	10c00917 	ldw	r3,36(r2)
  80e468:	e0bffd17 	ldw	r2,-12(fp)
  80e46c:	10800117 	ldw	r2,4(r2)
  80e470:	1885803a 	cmpltu	r2,r3,r2
  80e474:	10c03fcc 	andi	r3,r2,255
  80e478:	e0bfff17 	ldw	r2,-4(fp)
  80e47c:	10c00015 	stw	r3,0(r2)
      rc = 0;
  80e480:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
  80e484:	00000206 	br	80e490 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
  80e488:	0001883a 	nop
  80e48c:	00000106 	br	80e494 <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
  80e490:	0001883a 	nop

  default:
    break;
  }

  return rc;
  80e494:	e0bffb17 	ldw	r2,-20(fp)
}
  80e498:	e037883a 	mov	sp,fp
  80e49c:	df000017 	ldw	fp,0(sp)
  80e4a0:	dec00104 	addi	sp,sp,4
  80e4a4:	f800283a 	ret

0080e4a8 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
  80e4a8:	defff304 	addi	sp,sp,-52
  80e4ac:	dfc00c15 	stw	ra,48(sp)
  80e4b0:	df000b15 	stw	fp,44(sp)
  80e4b4:	df000b04 	addi	fp,sp,44
  80e4b8:	e13ffc15 	stw	r4,-16(fp)
  80e4bc:	e17ffd15 	stw	r5,-12(fp)
  80e4c0:	e1bffe15 	stw	r6,-8(fp)
  80e4c4:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
  80e4c8:	e0bffd17 	ldw	r2,-12(fp)
  80e4cc:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
  80e4d0:	00004706 	br	80e5f0 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
  80e4d4:	e0bffc17 	ldw	r2,-16(fp)
  80e4d8:	10800a17 	ldw	r2,40(r2)
  80e4dc:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
  80e4e0:	e0bffc17 	ldw	r2,-16(fp)
  80e4e4:	10800b17 	ldw	r2,44(r2)
  80e4e8:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
  80e4ec:	e0fff717 	ldw	r3,-36(fp)
  80e4f0:	e0bff817 	ldw	r2,-32(fp)
  80e4f4:	18800536 	bltu	r3,r2,80e50c <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
  80e4f8:	e0fff717 	ldw	r3,-36(fp)
  80e4fc:	e0bff817 	ldw	r2,-32(fp)
  80e500:	1885c83a 	sub	r2,r3,r2
  80e504:	e0bff615 	stw	r2,-40(fp)
  80e508:	00000406 	br	80e51c <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
  80e50c:	00c20004 	movi	r3,2048
  80e510:	e0bff817 	ldw	r2,-32(fp)
  80e514:	1885c83a 	sub	r2,r3,r2
  80e518:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
  80e51c:	e0bff617 	ldw	r2,-40(fp)
  80e520:	10001e26 	beq	r2,zero,80e59c <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
  80e524:	e0fffe17 	ldw	r3,-8(fp)
  80e528:	e0bff617 	ldw	r2,-40(fp)
  80e52c:	1880022e 	bgeu	r3,r2,80e538 <altera_avalon_jtag_uart_read+0x90>
        n = space;
  80e530:	e0bffe17 	ldw	r2,-8(fp)
  80e534:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
  80e538:	e0bffc17 	ldw	r2,-16(fp)
  80e53c:	10c00e04 	addi	r3,r2,56
  80e540:	e0bff817 	ldw	r2,-32(fp)
  80e544:	1885883a 	add	r2,r3,r2
  80e548:	e1bff617 	ldw	r6,-40(fp)
  80e54c:	100b883a 	mov	r5,r2
  80e550:	e13ff517 	ldw	r4,-44(fp)
  80e554:	080658c0 	call	80658c <memcpy>
      ptr   += n;
  80e558:	e0fff517 	ldw	r3,-44(fp)
  80e55c:	e0bff617 	ldw	r2,-40(fp)
  80e560:	1885883a 	add	r2,r3,r2
  80e564:	e0bff515 	stw	r2,-44(fp)
      space -= n;
  80e568:	e0fffe17 	ldw	r3,-8(fp)
  80e56c:	e0bff617 	ldw	r2,-40(fp)
  80e570:	1885c83a 	sub	r2,r3,r2
  80e574:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80e578:	e0fff817 	ldw	r3,-32(fp)
  80e57c:	e0bff617 	ldw	r2,-40(fp)
  80e580:	1885883a 	add	r2,r3,r2
  80e584:	10c1ffcc 	andi	r3,r2,2047
  80e588:	e0bffc17 	ldw	r2,-16(fp)
  80e58c:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
  80e590:	e0bffe17 	ldw	r2,-8(fp)
  80e594:	00bfcf16 	blt	zero,r2,80e4d4 <__alt_data_end+0xff80e4d4>
  80e598:	00000106 	br	80e5a0 <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
  80e59c:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
  80e5a0:	e0fff517 	ldw	r3,-44(fp)
  80e5a4:	e0bffd17 	ldw	r2,-12(fp)
  80e5a8:	1880141e 	bne	r3,r2,80e5fc <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
  80e5ac:	e0bfff17 	ldw	r2,-4(fp)
  80e5b0:	1090000c 	andi	r2,r2,16384
  80e5b4:	1000131e 	bne	r2,zero,80e604 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
  80e5b8:	0001883a 	nop
  80e5bc:	e0bffc17 	ldw	r2,-16(fp)
  80e5c0:	10c00a17 	ldw	r3,40(r2)
  80e5c4:	e0bff717 	ldw	r2,-36(fp)
  80e5c8:	1880051e 	bne	r3,r2,80e5e0 <altera_avalon_jtag_uart_read+0x138>
  80e5cc:	e0bffc17 	ldw	r2,-16(fp)
  80e5d0:	10c00917 	ldw	r3,36(r2)
  80e5d4:	e0bffc17 	ldw	r2,-16(fp)
  80e5d8:	10800117 	ldw	r2,4(r2)
  80e5dc:	18bff736 	bltu	r3,r2,80e5bc <__alt_data_end+0xff80e5bc>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
  80e5e0:	e0bffc17 	ldw	r2,-16(fp)
  80e5e4:	10c00a17 	ldw	r3,40(r2)
  80e5e8:	e0bff717 	ldw	r2,-36(fp)
  80e5ec:	18800726 	beq	r3,r2,80e60c <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
  80e5f0:	e0bffe17 	ldw	r2,-8(fp)
  80e5f4:	00bfb716 	blt	zero,r2,80e4d4 <__alt_data_end+0xff80e4d4>
  80e5f8:	00000506 	br	80e610 <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
  80e5fc:	0001883a 	nop
  80e600:	00000306 	br	80e610 <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
  80e604:	0001883a 	nop
  80e608:	00000106 	br	80e610 <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
  80e60c:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
  80e610:	e0fff517 	ldw	r3,-44(fp)
  80e614:	e0bffd17 	ldw	r2,-12(fp)
  80e618:	18801826 	beq	r3,r2,80e67c <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80e61c:	0005303a 	rdctl	r2,status
  80e620:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80e624:	e0fffb17 	ldw	r3,-20(fp)
  80e628:	00bfff84 	movi	r2,-2
  80e62c:	1884703a 	and	r2,r3,r2
  80e630:	1001703a 	wrctl	status,r2
  
  return context;
  80e634:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
  80e638:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  80e63c:	e0bffc17 	ldw	r2,-16(fp)
  80e640:	10800817 	ldw	r2,32(r2)
  80e644:	10c00054 	ori	r3,r2,1
  80e648:	e0bffc17 	ldw	r2,-16(fp)
  80e64c:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  80e650:	e0bffc17 	ldw	r2,-16(fp)
  80e654:	10800017 	ldw	r2,0(r2)
  80e658:	10800104 	addi	r2,r2,4
  80e65c:	1007883a 	mov	r3,r2
  80e660:	e0bffc17 	ldw	r2,-16(fp)
  80e664:	10800817 	ldw	r2,32(r2)
  80e668:	18800035 	stwio	r2,0(r3)
  80e66c:	e0bffa17 	ldw	r2,-24(fp)
  80e670:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80e674:	e0bff917 	ldw	r2,-28(fp)
  80e678:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
  80e67c:	e0fff517 	ldw	r3,-44(fp)
  80e680:	e0bffd17 	ldw	r2,-12(fp)
  80e684:	18800426 	beq	r3,r2,80e698 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
  80e688:	e0fff517 	ldw	r3,-44(fp)
  80e68c:	e0bffd17 	ldw	r2,-12(fp)
  80e690:	1885c83a 	sub	r2,r3,r2
  80e694:	00000606 	br	80e6b0 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
  80e698:	e0bfff17 	ldw	r2,-4(fp)
  80e69c:	1090000c 	andi	r2,r2,16384
  80e6a0:	10000226 	beq	r2,zero,80e6ac <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
  80e6a4:	00bffd44 	movi	r2,-11
  80e6a8:	00000106 	br	80e6b0 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
  80e6ac:	00bffec4 	movi	r2,-5
}
  80e6b0:	e037883a 	mov	sp,fp
  80e6b4:	dfc00117 	ldw	ra,4(sp)
  80e6b8:	df000017 	ldw	fp,0(sp)
  80e6bc:	dec00204 	addi	sp,sp,8
  80e6c0:	f800283a 	ret

0080e6c4 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
  80e6c4:	defff304 	addi	sp,sp,-52
  80e6c8:	dfc00c15 	stw	ra,48(sp)
  80e6cc:	df000b15 	stw	fp,44(sp)
  80e6d0:	df000b04 	addi	fp,sp,44
  80e6d4:	e13ffc15 	stw	r4,-16(fp)
  80e6d8:	e17ffd15 	stw	r5,-12(fp)
  80e6dc:	e1bffe15 	stw	r6,-8(fp)
  80e6e0:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
  80e6e4:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
  80e6e8:	e0bffd17 	ldw	r2,-12(fp)
  80e6ec:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
  80e6f0:	00003706 	br	80e7d0 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
  80e6f4:	e0bffc17 	ldw	r2,-16(fp)
  80e6f8:	10800c17 	ldw	r2,48(r2)
  80e6fc:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
  80e700:	e0bffc17 	ldw	r2,-16(fp)
  80e704:	10800d17 	ldw	r2,52(r2)
  80e708:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
  80e70c:	e0fff917 	ldw	r3,-28(fp)
  80e710:	e0bff517 	ldw	r2,-44(fp)
  80e714:	1880062e 	bgeu	r3,r2,80e730 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
  80e718:	e0fff517 	ldw	r3,-44(fp)
  80e71c:	e0bff917 	ldw	r2,-28(fp)
  80e720:	1885c83a 	sub	r2,r3,r2
  80e724:	10bfffc4 	addi	r2,r2,-1
  80e728:	e0bff615 	stw	r2,-40(fp)
  80e72c:	00000b06 	br	80e75c <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
  80e730:	e0bff517 	ldw	r2,-44(fp)
  80e734:	10000526 	beq	r2,zero,80e74c <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
  80e738:	00c20004 	movi	r3,2048
  80e73c:	e0bff917 	ldw	r2,-28(fp)
  80e740:	1885c83a 	sub	r2,r3,r2
  80e744:	e0bff615 	stw	r2,-40(fp)
  80e748:	00000406 	br	80e75c <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
  80e74c:	00c1ffc4 	movi	r3,2047
  80e750:	e0bff917 	ldw	r2,-28(fp)
  80e754:	1885c83a 	sub	r2,r3,r2
  80e758:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
  80e75c:	e0bff617 	ldw	r2,-40(fp)
  80e760:	10001e26 	beq	r2,zero,80e7dc <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
  80e764:	e0fffe17 	ldw	r3,-8(fp)
  80e768:	e0bff617 	ldw	r2,-40(fp)
  80e76c:	1880022e 	bgeu	r3,r2,80e778 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
  80e770:	e0bffe17 	ldw	r2,-8(fp)
  80e774:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
  80e778:	e0bffc17 	ldw	r2,-16(fp)
  80e77c:	10c20e04 	addi	r3,r2,2104
  80e780:	e0bff917 	ldw	r2,-28(fp)
  80e784:	1885883a 	add	r2,r3,r2
  80e788:	e1bff617 	ldw	r6,-40(fp)
  80e78c:	e17ffd17 	ldw	r5,-12(fp)
  80e790:	1009883a 	mov	r4,r2
  80e794:	080658c0 	call	80658c <memcpy>
      ptr   += n;
  80e798:	e0fffd17 	ldw	r3,-12(fp)
  80e79c:	e0bff617 	ldw	r2,-40(fp)
  80e7a0:	1885883a 	add	r2,r3,r2
  80e7a4:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
  80e7a8:	e0fffe17 	ldw	r3,-8(fp)
  80e7ac:	e0bff617 	ldw	r2,-40(fp)
  80e7b0:	1885c83a 	sub	r2,r3,r2
  80e7b4:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80e7b8:	e0fff917 	ldw	r3,-28(fp)
  80e7bc:	e0bff617 	ldw	r2,-40(fp)
  80e7c0:	1885883a 	add	r2,r3,r2
  80e7c4:	10c1ffcc 	andi	r3,r2,2047
  80e7c8:	e0bffc17 	ldw	r2,-16(fp)
  80e7cc:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
  80e7d0:	e0bffe17 	ldw	r2,-8(fp)
  80e7d4:	00bfc716 	blt	zero,r2,80e6f4 <__alt_data_end+0xff80e6f4>
  80e7d8:	00000106 	br	80e7e0 <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
  80e7dc:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80e7e0:	0005303a 	rdctl	r2,status
  80e7e4:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80e7e8:	e0fffb17 	ldw	r3,-20(fp)
  80e7ec:	00bfff84 	movi	r2,-2
  80e7f0:	1884703a 	and	r2,r3,r2
  80e7f4:	1001703a 	wrctl	status,r2
  
  return context;
  80e7f8:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
  80e7fc:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
  80e800:	e0bffc17 	ldw	r2,-16(fp)
  80e804:	10800817 	ldw	r2,32(r2)
  80e808:	10c00094 	ori	r3,r2,2
  80e80c:	e0bffc17 	ldw	r2,-16(fp)
  80e810:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  80e814:	e0bffc17 	ldw	r2,-16(fp)
  80e818:	10800017 	ldw	r2,0(r2)
  80e81c:	10800104 	addi	r2,r2,4
  80e820:	1007883a 	mov	r3,r2
  80e824:	e0bffc17 	ldw	r2,-16(fp)
  80e828:	10800817 	ldw	r2,32(r2)
  80e82c:	18800035 	stwio	r2,0(r3)
  80e830:	e0bffa17 	ldw	r2,-24(fp)
  80e834:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80e838:	e0bff817 	ldw	r2,-32(fp)
  80e83c:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
  80e840:	e0bffe17 	ldw	r2,-8(fp)
  80e844:	0080100e 	bge	zero,r2,80e888 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
  80e848:	e0bfff17 	ldw	r2,-4(fp)
  80e84c:	1090000c 	andi	r2,r2,16384
  80e850:	1000101e 	bne	r2,zero,80e894 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
  80e854:	0001883a 	nop
  80e858:	e0bffc17 	ldw	r2,-16(fp)
  80e85c:	10c00d17 	ldw	r3,52(r2)
  80e860:	e0bff517 	ldw	r2,-44(fp)
  80e864:	1880051e 	bne	r3,r2,80e87c <altera_avalon_jtag_uart_write+0x1b8>
  80e868:	e0bffc17 	ldw	r2,-16(fp)
  80e86c:	10c00917 	ldw	r3,36(r2)
  80e870:	e0bffc17 	ldw	r2,-16(fp)
  80e874:	10800117 	ldw	r2,4(r2)
  80e878:	18bff736 	bltu	r3,r2,80e858 <__alt_data_end+0xff80e858>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
  80e87c:	e0bffc17 	ldw	r2,-16(fp)
  80e880:	10800917 	ldw	r2,36(r2)
  80e884:	1000051e 	bne	r2,zero,80e89c <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
  80e888:	e0bffe17 	ldw	r2,-8(fp)
  80e88c:	00bfd016 	blt	zero,r2,80e7d0 <__alt_data_end+0xff80e7d0>
  80e890:	00000306 	br	80e8a0 <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
  80e894:	0001883a 	nop
  80e898:	00000106 	br	80e8a0 <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
  80e89c:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
  80e8a0:	e0fffd17 	ldw	r3,-12(fp)
  80e8a4:	e0bff717 	ldw	r2,-36(fp)
  80e8a8:	18800426 	beq	r3,r2,80e8bc <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
  80e8ac:	e0fffd17 	ldw	r3,-12(fp)
  80e8b0:	e0bff717 	ldw	r2,-36(fp)
  80e8b4:	1885c83a 	sub	r2,r3,r2
  80e8b8:	00000606 	br	80e8d4 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
  80e8bc:	e0bfff17 	ldw	r2,-4(fp)
  80e8c0:	1090000c 	andi	r2,r2,16384
  80e8c4:	10000226 	beq	r2,zero,80e8d0 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
  80e8c8:	00bffd44 	movi	r2,-11
  80e8cc:	00000106 	br	80e8d4 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
  80e8d0:	00bffec4 	movi	r2,-5
}
  80e8d4:	e037883a 	mov	sp,fp
  80e8d8:	dfc00117 	ldw	ra,4(sp)
  80e8dc:	df000017 	ldw	fp,0(sp)
  80e8e0:	dec00204 	addi	sp,sp,8
  80e8e4:	f800283a 	ret

0080e8e8 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
  80e8e8:	defffa04 	addi	sp,sp,-24
  80e8ec:	dfc00515 	stw	ra,20(sp)
  80e8f0:	df000415 	stw	fp,16(sp)
  80e8f4:	df000404 	addi	fp,sp,16
  80e8f8:	e13fff15 	stw	r4,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
  80e8fc:	0007883a 	mov	r3,zero
  80e900:	e0bfff17 	ldw	r2,-4(fp)
  80e904:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
  80e908:	e0bfff17 	ldw	r2,-4(fp)
  80e90c:	10800104 	addi	r2,r2,4
  80e910:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80e914:	0005303a 	rdctl	r2,status
  80e918:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80e91c:	e0fffd17 	ldw	r3,-12(fp)
  80e920:	00bfff84 	movi	r2,-2
  80e924:	1884703a 	and	r2,r3,r2
  80e928:	1001703a 	wrctl	status,r2
  
  return context;
  80e92c:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
  80e930:	e0bffc15 	stw	r2,-16(fp)
  alt_tick ();
  80e934:	080f3f40 	call	80f3f4 <alt_tick>
  80e938:	e0bffc17 	ldw	r2,-16(fp)
  80e93c:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80e940:	e0bffe17 	ldw	r2,-8(fp)
  80e944:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
  80e948:	0001883a 	nop
  80e94c:	e037883a 	mov	sp,fp
  80e950:	dfc00117 	ldw	ra,4(sp)
  80e954:	df000017 	ldw	fp,0(sp)
  80e958:	dec00204 	addi	sp,sp,8
  80e95c:	f800283a 	ret

0080e960 <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
  80e960:	defff804 	addi	sp,sp,-32
  80e964:	dfc00715 	stw	ra,28(sp)
  80e968:	df000615 	stw	fp,24(sp)
  80e96c:	df000604 	addi	fp,sp,24
  80e970:	e13ffc15 	stw	r4,-16(fp)
  80e974:	e17ffd15 	stw	r5,-12(fp)
  80e978:	e1bffe15 	stw	r6,-8(fp)
  80e97c:	e1ffff15 	stw	r7,-4(fp)
  80e980:	e0bfff17 	ldw	r2,-4(fp)
  80e984:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
  80e988:	d0a6d617 	ldw	r2,-25768(gp)
  80e98c:	1000021e 	bne	r2,zero,80e998 <alt_avalon_timer_sc_init+0x38>
  {
    _alt_tick_rate = nticks;
  80e990:	e0bffb17 	ldw	r2,-20(fp)
  80e994:	d0a6d615 	stw	r2,-25768(gp)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
  80e998:	e0bffc17 	ldw	r2,-16(fp)
  80e99c:	10800104 	addi	r2,r2,4
  80e9a0:	00c001c4 	movi	r3,7
  80e9a4:	10c00035 	stwio	r3,0(r2)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
  80e9a8:	d8000015 	stw	zero,0(sp)
  80e9ac:	e1fffc17 	ldw	r7,-16(fp)
  80e9b0:	01802074 	movhi	r6,129
  80e9b4:	31ba3a04 	addi	r6,r6,-5912
  80e9b8:	e17ffe17 	ldw	r5,-8(fp)
  80e9bc:	e13ffd17 	ldw	r4,-12(fp)
  80e9c0:	080ed240 	call	80ed24 <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
  80e9c4:	0001883a 	nop
  80e9c8:	e037883a 	mov	sp,fp
  80e9cc:	dfc00117 	ldw	ra,4(sp)
  80e9d0:	df000017 	ldw	fp,0(sp)
  80e9d4:	dec00204 	addi	sp,sp,8
  80e9d8:	f800283a 	ret

0080e9dc <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
  80e9dc:	defff504 	addi	sp,sp,-44
  80e9e0:	df000a15 	stw	fp,40(sp)
  80e9e4:	df000a04 	addi	fp,sp,40
  80e9e8:	e13ffc15 	stw	r4,-16(fp)
  80e9ec:	e17ffd15 	stw	r5,-12(fp)
  80e9f0:	e1bffe15 	stw	r6,-8(fp)
  80e9f4:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
  80e9f8:	e03ff615 	stw	zero,-40(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
  80e9fc:	d0a6d617 	ldw	r2,-25768(gp)
  
  if (alt_ticks_per_second ())
  80ea00:	10003c26 	beq	r2,zero,80eaf4 <alt_alarm_start+0x118>
  {
    if (alarm)
  80ea04:	e0bffc17 	ldw	r2,-16(fp)
  80ea08:	10003826 	beq	r2,zero,80eaec <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
  80ea0c:	e0bffc17 	ldw	r2,-16(fp)
  80ea10:	e0fffe17 	ldw	r3,-8(fp)
  80ea14:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
  80ea18:	e0bffc17 	ldw	r2,-16(fp)
  80ea1c:	e0ffff17 	ldw	r3,-4(fp)
  80ea20:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80ea24:	0005303a 	rdctl	r2,status
  80ea28:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80ea2c:	e0fff917 	ldw	r3,-28(fp)
  80ea30:	00bfff84 	movi	r2,-2
  80ea34:	1884703a 	and	r2,r3,r2
  80ea38:	1001703a 	wrctl	status,r2
  
  return context;
  80ea3c:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
  80ea40:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
  80ea44:	d0a6d717 	ldw	r2,-25764(gp)
      
      current_nticks = alt_nticks();
  80ea48:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
  80ea4c:	e0fffd17 	ldw	r3,-12(fp)
  80ea50:	e0bff617 	ldw	r2,-40(fp)
  80ea54:	1885883a 	add	r2,r3,r2
  80ea58:	10c00044 	addi	r3,r2,1
  80ea5c:	e0bffc17 	ldw	r2,-16(fp)
  80ea60:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
  80ea64:	e0bffc17 	ldw	r2,-16(fp)
  80ea68:	10c00217 	ldw	r3,8(r2)
  80ea6c:	e0bff617 	ldw	r2,-40(fp)
  80ea70:	1880042e 	bgeu	r3,r2,80ea84 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
  80ea74:	e0bffc17 	ldw	r2,-16(fp)
  80ea78:	00c00044 	movi	r3,1
  80ea7c:	10c00405 	stb	r3,16(r2)
  80ea80:	00000206 	br	80ea8c <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
  80ea84:	e0bffc17 	ldw	r2,-16(fp)
  80ea88:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
  80ea8c:	e0bffc17 	ldw	r2,-16(fp)
  80ea90:	d0e00e04 	addi	r3,gp,-32712
  80ea94:	e0fffa15 	stw	r3,-24(fp)
  80ea98:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
  80ea9c:	e0bffb17 	ldw	r2,-20(fp)
  80eaa0:	e0fffa17 	ldw	r3,-24(fp)
  80eaa4:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
  80eaa8:	e0bffa17 	ldw	r2,-24(fp)
  80eaac:	10c00017 	ldw	r3,0(r2)
  80eab0:	e0bffb17 	ldw	r2,-20(fp)
  80eab4:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
  80eab8:	e0bffa17 	ldw	r2,-24(fp)
  80eabc:	10800017 	ldw	r2,0(r2)
  80eac0:	e0fffb17 	ldw	r3,-20(fp)
  80eac4:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
  80eac8:	e0bffa17 	ldw	r2,-24(fp)
  80eacc:	e0fffb17 	ldw	r3,-20(fp)
  80ead0:	10c00015 	stw	r3,0(r2)
  80ead4:	e0bff817 	ldw	r2,-32(fp)
  80ead8:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80eadc:	e0bff717 	ldw	r2,-36(fp)
  80eae0:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
  80eae4:	0005883a 	mov	r2,zero
  80eae8:	00000306 	br	80eaf8 <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
  80eaec:	00bffa84 	movi	r2,-22
  80eaf0:	00000106 	br	80eaf8 <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
  80eaf4:	00bfde84 	movi	r2,-134
  }
}
  80eaf8:	e037883a 	mov	sp,fp
  80eafc:	df000017 	ldw	fp,0(sp)
  80eb00:	dec00104 	addi	sp,sp,4
  80eb04:	f800283a 	ret

0080eb08 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
  80eb08:	defffe04 	addi	sp,sp,-8
  80eb0c:	df000115 	stw	fp,4(sp)
  80eb10:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  80eb14:	e03fff15 	stw	zero,-4(fp)
  80eb18:	00000506 	br	80eb30 <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  80eb1c:	e0bfff17 	ldw	r2,-4(fp)
  80eb20:	1000003b 	flushd	0(r2)
void alt_dcache_flush_all (void)
{
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  80eb24:	e0bfff17 	ldw	r2,-4(fp)
  80eb28:	10800804 	addi	r2,r2,32
  80eb2c:	e0bfff15 	stw	r2,-4(fp)
  80eb30:	e0bfff17 	ldw	r2,-4(fp)
  80eb34:	10810030 	cmpltui	r2,r2,1024
  80eb38:	103ff81e 	bne	r2,zero,80eb1c <__alt_data_end+0xff80eb1c>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
  80eb3c:	0001883a 	nop
  80eb40:	e037883a 	mov	sp,fp
  80eb44:	df000017 	ldw	fp,0(sp)
  80eb48:	dec00104 	addi	sp,sp,4
  80eb4c:	f800283a 	ret

0080eb50 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80eb50:	defffe04 	addi	sp,sp,-8
  80eb54:	dfc00115 	stw	ra,4(sp)
  80eb58:	df000015 	stw	fp,0(sp)
  80eb5c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80eb60:	d0a00b17 	ldw	r2,-32724(gp)
  80eb64:	10000326 	beq	r2,zero,80eb74 <alt_get_errno+0x24>
  80eb68:	d0a00b17 	ldw	r2,-32724(gp)
  80eb6c:	103ee83a 	callr	r2
  80eb70:	00000106 	br	80eb78 <alt_get_errno+0x28>
  80eb74:	d0a6d104 	addi	r2,gp,-25788
}
  80eb78:	e037883a 	mov	sp,fp
  80eb7c:	dfc00117 	ldw	ra,4(sp)
  80eb80:	df000017 	ldw	fp,0(sp)
  80eb84:	dec00204 	addi	sp,sp,8
  80eb88:	f800283a 	ret

0080eb8c <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
  80eb8c:	defffa04 	addi	sp,sp,-24
  80eb90:	dfc00515 	stw	ra,20(sp)
  80eb94:	df000415 	stw	fp,16(sp)
  80eb98:	df000404 	addi	fp,sp,16
  80eb9c:	e13ffe15 	stw	r4,-8(fp)
  80eba0:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
  80eba4:	e0bffe17 	ldw	r2,-8(fp)
  80eba8:	10000326 	beq	r2,zero,80ebb8 <alt_dev_llist_insert+0x2c>
  80ebac:	e0bffe17 	ldw	r2,-8(fp)
  80ebb0:	10800217 	ldw	r2,8(r2)
  80ebb4:	1000061e 	bne	r2,zero,80ebd0 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
  80ebb8:	080eb500 	call	80eb50 <alt_get_errno>
  80ebbc:	1007883a 	mov	r3,r2
  80ebc0:	00800584 	movi	r2,22
  80ebc4:	18800015 	stw	r2,0(r3)
    return -EINVAL;
  80ebc8:	00bffa84 	movi	r2,-22
  80ebcc:	00001306 	br	80ec1c <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
  80ebd0:	e0bffe17 	ldw	r2,-8(fp)
  80ebd4:	e0ffff17 	ldw	r3,-4(fp)
  80ebd8:	e0fffc15 	stw	r3,-16(fp)
  80ebdc:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
  80ebe0:	e0bffd17 	ldw	r2,-12(fp)
  80ebe4:	e0fffc17 	ldw	r3,-16(fp)
  80ebe8:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
  80ebec:	e0bffc17 	ldw	r2,-16(fp)
  80ebf0:	10c00017 	ldw	r3,0(r2)
  80ebf4:	e0bffd17 	ldw	r2,-12(fp)
  80ebf8:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
  80ebfc:	e0bffc17 	ldw	r2,-16(fp)
  80ec00:	10800017 	ldw	r2,0(r2)
  80ec04:	e0fffd17 	ldw	r3,-12(fp)
  80ec08:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
  80ec0c:	e0bffc17 	ldw	r2,-16(fp)
  80ec10:	e0fffd17 	ldw	r3,-12(fp)
  80ec14:	10c00015 	stw	r3,0(r2)

  return 0;  
  80ec18:	0005883a 	mov	r2,zero
}
  80ec1c:	e037883a 	mov	sp,fp
  80ec20:	dfc00117 	ldw	ra,4(sp)
  80ec24:	df000017 	ldw	fp,0(sp)
  80ec28:	dec00204 	addi	sp,sp,8
  80ec2c:	f800283a 	ret

0080ec30 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
  80ec30:	defffd04 	addi	sp,sp,-12
  80ec34:	dfc00215 	stw	ra,8(sp)
  80ec38:	df000115 	stw	fp,4(sp)
  80ec3c:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
  80ec40:	00802074 	movhi	r2,129
  80ec44:	10bf3304 	addi	r2,r2,-820
  80ec48:	e0bfff15 	stw	r2,-4(fp)
  80ec4c:	00000606 	br	80ec68 <_do_ctors+0x38>
        (*ctor) (); 
  80ec50:	e0bfff17 	ldw	r2,-4(fp)
  80ec54:	10800017 	ldw	r2,0(r2)
  80ec58:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
  80ec5c:	e0bfff17 	ldw	r2,-4(fp)
  80ec60:	10bfff04 	addi	r2,r2,-4
  80ec64:	e0bfff15 	stw	r2,-4(fp)
  80ec68:	e0ffff17 	ldw	r3,-4(fp)
  80ec6c:	00802074 	movhi	r2,129
  80ec70:	10bf3404 	addi	r2,r2,-816
  80ec74:	18bff62e 	bgeu	r3,r2,80ec50 <__alt_data_end+0xff80ec50>
        (*ctor) (); 
}
  80ec78:	0001883a 	nop
  80ec7c:	e037883a 	mov	sp,fp
  80ec80:	dfc00117 	ldw	ra,4(sp)
  80ec84:	df000017 	ldw	fp,0(sp)
  80ec88:	dec00204 	addi	sp,sp,8
  80ec8c:	f800283a 	ret

0080ec90 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
  80ec90:	defffd04 	addi	sp,sp,-12
  80ec94:	dfc00215 	stw	ra,8(sp)
  80ec98:	df000115 	stw	fp,4(sp)
  80ec9c:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
  80eca0:	00802074 	movhi	r2,129
  80eca4:	10bf3304 	addi	r2,r2,-820
  80eca8:	e0bfff15 	stw	r2,-4(fp)
  80ecac:	00000606 	br	80ecc8 <_do_dtors+0x38>
        (*dtor) (); 
  80ecb0:	e0bfff17 	ldw	r2,-4(fp)
  80ecb4:	10800017 	ldw	r2,0(r2)
  80ecb8:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
  80ecbc:	e0bfff17 	ldw	r2,-4(fp)
  80ecc0:	10bfff04 	addi	r2,r2,-4
  80ecc4:	e0bfff15 	stw	r2,-4(fp)
  80ecc8:	e0ffff17 	ldw	r3,-4(fp)
  80eccc:	00802074 	movhi	r2,129
  80ecd0:	10bf3404 	addi	r2,r2,-816
  80ecd4:	18bff62e 	bgeu	r3,r2,80ecb0 <__alt_data_end+0xff80ecb0>
        (*dtor) (); 
}
  80ecd8:	0001883a 	nop
  80ecdc:	e037883a 	mov	sp,fp
  80ece0:	dfc00117 	ldw	ra,4(sp)
  80ece4:	df000017 	ldw	fp,0(sp)
  80ece8:	dec00204 	addi	sp,sp,8
  80ecec:	f800283a 	ret

0080ecf0 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
  80ecf0:	defffe04 	addi	sp,sp,-8
  80ecf4:	dfc00115 	stw	ra,4(sp)
  80ecf8:	df000015 	stw	fp,0(sp)
  80ecfc:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
  80ed00:	01480004 	movi	r5,8192
  80ed04:	0009883a 	mov	r4,zero
  80ed08:	080f75c0 	call	80f75c <alt_icache_flush>
#endif
}
  80ed0c:	0001883a 	nop
  80ed10:	e037883a 	mov	sp,fp
  80ed14:	dfc00117 	ldw	ra,4(sp)
  80ed18:	df000017 	ldw	fp,0(sp)
  80ed1c:	dec00204 	addi	sp,sp,8
  80ed20:	f800283a 	ret

0080ed24 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
  80ed24:	defff904 	addi	sp,sp,-28
  80ed28:	dfc00615 	stw	ra,24(sp)
  80ed2c:	df000515 	stw	fp,20(sp)
  80ed30:	df000504 	addi	fp,sp,20
  80ed34:	e13ffc15 	stw	r4,-16(fp)
  80ed38:	e17ffd15 	stw	r5,-12(fp)
  80ed3c:	e1bffe15 	stw	r6,-8(fp)
  80ed40:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
  80ed44:	e0800217 	ldw	r2,8(fp)
  80ed48:	d8800015 	stw	r2,0(sp)
  80ed4c:	e1ffff17 	ldw	r7,-4(fp)
  80ed50:	e1bffe17 	ldw	r6,-8(fp)
  80ed54:	e17ffd17 	ldw	r5,-12(fp)
  80ed58:	e13ffc17 	ldw	r4,-16(fp)
  80ed5c:	080eed40 	call	80eed4 <alt_iic_isr_register>
}  
  80ed60:	e037883a 	mov	sp,fp
  80ed64:	dfc00117 	ldw	ra,4(sp)
  80ed68:	df000017 	ldw	fp,0(sp)
  80ed6c:	dec00204 	addi	sp,sp,8
  80ed70:	f800283a 	ret

0080ed74 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
  80ed74:	defff904 	addi	sp,sp,-28
  80ed78:	df000615 	stw	fp,24(sp)
  80ed7c:	df000604 	addi	fp,sp,24
  80ed80:	e13ffe15 	stw	r4,-8(fp)
  80ed84:	e17fff15 	stw	r5,-4(fp)
  80ed88:	e0bfff17 	ldw	r2,-4(fp)
  80ed8c:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80ed90:	0005303a 	rdctl	r2,status
  80ed94:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80ed98:	e0fffb17 	ldw	r3,-20(fp)
  80ed9c:	00bfff84 	movi	r2,-2
  80eda0:	1884703a 	and	r2,r3,r2
  80eda4:	1001703a 	wrctl	status,r2
  
  return context;
  80eda8:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
  80edac:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
  80edb0:	00c00044 	movi	r3,1
  80edb4:	e0bffa17 	ldw	r2,-24(fp)
  80edb8:	1884983a 	sll	r2,r3,r2
  80edbc:	1007883a 	mov	r3,r2
  80edc0:	d0a6d517 	ldw	r2,-25772(gp)
  80edc4:	1884b03a 	or	r2,r3,r2
  80edc8:	d0a6d515 	stw	r2,-25772(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
  80edcc:	d0a6d517 	ldw	r2,-25772(gp)
  80edd0:	100170fa 	wrctl	ienable,r2
  80edd4:	e0bffc17 	ldw	r2,-16(fp)
  80edd8:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80eddc:	e0bffd17 	ldw	r2,-12(fp)
  80ede0:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
  80ede4:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
  80ede8:	0001883a 	nop
}
  80edec:	e037883a 	mov	sp,fp
  80edf0:	df000017 	ldw	fp,0(sp)
  80edf4:	dec00104 	addi	sp,sp,4
  80edf8:	f800283a 	ret

0080edfc <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
  80edfc:	defff904 	addi	sp,sp,-28
  80ee00:	df000615 	stw	fp,24(sp)
  80ee04:	df000604 	addi	fp,sp,24
  80ee08:	e13ffe15 	stw	r4,-8(fp)
  80ee0c:	e17fff15 	stw	r5,-4(fp)
  80ee10:	e0bfff17 	ldw	r2,-4(fp)
  80ee14:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80ee18:	0005303a 	rdctl	r2,status
  80ee1c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80ee20:	e0fffb17 	ldw	r3,-20(fp)
  80ee24:	00bfff84 	movi	r2,-2
  80ee28:	1884703a 	and	r2,r3,r2
  80ee2c:	1001703a 	wrctl	status,r2
  
  return context;
  80ee30:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
  80ee34:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
  80ee38:	00c00044 	movi	r3,1
  80ee3c:	e0bffa17 	ldw	r2,-24(fp)
  80ee40:	1884983a 	sll	r2,r3,r2
  80ee44:	0084303a 	nor	r2,zero,r2
  80ee48:	1007883a 	mov	r3,r2
  80ee4c:	d0a6d517 	ldw	r2,-25772(gp)
  80ee50:	1884703a 	and	r2,r3,r2
  80ee54:	d0a6d515 	stw	r2,-25772(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
  80ee58:	d0a6d517 	ldw	r2,-25772(gp)
  80ee5c:	100170fa 	wrctl	ienable,r2
  80ee60:	e0bffc17 	ldw	r2,-16(fp)
  80ee64:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80ee68:	e0bffd17 	ldw	r2,-12(fp)
  80ee6c:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
  80ee70:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
  80ee74:	0001883a 	nop
}
  80ee78:	e037883a 	mov	sp,fp
  80ee7c:	df000017 	ldw	fp,0(sp)
  80ee80:	dec00104 	addi	sp,sp,4
  80ee84:	f800283a 	ret

0080ee88 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
  80ee88:	defffc04 	addi	sp,sp,-16
  80ee8c:	df000315 	stw	fp,12(sp)
  80ee90:	df000304 	addi	fp,sp,12
  80ee94:	e13ffe15 	stw	r4,-8(fp)
  80ee98:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
  80ee9c:	000530fa 	rdctl	r2,ienable
  80eea0:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
  80eea4:	00c00044 	movi	r3,1
  80eea8:	e0bfff17 	ldw	r2,-4(fp)
  80eeac:	1884983a 	sll	r2,r3,r2
  80eeb0:	1007883a 	mov	r3,r2
  80eeb4:	e0bffd17 	ldw	r2,-12(fp)
  80eeb8:	1884703a 	and	r2,r3,r2
  80eebc:	1004c03a 	cmpne	r2,r2,zero
  80eec0:	10803fcc 	andi	r2,r2,255
}
  80eec4:	e037883a 	mov	sp,fp
  80eec8:	df000017 	ldw	fp,0(sp)
  80eecc:	dec00104 	addi	sp,sp,4
  80eed0:	f800283a 	ret

0080eed4 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
  80eed4:	defff504 	addi	sp,sp,-44
  80eed8:	dfc00a15 	stw	ra,40(sp)
  80eedc:	df000915 	stw	fp,36(sp)
  80eee0:	df000904 	addi	fp,sp,36
  80eee4:	e13ffc15 	stw	r4,-16(fp)
  80eee8:	e17ffd15 	stw	r5,-12(fp)
  80eeec:	e1bffe15 	stw	r6,-8(fp)
  80eef0:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
  80eef4:	00bffa84 	movi	r2,-22
  80eef8:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
  80eefc:	e0bffd17 	ldw	r2,-12(fp)
  80ef00:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
  80ef04:	e0bff817 	ldw	r2,-32(fp)
  80ef08:	10800808 	cmpgei	r2,r2,32
  80ef0c:	1000271e 	bne	r2,zero,80efac <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80ef10:	0005303a 	rdctl	r2,status
  80ef14:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80ef18:	e0fffb17 	ldw	r3,-20(fp)
  80ef1c:	00bfff84 	movi	r2,-2
  80ef20:	1884703a 	and	r2,r3,r2
  80ef24:	1001703a 	wrctl	status,r2
  
  return context;
  80ef28:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
  80ef2c:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
  80ef30:	00802074 	movhi	r2,129
  80ef34:	108d9104 	addi	r2,r2,13892
  80ef38:	e0fff817 	ldw	r3,-32(fp)
  80ef3c:	180690fa 	slli	r3,r3,3
  80ef40:	10c5883a 	add	r2,r2,r3
  80ef44:	e0fffe17 	ldw	r3,-8(fp)
  80ef48:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
  80ef4c:	00802074 	movhi	r2,129
  80ef50:	108d9104 	addi	r2,r2,13892
  80ef54:	e0fff817 	ldw	r3,-32(fp)
  80ef58:	180690fa 	slli	r3,r3,3
  80ef5c:	10c5883a 	add	r2,r2,r3
  80ef60:	10800104 	addi	r2,r2,4
  80ef64:	e0ffff17 	ldw	r3,-4(fp)
  80ef68:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
  80ef6c:	e0bffe17 	ldw	r2,-8(fp)
  80ef70:	10000526 	beq	r2,zero,80ef88 <alt_iic_isr_register+0xb4>
  80ef74:	e0bff817 	ldw	r2,-32(fp)
  80ef78:	100b883a 	mov	r5,r2
  80ef7c:	e13ffc17 	ldw	r4,-16(fp)
  80ef80:	080ed740 	call	80ed74 <alt_ic_irq_enable>
  80ef84:	00000406 	br	80ef98 <alt_iic_isr_register+0xc4>
  80ef88:	e0bff817 	ldw	r2,-32(fp)
  80ef8c:	100b883a 	mov	r5,r2
  80ef90:	e13ffc17 	ldw	r4,-16(fp)
  80ef94:	080edfc0 	call	80edfc <alt_ic_irq_disable>
  80ef98:	e0bff715 	stw	r2,-36(fp)
  80ef9c:	e0bffa17 	ldw	r2,-24(fp)
  80efa0:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80efa4:	e0bff917 	ldw	r2,-28(fp)
  80efa8:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
  80efac:	e0bff717 	ldw	r2,-36(fp)
}
  80efb0:	e037883a 	mov	sp,fp
  80efb4:	dfc00117 	ldw	ra,4(sp)
  80efb8:	df000017 	ldw	fp,0(sp)
  80efbc:	dec00204 	addi	sp,sp,8
  80efc0:	f800283a 	ret

0080efc4 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
  80efc4:	defff904 	addi	sp,sp,-28
  80efc8:	dfc00615 	stw	ra,24(sp)
  80efcc:	df000515 	stw	fp,20(sp)
  80efd0:	df000504 	addi	fp,sp,20
  80efd4:	e13ffc15 	stw	r4,-16(fp)
  80efd8:	e17ffd15 	stw	r5,-12(fp)
  80efdc:	e1bffe15 	stw	r6,-8(fp)
  80efe0:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
  80efe4:	e1bfff17 	ldw	r6,-4(fp)
  80efe8:	e17ffe17 	ldw	r5,-8(fp)
  80efec:	e13ffd17 	ldw	r4,-12(fp)
  80eff0:	080f2040 	call	80f204 <open>
  80eff4:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
  80eff8:	e0bffb17 	ldw	r2,-20(fp)
  80effc:	10001c16 	blt	r2,zero,80f070 <alt_open_fd+0xac>
  {
    fd->dev      = alt_fd_list[old].dev;
  80f000:	00802074 	movhi	r2,129
  80f004:	10823604 	addi	r2,r2,2264
  80f008:	e0fffb17 	ldw	r3,-20(fp)
  80f00c:	18c00324 	muli	r3,r3,12
  80f010:	10c5883a 	add	r2,r2,r3
  80f014:	10c00017 	ldw	r3,0(r2)
  80f018:	e0bffc17 	ldw	r2,-16(fp)
  80f01c:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
  80f020:	00802074 	movhi	r2,129
  80f024:	10823604 	addi	r2,r2,2264
  80f028:	e0fffb17 	ldw	r3,-20(fp)
  80f02c:	18c00324 	muli	r3,r3,12
  80f030:	10c5883a 	add	r2,r2,r3
  80f034:	10800104 	addi	r2,r2,4
  80f038:	10c00017 	ldw	r3,0(r2)
  80f03c:	e0bffc17 	ldw	r2,-16(fp)
  80f040:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
  80f044:	00802074 	movhi	r2,129
  80f048:	10823604 	addi	r2,r2,2264
  80f04c:	e0fffb17 	ldw	r3,-20(fp)
  80f050:	18c00324 	muli	r3,r3,12
  80f054:	10c5883a 	add	r2,r2,r3
  80f058:	10800204 	addi	r2,r2,8
  80f05c:	10c00017 	ldw	r3,0(r2)
  80f060:	e0bffc17 	ldw	r2,-16(fp)
  80f064:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
  80f068:	e13ffb17 	ldw	r4,-20(fp)
  80f06c:	080dab40 	call	80dab4 <alt_release_fd>
  }
} 
  80f070:	0001883a 	nop
  80f074:	e037883a 	mov	sp,fp
  80f078:	dfc00117 	ldw	ra,4(sp)
  80f07c:	df000017 	ldw	fp,0(sp)
  80f080:	dec00204 	addi	sp,sp,8
  80f084:	f800283a 	ret

0080f088 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
  80f088:	defffb04 	addi	sp,sp,-20
  80f08c:	dfc00415 	stw	ra,16(sp)
  80f090:	df000315 	stw	fp,12(sp)
  80f094:	df000304 	addi	fp,sp,12
  80f098:	e13ffd15 	stw	r4,-12(fp)
  80f09c:	e17ffe15 	stw	r5,-8(fp)
  80f0a0:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
  80f0a4:	01c07fc4 	movi	r7,511
  80f0a8:	01800044 	movi	r6,1
  80f0ac:	e17ffd17 	ldw	r5,-12(fp)
  80f0b0:	01002074 	movhi	r4,129
  80f0b4:	21023904 	addi	r4,r4,2276
  80f0b8:	080efc40 	call	80efc4 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
  80f0bc:	01c07fc4 	movi	r7,511
  80f0c0:	000d883a 	mov	r6,zero
  80f0c4:	e17ffe17 	ldw	r5,-8(fp)
  80f0c8:	01002074 	movhi	r4,129
  80f0cc:	21023604 	addi	r4,r4,2264
  80f0d0:	080efc40 	call	80efc4 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
  80f0d4:	01c07fc4 	movi	r7,511
  80f0d8:	01800044 	movi	r6,1
  80f0dc:	e17fff17 	ldw	r5,-4(fp)
  80f0e0:	01002074 	movhi	r4,129
  80f0e4:	21023c04 	addi	r4,r4,2288
  80f0e8:	080efc40 	call	80efc4 <alt_open_fd>
}  
  80f0ec:	0001883a 	nop
  80f0f0:	e037883a 	mov	sp,fp
  80f0f4:	dfc00117 	ldw	ra,4(sp)
  80f0f8:	df000017 	ldw	fp,0(sp)
  80f0fc:	dec00204 	addi	sp,sp,8
  80f100:	f800283a 	ret

0080f104 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80f104:	defffe04 	addi	sp,sp,-8
  80f108:	dfc00115 	stw	ra,4(sp)
  80f10c:	df000015 	stw	fp,0(sp)
  80f110:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80f114:	d0a00b17 	ldw	r2,-32724(gp)
  80f118:	10000326 	beq	r2,zero,80f128 <alt_get_errno+0x24>
  80f11c:	d0a00b17 	ldw	r2,-32724(gp)
  80f120:	103ee83a 	callr	r2
  80f124:	00000106 	br	80f12c <alt_get_errno+0x28>
  80f128:	d0a6d104 	addi	r2,gp,-25788
}
  80f12c:	e037883a 	mov	sp,fp
  80f130:	dfc00117 	ldw	ra,4(sp)
  80f134:	df000017 	ldw	fp,0(sp)
  80f138:	dec00204 	addi	sp,sp,8
  80f13c:	f800283a 	ret

0080f140 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
  80f140:	defffd04 	addi	sp,sp,-12
  80f144:	df000215 	stw	fp,8(sp)
  80f148:	df000204 	addi	fp,sp,8
  80f14c:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
  80f150:	e0bfff17 	ldw	r2,-4(fp)
  80f154:	10800217 	ldw	r2,8(r2)
  80f158:	10d00034 	orhi	r3,r2,16384
  80f15c:	e0bfff17 	ldw	r2,-4(fp)
  80f160:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  80f164:	e03ffe15 	stw	zero,-8(fp)
  80f168:	00001d06 	br	80f1e0 <alt_file_locked+0xa0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
  80f16c:	00802074 	movhi	r2,129
  80f170:	10823604 	addi	r2,r2,2264
  80f174:	e0fffe17 	ldw	r3,-8(fp)
  80f178:	18c00324 	muli	r3,r3,12
  80f17c:	10c5883a 	add	r2,r2,r3
  80f180:	10c00017 	ldw	r3,0(r2)
  80f184:	e0bfff17 	ldw	r2,-4(fp)
  80f188:	10800017 	ldw	r2,0(r2)
  80f18c:	1880111e 	bne	r3,r2,80f1d4 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
  80f190:	00802074 	movhi	r2,129
  80f194:	10823604 	addi	r2,r2,2264
  80f198:	e0fffe17 	ldw	r3,-8(fp)
  80f19c:	18c00324 	muli	r3,r3,12
  80f1a0:	10c5883a 	add	r2,r2,r3
  80f1a4:	10800204 	addi	r2,r2,8
  80f1a8:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
  80f1ac:	1000090e 	bge	r2,zero,80f1d4 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
  80f1b0:	e0bffe17 	ldw	r2,-8(fp)
  80f1b4:	10c00324 	muli	r3,r2,12
  80f1b8:	00802074 	movhi	r2,129
  80f1bc:	10823604 	addi	r2,r2,2264
  80f1c0:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
  80f1c4:	e0bfff17 	ldw	r2,-4(fp)
  80f1c8:	18800226 	beq	r3,r2,80f1d4 <alt_file_locked+0x94>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
  80f1cc:	00bffcc4 	movi	r2,-13
  80f1d0:	00000806 	br	80f1f4 <alt_file_locked+0xb4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  80f1d4:	e0bffe17 	ldw	r2,-8(fp)
  80f1d8:	10800044 	addi	r2,r2,1
  80f1dc:	e0bffe15 	stw	r2,-8(fp)
  80f1e0:	d0a00a17 	ldw	r2,-32728(gp)
  80f1e4:	1007883a 	mov	r3,r2
  80f1e8:	e0bffe17 	ldw	r2,-8(fp)
  80f1ec:	18bfdf2e 	bgeu	r3,r2,80f16c <__alt_data_end+0xff80f16c>
    }
  }
  
  /* The device is not locked */
 
  return 0;
  80f1f0:	0005883a 	mov	r2,zero
}
  80f1f4:	e037883a 	mov	sp,fp
  80f1f8:	df000017 	ldw	fp,0(sp)
  80f1fc:	dec00104 	addi	sp,sp,4
  80f200:	f800283a 	ret

0080f204 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
  80f204:	defff604 	addi	sp,sp,-40
  80f208:	dfc00915 	stw	ra,36(sp)
  80f20c:	df000815 	stw	fp,32(sp)
  80f210:	df000804 	addi	fp,sp,32
  80f214:	e13ffd15 	stw	r4,-12(fp)
  80f218:	e17ffe15 	stw	r5,-8(fp)
  80f21c:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
  80f220:	00bfffc4 	movi	r2,-1
  80f224:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
  80f228:	00bffb44 	movi	r2,-19
  80f22c:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
  80f230:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
  80f234:	d1600804 	addi	r5,gp,-32736
  80f238:	e13ffd17 	ldw	r4,-12(fp)
  80f23c:	080f5200 	call	80f520 <alt_find_dev>
  80f240:	e0bff815 	stw	r2,-32(fp)
  80f244:	e0bff817 	ldw	r2,-32(fp)
  80f248:	1000051e 	bne	r2,zero,80f260 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
  80f24c:	e13ffd17 	ldw	r4,-12(fp)
  80f250:	080f5b00 	call	80f5b0 <alt_find_file>
  80f254:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
  80f258:	00800044 	movi	r2,1
  80f25c:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
  80f260:	e0bff817 	ldw	r2,-32(fp)
  80f264:	10002926 	beq	r2,zero,80f30c <open+0x108>
  {
    if ((index = alt_get_fd (dev)) < 0)
  80f268:	e13ff817 	ldw	r4,-32(fp)
  80f26c:	080f6b80 	call	80f6b8 <alt_get_fd>
  80f270:	e0bff915 	stw	r2,-28(fp)
  80f274:	e0bff917 	ldw	r2,-28(fp)
  80f278:	1000030e 	bge	r2,zero,80f288 <open+0x84>
    {
      status = index;
  80f27c:	e0bff917 	ldw	r2,-28(fp)
  80f280:	e0bffa15 	stw	r2,-24(fp)
  80f284:	00002306 	br	80f314 <open+0x110>
    }
    else
    {
      fd = &alt_fd_list[index];
  80f288:	e0bff917 	ldw	r2,-28(fp)
  80f28c:	10c00324 	muli	r3,r2,12
  80f290:	00802074 	movhi	r2,129
  80f294:	10823604 	addi	r2,r2,2264
  80f298:	1885883a 	add	r2,r3,r2
  80f29c:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
  80f2a0:	e0fffe17 	ldw	r3,-8(fp)
  80f2a4:	00900034 	movhi	r2,16384
  80f2a8:	10bfffc4 	addi	r2,r2,-1
  80f2ac:	1886703a 	and	r3,r3,r2
  80f2b0:	e0bffc17 	ldw	r2,-16(fp)
  80f2b4:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
  80f2b8:	e0bffb17 	ldw	r2,-20(fp)
  80f2bc:	1000051e 	bne	r2,zero,80f2d4 <open+0xd0>
  80f2c0:	e13ffc17 	ldw	r4,-16(fp)
  80f2c4:	080f1400 	call	80f140 <alt_file_locked>
  80f2c8:	e0bffa15 	stw	r2,-24(fp)
  80f2cc:	e0bffa17 	ldw	r2,-24(fp)
  80f2d0:	10001016 	blt	r2,zero,80f314 <open+0x110>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
  80f2d4:	e0bff817 	ldw	r2,-32(fp)
  80f2d8:	10800317 	ldw	r2,12(r2)
  80f2dc:	10000826 	beq	r2,zero,80f300 <open+0xfc>
  80f2e0:	e0bff817 	ldw	r2,-32(fp)
  80f2e4:	10800317 	ldw	r2,12(r2)
  80f2e8:	e1ffff17 	ldw	r7,-4(fp)
  80f2ec:	e1bffe17 	ldw	r6,-8(fp)
  80f2f0:	e17ffd17 	ldw	r5,-12(fp)
  80f2f4:	e13ffc17 	ldw	r4,-16(fp)
  80f2f8:	103ee83a 	callr	r2
  80f2fc:	00000106 	br	80f304 <open+0x100>
  80f300:	0005883a 	mov	r2,zero
  80f304:	e0bffa15 	stw	r2,-24(fp)
  80f308:	00000206 	br	80f314 <open+0x110>
      }
    }
  }
  else
  {
    status = -ENODEV;
  80f30c:	00bffb44 	movi	r2,-19
  80f310:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
  80f314:	e0bffa17 	ldw	r2,-24(fp)
  80f318:	1000090e 	bge	r2,zero,80f340 <open+0x13c>
  {
    alt_release_fd (index);  
  80f31c:	e13ff917 	ldw	r4,-28(fp)
  80f320:	080dab40 	call	80dab4 <alt_release_fd>
    ALT_ERRNO = -status;
  80f324:	080f1040 	call	80f104 <alt_get_errno>
  80f328:	1007883a 	mov	r3,r2
  80f32c:	e0bffa17 	ldw	r2,-24(fp)
  80f330:	0085c83a 	sub	r2,zero,r2
  80f334:	18800015 	stw	r2,0(r3)
    return -1;
  80f338:	00bfffc4 	movi	r2,-1
  80f33c:	00000106 	br	80f344 <open+0x140>
  }
  
  /* return the reference upon success */

  return index;
  80f340:	e0bff917 	ldw	r2,-28(fp)
}
  80f344:	e037883a 	mov	sp,fp
  80f348:	dfc00117 	ldw	ra,4(sp)
  80f34c:	df000017 	ldw	fp,0(sp)
  80f350:	dec00204 	addi	sp,sp,8
  80f354:	f800283a 	ret

0080f358 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
  80f358:	defffa04 	addi	sp,sp,-24
  80f35c:	df000515 	stw	fp,20(sp)
  80f360:	df000504 	addi	fp,sp,20
  80f364:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80f368:	0005303a 	rdctl	r2,status
  80f36c:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80f370:	e0fffc17 	ldw	r3,-16(fp)
  80f374:	00bfff84 	movi	r2,-2
  80f378:	1884703a 	and	r2,r3,r2
  80f37c:	1001703a 	wrctl	status,r2
  
  return context;
  80f380:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
  80f384:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
  80f388:	e0bfff17 	ldw	r2,-4(fp)
  80f38c:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
  80f390:	e0bffd17 	ldw	r2,-12(fp)
  80f394:	10800017 	ldw	r2,0(r2)
  80f398:	e0fffd17 	ldw	r3,-12(fp)
  80f39c:	18c00117 	ldw	r3,4(r3)
  80f3a0:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
  80f3a4:	e0bffd17 	ldw	r2,-12(fp)
  80f3a8:	10800117 	ldw	r2,4(r2)
  80f3ac:	e0fffd17 	ldw	r3,-12(fp)
  80f3b0:	18c00017 	ldw	r3,0(r3)
  80f3b4:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
  80f3b8:	e0bffd17 	ldw	r2,-12(fp)
  80f3bc:	e0fffd17 	ldw	r3,-12(fp)
  80f3c0:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
  80f3c4:	e0bffd17 	ldw	r2,-12(fp)
  80f3c8:	e0fffd17 	ldw	r3,-12(fp)
  80f3cc:	10c00015 	stw	r3,0(r2)
  80f3d0:	e0bffb17 	ldw	r2,-20(fp)
  80f3d4:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80f3d8:	e0bffe17 	ldw	r2,-8(fp)
  80f3dc:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
  80f3e0:	0001883a 	nop
  80f3e4:	e037883a 	mov	sp,fp
  80f3e8:	df000017 	ldw	fp,0(sp)
  80f3ec:	dec00104 	addi	sp,sp,4
  80f3f0:	f800283a 	ret

0080f3f4 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
  80f3f4:	defffb04 	addi	sp,sp,-20
  80f3f8:	dfc00415 	stw	ra,16(sp)
  80f3fc:	df000315 	stw	fp,12(sp)
  80f400:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
  80f404:	d0a00e17 	ldw	r2,-32712(gp)
  80f408:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
  80f40c:	d0a6d717 	ldw	r2,-25764(gp)
  80f410:	10800044 	addi	r2,r2,1
  80f414:	d0a6d715 	stw	r2,-25764(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
  80f418:	00002e06 	br	80f4d4 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
  80f41c:	e0bffd17 	ldw	r2,-12(fp)
  80f420:	10800017 	ldw	r2,0(r2)
  80f424:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
  80f428:	e0bffd17 	ldw	r2,-12(fp)
  80f42c:	10800403 	ldbu	r2,16(r2)
  80f430:	10803fcc 	andi	r2,r2,255
  80f434:	10000426 	beq	r2,zero,80f448 <alt_tick+0x54>
  80f438:	d0a6d717 	ldw	r2,-25764(gp)
  80f43c:	1000021e 	bne	r2,zero,80f448 <alt_tick+0x54>
    {
      alarm->rollover = 0;
  80f440:	e0bffd17 	ldw	r2,-12(fp)
  80f444:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
  80f448:	e0bffd17 	ldw	r2,-12(fp)
  80f44c:	10800217 	ldw	r2,8(r2)
  80f450:	d0e6d717 	ldw	r3,-25764(gp)
  80f454:	18801d36 	bltu	r3,r2,80f4cc <alt_tick+0xd8>
  80f458:	e0bffd17 	ldw	r2,-12(fp)
  80f45c:	10800403 	ldbu	r2,16(r2)
  80f460:	10803fcc 	andi	r2,r2,255
  80f464:	1000191e 	bne	r2,zero,80f4cc <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
  80f468:	e0bffd17 	ldw	r2,-12(fp)
  80f46c:	10800317 	ldw	r2,12(r2)
  80f470:	e0fffd17 	ldw	r3,-12(fp)
  80f474:	18c00517 	ldw	r3,20(r3)
  80f478:	1809883a 	mov	r4,r3
  80f47c:	103ee83a 	callr	r2
  80f480:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
  80f484:	e0bfff17 	ldw	r2,-4(fp)
  80f488:	1000031e 	bne	r2,zero,80f498 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
  80f48c:	e13ffd17 	ldw	r4,-12(fp)
  80f490:	080f3580 	call	80f358 <alt_alarm_stop>
  80f494:	00000d06 	br	80f4cc <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
  80f498:	e0bffd17 	ldw	r2,-12(fp)
  80f49c:	10c00217 	ldw	r3,8(r2)
  80f4a0:	e0bfff17 	ldw	r2,-4(fp)
  80f4a4:	1887883a 	add	r3,r3,r2
  80f4a8:	e0bffd17 	ldw	r2,-12(fp)
  80f4ac:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
  80f4b0:	e0bffd17 	ldw	r2,-12(fp)
  80f4b4:	10c00217 	ldw	r3,8(r2)
  80f4b8:	d0a6d717 	ldw	r2,-25764(gp)
  80f4bc:	1880032e 	bgeu	r3,r2,80f4cc <alt_tick+0xd8>
        {
          alarm->rollover = 1;
  80f4c0:	e0bffd17 	ldw	r2,-12(fp)
  80f4c4:	00c00044 	movi	r3,1
  80f4c8:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
  80f4cc:	e0bffe17 	ldw	r2,-8(fp)
  80f4d0:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
  80f4d4:	e0fffd17 	ldw	r3,-12(fp)
  80f4d8:	d0a00e04 	addi	r2,gp,-32712
  80f4dc:	18bfcf1e 	bne	r3,r2,80f41c <__alt_data_end+0xff80f41c>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
  80f4e0:	0001883a 	nop
}
  80f4e4:	0001883a 	nop
  80f4e8:	e037883a 	mov	sp,fp
  80f4ec:	dfc00117 	ldw	ra,4(sp)
  80f4f0:	df000017 	ldw	fp,0(sp)
  80f4f4:	dec00204 	addi	sp,sp,8
  80f4f8:	f800283a 	ret

0080f4fc <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
  80f4fc:	deffff04 	addi	sp,sp,-4
  80f500:	df000015 	stw	fp,0(sp)
  80f504:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
  80f508:	000170fa 	wrctl	ienable,zero
}
  80f50c:	0001883a 	nop
  80f510:	e037883a 	mov	sp,fp
  80f514:	df000017 	ldw	fp,0(sp)
  80f518:	dec00104 	addi	sp,sp,4
  80f51c:	f800283a 	ret

0080f520 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
  80f520:	defffa04 	addi	sp,sp,-24
  80f524:	dfc00515 	stw	ra,20(sp)
  80f528:	df000415 	stw	fp,16(sp)
  80f52c:	df000404 	addi	fp,sp,16
  80f530:	e13ffe15 	stw	r4,-8(fp)
  80f534:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
  80f538:	e0bfff17 	ldw	r2,-4(fp)
  80f53c:	10800017 	ldw	r2,0(r2)
  80f540:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
  80f544:	e13ffe17 	ldw	r4,-8(fp)
  80f548:	0800c000 	call	800c00 <strlen>
  80f54c:	10800044 	addi	r2,r2,1
  80f550:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
  80f554:	00000d06 	br	80f58c <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
  80f558:	e0bffc17 	ldw	r2,-16(fp)
  80f55c:	10800217 	ldw	r2,8(r2)
  80f560:	e0fffd17 	ldw	r3,-12(fp)
  80f564:	180d883a 	mov	r6,r3
  80f568:	e17ffe17 	ldw	r5,-8(fp)
  80f56c:	1009883a 	mov	r4,r2
  80f570:	080f9880 	call	80f988 <memcmp>
  80f574:	1000021e 	bne	r2,zero,80f580 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
  80f578:	e0bffc17 	ldw	r2,-16(fp)
  80f57c:	00000706 	br	80f59c <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
  80f580:	e0bffc17 	ldw	r2,-16(fp)
  80f584:	10800017 	ldw	r2,0(r2)
  80f588:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
  80f58c:	e0fffc17 	ldw	r3,-16(fp)
  80f590:	e0bfff17 	ldw	r2,-4(fp)
  80f594:	18bff01e 	bne	r3,r2,80f558 <__alt_data_end+0xff80f558>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
  80f598:	0005883a 	mov	r2,zero
}
  80f59c:	e037883a 	mov	sp,fp
  80f5a0:	dfc00117 	ldw	ra,4(sp)
  80f5a4:	df000017 	ldw	fp,0(sp)
  80f5a8:	dec00204 	addi	sp,sp,8
  80f5ac:	f800283a 	ret

0080f5b0 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
  80f5b0:	defffb04 	addi	sp,sp,-20
  80f5b4:	dfc00415 	stw	ra,16(sp)
  80f5b8:	df000315 	stw	fp,12(sp)
  80f5bc:	df000304 	addi	fp,sp,12
  80f5c0:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
  80f5c4:	d0a00617 	ldw	r2,-32744(gp)
  80f5c8:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
  80f5cc:	00003106 	br	80f694 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
  80f5d0:	e0bffd17 	ldw	r2,-12(fp)
  80f5d4:	10800217 	ldw	r2,8(r2)
  80f5d8:	1009883a 	mov	r4,r2
  80f5dc:	0800c000 	call	800c00 <strlen>
  80f5e0:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
  80f5e4:	e0bffd17 	ldw	r2,-12(fp)
  80f5e8:	10c00217 	ldw	r3,8(r2)
  80f5ec:	e0bffe17 	ldw	r2,-8(fp)
  80f5f0:	10bfffc4 	addi	r2,r2,-1
  80f5f4:	1885883a 	add	r2,r3,r2
  80f5f8:	10800003 	ldbu	r2,0(r2)
  80f5fc:	10803fcc 	andi	r2,r2,255
  80f600:	1080201c 	xori	r2,r2,128
  80f604:	10bfe004 	addi	r2,r2,-128
  80f608:	10800bd8 	cmpnei	r2,r2,47
  80f60c:	1000031e 	bne	r2,zero,80f61c <alt_find_file+0x6c>
    {
      len -= 1;
  80f610:	e0bffe17 	ldw	r2,-8(fp)
  80f614:	10bfffc4 	addi	r2,r2,-1
  80f618:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
  80f61c:	e0bffe17 	ldw	r2,-8(fp)
  80f620:	e0ffff17 	ldw	r3,-4(fp)
  80f624:	1885883a 	add	r2,r3,r2
  80f628:	10800003 	ldbu	r2,0(r2)
  80f62c:	10803fcc 	andi	r2,r2,255
  80f630:	1080201c 	xori	r2,r2,128
  80f634:	10bfe004 	addi	r2,r2,-128
  80f638:	10800be0 	cmpeqi	r2,r2,47
  80f63c:	1000081e 	bne	r2,zero,80f660 <alt_find_file+0xb0>
  80f640:	e0bffe17 	ldw	r2,-8(fp)
  80f644:	e0ffff17 	ldw	r3,-4(fp)
  80f648:	1885883a 	add	r2,r3,r2
  80f64c:	10800003 	ldbu	r2,0(r2)
  80f650:	10803fcc 	andi	r2,r2,255
  80f654:	1080201c 	xori	r2,r2,128
  80f658:	10bfe004 	addi	r2,r2,-128
  80f65c:	10000a1e 	bne	r2,zero,80f688 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
  80f660:	e0bffd17 	ldw	r2,-12(fp)
  80f664:	10800217 	ldw	r2,8(r2)
  80f668:	e0fffe17 	ldw	r3,-8(fp)
  80f66c:	180d883a 	mov	r6,r3
  80f670:	e17fff17 	ldw	r5,-4(fp)
  80f674:	1009883a 	mov	r4,r2
  80f678:	080f9880 	call	80f988 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
  80f67c:	1000021e 	bne	r2,zero,80f688 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
  80f680:	e0bffd17 	ldw	r2,-12(fp)
  80f684:	00000706 	br	80f6a4 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
  80f688:	e0bffd17 	ldw	r2,-12(fp)
  80f68c:	10800017 	ldw	r2,0(r2)
  80f690:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
  80f694:	e0fffd17 	ldw	r3,-12(fp)
  80f698:	d0a00604 	addi	r2,gp,-32744
  80f69c:	18bfcc1e 	bne	r3,r2,80f5d0 <__alt_data_end+0xff80f5d0>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
  80f6a0:	0005883a 	mov	r2,zero
}
  80f6a4:	e037883a 	mov	sp,fp
  80f6a8:	dfc00117 	ldw	ra,4(sp)
  80f6ac:	df000017 	ldw	fp,0(sp)
  80f6b0:	dec00204 	addi	sp,sp,8
  80f6b4:	f800283a 	ret

0080f6b8 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
  80f6b8:	defffc04 	addi	sp,sp,-16
  80f6bc:	df000315 	stw	fp,12(sp)
  80f6c0:	df000304 	addi	fp,sp,12
  80f6c4:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
  80f6c8:	00bffa04 	movi	r2,-24
  80f6cc:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
  80f6d0:	e03ffd15 	stw	zero,-12(fp)
  80f6d4:	00001906 	br	80f73c <alt_get_fd+0x84>
  {
    if (!alt_fd_list[i].dev)
  80f6d8:	00802074 	movhi	r2,129
  80f6dc:	10823604 	addi	r2,r2,2264
  80f6e0:	e0fffd17 	ldw	r3,-12(fp)
  80f6e4:	18c00324 	muli	r3,r3,12
  80f6e8:	10c5883a 	add	r2,r2,r3
  80f6ec:	10800017 	ldw	r2,0(r2)
  80f6f0:	10000f1e 	bne	r2,zero,80f730 <alt_get_fd+0x78>
    {
      alt_fd_list[i].dev = dev;
  80f6f4:	00802074 	movhi	r2,129
  80f6f8:	10823604 	addi	r2,r2,2264
  80f6fc:	e0fffd17 	ldw	r3,-12(fp)
  80f700:	18c00324 	muli	r3,r3,12
  80f704:	10c5883a 	add	r2,r2,r3
  80f708:	e0ffff17 	ldw	r3,-4(fp)
  80f70c:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
  80f710:	d0e00a17 	ldw	r3,-32728(gp)
  80f714:	e0bffd17 	ldw	r2,-12(fp)
  80f718:	1880020e 	bge	r3,r2,80f724 <alt_get_fd+0x6c>
      {
        alt_max_fd = i;
  80f71c:	e0bffd17 	ldw	r2,-12(fp)
  80f720:	d0a00a15 	stw	r2,-32728(gp)
      }
      rc = i;
  80f724:	e0bffd17 	ldw	r2,-12(fp)
  80f728:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
  80f72c:	00000606 	br	80f748 <alt_get_fd+0x90>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
  80f730:	e0bffd17 	ldw	r2,-12(fp)
  80f734:	10800044 	addi	r2,r2,1
  80f738:	e0bffd15 	stw	r2,-12(fp)
  80f73c:	e0bffd17 	ldw	r2,-12(fp)
  80f740:	10800810 	cmplti	r2,r2,32
  80f744:	103fe41e 	bne	r2,zero,80f6d8 <__alt_data_end+0xff80f6d8>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
  80f748:	e0bffe17 	ldw	r2,-8(fp)
}
  80f74c:	e037883a 	mov	sp,fp
  80f750:	df000017 	ldw	fp,0(sp)
  80f754:	dec00104 	addi	sp,sp,4
  80f758:	f800283a 	ret

0080f75c <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
  80f75c:	defffb04 	addi	sp,sp,-20
  80f760:	df000415 	stw	fp,16(sp)
  80f764:	df000404 	addi	fp,sp,16
  80f768:	e13ffe15 	stw	r4,-8(fp)
  80f76c:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
  80f770:	e0bfff17 	ldw	r2,-4(fp)
  80f774:	10880070 	cmpltui	r2,r2,8193
  80f778:	1000021e 	bne	r2,zero,80f784 <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
  80f77c:	00880004 	movi	r2,8192
  80f780:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
  80f784:	e0fffe17 	ldw	r3,-8(fp)
  80f788:	e0bfff17 	ldw	r2,-4(fp)
  80f78c:	1885883a 	add	r2,r3,r2
  80f790:	e0bffd15 	stw	r2,-12(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
  80f794:	e0bffe17 	ldw	r2,-8(fp)
  80f798:	e0bffc15 	stw	r2,-16(fp)
  80f79c:	00000506 	br	80f7b4 <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
  80f7a0:	e0bffc17 	ldw	r2,-16(fp)
  80f7a4:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
  80f7a8:	e0bffc17 	ldw	r2,-16(fp)
  80f7ac:	10800804 	addi	r2,r2,32
  80f7b0:	e0bffc15 	stw	r2,-16(fp)
  80f7b4:	e0fffc17 	ldw	r3,-16(fp)
  80f7b8:	e0bffd17 	ldw	r2,-12(fp)
  80f7bc:	18bff836 	bltu	r3,r2,80f7a0 <__alt_data_end+0xff80f7a0>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
  80f7c0:	e0bffe17 	ldw	r2,-8(fp)
  80f7c4:	108007cc 	andi	r2,r2,31
  80f7c8:	10000226 	beq	r2,zero,80f7d4 <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
  80f7cc:	e0bffc17 	ldw	r2,-16(fp)
  80f7d0:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
  80f7d4:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
  80f7d8:	0001883a 	nop
  80f7dc:	e037883a 	mov	sp,fp
  80f7e0:	df000017 	ldw	fp,0(sp)
  80f7e4:	dec00104 	addi	sp,sp,4
  80f7e8:	f800283a 	ret

0080f7ec <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
  80f7ec:	defffe04 	addi	sp,sp,-8
  80f7f0:	df000115 	stw	fp,4(sp)
  80f7f4:	df000104 	addi	fp,sp,4
  80f7f8:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
  80f7fc:	e0bfff17 	ldw	r2,-4(fp)
  80f800:	10bffe84 	addi	r2,r2,-6
  80f804:	10c00428 	cmpgeui	r3,r2,16
  80f808:	18001a1e 	bne	r3,zero,80f874 <alt_exception_cause_generated_bad_addr+0x88>
  80f80c:	100690ba 	slli	r3,r2,2
  80f810:	00802074 	movhi	r2,129
  80f814:	10be0904 	addi	r2,r2,-2012
  80f818:	1885883a 	add	r2,r3,r2
  80f81c:	10800017 	ldw	r2,0(r2)
  80f820:	1000683a 	jmp	r2
  80f824:	0080f864 	muli	r2,zero,993
  80f828:	0080f864 	muli	r2,zero,993
  80f82c:	0080f874 	movhi	r2,993
  80f830:	0080f874 	movhi	r2,993
  80f834:	0080f874 	movhi	r2,993
  80f838:	0080f864 	muli	r2,zero,993
  80f83c:	0080f86c 	andhi	r2,zero,993
  80f840:	0080f874 	movhi	r2,993
  80f844:	0080f864 	muli	r2,zero,993
  80f848:	0080f864 	muli	r2,zero,993
  80f84c:	0080f874 	movhi	r2,993
  80f850:	0080f864 	muli	r2,zero,993
  80f854:	0080f86c 	andhi	r2,zero,993
  80f858:	0080f874 	movhi	r2,993
  80f85c:	0080f874 	movhi	r2,993
  80f860:	0080f864 	muli	r2,zero,993
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
  80f864:	00800044 	movi	r2,1
  80f868:	00000306 	br	80f878 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
  80f86c:	0005883a 	mov	r2,zero
  80f870:	00000106 	br	80f878 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
  80f874:	0005883a 	mov	r2,zero
  }
}
  80f878:	e037883a 	mov	sp,fp
  80f87c:	df000017 	ldw	fp,0(sp)
  80f880:	dec00104 	addi	sp,sp,4
  80f884:	f800283a 	ret

0080f888 <atexit>:
  80f888:	200b883a 	mov	r5,r4
  80f88c:	000f883a 	mov	r7,zero
  80f890:	000d883a 	mov	r6,zero
  80f894:	0009883a 	mov	r4,zero
  80f898:	080fa041 	jmpi	80fa04 <__register_exitproc>

0080f89c <exit>:
  80f89c:	defffe04 	addi	sp,sp,-8
  80f8a0:	000b883a 	mov	r5,zero
  80f8a4:	dc000015 	stw	r16,0(sp)
  80f8a8:	dfc00115 	stw	ra,4(sp)
  80f8ac:	2021883a 	mov	r16,r4
  80f8b0:	080fb1c0 	call	80fb1c <__call_exitprocs>
  80f8b4:	00802074 	movhi	r2,129
  80f8b8:	1086ae04 	addi	r2,r2,6840
  80f8bc:	11000017 	ldw	r4,0(r2)
  80f8c0:	20800f17 	ldw	r2,60(r4)
  80f8c4:	10000126 	beq	r2,zero,80f8cc <exit+0x30>
  80f8c8:	103ee83a 	callr	r2
  80f8cc:	8009883a 	mov	r4,r16
  80f8d0:	080fc9c0 	call	80fc9c <_exit>

0080f8d4 <_fputs_r>:
  80f8d4:	defff804 	addi	sp,sp,-32
  80f8d8:	dc400615 	stw	r17,24(sp)
  80f8dc:	2023883a 	mov	r17,r4
  80f8e0:	2809883a 	mov	r4,r5
  80f8e4:	dc000515 	stw	r16,20(sp)
  80f8e8:	dfc00715 	stw	ra,28(sp)
  80f8ec:	3021883a 	mov	r16,r6
  80f8f0:	d9400315 	stw	r5,12(sp)
  80f8f4:	0800c000 	call	800c00 <strlen>
  80f8f8:	d8800215 	stw	r2,8(sp)
  80f8fc:	d8800415 	stw	r2,16(sp)
  80f900:	d8800304 	addi	r2,sp,12
  80f904:	d8800015 	stw	r2,0(sp)
  80f908:	00800044 	movi	r2,1
  80f90c:	d8800115 	stw	r2,4(sp)
  80f910:	88000226 	beq	r17,zero,80f91c <_fputs_r+0x48>
  80f914:	88800e17 	ldw	r2,56(r17)
  80f918:	10001226 	beq	r2,zero,80f964 <_fputs_r+0x90>
  80f91c:	8080030b 	ldhu	r2,12(r16)
  80f920:	10c8000c 	andi	r3,r2,8192
  80f924:	1800061e 	bne	r3,zero,80f940 <_fputs_r+0x6c>
  80f928:	81001917 	ldw	r4,100(r16)
  80f92c:	00f7ffc4 	movi	r3,-8193
  80f930:	10880014 	ori	r2,r2,8192
  80f934:	20c6703a 	and	r3,r4,r3
  80f938:	8080030d 	sth	r2,12(r16)
  80f93c:	80c01915 	stw	r3,100(r16)
  80f940:	d80d883a 	mov	r6,sp
  80f944:	800b883a 	mov	r5,r16
  80f948:	8809883a 	mov	r4,r17
  80f94c:	08053c00 	call	8053c0 <__sfvwrite_r>
  80f950:	dfc00717 	ldw	ra,28(sp)
  80f954:	dc400617 	ldw	r17,24(sp)
  80f958:	dc000517 	ldw	r16,20(sp)
  80f95c:	dec00804 	addi	sp,sp,32
  80f960:	f800283a 	ret
  80f964:	8809883a 	mov	r4,r17
  80f968:	0804f3c0 	call	804f3c <__sinit>
  80f96c:	003feb06 	br	80f91c <__alt_data_end+0xff80f91c>

0080f970 <fputs>:
  80f970:	00802074 	movhi	r2,129
  80f974:	1086af04 	addi	r2,r2,6844
  80f978:	280d883a 	mov	r6,r5
  80f97c:	200b883a 	mov	r5,r4
  80f980:	11000017 	ldw	r4,0(r2)
  80f984:	080f8d41 	jmpi	80f8d4 <_fputs_r>

0080f988 <memcmp>:
  80f988:	01c000c4 	movi	r7,3
  80f98c:	3980192e 	bgeu	r7,r6,80f9f4 <memcmp+0x6c>
  80f990:	2144b03a 	or	r2,r4,r5
  80f994:	11c4703a 	and	r2,r2,r7
  80f998:	10000f26 	beq	r2,zero,80f9d8 <memcmp+0x50>
  80f99c:	20800003 	ldbu	r2,0(r4)
  80f9a0:	28c00003 	ldbu	r3,0(r5)
  80f9a4:	10c0151e 	bne	r2,r3,80f9fc <memcmp+0x74>
  80f9a8:	31bfff84 	addi	r6,r6,-2
  80f9ac:	01ffffc4 	movi	r7,-1
  80f9b0:	00000406 	br	80f9c4 <memcmp+0x3c>
  80f9b4:	20800003 	ldbu	r2,0(r4)
  80f9b8:	28c00003 	ldbu	r3,0(r5)
  80f9bc:	31bfffc4 	addi	r6,r6,-1
  80f9c0:	10c00e1e 	bne	r2,r3,80f9fc <memcmp+0x74>
  80f9c4:	21000044 	addi	r4,r4,1
  80f9c8:	29400044 	addi	r5,r5,1
  80f9cc:	31fff91e 	bne	r6,r7,80f9b4 <__alt_data_end+0xff80f9b4>
  80f9d0:	0005883a 	mov	r2,zero
  80f9d4:	f800283a 	ret
  80f9d8:	20c00017 	ldw	r3,0(r4)
  80f9dc:	28800017 	ldw	r2,0(r5)
  80f9e0:	18bfee1e 	bne	r3,r2,80f99c <__alt_data_end+0xff80f99c>
  80f9e4:	31bfff04 	addi	r6,r6,-4
  80f9e8:	21000104 	addi	r4,r4,4
  80f9ec:	29400104 	addi	r5,r5,4
  80f9f0:	39bff936 	bltu	r7,r6,80f9d8 <__alt_data_end+0xff80f9d8>
  80f9f4:	303fe91e 	bne	r6,zero,80f99c <__alt_data_end+0xff80f99c>
  80f9f8:	003ff506 	br	80f9d0 <__alt_data_end+0xff80f9d0>
  80f9fc:	10c5c83a 	sub	r2,r2,r3
  80fa00:	f800283a 	ret

0080fa04 <__register_exitproc>:
  80fa04:	defffa04 	addi	sp,sp,-24
  80fa08:	dc000315 	stw	r16,12(sp)
  80fa0c:	04002074 	movhi	r16,129
  80fa10:	8406ae04 	addi	r16,r16,6840
  80fa14:	80c00017 	ldw	r3,0(r16)
  80fa18:	dc400415 	stw	r17,16(sp)
  80fa1c:	dfc00515 	stw	ra,20(sp)
  80fa20:	18805217 	ldw	r2,328(r3)
  80fa24:	2023883a 	mov	r17,r4
  80fa28:	10003726 	beq	r2,zero,80fb08 <__register_exitproc+0x104>
  80fa2c:	10c00117 	ldw	r3,4(r2)
  80fa30:	010007c4 	movi	r4,31
  80fa34:	20c00e16 	blt	r4,r3,80fa70 <__register_exitproc+0x6c>
  80fa38:	1a000044 	addi	r8,r3,1
  80fa3c:	8800221e 	bne	r17,zero,80fac8 <__register_exitproc+0xc4>
  80fa40:	18c00084 	addi	r3,r3,2
  80fa44:	18c7883a 	add	r3,r3,r3
  80fa48:	18c7883a 	add	r3,r3,r3
  80fa4c:	12000115 	stw	r8,4(r2)
  80fa50:	10c7883a 	add	r3,r2,r3
  80fa54:	19400015 	stw	r5,0(r3)
  80fa58:	0005883a 	mov	r2,zero
  80fa5c:	dfc00517 	ldw	ra,20(sp)
  80fa60:	dc400417 	ldw	r17,16(sp)
  80fa64:	dc000317 	ldw	r16,12(sp)
  80fa68:	dec00604 	addi	sp,sp,24
  80fa6c:	f800283a 	ret
  80fa70:	00800034 	movhi	r2,0
  80fa74:	10800004 	addi	r2,r2,0
  80fa78:	10002626 	beq	r2,zero,80fb14 <__register_exitproc+0x110>
  80fa7c:	01006404 	movi	r4,400
  80fa80:	d9400015 	stw	r5,0(sp)
  80fa84:	d9800115 	stw	r6,4(sp)
  80fa88:	d9c00215 	stw	r7,8(sp)
  80fa8c:	00000000 	call	0 <__alt_mem_sdram-0x800000>
  80fa90:	d9400017 	ldw	r5,0(sp)
  80fa94:	d9800117 	ldw	r6,4(sp)
  80fa98:	d9c00217 	ldw	r7,8(sp)
  80fa9c:	10001d26 	beq	r2,zero,80fb14 <__register_exitproc+0x110>
  80faa0:	81000017 	ldw	r4,0(r16)
  80faa4:	10000115 	stw	zero,4(r2)
  80faa8:	02000044 	movi	r8,1
  80faac:	22405217 	ldw	r9,328(r4)
  80fab0:	0007883a 	mov	r3,zero
  80fab4:	12400015 	stw	r9,0(r2)
  80fab8:	20805215 	stw	r2,328(r4)
  80fabc:	10006215 	stw	zero,392(r2)
  80fac0:	10006315 	stw	zero,396(r2)
  80fac4:	883fde26 	beq	r17,zero,80fa40 <__alt_data_end+0xff80fa40>
  80fac8:	18c9883a 	add	r4,r3,r3
  80facc:	2109883a 	add	r4,r4,r4
  80fad0:	1109883a 	add	r4,r2,r4
  80fad4:	21802215 	stw	r6,136(r4)
  80fad8:	01800044 	movi	r6,1
  80fadc:	12406217 	ldw	r9,392(r2)
  80fae0:	30cc983a 	sll	r6,r6,r3
  80fae4:	4992b03a 	or	r9,r9,r6
  80fae8:	12406215 	stw	r9,392(r2)
  80faec:	21c04215 	stw	r7,264(r4)
  80faf0:	01000084 	movi	r4,2
  80faf4:	893fd21e 	bne	r17,r4,80fa40 <__alt_data_end+0xff80fa40>
  80faf8:	11006317 	ldw	r4,396(r2)
  80fafc:	218cb03a 	or	r6,r4,r6
  80fb00:	11806315 	stw	r6,396(r2)
  80fb04:	003fce06 	br	80fa40 <__alt_data_end+0xff80fa40>
  80fb08:	18805304 	addi	r2,r3,332
  80fb0c:	18805215 	stw	r2,328(r3)
  80fb10:	003fc606 	br	80fa2c <__alt_data_end+0xff80fa2c>
  80fb14:	00bfffc4 	movi	r2,-1
  80fb18:	003fd006 	br	80fa5c <__alt_data_end+0xff80fa5c>

0080fb1c <__call_exitprocs>:
  80fb1c:	defff504 	addi	sp,sp,-44
  80fb20:	df000915 	stw	fp,36(sp)
  80fb24:	dd400615 	stw	r21,24(sp)
  80fb28:	dc800315 	stw	r18,12(sp)
  80fb2c:	dfc00a15 	stw	ra,40(sp)
  80fb30:	ddc00815 	stw	r23,32(sp)
  80fb34:	dd800715 	stw	r22,28(sp)
  80fb38:	dd000515 	stw	r20,20(sp)
  80fb3c:	dcc00415 	stw	r19,16(sp)
  80fb40:	dc400215 	stw	r17,8(sp)
  80fb44:	dc000115 	stw	r16,4(sp)
  80fb48:	d9000015 	stw	r4,0(sp)
  80fb4c:	2839883a 	mov	fp,r5
  80fb50:	04800044 	movi	r18,1
  80fb54:	057fffc4 	movi	r21,-1
  80fb58:	00802074 	movhi	r2,129
  80fb5c:	1086ae04 	addi	r2,r2,6840
  80fb60:	12000017 	ldw	r8,0(r2)
  80fb64:	45005217 	ldw	r20,328(r8)
  80fb68:	44c05204 	addi	r19,r8,328
  80fb6c:	a0001c26 	beq	r20,zero,80fbe0 <__call_exitprocs+0xc4>
  80fb70:	a0800117 	ldw	r2,4(r20)
  80fb74:	15ffffc4 	addi	r23,r2,-1
  80fb78:	b8000d16 	blt	r23,zero,80fbb0 <__call_exitprocs+0x94>
  80fb7c:	14000044 	addi	r16,r2,1
  80fb80:	8421883a 	add	r16,r16,r16
  80fb84:	8421883a 	add	r16,r16,r16
  80fb88:	84402004 	addi	r17,r16,128
  80fb8c:	a463883a 	add	r17,r20,r17
  80fb90:	a421883a 	add	r16,r20,r16
  80fb94:	e0001e26 	beq	fp,zero,80fc10 <__call_exitprocs+0xf4>
  80fb98:	80804017 	ldw	r2,256(r16)
  80fb9c:	e0801c26 	beq	fp,r2,80fc10 <__call_exitprocs+0xf4>
  80fba0:	bdffffc4 	addi	r23,r23,-1
  80fba4:	843fff04 	addi	r16,r16,-4
  80fba8:	8c7fff04 	addi	r17,r17,-4
  80fbac:	bd7ff91e 	bne	r23,r21,80fb94 <__alt_data_end+0xff80fb94>
  80fbb0:	00800034 	movhi	r2,0
  80fbb4:	10800004 	addi	r2,r2,0
  80fbb8:	10000926 	beq	r2,zero,80fbe0 <__call_exitprocs+0xc4>
  80fbbc:	a0800117 	ldw	r2,4(r20)
  80fbc0:	1000301e 	bne	r2,zero,80fc84 <__call_exitprocs+0x168>
  80fbc4:	a0800017 	ldw	r2,0(r20)
  80fbc8:	10003226 	beq	r2,zero,80fc94 <__call_exitprocs+0x178>
  80fbcc:	a009883a 	mov	r4,r20
  80fbd0:	98800015 	stw	r2,0(r19)
  80fbd4:	00000000 	call	0 <__alt_mem_sdram-0x800000>
  80fbd8:	9d000017 	ldw	r20,0(r19)
  80fbdc:	a03fe41e 	bne	r20,zero,80fb70 <__alt_data_end+0xff80fb70>
  80fbe0:	dfc00a17 	ldw	ra,40(sp)
  80fbe4:	df000917 	ldw	fp,36(sp)
  80fbe8:	ddc00817 	ldw	r23,32(sp)
  80fbec:	dd800717 	ldw	r22,28(sp)
  80fbf0:	dd400617 	ldw	r21,24(sp)
  80fbf4:	dd000517 	ldw	r20,20(sp)
  80fbf8:	dcc00417 	ldw	r19,16(sp)
  80fbfc:	dc800317 	ldw	r18,12(sp)
  80fc00:	dc400217 	ldw	r17,8(sp)
  80fc04:	dc000117 	ldw	r16,4(sp)
  80fc08:	dec00b04 	addi	sp,sp,44
  80fc0c:	f800283a 	ret
  80fc10:	a0800117 	ldw	r2,4(r20)
  80fc14:	80c00017 	ldw	r3,0(r16)
  80fc18:	10bfffc4 	addi	r2,r2,-1
  80fc1c:	15c01426 	beq	r2,r23,80fc70 <__call_exitprocs+0x154>
  80fc20:	80000015 	stw	zero,0(r16)
  80fc24:	183fde26 	beq	r3,zero,80fba0 <__alt_data_end+0xff80fba0>
  80fc28:	95c8983a 	sll	r4,r18,r23
  80fc2c:	a0806217 	ldw	r2,392(r20)
  80fc30:	a5800117 	ldw	r22,4(r20)
  80fc34:	2084703a 	and	r2,r4,r2
  80fc38:	10000b26 	beq	r2,zero,80fc68 <__call_exitprocs+0x14c>
  80fc3c:	a0806317 	ldw	r2,396(r20)
  80fc40:	2088703a 	and	r4,r4,r2
  80fc44:	20000c1e 	bne	r4,zero,80fc78 <__call_exitprocs+0x15c>
  80fc48:	89400017 	ldw	r5,0(r17)
  80fc4c:	d9000017 	ldw	r4,0(sp)
  80fc50:	183ee83a 	callr	r3
  80fc54:	a0800117 	ldw	r2,4(r20)
  80fc58:	15bfbf1e 	bne	r2,r22,80fb58 <__alt_data_end+0xff80fb58>
  80fc5c:	98800017 	ldw	r2,0(r19)
  80fc60:	153fcf26 	beq	r2,r20,80fba0 <__alt_data_end+0xff80fba0>
  80fc64:	003fbc06 	br	80fb58 <__alt_data_end+0xff80fb58>
  80fc68:	183ee83a 	callr	r3
  80fc6c:	003ff906 	br	80fc54 <__alt_data_end+0xff80fc54>
  80fc70:	a5c00115 	stw	r23,4(r20)
  80fc74:	003feb06 	br	80fc24 <__alt_data_end+0xff80fc24>
  80fc78:	89000017 	ldw	r4,0(r17)
  80fc7c:	183ee83a 	callr	r3
  80fc80:	003ff406 	br	80fc54 <__alt_data_end+0xff80fc54>
  80fc84:	a0800017 	ldw	r2,0(r20)
  80fc88:	a027883a 	mov	r19,r20
  80fc8c:	1029883a 	mov	r20,r2
  80fc90:	003fb606 	br	80fb6c <__alt_data_end+0xff80fb6c>
  80fc94:	0005883a 	mov	r2,zero
  80fc98:	003ffb06 	br	80fc88 <__alt_data_end+0xff80fc88>

0080fc9c <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
  80fc9c:	defffd04 	addi	sp,sp,-12
  80fca0:	df000215 	stw	fp,8(sp)
  80fca4:	df000204 	addi	fp,sp,8
  80fca8:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
  80fcac:	0001883a 	nop
  80fcb0:	e0bfff17 	ldw	r2,-4(fp)
  80fcb4:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
  80fcb8:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
  80fcbc:	10000226 	beq	r2,zero,80fcc8 <_exit+0x2c>
    ALT_SIM_FAIL();
  80fcc0:	002af070 	cmpltui	zero,zero,43969
  80fcc4:	00000106 	br	80fccc <_exit+0x30>
  } else {
    ALT_SIM_PASS();
  80fcc8:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
  80fccc:	003fff06 	br	80fccc <__alt_data_end+0xff80fccc>
