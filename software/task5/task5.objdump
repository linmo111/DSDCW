
task5.elf:     file format elf32-littlenios2
task5.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00800244

Program Header:
    LOAD off    0x00001000 vaddr 0x00800000 paddr 0x00800000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00800020 paddr 0x00800020 align 2**12
         filesz 0x00012a94 memsz 0x00012a94 flags r-x
    LOAD off    0x00013ab4 vaddr 0x00812ab4 paddr 0x008145a0 align 2**12
         filesz 0x00001aec memsz 0x00001aec flags rw-
    LOAD off    0x0001608c vaddr 0x0081608c paddr 0x0081608c align 2**12
         filesz 0x00000000 memsz 0x00000160 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00800000  00800000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000224  00800020  00800020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         00012370  00800244  00800244  00001244  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000500  008125b4  008125b4  000135b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001aec  00812ab4  008145a0  00013ab4  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000160  0081608c  0081608c  0001608c  2**2
                  ALLOC, SMALL_DATA
  6 .sdram        00000000  008161ec  008161ec  000155a0  2**0
                  CONTENTS
  7 .comment      00000023  00000000  00000000  000155a0  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00001078  00000000  00000000  000155c8  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   00025398  00000000  00000000  00016640  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 00009e1e  00000000  00000000  0003b9d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0000cc05  00000000  00000000  000457f6  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  000024cc  00000000  00000000  000523fc  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00003d53  00000000  00000000  000548c8  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    0001af40  00000000  00000000  0005861b  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000030  00000000  00000000  0007355c  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00001be0  00000000  00000000  00073590  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  000785da  2**0
                  CONTENTS, READONLY
 18 .cpu          00000003  00000000  00000000  000785dd  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  000785e0  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  000785e1  2**0
                  CONTENTS, READONLY
 21 .sysid_hash   00000004  00000000  00000000  000785e2  2**0
                  CONTENTS, READONLY
 22 .sysid_base   00000004  00000000  00000000  000785e6  2**0
                  CONTENTS, READONLY
 23 .sysid_time   00000004  00000000  00000000  000785ea  2**0
                  CONTENTS, READONLY
 24 .stderr_dev   00000009  00000000  00000000  000785ee  2**0
                  CONTENTS, READONLY
 25 .stdin_dev    00000009  00000000  00000000  000785f7  2**0
                  CONTENTS, READONLY
 26 .stdout_dev   00000009  00000000  00000000  00078600  2**0
                  CONTENTS, READONLY
 27 .sopc_system_name 00000012  00000000  00000000  00078609  2**0
                  CONTENTS, READONLY
 28 .quartus_project_dir 00000045  00000000  00000000  0007861b  2**0
                  CONTENTS, READONLY
 29 .jdi          000058e3  00000000  00000000  00078660  2**0
                  CONTENTS, READONLY
 30 .sopcinfo     0003b169  00000000  00000000  0007df43  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00800000 l    d  .entry	00000000 .entry
00800020 l    d  .exceptions	00000000 .exceptions
00800244 l    d  .text	00000000 .text
008125b4 l    d  .rodata	00000000 .rodata
00812ab4 l    d  .rwdata	00000000 .rwdata
0081608c l    d  .bss	00000000 .bss
008161ec l    d  .sdram	00000000 .sdram
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../task5_bsp//obj/HAL/src/crt0.o
0080028c l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 hello_world.c
00000000 l    df *ABS*	00000000 s_cos.c
00000000 l    df *ABS*	00000000 e_rem_pio2.c
00812664 l     O .rodata	00000108 two_over_pi
008125e4 l     O .rodata	00000080 npio2_hw
00000000 l    df *ABS*	00000000 k_cos.c
00000000 l    df *ABS*	00000000 k_rem_pio2.c
008127ac l     O .rodata	00000010 init_jk
0081276c l     O .rodata	00000040 PIo2
00000000 l    df *ABS*	00000000 k_sin.c
00000000 l    df *ABS*	00000000 s_fabs.c
00000000 l    df *ABS*	00000000 s_floor.c
00000000 l    df *ABS*	00000000 s_scalbn.c
00000000 l    df *ABS*	00000000 s_copysign.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 addsf3.c
00000000 l    df *ABS*	00000000 mulsf3.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 extendsfdf2.c
00000000 l    df *ABS*	00000000 truncdfsf2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
00812902 l     O .rodata	00000010 zeroes.4404
00807e9c l     F .text	000000bc __sbprintf
00812912 l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
008080ac l     F .text	00000200 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
00809bdc l     F .text	00000008 __fp_unlock
00809bf0 l     F .text	0000019c __sinit.part.1
00809d8c l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
00812ab4 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
00812ef8 l     O .rwdata	00000020 lc_ctype_charset
00812ed8 l     O .rwdata	00000020 lc_message_charset
00812f18 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
00812944 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
0080d188 l     F .text	000000fc __sprint_r.part.0
00812a78 l     O .rodata	00000010 blanks.4348
00812a68 l     O .rodata	00000010 zeroes.4349
0080e714 l     F .text	000000bc __sbprintf
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 alt_close.c
0080fd50 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0080fe5c l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0080fe88 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
0080ff74 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
00810054 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
00810140 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
00810314 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
00814590 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_times.c
00810560 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_write.c
00810614 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
00810748 l     F .text	00000034 alt_dev_reg
00813500 l     O .rwdata	00001060 jtag_uart
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
00810a3c l     F .text	0000020c altera_avalon_jtag_uart_irq
00810c48 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
00811280 l     F .text	00000078 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
008114e8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0081195c l     F .text	000000c4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
00811a9c l     F .text	0000003c alt_get_errno
00811ad8 l     F .text	000000c4 alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
008160c0 g     O .bss	00000004 alt_instruction_exception_handler
0080c7cc g     F .text	00000074 _mprec_log10
0080c8b8 g     F .text	0000008c __any_on
0080ecb0 g     F .text	00000054 _isatty_r
00812950 g     O .rodata	00000028 __mprec_tinytens
00810250 g     F .text	0000007c alt_main
00805b1c g     F .text	000000c0 _puts_r
008160ec g     O .bss	00000100 alt_irq
008024fc g     F .text	00000014 fabs
0080ed04 g     F .text	00000060 _lseek_r
008145a0 g       *ABS*	00000000 __flash_rwdata_start
008044c0 g     F .text	00000088 .hidden __eqdf2
008161ec g       *ABS*	00000000 __alt_heap_start
00805ae0 g     F .text	0000003c printf
0080ef1c g     F .text	0000009c _wcrtomb_r
0080d048 g     F .text	0000005c __sseek
00809f2c g     F .text	00000010 __sinit
0080edc4 g     F .text	00000140 __swbuf_r
0080a9f4 g     F .text	0000007c _setlocale_r
00809d94 g     F .text	00000068 __sfmoreglue
008102f0 g     F .text	00000024 __malloc_unlock
0080b6c4 g     F .text	0000015c memmove
00809f14 g     F .text	00000018 _cleanup
0080b948 g     F .text	000000a8 _Balloc
00804548 g     F .text	000000dc .hidden __gtdf2
00811e94 g     F .text	00000024 altera_nios2_gen2_irq_init
00800000 g     F .entry	0000001c __reset
0081059c g     F .text	00000078 times
00800020 g       *ABS*	00000000 __flash_exceptions_start
0080ec54 g     F .text	0000005c _fstat_r
008160a4 g     O .bss	00000004 errno
00802510 g     F .text	000001ec floor
0080cfc4 g     F .text	00000008 __seofread
008160ac g     O .bss	00000004 alt_argv
0081c560 g       *ABS*	00000000 _gp
00813380 g     O .rwdata	00000180 alt_fd_list
00800890 g     F .text	0000076c __ieee754_rem_pio2
00811eb8 g     F .text	00000090 alt_find_dev
0080b57c g     F .text	00000148 memcpy
00809be4 g     F .text	0000000c _cleanup_r
008056b8 g     F .text	000000dc .hidden __floatsidf
00811a20 g     F .text	0000007c alt_io_redirect
0080fbb4 g     F .text	000000f4 .hidden __ltdf2
008125b4 g       *ABS*	00000000 __DTOR_END__
00805bdc g     F .text	00000014 puts
00812184 g     F .text	0000009c alt_exception_cause_generated_bad_addr
0080cea8 g     F .text	00000074 __fpclassifyd
0080c728 g     F .text	000000a4 __ratio
0080e6f8 g     F .text	0000001c __vfiprintf_internal
00810e40 g     F .text	0000021c altera_avalon_jtag_uart_read
00805ab0 g     F .text	00000030 _printf_r
008029ac g     F .text	00000064 .hidden __udivsi3
0080ffb0 g     F .text	000000a4 isatty
008129a0 g     O .rodata	000000c8 __mprec_tens
0080aa70 g     F .text	0000000c __locale_charset
00800ffc g     F .text	000004a4 __kernel_cos
008120f4 g     F .text	00000090 alt_icache_flush
008160a0 g     O .bss	00000004 __malloc_top_pad
00814568 g     O .rwdata	00000004 __mb_cur_max
0080aaa0 g     F .text	0000000c _localeconv_r
0080bd54 g     F .text	0000003c __i2b
0080a3b0 g     F .text	000004bc __sfvwrite_r
0080cf1c g     F .text	00000054 _sbrk_r
0080ed64 g     F .text	00000060 _read_r
00814588 g     O .rwdata	00000004 alt_max_fd
0080e948 g     F .text	000000f0 _fclose_r
00809bac g     F .text	00000030 fflush
0081609c g     O .bss	00000004 __malloc_max_sbrked_mem
00802230 g     F .text	000002cc __kernel_sin
00805794 g     F .text	00000110 .hidden __extendsfdf2
0080332c g     F .text	000008ac .hidden __adddf3
0080c4d0 g     F .text	0000010c __b2d
0080f67c g     F .text	00000538 .hidden __umoddi3
0081017c g     F .text	000000d4 lseek
00814560 g     O .rwdata	00000004 _global_impure_ptr
0080c944 g     F .text	00000564 _realloc_r
008161ec g       *ABS*	00000000 __bss_end
0081186c g     F .text	000000f0 alt_iic_isr_register
00811d8c g     F .text	00000108 alt_tick
0080f104 g     F .text	00000578 .hidden __udivdi3
0080ebb0 g     F .text	00000024 _fputwc_r
00812978 g     O .rodata	00000028 __mprec_bigtens
0080bb38 g     F .text	00000104 __s2b
0080fca8 g     F .text	000000a8 .hidden __floatunsidf
0080c210 g     F .text	00000060 __mcmp
00809f4c g     F .text	00000018 __fp_lock_all
00811820 g     F .text	0000004c alt_ic_irq_enabled
00811cf0 g     F .text	0000009c alt_alarm_stop
008160b4 g     O .bss	00000004 alt_irq_active
008000fc g     F .exceptions	000000d4 alt_irq_handler
00813358 g     O .rwdata	00000028 alt_dev_null
008014a0 g     F .text	00000d90 __kernel_rem_pio2
008114a0 g     F .text	00000048 alt_dcache_flush_all
0080bc3c g     F .text	00000068 __hi0bits
00805638 g     F .text	00000080 .hidden __fixdfsi
008145a0 g       *ABS*	00000000 __ram_rwdata_end
00814580 g     O .rwdata	00000008 alt_dev_list
00810650 g     F .text	000000f8 write
00812ab4 g       *ABS*	00000000 __ram_rodata_end
0080fec4 g     F .text	000000b0 fstat
0080fbb4 g     F .text	000000f4 .hidden __ledf2
0080bf88 g     F .text	00000140 __pow5mult
0080d29c g     F .text	0000145c ___vfiprintf_internal_r
00816094 g     O .bss	00000004 __nlocale_changed
00802a10 g     F .text	00000058 .hidden __umodsi3
008161ec g       *ABS*	00000000 end
0081097c g     F .text	000000c0 altera_avalon_jtag_uart_init
008001d0 g     F .exceptions	00000074 alt_instruction_exception_entry
008125b4 g       *ABS*	00000000 __CTOR_LIST__
01000000 g       *ABS*	00000000 __alt_stack_pointer
008112f8 g     F .text	0000007c alt_avalon_timer_sc_init
00805a4c g     F .text	00000064 .hidden __clzsi2
0081105c g     F .text	00000224 altera_avalon_jtag_uart_write
008007a4 g     F .text	000000ec cos
00809f3c g     F .text	00000004 __sfp_lock_acquire
0080b498 g     F .text	000000e4 memchr
00805c88 g     F .text	000021f8 ___vfprintf_internal_r
0080a0a0 g     F .text	00000310 _free_r
0080aa7c g     F .text	00000010 __locale_mb_cur_max
00812400 g     F .text	00000180 __call_exitprocs
00816090 g     O .bss	00000004 __mlocale_changed
0081456c g     O .rwdata	00000004 __malloc_sbrk_base
00800244 g     F .text	0000004c _start
008160b8 g     O .bss	00000004 _alt_tick_rate
0080c0c8 g     F .text	00000148 __lshift
008160bc g     O .bss	00000004 _alt_nticks
00810350 g     F .text	000000fc read
008107b4 g     F .text	00000064 alt_sys_init
008122e8 g     F .text	00000118 __register_exitproc
0080bd90 g     F .text	000001f8 __multiply
00810ce8 g     F .text	00000068 altera_avalon_jtag_uart_close
00812ab4 g       *ABS*	00000000 __ram_rwdata_start
008125b4 g       *ABS*	00000000 __ram_rodata_start
008160c4 g     O .bss	00000028 __malloc_current_mallinfo
0080c5dc g     F .text	0000014c __d2b
00810818 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
00812050 g     F .text	000000a4 alt_get_fd
0080e830 g     F .text	00000054 _close_r
00800290 g     F .text	000000bc generateVector
0081226c g     F .text	0000007c memcmp
008108d8 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
008161ec g       *ABS*	00000000 __alt_stack_base
00810928 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
00807f58 g     F .text	00000154 __swsetup_r
00803bd8 g     F .text	000008e8 .hidden __divdf3
00809dfc g     F .text	00000118 __sfp
0080c840 g     F .text	00000078 __copybits
00812f50 g     O .rwdata	00000408 __malloc_av_
00809f48 g     F .text	00000004 __sinit_lock_release
00804624 g     F .text	00000718 .hidden __muldf3
0080cf70 g     F .text	00000054 __sread
00811f48 g     F .text	00000108 alt_find_file
00811524 g     F .text	000000a4 alt_dev_llist_insert
008102cc g     F .text	00000024 __malloc_lock
008104b0 g     F .text	000000b0 sbrk
00809b50 g     F .text	0000005c _fflush_r
0080e884 g     F .text	000000c4 _calloc_r
0081608c g       *ABS*	00000000 __bss_start
0080b820 g     F .text	00000128 memset
00800690 g     F .text	00000114 main
008160b0 g     O .bss	00000004 alt_envp
00816098 g     O .bss	00000004 __malloc_max_total_mem
00810878 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
0080ef04 g     F .text	00000018 __swbuf
0080d0a4 g     F .text	00000008 __sclose
01000000 g       *ABS*	00000000 __alt_heap_limit
0080ea38 g     F .text	00000014 fclose
008058a4 g     F .text	000001a8 .hidden __truncdfsf2
008082ac g     F .text	00001688 _dtoa_r
0080ac8c g     F .text	0000080c _malloc_r
0080f078 g     F .text	00000030 __ascii_wctomb
0081458c g     O .rwdata	00000004 alt_errno
0080a86c g     F .text	000000c4 _fwalk
008028b4 g     F .text	00000084 .hidden __divsi3
00809f7c g     F .text	00000124 _malloc_trim_r
008125b4 g       *ABS*	00000000 __CTOR_END__
00802f30 g     F .text	000003fc .hidden __mulsf3
0080d0ac g     F .text	000000dc strcmp
008125b4 g       *ABS*	00000000 __flash_rodata_start
008125b4 g       *ABS*	00000000 __DTOR_LIST__
00802898 g     F .text	0000001c copysign
008044c0 g     F .text	00000088 .hidden __nedf2
0081077c g     F .text	00000038 alt_irq_init
0081044c g     F .text	00000064 alt_release_fd
008127bc g     O .rodata	00000100 .hidden __clz_tab
0081608c g     O .bss	00000004 _PathLocale
00812220 g     F .text	00000014 atexit
0080034c g     F .text	000000f4 sumVector
0080e7d0 g     F .text	00000060 _write_r
0080aaac g     F .text	00000018 setlocale
00814564 g     O .rwdata	00000004 _impure_ptr
008160a8 g     O .bss	00000004 alt_argc
00809934 g     F .text	0000021c __sflush_r
008026fc g     F .text	0000019c scalbn
00811628 g     F .text	00000060 _do_dtors
0080aa98 g     F .text	00000008 __locale_cjk_lang
00800020 g       .exceptions	00000000 alt_irq_entry
0080c46c g     F .text	00000064 __ulp
00809f64 g     F .text	00000018 __fp_unlock_all
00814578 g     O .rwdata	00000008 alt_fs_list
00800440 g     F .text	00000250 func
00800020 g       *ABS*	00000000 __ram_exceptions_start
0080aac4 g     F .text	0000000c localeconv
008116bc g     F .text	00000050 alt_ic_isr_register
008145a0 g       *ABS*	00000000 _edata
008161ec g       *ABS*	00000000 _end
0080ea4c g     F .text	00000164 __fputwc
00800244 g       *ABS*	00000000 __ram_exceptions_end
00810d50 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
00811794 g     F .text	0000008c alt_ic_irq_disable
0080cfcc g     F .text	0000007c __swrite
00814570 g     O .rwdata	00000004 __malloc_trim_threshold
0080aa8c g     F .text	0000000c __locale_msgcharset
00812234 g     F .text	00000038 exit
0080a930 g     F .text	000000c4 _fwalk_reent
0080c270 g     F .text	000001fc __mdiff
00802938 g     F .text	00000074 .hidden __modsi3
01000000 g       *ABS*	00000000 __alt_data_end
00800020 g     F .exceptions	00000000 alt_exception
00809f40 g     F .text	00000004 __sfp_lock_release
00800000 g       *ABS*	00000000 __alt_mem_sdram
00812580 g     F .text	00000034 _exit
00811374 g     F .text	0000012c alt_alarm_start
0080aad0 g     F .text	000001bc __smakebuf_r
00805bf0 g     F .text	00000098 strlen
00811b9c g     F .text	00000154 open
00804548 g     F .text	000000dc .hidden __gedf2
00814574 g     O .rwdata	00000004 __wctomb
0080d284 g     F .text	00000018 __sprint_r
00811688 g     F .text	00000034 alt_icache_flush_all
00814594 g     O .rwdata	00000004 alt_priority_mask
0081170c g     F .text	00000088 alt_ic_irq_enable
00807e80 g     F .text	0000001c __vfprintf_internal
0080f0a8 g     F .text	0000005c _wctomb_r
00804d3c g     F .text	000008fc .hidden __subdf3
0080bca4 g     F .text	000000b0 __lo0bits
00814598 g     O .rwdata	00000008 alt_alarm_list
008115c8 g     F .text	00000060 _do_ctors
0080efb8 g     F .text	000000c0 wcrtomb
0080fd8c g     F .text	000000d0 close
00802a68 g     F .text	000004c8 .hidden __addsf3
008100bc g     F .text	00000084 alt_load
0080ebd4 g     F .text	00000080 fputwc
00809f44 g     F .text	00000004 __sinit_lock_acquire
0080ba18 g     F .text	00000120 __multadd
0080b9f0 g     F .text	00000028 _Bfree



Disassembly of section .entry:

00800000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
  800000:	00840014 	movui	r2,4096
#endif

0:
    initi r2
  800004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
  800008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
  80000c:	00bffd16 	blt	zero,r2,800004 <__alt_data_end+0xff800004>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
  800010:	00402034 	movhi	at,128
    ori r1, r1, %lo(_start)
  800014:	08409114 	ori	at,at,580
    jmp r1
  800018:	0800683a 	jmp	at
  80001c:	00000000 	call	0 <__alt_mem_sdram-0x800000>

Disassembly of section .exceptions:

00800020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
  800020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
  800024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
  800028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
  80002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
  800030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
  800034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
  800038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
  80003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
  800040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
  800044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
  800048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
  80004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
  800050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
  800054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
  800058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
  80005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
  800060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
  800064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
  800068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
  80006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  800070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
  800074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
  800078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
  80007c:	10000326 	beq	r2,zero,80008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
  800080:	20000226 	beq	r4,zero,80008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
  800084:	08000fc0 	call	8000fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
  800088:	00000706 	br	8000a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
  80008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
  800090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
  800094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
  800098:	08001d00 	call	8001d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
  80009c:	1000021e 	bne	r2,zero,8000a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
  8000a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  8000a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
  8000a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
  8000ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
  8000b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
  8000b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
  8000b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
  8000bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
  8000c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
  8000c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
  8000c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
  8000cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
  8000d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
  8000d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
  8000d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
  8000dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
  8000e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
  8000e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
  8000e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
  8000ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
  8000f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
  8000f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
  8000f8:	ef80083a 	eret

008000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
  8000fc:	defff904 	addi	sp,sp,-28
  800100:	dfc00615 	stw	ra,24(sp)
  800104:	df000515 	stw	fp,20(sp)
  800108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
  80010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
  800110:	0005313a 	rdctl	r2,ipending
  800114:	e0bffe15 	stw	r2,-8(fp)

  return active;
  800118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
  80011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
  800120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
  800124:	00800044 	movi	r2,1
  800128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
  80012c:	e0fffb17 	ldw	r3,-20(fp)
  800130:	e0bffc17 	ldw	r2,-16(fp)
  800134:	1884703a 	and	r2,r3,r2
  800138:	10001426 	beq	r2,zero,80018c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
  80013c:	00802074 	movhi	r2,129
  800140:	10983b04 	addi	r2,r2,24812
  800144:	e0fffd17 	ldw	r3,-12(fp)
  800148:	180690fa 	slli	r3,r3,3
  80014c:	10c5883a 	add	r2,r2,r3
  800150:	10c00017 	ldw	r3,0(r2)
  800154:	00802074 	movhi	r2,129
  800158:	10983b04 	addi	r2,r2,24812
  80015c:	e13ffd17 	ldw	r4,-12(fp)
  800160:	200890fa 	slli	r4,r4,3
  800164:	1105883a 	add	r2,r2,r4
  800168:	10800104 	addi	r2,r2,4
  80016c:	10800017 	ldw	r2,0(r2)
  800170:	1009883a 	mov	r4,r2
  800174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
  800178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
  80017c:	0005313a 	rdctl	r2,ipending
  800180:	e0bfff15 	stw	r2,-4(fp)

  return active;
  800184:	e0bfff17 	ldw	r2,-4(fp)
  800188:	00000706 	br	8001a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
  80018c:	e0bffc17 	ldw	r2,-16(fp)
  800190:	1085883a 	add	r2,r2,r2
  800194:	e0bffc15 	stw	r2,-16(fp)
      i++;
  800198:	e0bffd17 	ldw	r2,-12(fp)
  80019c:	10800044 	addi	r2,r2,1
  8001a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
  8001a4:	003fe106 	br	80012c <__alt_data_end+0xff80012c>

    active = alt_irq_pending ();
  8001a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
  8001ac:	e0bffb17 	ldw	r2,-20(fp)
  8001b0:	103fdb1e 	bne	r2,zero,800120 <__alt_data_end+0xff800120>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
  8001b4:	0001883a 	nop
}
  8001b8:	0001883a 	nop
  8001bc:	e037883a 	mov	sp,fp
  8001c0:	dfc00117 	ldw	ra,4(sp)
  8001c4:	df000017 	ldw	fp,0(sp)
  8001c8:	dec00204 	addi	sp,sp,8
  8001cc:	f800283a 	ret

008001d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
  8001d0:	defffb04 	addi	sp,sp,-20
  8001d4:	dfc00415 	stw	ra,16(sp)
  8001d8:	df000315 	stw	fp,12(sp)
  8001dc:	df000304 	addi	fp,sp,12
  8001e0:	e13fff15 	stw	r4,-4(fp)
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
  8001e4:	000531fa 	rdctl	r2,exception
  8001e8:	e0bffd15 	stw	r2,-12(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
  8001ec:	e0bffd17 	ldw	r2,-12(fp)
  8001f0:	10801f0c 	andi	r2,r2,124
  8001f4:	1004d0ba 	srli	r2,r2,2
  8001f8:	e0bffd15 	stw	r2,-12(fp)
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
  8001fc:	0005333a 	rdctl	r2,badaddr
  800200:	e0bffe15 	stw	r2,-8(fp)
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
  800204:	d0a6d817 	ldw	r2,-25760(gp)
  800208:	10000726 	beq	r2,zero,800228 <alt_instruction_exception_entry+0x58>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
  80020c:	d0a6d817 	ldw	r2,-25760(gp)
  800210:	e0fffd17 	ldw	r3,-12(fp)
  800214:	e1bffe17 	ldw	r6,-8(fp)
  800218:	e17fff17 	ldw	r5,-4(fp)
  80021c:	1809883a 	mov	r4,r3
  800220:	103ee83a 	callr	r2
  800224:	00000206 	br	800230 <alt_instruction_exception_entry+0x60>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
  800228:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
  80022c:	0005883a 	mov	r2,zero
}
  800230:	e037883a 	mov	sp,fp
  800234:	dfc00117 	ldw	ra,4(sp)
  800238:	df000017 	ldw	fp,0(sp)
  80023c:	dec00204 	addi	sp,sp,8
  800240:	f800283a 	ret

Disassembly of section .text:

00800244 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
  800244:	00840014 	movui	r2,4096
#endif

0:
    initd 0(r2)
  800248:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
  80024c:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
  800250:	00bffd16 	blt	zero,r2,800248 <__alt_data_end+0xff800248>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
  800254:	06c04034 	movhi	sp,256
    ori sp, sp, %lo(__alt_stack_pointer)
  800258:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
  80025c:	06802074 	movhi	gp,129
    ori gp, gp, %lo(_gp)
  800260:	d6b15814 	ori	gp,gp,50528
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
  800264:	00802074 	movhi	r2,129
    ori r2, r2, %lo(__bss_start)
  800268:	10982314 	ori	r2,r2,24716

    movhi r3, %hi(__bss_end)
  80026c:	00c02074 	movhi	r3,129
    ori r3, r3, %lo(__bss_end)
  800270:	18d87b14 	ori	r3,r3,25068

    beq r2, r3, 1f
  800274:	10c00326 	beq	r2,r3,800284 <_start+0x40>

0:
    stw zero, (r2)
  800278:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
  80027c:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
  800280:	10fffd36 	bltu	r2,r3,800278 <__alt_data_end+0xff800278>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
  800284:	08100bc0 	call	8100bc <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
  800288:	08102500 	call	810250 <alt_main>

0080028c <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
  80028c:	003fff06 	br	80028c <__alt_data_end+0xff80028c>

00800290 <generateVector>:
//Test case 3
#define step 1/1024.0
#define N 261121
// Generates the vector x and stores it in the memory
void generateVector(float x[N])
{
  800290:	defffb04 	addi	sp,sp,-20
  800294:	dfc00415 	stw	ra,16(sp)
  800298:	df000315 	stw	fp,12(sp)
  80029c:	dc000215 	stw	r16,8(sp)
  8002a0:	df000304 	addi	fp,sp,12
  8002a4:	e13ffe15 	stw	r4,-8(fp)
int i;
x[0] = 0;
  8002a8:	e0bffe17 	ldw	r2,-8(fp)
  8002ac:	10000015 	stw	zero,0(r2)
for (i=1; i<N; i++)
  8002b0:	00800044 	movi	r2,1
  8002b4:	e0bffd15 	stw	r2,-12(fp)
  8002b8:	00001906 	br	800320 <generateVector+0x90>
x[i] = x[i-1] + step;
  8002bc:	e0bffd17 	ldw	r2,-12(fp)
  8002c0:	1085883a 	add	r2,r2,r2
  8002c4:	1085883a 	add	r2,r2,r2
  8002c8:	1007883a 	mov	r3,r2
  8002cc:	e0bffe17 	ldw	r2,-8(fp)
  8002d0:	10e1883a 	add	r16,r2,r3
  8002d4:	e0fffd17 	ldw	r3,-12(fp)
  8002d8:	00900034 	movhi	r2,16384
  8002dc:	10bfffc4 	addi	r2,r2,-1
  8002e0:	1885883a 	add	r2,r3,r2
  8002e4:	1085883a 	add	r2,r2,r2
  8002e8:	1085883a 	add	r2,r2,r2
  8002ec:	1007883a 	mov	r3,r2
  8002f0:	e0bffe17 	ldw	r2,-8(fp)
  8002f4:	10c5883a 	add	r2,r2,r3
  8002f8:	10c00017 	ldw	r3,0(r2)
  8002fc:	014ea034 	movhi	r5,14976
  800300:	1809883a 	mov	r4,r3
  800304:	0802a680 	call	802a68 <__addsf3>
  800308:	1007883a 	mov	r3,r2
  80030c:	1805883a 	mov	r2,r3
  800310:	80800015 	stw	r2,0(r16)
// Generates the vector x and stores it in the memory
void generateVector(float x[N])
{
int i;
x[0] = 0;
for (i=1; i<N; i++)
  800314:	e0bffd17 	ldw	r2,-12(fp)
  800318:	10800044 	addi	r2,r2,1
  80031c:	e0bffd15 	stw	r2,-12(fp)
  800320:	e0fffd17 	ldw	r3,-12(fp)
  800324:	00800134 	movhi	r2,4
  800328:	10bf0004 	addi	r2,r2,-1024
  80032c:	10ffe30e 	bge	r2,r3,8002bc <__alt_data_end+0xff8002bc>
x[i] = x[i-1] + step;
}
  800330:	0001883a 	nop
  800334:	e6ffff04 	addi	sp,fp,-4
  800338:	dfc00217 	ldw	ra,8(sp)
  80033c:	df000117 	ldw	fp,4(sp)
  800340:	dc000017 	ldw	r16,0(sp)
  800344:	dec00304 	addi	sp,sp,12
  800348:	f800283a 	ret

0080034c <sumVector>:
float sumVector(float x[], int M)
{
  80034c:	defff904 	addi	sp,sp,-28
  800350:	dfc00615 	stw	ra,24(sp)
  800354:	df000515 	stw	fp,20(sp)
  800358:	dc000415 	stw	r16,16(sp)
  80035c:	df000504 	addi	fp,sp,20
  800360:	e13ffd15 	stw	r4,-12(fp)
  800364:	e17ffe15 	stw	r5,-8(fp)
	float sum = 0;
  800368:	e03ffb15 	stw	zero,-20(fp)
		    for (int i = 0; i < M; i++) {
  80036c:	e03ffc15 	stw	zero,-16(fp)
  800370:	00002706 	br	800410 <sumVector+0xc4>
		        sum += x[i] + x[i]*x[i]; // Add xi and xi^2 to sum
  800374:	e0bffc17 	ldw	r2,-16(fp)
  800378:	1085883a 	add	r2,r2,r2
  80037c:	1085883a 	add	r2,r2,r2
  800380:	1007883a 	mov	r3,r2
  800384:	e0bffd17 	ldw	r2,-12(fp)
  800388:	10c5883a 	add	r2,r2,r3
  80038c:	14000017 	ldw	r16,0(r2)
  800390:	e0bffc17 	ldw	r2,-16(fp)
  800394:	1085883a 	add	r2,r2,r2
  800398:	1085883a 	add	r2,r2,r2
  80039c:	1007883a 	mov	r3,r2
  8003a0:	e0bffd17 	ldw	r2,-12(fp)
  8003a4:	10c5883a 	add	r2,r2,r3
  8003a8:	10c00017 	ldw	r3,0(r2)
  8003ac:	e0bffc17 	ldw	r2,-16(fp)
  8003b0:	1085883a 	add	r2,r2,r2
  8003b4:	1085883a 	add	r2,r2,r2
  8003b8:	1009883a 	mov	r4,r2
  8003bc:	e0bffd17 	ldw	r2,-12(fp)
  8003c0:	1105883a 	add	r2,r2,r4
  8003c4:	11000017 	ldw	r4,0(r2)
  8003c8:	200b883a 	mov	r5,r4
  8003cc:	1809883a 	mov	r4,r3
  8003d0:	0802f300 	call	802f30 <__mulsf3>
  8003d4:	1007883a 	mov	r3,r2
  8003d8:	1805883a 	mov	r2,r3
  8003dc:	100b883a 	mov	r5,r2
  8003e0:	8009883a 	mov	r4,r16
  8003e4:	0802a680 	call	802a68 <__addsf3>
  8003e8:	1007883a 	mov	r3,r2
  8003ec:	1805883a 	mov	r2,r3
  8003f0:	100b883a 	mov	r5,r2
  8003f4:	e13ffb17 	ldw	r4,-20(fp)
  8003f8:	0802a680 	call	802a68 <__addsf3>
  8003fc:	1007883a 	mov	r3,r2
  800400:	e0fffb15 	stw	r3,-20(fp)
x[i] = x[i-1] + step;
}
float sumVector(float x[], int M)
{
	float sum = 0;
		    for (int i = 0; i < M; i++) {
  800404:	e0bffc17 	ldw	r2,-16(fp)
  800408:	10800044 	addi	r2,r2,1
  80040c:	e0bffc15 	stw	r2,-16(fp)
  800410:	e0fffc17 	ldw	r3,-16(fp)
  800414:	e0bffe17 	ldw	r2,-8(fp)
  800418:	18bfd616 	blt	r3,r2,800374 <__alt_data_end+0xff800374>
		        sum += x[i] + x[i]*x[i]; // Add xi and xi^2 to sum
		    }
		    return sum;
  80041c:	e0bffb17 	ldw	r2,-20(fp)
  800420:	1007883a 	mov	r3,r2
}
  800424:	1805883a 	mov	r2,r3
  800428:	e6ffff04 	addi	sp,fp,-4
  80042c:	dfc00217 	ldw	ra,8(sp)
  800430:	df000117 	ldw	fp,4(sp)
  800434:	dc000017 	ldw	r16,0(sp)
  800438:	dec00304 	addi	sp,sp,12
  80043c:	f800283a 	ret

00800440 <func>:

float func(float x[], int M)
{
  800440:	defff404 	addi	sp,sp,-48
  800444:	dfc00b15 	stw	ra,44(sp)
  800448:	df000a15 	stw	fp,40(sp)
  80044c:	dd400915 	stw	r21,36(sp)
  800450:	dd000815 	stw	r20,32(sp)
  800454:	dcc00715 	stw	r19,28(sp)
  800458:	dc800615 	stw	r18,24(sp)
  80045c:	dc400515 	stw	r17,20(sp)
  800460:	dc000415 	stw	r16,16(sp)
  800464:	df000a04 	addi	fp,sp,40
  800468:	e13ff815 	stw	r4,-32(fp)
  80046c:	e17ff915 	stw	r5,-28(fp)
	float sum = 0;
  800470:	e03ff615 	stw	zero,-40(fp)
		    for (int i = 0; i < M; i++) {
  800474:	e03ff715 	stw	zero,-36(fp)
  800478:	00007406 	br	80064c <func+0x20c>
		    	sum += 0.5 * x[i] + x[i] * x[i] * cos((x[i] - 128.0) / 128.0);
  80047c:	e13ff617 	ldw	r4,-40(fp)
  800480:	08057940 	call	805794 <__extendsfdf2>
  800484:	1021883a 	mov	r16,r2
  800488:	1823883a 	mov	r17,r3
  80048c:	e0bff717 	ldw	r2,-36(fp)
  800490:	1085883a 	add	r2,r2,r2
  800494:	1085883a 	add	r2,r2,r2
  800498:	1007883a 	mov	r3,r2
  80049c:	e0bff817 	ldw	r2,-32(fp)
  8004a0:	10c5883a 	add	r2,r2,r3
  8004a4:	10c00017 	ldw	r3,0(r2)
  8004a8:	1809883a 	mov	r4,r3
  8004ac:	08057940 	call	805794 <__extendsfdf2>
  8004b0:	1011883a 	mov	r8,r2
  8004b4:	1813883a 	mov	r9,r3
  8004b8:	000d883a 	mov	r6,zero
  8004bc:	01cff834 	movhi	r7,16352
  8004c0:	4009883a 	mov	r4,r8
  8004c4:	480b883a 	mov	r5,r9
  8004c8:	08046240 	call	804624 <__muldf3>
  8004cc:	1009883a 	mov	r4,r2
  8004d0:	180b883a 	mov	r5,r3
  8004d4:	2025883a 	mov	r18,r4
  8004d8:	2827883a 	mov	r19,r5
  8004dc:	e0bff717 	ldw	r2,-36(fp)
  8004e0:	1085883a 	add	r2,r2,r2
  8004e4:	1085883a 	add	r2,r2,r2
  8004e8:	1007883a 	mov	r3,r2
  8004ec:	e0bff817 	ldw	r2,-32(fp)
  8004f0:	10c5883a 	add	r2,r2,r3
  8004f4:	10c00017 	ldw	r3,0(r2)
  8004f8:	e0bff717 	ldw	r2,-36(fp)
  8004fc:	1085883a 	add	r2,r2,r2
  800500:	1085883a 	add	r2,r2,r2
  800504:	1009883a 	mov	r4,r2
  800508:	e0bff817 	ldw	r2,-32(fp)
  80050c:	1105883a 	add	r2,r2,r4
  800510:	11000017 	ldw	r4,0(r2)
  800514:	200b883a 	mov	r5,r4
  800518:	1809883a 	mov	r4,r3
  80051c:	0802f300 	call	802f30 <__mulsf3>
  800520:	1007883a 	mov	r3,r2
  800524:	1805883a 	mov	r2,r3
  800528:	1009883a 	mov	r4,r2
  80052c:	08057940 	call	805794 <__extendsfdf2>
  800530:	1029883a 	mov	r20,r2
  800534:	182b883a 	mov	r21,r3
  800538:	e0bff717 	ldw	r2,-36(fp)
  80053c:	1085883a 	add	r2,r2,r2
  800540:	1085883a 	add	r2,r2,r2
  800544:	1007883a 	mov	r3,r2
  800548:	e0bff817 	ldw	r2,-32(fp)
  80054c:	10c5883a 	add	r2,r2,r3
  800550:	10c00017 	ldw	r3,0(r2)
  800554:	1809883a 	mov	r4,r3
  800558:	08057940 	call	805794 <__extendsfdf2>
  80055c:	1011883a 	mov	r8,r2
  800560:	1813883a 	mov	r9,r3
  800564:	000d883a 	mov	r6,zero
  800568:	01d01834 	movhi	r7,16480
  80056c:	4009883a 	mov	r4,r8
  800570:	480b883a 	mov	r5,r9
  800574:	0804d3c0 	call	804d3c <__subdf3>
  800578:	1009883a 	mov	r4,r2
  80057c:	180b883a 	mov	r5,r3
  800580:	2005883a 	mov	r2,r4
  800584:	2807883a 	mov	r3,r5
  800588:	000d883a 	mov	r6,zero
  80058c:	01d01834 	movhi	r7,16480
  800590:	1009883a 	mov	r4,r2
  800594:	180b883a 	mov	r5,r3
  800598:	0803bd80 	call	803bd8 <__divdf3>
  80059c:	1009883a 	mov	r4,r2
  8005a0:	180b883a 	mov	r5,r3
  8005a4:	2005883a 	mov	r2,r4
  8005a8:	2807883a 	mov	r3,r5
  8005ac:	1009883a 	mov	r4,r2
  8005b0:	180b883a 	mov	r5,r3
  8005b4:	08007a40 	call	8007a4 <cos>
  8005b8:	1009883a 	mov	r4,r2
  8005bc:	180b883a 	mov	r5,r3
  8005c0:	200d883a 	mov	r6,r4
  8005c4:	280f883a 	mov	r7,r5
  8005c8:	a009883a 	mov	r4,r20
  8005cc:	a80b883a 	mov	r5,r21
  8005d0:	08046240 	call	804624 <__muldf3>
  8005d4:	1009883a 	mov	r4,r2
  8005d8:	180b883a 	mov	r5,r3
  8005dc:	2005883a 	mov	r2,r4
  8005e0:	2807883a 	mov	r3,r5
  8005e4:	100d883a 	mov	r6,r2
  8005e8:	180f883a 	mov	r7,r3
  8005ec:	9009883a 	mov	r4,r18
  8005f0:	980b883a 	mov	r5,r19
  8005f4:	080332c0 	call	80332c <__adddf3>
  8005f8:	1009883a 	mov	r4,r2
  8005fc:	180b883a 	mov	r5,r3
  800600:	2005883a 	mov	r2,r4
  800604:	2807883a 	mov	r3,r5
  800608:	100d883a 	mov	r6,r2
  80060c:	180f883a 	mov	r7,r3
  800610:	8009883a 	mov	r4,r16
  800614:	880b883a 	mov	r5,r17
  800618:	080332c0 	call	80332c <__adddf3>
  80061c:	1009883a 	mov	r4,r2
  800620:	180b883a 	mov	r5,r3
  800624:	2005883a 	mov	r2,r4
  800628:	2807883a 	mov	r3,r5
  80062c:	1009883a 	mov	r4,r2
  800630:	180b883a 	mov	r5,r3
  800634:	08058a40 	call	8058a4 <__truncdfsf2>
  800638:	1007883a 	mov	r3,r2
  80063c:	e0fff615 	stw	r3,-40(fp)
}

float func(float x[], int M)
{
	float sum = 0;
		    for (int i = 0; i < M; i++) {
  800640:	e0bff717 	ldw	r2,-36(fp)
  800644:	10800044 	addi	r2,r2,1
  800648:	e0bff715 	stw	r2,-36(fp)
  80064c:	e0fff717 	ldw	r3,-36(fp)
  800650:	e0bff917 	ldw	r2,-28(fp)
  800654:	18bf8916 	blt	r3,r2,80047c <__alt_data_end+0xff80047c>
		    	sum += 0.5 * x[i] + x[i] * x[i] * cos((x[i] - 128.0) / 128.0);
		    }
		    return sum;
  800658:	e0bff617 	ldw	r2,-40(fp)
  80065c:	1007883a 	mov	r3,r2
}
  800660:	1805883a 	mov	r2,r3
  800664:	e6fffa04 	addi	sp,fp,-24
  800668:	dfc00717 	ldw	ra,28(sp)
  80066c:	df000617 	ldw	fp,24(sp)
  800670:	dd400517 	ldw	r21,20(sp)
  800674:	dd000417 	ldw	r20,16(sp)
  800678:	dcc00317 	ldw	r19,12(sp)
  80067c:	dc800217 	ldw	r18,8(sp)
  800680:	dc400117 	ldw	r17,4(sp)
  800684:	dc000017 	ldw	r16,0(sp)
  800688:	dec00804 	addi	sp,sp,32
  80068c:	f800283a 	ret

00800690 <main>:

int main()
{
  800690:	defffe04 	addi	sp,sp,-8
  800694:	dfc00115 	stw	ra,4(sp)
  800698:	df000015 	stw	fp,0(sp)
  80069c:	d839883a 	mov	fp,sp
  8006a0:	023ffc34 	movhi	r8,65520
  8006a4:	4203fc04 	addi	r8,r8,4080
  8006a8:	da37883a 	add	sp,sp,r8
printf("Task 4!\n");
  8006ac:	01002074 	movhi	r4,129
  8006b0:	21096d04 	addi	r4,r4,9652
  8006b4:	0805bdc0 	call	805bdc <puts>
// Define input vector
float x[N];
// Returned result
float y;
generateVector(x);
  8006b8:	00fffc34 	movhi	r3,65520
  8006bc:	18c3ff04 	addi	r3,r3,4092
  8006c0:	e0c5883a 	add	r2,fp,r3
  8006c4:	1009883a 	mov	r4,r2
  8006c8:	08002900 	call	800290 <generateVector>
// The following is used for timing
//char buf[50];
clock_t exec_t1, exec_t2;
exec_t1 = times(NULL); // get system time before starting the process
  8006cc:	0009883a 	mov	r4,zero
  8006d0:	081059c0 	call	81059c <times>
  8006d4:	013ffc34 	movhi	r4,65520
  8006d8:	2103fc04 	addi	r4,r4,4080
  8006dc:	2709883a 	add	r4,r4,fp
  8006e0:	20800015 	stw	r2,0(r4)
// The code that you want to time goes here
y = func(x, N);
  8006e4:	00fffc34 	movhi	r3,65520
  8006e8:	18c3ff04 	addi	r3,r3,4092
  8006ec:	e0c5883a 	add	r2,fp,r3
  8006f0:	01400134 	movhi	r5,4
  8006f4:	297f0044 	addi	r5,r5,-1023
  8006f8:	1009883a 	mov	r4,r2
  8006fc:	08004400 	call	800440 <func>
  800700:	013ffc34 	movhi	r4,65520
  800704:	2103fd04 	addi	r4,r4,4084
  800708:	2709883a 	add	r4,r4,fp
  80070c:	20800015 	stw	r2,0(r4)
// till here
exec_t2 = times(NULL); // get system time after finishing the process
  800710:	0009883a 	mov	r4,zero
  800714:	081059c0 	call	81059c <times>
  800718:	00fffc34 	movhi	r3,65520
  80071c:	18c3fe04 	addi	r3,r3,4088
  800720:	1f07883a 	add	r3,r3,fp
  800724:	18800015 	stw	r2,0(r3)




 printf(" proc time = %d ticks \n", (unsigned int) (exec_t2-exec_t1));
  800728:	013ffc34 	movhi	r4,65520
  80072c:	2103fe04 	addi	r4,r4,4088
  800730:	2709883a 	add	r4,r4,fp
  800734:	20c00017 	ldw	r3,0(r4)
  800738:	013ffc34 	movhi	r4,65520
  80073c:	2103fc04 	addi	r4,r4,4080
  800740:	2709883a 	add	r4,r4,fp
  800744:	20800017 	ldw	r2,0(r4)
  800748:	1885c83a 	sub	r2,r3,r2
  80074c:	100b883a 	mov	r5,r2
  800750:	01002074 	movhi	r4,129
  800754:	21096f04 	addi	r4,r4,9660
  800758:	0805ae00 	call	805ae0 <printf>
 printf("Result: %f \n",y);
  80075c:	00bffc34 	movhi	r2,65520
  800760:	1083fd04 	addi	r2,r2,4084
  800764:	1705883a 	add	r2,r2,fp
  800768:	11000017 	ldw	r4,0(r2)
  80076c:	08057940 	call	805794 <__extendsfdf2>
  800770:	100d883a 	mov	r6,r2
  800774:	180f883a 	mov	r7,r3
  800778:	300b883a 	mov	r5,r6
  80077c:	380d883a 	mov	r6,r7
  800780:	01002074 	movhi	r4,129
  800784:	21097504 	addi	r4,r4,9684
  800788:	0805ae00 	call	805ae0 <printf>
  80078c:	0005883a 	mov	r2,zero

//nios2-elf-objdump -d hello_world.elf > disassembly.txt
//nios2-elf-objdump -d hello_world.elf | grep -A20 "<main>:"
//nios2-elf-size task5.elf
}
  800790:	e037883a 	mov	sp,fp
  800794:	dfc00117 	ldw	ra,4(sp)
  800798:	df000017 	ldw	fp,0(sp)
  80079c:	dec00204 	addi	sp,sp,8
  8007a0:	f800283a 	ret

008007a4 <cos>:
  8007a4:	00a00034 	movhi	r2,32768
  8007a8:	defffa04 	addi	sp,sp,-24
  8007ac:	10bfffc4 	addi	r2,r2,-1
  8007b0:	00cffa74 	movhi	r3,16361
  8007b4:	dfc00515 	stw	ra,20(sp)
  8007b8:	2884703a 	and	r2,r5,r2
  8007bc:	18c87ec4 	addi	r3,r3,8699
  8007c0:	1880180e 	bge	r3,r2,800824 <cos+0x80>
  8007c4:	00dffc34 	movhi	r3,32752
  8007c8:	18ffffc4 	addi	r3,r3,-1
  8007cc:	1880060e 	bge	r3,r2,8007e8 <cos+0x44>
  8007d0:	280f883a 	mov	r7,r5
  8007d4:	200d883a 	mov	r6,r4
  8007d8:	0804d3c0 	call	804d3c <__subdf3>
  8007dc:	dfc00517 	ldw	ra,20(sp)
  8007e0:	dec00604 	addi	sp,sp,24
  8007e4:	f800283a 	ret
  8007e8:	d9800104 	addi	r6,sp,4
  8007ec:	08008900 	call	800890 <__ieee754_rem_pio2>
  8007f0:	108000cc 	andi	r2,r2,3
  8007f4:	00c00044 	movi	r3,1
  8007f8:	10c01726 	beq	r2,r3,800858 <cos+0xb4>
  8007fc:	01000084 	movi	r4,2
  800800:	11000e26 	beq	r2,r4,80083c <cos+0x98>
  800804:	10001c26 	beq	r2,zero,800878 <cos+0xd4>
  800808:	d9800317 	ldw	r6,12(sp)
  80080c:	d9c00417 	ldw	r7,16(sp)
  800810:	d9000117 	ldw	r4,4(sp)
  800814:	d9400217 	ldw	r5,8(sp)
  800818:	d8c00015 	stw	r3,0(sp)
  80081c:	08022300 	call	802230 <__kernel_sin>
  800820:	003fee06 	br	8007dc <__alt_data_end+0xff8007dc>
  800824:	000d883a 	mov	r6,zero
  800828:	000f883a 	mov	r7,zero
  80082c:	0800ffc0 	call	800ffc <__kernel_cos>
  800830:	dfc00517 	ldw	ra,20(sp)
  800834:	dec00604 	addi	sp,sp,24
  800838:	f800283a 	ret
  80083c:	d9800317 	ldw	r6,12(sp)
  800840:	d9c00417 	ldw	r7,16(sp)
  800844:	d9000117 	ldw	r4,4(sp)
  800848:	d9400217 	ldw	r5,8(sp)
  80084c:	0800ffc0 	call	800ffc <__kernel_cos>
  800850:	18e0003c 	xorhi	r3,r3,32768
  800854:	003fe106 	br	8007dc <__alt_data_end+0xff8007dc>
  800858:	d9800317 	ldw	r6,12(sp)
  80085c:	d9c00417 	ldw	r7,16(sp)
  800860:	d9000117 	ldw	r4,4(sp)
  800864:	d9400217 	ldw	r5,8(sp)
  800868:	d8800015 	stw	r2,0(sp)
  80086c:	08022300 	call	802230 <__kernel_sin>
  800870:	18e0003c 	xorhi	r3,r3,32768
  800874:	003fd906 	br	8007dc <__alt_data_end+0xff8007dc>
  800878:	d9800317 	ldw	r6,12(sp)
  80087c:	d9c00417 	ldw	r7,16(sp)
  800880:	d9000117 	ldw	r4,4(sp)
  800884:	d9400217 	ldw	r5,8(sp)
  800888:	0800ffc0 	call	800ffc <__kernel_cos>
  80088c:	003fd306 	br	8007dc <__alt_data_end+0xff8007dc>

00800890 <__ieee754_rem_pio2>:
  800890:	02200034 	movhi	r8,32768
  800894:	deffea04 	addi	sp,sp,-88
  800898:	423fffc4 	addi	r8,r8,-1
  80089c:	00cffa74 	movhi	r3,16361
  8008a0:	ddc01315 	stw	r23,76(sp)
  8008a4:	dc400d15 	stw	r17,52(sp)
  8008a8:	dfc01515 	stw	ra,84(sp)
  8008ac:	df001415 	stw	fp,80(sp)
  8008b0:	dd801215 	stw	r22,72(sp)
  8008b4:	dd401115 	stw	r21,68(sp)
  8008b8:	dd001015 	stw	r20,64(sp)
  8008bc:	dcc00f15 	stw	r19,60(sp)
  8008c0:	dc800e15 	stw	r18,56(sp)
  8008c4:	dc000c15 	stw	r16,48(sp)
  8008c8:	2a2e703a 	and	r23,r5,r8
  8008cc:	18c87ec4 	addi	r3,r3,8699
  8008d0:	2823883a 	mov	r17,r5
  8008d4:	1dc0790e 	bge	r3,r23,800abc <__ieee754_rem_pio2+0x22c>
  8008d8:	009000f4 	movhi	r2,16387
  8008dc:	10b65ec4 	addi	r2,r2,-9861
  8008e0:	3021883a 	mov	r16,r6
  8008e4:	2027883a 	mov	r19,r4
  8008e8:	15c02316 	blt	r2,r23,800978 <__ieee754_rem_pio2+0xe8>
  8008ec:	01cffe74 	movhi	r7,16377
  8008f0:	39c87ec4 	addi	r7,r7,8699
  8008f4:	01951034 	movhi	r6,21568
  8008f8:	01417a0e 	bge	zero,r5,800ee4 <__ieee754_rem_pio2+0x654>
  8008fc:	0804d3c0 	call	804d3c <__subdf3>
  800900:	1025883a 	mov	r18,r2
  800904:	008ffe74 	movhi	r2,16377
  800908:	10887ec4 	addi	r2,r2,8699
  80090c:	1823883a 	mov	r17,r3
  800910:	b8808426 	beq	r23,r2,800b24 <__ieee754_rem_pio2+0x294>
  800914:	018698b4 	movhi	r6,6754
  800918:	01cf7474 	movhi	r7,15825
  80091c:	3198cc44 	addi	r6,r6,25393
  800920:	39ed1844 	addi	r7,r7,-19359
  800924:	9009883a 	mov	r4,r18
  800928:	180b883a 	mov	r5,r3
  80092c:	0804d3c0 	call	804d3c <__subdf3>
  800930:	100d883a 	mov	r6,r2
  800934:	180f883a 	mov	r7,r3
  800938:	9009883a 	mov	r4,r18
  80093c:	880b883a 	mov	r5,r17
  800940:	80800015 	stw	r2,0(r16)
  800944:	80c00115 	stw	r3,4(r16)
  800948:	0804d3c0 	call	804d3c <__subdf3>
  80094c:	018698b4 	movhi	r6,6754
  800950:	01cf7474 	movhi	r7,15825
  800954:	3198cc44 	addi	r6,r6,25393
  800958:	39ed1844 	addi	r7,r7,-19359
  80095c:	1009883a 	mov	r4,r2
  800960:	180b883a 	mov	r5,r3
  800964:	0804d3c0 	call	804d3c <__subdf3>
  800968:	80800215 	stw	r2,8(r16)
  80096c:	80c00315 	stw	r3,12(r16)
  800970:	00800044 	movi	r2,1
  800974:	00005606 	br	800ad0 <__ieee754_rem_pio2+0x240>
  800978:	00904e74 	movhi	r2,16697
  80097c:	10887ec4 	addi	r2,r2,8699
  800980:	15c0830e 	bge	r2,r23,800b90 <__ieee754_rem_pio2+0x300>
  800984:	009ffc34 	movhi	r2,32752
  800988:	10bfffc4 	addi	r2,r2,-1
  80098c:	15c05c16 	blt	r2,r23,800b00 <__ieee754_rem_pio2+0x270>
  800990:	b829d53a 	srai	r20,r23,20
  800994:	a53efa84 	addi	r20,r20,-1046
  800998:	a024953a 	slli	r18,r20,20
  80099c:	bca5c83a 	sub	r18,r23,r18
  8009a0:	900b883a 	mov	r5,r18
  8009a4:	08056380 	call	805638 <__fixdfsi>
  8009a8:	1009883a 	mov	r4,r2
  8009ac:	08056b80 	call	8056b8 <__floatsidf>
  8009b0:	9809883a 	mov	r4,r19
  8009b4:	900b883a 	mov	r5,r18
  8009b8:	100d883a 	mov	r6,r2
  8009bc:	180f883a 	mov	r7,r3
  8009c0:	d8800215 	stw	r2,8(sp)
  8009c4:	d8c00315 	stw	r3,12(sp)
  8009c8:	0804d3c0 	call	804d3c <__subdf3>
  8009cc:	000d883a 	mov	r6,zero
  8009d0:	01d05c34 	movhi	r7,16752
  8009d4:	1009883a 	mov	r4,r2
  8009d8:	180b883a 	mov	r5,r3
  8009dc:	08046240 	call	804624 <__muldf3>
  8009e0:	180b883a 	mov	r5,r3
  8009e4:	1009883a 	mov	r4,r2
  8009e8:	182b883a 	mov	r21,r3
  8009ec:	102d883a 	mov	r22,r2
  8009f0:	08056380 	call	805638 <__fixdfsi>
  8009f4:	1009883a 	mov	r4,r2
  8009f8:	08056b80 	call	8056b8 <__floatsidf>
  8009fc:	100d883a 	mov	r6,r2
  800a00:	180f883a 	mov	r7,r3
  800a04:	b009883a 	mov	r4,r22
  800a08:	a80b883a 	mov	r5,r21
  800a0c:	1027883a 	mov	r19,r2
  800a10:	1825883a 	mov	r18,r3
  800a14:	d8800415 	stw	r2,16(sp)
  800a18:	d8c00515 	stw	r3,20(sp)
  800a1c:	0804d3c0 	call	804d3c <__subdf3>
  800a20:	000d883a 	mov	r6,zero
  800a24:	01d05c34 	movhi	r7,16752
  800a28:	1009883a 	mov	r4,r2
  800a2c:	180b883a 	mov	r5,r3
  800a30:	08046240 	call	804624 <__muldf3>
  800a34:	000d883a 	mov	r6,zero
  800a38:	000f883a 	mov	r7,zero
  800a3c:	1009883a 	mov	r4,r2
  800a40:	180b883a 	mov	r5,r3
  800a44:	d8800615 	stw	r2,24(sp)
  800a48:	d8c00715 	stw	r3,28(sp)
  800a4c:	08044c00 	call	8044c0 <__eqdf2>
  800a50:	1001431e 	bne	r2,zero,800f60 <__ieee754_rem_pio2+0x6d0>
  800a54:	000f883a 	mov	r7,zero
  800a58:	000d883a 	mov	r6,zero
  800a5c:	9809883a 	mov	r4,r19
  800a60:	900b883a 	mov	r5,r18
  800a64:	08044c00 	call	8044c0 <__eqdf2>
  800a68:	100f003a 	cmpeq	r7,r2,zero
  800a6c:	00800084 	movi	r2,2
  800a70:	11cfc83a 	sub	r7,r2,r7
  800a74:	00800084 	movi	r2,2
  800a78:	d8800015 	stw	r2,0(sp)
  800a7c:	00802074 	movhi	r2,129
  800a80:	10899904 	addi	r2,r2,9828
  800a84:	d8800115 	stw	r2,4(sp)
  800a88:	a00d883a 	mov	r6,r20
  800a8c:	800b883a 	mov	r5,r16
  800a90:	d9000204 	addi	r4,sp,8
  800a94:	08014a00 	call	8014a0 <__kernel_rem_pio2>
  800a98:	88000d0e 	bge	r17,zero,800ad0 <__ieee754_rem_pio2+0x240>
  800a9c:	81000117 	ldw	r4,4(r16)
  800aa0:	80c00317 	ldw	r3,12(r16)
  800aa4:	0085c83a 	sub	r2,zero,r2
  800aa8:	2120003c 	xorhi	r4,r4,32768
  800aac:	18e0003c 	xorhi	r3,r3,32768
  800ab0:	81000115 	stw	r4,4(r16)
  800ab4:	80c00315 	stw	r3,12(r16)
  800ab8:	00000506 	br	800ad0 <__ieee754_rem_pio2+0x240>
  800abc:	31000015 	stw	r4,0(r6)
  800ac0:	31400115 	stw	r5,4(r6)
  800ac4:	30000215 	stw	zero,8(r6)
  800ac8:	30000315 	stw	zero,12(r6)
  800acc:	0005883a 	mov	r2,zero
  800ad0:	dfc01517 	ldw	ra,84(sp)
  800ad4:	df001417 	ldw	fp,80(sp)
  800ad8:	ddc01317 	ldw	r23,76(sp)
  800adc:	dd801217 	ldw	r22,72(sp)
  800ae0:	dd401117 	ldw	r21,68(sp)
  800ae4:	dd001017 	ldw	r20,64(sp)
  800ae8:	dcc00f17 	ldw	r19,60(sp)
  800aec:	dc800e17 	ldw	r18,56(sp)
  800af0:	dc400d17 	ldw	r17,52(sp)
  800af4:	dc000c17 	ldw	r16,48(sp)
  800af8:	dec01604 	addi	sp,sp,88
  800afc:	f800283a 	ret
  800b00:	200d883a 	mov	r6,r4
  800b04:	280f883a 	mov	r7,r5
  800b08:	0804d3c0 	call	804d3c <__subdf3>
  800b0c:	80800215 	stw	r2,8(r16)
  800b10:	80800015 	stw	r2,0(r16)
  800b14:	80c00315 	stw	r3,12(r16)
  800b18:	80c00115 	stw	r3,4(r16)
  800b1c:	0005883a 	mov	r2,zero
  800b20:	003feb06 	br	800ad0 <__alt_data_end+0xff800ad0>
  800b24:	01cf7474 	movhi	r7,15825
  800b28:	9009883a 	mov	r4,r18
  800b2c:	39ed1844 	addi	r7,r7,-19359
  800b30:	01869834 	movhi	r6,6752
  800b34:	180b883a 	mov	r5,r3
  800b38:	0804d3c0 	call	804d3c <__subdf3>
  800b3c:	018b80f4 	movhi	r6,11779
  800b40:	01cee8f4 	movhi	r7,15267
  800b44:	319c1cc4 	addi	r6,r6,28787
  800b48:	39c66284 	addi	r7,r7,6538
  800b4c:	1009883a 	mov	r4,r2
  800b50:	180b883a 	mov	r5,r3
  800b54:	1025883a 	mov	r18,r2
  800b58:	1823883a 	mov	r17,r3
  800b5c:	0804d3c0 	call	804d3c <__subdf3>
  800b60:	100d883a 	mov	r6,r2
  800b64:	180f883a 	mov	r7,r3
  800b68:	9009883a 	mov	r4,r18
  800b6c:	880b883a 	mov	r5,r17
  800b70:	80800015 	stw	r2,0(r16)
  800b74:	80c00115 	stw	r3,4(r16)
  800b78:	0804d3c0 	call	804d3c <__subdf3>
  800b7c:	018b80f4 	movhi	r6,11779
  800b80:	01cee8f4 	movhi	r7,15267
  800b84:	319c1cc4 	addi	r6,r6,28787
  800b88:	39c66284 	addi	r7,r7,6538
  800b8c:	003f7306 	br	80095c <__alt_data_end+0xff80095c>
  800b90:	08024fc0 	call	8024fc <fabs>
  800b94:	019b72b4 	movhi	r6,28106
  800b98:	01cff934 	movhi	r7,16356
  800b9c:	31b220c4 	addi	r6,r6,-14205
  800ba0:	39d7cc04 	addi	r7,r7,24368
  800ba4:	1009883a 	mov	r4,r2
  800ba8:	180b883a 	mov	r5,r3
  800bac:	102d883a 	mov	r22,r2
  800bb0:	182b883a 	mov	r21,r3
  800bb4:	08046240 	call	804624 <__muldf3>
  800bb8:	000d883a 	mov	r6,zero
  800bbc:	01cff834 	movhi	r7,16352
  800bc0:	1009883a 	mov	r4,r2
  800bc4:	180b883a 	mov	r5,r3
  800bc8:	080332c0 	call	80332c <__adddf3>
  800bcc:	180b883a 	mov	r5,r3
  800bd0:	1009883a 	mov	r4,r2
  800bd4:	08056380 	call	805638 <__fixdfsi>
  800bd8:	1009883a 	mov	r4,r2
  800bdc:	1025883a 	mov	r18,r2
  800be0:	08056b80 	call	8056b8 <__floatsidf>
  800be4:	01cffe74 	movhi	r7,16377
  800be8:	39c87ec4 	addi	r7,r7,8699
  800bec:	01951034 	movhi	r6,21568
  800bf0:	1009883a 	mov	r4,r2
  800bf4:	180b883a 	mov	r5,r3
  800bf8:	1029883a 	mov	r20,r2
  800bfc:	1827883a 	mov	r19,r3
  800c00:	08046240 	call	804624 <__muldf3>
  800c04:	b009883a 	mov	r4,r22
  800c08:	a80b883a 	mov	r5,r21
  800c0c:	100d883a 	mov	r6,r2
  800c10:	180f883a 	mov	r7,r3
  800c14:	0804d3c0 	call	804d3c <__subdf3>
  800c18:	018698b4 	movhi	r6,6754
  800c1c:	01cf7474 	movhi	r7,15825
  800c20:	a009883a 	mov	r4,r20
  800c24:	3198cc44 	addi	r6,r6,25393
  800c28:	39ed1844 	addi	r7,r7,-19359
  800c2c:	980b883a 	mov	r5,r19
  800c30:	1039883a 	mov	fp,r2
  800c34:	d8c00815 	stw	r3,32(sp)
  800c38:	08046240 	call	804624 <__muldf3>
  800c3c:	010007c4 	movi	r4,31
  800c40:	e017883a 	mov	r11,fp
  800c44:	da800817 	ldw	r10,32(sp)
  800c48:	102d883a 	mov	r22,r2
  800c4c:	182b883a 	mov	r21,r3
  800c50:	24802816 	blt	r4,r18,800cf4 <__ieee754_rem_pio2+0x464>
  800c54:	913fffc4 	addi	r4,r18,-1
  800c58:	2109883a 	add	r4,r4,r4
  800c5c:	01402074 	movhi	r5,129
  800c60:	2109883a 	add	r4,r4,r4
  800c64:	29497904 	addi	r5,r5,9700
  800c68:	2909883a 	add	r4,r5,r4
  800c6c:	21000017 	ldw	r4,0(r4)
  800c70:	b9002026 	beq	r23,r4,800cf4 <__ieee754_rem_pio2+0x464>
  800c74:	100d883a 	mov	r6,r2
  800c78:	180f883a 	mov	r7,r3
  800c7c:	e009883a 	mov	r4,fp
  800c80:	500b883a 	mov	r5,r10
  800c84:	da800b15 	stw	r10,44(sp)
  800c88:	df000a15 	stw	fp,40(sp)
  800c8c:	0804d3c0 	call	804d3c <__subdf3>
  800c90:	da800b17 	ldw	r10,44(sp)
  800c94:	dac00a17 	ldw	r11,40(sp)
  800c98:	1019883a 	mov	r12,r2
  800c9c:	1813883a 	mov	r9,r3
  800ca0:	80800015 	stw	r2,0(r16)
  800ca4:	80c00115 	stw	r3,4(r16)
  800ca8:	600d883a 	mov	r6,r12
  800cac:	480f883a 	mov	r7,r9
  800cb0:	5809883a 	mov	r4,r11
  800cb4:	500b883a 	mov	r5,r10
  800cb8:	da400b15 	stw	r9,44(sp)
  800cbc:	db000a15 	stw	r12,40(sp)
  800cc0:	0804d3c0 	call	804d3c <__subdf3>
  800cc4:	b00d883a 	mov	r6,r22
  800cc8:	a80f883a 	mov	r7,r21
  800ccc:	1009883a 	mov	r4,r2
  800cd0:	180b883a 	mov	r5,r3
  800cd4:	0804d3c0 	call	804d3c <__subdf3>
  800cd8:	80800215 	stw	r2,8(r16)
  800cdc:	80c00315 	stw	r3,12(r16)
  800ce0:	da400b17 	ldw	r9,44(sp)
  800ce4:	db000a17 	ldw	r12,40(sp)
  800ce8:	88009f16 	blt	r17,zero,800f68 <__ieee754_rem_pio2+0x6d8>
  800cec:	9005883a 	mov	r2,r18
  800cf0:	003f7706 	br	800ad0 <__alt_data_end+0xff800ad0>
  800cf4:	d9400817 	ldw	r5,32(sp)
  800cf8:	100d883a 	mov	r6,r2
  800cfc:	180f883a 	mov	r7,r3
  800d00:	e009883a 	mov	r4,fp
  800d04:	da800b15 	stw	r10,44(sp)
  800d08:	dac00a15 	stw	r11,40(sp)
  800d0c:	0804d3c0 	call	804d3c <__subdf3>
  800d10:	1019883a 	mov	r12,r2
  800d14:	1804d53a 	srli	r2,r3,20
  800d18:	b811d53a 	srai	r8,r23,20
  800d1c:	1813883a 	mov	r9,r3
  800d20:	1081ffcc 	andi	r2,r2,2047
  800d24:	80c00115 	stw	r3,4(r16)
  800d28:	83000015 	stw	r12,0(r16)
  800d2c:	4085c83a 	sub	r2,r8,r2
  800d30:	00c00404 	movi	r3,16
  800d34:	da800b17 	ldw	r10,44(sp)
  800d38:	dac00a17 	ldw	r11,40(sp)
  800d3c:	18bfda0e 	bge	r3,r2,800ca8 <__alt_data_end+0xff800ca8>
  800d40:	01cf7474 	movhi	r7,15825
  800d44:	39ed1844 	addi	r7,r7,-19359
  800d48:	01869834 	movhi	r6,6752
  800d4c:	a009883a 	mov	r4,r20
  800d50:	980b883a 	mov	r5,r19
  800d54:	da000a15 	stw	r8,40(sp)
  800d58:	08046240 	call	804624 <__muldf3>
  800d5c:	d9400817 	ldw	r5,32(sp)
  800d60:	100d883a 	mov	r6,r2
  800d64:	180f883a 	mov	r7,r3
  800d68:	e009883a 	mov	r4,fp
  800d6c:	102d883a 	mov	r22,r2
  800d70:	182b883a 	mov	r21,r3
  800d74:	0804d3c0 	call	804d3c <__subdf3>
  800d78:	d9400817 	ldw	r5,32(sp)
  800d7c:	100d883a 	mov	r6,r2
  800d80:	180f883a 	mov	r7,r3
  800d84:	e009883a 	mov	r4,fp
  800d88:	182f883a 	mov	r23,r3
  800d8c:	d8800915 	stw	r2,36(sp)
  800d90:	0804d3c0 	call	804d3c <__subdf3>
  800d94:	b00d883a 	mov	r6,r22
  800d98:	a80f883a 	mov	r7,r21
  800d9c:	1009883a 	mov	r4,r2
  800da0:	180b883a 	mov	r5,r3
  800da4:	0804d3c0 	call	804d3c <__subdf3>
  800da8:	018b80f4 	movhi	r6,11779
  800dac:	01cee8f4 	movhi	r7,15267
  800db0:	319c1cc4 	addi	r6,r6,28787
  800db4:	39c66284 	addi	r7,r7,6538
  800db8:	a009883a 	mov	r4,r20
  800dbc:	980b883a 	mov	r5,r19
  800dc0:	102d883a 	mov	r22,r2
  800dc4:	182b883a 	mov	r21,r3
  800dc8:	08046240 	call	804624 <__muldf3>
  800dcc:	b00d883a 	mov	r6,r22
  800dd0:	a80f883a 	mov	r7,r21
  800dd4:	1009883a 	mov	r4,r2
  800dd8:	180b883a 	mov	r5,r3
  800ddc:	0804d3c0 	call	804d3c <__subdf3>
  800de0:	d9000917 	ldw	r4,36(sp)
  800de4:	100d883a 	mov	r6,r2
  800de8:	180f883a 	mov	r7,r3
  800dec:	b80b883a 	mov	r5,r23
  800df0:	102d883a 	mov	r22,r2
  800df4:	182b883a 	mov	r21,r3
  800df8:	0804d3c0 	call	804d3c <__subdf3>
  800dfc:	1019883a 	mov	r12,r2
  800e00:	1804d53a 	srli	r2,r3,20
  800e04:	da000a17 	ldw	r8,40(sp)
  800e08:	83000015 	stw	r12,0(r16)
  800e0c:	1081ffcc 	andi	r2,r2,2047
  800e10:	4091c83a 	sub	r8,r8,r2
  800e14:	80c00115 	stw	r3,4(r16)
  800e18:	00800c44 	movi	r2,49
  800e1c:	1813883a 	mov	r9,r3
  800e20:	1200730e 	bge	r2,r8,800ff0 <__ieee754_rem_pio2+0x760>
  800e24:	01cee8f4 	movhi	r7,15267
  800e28:	39c66284 	addi	r7,r7,6538
  800e2c:	018b8034 	movhi	r6,11776
  800e30:	a009883a 	mov	r4,r20
  800e34:	980b883a 	mov	r5,r19
  800e38:	08046240 	call	804624 <__muldf3>
  800e3c:	d9000917 	ldw	r4,36(sp)
  800e40:	100d883a 	mov	r6,r2
  800e44:	180f883a 	mov	r7,r3
  800e48:	b80b883a 	mov	r5,r23
  800e4c:	102d883a 	mov	r22,r2
  800e50:	182b883a 	mov	r21,r3
  800e54:	0804d3c0 	call	804d3c <__subdf3>
  800e58:	d9000917 	ldw	r4,36(sp)
  800e5c:	100d883a 	mov	r6,r2
  800e60:	180f883a 	mov	r7,r3
  800e64:	b80b883a 	mov	r5,r23
  800e68:	d8c00b15 	stw	r3,44(sp)
  800e6c:	d8800a15 	stw	r2,40(sp)
  800e70:	0804d3c0 	call	804d3c <__subdf3>
  800e74:	b00d883a 	mov	r6,r22
  800e78:	a80f883a 	mov	r7,r21
  800e7c:	1009883a 	mov	r4,r2
  800e80:	180b883a 	mov	r5,r3
  800e84:	0804d3c0 	call	804d3c <__subdf3>
  800e88:	01894834 	movhi	r6,9504
  800e8c:	01ce5f34 	movhi	r7,14716
  800e90:	31927044 	addi	r6,r6,18881
  800e94:	39e0e684 	addi	r7,r7,-31846
  800e98:	a009883a 	mov	r4,r20
  800e9c:	980b883a 	mov	r5,r19
  800ea0:	102d883a 	mov	r22,r2
  800ea4:	182b883a 	mov	r21,r3
  800ea8:	08046240 	call	804624 <__muldf3>
  800eac:	b00d883a 	mov	r6,r22
  800eb0:	a80f883a 	mov	r7,r21
  800eb4:	1009883a 	mov	r4,r2
  800eb8:	180b883a 	mov	r5,r3
  800ebc:	0804d3c0 	call	804d3c <__subdf3>
  800ec0:	dac00a17 	ldw	r11,40(sp)
  800ec4:	da800b17 	ldw	r10,44(sp)
  800ec8:	102d883a 	mov	r22,r2
  800ecc:	182b883a 	mov	r21,r3
  800ed0:	100d883a 	mov	r6,r2
  800ed4:	180f883a 	mov	r7,r3
  800ed8:	5809883a 	mov	r4,r11
  800edc:	500b883a 	mov	r5,r10
  800ee0:	003f6a06 	br	800c8c <__alt_data_end+0xff800c8c>
  800ee4:	080332c0 	call	80332c <__adddf3>
  800ee8:	1025883a 	mov	r18,r2
  800eec:	008ffe74 	movhi	r2,16377
  800ef0:	10887ec4 	addi	r2,r2,8699
  800ef4:	1823883a 	mov	r17,r3
  800ef8:	b8802226 	beq	r23,r2,800f84 <__ieee754_rem_pio2+0x6f4>
  800efc:	018698b4 	movhi	r6,6754
  800f00:	01cf7474 	movhi	r7,15825
  800f04:	3198cc44 	addi	r6,r6,25393
  800f08:	39ed1844 	addi	r7,r7,-19359
  800f0c:	9009883a 	mov	r4,r18
  800f10:	180b883a 	mov	r5,r3
  800f14:	080332c0 	call	80332c <__adddf3>
  800f18:	100d883a 	mov	r6,r2
  800f1c:	180f883a 	mov	r7,r3
  800f20:	9009883a 	mov	r4,r18
  800f24:	880b883a 	mov	r5,r17
  800f28:	80800015 	stw	r2,0(r16)
  800f2c:	80c00115 	stw	r3,4(r16)
  800f30:	0804d3c0 	call	804d3c <__subdf3>
  800f34:	018698b4 	movhi	r6,6754
  800f38:	01cf7474 	movhi	r7,15825
  800f3c:	3198cc44 	addi	r6,r6,25393
  800f40:	39ed1844 	addi	r7,r7,-19359
  800f44:	1009883a 	mov	r4,r2
  800f48:	180b883a 	mov	r5,r3
  800f4c:	080332c0 	call	80332c <__adddf3>
  800f50:	80800215 	stw	r2,8(r16)
  800f54:	80c00315 	stw	r3,12(r16)
  800f58:	00bfffc4 	movi	r2,-1
  800f5c:	003edc06 	br	800ad0 <__alt_data_end+0xff800ad0>
  800f60:	01c000c4 	movi	r7,3
  800f64:	003ec306 	br	800a74 <__alt_data_end+0xff800a74>
  800f68:	4a60003c 	xorhi	r9,r9,32768
  800f6c:	18e0003c 	xorhi	r3,r3,32768
  800f70:	83000015 	stw	r12,0(r16)
  800f74:	82400115 	stw	r9,4(r16)
  800f78:	80c00315 	stw	r3,12(r16)
  800f7c:	0485c83a 	sub	r2,zero,r18
  800f80:	003ed306 	br	800ad0 <__alt_data_end+0xff800ad0>
  800f84:	01cf7474 	movhi	r7,15825
  800f88:	9009883a 	mov	r4,r18
  800f8c:	39ed1844 	addi	r7,r7,-19359
  800f90:	01869834 	movhi	r6,6752
  800f94:	180b883a 	mov	r5,r3
  800f98:	080332c0 	call	80332c <__adddf3>
  800f9c:	018b80f4 	movhi	r6,11779
  800fa0:	01cee8f4 	movhi	r7,15267
  800fa4:	319c1cc4 	addi	r6,r6,28787
  800fa8:	39c66284 	addi	r7,r7,6538
  800fac:	1009883a 	mov	r4,r2
  800fb0:	180b883a 	mov	r5,r3
  800fb4:	1025883a 	mov	r18,r2
  800fb8:	1823883a 	mov	r17,r3
  800fbc:	080332c0 	call	80332c <__adddf3>
  800fc0:	100d883a 	mov	r6,r2
  800fc4:	180f883a 	mov	r7,r3
  800fc8:	9009883a 	mov	r4,r18
  800fcc:	880b883a 	mov	r5,r17
  800fd0:	80800015 	stw	r2,0(r16)
  800fd4:	80c00115 	stw	r3,4(r16)
  800fd8:	0804d3c0 	call	804d3c <__subdf3>
  800fdc:	018b80f4 	movhi	r6,11779
  800fe0:	01cee8f4 	movhi	r7,15267
  800fe4:	319c1cc4 	addi	r6,r6,28787
  800fe8:	39c66284 	addi	r7,r7,6538
  800fec:	003fd506 	br	800f44 <__alt_data_end+0xff800f44>
  800ff0:	dac00917 	ldw	r11,36(sp)
  800ff4:	b815883a 	mov	r10,r23
  800ff8:	003f2b06 	br	800ca8 <__alt_data_end+0xff800ca8>

00800ffc <__kernel_cos>:
  800ffc:	defff304 	addi	sp,sp,-52
  801000:	dc000315 	stw	r16,12(sp)
  801004:	04200034 	movhi	r16,32768
  801008:	843fffc4 	addi	r16,r16,-1
  80100c:	008f9034 	movhi	r2,15936
  801010:	df000b15 	stw	fp,44(sp)
  801014:	ddc00a15 	stw	r23,40(sp)
  801018:	dd800915 	stw	r22,36(sp)
  80101c:	dcc00615 	stw	r19,24(sp)
  801020:	dfc00c15 	stw	ra,48(sp)
  801024:	dd400815 	stw	r21,32(sp)
  801028:	dd000715 	stw	r20,28(sp)
  80102c:	dc800515 	stw	r18,20(sp)
  801030:	dc400415 	stw	r17,16(sp)
  801034:	2c20703a 	and	r16,r5,r16
  801038:	10bfffc4 	addi	r2,r2,-1
  80103c:	2827883a 	mov	r19,r5
  801040:	202d883a 	mov	r22,r4
  801044:	302f883a 	mov	r23,r6
  801048:	3839883a 	mov	fp,r7
  80104c:	14007516 	blt	r2,r16,801224 <__kernel_cos+0x228>
  801050:	08056380 	call	805638 <__fixdfsi>
  801054:	10010f26 	beq	r2,zero,801494 <__kernel_cos+0x498>
  801058:	b00d883a 	mov	r6,r22
  80105c:	980f883a 	mov	r7,r19
  801060:	b009883a 	mov	r4,r22
  801064:	980b883a 	mov	r5,r19
  801068:	08046240 	call	804624 <__muldf3>
  80106c:	01afa234 	movhi	r6,48776
  801070:	01ef6a74 	movhi	r7,48553
  801074:	318e3504 	addi	r6,r6,14548
  801078:	39feba44 	addi	r7,r7,-1303
  80107c:	1009883a 	mov	r4,r2
  801080:	180b883a 	mov	r5,r3
  801084:	102b883a 	mov	r21,r2
  801088:	1829883a 	mov	r20,r3
  80108c:	08046240 	call	804624 <__muldf3>
  801090:	01af6d74 	movhi	r6,48565
  801094:	01cf88b4 	movhi	r7,15906
  801098:	31ac7104 	addi	r6,r6,-20028
  80109c:	39fba784 	addi	r7,r7,-4450
  8010a0:	1009883a 	mov	r4,r2
  8010a4:	180b883a 	mov	r5,r3
  8010a8:	080332c0 	call	80332c <__adddf3>
  8010ac:	a80d883a 	mov	r6,r21
  8010b0:	a00f883a 	mov	r7,r20
  8010b4:	1009883a 	mov	r4,r2
  8010b8:	180b883a 	mov	r5,r3
  8010bc:	08046240 	call	804624 <__muldf3>
  8010c0:	01a02734 	movhi	r6,32924
  8010c4:	01cfa4b4 	movhi	r7,16018
  8010c8:	3194ab44 	addi	r6,r6,21165
  8010cc:	39df93c4 	addi	r7,r7,32335
  8010d0:	1009883a 	mov	r4,r2
  8010d4:	180b883a 	mov	r5,r3
  8010d8:	0804d3c0 	call	804d3c <__subdf3>
  8010dc:	a80d883a 	mov	r6,r21
  8010e0:	a00f883a 	mov	r7,r20
  8010e4:	1009883a 	mov	r4,r2
  8010e8:	180b883a 	mov	r5,r3
  8010ec:	08046240 	call	804624 <__muldf3>
  8010f0:	018672f4 	movhi	r6,6603
  8010f4:	01cfbeb4 	movhi	r7,16122
  8010f8:	31856404 	addi	r6,r6,5520
  8010fc:	39c06804 	addi	r7,r7,416
  801100:	1009883a 	mov	r4,r2
  801104:	180b883a 	mov	r5,r3
  801108:	080332c0 	call	80332c <__adddf3>
  80110c:	a80d883a 	mov	r6,r21
  801110:	a00f883a 	mov	r7,r20
  801114:	1009883a 	mov	r4,r2
  801118:	180b883a 	mov	r5,r3
  80111c:	08046240 	call	804624 <__muldf3>
  801120:	0185b074 	movhi	r6,5825
  801124:	01cfd5f4 	movhi	r7,16215
  801128:	31945dc4 	addi	r6,r6,20855
  80112c:	39f05b04 	addi	r7,r7,-16020
  801130:	1009883a 	mov	r4,r2
  801134:	180b883a 	mov	r5,r3
  801138:	0804d3c0 	call	804d3c <__subdf3>
  80113c:	a80d883a 	mov	r6,r21
  801140:	a00f883a 	mov	r7,r20
  801144:	1009883a 	mov	r4,r2
  801148:	180b883a 	mov	r5,r3
  80114c:	08046240 	call	804624 <__muldf3>
  801150:	01955574 	movhi	r6,21845
  801154:	01cfe974 	movhi	r7,16293
  801158:	31955304 	addi	r6,r6,21836
  80115c:	39d55544 	addi	r7,r7,21845
  801160:	1009883a 	mov	r4,r2
  801164:	180b883a 	mov	r5,r3
  801168:	080332c0 	call	80332c <__adddf3>
  80116c:	a80d883a 	mov	r6,r21
  801170:	a00f883a 	mov	r7,r20
  801174:	1009883a 	mov	r4,r2
  801178:	180b883a 	mov	r5,r3
  80117c:	08046240 	call	804624 <__muldf3>
  801180:	1017883a 	mov	r11,r2
  801184:	1815883a 	mov	r10,r3
  801188:	a809883a 	mov	r4,r21
  80118c:	a00b883a 	mov	r5,r20
  801190:	000d883a 	mov	r6,zero
  801194:	01cff834 	movhi	r7,16352
  801198:	da800215 	stw	r10,8(sp)
  80119c:	dac00115 	stw	r11,4(sp)
  8011a0:	08046240 	call	804624 <__muldf3>
  8011a4:	dac00117 	ldw	r11,4(sp)
  8011a8:	da800217 	ldw	r10,8(sp)
  8011ac:	a809883a 	mov	r4,r21
  8011b0:	580d883a 	mov	r6,r11
  8011b4:	500f883a 	mov	r7,r10
  8011b8:	a00b883a 	mov	r5,r20
  8011bc:	1023883a 	mov	r17,r2
  8011c0:	1821883a 	mov	r16,r3
  8011c4:	08046240 	call	804624 <__muldf3>
  8011c8:	b80d883a 	mov	r6,r23
  8011cc:	e00f883a 	mov	r7,fp
  8011d0:	b009883a 	mov	r4,r22
  8011d4:	980b883a 	mov	r5,r19
  8011d8:	1029883a 	mov	r20,r2
  8011dc:	1825883a 	mov	r18,r3
  8011e0:	08046240 	call	804624 <__muldf3>
  8011e4:	a009883a 	mov	r4,r20
  8011e8:	900b883a 	mov	r5,r18
  8011ec:	100d883a 	mov	r6,r2
  8011f0:	180f883a 	mov	r7,r3
  8011f4:	0804d3c0 	call	804d3c <__subdf3>
  8011f8:	8809883a 	mov	r4,r17
  8011fc:	800b883a 	mov	r5,r16
  801200:	100d883a 	mov	r6,r2
  801204:	180f883a 	mov	r7,r3
  801208:	0804d3c0 	call	804d3c <__subdf3>
  80120c:	100d883a 	mov	r6,r2
  801210:	180f883a 	mov	r7,r3
  801214:	0009883a 	mov	r4,zero
  801218:	014ffc34 	movhi	r5,16368
  80121c:	0804d3c0 	call	804d3c <__subdf3>
  801220:	00008b06 	br	801450 <__kernel_cos+0x454>
  801224:	200d883a 	mov	r6,r4
  801228:	280f883a 	mov	r7,r5
  80122c:	08046240 	call	804624 <__muldf3>
  801230:	01afa234 	movhi	r6,48776
  801234:	01ef6a74 	movhi	r7,48553
  801238:	318e3504 	addi	r6,r6,14548
  80123c:	39feba44 	addi	r7,r7,-1303
  801240:	1009883a 	mov	r4,r2
  801244:	180b883a 	mov	r5,r3
  801248:	1025883a 	mov	r18,r2
  80124c:	1823883a 	mov	r17,r3
  801250:	08046240 	call	804624 <__muldf3>
  801254:	01af6d74 	movhi	r6,48565
  801258:	01cf88b4 	movhi	r7,15906
  80125c:	31ac7104 	addi	r6,r6,-20028
  801260:	39fba784 	addi	r7,r7,-4450
  801264:	1009883a 	mov	r4,r2
  801268:	180b883a 	mov	r5,r3
  80126c:	080332c0 	call	80332c <__adddf3>
  801270:	900d883a 	mov	r6,r18
  801274:	880f883a 	mov	r7,r17
  801278:	1009883a 	mov	r4,r2
  80127c:	180b883a 	mov	r5,r3
  801280:	08046240 	call	804624 <__muldf3>
  801284:	01a02734 	movhi	r6,32924
  801288:	01cfa4b4 	movhi	r7,16018
  80128c:	3194ab44 	addi	r6,r6,21165
  801290:	39df93c4 	addi	r7,r7,32335
  801294:	1009883a 	mov	r4,r2
  801298:	180b883a 	mov	r5,r3
  80129c:	0804d3c0 	call	804d3c <__subdf3>
  8012a0:	900d883a 	mov	r6,r18
  8012a4:	880f883a 	mov	r7,r17
  8012a8:	1009883a 	mov	r4,r2
  8012ac:	180b883a 	mov	r5,r3
  8012b0:	08046240 	call	804624 <__muldf3>
  8012b4:	018672f4 	movhi	r6,6603
  8012b8:	01cfbeb4 	movhi	r7,16122
  8012bc:	31856404 	addi	r6,r6,5520
  8012c0:	39c06804 	addi	r7,r7,416
  8012c4:	1009883a 	mov	r4,r2
  8012c8:	180b883a 	mov	r5,r3
  8012cc:	080332c0 	call	80332c <__adddf3>
  8012d0:	900d883a 	mov	r6,r18
  8012d4:	880f883a 	mov	r7,r17
  8012d8:	1009883a 	mov	r4,r2
  8012dc:	180b883a 	mov	r5,r3
  8012e0:	08046240 	call	804624 <__muldf3>
  8012e4:	0185b074 	movhi	r6,5825
  8012e8:	01cfd5f4 	movhi	r7,16215
  8012ec:	31945dc4 	addi	r6,r6,20855
  8012f0:	39f05b04 	addi	r7,r7,-16020
  8012f4:	1009883a 	mov	r4,r2
  8012f8:	180b883a 	mov	r5,r3
  8012fc:	0804d3c0 	call	804d3c <__subdf3>
  801300:	900d883a 	mov	r6,r18
  801304:	880f883a 	mov	r7,r17
  801308:	1009883a 	mov	r4,r2
  80130c:	180b883a 	mov	r5,r3
  801310:	08046240 	call	804624 <__muldf3>
  801314:	01955574 	movhi	r6,21845
  801318:	01cfe974 	movhi	r7,16293
  80131c:	31955304 	addi	r6,r6,21836
  801320:	39d55544 	addi	r7,r7,21845
  801324:	1009883a 	mov	r4,r2
  801328:	180b883a 	mov	r5,r3
  80132c:	080332c0 	call	80332c <__adddf3>
  801330:	900d883a 	mov	r6,r18
  801334:	880f883a 	mov	r7,r17
  801338:	1009883a 	mov	r4,r2
  80133c:	180b883a 	mov	r5,r3
  801340:	08046240 	call	804624 <__muldf3>
  801344:	1013883a 	mov	r9,r2
  801348:	1017883a 	mov	r11,r2
  80134c:	008ff4f4 	movhi	r2,16339
  801350:	108ccc84 	addi	r2,r2,13106
  801354:	1811883a 	mov	r8,r3
  801358:	902b883a 	mov	r21,r18
  80135c:	8829883a 	mov	r20,r17
  801360:	1815883a 	mov	r10,r3
  801364:	143f880e 	bge	r2,r16,801188 <__alt_data_end+0xff801188>
  801368:	008ffa74 	movhi	r2,16361
  80136c:	14004416 	blt	r2,r16,801480 <__kernel_cos+0x484>
  801370:	00bff834 	movhi	r2,65504
  801374:	80a1883a 	add	r16,r16,r2
  801378:	000d883a 	mov	r6,zero
  80137c:	800f883a 	mov	r7,r16
  801380:	0009883a 	mov	r4,zero
  801384:	014ffc34 	movhi	r5,16368
  801388:	da400115 	stw	r9,4(sp)
  80138c:	d8c00215 	stw	r3,8(sp)
  801390:	0804d3c0 	call	804d3c <__subdf3>
  801394:	da000217 	ldw	r8,8(sp)
  801398:	da400117 	ldw	r9,4(sp)
  80139c:	102b883a 	mov	r21,r2
  8013a0:	d8c00015 	stw	r3,0(sp)
  8013a4:	9009883a 	mov	r4,r18
  8013a8:	880b883a 	mov	r5,r17
  8013ac:	000d883a 	mov	r6,zero
  8013b0:	01cff834 	movhi	r7,16352
  8013b4:	da000215 	stw	r8,8(sp)
  8013b8:	da400115 	stw	r9,4(sp)
  8013bc:	08046240 	call	804624 <__muldf3>
  8013c0:	800f883a 	mov	r7,r16
  8013c4:	000d883a 	mov	r6,zero
  8013c8:	1009883a 	mov	r4,r2
  8013cc:	180b883a 	mov	r5,r3
  8013d0:	0804d3c0 	call	804d3c <__subdf3>
  8013d4:	da400117 	ldw	r9,4(sp)
  8013d8:	da000217 	ldw	r8,8(sp)
  8013dc:	9009883a 	mov	r4,r18
  8013e0:	480d883a 	mov	r6,r9
  8013e4:	400f883a 	mov	r7,r8
  8013e8:	880b883a 	mov	r5,r17
  8013ec:	1029883a 	mov	r20,r2
  8013f0:	1821883a 	mov	r16,r3
  8013f4:	08046240 	call	804624 <__muldf3>
  8013f8:	b80d883a 	mov	r6,r23
  8013fc:	e00f883a 	mov	r7,fp
  801400:	b009883a 	mov	r4,r22
  801404:	980b883a 	mov	r5,r19
  801408:	1025883a 	mov	r18,r2
  80140c:	1823883a 	mov	r17,r3
  801410:	08046240 	call	804624 <__muldf3>
  801414:	100d883a 	mov	r6,r2
  801418:	180f883a 	mov	r7,r3
  80141c:	9009883a 	mov	r4,r18
  801420:	880b883a 	mov	r5,r17
  801424:	0804d3c0 	call	804d3c <__subdf3>
  801428:	100d883a 	mov	r6,r2
  80142c:	180f883a 	mov	r7,r3
  801430:	a009883a 	mov	r4,r20
  801434:	800b883a 	mov	r5,r16
  801438:	0804d3c0 	call	804d3c <__subdf3>
  80143c:	d9400017 	ldw	r5,0(sp)
  801440:	100d883a 	mov	r6,r2
  801444:	180f883a 	mov	r7,r3
  801448:	a809883a 	mov	r4,r21
  80144c:	0804d3c0 	call	804d3c <__subdf3>
  801450:	dfc00c17 	ldw	ra,48(sp)
  801454:	df000b17 	ldw	fp,44(sp)
  801458:	ddc00a17 	ldw	r23,40(sp)
  80145c:	dd800917 	ldw	r22,36(sp)
  801460:	dd400817 	ldw	r21,32(sp)
  801464:	dd000717 	ldw	r20,28(sp)
  801468:	dcc00617 	ldw	r19,24(sp)
  80146c:	dc800517 	ldw	r18,20(sp)
  801470:	dc400417 	ldw	r17,16(sp)
  801474:	dc000317 	ldw	r16,12(sp)
  801478:	dec00d04 	addi	sp,sp,52
  80147c:	f800283a 	ret
  801480:	008ff9f4 	movhi	r2,16359
  801484:	002b883a 	mov	r21,zero
  801488:	d8800015 	stw	r2,0(sp)
  80148c:	040ff4b4 	movhi	r16,16338
  801490:	003fc406 	br	8013a4 <__alt_data_end+0xff8013a4>
  801494:	0005883a 	mov	r2,zero
  801498:	00cffc34 	movhi	r3,16368
  80149c:	003fec06 	br	801450 <__alt_data_end+0xff801450>

008014a0 <__kernel_rem_pio2>:
  8014a0:	deff5a04 	addi	sp,sp,-664
  8014a4:	da00a617 	ldw	r8,664(sp)
  8014a8:	00c02074 	movhi	r3,129
  8014ac:	18c9eb04 	addi	r3,r3,10156
  8014b0:	4205883a 	add	r2,r8,r8
  8014b4:	1085883a 	add	r2,r2,r2
  8014b8:	1885883a 	add	r2,r3,r2
  8014bc:	d9008e15 	stw	r4,568(sp)
  8014c0:	d9408f15 	stw	r5,572(sp)
  8014c4:	313fff44 	addi	r4,r6,-3
  8014c8:	01400604 	movi	r5,24
  8014cc:	dd80a215 	stw	r22,648(sp)
  8014d0:	dc009c15 	stw	r16,624(sp)
  8014d4:	dfc0a515 	stw	ra,660(sp)
  8014d8:	df00a415 	stw	fp,656(sp)
  8014dc:	ddc0a315 	stw	r23,652(sp)
  8014e0:	dd40a115 	stw	r21,644(sp)
  8014e4:	dd00a015 	stw	r20,640(sp)
  8014e8:	dcc09f15 	stw	r19,636(sp)
  8014ec:	dc809e15 	stw	r18,632(sp)
  8014f0:	dc409d15 	stw	r17,628(sp)
  8014f4:	3021883a 	mov	r16,r6
  8014f8:	d9c09315 	stw	r7,588(sp)
  8014fc:	15800017 	ldw	r22,0(r2)
  801500:	08028b40 	call	8028b4 <__divsi3>
  801504:	da009317 	ldw	r8,588(sp)
  801508:	d8809215 	stw	r2,584(sp)
  80150c:	423fffc4 	addi	r8,r8,-1
  801510:	da008d15 	stw	r8,564(sp)
  801514:	10033b16 	blt	r2,zero,802204 <__kernel_rem_pio2+0xd64>
  801518:	da009217 	ldw	r8,584(sp)
  80151c:	d9009217 	ldw	r4,584(sp)
  801520:	42000044 	addi	r8,r8,1
  801524:	40fffa24 	muli	r3,r8,-24
  801528:	da009515 	stw	r8,596(sp)
  80152c:	da008d17 	ldw	r8,564(sp)
  801530:	1c07883a 	add	r3,r3,r16
  801534:	d8c09015 	stw	r3,576(sp)
  801538:	b205883a 	add	r2,r22,r8
  80153c:	2223c83a 	sub	r17,r4,r8
  801540:	10001016 	blt	r2,zero,801584 <__kernel_rem_pio2+0xe4>
  801544:	da00a717 	ldw	r8,668(sp)
  801548:	8c65883a 	add	r18,r17,r17
  80154c:	94a5883a 	add	r18,r18,r18
  801550:	1445883a 	add	r2,r2,r17
  801554:	dcc05004 	addi	r19,sp,320
  801558:	44a5883a 	add	r18,r8,r18
  80155c:	14000044 	addi	r16,r2,1
  801560:	88015316 	blt	r17,zero,801ab0 <__kernel_rem_pio2+0x610>
  801564:	91000017 	ldw	r4,0(r18)
  801568:	08056b80 	call	8056b8 <__floatsidf>
  80156c:	98800015 	stw	r2,0(r19)
  801570:	98c00115 	stw	r3,4(r19)
  801574:	8c400044 	addi	r17,r17,1
  801578:	9cc00204 	addi	r19,r19,8
  80157c:	94800104 	addi	r18,r18,4
  801580:	8c3ff71e 	bne	r17,r16,801560 <__alt_data_end+0xff801560>
  801584:	b0002816 	blt	r22,zero,801628 <__kernel_rem_pio2+0x188>
  801588:	da008d17 	ldw	r8,564(sp)
  80158c:	b4c00044 	addi	r19,r22,1
  801590:	982690fa 	slli	r19,r19,3
  801594:	402490fa 	slli	r18,r8,3
  801598:	da008e17 	ldw	r8,568(sp)
  80159c:	d8805004 	addi	r2,sp,320
  8015a0:	94000204 	addi	r16,r18,8
  8015a4:	d823883a 	mov	r17,sp
  8015a8:	14a5883a 	add	r18,r2,r18
  8015ac:	dcef883a 	add	r23,sp,r19
  8015b0:	4421883a 	add	r16,r8,r16
  8015b4:	dd809115 	stw	r22,580(sp)
  8015b8:	4039883a 	mov	fp,r8
  8015bc:	da008d17 	ldw	r8,564(sp)
  8015c0:	40016016 	blt	r8,zero,801b44 <__kernel_rem_pio2+0x6a4>
  8015c4:	e027883a 	mov	r19,fp
  8015c8:	9029883a 	mov	r20,r18
  8015cc:	002d883a 	mov	r22,zero
  8015d0:	002b883a 	mov	r21,zero
  8015d4:	a1800017 	ldw	r6,0(r20)
  8015d8:	a1c00117 	ldw	r7,4(r20)
  8015dc:	99000017 	ldw	r4,0(r19)
  8015e0:	99400117 	ldw	r5,4(r19)
  8015e4:	9cc00204 	addi	r19,r19,8
  8015e8:	a53ffe04 	addi	r20,r20,-8
  8015ec:	08046240 	call	804624 <__muldf3>
  8015f0:	b009883a 	mov	r4,r22
  8015f4:	a80b883a 	mov	r5,r21
  8015f8:	100d883a 	mov	r6,r2
  8015fc:	180f883a 	mov	r7,r3
  801600:	080332c0 	call	80332c <__adddf3>
  801604:	102d883a 	mov	r22,r2
  801608:	182b883a 	mov	r21,r3
  80160c:	9c3ff11e 	bne	r19,r16,8015d4 <__alt_data_end+0xff8015d4>
  801610:	8d800015 	stw	r22,0(r17)
  801614:	8d400115 	stw	r21,4(r17)
  801618:	8c400204 	addi	r17,r17,8
  80161c:	94800204 	addi	r18,r18,8
  801620:	8dffe61e 	bne	r17,r23,8015bc <__alt_data_end+0xff8015bc>
  801624:	dd809117 	ldw	r22,580(sp)
  801628:	00d00034 	movhi	r3,16384
  80162c:	da009317 	ldw	r8,588(sp)
  801630:	18ffff84 	addi	r3,r3,-2
  801634:	b0c7883a 	add	r3,r22,r3
  801638:	18c7883a 	add	r3,r3,r3
  80163c:	402090fa 	slli	r16,r8,3
  801640:	18c7883a 	add	r3,r3,r3
  801644:	da007804 	addi	r8,sp,480
  801648:	40d1883a 	add	r8,r8,r3
  80164c:	b0bfffc4 	addi	r2,r22,-1
  801650:	da009615 	stw	r8,600(sp)
  801654:	da008e17 	ldw	r8,568(sp)
  801658:	1085883a 	add	r2,r2,r2
  80165c:	1085883a 	add	r2,r2,r2
  801660:	19000104 	addi	r4,r3,4
  801664:	d885883a 	add	r2,sp,r2
  801668:	4421883a 	add	r16,r8,r16
  80166c:	da007804 	addi	r8,sp,480
  801670:	4111883a 	add	r8,r8,r4
  801674:	10807804 	addi	r2,r2,480
  801678:	da009715 	stw	r8,604(sp)
  80167c:	b025883a 	mov	r18,r22
  801680:	d8809815 	stw	r2,608(sp)
  801684:	dd809415 	stw	r22,592(sp)
  801688:	900490fa 	slli	r2,r18,3
  80168c:	d885883a 	add	r2,sp,r2
  801690:	17000017 	ldw	fp,0(r2)
  801694:	15400117 	ldw	r21,4(r2)
  801698:	04802b0e 	bge	zero,r18,801748 <__kernel_rem_pio2+0x2a8>
  80169c:	00880034 	movhi	r2,8192
  8016a0:	10bfffc4 	addi	r2,r2,-1
  8016a4:	90a9883a 	add	r20,r18,r2
  8016a8:	a02890fa 	slli	r20,r20,3
  8016ac:	dc407804 	addi	r17,sp,480
  8016b0:	dcfffe04 	addi	r19,sp,-8
  8016b4:	dd29883a 	add	r20,sp,r20
  8016b8:	000d883a 	mov	r6,zero
  8016bc:	01cf9c34 	movhi	r7,15984
  8016c0:	e009883a 	mov	r4,fp
  8016c4:	a80b883a 	mov	r5,r21
  8016c8:	08046240 	call	804624 <__muldf3>
  8016cc:	180b883a 	mov	r5,r3
  8016d0:	1009883a 	mov	r4,r2
  8016d4:	08056380 	call	805638 <__fixdfsi>
  8016d8:	1009883a 	mov	r4,r2
  8016dc:	08056b80 	call	8056b8 <__floatsidf>
  8016e0:	000d883a 	mov	r6,zero
  8016e4:	01d05c34 	movhi	r7,16752
  8016e8:	1009883a 	mov	r4,r2
  8016ec:	180b883a 	mov	r5,r3
  8016f0:	102f883a 	mov	r23,r2
  8016f4:	182d883a 	mov	r22,r3
  8016f8:	08046240 	call	804624 <__muldf3>
  8016fc:	100d883a 	mov	r6,r2
  801700:	180f883a 	mov	r7,r3
  801704:	e009883a 	mov	r4,fp
  801708:	a80b883a 	mov	r5,r21
  80170c:	0804d3c0 	call	804d3c <__subdf3>
  801710:	180b883a 	mov	r5,r3
  801714:	1009883a 	mov	r4,r2
  801718:	08056380 	call	805638 <__fixdfsi>
  80171c:	a1800017 	ldw	r6,0(r20)
  801720:	a1c00117 	ldw	r7,4(r20)
  801724:	88800015 	stw	r2,0(r17)
  801728:	b809883a 	mov	r4,r23
  80172c:	b00b883a 	mov	r5,r22
  801730:	080332c0 	call	80332c <__adddf3>
  801734:	a53ffe04 	addi	r20,r20,-8
  801738:	1039883a 	mov	fp,r2
  80173c:	182b883a 	mov	r21,r3
  801740:	8c400104 	addi	r17,r17,4
  801744:	a4ffdc1e 	bne	r20,r19,8016b8 <__alt_data_end+0xff8016b8>
  801748:	d9809017 	ldw	r6,576(sp)
  80174c:	a80b883a 	mov	r5,r21
  801750:	e009883a 	mov	r4,fp
  801754:	08026fc0 	call	8026fc <scalbn>
  801758:	000d883a 	mov	r6,zero
  80175c:	01cff034 	movhi	r7,16320
  801760:	1009883a 	mov	r4,r2
  801764:	180b883a 	mov	r5,r3
  801768:	1027883a 	mov	r19,r2
  80176c:	1823883a 	mov	r17,r3
  801770:	08046240 	call	804624 <__muldf3>
  801774:	1009883a 	mov	r4,r2
  801778:	180b883a 	mov	r5,r3
  80177c:	08025100 	call	802510 <floor>
  801780:	000d883a 	mov	r6,zero
  801784:	01d00834 	movhi	r7,16416
  801788:	1009883a 	mov	r4,r2
  80178c:	180b883a 	mov	r5,r3
  801790:	08046240 	call	804624 <__muldf3>
  801794:	100d883a 	mov	r6,r2
  801798:	180f883a 	mov	r7,r3
  80179c:	9809883a 	mov	r4,r19
  8017a0:	880b883a 	mov	r5,r17
  8017a4:	0804d3c0 	call	804d3c <__subdf3>
  8017a8:	180b883a 	mov	r5,r3
  8017ac:	1009883a 	mov	r4,r2
  8017b0:	1827883a 	mov	r19,r3
  8017b4:	1029883a 	mov	r20,r2
  8017b8:	08056380 	call	805638 <__fixdfsi>
  8017bc:	1009883a 	mov	r4,r2
  8017c0:	1023883a 	mov	r17,r2
  8017c4:	08056b80 	call	8056b8 <__floatsidf>
  8017c8:	a009883a 	mov	r4,r20
  8017cc:	100d883a 	mov	r6,r2
  8017d0:	180f883a 	mov	r7,r3
  8017d4:	980b883a 	mov	r5,r19
  8017d8:	0804d3c0 	call	804d3c <__subdf3>
  8017dc:	d9009017 	ldw	r4,576(sp)
  8017e0:	1013883a 	mov	r9,r2
  8017e4:	102b883a 	mov	r21,r2
  8017e8:	1811883a 	mov	r8,r3
  8017ec:	0100b30e 	bge	zero,r4,801abc <__kernel_rem_pio2+0x61c>
  8017f0:	90bfffc4 	addi	r2,r18,-1
  8017f4:	1085883a 	add	r2,r2,r2
  8017f8:	1085883a 	add	r2,r2,r2
  8017fc:	d885883a 	add	r2,sp,r2
  801800:	10807804 	addi	r2,r2,480
  801804:	d9809017 	ldw	r6,576(sp)
  801808:	11400017 	ldw	r5,0(r2)
  80180c:	01000604 	movi	r4,24
  801810:	2189c83a 	sub	r4,r4,r6
  801814:	290dd83a 	sra	r6,r5,r4
  801818:	d9c09017 	ldw	r7,576(sp)
  80181c:	04c005c4 	movi	r19,23
  801820:	3108983a 	sll	r4,r6,r4
  801824:	99e7c83a 	sub	r19,r19,r7
  801828:	89a3883a 	add	r17,r17,r6
  80182c:	2909c83a 	sub	r4,r5,r4
  801830:	24e7d83a 	sra	r19,r4,r19
  801834:	11000015 	stw	r4,0(r2)
  801838:	04c02a0e 	bge	zero,r19,8018e4 <__kernel_rem_pio2+0x444>
  80183c:	8c400044 	addi	r17,r17,1
  801840:	0481570e 	bge	zero,r18,801da0 <__kernel_rem_pio2+0x900>
  801844:	02804034 	movhi	r10,256
  801848:	52bfffc4 	addi	r10,r10,-1
  80184c:	d8807804 	addi	r2,sp,480
  801850:	000b883a 	mov	r5,zero
  801854:	0029883a 	mov	r20,zero
  801858:	01c04034 	movhi	r7,256
  80185c:	00000706 	br	80187c <__kernel_rem_pio2+0x3dc>
  801860:	390dc83a 	sub	r6,r7,r4
  801864:	20000226 	beq	r4,zero,801870 <__kernel_rem_pio2+0x3d0>
  801868:	11800015 	stw	r6,0(r2)
  80186c:	05000044 	movi	r20,1
  801870:	29400044 	addi	r5,r5,1
  801874:	10800104 	addi	r2,r2,4
  801878:	2c80080e 	bge	r5,r18,80189c <__kernel_rem_pio2+0x3fc>
  80187c:	11000017 	ldw	r4,0(r2)
  801880:	a03ff726 	beq	r20,zero,801860 <__alt_data_end+0xff801860>
  801884:	5109c83a 	sub	r4,r10,r4
  801888:	11000015 	stw	r4,0(r2)
  80188c:	29400044 	addi	r5,r5,1
  801890:	05000044 	movi	r20,1
  801894:	10800104 	addi	r2,r2,4
  801898:	2cbff816 	blt	r5,r18,80187c <__alt_data_end+0xff80187c>
  80189c:	d9009017 	ldw	r4,576(sp)
  8018a0:	01000e0e 	bge	zero,r4,8018dc <__kernel_rem_pio2+0x43c>
  8018a4:	00800044 	movi	r2,1
  8018a8:	20808d26 	beq	r4,r2,801ae0 <__kernel_rem_pio2+0x640>
  8018ac:	00800084 	movi	r2,2
  8018b0:	20800a1e 	bne	r4,r2,8018dc <__kernel_rem_pio2+0x43c>
  8018b4:	90bfffc4 	addi	r2,r18,-1
  8018b8:	1085883a 	add	r2,r2,r2
  8018bc:	1085883a 	add	r2,r2,r2
  8018c0:	d885883a 	add	r2,sp,r2
  8018c4:	10807804 	addi	r2,r2,480
  8018c8:	11400017 	ldw	r5,0(r2)
  8018cc:	01001034 	movhi	r4,64
  8018d0:	213fffc4 	addi	r4,r4,-1
  8018d4:	2908703a 	and	r4,r5,r4
  8018d8:	11000015 	stw	r4,0(r2)
  8018dc:	00800084 	movi	r2,2
  8018e0:	98805d26 	beq	r19,r2,801a58 <__kernel_rem_pio2+0x5b8>
  8018e4:	400b883a 	mov	r5,r8
  8018e8:	000d883a 	mov	r6,zero
  8018ec:	000f883a 	mov	r7,zero
  8018f0:	a809883a 	mov	r4,r21
  8018f4:	da009b15 	stw	r8,620(sp)
  8018f8:	08044c00 	call	8044c0 <__eqdf2>
  8018fc:	da009b17 	ldw	r8,620(sp)
  801900:	10012b1e 	bne	r2,zero,801db0 <__kernel_rem_pio2+0x910>
  801904:	da009417 	ldw	r8,592(sp)
  801908:	917fffc4 	addi	r5,r18,-1
  80190c:	2a000e16 	blt	r5,r8,801948 <__kernel_rem_pio2+0x4a8>
  801910:	00900034 	movhi	r2,16384
  801914:	10bfffc4 	addi	r2,r2,-1
  801918:	9085883a 	add	r2,r18,r2
  80191c:	1085883a 	add	r2,r2,r2
  801920:	d9809717 	ldw	r6,604(sp)
  801924:	1085883a 	add	r2,r2,r2
  801928:	d9007804 	addi	r4,sp,480
  80192c:	0007883a 	mov	r3,zero
  801930:	2085883a 	add	r2,r4,r2
  801934:	11000017 	ldw	r4,0(r2)
  801938:	10bfff04 	addi	r2,r2,-4
  80193c:	1906b03a 	or	r3,r3,r4
  801940:	11bffc1e 	bne	r2,r6,801934 <__alt_data_end+0xff801934>
  801944:	1800821e 	bne	r3,zero,801b50 <__kernel_rem_pio2+0x6b0>
  801948:	da009817 	ldw	r8,608(sp)
  80194c:	40800017 	ldw	r2,0(r8)
  801950:	1001151e 	bne	r2,zero,801da8 <__kernel_rem_pio2+0x908>
  801954:	d8809617 	ldw	r2,600(sp)
  801958:	05000044 	movi	r20,1
  80195c:	10bfff04 	addi	r2,r2,-4
  801960:	10c00117 	ldw	r3,4(r2)
  801964:	a5000044 	addi	r20,r20,1
  801968:	183ffc26 	beq	r3,zero,80195c <__alt_data_end+0xff80195c>
  80196c:	9529883a 	add	r20,r18,r20
  801970:	90800044 	addi	r2,r18,1
  801974:	dd009115 	stw	r20,580(sp)
  801978:	a0803216 	blt	r20,r2,801a44 <__kernel_rem_pio2+0x5a4>
  80197c:	da009317 	ldw	r8,588(sp)
  801980:	d8c09117 	ldw	r3,580(sp)
  801984:	44a3883a 	add	r17,r8,r18
  801988:	da009217 	ldw	r8,584(sp)
  80198c:	882290fa 	slli	r17,r17,3
  801990:	40a5883a 	add	r18,r8,r2
  801994:	da009517 	ldw	r8,596(sp)
  801998:	100490fa 	slli	r2,r2,3
  80199c:	94a5883a 	add	r18,r18,r18
  8019a0:	40eb883a 	add	r21,r8,r3
  8019a4:	da00a717 	ldw	r8,668(sp)
  8019a8:	ad6b883a 	add	r21,r21,r21
  8019ac:	94a5883a 	add	r18,r18,r18
  8019b0:	ad6b883a 	add	r21,r21,r21
  8019b4:	d8c05004 	addi	r3,sp,320
  8019b8:	44a5883a 	add	r18,r8,r18
  8019bc:	1c63883a 	add	r17,r3,r17
  8019c0:	d8a7883a 	add	r19,sp,r2
  8019c4:	456b883a 	add	r21,r8,r21
  8019c8:	91000017 	ldw	r4,0(r18)
  8019cc:	08056b80 	call	8056b8 <__floatsidf>
  8019d0:	da008d17 	ldw	r8,564(sp)
  8019d4:	88800015 	stw	r2,0(r17)
  8019d8:	88c00115 	stw	r3,4(r17)
  8019dc:	40001b16 	blt	r8,zero,801a4c <__kernel_rem_pio2+0x5ac>
  8019e0:	dd008e17 	ldw	r20,568(sp)
  8019e4:	882d883a 	mov	r22,r17
  8019e8:	002f883a 	mov	r23,zero
  8019ec:	0039883a 	mov	fp,zero
  8019f0:	b1800017 	ldw	r6,0(r22)
  8019f4:	b1c00117 	ldw	r7,4(r22)
  8019f8:	a1000017 	ldw	r4,0(r20)
  8019fc:	a1400117 	ldw	r5,4(r20)
  801a00:	a5000204 	addi	r20,r20,8
  801a04:	b5bffe04 	addi	r22,r22,-8
  801a08:	08046240 	call	804624 <__muldf3>
  801a0c:	b809883a 	mov	r4,r23
  801a10:	e00b883a 	mov	r5,fp
  801a14:	100d883a 	mov	r6,r2
  801a18:	180f883a 	mov	r7,r3
  801a1c:	080332c0 	call	80332c <__adddf3>
  801a20:	102f883a 	mov	r23,r2
  801a24:	1839883a 	mov	fp,r3
  801a28:	a43ff11e 	bne	r20,r16,8019f0 <__alt_data_end+0xff8019f0>
  801a2c:	9dc00015 	stw	r23,0(r19)
  801a30:	9f000115 	stw	fp,4(r19)
  801a34:	94800104 	addi	r18,r18,4
  801a38:	8c400204 	addi	r17,r17,8
  801a3c:	9cc00204 	addi	r19,r19,8
  801a40:	957fe11e 	bne	r18,r21,8019c8 <__alt_data_end+0xff8019c8>
  801a44:	dc809117 	ldw	r18,580(sp)
  801a48:	003f0f06 	br	801688 <__alt_data_end+0xff801688>
  801a4c:	002f883a 	mov	r23,zero
  801a50:	0039883a 	mov	fp,zero
  801a54:	003ff506 	br	801a2c <__alt_data_end+0xff801a2c>
  801a58:	480d883a 	mov	r6,r9
  801a5c:	180f883a 	mov	r7,r3
  801a60:	0009883a 	mov	r4,zero
  801a64:	014ffc34 	movhi	r5,16368
  801a68:	0804d3c0 	call	804d3c <__subdf3>
  801a6c:	102b883a 	mov	r21,r2
  801a70:	1811883a 	mov	r8,r3
  801a74:	a03f9b26 	beq	r20,zero,8018e4 <__alt_data_end+0xff8018e4>
  801a78:	d9809017 	ldw	r6,576(sp)
  801a7c:	0009883a 	mov	r4,zero
  801a80:	014ffc34 	movhi	r5,16368
  801a84:	d8c09b15 	stw	r3,620(sp)
  801a88:	08026fc0 	call	8026fc <scalbn>
  801a8c:	da009b17 	ldw	r8,620(sp)
  801a90:	a809883a 	mov	r4,r21
  801a94:	100d883a 	mov	r6,r2
  801a98:	400b883a 	mov	r5,r8
  801a9c:	180f883a 	mov	r7,r3
  801aa0:	0804d3c0 	call	804d3c <__subdf3>
  801aa4:	102b883a 	mov	r21,r2
  801aa8:	1811883a 	mov	r8,r3
  801aac:	003f8d06 	br	8018e4 <__alt_data_end+0xff8018e4>
  801ab0:	0005883a 	mov	r2,zero
  801ab4:	0007883a 	mov	r3,zero
  801ab8:	003eac06 	br	80156c <__alt_data_end+0xff80156c>
  801abc:	d8809017 	ldw	r2,576(sp)
  801ac0:	1000121e 	bne	r2,zero,801b0c <__kernel_rem_pio2+0x66c>
  801ac4:	90bfffc4 	addi	r2,r18,-1
  801ac8:	1085883a 	add	r2,r2,r2
  801acc:	1085883a 	add	r2,r2,r2
  801ad0:	d885883a 	add	r2,sp,r2
  801ad4:	14c07817 	ldw	r19,480(r2)
  801ad8:	9827d5fa 	srai	r19,r19,23
  801adc:	003f5606 	br	801838 <__alt_data_end+0xff801838>
  801ae0:	90bfffc4 	addi	r2,r18,-1
  801ae4:	1085883a 	add	r2,r2,r2
  801ae8:	1085883a 	add	r2,r2,r2
  801aec:	d885883a 	add	r2,sp,r2
  801af0:	10807804 	addi	r2,r2,480
  801af4:	11000017 	ldw	r4,0(r2)
  801af8:	01402034 	movhi	r5,128
  801afc:	297fffc4 	addi	r5,r5,-1
  801b00:	2148703a 	and	r4,r4,r5
  801b04:	11000015 	stw	r4,0(r2)
  801b08:	003f7406 	br	8018dc <__alt_data_end+0xff8018dc>
  801b0c:	4809883a 	mov	r4,r9
  801b10:	180b883a 	mov	r5,r3
  801b14:	000d883a 	mov	r6,zero
  801b18:	01cff834 	movhi	r7,16352
  801b1c:	d8c09a15 	stw	r3,616(sp)
  801b20:	d8c09b15 	stw	r3,620(sp)
  801b24:	da409915 	stw	r9,612(sp)
  801b28:	08045480 	call	804548 <__gedf2>
  801b2c:	d8c09a17 	ldw	r3,616(sp)
  801b30:	da009b17 	ldw	r8,620(sp)
  801b34:	da409917 	ldw	r9,612(sp)
  801b38:	1000920e 	bge	r2,zero,801d84 <__kernel_rem_pio2+0x8e4>
  801b3c:	0027883a 	mov	r19,zero
  801b40:	003f6806 	br	8018e4 <__alt_data_end+0xff8018e4>
  801b44:	002d883a 	mov	r22,zero
  801b48:	002b883a 	mov	r21,zero
  801b4c:	003eb006 	br	801610 <__alt_data_end+0xff801610>
  801b50:	2945883a 	add	r2,r5,r5
  801b54:	da009017 	ldw	r8,576(sp)
  801b58:	1085883a 	add	r2,r2,r2
  801b5c:	d885883a 	add	r2,sp,r2
  801b60:	10807817 	ldw	r2,480(r2)
  801b64:	423ffa04 	addi	r8,r8,-24
  801b68:	dc409115 	stw	r17,580(sp)
  801b6c:	dcc08d15 	stw	r19,564(sp)
  801b70:	da009015 	stw	r8,576(sp)
  801b74:	dd809417 	ldw	r22,592(sp)
  801b78:	2823883a 	mov	r17,r5
  801b7c:	10000e1e 	bne	r2,zero,801bb8 <__kernel_rem_pio2+0x718>
  801b80:	00900034 	movhi	r2,16384
  801b84:	10bfffc4 	addi	r2,r2,-1
  801b88:	2885883a 	add	r2,r5,r2
  801b8c:	1085883a 	add	r2,r2,r2
  801b90:	d8c07804 	addi	r3,sp,480
  801b94:	1085883a 	add	r2,r2,r2
  801b98:	1885883a 	add	r2,r3,r2
  801b9c:	4007883a 	mov	r3,r8
  801ba0:	10bfff04 	addi	r2,r2,-4
  801ba4:	11000117 	ldw	r4,4(r2)
  801ba8:	8c7fffc4 	addi	r17,r17,-1
  801bac:	18fffa04 	addi	r3,r3,-24
  801bb0:	203ffb26 	beq	r4,zero,801ba0 <__alt_data_end+0xff801ba0>
  801bb4:	d8c09015 	stw	r3,576(sp)
  801bb8:	d9809017 	ldw	r6,576(sp)
  801bbc:	0009883a 	mov	r4,zero
  801bc0:	014ffc34 	movhi	r5,16368
  801bc4:	08026fc0 	call	8026fc <scalbn>
  801bc8:	1029883a 	mov	r20,r2
  801bcc:	182b883a 	mov	r21,r3
  801bd0:	88018416 	blt	r17,zero,8021e4 <__kernel_rem_pio2+0xd44>
  801bd4:	881090fa 	slli	r8,r17,3
  801bd8:	d8c07804 	addi	r3,sp,480
  801bdc:	da008e15 	stw	r8,568(sp)
  801be0:	d8808e17 	ldw	r2,568(sp)
  801be4:	8c51883a 	add	r8,r17,r17
  801be8:	4211883a 	add	r8,r8,r8
  801bec:	d8a1883a 	add	r16,sp,r2
  801bf0:	1a25883a 	add	r18,r3,r8
  801bf4:	da3ffe04 	addi	r8,sp,-8
  801bf8:	da008c15 	stw	r8,560(sp)
  801bfc:	8039883a 	mov	fp,r16
  801c00:	91000017 	ldw	r4,0(r18)
  801c04:	e73ffe04 	addi	fp,fp,-8
  801c08:	94bfff04 	addi	r18,r18,-4
  801c0c:	08056b80 	call	8056b8 <__floatsidf>
  801c10:	a00d883a 	mov	r6,r20
  801c14:	a80f883a 	mov	r7,r21
  801c18:	1009883a 	mov	r4,r2
  801c1c:	180b883a 	mov	r5,r3
  801c20:	08046240 	call	804624 <__muldf3>
  801c24:	a009883a 	mov	r4,r20
  801c28:	a80b883a 	mov	r5,r21
  801c2c:	e0800215 	stw	r2,8(fp)
  801c30:	e0c00315 	stw	r3,12(fp)
  801c34:	000d883a 	mov	r6,zero
  801c38:	01cf9c34 	movhi	r7,15984
  801c3c:	08046240 	call	804624 <__muldf3>
  801c40:	da008c17 	ldw	r8,560(sp)
  801c44:	1029883a 	mov	r20,r2
  801c48:	182b883a 	mov	r21,r3
  801c4c:	e23fec1e 	bne	fp,r8,801c00 <__alt_data_end+0xff801c00>
  801c50:	0029883a 	mov	r20,zero
  801c54:	b0004f16 	blt	r22,zero,801d94 <__kernel_rem_pio2+0x8f4>
  801c58:	05402074 	movhi	r21,129
  801c5c:	014ffe74 	movhi	r5,16377
  801c60:	ad49dd04 	addi	r21,r21,10100
  801c64:	8027883a 	mov	r19,r16
  801c68:	01100034 	movhi	r4,16384
  801c6c:	29487ec4 	addi	r5,r5,8699
  801c70:	0039883a 	mov	fp,zero
  801c74:	002f883a 	mov	r23,zero
  801c78:	0025883a 	mov	r18,zero
  801c7c:	00000506 	br	801c94 <__kernel_rem_pio2+0x7f4>
  801c80:	9cc00204 	addi	r19,r19,8
  801c84:	a4800f16 	blt	r20,r18,801cc4 <__kernel_rem_pio2+0x824>
  801c88:	a9000017 	ldw	r4,0(r21)
  801c8c:	a9400117 	ldw	r5,4(r21)
  801c90:	ad400204 	addi	r21,r21,8
  801c94:	99800017 	ldw	r6,0(r19)
  801c98:	99c00117 	ldw	r7,4(r19)
  801c9c:	94800044 	addi	r18,r18,1
  801ca0:	08046240 	call	804624 <__muldf3>
  801ca4:	e009883a 	mov	r4,fp
  801ca8:	b80b883a 	mov	r5,r23
  801cac:	100d883a 	mov	r6,r2
  801cb0:	180f883a 	mov	r7,r3
  801cb4:	080332c0 	call	80332c <__adddf3>
  801cb8:	1039883a 	mov	fp,r2
  801cbc:	182f883a 	mov	r23,r3
  801cc0:	b4bfef0e 	bge	r22,r18,801c80 <__alt_data_end+0xff801c80>
  801cc4:	a00490fa 	slli	r2,r20,3
  801cc8:	da008c17 	ldw	r8,560(sp)
  801ccc:	843ffe04 	addi	r16,r16,-8
  801cd0:	d885883a 	add	r2,sp,r2
  801cd4:	10802804 	addi	r2,r2,160
  801cd8:	17000015 	stw	fp,0(r2)
  801cdc:	15c00115 	stw	r23,4(r2)
  801ce0:	a5000044 	addi	r20,r20,1
  801ce4:	823fdb1e 	bne	r16,r8,801c54 <__alt_data_end+0xff801c54>
  801ce8:	da00a617 	ldw	r8,664(sp)
  801cec:	00800084 	movi	r2,2
  801cf0:	12006616 	blt	r2,r8,801e8c <__kernel_rem_pio2+0x9ec>
  801cf4:	0200de16 	blt	zero,r8,802070 <__kernel_rem_pio2+0xbd0>
  801cf8:	4000141e 	bne	r8,zero,801d4c <__kernel_rem_pio2+0x8ac>
  801cfc:	da008e17 	ldw	r8,568(sp)
  801d00:	d8802804 	addi	r2,sp,160
  801d04:	0007883a 	mov	r3,zero
  801d08:	1225883a 	add	r18,r2,r8
  801d0c:	043fffc4 	movi	r16,-1
  801d10:	0005883a 	mov	r2,zero
  801d14:	91800017 	ldw	r6,0(r18)
  801d18:	91c00117 	ldw	r7,4(r18)
  801d1c:	1009883a 	mov	r4,r2
  801d20:	180b883a 	mov	r5,r3
  801d24:	8c7fffc4 	addi	r17,r17,-1
  801d28:	080332c0 	call	80332c <__adddf3>
  801d2c:	94bffe04 	addi	r18,r18,-8
  801d30:	8c3ff81e 	bne	r17,r16,801d14 <__alt_data_end+0xff801d14>
  801d34:	da008d17 	ldw	r8,564(sp)
  801d38:	40000126 	beq	r8,zero,801d40 <__kernel_rem_pio2+0x8a0>
  801d3c:	18e0003c 	xorhi	r3,r3,32768
  801d40:	da008f17 	ldw	r8,572(sp)
  801d44:	40800015 	stw	r2,0(r8)
  801d48:	40c00115 	stw	r3,4(r8)
  801d4c:	da009117 	ldw	r8,580(sp)
  801d50:	408001cc 	andi	r2,r8,7
  801d54:	dfc0a517 	ldw	ra,660(sp)
  801d58:	df00a417 	ldw	fp,656(sp)
  801d5c:	ddc0a317 	ldw	r23,652(sp)
  801d60:	dd80a217 	ldw	r22,648(sp)
  801d64:	dd40a117 	ldw	r21,644(sp)
  801d68:	dd00a017 	ldw	r20,640(sp)
  801d6c:	dcc09f17 	ldw	r19,636(sp)
  801d70:	dc809e17 	ldw	r18,632(sp)
  801d74:	dc409d17 	ldw	r17,628(sp)
  801d78:	dc009c17 	ldw	r16,624(sp)
  801d7c:	dec0a604 	addi	sp,sp,664
  801d80:	f800283a 	ret
  801d84:	8c400044 	addi	r17,r17,1
  801d88:	04810d0e 	bge	zero,r18,8021c0 <__kernel_rem_pio2+0xd20>
  801d8c:	04c00084 	movi	r19,2
  801d90:	003eac06 	br	801844 <__alt_data_end+0xff801844>
  801d94:	0039883a 	mov	fp,zero
  801d98:	002f883a 	mov	r23,zero
  801d9c:	003fc906 	br	801cc4 <__alt_data_end+0xff801cc4>
  801da0:	0029883a 	mov	r20,zero
  801da4:	003ebd06 	br	80189c <__alt_data_end+0xff80189c>
  801da8:	05000044 	movi	r20,1
  801dac:	003eef06 	br	80196c <__alt_data_end+0xff80196c>
  801db0:	4029883a 	mov	r20,r8
  801db4:	da009017 	ldw	r8,576(sp)
  801db8:	a809883a 	mov	r4,r21
  801dbc:	a00b883a 	mov	r5,r20
  801dc0:	020dc83a 	sub	r6,zero,r8
  801dc4:	dc409115 	stw	r17,580(sp)
  801dc8:	dd809417 	ldw	r22,592(sp)
  801dcc:	dcc08d15 	stw	r19,564(sp)
  801dd0:	08026fc0 	call	8026fc <scalbn>
  801dd4:	000d883a 	mov	r6,zero
  801dd8:	01d05c34 	movhi	r7,16752
  801ddc:	1009883a 	mov	r4,r2
  801de0:	180b883a 	mov	r5,r3
  801de4:	102b883a 	mov	r21,r2
  801de8:	1823883a 	mov	r17,r3
  801dec:	08045480 	call	804548 <__gedf2>
  801df0:	1000e916 	blt	r2,zero,802198 <__kernel_rem_pio2+0xcf8>
  801df4:	000d883a 	mov	r6,zero
  801df8:	01cf9c34 	movhi	r7,15984
  801dfc:	880b883a 	mov	r5,r17
  801e00:	a809883a 	mov	r4,r21
  801e04:	08046240 	call	804624 <__muldf3>
  801e08:	180b883a 	mov	r5,r3
  801e0c:	1009883a 	mov	r4,r2
  801e10:	08056380 	call	805638 <__fixdfsi>
  801e14:	1029883a 	mov	r20,r2
  801e18:	9485883a 	add	r2,r18,r18
  801e1c:	1085883a 	add	r2,r2,r2
  801e20:	a009883a 	mov	r4,r20
  801e24:	d8a1883a 	add	r16,sp,r2
  801e28:	08056b80 	call	8056b8 <__floatsidf>
  801e2c:	000d883a 	mov	r6,zero
  801e30:	01d05c34 	movhi	r7,16752
  801e34:	1009883a 	mov	r4,r2
  801e38:	180b883a 	mov	r5,r3
  801e3c:	08046240 	call	804624 <__muldf3>
  801e40:	880b883a 	mov	r5,r17
  801e44:	100d883a 	mov	r6,r2
  801e48:	180f883a 	mov	r7,r3
  801e4c:	a809883a 	mov	r4,r21
  801e50:	0804d3c0 	call	804d3c <__subdf3>
  801e54:	180b883a 	mov	r5,r3
  801e58:	1009883a 	mov	r4,r2
  801e5c:	08056380 	call	805638 <__fixdfsi>
  801e60:	da009017 	ldw	r8,576(sp)
  801e64:	94400044 	addi	r17,r18,1
  801e68:	8c47883a 	add	r3,r17,r17
  801e6c:	84007804 	addi	r16,r16,480
  801e70:	18c7883a 	add	r3,r3,r3
  801e74:	80800015 	stw	r2,0(r16)
  801e78:	d8c7883a 	add	r3,sp,r3
  801e7c:	42000604 	addi	r8,r8,24
  801e80:	da009015 	stw	r8,576(sp)
  801e84:	1d007815 	stw	r20,480(r3)
  801e88:	003f4b06 	br	801bb8 <__alt_data_end+0xff801bb8>
  801e8c:	da00a617 	ldw	r8,664(sp)
  801e90:	008000c4 	movi	r2,3
  801e94:	40bfad1e 	bne	r8,r2,801d4c <__alt_data_end+0xff801d4c>
  801e98:	0440bc0e 	bge	zero,r17,80218c <__kernel_rem_pio2+0xcec>
  801e9c:	da008e17 	ldw	r8,568(sp)
  801ea0:	882090fa 	slli	r16,r17,3
  801ea4:	dd402804 	addi	r21,sp,160
  801ea8:	da05883a 	add	r2,sp,r8
  801eac:	10802804 	addi	r2,r2,160
  801eb0:	15c00017 	ldw	r23,0(r2)
  801eb4:	15800117 	ldw	r22,4(r2)
  801eb8:	8029883a 	mov	r20,r16
  801ebc:	843ffe04 	addi	r16,r16,-8
  801ec0:	ac21883a 	add	r16,r21,r16
  801ec4:	ad29883a 	add	r20,r21,r20
  801ec8:	dac02604 	addi	r11,sp,152
  801ecc:	8811883a 	mov	r8,r17
  801ed0:	84400017 	ldw	r17,0(r16)
  801ed4:	87000117 	ldw	fp,4(r16)
  801ed8:	b80d883a 	mov	r6,r23
  801edc:	b00f883a 	mov	r7,r22
  801ee0:	8809883a 	mov	r4,r17
  801ee4:	e00b883a 	mov	r5,fp
  801ee8:	da009b15 	stw	r8,620(sp)
  801eec:	dac09915 	stw	r11,612(sp)
  801ef0:	080332c0 	call	80332c <__adddf3>
  801ef4:	100d883a 	mov	r6,r2
  801ef8:	180f883a 	mov	r7,r3
  801efc:	8809883a 	mov	r4,r17
  801f00:	e00b883a 	mov	r5,fp
  801f04:	1027883a 	mov	r19,r2
  801f08:	1825883a 	mov	r18,r3
  801f0c:	0804d3c0 	call	804d3c <__subdf3>
  801f10:	b80d883a 	mov	r6,r23
  801f14:	b00f883a 	mov	r7,r22
  801f18:	1009883a 	mov	r4,r2
  801f1c:	180b883a 	mov	r5,r3
  801f20:	080332c0 	call	80332c <__adddf3>
  801f24:	dac09917 	ldw	r11,612(sp)
  801f28:	a0800015 	stw	r2,0(r20)
  801f2c:	a0c00115 	stw	r3,4(r20)
  801f30:	84c00015 	stw	r19,0(r16)
  801f34:	84800115 	stw	r18,4(r16)
  801f38:	843ffe04 	addi	r16,r16,-8
  801f3c:	a53ffe04 	addi	r20,r20,-8
  801f40:	982f883a 	mov	r23,r19
  801f44:	902d883a 	mov	r22,r18
  801f48:	da009b17 	ldw	r8,620(sp)
  801f4c:	5c3fe01e 	bne	r11,r16,801ed0 <__alt_data_end+0xff801ed0>
  801f50:	00800044 	movi	r2,1
  801f54:	12008d0e 	bge	r2,r8,80218c <__kernel_rem_pio2+0xcec>
  801f58:	402090fa 	slli	r16,r8,3
  801f5c:	da008e17 	ldw	r8,568(sp)
  801f60:	8023883a 	mov	r17,r16
  801f64:	da05883a 	add	r2,sp,r8
  801f68:	10802804 	addi	r2,r2,160
  801f6c:	15800017 	ldw	r22,0(r2)
  801f70:	15000117 	ldw	r20,4(r2)
  801f74:	ac63883a 	add	r17,r21,r17
  801f78:	843ffe04 	addi	r16,r16,-8
  801f7c:	ac21883a 	add	r16,r21,r16
  801f80:	8825883a 	mov	r18,r17
  801f84:	8811883a 	mov	r8,r17
  801f88:	84400017 	ldw	r17,0(r16)
  801f8c:	87000117 	ldw	fp,4(r16)
  801f90:	b009883a 	mov	r4,r22
  801f94:	a00b883a 	mov	r5,r20
  801f98:	880d883a 	mov	r6,r17
  801f9c:	e00f883a 	mov	r7,fp
  801fa0:	da009b15 	stw	r8,620(sp)
  801fa4:	080332c0 	call	80332c <__adddf3>
  801fa8:	100d883a 	mov	r6,r2
  801fac:	180f883a 	mov	r7,r3
  801fb0:	8809883a 	mov	r4,r17
  801fb4:	e00b883a 	mov	r5,fp
  801fb8:	102f883a 	mov	r23,r2
  801fbc:	1827883a 	mov	r19,r3
  801fc0:	0804d3c0 	call	804d3c <__subdf3>
  801fc4:	b00d883a 	mov	r6,r22
  801fc8:	a00f883a 	mov	r7,r20
  801fcc:	1009883a 	mov	r4,r2
  801fd0:	180b883a 	mov	r5,r3
  801fd4:	080332c0 	call	80332c <__adddf3>
  801fd8:	90800015 	stw	r2,0(r18)
  801fdc:	90c00115 	stw	r3,4(r18)
  801fe0:	85c00015 	stw	r23,0(r16)
  801fe4:	84c00115 	stw	r19,4(r16)
  801fe8:	843ffe04 	addi	r16,r16,-8
  801fec:	94bffe04 	addi	r18,r18,-8
  801ff0:	b82d883a 	mov	r22,r23
  801ff4:	9829883a 	mov	r20,r19
  801ff8:	da009b17 	ldw	r8,620(sp)
  801ffc:	ac3fe21e 	bne	r21,r16,801f88 <__alt_data_end+0xff801f88>
  802000:	4023883a 	mov	r17,r8
  802004:	dc002a04 	addi	r16,sp,168
  802008:	0005883a 	mov	r2,zero
  80200c:	0007883a 	mov	r3,zero
  802010:	89800017 	ldw	r6,0(r17)
  802014:	89c00117 	ldw	r7,4(r17)
  802018:	1009883a 	mov	r4,r2
  80201c:	8c7ffe04 	addi	r17,r17,-8
  802020:	180b883a 	mov	r5,r3
  802024:	080332c0 	call	80332c <__adddf3>
  802028:	847ff91e 	bne	r16,r17,802010 <__alt_data_end+0xff802010>
  80202c:	da008d17 	ldw	r8,564(sp)
  802030:	40004726 	beq	r8,zero,802150 <__kernel_rem_pio2+0xcb0>
  802034:	d9002b17 	ldw	r4,172(sp)
  802038:	d9402917 	ldw	r5,164(sp)
  80203c:	d9802a17 	ldw	r6,168(sp)
  802040:	da008f17 	ldw	r8,572(sp)
  802044:	d9c02817 	ldw	r7,160(sp)
  802048:	2960003c 	xorhi	r5,r5,32768
  80204c:	2120003c 	xorhi	r4,r4,32768
  802050:	18e0003c 	xorhi	r3,r3,32768
  802054:	41c00015 	stw	r7,0(r8)
  802058:	41400115 	stw	r5,4(r8)
  80205c:	41800215 	stw	r6,8(r8)
  802060:	41000315 	stw	r4,12(r8)
  802064:	40800415 	stw	r2,16(r8)
  802068:	40c00515 	stw	r3,20(r8)
  80206c:	003f3706 	br	801d4c <__alt_data_end+0xff801d4c>
  802070:	da008e17 	ldw	r8,568(sp)
  802074:	d8802804 	addi	r2,sp,160
  802078:	dc002604 	addi	r16,sp,152
  80207c:	1225883a 	add	r18,r2,r8
  802080:	0007883a 	mov	r3,zero
  802084:	0005883a 	mov	r2,zero
  802088:	91800017 	ldw	r6,0(r18)
  80208c:	91c00117 	ldw	r7,4(r18)
  802090:	1009883a 	mov	r4,r2
  802094:	94bffe04 	addi	r18,r18,-8
  802098:	180b883a 	mov	r5,r3
  80209c:	080332c0 	call	80332c <__adddf3>
  8020a0:	943ff91e 	bne	r18,r16,802088 <__alt_data_end+0xff802088>
  8020a4:	da008d17 	ldw	r8,564(sp)
  8020a8:	d9002817 	ldw	r4,160(sp)
  8020ac:	d9402917 	ldw	r5,164(sp)
  8020b0:	40001a26 	beq	r8,zero,80211c <__kernel_rem_pio2+0xc7c>
  8020b4:	da008f17 	ldw	r8,572(sp)
  8020b8:	19a0003c 	xorhi	r6,r3,32768
  8020bc:	180f883a 	mov	r7,r3
  8020c0:	41800115 	stw	r6,4(r8)
  8020c4:	40800015 	stw	r2,0(r8)
  8020c8:	100d883a 	mov	r6,r2
  8020cc:	0804d3c0 	call	804d3c <__subdf3>
  8020d0:	04400c0e 	bge	zero,r17,802104 <__kernel_rem_pio2+0xc64>
  8020d4:	dc002a04 	addi	r16,sp,168
  8020d8:	04800044 	movi	r18,1
  8020dc:	81800017 	ldw	r6,0(r16)
  8020e0:	81c00117 	ldw	r7,4(r16)
  8020e4:	1009883a 	mov	r4,r2
  8020e8:	180b883a 	mov	r5,r3
  8020ec:	94800044 	addi	r18,r18,1
  8020f0:	080332c0 	call	80332c <__adddf3>
  8020f4:	84000204 	addi	r16,r16,8
  8020f8:	8cbff80e 	bge	r17,r18,8020dc <__alt_data_end+0xff8020dc>
  8020fc:	da008d17 	ldw	r8,564(sp)
  802100:	40004226 	beq	r8,zero,80220c <__kernel_rem_pio2+0xd6c>
  802104:	da008f17 	ldw	r8,572(sp)
  802108:	1009883a 	mov	r4,r2
  80210c:	18a0003c 	xorhi	r2,r3,32768
  802110:	41000215 	stw	r4,8(r8)
  802114:	40800315 	stw	r2,12(r8)
  802118:	003f0c06 	br	801d4c <__alt_data_end+0xff801d4c>
  80211c:	da008f17 	ldw	r8,572(sp)
  802120:	100d883a 	mov	r6,r2
  802124:	180f883a 	mov	r7,r3
  802128:	40800015 	stw	r2,0(r8)
  80212c:	40c00115 	stw	r3,4(r8)
  802130:	0804d3c0 	call	804d3c <__subdf3>
  802134:	047fe716 	blt	zero,r17,8020d4 <__alt_data_end+0xff8020d4>
  802138:	da008f17 	ldw	r8,572(sp)
  80213c:	1009883a 	mov	r4,r2
  802140:	1805883a 	mov	r2,r3
  802144:	41000215 	stw	r4,8(r8)
  802148:	40800315 	stw	r2,12(r8)
  80214c:	003eff06 	br	801d4c <__alt_data_end+0xff801d4c>
  802150:	da008f17 	ldw	r8,572(sp)
  802154:	d9802817 	ldw	r6,160(sp)
  802158:	d9402a17 	ldw	r5,168(sp)
  80215c:	d9002b17 	ldw	r4,172(sp)
  802160:	41800015 	stw	r6,0(r8)
  802164:	d9802917 	ldw	r6,164(sp)
  802168:	41400215 	stw	r5,8(r8)
  80216c:	41000315 	stw	r4,12(r8)
  802170:	41800115 	stw	r6,4(r8)
  802174:	40800415 	stw	r2,16(r8)
  802178:	40c00515 	stw	r3,20(r8)
  80217c:	003ef306 	br	801d4c <__alt_data_end+0xff801d4c>
  802180:	da00a617 	ldw	r8,664(sp)
  802184:	008000c4 	movi	r2,3
  802188:	40bef01e 	bne	r8,r2,801d4c <__alt_data_end+0xff801d4c>
  80218c:	0005883a 	mov	r2,zero
  802190:	0007883a 	mov	r3,zero
  802194:	003fa506 	br	80202c <__alt_data_end+0xff80202c>
  802198:	9485883a 	add	r2,r18,r18
  80219c:	1085883a 	add	r2,r2,r2
  8021a0:	d8a1883a 	add	r16,sp,r2
  8021a4:	880b883a 	mov	r5,r17
  8021a8:	a809883a 	mov	r4,r21
  8021ac:	84007804 	addi	r16,r16,480
  8021b0:	08056380 	call	805638 <__fixdfsi>
  8021b4:	80800015 	stw	r2,0(r16)
  8021b8:	9023883a 	mov	r17,r18
  8021bc:	003e7e06 	br	801bb8 <__alt_data_end+0xff801bb8>
  8021c0:	a80d883a 	mov	r6,r21
  8021c4:	400f883a 	mov	r7,r8
  8021c8:	0009883a 	mov	r4,zero
  8021cc:	014ffc34 	movhi	r5,16368
  8021d0:	0804d3c0 	call	804d3c <__subdf3>
  8021d4:	102b883a 	mov	r21,r2
  8021d8:	1811883a 	mov	r8,r3
  8021dc:	04c00084 	movi	r19,2
  8021e0:	003dc006 	br	8018e4 <__alt_data_end+0xff8018e4>
  8021e4:	da00a617 	ldw	r8,664(sp)
  8021e8:	00800084 	movi	r2,2
  8021ec:	123fe416 	blt	r2,r8,802180 <__alt_data_end+0xff802180>
  8021f0:	02000c16 	blt	zero,r8,802224 <__kernel_rem_pio2+0xd84>
  8021f4:	403ed51e 	bne	r8,zero,801d4c <__alt_data_end+0xff801d4c>
  8021f8:	0005883a 	mov	r2,zero
  8021fc:	0007883a 	mov	r3,zero
  802200:	003ecc06 	br	801d34 <__alt_data_end+0xff801d34>
  802204:	d8009215 	stw	zero,584(sp)
  802208:	003cc306 	br	801518 <__alt_data_end+0xff801518>
  80220c:	da008f17 	ldw	r8,572(sp)
  802210:	1009883a 	mov	r4,r2
  802214:	1805883a 	mov	r2,r3
  802218:	41000215 	stw	r4,8(r8)
  80221c:	40800315 	stw	r2,12(r8)
  802220:	003eca06 	br	801d4c <__alt_data_end+0xff801d4c>
  802224:	0005883a 	mov	r2,zero
  802228:	0007883a 	mov	r3,zero
  80222c:	003f9d06 	br	8020a4 <__alt_data_end+0xff8020a4>

00802230 <__kernel_sin>:
  802230:	00a00034 	movhi	r2,32768
  802234:	defff404 	addi	sp,sp,-48
  802238:	10bfffc4 	addi	r2,r2,-1
  80223c:	00cf9034 	movhi	r3,15936
  802240:	ddc00915 	stw	r23,36(sp)
  802244:	dd800815 	stw	r22,32(sp)
  802248:	dc400315 	stw	r17,12(sp)
  80224c:	dc000215 	stw	r16,8(sp)
  802250:	dfc00b15 	stw	ra,44(sp)
  802254:	df000a15 	stw	fp,40(sp)
  802258:	dd400715 	stw	r21,28(sp)
  80225c:	dd000615 	stw	r20,24(sp)
  802260:	dcc00515 	stw	r19,20(sp)
  802264:	dc800415 	stw	r18,16(sp)
  802268:	2884703a 	and	r2,r5,r2
  80226c:	18ffffc4 	addi	r3,r3,-1
  802270:	2821883a 	mov	r16,r5
  802274:	2023883a 	mov	r17,r4
  802278:	302f883a 	mov	r23,r6
  80227c:	382d883a 	mov	r22,r7
  802280:	18800216 	blt	r3,r2,80228c <__kernel_sin+0x5c>
  802284:	08056380 	call	805638 <__fixdfsi>
  802288:	10009926 	beq	r2,zero,8024f0 <__kernel_sin+0x2c0>
  80228c:	880d883a 	mov	r6,r17
  802290:	800f883a 	mov	r7,r16
  802294:	8809883a 	mov	r4,r17
  802298:	800b883a 	mov	r5,r16
  80229c:	08046240 	call	804624 <__muldf3>
  8022a0:	100d883a 	mov	r6,r2
  8022a4:	180f883a 	mov	r7,r3
  8022a8:	8809883a 	mov	r4,r17
  8022ac:	800b883a 	mov	r5,r16
  8022b0:	1027883a 	mov	r19,r2
  8022b4:	1825883a 	mov	r18,r3
  8022b8:	08046240 	call	804624 <__muldf3>
  8022bc:	0196b434 	movhi	r6,23248
  8022c0:	01cf79b4 	movhi	r7,15846
  8022c4:	31b55f04 	addi	r6,r6,-10884
  8022c8:	39f64e84 	addi	r7,r7,-9926
  8022cc:	9809883a 	mov	r4,r19
  8022d0:	900b883a 	mov	r5,r18
  8022d4:	102b883a 	mov	r21,r2
  8022d8:	1829883a 	mov	r20,r3
  8022dc:	08046240 	call	804624 <__muldf3>
  8022e0:	01a28b34 	movhi	r6,35372
  8022e4:	01cf96f4 	movhi	r7,15963
  8022e8:	31a73ac4 	addi	r6,r6,-25365
  8022ec:	39f97984 	addi	r7,r7,-6682
  8022f0:	1009883a 	mov	r4,r2
  8022f4:	180b883a 	mov	r5,r3
  8022f8:	0804d3c0 	call	804d3c <__subdf3>
  8022fc:	980d883a 	mov	r6,r19
  802300:	900f883a 	mov	r7,r18
  802304:	1009883a 	mov	r4,r2
  802308:	180b883a 	mov	r5,r3
  80230c:	08046240 	call	804624 <__muldf3>
  802310:	0195ecb4 	movhi	r6,22450
  802314:	01cfb1f4 	movhi	r7,16071
  802318:	31bf9f44 	addi	r6,r6,-387
  80231c:	39c778c4 	addi	r7,r7,7651
  802320:	1009883a 	mov	r4,r2
  802324:	180b883a 	mov	r5,r3
  802328:	080332c0 	call	80332c <__adddf3>
  80232c:	980d883a 	mov	r6,r19
  802330:	900f883a 	mov	r7,r18
  802334:	1009883a 	mov	r4,r2
  802338:	180b883a 	mov	r5,r3
  80233c:	08046240 	call	804624 <__muldf3>
  802340:	01867074 	movhi	r6,6593
  802344:	01cfcab4 	movhi	r7,16170
  802348:	31987544 	addi	r6,r6,25045
  80234c:	39c06804 	addi	r7,r7,416
  802350:	1009883a 	mov	r4,r2
  802354:	180b883a 	mov	r5,r3
  802358:	0804d3c0 	call	804d3c <__subdf3>
  80235c:	980d883a 	mov	r6,r19
  802360:	900f883a 	mov	r7,r18
  802364:	1009883a 	mov	r4,r2
  802368:	180b883a 	mov	r5,r3
  80236c:	08046240 	call	804624 <__muldf3>
  802370:	01844474 	movhi	r6,4369
  802374:	01cfe074 	movhi	r7,16257
  802378:	31be2984 	addi	r6,r6,-1882
  80237c:	39c44444 	addi	r7,r7,4369
  802380:	1009883a 	mov	r4,r2
  802384:	180b883a 	mov	r5,r3
  802388:	080332c0 	call	80332c <__adddf3>
  80238c:	1011883a 	mov	r8,r2
  802390:	d8800c17 	ldw	r2,48(sp)
  802394:	1839883a 	mov	fp,r3
  802398:	10003e26 	beq	r2,zero,802494 <__kernel_sin+0x264>
  80239c:	000d883a 	mov	r6,zero
  8023a0:	01cff834 	movhi	r7,16352
  8023a4:	b809883a 	mov	r4,r23
  8023a8:	b00b883a 	mov	r5,r22
  8023ac:	da000015 	stw	r8,0(sp)
  8023b0:	08046240 	call	804624 <__muldf3>
  8023b4:	da000017 	ldw	r8,0(sp)
  8023b8:	e00f883a 	mov	r7,fp
  8023bc:	a809883a 	mov	r4,r21
  8023c0:	400d883a 	mov	r6,r8
  8023c4:	a00b883a 	mov	r5,r20
  8023c8:	d8c00115 	stw	r3,4(sp)
  8023cc:	d8800015 	stw	r2,0(sp)
  8023d0:	08046240 	call	804624 <__muldf3>
  8023d4:	da800017 	ldw	r10,0(sp)
  8023d8:	da400117 	ldw	r9,4(sp)
  8023dc:	100d883a 	mov	r6,r2
  8023e0:	5009883a 	mov	r4,r10
  8023e4:	480b883a 	mov	r5,r9
  8023e8:	180f883a 	mov	r7,r3
  8023ec:	0804d3c0 	call	804d3c <__subdf3>
  8023f0:	980d883a 	mov	r6,r19
  8023f4:	900f883a 	mov	r7,r18
  8023f8:	1009883a 	mov	r4,r2
  8023fc:	180b883a 	mov	r5,r3
  802400:	08046240 	call	804624 <__muldf3>
  802404:	b80d883a 	mov	r6,r23
  802408:	b00f883a 	mov	r7,r22
  80240c:	1009883a 	mov	r4,r2
  802410:	180b883a 	mov	r5,r3
  802414:	0804d3c0 	call	804d3c <__subdf3>
  802418:	01955574 	movhi	r6,21845
  80241c:	01cff174 	movhi	r7,16325
  802420:	31955244 	addi	r6,r6,21833
  802424:	39d55544 	addi	r7,r7,21845
  802428:	a809883a 	mov	r4,r21
  80242c:	a00b883a 	mov	r5,r20
  802430:	1027883a 	mov	r19,r2
  802434:	1825883a 	mov	r18,r3
  802438:	08046240 	call	804624 <__muldf3>
  80243c:	100d883a 	mov	r6,r2
  802440:	180f883a 	mov	r7,r3
  802444:	9809883a 	mov	r4,r19
  802448:	900b883a 	mov	r5,r18
  80244c:	080332c0 	call	80332c <__adddf3>
  802450:	100d883a 	mov	r6,r2
  802454:	180f883a 	mov	r7,r3
  802458:	8809883a 	mov	r4,r17
  80245c:	800b883a 	mov	r5,r16
  802460:	0804d3c0 	call	804d3c <__subdf3>
  802464:	dfc00b17 	ldw	ra,44(sp)
  802468:	df000a17 	ldw	fp,40(sp)
  80246c:	ddc00917 	ldw	r23,36(sp)
  802470:	dd800817 	ldw	r22,32(sp)
  802474:	dd400717 	ldw	r21,28(sp)
  802478:	dd000617 	ldw	r20,24(sp)
  80247c:	dcc00517 	ldw	r19,20(sp)
  802480:	dc800417 	ldw	r18,16(sp)
  802484:	dc400317 	ldw	r17,12(sp)
  802488:	dc000217 	ldw	r16,8(sp)
  80248c:	dec00c04 	addi	sp,sp,48
  802490:	f800283a 	ret
  802494:	400d883a 	mov	r6,r8
  802498:	9809883a 	mov	r4,r19
  80249c:	900b883a 	mov	r5,r18
  8024a0:	180f883a 	mov	r7,r3
  8024a4:	08046240 	call	804624 <__muldf3>
  8024a8:	01955574 	movhi	r6,21845
  8024ac:	01cff174 	movhi	r7,16325
  8024b0:	31955244 	addi	r6,r6,21833
  8024b4:	39d55544 	addi	r7,r7,21845
  8024b8:	1009883a 	mov	r4,r2
  8024bc:	180b883a 	mov	r5,r3
  8024c0:	0804d3c0 	call	804d3c <__subdf3>
  8024c4:	a80d883a 	mov	r6,r21
  8024c8:	a00f883a 	mov	r7,r20
  8024cc:	1009883a 	mov	r4,r2
  8024d0:	180b883a 	mov	r5,r3
  8024d4:	08046240 	call	804624 <__muldf3>
  8024d8:	880d883a 	mov	r6,r17
  8024dc:	800f883a 	mov	r7,r16
  8024e0:	1009883a 	mov	r4,r2
  8024e4:	180b883a 	mov	r5,r3
  8024e8:	080332c0 	call	80332c <__adddf3>
  8024ec:	003fdd06 	br	802464 <__alt_data_end+0xff802464>
  8024f0:	8805883a 	mov	r2,r17
  8024f4:	8007883a 	mov	r3,r16
  8024f8:	003fda06 	br	802464 <__alt_data_end+0xff802464>

008024fc <fabs>:
  8024fc:	00e00034 	movhi	r3,32768
  802500:	18ffffc4 	addi	r3,r3,-1
  802504:	2005883a 	mov	r2,r4
  802508:	28c6703a 	and	r3,r5,r3
  80250c:	f800283a 	ret

00802510 <floor>:
  802510:	2811d53a 	srai	r8,r5,20
  802514:	defffa04 	addi	sp,sp,-24
  802518:	dcc00315 	stw	r19,12(sp)
  80251c:	4201ffcc 	andi	r8,r8,2047
  802520:	dc800215 	stw	r18,8(sp)
  802524:	dc400115 	stw	r17,4(sp)
  802528:	dc000015 	stw	r16,0(sp)
  80252c:	dfc00515 	stw	ra,20(sp)
  802530:	dd000415 	stw	r20,16(sp)
  802534:	44bf0044 	addi	r18,r8,-1023
  802538:	018004c4 	movi	r6,19
  80253c:	2821883a 	mov	r16,r5
  802540:	2005883a 	mov	r2,r4
  802544:	280f883a 	mov	r7,r5
  802548:	2827883a 	mov	r19,r5
  80254c:	2023883a 	mov	r17,r4
  802550:	34801916 	blt	r6,r18,8025b8 <floor+0xa8>
  802554:	90003c16 	blt	r18,zero,802648 <floor+0x138>
  802558:	05000434 	movhi	r20,16
  80255c:	a53fffc4 	addi	r20,r20,-1
  802560:	a4a9d83a 	sra	r20,r20,r18
  802564:	2d0c703a 	and	r6,r5,r20
  802568:	310cb03a 	or	r6,r6,r4
  80256c:	30001626 	beq	r6,zero,8025c8 <floor+0xb8>
  802570:	01a20034 	movhi	r6,34816
  802574:	01df8e34 	movhi	r7,32312
  802578:	319d6704 	addi	r6,r6,30108
  80257c:	39f90f04 	addi	r7,r7,-7108
  802580:	080332c0 	call	80332c <__adddf3>
  802584:	000d883a 	mov	r6,zero
  802588:	000f883a 	mov	r7,zero
  80258c:	1009883a 	mov	r4,r2
  802590:	180b883a 	mov	r5,r3
  802594:	08045480 	call	804548 <__gedf2>
  802598:	0080040e 	bge	zero,r2,8025ac <floor+0x9c>
  80259c:	80003c16 	blt	r16,zero,802690 <floor+0x180>
  8025a0:	0520303a 	nor	r16,zero,r20
  8025a4:	84e0703a 	and	r16,r16,r19
  8025a8:	0023883a 	mov	r17,zero
  8025ac:	8805883a 	mov	r2,r17
  8025b0:	8007883a 	mov	r3,r16
  8025b4:	00000506 	br	8025cc <floor+0xbc>
  8025b8:	01800cc4 	movi	r6,51
  8025bc:	34800b0e 	bge	r6,r18,8025ec <floor+0xdc>
  8025c0:	01810004 	movi	r6,1024
  8025c4:	91802f26 	beq	r18,r6,802684 <floor+0x174>
  8025c8:	3807883a 	mov	r3,r7
  8025cc:	dfc00517 	ldw	ra,20(sp)
  8025d0:	dd000417 	ldw	r20,16(sp)
  8025d4:	dcc00317 	ldw	r19,12(sp)
  8025d8:	dc800217 	ldw	r18,8(sp)
  8025dc:	dc400117 	ldw	r17,4(sp)
  8025e0:	dc000017 	ldw	r16,0(sp)
  8025e4:	dec00604 	addi	sp,sp,24
  8025e8:	f800283a 	ret
  8025ec:	423efb44 	addi	r8,r8,-1043
  8025f0:	053fffc4 	movi	r20,-1
  8025f4:	a228d83a 	srl	r20,r20,r8
  8025f8:	250c703a 	and	r6,r4,r20
  8025fc:	303ff226 	beq	r6,zero,8025c8 <__alt_data_end+0xff8025c8>
  802600:	01a20034 	movhi	r6,34816
  802604:	01df8e34 	movhi	r7,32312
  802608:	319d6704 	addi	r6,r6,30108
  80260c:	39f90f04 	addi	r7,r7,-7108
  802610:	080332c0 	call	80332c <__adddf3>
  802614:	000d883a 	mov	r6,zero
  802618:	000f883a 	mov	r7,zero
  80261c:	1009883a 	mov	r4,r2
  802620:	180b883a 	mov	r5,r3
  802624:	08045480 	call	804548 <__gedf2>
  802628:	00bfe00e 	bge	zero,r2,8025ac <__alt_data_end+0xff8025ac>
  80262c:	80001c16 	blt	r16,zero,8026a0 <floor+0x190>
  802630:	0510303a 	nor	r8,zero,r20
  802634:	9821883a 	mov	r16,r19
  802638:	8a22703a 	and	r17,r17,r8
  80263c:	8805883a 	mov	r2,r17
  802640:	8007883a 	mov	r3,r16
  802644:	003fe106 	br	8025cc <__alt_data_end+0xff8025cc>
  802648:	01a20034 	movhi	r6,34816
  80264c:	01df8e34 	movhi	r7,32312
  802650:	319d6704 	addi	r6,r6,30108
  802654:	39f90f04 	addi	r7,r7,-7108
  802658:	080332c0 	call	80332c <__adddf3>
  80265c:	000d883a 	mov	r6,zero
  802660:	000f883a 	mov	r7,zero
  802664:	1009883a 	mov	r4,r2
  802668:	180b883a 	mov	r5,r3
  80266c:	08045480 	call	804548 <__gedf2>
  802670:	00bfce0e 	bge	zero,r2,8025ac <__alt_data_end+0xff8025ac>
  802674:	80001516 	blt	r16,zero,8026cc <floor+0x1bc>
  802678:	0023883a 	mov	r17,zero
  80267c:	0021883a 	mov	r16,zero
  802680:	003fca06 	br	8025ac <__alt_data_end+0xff8025ac>
  802684:	200d883a 	mov	r6,r4
  802688:	080332c0 	call	80332c <__adddf3>
  80268c:	003fcf06 	br	8025cc <__alt_data_end+0xff8025cc>
  802690:	00800434 	movhi	r2,16
  802694:	14a5d83a 	sra	r18,r2,r18
  802698:	84a7883a 	add	r19,r16,r18
  80269c:	003fc006 	br	8025a0 <__alt_data_end+0xff8025a0>
  8026a0:	00800504 	movi	r2,20
  8026a4:	90801326 	beq	r18,r2,8026f4 <floor+0x1e4>
  8026a8:	00800d04 	movi	r2,52
  8026ac:	14a5c83a 	sub	r18,r2,r18
  8026b0:	00800044 	movi	r2,1
  8026b4:	1484983a 	sll	r2,r2,r18
  8026b8:	1445883a 	add	r2,r2,r17
  8026bc:	14400b2e 	bgeu	r2,r17,8026ec <floor+0x1dc>
  8026c0:	84c00044 	addi	r19,r16,1
  8026c4:	1023883a 	mov	r17,r2
  8026c8:	003fd906 	br	802630 <__alt_data_end+0xff802630>
  8026cc:	00a00034 	movhi	r2,32768
  8026d0:	10bfffc4 	addi	r2,r2,-1
  8026d4:	8084703a 	and	r2,r16,r2
  8026d8:	1462b03a 	or	r17,r2,r17
  8026dc:	883fb326 	beq	r17,zero,8025ac <__alt_data_end+0xff8025ac>
  8026e0:	0023883a 	mov	r17,zero
  8026e4:	042ffc34 	movhi	r16,49136
  8026e8:	003fb006 	br	8025ac <__alt_data_end+0xff8025ac>
  8026ec:	1023883a 	mov	r17,r2
  8026f0:	003fcf06 	br	802630 <__alt_data_end+0xff802630>
  8026f4:	84c00044 	addi	r19,r16,1
  8026f8:	003fcd06 	br	802630 <__alt_data_end+0xff802630>

008026fc <scalbn>:
  8026fc:	2a1ffc2c 	andhi	r8,r5,32752
  802700:	4011d53a 	srai	r8,r8,20
  802704:	defffe04 	addi	sp,sp,-8
  802708:	dc000015 	stw	r16,0(sp)
  80270c:	dfc00115 	stw	ra,4(sp)
  802710:	280f883a 	mov	r7,r5
  802714:	2015883a 	mov	r10,r4
  802718:	3021883a 	mov	r16,r6
  80271c:	40001e1e 	bne	r8,zero,802798 <scalbn+0x9c>
  802720:	00a00034 	movhi	r2,32768
  802724:	10bfffc4 	addi	r2,r2,-1
  802728:	2884703a 	and	r2,r5,r2
  80272c:	1104b03a 	or	r2,r2,r4
  802730:	10002226 	beq	r2,zero,8027bc <scalbn+0xc0>
  802734:	01d0d434 	movhi	r7,17232
  802738:	000d883a 	mov	r6,zero
  80273c:	08046240 	call	804624 <__muldf3>
  802740:	013ffff4 	movhi	r4,65535
  802744:	210f2c04 	addi	r4,r4,15536
  802748:	1015883a 	mov	r10,r2
  80274c:	180f883a 	mov	r7,r3
  802750:	81002a16 	blt	r16,r4,8027fc <scalbn+0x100>
  802754:	191ffc2c 	andhi	r4,r3,32752
  802758:	2009d53a 	srai	r4,r4,20
  80275c:	223ff284 	addi	r8,r4,-54
  802760:	8211883a 	add	r8,r16,r8
  802764:	0081ff84 	movi	r2,2046
  802768:	12002f16 	blt	r2,r8,802828 <scalbn+0x12c>
  80276c:	0200190e 	bge	zero,r8,8027d4 <scalbn+0xd8>
  802770:	4010953a 	slli	r8,r8,20
  802774:	01600434 	movhi	r5,32784
  802778:	297fffc4 	addi	r5,r5,-1
  80277c:	194e703a 	and	r7,r3,r5
  802780:	5005883a 	mov	r2,r10
  802784:	3a06b03a 	or	r3,r7,r8
  802788:	dfc00117 	ldw	ra,4(sp)
  80278c:	dc000017 	ldw	r16,0(sp)
  802790:	dec00204 	addi	sp,sp,8
  802794:	f800283a 	ret
  802798:	0081ffc4 	movi	r2,2047
  80279c:	2807883a 	mov	r3,r5
  8027a0:	40bfef1e 	bne	r8,r2,802760 <__alt_data_end+0xff802760>
  8027a4:	200d883a 	mov	r6,r4
  8027a8:	080332c0 	call	80332c <__adddf3>
  8027ac:	dfc00117 	ldw	ra,4(sp)
  8027b0:	dc000017 	ldw	r16,0(sp)
  8027b4:	dec00204 	addi	sp,sp,8
  8027b8:	f800283a 	ret
  8027bc:	2005883a 	mov	r2,r4
  8027c0:	2807883a 	mov	r3,r5
  8027c4:	dfc00117 	ldw	ra,4(sp)
  8027c8:	dc000017 	ldw	r16,0(sp)
  8027cc:	dec00204 	addi	sp,sp,8
  8027d0:	f800283a 	ret
  8027d4:	00bff2c4 	movi	r2,-53
  8027d8:	4080240e 	bge	r8,r2,80286c <scalbn+0x170>
  8027dc:	00b0d414 	movui	r2,50000
  8027e0:	14001116 	blt	r2,r16,802828 <scalbn+0x12c>
  8027e4:	0130be74 	movhi	r4,49913
  8027e8:	01406974 	movhi	r5,421
  8027ec:	213cd644 	addi	r4,r4,-3239
  8027f0:	295b87c4 	addi	r5,r5,28191
  8027f4:	500d883a 	mov	r6,r10
  8027f8:	08028980 	call	802898 <copysign>
  8027fc:	01b0be74 	movhi	r6,49913
  802800:	01c06974 	movhi	r7,421
  802804:	31bcd644 	addi	r6,r6,-3239
  802808:	39db87c4 	addi	r7,r7,28191
  80280c:	1009883a 	mov	r4,r2
  802810:	180b883a 	mov	r5,r3
  802814:	08046240 	call	804624 <__muldf3>
  802818:	dfc00117 	ldw	ra,4(sp)
  80281c:	dc000017 	ldw	r16,0(sp)
  802820:	dec00204 	addi	sp,sp,8
  802824:	f800283a 	ret
  802828:	01220034 	movhi	r4,34816
  80282c:	015f8e34 	movhi	r5,32312
  802830:	500d883a 	mov	r6,r10
  802834:	211d6704 	addi	r4,r4,30108
  802838:	29790f04 	addi	r5,r5,-7108
  80283c:	08028980 	call	802898 <copysign>
  802840:	01a20034 	movhi	r6,34816
  802844:	01df8e34 	movhi	r7,32312
  802848:	319d6704 	addi	r6,r6,30108
  80284c:	39f90f04 	addi	r7,r7,-7108
  802850:	1009883a 	mov	r4,r2
  802854:	180b883a 	mov	r5,r3
  802858:	08046240 	call	804624 <__muldf3>
  80285c:	dfc00117 	ldw	ra,4(sp)
  802860:	dc000017 	ldw	r16,0(sp)
  802864:	dec00204 	addi	sp,sp,8
  802868:	f800283a 	ret
  80286c:	42000d84 	addi	r8,r8,54
  802870:	4012953a 	slli	r9,r8,20
  802874:	01e00434 	movhi	r7,32784
  802878:	39ffffc4 	addi	r7,r7,-1
  80287c:	19ca703a 	and	r5,r3,r7
  802880:	000d883a 	mov	r6,zero
  802884:	01cf2434 	movhi	r7,15504
  802888:	5009883a 	mov	r4,r10
  80288c:	494ab03a 	or	r5,r9,r5
  802890:	08046240 	call	804624 <__muldf3>
  802894:	003fbc06 	br	802788 <__alt_data_end+0xff802788>

00802898 <copysign>:
  802898:	2005883a 	mov	r2,r4
  80289c:	01200034 	movhi	r4,32768
  8028a0:	213fffc4 	addi	r4,r4,-1
  8028a4:	38e0002c 	andhi	r3,r7,32768
  8028a8:	290a703a 	and	r5,r5,r4
  8028ac:	28c6b03a 	or	r3,r5,r3
  8028b0:	f800283a 	ret

008028b4 <__divsi3>:
  8028b4:	20001b16 	blt	r4,zero,802924 <__divsi3+0x70>
  8028b8:	000f883a 	mov	r7,zero
  8028bc:	28001616 	blt	r5,zero,802918 <__divsi3+0x64>
  8028c0:	200d883a 	mov	r6,r4
  8028c4:	29001a2e 	bgeu	r5,r4,802930 <__divsi3+0x7c>
  8028c8:	00800804 	movi	r2,32
  8028cc:	00c00044 	movi	r3,1
  8028d0:	00000106 	br	8028d8 <__divsi3+0x24>
  8028d4:	10000d26 	beq	r2,zero,80290c <__divsi3+0x58>
  8028d8:	294b883a 	add	r5,r5,r5
  8028dc:	10bfffc4 	addi	r2,r2,-1
  8028e0:	18c7883a 	add	r3,r3,r3
  8028e4:	293ffb36 	bltu	r5,r4,8028d4 <__alt_data_end+0xff8028d4>
  8028e8:	0005883a 	mov	r2,zero
  8028ec:	18000726 	beq	r3,zero,80290c <__divsi3+0x58>
  8028f0:	0005883a 	mov	r2,zero
  8028f4:	31400236 	bltu	r6,r5,802900 <__divsi3+0x4c>
  8028f8:	314dc83a 	sub	r6,r6,r5
  8028fc:	10c4b03a 	or	r2,r2,r3
  802900:	1806d07a 	srli	r3,r3,1
  802904:	280ad07a 	srli	r5,r5,1
  802908:	183ffa1e 	bne	r3,zero,8028f4 <__alt_data_end+0xff8028f4>
  80290c:	38000126 	beq	r7,zero,802914 <__divsi3+0x60>
  802910:	0085c83a 	sub	r2,zero,r2
  802914:	f800283a 	ret
  802918:	014bc83a 	sub	r5,zero,r5
  80291c:	39c0005c 	xori	r7,r7,1
  802920:	003fe706 	br	8028c0 <__alt_data_end+0xff8028c0>
  802924:	0109c83a 	sub	r4,zero,r4
  802928:	01c00044 	movi	r7,1
  80292c:	003fe306 	br	8028bc <__alt_data_end+0xff8028bc>
  802930:	00c00044 	movi	r3,1
  802934:	003fee06 	br	8028f0 <__alt_data_end+0xff8028f0>

00802938 <__modsi3>:
  802938:	20001716 	blt	r4,zero,802998 <__modsi3+0x60>
  80293c:	000f883a 	mov	r7,zero
  802940:	2005883a 	mov	r2,r4
  802944:	28001216 	blt	r5,zero,802990 <__modsi3+0x58>
  802948:	2900162e 	bgeu	r5,r4,8029a4 <__modsi3+0x6c>
  80294c:	01800804 	movi	r6,32
  802950:	00c00044 	movi	r3,1
  802954:	00000106 	br	80295c <__modsi3+0x24>
  802958:	30000a26 	beq	r6,zero,802984 <__modsi3+0x4c>
  80295c:	294b883a 	add	r5,r5,r5
  802960:	31bfffc4 	addi	r6,r6,-1
  802964:	18c7883a 	add	r3,r3,r3
  802968:	293ffb36 	bltu	r5,r4,802958 <__alt_data_end+0xff802958>
  80296c:	18000526 	beq	r3,zero,802984 <__modsi3+0x4c>
  802970:	1806d07a 	srli	r3,r3,1
  802974:	11400136 	bltu	r2,r5,80297c <__modsi3+0x44>
  802978:	1145c83a 	sub	r2,r2,r5
  80297c:	280ad07a 	srli	r5,r5,1
  802980:	183ffb1e 	bne	r3,zero,802970 <__alt_data_end+0xff802970>
  802984:	38000126 	beq	r7,zero,80298c <__modsi3+0x54>
  802988:	0085c83a 	sub	r2,zero,r2
  80298c:	f800283a 	ret
  802990:	014bc83a 	sub	r5,zero,r5
  802994:	003fec06 	br	802948 <__alt_data_end+0xff802948>
  802998:	0109c83a 	sub	r4,zero,r4
  80299c:	01c00044 	movi	r7,1
  8029a0:	003fe706 	br	802940 <__alt_data_end+0xff802940>
  8029a4:	00c00044 	movi	r3,1
  8029a8:	003ff106 	br	802970 <__alt_data_end+0xff802970>

008029ac <__udivsi3>:
  8029ac:	200d883a 	mov	r6,r4
  8029b0:	2900152e 	bgeu	r5,r4,802a08 <__udivsi3+0x5c>
  8029b4:	28001416 	blt	r5,zero,802a08 <__udivsi3+0x5c>
  8029b8:	00800804 	movi	r2,32
  8029bc:	00c00044 	movi	r3,1
  8029c0:	00000206 	br	8029cc <__udivsi3+0x20>
  8029c4:	10000e26 	beq	r2,zero,802a00 <__udivsi3+0x54>
  8029c8:	28000516 	blt	r5,zero,8029e0 <__udivsi3+0x34>
  8029cc:	294b883a 	add	r5,r5,r5
  8029d0:	10bfffc4 	addi	r2,r2,-1
  8029d4:	18c7883a 	add	r3,r3,r3
  8029d8:	293ffa36 	bltu	r5,r4,8029c4 <__alt_data_end+0xff8029c4>
  8029dc:	18000826 	beq	r3,zero,802a00 <__udivsi3+0x54>
  8029e0:	0005883a 	mov	r2,zero
  8029e4:	31400236 	bltu	r6,r5,8029f0 <__udivsi3+0x44>
  8029e8:	314dc83a 	sub	r6,r6,r5
  8029ec:	10c4b03a 	or	r2,r2,r3
  8029f0:	1806d07a 	srli	r3,r3,1
  8029f4:	280ad07a 	srli	r5,r5,1
  8029f8:	183ffa1e 	bne	r3,zero,8029e4 <__alt_data_end+0xff8029e4>
  8029fc:	f800283a 	ret
  802a00:	0005883a 	mov	r2,zero
  802a04:	f800283a 	ret
  802a08:	00c00044 	movi	r3,1
  802a0c:	003ff406 	br	8029e0 <__alt_data_end+0xff8029e0>

00802a10 <__umodsi3>:
  802a10:	2005883a 	mov	r2,r4
  802a14:	2900122e 	bgeu	r5,r4,802a60 <__umodsi3+0x50>
  802a18:	28001116 	blt	r5,zero,802a60 <__umodsi3+0x50>
  802a1c:	01800804 	movi	r6,32
  802a20:	00c00044 	movi	r3,1
  802a24:	00000206 	br	802a30 <__umodsi3+0x20>
  802a28:	30000c26 	beq	r6,zero,802a5c <__umodsi3+0x4c>
  802a2c:	28000516 	blt	r5,zero,802a44 <__umodsi3+0x34>
  802a30:	294b883a 	add	r5,r5,r5
  802a34:	31bfffc4 	addi	r6,r6,-1
  802a38:	18c7883a 	add	r3,r3,r3
  802a3c:	293ffa36 	bltu	r5,r4,802a28 <__alt_data_end+0xff802a28>
  802a40:	18000626 	beq	r3,zero,802a5c <__umodsi3+0x4c>
  802a44:	1806d07a 	srli	r3,r3,1
  802a48:	11400136 	bltu	r2,r5,802a50 <__umodsi3+0x40>
  802a4c:	1145c83a 	sub	r2,r2,r5
  802a50:	280ad07a 	srli	r5,r5,1
  802a54:	183ffb1e 	bne	r3,zero,802a44 <__alt_data_end+0xff802a44>
  802a58:	f800283a 	ret
  802a5c:	f800283a 	ret
  802a60:	00c00044 	movi	r3,1
  802a64:	003ff706 	br	802a44 <__alt_data_end+0xff802a44>

00802a68 <__addsf3>:
  802a68:	defffc04 	addi	sp,sp,-16
  802a6c:	2004d7fa 	srli	r2,r4,31
  802a70:	280cd5fa 	srli	r6,r5,23
  802a74:	dc000015 	stw	r16,0(sp)
  802a78:	00c02034 	movhi	r3,128
  802a7c:	2020d5fa 	srli	r16,r4,23
  802a80:	280ed7fa 	srli	r7,r5,31
  802a84:	18ffffc4 	addi	r3,r3,-1
  802a88:	dc400115 	stw	r17,4(sp)
  802a8c:	1908703a 	and	r4,r3,r4
  802a90:	194a703a 	and	r5,r3,r5
  802a94:	dfc00315 	stw	ra,12(sp)
  802a98:	dc800215 	stw	r18,8(sp)
  802a9c:	14403fcc 	andi	r17,r2,255
  802aa0:	84003fcc 	andi	r16,r16,255
  802aa4:	200890fa 	slli	r4,r4,3
  802aa8:	31803fcc 	andi	r6,r6,255
  802aac:	280a90fa 	slli	r5,r5,3
  802ab0:	89c05026 	beq	r17,r7,802bf4 <__addsf3+0x18c>
  802ab4:	8185c83a 	sub	r2,r16,r6
  802ab8:	00807a0e 	bge	zero,r2,802ca4 <__addsf3+0x23c>
  802abc:	30001e1e 	bne	r6,zero,802b38 <__addsf3+0xd0>
  802ac0:	28006d1e 	bne	r5,zero,802c78 <__addsf3+0x210>
  802ac4:	208001cc 	andi	r2,r4,7
  802ac8:	10000426 	beq	r2,zero,802adc <__addsf3+0x74>
  802acc:	208003cc 	andi	r2,r4,15
  802ad0:	00c00104 	movi	r3,4
  802ad4:	10c00126 	beq	r2,r3,802adc <__addsf3+0x74>
  802ad8:	20c9883a 	add	r4,r4,r3
  802adc:	2081002c 	andhi	r2,r4,1024
  802ae0:	10003926 	beq	r2,zero,802bc8 <__addsf3+0x160>
  802ae4:	84000044 	addi	r16,r16,1
  802ae8:	00803fc4 	movi	r2,255
  802aec:	80807826 	beq	r16,r2,802cd0 <__addsf3+0x268>
  802af0:	200891ba 	slli	r4,r4,6
  802af4:	8805883a 	mov	r2,r17
  802af8:	2008d27a 	srli	r4,r4,9
  802afc:	84003fcc 	andi	r16,r16,255
  802b00:	800695fa 	slli	r3,r16,23
  802b04:	10803fcc 	andi	r2,r2,255
  802b08:	04002034 	movhi	r16,128
  802b0c:	843fffc4 	addi	r16,r16,-1
  802b10:	100497fa 	slli	r2,r2,31
  802b14:	2408703a 	and	r4,r4,r16
  802b18:	20e0b03a 	or	r16,r4,r3
  802b1c:	8084b03a 	or	r2,r16,r2
  802b20:	dfc00317 	ldw	ra,12(sp)
  802b24:	dc800217 	ldw	r18,8(sp)
  802b28:	dc400117 	ldw	r17,4(sp)
  802b2c:	dc000017 	ldw	r16,0(sp)
  802b30:	dec00404 	addi	sp,sp,16
  802b34:	f800283a 	ret
  802b38:	00c03fc4 	movi	r3,255
  802b3c:	80ffe126 	beq	r16,r3,802ac4 <__alt_data_end+0xff802ac4>
  802b40:	29410034 	orhi	r5,r5,1024
  802b44:	00c006c4 	movi	r3,27
  802b48:	18807516 	blt	r3,r2,802d20 <__addsf3+0x2b8>
  802b4c:	00c00804 	movi	r3,32
  802b50:	1887c83a 	sub	r3,r3,r2
  802b54:	28c6983a 	sll	r3,r5,r3
  802b58:	288ad83a 	srl	r5,r5,r2
  802b5c:	1804c03a 	cmpne	r2,r3,zero
  802b60:	288ab03a 	or	r5,r5,r2
  802b64:	2149c83a 	sub	r4,r4,r5
  802b68:	2081002c 	andhi	r2,r4,1024
  802b6c:	10001426 	beq	r2,zero,802bc0 <__addsf3+0x158>
  802b70:	04810034 	movhi	r18,1024
  802b74:	94bfffc4 	addi	r18,r18,-1
  802b78:	24a4703a 	and	r18,r4,r18
  802b7c:	9009883a 	mov	r4,r18
  802b80:	0805a4c0 	call	805a4c <__clzsi2>
  802b84:	10bffec4 	addi	r2,r2,-5
  802b88:	90a4983a 	sll	r18,r18,r2
  802b8c:	14005416 	blt	r2,r16,802ce0 <__addsf3+0x278>
  802b90:	1405c83a 	sub	r2,r2,r16
  802b94:	11000044 	addi	r4,r2,1
  802b98:	00800804 	movi	r2,32
  802b9c:	1105c83a 	sub	r2,r2,r4
  802ba0:	9084983a 	sll	r2,r18,r2
  802ba4:	9124d83a 	srl	r18,r18,r4
  802ba8:	0021883a 	mov	r16,zero
  802bac:	1008c03a 	cmpne	r4,r2,zero
  802bb0:	9108b03a 	or	r4,r18,r4
  802bb4:	003fc306 	br	802ac4 <__alt_data_end+0xff802ac4>
  802bb8:	1000db26 	beq	r2,zero,802f28 <__addsf3+0x4c0>
  802bbc:	1009883a 	mov	r4,r2
  802bc0:	208001cc 	andi	r2,r4,7
  802bc4:	103fc11e 	bne	r2,zero,802acc <__alt_data_end+0xff802acc>
  802bc8:	2006d0fa 	srli	r3,r4,3
  802bcc:	01003fc4 	movi	r4,255
  802bd0:	8805883a 	mov	r2,r17
  802bd4:	8100241e 	bne	r16,r4,802c68 <__addsf3+0x200>
  802bd8:	18006e26 	beq	r3,zero,802d94 <__addsf3+0x32c>
  802bdc:	19001034 	orhi	r4,r3,64
  802be0:	00c02034 	movhi	r3,128
  802be4:	18ffffc4 	addi	r3,r3,-1
  802be8:	043fffc4 	movi	r16,-1
  802bec:	20c8703a 	and	r4,r4,r3
  802bf0:	003fc206 	br	802afc <__alt_data_end+0xff802afc>
  802bf4:	8187c83a 	sub	r3,r16,r6
  802bf8:	00c03e0e 	bge	zero,r3,802cf4 <__addsf3+0x28c>
  802bfc:	30002326 	beq	r6,zero,802c8c <__addsf3+0x224>
  802c00:	01803fc4 	movi	r6,255
  802c04:	81bfaf26 	beq	r16,r6,802ac4 <__alt_data_end+0xff802ac4>
  802c08:	29410034 	orhi	r5,r5,1024
  802c0c:	018006c4 	movi	r6,27
  802c10:	30c07416 	blt	r6,r3,802de4 <__addsf3+0x37c>
  802c14:	01800804 	movi	r6,32
  802c18:	30cdc83a 	sub	r6,r6,r3
  802c1c:	298c983a 	sll	r6,r5,r6
  802c20:	28cad83a 	srl	r5,r5,r3
  802c24:	3006c03a 	cmpne	r3,r6,zero
  802c28:	28cab03a 	or	r5,r5,r3
  802c2c:	2149883a 	add	r4,r4,r5
  802c30:	20c1002c 	andhi	r3,r4,1024
  802c34:	183fe226 	beq	r3,zero,802bc0 <__alt_data_end+0xff802bc0>
  802c38:	84000044 	addi	r16,r16,1
  802c3c:	00c03fc4 	movi	r3,255
  802c40:	80c05426 	beq	r16,r3,802d94 <__addsf3+0x32c>
  802c44:	00bf0034 	movhi	r2,64512
  802c48:	10bfffc4 	addi	r2,r2,-1
  802c4c:	20c0004c 	andi	r3,r4,1
  802c50:	2088703a 	and	r4,r4,r2
  802c54:	2008d07a 	srli	r4,r4,1
  802c58:	20c8b03a 	or	r4,r4,r3
  802c5c:	003f9906 	br	802ac4 <__alt_data_end+0xff802ac4>
  802c60:	0007883a 	mov	r3,zero
  802c64:	0005883a 	mov	r2,zero
  802c68:	01002034 	movhi	r4,128
  802c6c:	213fffc4 	addi	r4,r4,-1
  802c70:	1908703a 	and	r4,r3,r4
  802c74:	003fa106 	br	802afc <__alt_data_end+0xff802afc>
  802c78:	10bfffc4 	addi	r2,r2,-1
  802c7c:	103fb926 	beq	r2,zero,802b64 <__alt_data_end+0xff802b64>
  802c80:	00c03fc4 	movi	r3,255
  802c84:	80ffaf1e 	bne	r16,r3,802b44 <__alt_data_end+0xff802b44>
  802c88:	003f8e06 	br	802ac4 <__alt_data_end+0xff802ac4>
  802c8c:	283f8d26 	beq	r5,zero,802ac4 <__alt_data_end+0xff802ac4>
  802c90:	18ffffc4 	addi	r3,r3,-1
  802c94:	183fe526 	beq	r3,zero,802c2c <__alt_data_end+0xff802c2c>
  802c98:	01803fc4 	movi	r6,255
  802c9c:	81bfdb1e 	bne	r16,r6,802c0c <__alt_data_end+0xff802c0c>
  802ca0:	003f8806 	br	802ac4 <__alt_data_end+0xff802ac4>
  802ca4:	1000201e 	bne	r2,zero,802d28 <__addsf3+0x2c0>
  802ca8:	80800044 	addi	r2,r16,1
  802cac:	10803fcc 	andi	r2,r2,255
  802cb0:	01800044 	movi	r6,1
  802cb4:	3080450e 	bge	r6,r2,802dcc <__addsf3+0x364>
  802cb8:	2165c83a 	sub	r18,r4,r5
  802cbc:	90c1002c 	andhi	r3,r18,1024
  802cc0:	18002b26 	beq	r3,zero,802d70 <__addsf3+0x308>
  802cc4:	2925c83a 	sub	r18,r5,r4
  802cc8:	3823883a 	mov	r17,r7
  802ccc:	003fab06 	br	802b7c <__alt_data_end+0xff802b7c>
  802cd0:	8805883a 	mov	r2,r17
  802cd4:	043fffc4 	movi	r16,-1
  802cd8:	0009883a 	mov	r4,zero
  802cdc:	003f8706 	br	802afc <__alt_data_end+0xff802afc>
  802ce0:	013f0034 	movhi	r4,64512
  802ce4:	213fffc4 	addi	r4,r4,-1
  802ce8:	80a1c83a 	sub	r16,r16,r2
  802cec:	9108703a 	and	r4,r18,r4
  802cf0:	003f7406 	br	802ac4 <__alt_data_end+0xff802ac4>
  802cf4:	1800411e 	bne	r3,zero,802dfc <__addsf3+0x394>
  802cf8:	80c00044 	addi	r3,r16,1
  802cfc:	19c03fcc 	andi	r7,r3,255
  802d00:	01800044 	movi	r6,1
  802d04:	31c0260e 	bge	r6,r7,802da0 <__addsf3+0x338>
  802d08:	01803fc4 	movi	r6,255
  802d0c:	19802126 	beq	r3,r6,802d94 <__addsf3+0x32c>
  802d10:	2149883a 	add	r4,r4,r5
  802d14:	2008d07a 	srli	r4,r4,1
  802d18:	1821883a 	mov	r16,r3
  802d1c:	003f6906 	br	802ac4 <__alt_data_end+0xff802ac4>
  802d20:	01400044 	movi	r5,1
  802d24:	003f8f06 	br	802b64 <__alt_data_end+0xff802b64>
  802d28:	8000151e 	bne	r16,zero,802d80 <__addsf3+0x318>
  802d2c:	20002f26 	beq	r4,zero,802dec <__addsf3+0x384>
  802d30:	0084303a 	nor	r2,zero,r2
  802d34:	10000a26 	beq	r2,zero,802d60 <__addsf3+0x2f8>
  802d38:	00c03fc4 	movi	r3,255
  802d3c:	30c02b26 	beq	r6,r3,802dec <__addsf3+0x384>
  802d40:	00c006c4 	movi	r3,27
  802d44:	18806d16 	blt	r3,r2,802efc <__addsf3+0x494>
  802d48:	00c00804 	movi	r3,32
  802d4c:	1887c83a 	sub	r3,r3,r2
  802d50:	20c6983a 	sll	r3,r4,r3
  802d54:	2084d83a 	srl	r2,r4,r2
  802d58:	1808c03a 	cmpne	r4,r3,zero
  802d5c:	1108b03a 	or	r4,r2,r4
  802d60:	2909c83a 	sub	r4,r5,r4
  802d64:	3021883a 	mov	r16,r6
  802d68:	3823883a 	mov	r17,r7
  802d6c:	003f7e06 	br	802b68 <__alt_data_end+0xff802b68>
  802d70:	903f821e 	bne	r18,zero,802b7c <__alt_data_end+0xff802b7c>
  802d74:	0005883a 	mov	r2,zero
  802d78:	0021883a 	mov	r16,zero
  802d7c:	003fba06 	br	802c68 <__alt_data_end+0xff802c68>
  802d80:	00c03fc4 	movi	r3,255
  802d84:	30c01926 	beq	r6,r3,802dec <__addsf3+0x384>
  802d88:	0085c83a 	sub	r2,zero,r2
  802d8c:	21010034 	orhi	r4,r4,1024
  802d90:	003feb06 	br	802d40 <__alt_data_end+0xff802d40>
  802d94:	043fffc4 	movi	r16,-1
  802d98:	0009883a 	mov	r4,zero
  802d9c:	003f5706 	br	802afc <__alt_data_end+0xff802afc>
  802da0:	80004a1e 	bne	r16,zero,802ecc <__addsf3+0x464>
  802da4:	20005926 	beq	r4,zero,802f0c <__addsf3+0x4a4>
  802da8:	283f4626 	beq	r5,zero,802ac4 <__alt_data_end+0xff802ac4>
  802dac:	2149883a 	add	r4,r4,r5
  802db0:	2081002c 	andhi	r2,r4,1024
  802db4:	103f8226 	beq	r2,zero,802bc0 <__alt_data_end+0xff802bc0>
  802db8:	00bf0034 	movhi	r2,64512
  802dbc:	10bfffc4 	addi	r2,r2,-1
  802dc0:	3021883a 	mov	r16,r6
  802dc4:	2088703a 	and	r4,r4,r2
  802dc8:	003f3e06 	br	802ac4 <__alt_data_end+0xff802ac4>
  802dcc:	8000121e 	bne	r16,zero,802e18 <__addsf3+0x3b0>
  802dd0:	2000261e 	bne	r4,zero,802e6c <__addsf3+0x404>
  802dd4:	283fa226 	beq	r5,zero,802c60 <__alt_data_end+0xff802c60>
  802dd8:	2809883a 	mov	r4,r5
  802ddc:	3823883a 	mov	r17,r7
  802de0:	003f3806 	br	802ac4 <__alt_data_end+0xff802ac4>
  802de4:	01400044 	movi	r5,1
  802de8:	003f9006 	br	802c2c <__alt_data_end+0xff802c2c>
  802dec:	2809883a 	mov	r4,r5
  802df0:	3021883a 	mov	r16,r6
  802df4:	3823883a 	mov	r17,r7
  802df8:	003f3206 	br	802ac4 <__alt_data_end+0xff802ac4>
  802dfc:	80000c1e 	bne	r16,zero,802e30 <__addsf3+0x3c8>
  802e00:	20002f26 	beq	r4,zero,802ec0 <__addsf3+0x458>
  802e04:	00c6303a 	nor	r3,zero,r3
  802e08:	18002b1e 	bne	r3,zero,802eb8 <__addsf3+0x450>
  802e0c:	2149883a 	add	r4,r4,r5
  802e10:	3021883a 	mov	r16,r6
  802e14:	003f8606 	br	802c30 <__alt_data_end+0xff802c30>
  802e18:	20001b1e 	bne	r4,zero,802e88 <__addsf3+0x420>
  802e1c:	28003926 	beq	r5,zero,802f04 <__addsf3+0x49c>
  802e20:	2809883a 	mov	r4,r5
  802e24:	3823883a 	mov	r17,r7
  802e28:	04003fc4 	movi	r16,255
  802e2c:	003f2506 	br	802ac4 <__alt_data_end+0xff802ac4>
  802e30:	01c03fc4 	movi	r7,255
  802e34:	31c02226 	beq	r6,r7,802ec0 <__addsf3+0x458>
  802e38:	00c7c83a 	sub	r3,zero,r3
  802e3c:	21010034 	orhi	r4,r4,1024
  802e40:	01c006c4 	movi	r7,27
  802e44:	38c03616 	blt	r7,r3,802f20 <__addsf3+0x4b8>
  802e48:	01c00804 	movi	r7,32
  802e4c:	38cfc83a 	sub	r7,r7,r3
  802e50:	21ce983a 	sll	r7,r4,r7
  802e54:	20c6d83a 	srl	r3,r4,r3
  802e58:	3808c03a 	cmpne	r4,r7,zero
  802e5c:	1906b03a 	or	r3,r3,r4
  802e60:	1949883a 	add	r4,r3,r5
  802e64:	3021883a 	mov	r16,r6
  802e68:	003f7106 	br	802c30 <__alt_data_end+0xff802c30>
  802e6c:	283f1526 	beq	r5,zero,802ac4 <__alt_data_end+0xff802ac4>
  802e70:	2145c83a 	sub	r2,r4,r5
  802e74:	10c1002c 	andhi	r3,r2,1024
  802e78:	183f4f26 	beq	r3,zero,802bb8 <__alt_data_end+0xff802bb8>
  802e7c:	2909c83a 	sub	r4,r5,r4
  802e80:	3823883a 	mov	r17,r7
  802e84:	003f0f06 	br	802ac4 <__alt_data_end+0xff802ac4>
  802e88:	28001a26 	beq	r5,zero,802ef4 <__addsf3+0x48c>
  802e8c:	2008d0fa 	srli	r4,r4,3
  802e90:	2080102c 	andhi	r2,r4,64
  802e94:	10000526 	beq	r2,zero,802eac <__addsf3+0x444>
  802e98:	280ad0fa 	srli	r5,r5,3
  802e9c:	2880102c 	andhi	r2,r5,64
  802ea0:	1000021e 	bne	r2,zero,802eac <__addsf3+0x444>
  802ea4:	2809883a 	mov	r4,r5
  802ea8:	3823883a 	mov	r17,r7
  802eac:	200890fa 	slli	r4,r4,3
  802eb0:	04003fc4 	movi	r16,255
  802eb4:	003f0306 	br	802ac4 <__alt_data_end+0xff802ac4>
  802eb8:	01c03fc4 	movi	r7,255
  802ebc:	31ffe01e 	bne	r6,r7,802e40 <__alt_data_end+0xff802e40>
  802ec0:	2809883a 	mov	r4,r5
  802ec4:	3021883a 	mov	r16,r6
  802ec8:	003efe06 	br	802ac4 <__alt_data_end+0xff802ac4>
  802ecc:	20001126 	beq	r4,zero,802f14 <__addsf3+0x4ac>
  802ed0:	28000826 	beq	r5,zero,802ef4 <__addsf3+0x48c>
  802ed4:	2008d0fa 	srli	r4,r4,3
  802ed8:	2080102c 	andhi	r2,r4,64
  802edc:	103ff326 	beq	r2,zero,802eac <__alt_data_end+0xff802eac>
  802ee0:	280ad0fa 	srli	r5,r5,3
  802ee4:	2880102c 	andhi	r2,r5,64
  802ee8:	103ff01e 	bne	r2,zero,802eac <__alt_data_end+0xff802eac>
  802eec:	2809883a 	mov	r4,r5
  802ef0:	003fee06 	br	802eac <__alt_data_end+0xff802eac>
  802ef4:	04003fc4 	movi	r16,255
  802ef8:	003ef206 	br	802ac4 <__alt_data_end+0xff802ac4>
  802efc:	01000044 	movi	r4,1
  802f00:	003f9706 	br	802d60 <__alt_data_end+0xff802d60>
  802f04:	0005883a 	mov	r2,zero
  802f08:	003f3406 	br	802bdc <__alt_data_end+0xff802bdc>
  802f0c:	2809883a 	mov	r4,r5
  802f10:	003eec06 	br	802ac4 <__alt_data_end+0xff802ac4>
  802f14:	2809883a 	mov	r4,r5
  802f18:	04003fc4 	movi	r16,255
  802f1c:	003ee906 	br	802ac4 <__alt_data_end+0xff802ac4>
  802f20:	00c00044 	movi	r3,1
  802f24:	003fce06 	br	802e60 <__alt_data_end+0xff802e60>
  802f28:	0005883a 	mov	r2,zero
  802f2c:	003f4e06 	br	802c68 <__alt_data_end+0xff802c68>

00802f30 <__mulsf3>:
  802f30:	defff504 	addi	sp,sp,-44
  802f34:	dc000115 	stw	r16,4(sp)
  802f38:	2020d5fa 	srli	r16,r4,23
  802f3c:	dd400615 	stw	r21,24(sp)
  802f40:	202ad7fa 	srli	r21,r4,31
  802f44:	dc800315 	stw	r18,12(sp)
  802f48:	04802034 	movhi	r18,128
  802f4c:	df000915 	stw	fp,36(sp)
  802f50:	dd000515 	stw	r20,20(sp)
  802f54:	94bfffc4 	addi	r18,r18,-1
  802f58:	dfc00a15 	stw	ra,40(sp)
  802f5c:	ddc00815 	stw	r23,32(sp)
  802f60:	dd800715 	stw	r22,28(sp)
  802f64:	dcc00415 	stw	r19,16(sp)
  802f68:	dc400215 	stw	r17,8(sp)
  802f6c:	84003fcc 	andi	r16,r16,255
  802f70:	9124703a 	and	r18,r18,r4
  802f74:	a829883a 	mov	r20,r21
  802f78:	af003fcc 	andi	fp,r21,255
  802f7c:	80005426 	beq	r16,zero,8030d0 <__mulsf3+0x1a0>
  802f80:	00803fc4 	movi	r2,255
  802f84:	80802f26 	beq	r16,r2,803044 <__mulsf3+0x114>
  802f88:	91002034 	orhi	r4,r18,128
  802f8c:	202490fa 	slli	r18,r4,3
  802f90:	843fe044 	addi	r16,r16,-127
  802f94:	0023883a 	mov	r17,zero
  802f98:	002f883a 	mov	r23,zero
  802f9c:	2804d5fa 	srli	r2,r5,23
  802fa0:	282cd7fa 	srli	r22,r5,31
  802fa4:	01002034 	movhi	r4,128
  802fa8:	213fffc4 	addi	r4,r4,-1
  802fac:	10803fcc 	andi	r2,r2,255
  802fb0:	2166703a 	and	r19,r4,r5
  802fb4:	b1803fcc 	andi	r6,r22,255
  802fb8:	10004c26 	beq	r2,zero,8030ec <__mulsf3+0x1bc>
  802fbc:	00c03fc4 	movi	r3,255
  802fc0:	10c04726 	beq	r2,r3,8030e0 <__mulsf3+0x1b0>
  802fc4:	99002034 	orhi	r4,r19,128
  802fc8:	202690fa 	slli	r19,r4,3
  802fcc:	10bfe044 	addi	r2,r2,-127
  802fd0:	0007883a 	mov	r3,zero
  802fd4:	80a1883a 	add	r16,r16,r2
  802fd8:	010003c4 	movi	r4,15
  802fdc:	1c44b03a 	or	r2,r3,r17
  802fe0:	b56af03a 	xor	r21,r22,r21
  802fe4:	81c00044 	addi	r7,r16,1
  802fe8:	20806b36 	bltu	r4,r2,803198 <__mulsf3+0x268>
  802fec:	100490ba 	slli	r2,r2,2
  802ff0:	01002034 	movhi	r4,128
  802ff4:	210c0104 	addi	r4,r4,12292
  802ff8:	1105883a 	add	r2,r2,r4
  802ffc:	10800017 	ldw	r2,0(r2)
  803000:	1000683a 	jmp	r2
  803004:	00803198 	cmpnei	r2,zero,198
  803008:	00803058 	cmpnei	r2,zero,193
  80300c:	00803058 	cmpnei	r2,zero,193
  803010:	00803054 	movui	r2,193
  803014:	0080317c 	xorhi	r2,zero,197
  803018:	0080317c 	xorhi	r2,zero,197
  80301c:	00803168 	cmpgeui	r2,zero,197
  803020:	00803054 	movui	r2,193
  803024:	0080317c 	xorhi	r2,zero,197
  803028:	00803168 	cmpgeui	r2,zero,197
  80302c:	0080317c 	xorhi	r2,zero,197
  803030:	00803054 	movui	r2,193
  803034:	00803188 	cmpgei	r2,zero,198
  803038:	00803188 	cmpgei	r2,zero,198
  80303c:	00803188 	cmpgei	r2,zero,198
  803040:	00803264 	muli	r2,zero,201
  803044:	90003b1e 	bne	r18,zero,803134 <__mulsf3+0x204>
  803048:	04400204 	movi	r17,8
  80304c:	05c00084 	movi	r23,2
  803050:	003fd206 	br	802f9c <__alt_data_end+0xff802f9c>
  803054:	302b883a 	mov	r21,r6
  803058:	00800084 	movi	r2,2
  80305c:	18802626 	beq	r3,r2,8030f8 <__mulsf3+0x1c8>
  803060:	008000c4 	movi	r2,3
  803064:	1880ab26 	beq	r3,r2,803314 <__mulsf3+0x3e4>
  803068:	00800044 	movi	r2,1
  80306c:	1880a21e 	bne	r3,r2,8032f8 <__mulsf3+0x3c8>
  803070:	a829883a 	mov	r20,r21
  803074:	0007883a 	mov	r3,zero
  803078:	0009883a 	mov	r4,zero
  80307c:	18803fcc 	andi	r2,r3,255
  803080:	100695fa 	slli	r3,r2,23
  803084:	a0803fcc 	andi	r2,r20,255
  803088:	100a97fa 	slli	r5,r2,31
  80308c:	00802034 	movhi	r2,128
  803090:	10bfffc4 	addi	r2,r2,-1
  803094:	2084703a 	and	r2,r4,r2
  803098:	10c4b03a 	or	r2,r2,r3
  80309c:	1144b03a 	or	r2,r2,r5
  8030a0:	dfc00a17 	ldw	ra,40(sp)
  8030a4:	df000917 	ldw	fp,36(sp)
  8030a8:	ddc00817 	ldw	r23,32(sp)
  8030ac:	dd800717 	ldw	r22,28(sp)
  8030b0:	dd400617 	ldw	r21,24(sp)
  8030b4:	dd000517 	ldw	r20,20(sp)
  8030b8:	dcc00417 	ldw	r19,16(sp)
  8030bc:	dc800317 	ldw	r18,12(sp)
  8030c0:	dc400217 	ldw	r17,8(sp)
  8030c4:	dc000117 	ldw	r16,4(sp)
  8030c8:	dec00b04 	addi	sp,sp,44
  8030cc:	f800283a 	ret
  8030d0:	90000d1e 	bne	r18,zero,803108 <__mulsf3+0x1d8>
  8030d4:	04400104 	movi	r17,4
  8030d8:	05c00044 	movi	r23,1
  8030dc:	003faf06 	br	802f9c <__alt_data_end+0xff802f9c>
  8030e0:	9806c03a 	cmpne	r3,r19,zero
  8030e4:	18c00084 	addi	r3,r3,2
  8030e8:	003fba06 	br	802fd4 <__alt_data_end+0xff802fd4>
  8030ec:	9800141e 	bne	r19,zero,803140 <__mulsf3+0x210>
  8030f0:	00c00044 	movi	r3,1
  8030f4:	003fb706 	br	802fd4 <__alt_data_end+0xff802fd4>
  8030f8:	a829883a 	mov	r20,r21
  8030fc:	00ffffc4 	movi	r3,-1
  803100:	0009883a 	mov	r4,zero
  803104:	003fdd06 	br	80307c <__alt_data_end+0xff80307c>
  803108:	9009883a 	mov	r4,r18
  80310c:	d9400015 	stw	r5,0(sp)
  803110:	0805a4c0 	call	805a4c <__clzsi2>
  803114:	10fffec4 	addi	r3,r2,-5
  803118:	10801d84 	addi	r2,r2,118
  80311c:	90e4983a 	sll	r18,r18,r3
  803120:	00a1c83a 	sub	r16,zero,r2
  803124:	0023883a 	mov	r17,zero
  803128:	002f883a 	mov	r23,zero
  80312c:	d9400017 	ldw	r5,0(sp)
  803130:	003f9a06 	br	802f9c <__alt_data_end+0xff802f9c>
  803134:	04400304 	movi	r17,12
  803138:	05c000c4 	movi	r23,3
  80313c:	003f9706 	br	802f9c <__alt_data_end+0xff802f9c>
  803140:	9809883a 	mov	r4,r19
  803144:	d9800015 	stw	r6,0(sp)
  803148:	0805a4c0 	call	805a4c <__clzsi2>
  80314c:	10fffec4 	addi	r3,r2,-5
  803150:	10801d84 	addi	r2,r2,118
  803154:	98e6983a 	sll	r19,r19,r3
  803158:	0085c83a 	sub	r2,zero,r2
  80315c:	0007883a 	mov	r3,zero
  803160:	d9800017 	ldw	r6,0(sp)
  803164:	003f9b06 	br	802fd4 <__alt_data_end+0xff802fd4>
  803168:	01002034 	movhi	r4,128
  80316c:	0029883a 	mov	r20,zero
  803170:	213fffc4 	addi	r4,r4,-1
  803174:	00ffffc4 	movi	r3,-1
  803178:	003fc006 	br	80307c <__alt_data_end+0xff80307c>
  80317c:	9027883a 	mov	r19,r18
  803180:	b807883a 	mov	r3,r23
  803184:	003fb406 	br	803058 <__alt_data_end+0xff803058>
  803188:	9027883a 	mov	r19,r18
  80318c:	e02b883a 	mov	r21,fp
  803190:	b807883a 	mov	r3,r23
  803194:	003fb006 	br	803058 <__alt_data_end+0xff803058>
  803198:	9004d43a 	srli	r2,r18,16
  80319c:	9810d43a 	srli	r8,r19,16
  8031a0:	94bfffcc 	andi	r18,r18,65535
  8031a4:	993fffcc 	andi	r4,r19,65535
  8031a8:	910d383a 	mul	r6,r18,r4
  8031ac:	20a7383a 	mul	r19,r4,r2
  8031b0:	9225383a 	mul	r18,r18,r8
  8031b4:	3006d43a 	srli	r3,r6,16
  8031b8:	1211383a 	mul	r8,r2,r8
  8031bc:	94e5883a 	add	r18,r18,r19
  8031c0:	1c87883a 	add	r3,r3,r18
  8031c4:	1cc0022e 	bgeu	r3,r19,8031d0 <__mulsf3+0x2a0>
  8031c8:	00800074 	movhi	r2,1
  8031cc:	4091883a 	add	r8,r8,r2
  8031d0:	1804943a 	slli	r2,r3,16
  8031d4:	31bfffcc 	andi	r6,r6,65535
  8031d8:	1806d43a 	srli	r3,r3,16
  8031dc:	1185883a 	add	r2,r2,r6
  8031e0:	102691ba 	slli	r19,r2,6
  8031e4:	1a07883a 	add	r3,r3,r8
  8031e8:	1004d6ba 	srli	r2,r2,26
  8031ec:	180891ba 	slli	r4,r3,6
  8031f0:	9826c03a 	cmpne	r19,r19,zero
  8031f4:	9884b03a 	or	r2,r19,r2
  8031f8:	1126b03a 	or	r19,r2,r4
  8031fc:	9882002c 	andhi	r2,r19,2048
  803200:	10000426 	beq	r2,zero,803214 <__mulsf3+0x2e4>
  803204:	9804d07a 	srli	r2,r19,1
  803208:	9900004c 	andi	r4,r19,1
  80320c:	3821883a 	mov	r16,r7
  803210:	1126b03a 	or	r19,r2,r4
  803214:	80c01fc4 	addi	r3,r16,127
  803218:	00c0210e 	bge	zero,r3,8032a0 <__mulsf3+0x370>
  80321c:	988001cc 	andi	r2,r19,7
  803220:	10000426 	beq	r2,zero,803234 <__mulsf3+0x304>
  803224:	988003cc 	andi	r2,r19,15
  803228:	01000104 	movi	r4,4
  80322c:	11000126 	beq	r2,r4,803234 <__mulsf3+0x304>
  803230:	9927883a 	add	r19,r19,r4
  803234:	9882002c 	andhi	r2,r19,2048
  803238:	10000426 	beq	r2,zero,80324c <__mulsf3+0x31c>
  80323c:	00be0034 	movhi	r2,63488
  803240:	10bfffc4 	addi	r2,r2,-1
  803244:	80c02004 	addi	r3,r16,128
  803248:	98a6703a 	and	r19,r19,r2
  80324c:	00803f84 	movi	r2,254
  803250:	10ffa916 	blt	r2,r3,8030f8 <__alt_data_end+0xff8030f8>
  803254:	980891ba 	slli	r4,r19,6
  803258:	a829883a 	mov	r20,r21
  80325c:	2008d27a 	srli	r4,r4,9
  803260:	003f8606 	br	80307c <__alt_data_end+0xff80307c>
  803264:	9080102c 	andhi	r2,r18,64
  803268:	10000826 	beq	r2,zero,80328c <__mulsf3+0x35c>
  80326c:	9880102c 	andhi	r2,r19,64
  803270:	1000061e 	bne	r2,zero,80328c <__mulsf3+0x35c>
  803274:	00802034 	movhi	r2,128
  803278:	99001034 	orhi	r4,r19,64
  80327c:	10bfffc4 	addi	r2,r2,-1
  803280:	b029883a 	mov	r20,r22
  803284:	2088703a 	and	r4,r4,r2
  803288:	003fba06 	br	803174 <__alt_data_end+0xff803174>
  80328c:	00802034 	movhi	r2,128
  803290:	91001034 	orhi	r4,r18,64
  803294:	10bfffc4 	addi	r2,r2,-1
  803298:	2088703a 	and	r4,r4,r2
  80329c:	003fb506 	br	803174 <__alt_data_end+0xff803174>
  8032a0:	00800044 	movi	r2,1
  8032a4:	10c7c83a 	sub	r3,r2,r3
  8032a8:	008006c4 	movi	r2,27
  8032ac:	10ff7016 	blt	r2,r3,803070 <__alt_data_end+0xff803070>
  8032b0:	00800804 	movi	r2,32
  8032b4:	10c5c83a 	sub	r2,r2,r3
  8032b8:	9884983a 	sll	r2,r19,r2
  8032bc:	98c6d83a 	srl	r3,r19,r3
  8032c0:	1004c03a 	cmpne	r2,r2,zero
  8032c4:	1884b03a 	or	r2,r3,r2
  8032c8:	10c001cc 	andi	r3,r2,7
  8032cc:	18000426 	beq	r3,zero,8032e0 <__mulsf3+0x3b0>
  8032d0:	10c003cc 	andi	r3,r2,15
  8032d4:	01000104 	movi	r4,4
  8032d8:	19000126 	beq	r3,r4,8032e0 <__mulsf3+0x3b0>
  8032dc:	1105883a 	add	r2,r2,r4
  8032e0:	10c1002c 	andhi	r3,r2,1024
  8032e4:	18000626 	beq	r3,zero,803300 <__mulsf3+0x3d0>
  8032e8:	a829883a 	mov	r20,r21
  8032ec:	00c00044 	movi	r3,1
  8032f0:	0009883a 	mov	r4,zero
  8032f4:	003f6106 	br	80307c <__alt_data_end+0xff80307c>
  8032f8:	3821883a 	mov	r16,r7
  8032fc:	003fc506 	br	803214 <__alt_data_end+0xff803214>
  803300:	100491ba 	slli	r2,r2,6
  803304:	a829883a 	mov	r20,r21
  803308:	0007883a 	mov	r3,zero
  80330c:	1008d27a 	srli	r4,r2,9
  803310:	003f5a06 	br	80307c <__alt_data_end+0xff80307c>
  803314:	00802034 	movhi	r2,128
  803318:	99001034 	orhi	r4,r19,64
  80331c:	10bfffc4 	addi	r2,r2,-1
  803320:	a829883a 	mov	r20,r21
  803324:	2088703a 	and	r4,r4,r2
  803328:	003f9206 	br	803174 <__alt_data_end+0xff803174>

0080332c <__adddf3>:
  80332c:	02c00434 	movhi	r11,16
  803330:	5affffc4 	addi	r11,r11,-1
  803334:	2806d7fa 	srli	r3,r5,31
  803338:	2ad4703a 	and	r10,r5,r11
  80333c:	3ad2703a 	and	r9,r7,r11
  803340:	3804d53a 	srli	r2,r7,20
  803344:	3018d77a 	srli	r12,r6,29
  803348:	280ad53a 	srli	r5,r5,20
  80334c:	501490fa 	slli	r10,r10,3
  803350:	2010d77a 	srli	r8,r4,29
  803354:	481290fa 	slli	r9,r9,3
  803358:	380ed7fa 	srli	r7,r7,31
  80335c:	defffb04 	addi	sp,sp,-20
  803360:	dc800215 	stw	r18,8(sp)
  803364:	dc400115 	stw	r17,4(sp)
  803368:	dc000015 	stw	r16,0(sp)
  80336c:	dfc00415 	stw	ra,16(sp)
  803370:	dcc00315 	stw	r19,12(sp)
  803374:	1c803fcc 	andi	r18,r3,255
  803378:	2c01ffcc 	andi	r16,r5,2047
  80337c:	5210b03a 	or	r8,r10,r8
  803380:	202290fa 	slli	r17,r4,3
  803384:	1081ffcc 	andi	r2,r2,2047
  803388:	4b12b03a 	or	r9,r9,r12
  80338c:	300c90fa 	slli	r6,r6,3
  803390:	91c07526 	beq	r18,r7,803568 <__adddf3+0x23c>
  803394:	8087c83a 	sub	r3,r16,r2
  803398:	00c0ab0e 	bge	zero,r3,803648 <__adddf3+0x31c>
  80339c:	10002a1e 	bne	r2,zero,803448 <__adddf3+0x11c>
  8033a0:	4984b03a 	or	r2,r9,r6
  8033a4:	1000961e 	bne	r2,zero,803600 <__adddf3+0x2d4>
  8033a8:	888001cc 	andi	r2,r17,7
  8033ac:	10000726 	beq	r2,zero,8033cc <__adddf3+0xa0>
  8033b0:	888003cc 	andi	r2,r17,15
  8033b4:	00c00104 	movi	r3,4
  8033b8:	10c00426 	beq	r2,r3,8033cc <__adddf3+0xa0>
  8033bc:	88c7883a 	add	r3,r17,r3
  8033c0:	1c63803a 	cmpltu	r17,r3,r17
  8033c4:	4451883a 	add	r8,r8,r17
  8033c8:	1823883a 	mov	r17,r3
  8033cc:	4080202c 	andhi	r2,r8,128
  8033d0:	10005926 	beq	r2,zero,803538 <__adddf3+0x20c>
  8033d4:	84000044 	addi	r16,r16,1
  8033d8:	0081ffc4 	movi	r2,2047
  8033dc:	8080ba26 	beq	r16,r2,8036c8 <__adddf3+0x39c>
  8033e0:	00bfe034 	movhi	r2,65408
  8033e4:	10bfffc4 	addi	r2,r2,-1
  8033e8:	4090703a 	and	r8,r8,r2
  8033ec:	4004977a 	slli	r2,r8,29
  8033f0:	4010927a 	slli	r8,r8,9
  8033f4:	8822d0fa 	srli	r17,r17,3
  8033f8:	8401ffcc 	andi	r16,r16,2047
  8033fc:	4010d33a 	srli	r8,r8,12
  803400:	9007883a 	mov	r3,r18
  803404:	1444b03a 	or	r2,r2,r17
  803408:	8401ffcc 	andi	r16,r16,2047
  80340c:	8020953a 	slli	r16,r16,20
  803410:	18c03fcc 	andi	r3,r3,255
  803414:	01000434 	movhi	r4,16
  803418:	213fffc4 	addi	r4,r4,-1
  80341c:	180697fa 	slli	r3,r3,31
  803420:	4110703a 	and	r8,r8,r4
  803424:	4410b03a 	or	r8,r8,r16
  803428:	40c6b03a 	or	r3,r8,r3
  80342c:	dfc00417 	ldw	ra,16(sp)
  803430:	dcc00317 	ldw	r19,12(sp)
  803434:	dc800217 	ldw	r18,8(sp)
  803438:	dc400117 	ldw	r17,4(sp)
  80343c:	dc000017 	ldw	r16,0(sp)
  803440:	dec00504 	addi	sp,sp,20
  803444:	f800283a 	ret
  803448:	0081ffc4 	movi	r2,2047
  80344c:	80bfd626 	beq	r16,r2,8033a8 <__alt_data_end+0xff8033a8>
  803450:	4a402034 	orhi	r9,r9,128
  803454:	00800e04 	movi	r2,56
  803458:	10c09f16 	blt	r2,r3,8036d8 <__adddf3+0x3ac>
  80345c:	008007c4 	movi	r2,31
  803460:	10c0c216 	blt	r2,r3,80376c <__adddf3+0x440>
  803464:	00800804 	movi	r2,32
  803468:	10c5c83a 	sub	r2,r2,r3
  80346c:	488a983a 	sll	r5,r9,r2
  803470:	30c8d83a 	srl	r4,r6,r3
  803474:	3084983a 	sll	r2,r6,r2
  803478:	48c6d83a 	srl	r3,r9,r3
  80347c:	290cb03a 	or	r6,r5,r4
  803480:	1004c03a 	cmpne	r2,r2,zero
  803484:	308cb03a 	or	r6,r6,r2
  803488:	898dc83a 	sub	r6,r17,r6
  80348c:	89a3803a 	cmpltu	r17,r17,r6
  803490:	40d1c83a 	sub	r8,r8,r3
  803494:	4451c83a 	sub	r8,r8,r17
  803498:	3023883a 	mov	r17,r6
  80349c:	4080202c 	andhi	r2,r8,128
  8034a0:	10002326 	beq	r2,zero,803530 <__adddf3+0x204>
  8034a4:	04c02034 	movhi	r19,128
  8034a8:	9cffffc4 	addi	r19,r19,-1
  8034ac:	44e6703a 	and	r19,r8,r19
  8034b0:	98007626 	beq	r19,zero,80368c <__adddf3+0x360>
  8034b4:	9809883a 	mov	r4,r19
  8034b8:	0805a4c0 	call	805a4c <__clzsi2>
  8034bc:	10fffe04 	addi	r3,r2,-8
  8034c0:	010007c4 	movi	r4,31
  8034c4:	20c07716 	blt	r4,r3,8036a4 <__adddf3+0x378>
  8034c8:	00800804 	movi	r2,32
  8034cc:	10c5c83a 	sub	r2,r2,r3
  8034d0:	8884d83a 	srl	r2,r17,r2
  8034d4:	98d0983a 	sll	r8,r19,r3
  8034d8:	88e2983a 	sll	r17,r17,r3
  8034dc:	1204b03a 	or	r2,r2,r8
  8034e0:	1c007416 	blt	r3,r16,8036b4 <__adddf3+0x388>
  8034e4:	1c21c83a 	sub	r16,r3,r16
  8034e8:	82000044 	addi	r8,r16,1
  8034ec:	00c007c4 	movi	r3,31
  8034f0:	1a009116 	blt	r3,r8,803738 <__adddf3+0x40c>
  8034f4:	00c00804 	movi	r3,32
  8034f8:	1a07c83a 	sub	r3,r3,r8
  8034fc:	8a08d83a 	srl	r4,r17,r8
  803500:	88e2983a 	sll	r17,r17,r3
  803504:	10c6983a 	sll	r3,r2,r3
  803508:	1210d83a 	srl	r8,r2,r8
  80350c:	8804c03a 	cmpne	r2,r17,zero
  803510:	1906b03a 	or	r3,r3,r4
  803514:	18a2b03a 	or	r17,r3,r2
  803518:	0021883a 	mov	r16,zero
  80351c:	003fa206 	br	8033a8 <__alt_data_end+0xff8033a8>
  803520:	1890b03a 	or	r8,r3,r2
  803524:	40017d26 	beq	r8,zero,803b1c <__adddf3+0x7f0>
  803528:	1011883a 	mov	r8,r2
  80352c:	1823883a 	mov	r17,r3
  803530:	888001cc 	andi	r2,r17,7
  803534:	103f9e1e 	bne	r2,zero,8033b0 <__alt_data_end+0xff8033b0>
  803538:	4004977a 	slli	r2,r8,29
  80353c:	8822d0fa 	srli	r17,r17,3
  803540:	4010d0fa 	srli	r8,r8,3
  803544:	9007883a 	mov	r3,r18
  803548:	1444b03a 	or	r2,r2,r17
  80354c:	0101ffc4 	movi	r4,2047
  803550:	81002426 	beq	r16,r4,8035e4 <__adddf3+0x2b8>
  803554:	8120703a 	and	r16,r16,r4
  803558:	01000434 	movhi	r4,16
  80355c:	213fffc4 	addi	r4,r4,-1
  803560:	4110703a 	and	r8,r8,r4
  803564:	003fa806 	br	803408 <__alt_data_end+0xff803408>
  803568:	8089c83a 	sub	r4,r16,r2
  80356c:	01005e0e 	bge	zero,r4,8036e8 <__adddf3+0x3bc>
  803570:	10002b26 	beq	r2,zero,803620 <__adddf3+0x2f4>
  803574:	0081ffc4 	movi	r2,2047
  803578:	80bf8b26 	beq	r16,r2,8033a8 <__alt_data_end+0xff8033a8>
  80357c:	4a402034 	orhi	r9,r9,128
  803580:	00800e04 	movi	r2,56
  803584:	1100a40e 	bge	r2,r4,803818 <__adddf3+0x4ec>
  803588:	498cb03a 	or	r6,r9,r6
  80358c:	300ac03a 	cmpne	r5,r6,zero
  803590:	0013883a 	mov	r9,zero
  803594:	2c4b883a 	add	r5,r5,r17
  803598:	2c63803a 	cmpltu	r17,r5,r17
  80359c:	4a11883a 	add	r8,r9,r8
  8035a0:	8a11883a 	add	r8,r17,r8
  8035a4:	2823883a 	mov	r17,r5
  8035a8:	4080202c 	andhi	r2,r8,128
  8035ac:	103fe026 	beq	r2,zero,803530 <__alt_data_end+0xff803530>
  8035b0:	84000044 	addi	r16,r16,1
  8035b4:	0081ffc4 	movi	r2,2047
  8035b8:	8080d226 	beq	r16,r2,803904 <__adddf3+0x5d8>
  8035bc:	00bfe034 	movhi	r2,65408
  8035c0:	10bfffc4 	addi	r2,r2,-1
  8035c4:	4090703a 	and	r8,r8,r2
  8035c8:	880ad07a 	srli	r5,r17,1
  8035cc:	400897fa 	slli	r4,r8,31
  8035d0:	88c0004c 	andi	r3,r17,1
  8035d4:	28e2b03a 	or	r17,r5,r3
  8035d8:	4010d07a 	srli	r8,r8,1
  8035dc:	2462b03a 	or	r17,r4,r17
  8035e0:	003f7106 	br	8033a8 <__alt_data_end+0xff8033a8>
  8035e4:	4088b03a 	or	r4,r8,r2
  8035e8:	20014526 	beq	r4,zero,803b00 <__adddf3+0x7d4>
  8035ec:	01000434 	movhi	r4,16
  8035f0:	42000234 	orhi	r8,r8,8
  8035f4:	213fffc4 	addi	r4,r4,-1
  8035f8:	4110703a 	and	r8,r8,r4
  8035fc:	003f8206 	br	803408 <__alt_data_end+0xff803408>
  803600:	18ffffc4 	addi	r3,r3,-1
  803604:	1800491e 	bne	r3,zero,80372c <__adddf3+0x400>
  803608:	898bc83a 	sub	r5,r17,r6
  80360c:	8963803a 	cmpltu	r17,r17,r5
  803610:	4251c83a 	sub	r8,r8,r9
  803614:	4451c83a 	sub	r8,r8,r17
  803618:	2823883a 	mov	r17,r5
  80361c:	003f9f06 	br	80349c <__alt_data_end+0xff80349c>
  803620:	4984b03a 	or	r2,r9,r6
  803624:	103f6026 	beq	r2,zero,8033a8 <__alt_data_end+0xff8033a8>
  803628:	213fffc4 	addi	r4,r4,-1
  80362c:	2000931e 	bne	r4,zero,80387c <__adddf3+0x550>
  803630:	898d883a 	add	r6,r17,r6
  803634:	3463803a 	cmpltu	r17,r6,r17
  803638:	4251883a 	add	r8,r8,r9
  80363c:	8a11883a 	add	r8,r17,r8
  803640:	3023883a 	mov	r17,r6
  803644:	003fd806 	br	8035a8 <__alt_data_end+0xff8035a8>
  803648:	1800541e 	bne	r3,zero,80379c <__adddf3+0x470>
  80364c:	80800044 	addi	r2,r16,1
  803650:	1081ffcc 	andi	r2,r2,2047
  803654:	00c00044 	movi	r3,1
  803658:	1880a00e 	bge	r3,r2,8038dc <__adddf3+0x5b0>
  80365c:	8989c83a 	sub	r4,r17,r6
  803660:	8905803a 	cmpltu	r2,r17,r4
  803664:	4267c83a 	sub	r19,r8,r9
  803668:	98a7c83a 	sub	r19,r19,r2
  80366c:	9880202c 	andhi	r2,r19,128
  803670:	10006326 	beq	r2,zero,803800 <__adddf3+0x4d4>
  803674:	3463c83a 	sub	r17,r6,r17
  803678:	4a07c83a 	sub	r3,r9,r8
  80367c:	344d803a 	cmpltu	r6,r6,r17
  803680:	19a7c83a 	sub	r19,r3,r6
  803684:	3825883a 	mov	r18,r7
  803688:	983f8a1e 	bne	r19,zero,8034b4 <__alt_data_end+0xff8034b4>
  80368c:	8809883a 	mov	r4,r17
  803690:	0805a4c0 	call	805a4c <__clzsi2>
  803694:	10800804 	addi	r2,r2,32
  803698:	10fffe04 	addi	r3,r2,-8
  80369c:	010007c4 	movi	r4,31
  8036a0:	20ff890e 	bge	r4,r3,8034c8 <__alt_data_end+0xff8034c8>
  8036a4:	10bff604 	addi	r2,r2,-40
  8036a8:	8884983a 	sll	r2,r17,r2
  8036ac:	0023883a 	mov	r17,zero
  8036b0:	1c3f8c0e 	bge	r3,r16,8034e4 <__alt_data_end+0xff8034e4>
  8036b4:	023fe034 	movhi	r8,65408
  8036b8:	423fffc4 	addi	r8,r8,-1
  8036bc:	80e1c83a 	sub	r16,r16,r3
  8036c0:	1210703a 	and	r8,r2,r8
  8036c4:	003f3806 	br	8033a8 <__alt_data_end+0xff8033a8>
  8036c8:	9007883a 	mov	r3,r18
  8036cc:	0011883a 	mov	r8,zero
  8036d0:	0005883a 	mov	r2,zero
  8036d4:	003f4c06 	br	803408 <__alt_data_end+0xff803408>
  8036d8:	498cb03a 	or	r6,r9,r6
  8036dc:	300cc03a 	cmpne	r6,r6,zero
  8036e0:	0007883a 	mov	r3,zero
  8036e4:	003f6806 	br	803488 <__alt_data_end+0xff803488>
  8036e8:	20009c1e 	bne	r4,zero,80395c <__adddf3+0x630>
  8036ec:	80800044 	addi	r2,r16,1
  8036f0:	1141ffcc 	andi	r5,r2,2047
  8036f4:	01000044 	movi	r4,1
  8036f8:	2140670e 	bge	r4,r5,803898 <__adddf3+0x56c>
  8036fc:	0101ffc4 	movi	r4,2047
  803700:	11007f26 	beq	r2,r4,803900 <__adddf3+0x5d4>
  803704:	898d883a 	add	r6,r17,r6
  803708:	4247883a 	add	r3,r8,r9
  80370c:	3451803a 	cmpltu	r8,r6,r17
  803710:	40d1883a 	add	r8,r8,r3
  803714:	402297fa 	slli	r17,r8,31
  803718:	300cd07a 	srli	r6,r6,1
  80371c:	4010d07a 	srli	r8,r8,1
  803720:	1021883a 	mov	r16,r2
  803724:	89a2b03a 	or	r17,r17,r6
  803728:	003f1f06 	br	8033a8 <__alt_data_end+0xff8033a8>
  80372c:	0081ffc4 	movi	r2,2047
  803730:	80bf481e 	bne	r16,r2,803454 <__alt_data_end+0xff803454>
  803734:	003f1c06 	br	8033a8 <__alt_data_end+0xff8033a8>
  803738:	843ff844 	addi	r16,r16,-31
  80373c:	01000804 	movi	r4,32
  803740:	1406d83a 	srl	r3,r2,r16
  803744:	41005026 	beq	r8,r4,803888 <__adddf3+0x55c>
  803748:	01001004 	movi	r4,64
  80374c:	2211c83a 	sub	r8,r4,r8
  803750:	1204983a 	sll	r2,r2,r8
  803754:	88a2b03a 	or	r17,r17,r2
  803758:	8822c03a 	cmpne	r17,r17,zero
  80375c:	1c62b03a 	or	r17,r3,r17
  803760:	0011883a 	mov	r8,zero
  803764:	0021883a 	mov	r16,zero
  803768:	003f7106 	br	803530 <__alt_data_end+0xff803530>
  80376c:	193ff804 	addi	r4,r3,-32
  803770:	00800804 	movi	r2,32
  803774:	4908d83a 	srl	r4,r9,r4
  803778:	18804526 	beq	r3,r2,803890 <__adddf3+0x564>
  80377c:	00801004 	movi	r2,64
  803780:	10c5c83a 	sub	r2,r2,r3
  803784:	4886983a 	sll	r3,r9,r2
  803788:	198cb03a 	or	r6,r3,r6
  80378c:	300cc03a 	cmpne	r6,r6,zero
  803790:	218cb03a 	or	r6,r4,r6
  803794:	0007883a 	mov	r3,zero
  803798:	003f3b06 	br	803488 <__alt_data_end+0xff803488>
  80379c:	80002a26 	beq	r16,zero,803848 <__adddf3+0x51c>
  8037a0:	0101ffc4 	movi	r4,2047
  8037a4:	11006826 	beq	r2,r4,803948 <__adddf3+0x61c>
  8037a8:	00c7c83a 	sub	r3,zero,r3
  8037ac:	42002034 	orhi	r8,r8,128
  8037b0:	01000e04 	movi	r4,56
  8037b4:	20c07c16 	blt	r4,r3,8039a8 <__adddf3+0x67c>
  8037b8:	010007c4 	movi	r4,31
  8037bc:	20c0da16 	blt	r4,r3,803b28 <__adddf3+0x7fc>
  8037c0:	01000804 	movi	r4,32
  8037c4:	20c9c83a 	sub	r4,r4,r3
  8037c8:	4114983a 	sll	r10,r8,r4
  8037cc:	88cad83a 	srl	r5,r17,r3
  8037d0:	8908983a 	sll	r4,r17,r4
  8037d4:	40c6d83a 	srl	r3,r8,r3
  8037d8:	5162b03a 	or	r17,r10,r5
  8037dc:	2008c03a 	cmpne	r4,r4,zero
  8037e0:	8922b03a 	or	r17,r17,r4
  8037e4:	3463c83a 	sub	r17,r6,r17
  8037e8:	48c7c83a 	sub	r3,r9,r3
  8037ec:	344d803a 	cmpltu	r6,r6,r17
  8037f0:	1991c83a 	sub	r8,r3,r6
  8037f4:	1021883a 	mov	r16,r2
  8037f8:	3825883a 	mov	r18,r7
  8037fc:	003f2706 	br	80349c <__alt_data_end+0xff80349c>
  803800:	24d0b03a 	or	r8,r4,r19
  803804:	40001b1e 	bne	r8,zero,803874 <__adddf3+0x548>
  803808:	0005883a 	mov	r2,zero
  80380c:	0007883a 	mov	r3,zero
  803810:	0021883a 	mov	r16,zero
  803814:	003f4d06 	br	80354c <__alt_data_end+0xff80354c>
  803818:	008007c4 	movi	r2,31
  80381c:	11003c16 	blt	r2,r4,803910 <__adddf3+0x5e4>
  803820:	00800804 	movi	r2,32
  803824:	1105c83a 	sub	r2,r2,r4
  803828:	488e983a 	sll	r7,r9,r2
  80382c:	310ad83a 	srl	r5,r6,r4
  803830:	3084983a 	sll	r2,r6,r2
  803834:	4912d83a 	srl	r9,r9,r4
  803838:	394ab03a 	or	r5,r7,r5
  80383c:	1004c03a 	cmpne	r2,r2,zero
  803840:	288ab03a 	or	r5,r5,r2
  803844:	003f5306 	br	803594 <__alt_data_end+0xff803594>
  803848:	4448b03a 	or	r4,r8,r17
  80384c:	20003e26 	beq	r4,zero,803948 <__adddf3+0x61c>
  803850:	00c6303a 	nor	r3,zero,r3
  803854:	18003a1e 	bne	r3,zero,803940 <__adddf3+0x614>
  803858:	3463c83a 	sub	r17,r6,r17
  80385c:	4a07c83a 	sub	r3,r9,r8
  803860:	344d803a 	cmpltu	r6,r6,r17
  803864:	1991c83a 	sub	r8,r3,r6
  803868:	1021883a 	mov	r16,r2
  80386c:	3825883a 	mov	r18,r7
  803870:	003f0a06 	br	80349c <__alt_data_end+0xff80349c>
  803874:	2023883a 	mov	r17,r4
  803878:	003f0d06 	br	8034b0 <__alt_data_end+0xff8034b0>
  80387c:	0081ffc4 	movi	r2,2047
  803880:	80bf3f1e 	bne	r16,r2,803580 <__alt_data_end+0xff803580>
  803884:	003ec806 	br	8033a8 <__alt_data_end+0xff8033a8>
  803888:	0005883a 	mov	r2,zero
  80388c:	003fb106 	br	803754 <__alt_data_end+0xff803754>
  803890:	0007883a 	mov	r3,zero
  803894:	003fbc06 	br	803788 <__alt_data_end+0xff803788>
  803898:	4444b03a 	or	r2,r8,r17
  80389c:	8000871e 	bne	r16,zero,803abc <__adddf3+0x790>
  8038a0:	1000ba26 	beq	r2,zero,803b8c <__adddf3+0x860>
  8038a4:	4984b03a 	or	r2,r9,r6
  8038a8:	103ebf26 	beq	r2,zero,8033a8 <__alt_data_end+0xff8033a8>
  8038ac:	8985883a 	add	r2,r17,r6
  8038b0:	4247883a 	add	r3,r8,r9
  8038b4:	1451803a 	cmpltu	r8,r2,r17
  8038b8:	40d1883a 	add	r8,r8,r3
  8038bc:	40c0202c 	andhi	r3,r8,128
  8038c0:	1023883a 	mov	r17,r2
  8038c4:	183f1a26 	beq	r3,zero,803530 <__alt_data_end+0xff803530>
  8038c8:	00bfe034 	movhi	r2,65408
  8038cc:	10bfffc4 	addi	r2,r2,-1
  8038d0:	2021883a 	mov	r16,r4
  8038d4:	4090703a 	and	r8,r8,r2
  8038d8:	003eb306 	br	8033a8 <__alt_data_end+0xff8033a8>
  8038dc:	4444b03a 	or	r2,r8,r17
  8038e0:	8000291e 	bne	r16,zero,803988 <__adddf3+0x65c>
  8038e4:	10004b1e 	bne	r2,zero,803a14 <__adddf3+0x6e8>
  8038e8:	4990b03a 	or	r8,r9,r6
  8038ec:	40008b26 	beq	r8,zero,803b1c <__adddf3+0x7f0>
  8038f0:	4811883a 	mov	r8,r9
  8038f4:	3023883a 	mov	r17,r6
  8038f8:	3825883a 	mov	r18,r7
  8038fc:	003eaa06 	br	8033a8 <__alt_data_end+0xff8033a8>
  803900:	1021883a 	mov	r16,r2
  803904:	0011883a 	mov	r8,zero
  803908:	0005883a 	mov	r2,zero
  80390c:	003f0f06 	br	80354c <__alt_data_end+0xff80354c>
  803910:	217ff804 	addi	r5,r4,-32
  803914:	00800804 	movi	r2,32
  803918:	494ad83a 	srl	r5,r9,r5
  80391c:	20807d26 	beq	r4,r2,803b14 <__adddf3+0x7e8>
  803920:	00801004 	movi	r2,64
  803924:	1109c83a 	sub	r4,r2,r4
  803928:	4912983a 	sll	r9,r9,r4
  80392c:	498cb03a 	or	r6,r9,r6
  803930:	300cc03a 	cmpne	r6,r6,zero
  803934:	298ab03a 	or	r5,r5,r6
  803938:	0013883a 	mov	r9,zero
  80393c:	003f1506 	br	803594 <__alt_data_end+0xff803594>
  803940:	0101ffc4 	movi	r4,2047
  803944:	113f9a1e 	bne	r2,r4,8037b0 <__alt_data_end+0xff8037b0>
  803948:	4811883a 	mov	r8,r9
  80394c:	3023883a 	mov	r17,r6
  803950:	1021883a 	mov	r16,r2
  803954:	3825883a 	mov	r18,r7
  803958:	003e9306 	br	8033a8 <__alt_data_end+0xff8033a8>
  80395c:	8000161e 	bne	r16,zero,8039b8 <__adddf3+0x68c>
  803960:	444ab03a 	or	r5,r8,r17
  803964:	28005126 	beq	r5,zero,803aac <__adddf3+0x780>
  803968:	0108303a 	nor	r4,zero,r4
  80396c:	20004d1e 	bne	r4,zero,803aa4 <__adddf3+0x778>
  803970:	89a3883a 	add	r17,r17,r6
  803974:	4253883a 	add	r9,r8,r9
  803978:	898d803a 	cmpltu	r6,r17,r6
  80397c:	3251883a 	add	r8,r6,r9
  803980:	1021883a 	mov	r16,r2
  803984:	003f0806 	br	8035a8 <__alt_data_end+0xff8035a8>
  803988:	1000301e 	bne	r2,zero,803a4c <__adddf3+0x720>
  80398c:	4984b03a 	or	r2,r9,r6
  803990:	10007126 	beq	r2,zero,803b58 <__adddf3+0x82c>
  803994:	4811883a 	mov	r8,r9
  803998:	3023883a 	mov	r17,r6
  80399c:	3825883a 	mov	r18,r7
  8039a0:	0401ffc4 	movi	r16,2047
  8039a4:	003e8006 	br	8033a8 <__alt_data_end+0xff8033a8>
  8039a8:	4462b03a 	or	r17,r8,r17
  8039ac:	8822c03a 	cmpne	r17,r17,zero
  8039b0:	0007883a 	mov	r3,zero
  8039b4:	003f8b06 	br	8037e4 <__alt_data_end+0xff8037e4>
  8039b8:	0141ffc4 	movi	r5,2047
  8039bc:	11403b26 	beq	r2,r5,803aac <__adddf3+0x780>
  8039c0:	0109c83a 	sub	r4,zero,r4
  8039c4:	42002034 	orhi	r8,r8,128
  8039c8:	01400e04 	movi	r5,56
  8039cc:	29006716 	blt	r5,r4,803b6c <__adddf3+0x840>
  8039d0:	014007c4 	movi	r5,31
  8039d4:	29007016 	blt	r5,r4,803b98 <__adddf3+0x86c>
  8039d8:	01400804 	movi	r5,32
  8039dc:	290bc83a 	sub	r5,r5,r4
  8039e0:	4154983a 	sll	r10,r8,r5
  8039e4:	890ed83a 	srl	r7,r17,r4
  8039e8:	894a983a 	sll	r5,r17,r5
  8039ec:	4108d83a 	srl	r4,r8,r4
  8039f0:	51e2b03a 	or	r17,r10,r7
  8039f4:	280ac03a 	cmpne	r5,r5,zero
  8039f8:	8962b03a 	or	r17,r17,r5
  8039fc:	89a3883a 	add	r17,r17,r6
  803a00:	2253883a 	add	r9,r4,r9
  803a04:	898d803a 	cmpltu	r6,r17,r6
  803a08:	3251883a 	add	r8,r6,r9
  803a0c:	1021883a 	mov	r16,r2
  803a10:	003ee506 	br	8035a8 <__alt_data_end+0xff8035a8>
  803a14:	4984b03a 	or	r2,r9,r6
  803a18:	103e6326 	beq	r2,zero,8033a8 <__alt_data_end+0xff8033a8>
  803a1c:	8987c83a 	sub	r3,r17,r6
  803a20:	88c9803a 	cmpltu	r4,r17,r3
  803a24:	4245c83a 	sub	r2,r8,r9
  803a28:	1105c83a 	sub	r2,r2,r4
  803a2c:	1100202c 	andhi	r4,r2,128
  803a30:	203ebb26 	beq	r4,zero,803520 <__alt_data_end+0xff803520>
  803a34:	3463c83a 	sub	r17,r6,r17
  803a38:	4a07c83a 	sub	r3,r9,r8
  803a3c:	344d803a 	cmpltu	r6,r6,r17
  803a40:	1991c83a 	sub	r8,r3,r6
  803a44:	3825883a 	mov	r18,r7
  803a48:	003e5706 	br	8033a8 <__alt_data_end+0xff8033a8>
  803a4c:	4984b03a 	or	r2,r9,r6
  803a50:	10002e26 	beq	r2,zero,803b0c <__adddf3+0x7e0>
  803a54:	4004d0fa 	srli	r2,r8,3
  803a58:	8822d0fa 	srli	r17,r17,3
  803a5c:	4010977a 	slli	r8,r8,29
  803a60:	10c0022c 	andhi	r3,r2,8
  803a64:	4462b03a 	or	r17,r8,r17
  803a68:	18000826 	beq	r3,zero,803a8c <__adddf3+0x760>
  803a6c:	4808d0fa 	srli	r4,r9,3
  803a70:	20c0022c 	andhi	r3,r4,8
  803a74:	1800051e 	bne	r3,zero,803a8c <__adddf3+0x760>
  803a78:	300cd0fa 	srli	r6,r6,3
  803a7c:	4806977a 	slli	r3,r9,29
  803a80:	2005883a 	mov	r2,r4
  803a84:	3825883a 	mov	r18,r7
  803a88:	19a2b03a 	or	r17,r3,r6
  803a8c:	8810d77a 	srli	r8,r17,29
  803a90:	100490fa 	slli	r2,r2,3
  803a94:	882290fa 	slli	r17,r17,3
  803a98:	0401ffc4 	movi	r16,2047
  803a9c:	4090b03a 	or	r8,r8,r2
  803aa0:	003e4106 	br	8033a8 <__alt_data_end+0xff8033a8>
  803aa4:	0141ffc4 	movi	r5,2047
  803aa8:	117fc71e 	bne	r2,r5,8039c8 <__alt_data_end+0xff8039c8>
  803aac:	4811883a 	mov	r8,r9
  803ab0:	3023883a 	mov	r17,r6
  803ab4:	1021883a 	mov	r16,r2
  803ab8:	003e3b06 	br	8033a8 <__alt_data_end+0xff8033a8>
  803abc:	10002f26 	beq	r2,zero,803b7c <__adddf3+0x850>
  803ac0:	4984b03a 	or	r2,r9,r6
  803ac4:	10001126 	beq	r2,zero,803b0c <__adddf3+0x7e0>
  803ac8:	4004d0fa 	srli	r2,r8,3
  803acc:	8822d0fa 	srli	r17,r17,3
  803ad0:	4010977a 	slli	r8,r8,29
  803ad4:	10c0022c 	andhi	r3,r2,8
  803ad8:	4462b03a 	or	r17,r8,r17
  803adc:	183feb26 	beq	r3,zero,803a8c <__alt_data_end+0xff803a8c>
  803ae0:	4808d0fa 	srli	r4,r9,3
  803ae4:	20c0022c 	andhi	r3,r4,8
  803ae8:	183fe81e 	bne	r3,zero,803a8c <__alt_data_end+0xff803a8c>
  803aec:	300cd0fa 	srli	r6,r6,3
  803af0:	4806977a 	slli	r3,r9,29
  803af4:	2005883a 	mov	r2,r4
  803af8:	19a2b03a 	or	r17,r3,r6
  803afc:	003fe306 	br	803a8c <__alt_data_end+0xff803a8c>
  803b00:	0011883a 	mov	r8,zero
  803b04:	0005883a 	mov	r2,zero
  803b08:	003e3f06 	br	803408 <__alt_data_end+0xff803408>
  803b0c:	0401ffc4 	movi	r16,2047
  803b10:	003e2506 	br	8033a8 <__alt_data_end+0xff8033a8>
  803b14:	0013883a 	mov	r9,zero
  803b18:	003f8406 	br	80392c <__alt_data_end+0xff80392c>
  803b1c:	0005883a 	mov	r2,zero
  803b20:	0007883a 	mov	r3,zero
  803b24:	003e8906 	br	80354c <__alt_data_end+0xff80354c>
  803b28:	197ff804 	addi	r5,r3,-32
  803b2c:	01000804 	movi	r4,32
  803b30:	414ad83a 	srl	r5,r8,r5
  803b34:	19002426 	beq	r3,r4,803bc8 <__adddf3+0x89c>
  803b38:	01001004 	movi	r4,64
  803b3c:	20c7c83a 	sub	r3,r4,r3
  803b40:	40c6983a 	sll	r3,r8,r3
  803b44:	1c46b03a 	or	r3,r3,r17
  803b48:	1806c03a 	cmpne	r3,r3,zero
  803b4c:	28e2b03a 	or	r17,r5,r3
  803b50:	0007883a 	mov	r3,zero
  803b54:	003f2306 	br	8037e4 <__alt_data_end+0xff8037e4>
  803b58:	0007883a 	mov	r3,zero
  803b5c:	5811883a 	mov	r8,r11
  803b60:	00bfffc4 	movi	r2,-1
  803b64:	0401ffc4 	movi	r16,2047
  803b68:	003e7806 	br	80354c <__alt_data_end+0xff80354c>
  803b6c:	4462b03a 	or	r17,r8,r17
  803b70:	8822c03a 	cmpne	r17,r17,zero
  803b74:	0009883a 	mov	r4,zero
  803b78:	003fa006 	br	8039fc <__alt_data_end+0xff8039fc>
  803b7c:	4811883a 	mov	r8,r9
  803b80:	3023883a 	mov	r17,r6
  803b84:	0401ffc4 	movi	r16,2047
  803b88:	003e0706 	br	8033a8 <__alt_data_end+0xff8033a8>
  803b8c:	4811883a 	mov	r8,r9
  803b90:	3023883a 	mov	r17,r6
  803b94:	003e0406 	br	8033a8 <__alt_data_end+0xff8033a8>
  803b98:	21fff804 	addi	r7,r4,-32
  803b9c:	01400804 	movi	r5,32
  803ba0:	41ced83a 	srl	r7,r8,r7
  803ba4:	21400a26 	beq	r4,r5,803bd0 <__adddf3+0x8a4>
  803ba8:	01401004 	movi	r5,64
  803bac:	2909c83a 	sub	r4,r5,r4
  803bb0:	4108983a 	sll	r4,r8,r4
  803bb4:	2448b03a 	or	r4,r4,r17
  803bb8:	2008c03a 	cmpne	r4,r4,zero
  803bbc:	3922b03a 	or	r17,r7,r4
  803bc0:	0009883a 	mov	r4,zero
  803bc4:	003f8d06 	br	8039fc <__alt_data_end+0xff8039fc>
  803bc8:	0007883a 	mov	r3,zero
  803bcc:	003fdd06 	br	803b44 <__alt_data_end+0xff803b44>
  803bd0:	0009883a 	mov	r4,zero
  803bd4:	003ff706 	br	803bb4 <__alt_data_end+0xff803bb4>

00803bd8 <__divdf3>:
  803bd8:	defff204 	addi	sp,sp,-56
  803bdc:	dd400915 	stw	r21,36(sp)
  803be0:	282ad53a 	srli	r21,r5,20
  803be4:	dd000815 	stw	r20,32(sp)
  803be8:	2828d7fa 	srli	r20,r5,31
  803bec:	dc000415 	stw	r16,16(sp)
  803bf0:	04000434 	movhi	r16,16
  803bf4:	df000c15 	stw	fp,48(sp)
  803bf8:	843fffc4 	addi	r16,r16,-1
  803bfc:	dfc00d15 	stw	ra,52(sp)
  803c00:	ddc00b15 	stw	r23,44(sp)
  803c04:	dd800a15 	stw	r22,40(sp)
  803c08:	dcc00715 	stw	r19,28(sp)
  803c0c:	dc800615 	stw	r18,24(sp)
  803c10:	dc400515 	stw	r17,20(sp)
  803c14:	ad41ffcc 	andi	r21,r21,2047
  803c18:	2c20703a 	and	r16,r5,r16
  803c1c:	a7003fcc 	andi	fp,r20,255
  803c20:	a8006126 	beq	r21,zero,803da8 <__divdf3+0x1d0>
  803c24:	0081ffc4 	movi	r2,2047
  803c28:	2025883a 	mov	r18,r4
  803c2c:	a8803726 	beq	r21,r2,803d0c <__divdf3+0x134>
  803c30:	80800434 	orhi	r2,r16,16
  803c34:	100490fa 	slli	r2,r2,3
  803c38:	2020d77a 	srli	r16,r4,29
  803c3c:	202490fa 	slli	r18,r4,3
  803c40:	ad7f0044 	addi	r21,r21,-1023
  803c44:	80a0b03a 	or	r16,r16,r2
  803c48:	0027883a 	mov	r19,zero
  803c4c:	0013883a 	mov	r9,zero
  803c50:	3804d53a 	srli	r2,r7,20
  803c54:	382cd7fa 	srli	r22,r7,31
  803c58:	04400434 	movhi	r17,16
  803c5c:	8c7fffc4 	addi	r17,r17,-1
  803c60:	1081ffcc 	andi	r2,r2,2047
  803c64:	3011883a 	mov	r8,r6
  803c68:	3c62703a 	and	r17,r7,r17
  803c6c:	b5c03fcc 	andi	r23,r22,255
  803c70:	10006c26 	beq	r2,zero,803e24 <__divdf3+0x24c>
  803c74:	00c1ffc4 	movi	r3,2047
  803c78:	10c06426 	beq	r2,r3,803e0c <__divdf3+0x234>
  803c7c:	88c00434 	orhi	r3,r17,16
  803c80:	180690fa 	slli	r3,r3,3
  803c84:	3022d77a 	srli	r17,r6,29
  803c88:	301090fa 	slli	r8,r6,3
  803c8c:	10bf0044 	addi	r2,r2,-1023
  803c90:	88e2b03a 	or	r17,r17,r3
  803c94:	000f883a 	mov	r7,zero
  803c98:	a58cf03a 	xor	r6,r20,r22
  803c9c:	3cc8b03a 	or	r4,r7,r19
  803ca0:	a8abc83a 	sub	r21,r21,r2
  803ca4:	008003c4 	movi	r2,15
  803ca8:	3007883a 	mov	r3,r6
  803cac:	34c03fcc 	andi	r19,r6,255
  803cb0:	11009036 	bltu	r2,r4,803ef4 <__divdf3+0x31c>
  803cb4:	200890ba 	slli	r4,r4,2
  803cb8:	00802034 	movhi	r2,128
  803cbc:	108f3304 	addi	r2,r2,15564
  803cc0:	2089883a 	add	r4,r4,r2
  803cc4:	20800017 	ldw	r2,0(r4)
  803cc8:	1000683a 	jmp	r2
  803ccc:	00803ef4 	movhi	r2,251
  803cd0:	00803d44 	movi	r2,245
  803cd4:	00803ee4 	muli	r2,zero,251
  803cd8:	00803d38 	rdprs	r2,zero,244
  803cdc:	00803ee4 	muli	r2,zero,251
  803ce0:	00803eb8 	rdprs	r2,zero,250
  803ce4:	00803ee4 	muli	r2,zero,251
  803ce8:	00803d38 	rdprs	r2,zero,244
  803cec:	00803d44 	movi	r2,245
  803cf0:	00803d44 	movi	r2,245
  803cf4:	00803eb8 	rdprs	r2,zero,250
  803cf8:	00803d38 	rdprs	r2,zero,244
  803cfc:	00803d28 	cmpgeui	r2,zero,244
  803d00:	00803d28 	cmpgeui	r2,zero,244
  803d04:	00803d28 	cmpgeui	r2,zero,244
  803d08:	008041d8 	cmpnei	r2,zero,263
  803d0c:	2404b03a 	or	r2,r4,r16
  803d10:	1000661e 	bne	r2,zero,803eac <__divdf3+0x2d4>
  803d14:	04c00204 	movi	r19,8
  803d18:	0021883a 	mov	r16,zero
  803d1c:	0025883a 	mov	r18,zero
  803d20:	02400084 	movi	r9,2
  803d24:	003fca06 	br	803c50 <__alt_data_end+0xff803c50>
  803d28:	8023883a 	mov	r17,r16
  803d2c:	9011883a 	mov	r8,r18
  803d30:	e02f883a 	mov	r23,fp
  803d34:	480f883a 	mov	r7,r9
  803d38:	00800084 	movi	r2,2
  803d3c:	3881311e 	bne	r7,r2,804204 <__divdf3+0x62c>
  803d40:	b827883a 	mov	r19,r23
  803d44:	98c0004c 	andi	r3,r19,1
  803d48:	0081ffc4 	movi	r2,2047
  803d4c:	000b883a 	mov	r5,zero
  803d50:	0025883a 	mov	r18,zero
  803d54:	1004953a 	slli	r2,r2,20
  803d58:	18c03fcc 	andi	r3,r3,255
  803d5c:	04400434 	movhi	r17,16
  803d60:	8c7fffc4 	addi	r17,r17,-1
  803d64:	180697fa 	slli	r3,r3,31
  803d68:	2c4a703a 	and	r5,r5,r17
  803d6c:	288ab03a 	or	r5,r5,r2
  803d70:	28c6b03a 	or	r3,r5,r3
  803d74:	9005883a 	mov	r2,r18
  803d78:	dfc00d17 	ldw	ra,52(sp)
  803d7c:	df000c17 	ldw	fp,48(sp)
  803d80:	ddc00b17 	ldw	r23,44(sp)
  803d84:	dd800a17 	ldw	r22,40(sp)
  803d88:	dd400917 	ldw	r21,36(sp)
  803d8c:	dd000817 	ldw	r20,32(sp)
  803d90:	dcc00717 	ldw	r19,28(sp)
  803d94:	dc800617 	ldw	r18,24(sp)
  803d98:	dc400517 	ldw	r17,20(sp)
  803d9c:	dc000417 	ldw	r16,16(sp)
  803da0:	dec00e04 	addi	sp,sp,56
  803da4:	f800283a 	ret
  803da8:	2404b03a 	or	r2,r4,r16
  803dac:	2027883a 	mov	r19,r4
  803db0:	10003926 	beq	r2,zero,803e98 <__divdf3+0x2c0>
  803db4:	80012e26 	beq	r16,zero,804270 <__divdf3+0x698>
  803db8:	8009883a 	mov	r4,r16
  803dbc:	d9800315 	stw	r6,12(sp)
  803dc0:	d9c00215 	stw	r7,8(sp)
  803dc4:	0805a4c0 	call	805a4c <__clzsi2>
  803dc8:	d9800317 	ldw	r6,12(sp)
  803dcc:	d9c00217 	ldw	r7,8(sp)
  803dd0:	113ffd44 	addi	r4,r2,-11
  803dd4:	00c00704 	movi	r3,28
  803dd8:	19012116 	blt	r3,r4,804260 <__divdf3+0x688>
  803ddc:	00c00744 	movi	r3,29
  803de0:	147ffe04 	addi	r17,r2,-8
  803de4:	1907c83a 	sub	r3,r3,r4
  803de8:	8460983a 	sll	r16,r16,r17
  803dec:	98c6d83a 	srl	r3,r19,r3
  803df0:	9c64983a 	sll	r18,r19,r17
  803df4:	1c20b03a 	or	r16,r3,r16
  803df8:	1080fcc4 	addi	r2,r2,1011
  803dfc:	00abc83a 	sub	r21,zero,r2
  803e00:	0027883a 	mov	r19,zero
  803e04:	0013883a 	mov	r9,zero
  803e08:	003f9106 	br	803c50 <__alt_data_end+0xff803c50>
  803e0c:	3446b03a 	or	r3,r6,r17
  803e10:	18001f1e 	bne	r3,zero,803e90 <__divdf3+0x2b8>
  803e14:	0023883a 	mov	r17,zero
  803e18:	0011883a 	mov	r8,zero
  803e1c:	01c00084 	movi	r7,2
  803e20:	003f9d06 	br	803c98 <__alt_data_end+0xff803c98>
  803e24:	3446b03a 	or	r3,r6,r17
  803e28:	18001526 	beq	r3,zero,803e80 <__divdf3+0x2a8>
  803e2c:	88011b26 	beq	r17,zero,80429c <__divdf3+0x6c4>
  803e30:	8809883a 	mov	r4,r17
  803e34:	d9800315 	stw	r6,12(sp)
  803e38:	da400115 	stw	r9,4(sp)
  803e3c:	0805a4c0 	call	805a4c <__clzsi2>
  803e40:	d9800317 	ldw	r6,12(sp)
  803e44:	da400117 	ldw	r9,4(sp)
  803e48:	113ffd44 	addi	r4,r2,-11
  803e4c:	00c00704 	movi	r3,28
  803e50:	19010e16 	blt	r3,r4,80428c <__divdf3+0x6b4>
  803e54:	00c00744 	movi	r3,29
  803e58:	123ffe04 	addi	r8,r2,-8
  803e5c:	1907c83a 	sub	r3,r3,r4
  803e60:	8a22983a 	sll	r17,r17,r8
  803e64:	30c6d83a 	srl	r3,r6,r3
  803e68:	3210983a 	sll	r8,r6,r8
  803e6c:	1c62b03a 	or	r17,r3,r17
  803e70:	1080fcc4 	addi	r2,r2,1011
  803e74:	0085c83a 	sub	r2,zero,r2
  803e78:	000f883a 	mov	r7,zero
  803e7c:	003f8606 	br	803c98 <__alt_data_end+0xff803c98>
  803e80:	0023883a 	mov	r17,zero
  803e84:	0011883a 	mov	r8,zero
  803e88:	01c00044 	movi	r7,1
  803e8c:	003f8206 	br	803c98 <__alt_data_end+0xff803c98>
  803e90:	01c000c4 	movi	r7,3
  803e94:	003f8006 	br	803c98 <__alt_data_end+0xff803c98>
  803e98:	04c00104 	movi	r19,4
  803e9c:	0021883a 	mov	r16,zero
  803ea0:	0025883a 	mov	r18,zero
  803ea4:	02400044 	movi	r9,1
  803ea8:	003f6906 	br	803c50 <__alt_data_end+0xff803c50>
  803eac:	04c00304 	movi	r19,12
  803eb0:	024000c4 	movi	r9,3
  803eb4:	003f6606 	br	803c50 <__alt_data_end+0xff803c50>
  803eb8:	01400434 	movhi	r5,16
  803ebc:	0007883a 	mov	r3,zero
  803ec0:	297fffc4 	addi	r5,r5,-1
  803ec4:	04bfffc4 	movi	r18,-1
  803ec8:	0081ffc4 	movi	r2,2047
  803ecc:	003fa106 	br	803d54 <__alt_data_end+0xff803d54>
  803ed0:	00c00044 	movi	r3,1
  803ed4:	1887c83a 	sub	r3,r3,r2
  803ed8:	01000e04 	movi	r4,56
  803edc:	20c1210e 	bge	r4,r3,804364 <__divdf3+0x78c>
  803ee0:	98c0004c 	andi	r3,r19,1
  803ee4:	0005883a 	mov	r2,zero
  803ee8:	000b883a 	mov	r5,zero
  803eec:	0025883a 	mov	r18,zero
  803ef0:	003f9806 	br	803d54 <__alt_data_end+0xff803d54>
  803ef4:	8c00fd36 	bltu	r17,r16,8042ec <__divdf3+0x714>
  803ef8:	8440fb26 	beq	r16,r17,8042e8 <__divdf3+0x710>
  803efc:	8007883a 	mov	r3,r16
  803f00:	ad7fffc4 	addi	r21,r21,-1
  803f04:	0021883a 	mov	r16,zero
  803f08:	4004d63a 	srli	r2,r8,24
  803f0c:	8822923a 	slli	r17,r17,8
  803f10:	1809883a 	mov	r4,r3
  803f14:	402c923a 	slli	r22,r8,8
  803f18:	88b8b03a 	or	fp,r17,r2
  803f1c:	e028d43a 	srli	r20,fp,16
  803f20:	d8c00015 	stw	r3,0(sp)
  803f24:	e5ffffcc 	andi	r23,fp,65535
  803f28:	a00b883a 	mov	r5,r20
  803f2c:	08029ac0 	call	8029ac <__udivsi3>
  803f30:	d8c00017 	ldw	r3,0(sp)
  803f34:	a00b883a 	mov	r5,r20
  803f38:	d8800315 	stw	r2,12(sp)
  803f3c:	1809883a 	mov	r4,r3
  803f40:	0802a100 	call	802a10 <__umodsi3>
  803f44:	d9800317 	ldw	r6,12(sp)
  803f48:	1006943a 	slli	r3,r2,16
  803f4c:	9004d43a 	srli	r2,r18,16
  803f50:	b9a3383a 	mul	r17,r23,r6
  803f54:	10c4b03a 	or	r2,r2,r3
  803f58:	1440062e 	bgeu	r2,r17,803f74 <__divdf3+0x39c>
  803f5c:	1705883a 	add	r2,r2,fp
  803f60:	30ffffc4 	addi	r3,r6,-1
  803f64:	1700ee36 	bltu	r2,fp,804320 <__divdf3+0x748>
  803f68:	1440ed2e 	bgeu	r2,r17,804320 <__divdf3+0x748>
  803f6c:	31bfff84 	addi	r6,r6,-2
  803f70:	1705883a 	add	r2,r2,fp
  803f74:	1463c83a 	sub	r17,r2,r17
  803f78:	a00b883a 	mov	r5,r20
  803f7c:	8809883a 	mov	r4,r17
  803f80:	d9800315 	stw	r6,12(sp)
  803f84:	08029ac0 	call	8029ac <__udivsi3>
  803f88:	a00b883a 	mov	r5,r20
  803f8c:	8809883a 	mov	r4,r17
  803f90:	d8800215 	stw	r2,8(sp)
  803f94:	0802a100 	call	802a10 <__umodsi3>
  803f98:	d9c00217 	ldw	r7,8(sp)
  803f9c:	1004943a 	slli	r2,r2,16
  803fa0:	94bfffcc 	andi	r18,r18,65535
  803fa4:	b9d1383a 	mul	r8,r23,r7
  803fa8:	90a4b03a 	or	r18,r18,r2
  803fac:	d9800317 	ldw	r6,12(sp)
  803fb0:	9200062e 	bgeu	r18,r8,803fcc <__divdf3+0x3f4>
  803fb4:	9725883a 	add	r18,r18,fp
  803fb8:	38bfffc4 	addi	r2,r7,-1
  803fbc:	9700d636 	bltu	r18,fp,804318 <__divdf3+0x740>
  803fc0:	9200d52e 	bgeu	r18,r8,804318 <__divdf3+0x740>
  803fc4:	39ffff84 	addi	r7,r7,-2
  803fc8:	9725883a 	add	r18,r18,fp
  803fcc:	3004943a 	slli	r2,r6,16
  803fd0:	b012d43a 	srli	r9,r22,16
  803fd4:	b1bfffcc 	andi	r6,r22,65535
  803fd8:	11e2b03a 	or	r17,r2,r7
  803fdc:	8806d43a 	srli	r3,r17,16
  803fe0:	893fffcc 	andi	r4,r17,65535
  803fe4:	218b383a 	mul	r5,r4,r6
  803fe8:	30c5383a 	mul	r2,r6,r3
  803fec:	2249383a 	mul	r4,r4,r9
  803ff0:	280ed43a 	srli	r7,r5,16
  803ff4:	9225c83a 	sub	r18,r18,r8
  803ff8:	2089883a 	add	r4,r4,r2
  803ffc:	3909883a 	add	r4,r7,r4
  804000:	1a47383a 	mul	r3,r3,r9
  804004:	2080022e 	bgeu	r4,r2,804010 <__divdf3+0x438>
  804008:	00800074 	movhi	r2,1
  80400c:	1887883a 	add	r3,r3,r2
  804010:	2004d43a 	srli	r2,r4,16
  804014:	2008943a 	slli	r4,r4,16
  804018:	297fffcc 	andi	r5,r5,65535
  80401c:	10c7883a 	add	r3,r2,r3
  804020:	2149883a 	add	r4,r4,r5
  804024:	90c0a536 	bltu	r18,r3,8042bc <__divdf3+0x6e4>
  804028:	90c0bf26 	beq	r18,r3,804328 <__divdf3+0x750>
  80402c:	90c7c83a 	sub	r3,r18,r3
  804030:	810fc83a 	sub	r7,r16,r4
  804034:	81e5803a 	cmpltu	r18,r16,r7
  804038:	1ca5c83a 	sub	r18,r3,r18
  80403c:	e480c126 	beq	fp,r18,804344 <__divdf3+0x76c>
  804040:	a00b883a 	mov	r5,r20
  804044:	9009883a 	mov	r4,r18
  804048:	d9800315 	stw	r6,12(sp)
  80404c:	d9c00215 	stw	r7,8(sp)
  804050:	da400115 	stw	r9,4(sp)
  804054:	08029ac0 	call	8029ac <__udivsi3>
  804058:	a00b883a 	mov	r5,r20
  80405c:	9009883a 	mov	r4,r18
  804060:	d8800015 	stw	r2,0(sp)
  804064:	0802a100 	call	802a10 <__umodsi3>
  804068:	d9c00217 	ldw	r7,8(sp)
  80406c:	da000017 	ldw	r8,0(sp)
  804070:	1006943a 	slli	r3,r2,16
  804074:	3804d43a 	srli	r2,r7,16
  804078:	ba21383a 	mul	r16,r23,r8
  80407c:	d9800317 	ldw	r6,12(sp)
  804080:	10c4b03a 	or	r2,r2,r3
  804084:	da400117 	ldw	r9,4(sp)
  804088:	1400062e 	bgeu	r2,r16,8040a4 <__divdf3+0x4cc>
  80408c:	1705883a 	add	r2,r2,fp
  804090:	40ffffc4 	addi	r3,r8,-1
  804094:	1700ad36 	bltu	r2,fp,80434c <__divdf3+0x774>
  804098:	1400ac2e 	bgeu	r2,r16,80434c <__divdf3+0x774>
  80409c:	423fff84 	addi	r8,r8,-2
  8040a0:	1705883a 	add	r2,r2,fp
  8040a4:	1421c83a 	sub	r16,r2,r16
  8040a8:	a00b883a 	mov	r5,r20
  8040ac:	8009883a 	mov	r4,r16
  8040b0:	d9800315 	stw	r6,12(sp)
  8040b4:	d9c00215 	stw	r7,8(sp)
  8040b8:	da000015 	stw	r8,0(sp)
  8040bc:	da400115 	stw	r9,4(sp)
  8040c0:	08029ac0 	call	8029ac <__udivsi3>
  8040c4:	8009883a 	mov	r4,r16
  8040c8:	a00b883a 	mov	r5,r20
  8040cc:	1025883a 	mov	r18,r2
  8040d0:	0802a100 	call	802a10 <__umodsi3>
  8040d4:	d9c00217 	ldw	r7,8(sp)
  8040d8:	1004943a 	slli	r2,r2,16
  8040dc:	bcaf383a 	mul	r23,r23,r18
  8040e0:	393fffcc 	andi	r4,r7,65535
  8040e4:	2088b03a 	or	r4,r4,r2
  8040e8:	d9800317 	ldw	r6,12(sp)
  8040ec:	da000017 	ldw	r8,0(sp)
  8040f0:	da400117 	ldw	r9,4(sp)
  8040f4:	25c0062e 	bgeu	r4,r23,804110 <__divdf3+0x538>
  8040f8:	2709883a 	add	r4,r4,fp
  8040fc:	90bfffc4 	addi	r2,r18,-1
  804100:	27009436 	bltu	r4,fp,804354 <__divdf3+0x77c>
  804104:	25c0932e 	bgeu	r4,r23,804354 <__divdf3+0x77c>
  804108:	94bfff84 	addi	r18,r18,-2
  80410c:	2709883a 	add	r4,r4,fp
  804110:	4004943a 	slli	r2,r8,16
  804114:	25efc83a 	sub	r23,r4,r23
  804118:	1490b03a 	or	r8,r2,r18
  80411c:	4008d43a 	srli	r4,r8,16
  804120:	40ffffcc 	andi	r3,r8,65535
  804124:	30c5383a 	mul	r2,r6,r3
  804128:	1a47383a 	mul	r3,r3,r9
  80412c:	310d383a 	mul	r6,r6,r4
  804130:	100ad43a 	srli	r5,r2,16
  804134:	4913383a 	mul	r9,r9,r4
  804138:	1987883a 	add	r3,r3,r6
  80413c:	28c7883a 	add	r3,r5,r3
  804140:	1980022e 	bgeu	r3,r6,80414c <__divdf3+0x574>
  804144:	01000074 	movhi	r4,1
  804148:	4913883a 	add	r9,r9,r4
  80414c:	1808d43a 	srli	r4,r3,16
  804150:	1806943a 	slli	r3,r3,16
  804154:	10bfffcc 	andi	r2,r2,65535
  804158:	2253883a 	add	r9,r4,r9
  80415c:	1887883a 	add	r3,r3,r2
  804160:	ba403836 	bltu	r23,r9,804244 <__divdf3+0x66c>
  804164:	ba403626 	beq	r23,r9,804240 <__divdf3+0x668>
  804168:	42000054 	ori	r8,r8,1
  80416c:	a880ffc4 	addi	r2,r21,1023
  804170:	00bf570e 	bge	zero,r2,803ed0 <__alt_data_end+0xff803ed0>
  804174:	40c001cc 	andi	r3,r8,7
  804178:	18000726 	beq	r3,zero,804198 <__divdf3+0x5c0>
  80417c:	40c003cc 	andi	r3,r8,15
  804180:	01000104 	movi	r4,4
  804184:	19000426 	beq	r3,r4,804198 <__divdf3+0x5c0>
  804188:	4107883a 	add	r3,r8,r4
  80418c:	1a11803a 	cmpltu	r8,r3,r8
  804190:	8a23883a 	add	r17,r17,r8
  804194:	1811883a 	mov	r8,r3
  804198:	88c0402c 	andhi	r3,r17,256
  80419c:	18000426 	beq	r3,zero,8041b0 <__divdf3+0x5d8>
  8041a0:	00ffc034 	movhi	r3,65280
  8041a4:	18ffffc4 	addi	r3,r3,-1
  8041a8:	a8810004 	addi	r2,r21,1024
  8041ac:	88e2703a 	and	r17,r17,r3
  8041b0:	00c1ff84 	movi	r3,2046
  8041b4:	18bee316 	blt	r3,r2,803d44 <__alt_data_end+0xff803d44>
  8041b8:	8824977a 	slli	r18,r17,29
  8041bc:	4010d0fa 	srli	r8,r8,3
  8041c0:	8822927a 	slli	r17,r17,9
  8041c4:	1081ffcc 	andi	r2,r2,2047
  8041c8:	9224b03a 	or	r18,r18,r8
  8041cc:	880ad33a 	srli	r5,r17,12
  8041d0:	98c0004c 	andi	r3,r19,1
  8041d4:	003edf06 	br	803d54 <__alt_data_end+0xff803d54>
  8041d8:	8080022c 	andhi	r2,r16,8
  8041dc:	10001226 	beq	r2,zero,804228 <__divdf3+0x650>
  8041e0:	8880022c 	andhi	r2,r17,8
  8041e4:	1000101e 	bne	r2,zero,804228 <__divdf3+0x650>
  8041e8:	00800434 	movhi	r2,16
  8041ec:	89400234 	orhi	r5,r17,8
  8041f0:	10bfffc4 	addi	r2,r2,-1
  8041f4:	b007883a 	mov	r3,r22
  8041f8:	288a703a 	and	r5,r5,r2
  8041fc:	4025883a 	mov	r18,r8
  804200:	003f3106 	br	803ec8 <__alt_data_end+0xff803ec8>
  804204:	008000c4 	movi	r2,3
  804208:	3880a626 	beq	r7,r2,8044a4 <__divdf3+0x8cc>
  80420c:	00800044 	movi	r2,1
  804210:	3880521e 	bne	r7,r2,80435c <__divdf3+0x784>
  804214:	b807883a 	mov	r3,r23
  804218:	0005883a 	mov	r2,zero
  80421c:	000b883a 	mov	r5,zero
  804220:	0025883a 	mov	r18,zero
  804224:	003ecb06 	br	803d54 <__alt_data_end+0xff803d54>
  804228:	00800434 	movhi	r2,16
  80422c:	81400234 	orhi	r5,r16,8
  804230:	10bfffc4 	addi	r2,r2,-1
  804234:	a007883a 	mov	r3,r20
  804238:	288a703a 	and	r5,r5,r2
  80423c:	003f2206 	br	803ec8 <__alt_data_end+0xff803ec8>
  804240:	183fca26 	beq	r3,zero,80416c <__alt_data_end+0xff80416c>
  804244:	e5ef883a 	add	r23,fp,r23
  804248:	40bfffc4 	addi	r2,r8,-1
  80424c:	bf00392e 	bgeu	r23,fp,804334 <__divdf3+0x75c>
  804250:	1011883a 	mov	r8,r2
  804254:	ba7fc41e 	bne	r23,r9,804168 <__alt_data_end+0xff804168>
  804258:	b0ffc31e 	bne	r22,r3,804168 <__alt_data_end+0xff804168>
  80425c:	003fc306 	br	80416c <__alt_data_end+0xff80416c>
  804260:	143ff604 	addi	r16,r2,-40
  804264:	9c20983a 	sll	r16,r19,r16
  804268:	0025883a 	mov	r18,zero
  80426c:	003ee206 	br	803df8 <__alt_data_end+0xff803df8>
  804270:	d9800315 	stw	r6,12(sp)
  804274:	d9c00215 	stw	r7,8(sp)
  804278:	0805a4c0 	call	805a4c <__clzsi2>
  80427c:	10800804 	addi	r2,r2,32
  804280:	d9c00217 	ldw	r7,8(sp)
  804284:	d9800317 	ldw	r6,12(sp)
  804288:	003ed106 	br	803dd0 <__alt_data_end+0xff803dd0>
  80428c:	147ff604 	addi	r17,r2,-40
  804290:	3462983a 	sll	r17,r6,r17
  804294:	0011883a 	mov	r8,zero
  804298:	003ef506 	br	803e70 <__alt_data_end+0xff803e70>
  80429c:	3009883a 	mov	r4,r6
  8042a0:	d9800315 	stw	r6,12(sp)
  8042a4:	da400115 	stw	r9,4(sp)
  8042a8:	0805a4c0 	call	805a4c <__clzsi2>
  8042ac:	10800804 	addi	r2,r2,32
  8042b0:	da400117 	ldw	r9,4(sp)
  8042b4:	d9800317 	ldw	r6,12(sp)
  8042b8:	003ee306 	br	803e48 <__alt_data_end+0xff803e48>
  8042bc:	85a1883a 	add	r16,r16,r22
  8042c0:	8585803a 	cmpltu	r2,r16,r22
  8042c4:	1705883a 	add	r2,r2,fp
  8042c8:	14a5883a 	add	r18,r2,r18
  8042cc:	88bfffc4 	addi	r2,r17,-1
  8042d0:	e4800c2e 	bgeu	fp,r18,804304 <__divdf3+0x72c>
  8042d4:	90c03e36 	bltu	r18,r3,8043d0 <__divdf3+0x7f8>
  8042d8:	1c806926 	beq	r3,r18,804480 <__divdf3+0x8a8>
  8042dc:	90c7c83a 	sub	r3,r18,r3
  8042e0:	1023883a 	mov	r17,r2
  8042e4:	003f5206 	br	804030 <__alt_data_end+0xff804030>
  8042e8:	923f0436 	bltu	r18,r8,803efc <__alt_data_end+0xff803efc>
  8042ec:	800897fa 	slli	r4,r16,31
  8042f0:	9004d07a 	srli	r2,r18,1
  8042f4:	8006d07a 	srli	r3,r16,1
  8042f8:	902097fa 	slli	r16,r18,31
  8042fc:	20a4b03a 	or	r18,r4,r2
  804300:	003f0106 	br	803f08 <__alt_data_end+0xff803f08>
  804304:	e4bff51e 	bne	fp,r18,8042dc <__alt_data_end+0xff8042dc>
  804308:	85bff22e 	bgeu	r16,r22,8042d4 <__alt_data_end+0xff8042d4>
  80430c:	e0c7c83a 	sub	r3,fp,r3
  804310:	1023883a 	mov	r17,r2
  804314:	003f4606 	br	804030 <__alt_data_end+0xff804030>
  804318:	100f883a 	mov	r7,r2
  80431c:	003f2b06 	br	803fcc <__alt_data_end+0xff803fcc>
  804320:	180d883a 	mov	r6,r3
  804324:	003f1306 	br	803f74 <__alt_data_end+0xff803f74>
  804328:	813fe436 	bltu	r16,r4,8042bc <__alt_data_end+0xff8042bc>
  80432c:	0007883a 	mov	r3,zero
  804330:	003f3f06 	br	804030 <__alt_data_end+0xff804030>
  804334:	ba402c36 	bltu	r23,r9,8043e8 <__divdf3+0x810>
  804338:	4dc05426 	beq	r9,r23,80448c <__divdf3+0x8b4>
  80433c:	1011883a 	mov	r8,r2
  804340:	003f8906 	br	804168 <__alt_data_end+0xff804168>
  804344:	023fffc4 	movi	r8,-1
  804348:	003f8806 	br	80416c <__alt_data_end+0xff80416c>
  80434c:	1811883a 	mov	r8,r3
  804350:	003f5406 	br	8040a4 <__alt_data_end+0xff8040a4>
  804354:	1025883a 	mov	r18,r2
  804358:	003f6d06 	br	804110 <__alt_data_end+0xff804110>
  80435c:	b827883a 	mov	r19,r23
  804360:	003f8206 	br	80416c <__alt_data_end+0xff80416c>
  804364:	010007c4 	movi	r4,31
  804368:	20c02616 	blt	r4,r3,804404 <__divdf3+0x82c>
  80436c:	00800804 	movi	r2,32
  804370:	10c5c83a 	sub	r2,r2,r3
  804374:	888a983a 	sll	r5,r17,r2
  804378:	40c8d83a 	srl	r4,r8,r3
  80437c:	4084983a 	sll	r2,r8,r2
  804380:	88e2d83a 	srl	r17,r17,r3
  804384:	2906b03a 	or	r3,r5,r4
  804388:	1004c03a 	cmpne	r2,r2,zero
  80438c:	1886b03a 	or	r3,r3,r2
  804390:	188001cc 	andi	r2,r3,7
  804394:	10000726 	beq	r2,zero,8043b4 <__divdf3+0x7dc>
  804398:	188003cc 	andi	r2,r3,15
  80439c:	01000104 	movi	r4,4
  8043a0:	11000426 	beq	r2,r4,8043b4 <__divdf3+0x7dc>
  8043a4:	1805883a 	mov	r2,r3
  8043a8:	10c00104 	addi	r3,r2,4
  8043ac:	1885803a 	cmpltu	r2,r3,r2
  8043b0:	88a3883a 	add	r17,r17,r2
  8043b4:	8880202c 	andhi	r2,r17,128
  8043b8:	10002726 	beq	r2,zero,804458 <__divdf3+0x880>
  8043bc:	98c0004c 	andi	r3,r19,1
  8043c0:	00800044 	movi	r2,1
  8043c4:	000b883a 	mov	r5,zero
  8043c8:	0025883a 	mov	r18,zero
  8043cc:	003e6106 	br	803d54 <__alt_data_end+0xff803d54>
  8043d0:	85a1883a 	add	r16,r16,r22
  8043d4:	8585803a 	cmpltu	r2,r16,r22
  8043d8:	1705883a 	add	r2,r2,fp
  8043dc:	14a5883a 	add	r18,r2,r18
  8043e0:	8c7fff84 	addi	r17,r17,-2
  8043e4:	003f1106 	br	80402c <__alt_data_end+0xff80402c>
  8043e8:	b589883a 	add	r4,r22,r22
  8043ec:	25ad803a 	cmpltu	r22,r4,r22
  8043f0:	b739883a 	add	fp,r22,fp
  8043f4:	40bfff84 	addi	r2,r8,-2
  8043f8:	bf2f883a 	add	r23,r23,fp
  8043fc:	202d883a 	mov	r22,r4
  804400:	003f9306 	br	804250 <__alt_data_end+0xff804250>
  804404:	013ff844 	movi	r4,-31
  804408:	2085c83a 	sub	r2,r4,r2
  80440c:	8888d83a 	srl	r4,r17,r2
  804410:	00800804 	movi	r2,32
  804414:	18802126 	beq	r3,r2,80449c <__divdf3+0x8c4>
  804418:	00801004 	movi	r2,64
  80441c:	10c5c83a 	sub	r2,r2,r3
  804420:	8884983a 	sll	r2,r17,r2
  804424:	1204b03a 	or	r2,r2,r8
  804428:	1004c03a 	cmpne	r2,r2,zero
  80442c:	2084b03a 	or	r2,r4,r2
  804430:	144001cc 	andi	r17,r2,7
  804434:	88000d1e 	bne	r17,zero,80446c <__divdf3+0x894>
  804438:	000b883a 	mov	r5,zero
  80443c:	1024d0fa 	srli	r18,r2,3
  804440:	98c0004c 	andi	r3,r19,1
  804444:	0005883a 	mov	r2,zero
  804448:	9464b03a 	or	r18,r18,r17
  80444c:	003e4106 	br	803d54 <__alt_data_end+0xff803d54>
  804450:	1007883a 	mov	r3,r2
  804454:	0023883a 	mov	r17,zero
  804458:	880a927a 	slli	r5,r17,9
  80445c:	1805883a 	mov	r2,r3
  804460:	8822977a 	slli	r17,r17,29
  804464:	280ad33a 	srli	r5,r5,12
  804468:	003ff406 	br	80443c <__alt_data_end+0xff80443c>
  80446c:	10c003cc 	andi	r3,r2,15
  804470:	01000104 	movi	r4,4
  804474:	193ff626 	beq	r3,r4,804450 <__alt_data_end+0xff804450>
  804478:	0023883a 	mov	r17,zero
  80447c:	003fca06 	br	8043a8 <__alt_data_end+0xff8043a8>
  804480:	813fd336 	bltu	r16,r4,8043d0 <__alt_data_end+0xff8043d0>
  804484:	1023883a 	mov	r17,r2
  804488:	003fa806 	br	80432c <__alt_data_end+0xff80432c>
  80448c:	b0ffd636 	bltu	r22,r3,8043e8 <__alt_data_end+0xff8043e8>
  804490:	1011883a 	mov	r8,r2
  804494:	b0ff341e 	bne	r22,r3,804168 <__alt_data_end+0xff804168>
  804498:	003f3406 	br	80416c <__alt_data_end+0xff80416c>
  80449c:	0005883a 	mov	r2,zero
  8044a0:	003fe006 	br	804424 <__alt_data_end+0xff804424>
  8044a4:	00800434 	movhi	r2,16
  8044a8:	89400234 	orhi	r5,r17,8
  8044ac:	10bfffc4 	addi	r2,r2,-1
  8044b0:	b807883a 	mov	r3,r23
  8044b4:	288a703a 	and	r5,r5,r2
  8044b8:	4025883a 	mov	r18,r8
  8044bc:	003e8206 	br	803ec8 <__alt_data_end+0xff803ec8>

008044c0 <__eqdf2>:
  8044c0:	2804d53a 	srli	r2,r5,20
  8044c4:	3806d53a 	srli	r3,r7,20
  8044c8:	02000434 	movhi	r8,16
  8044cc:	423fffc4 	addi	r8,r8,-1
  8044d0:	1081ffcc 	andi	r2,r2,2047
  8044d4:	0281ffc4 	movi	r10,2047
  8044d8:	2a12703a 	and	r9,r5,r8
  8044dc:	18c1ffcc 	andi	r3,r3,2047
  8044e0:	3a10703a 	and	r8,r7,r8
  8044e4:	280ad7fa 	srli	r5,r5,31
  8044e8:	380ed7fa 	srli	r7,r7,31
  8044ec:	12801026 	beq	r2,r10,804530 <__eqdf2+0x70>
  8044f0:	0281ffc4 	movi	r10,2047
  8044f4:	1a800a26 	beq	r3,r10,804520 <__eqdf2+0x60>
  8044f8:	10c00226 	beq	r2,r3,804504 <__eqdf2+0x44>
  8044fc:	00800044 	movi	r2,1
  804500:	f800283a 	ret
  804504:	4a3ffd1e 	bne	r9,r8,8044fc <__alt_data_end+0xff8044fc>
  804508:	21bffc1e 	bne	r4,r6,8044fc <__alt_data_end+0xff8044fc>
  80450c:	29c00c26 	beq	r5,r7,804540 <__eqdf2+0x80>
  804510:	103ffa1e 	bne	r2,zero,8044fc <__alt_data_end+0xff8044fc>
  804514:	2244b03a 	or	r2,r4,r9
  804518:	1004c03a 	cmpne	r2,r2,zero
  80451c:	f800283a 	ret
  804520:	3214b03a 	or	r10,r6,r8
  804524:	503ff426 	beq	r10,zero,8044f8 <__alt_data_end+0xff8044f8>
  804528:	00800044 	movi	r2,1
  80452c:	f800283a 	ret
  804530:	2254b03a 	or	r10,r4,r9
  804534:	503fee26 	beq	r10,zero,8044f0 <__alt_data_end+0xff8044f0>
  804538:	00800044 	movi	r2,1
  80453c:	f800283a 	ret
  804540:	0005883a 	mov	r2,zero
  804544:	f800283a 	ret

00804548 <__gedf2>:
  804548:	2804d53a 	srli	r2,r5,20
  80454c:	3806d53a 	srli	r3,r7,20
  804550:	02000434 	movhi	r8,16
  804554:	423fffc4 	addi	r8,r8,-1
  804558:	1081ffcc 	andi	r2,r2,2047
  80455c:	0241ffc4 	movi	r9,2047
  804560:	2a14703a 	and	r10,r5,r8
  804564:	18c1ffcc 	andi	r3,r3,2047
  804568:	3a10703a 	and	r8,r7,r8
  80456c:	280ad7fa 	srli	r5,r5,31
  804570:	380ed7fa 	srli	r7,r7,31
  804574:	12401d26 	beq	r2,r9,8045ec <__gedf2+0xa4>
  804578:	0241ffc4 	movi	r9,2047
  80457c:	1a401226 	beq	r3,r9,8045c8 <__gedf2+0x80>
  804580:	1000081e 	bne	r2,zero,8045a4 <__gedf2+0x5c>
  804584:	2296b03a 	or	r11,r4,r10
  804588:	5813003a 	cmpeq	r9,r11,zero
  80458c:	1800091e 	bne	r3,zero,8045b4 <__gedf2+0x6c>
  804590:	3218b03a 	or	r12,r6,r8
  804594:	6000071e 	bne	r12,zero,8045b4 <__gedf2+0x6c>
  804598:	0005883a 	mov	r2,zero
  80459c:	5800101e 	bne	r11,zero,8045e0 <__gedf2+0x98>
  8045a0:	f800283a 	ret
  8045a4:	18000c1e 	bne	r3,zero,8045d8 <__gedf2+0x90>
  8045a8:	3212b03a 	or	r9,r6,r8
  8045ac:	48000c26 	beq	r9,zero,8045e0 <__gedf2+0x98>
  8045b0:	0013883a 	mov	r9,zero
  8045b4:	39c03fcc 	andi	r7,r7,255
  8045b8:	48000826 	beq	r9,zero,8045dc <__gedf2+0x94>
  8045bc:	38000926 	beq	r7,zero,8045e4 <__gedf2+0x9c>
  8045c0:	00800044 	movi	r2,1
  8045c4:	f800283a 	ret
  8045c8:	3212b03a 	or	r9,r6,r8
  8045cc:	483fec26 	beq	r9,zero,804580 <__alt_data_end+0xff804580>
  8045d0:	00bfff84 	movi	r2,-2
  8045d4:	f800283a 	ret
  8045d8:	39c03fcc 	andi	r7,r7,255
  8045dc:	29c00626 	beq	r5,r7,8045f8 <__gedf2+0xb0>
  8045e0:	283ff726 	beq	r5,zero,8045c0 <__alt_data_end+0xff8045c0>
  8045e4:	00bfffc4 	movi	r2,-1
  8045e8:	f800283a 	ret
  8045ec:	2292b03a 	or	r9,r4,r10
  8045f0:	483fe126 	beq	r9,zero,804578 <__alt_data_end+0xff804578>
  8045f4:	003ff606 	br	8045d0 <__alt_data_end+0xff8045d0>
  8045f8:	18bff916 	blt	r3,r2,8045e0 <__alt_data_end+0xff8045e0>
  8045fc:	10c00316 	blt	r2,r3,80460c <__gedf2+0xc4>
  804600:	42bff736 	bltu	r8,r10,8045e0 <__alt_data_end+0xff8045e0>
  804604:	52000326 	beq	r10,r8,804614 <__gedf2+0xcc>
  804608:	5200042e 	bgeu	r10,r8,80461c <__gedf2+0xd4>
  80460c:	283fec1e 	bne	r5,zero,8045c0 <__alt_data_end+0xff8045c0>
  804610:	003ff406 	br	8045e4 <__alt_data_end+0xff8045e4>
  804614:	313ff236 	bltu	r6,r4,8045e0 <__alt_data_end+0xff8045e0>
  804618:	21bffc36 	bltu	r4,r6,80460c <__alt_data_end+0xff80460c>
  80461c:	0005883a 	mov	r2,zero
  804620:	f800283a 	ret

00804624 <__muldf3>:
  804624:	defff304 	addi	sp,sp,-52
  804628:	2804d53a 	srli	r2,r5,20
  80462c:	dd800915 	stw	r22,36(sp)
  804630:	282cd7fa 	srli	r22,r5,31
  804634:	dc000315 	stw	r16,12(sp)
  804638:	04000434 	movhi	r16,16
  80463c:	dd400815 	stw	r21,32(sp)
  804640:	dc800515 	stw	r18,20(sp)
  804644:	843fffc4 	addi	r16,r16,-1
  804648:	dfc00c15 	stw	ra,48(sp)
  80464c:	df000b15 	stw	fp,44(sp)
  804650:	ddc00a15 	stw	r23,40(sp)
  804654:	dd000715 	stw	r20,28(sp)
  804658:	dcc00615 	stw	r19,24(sp)
  80465c:	dc400415 	stw	r17,16(sp)
  804660:	1481ffcc 	andi	r18,r2,2047
  804664:	2c20703a 	and	r16,r5,r16
  804668:	b02b883a 	mov	r21,r22
  80466c:	b2403fcc 	andi	r9,r22,255
  804670:	90006026 	beq	r18,zero,8047f4 <__muldf3+0x1d0>
  804674:	0081ffc4 	movi	r2,2047
  804678:	2029883a 	mov	r20,r4
  80467c:	90803626 	beq	r18,r2,804758 <__muldf3+0x134>
  804680:	80800434 	orhi	r2,r16,16
  804684:	100490fa 	slli	r2,r2,3
  804688:	2020d77a 	srli	r16,r4,29
  80468c:	202890fa 	slli	r20,r4,3
  804690:	94bf0044 	addi	r18,r18,-1023
  804694:	80a0b03a 	or	r16,r16,r2
  804698:	0027883a 	mov	r19,zero
  80469c:	0039883a 	mov	fp,zero
  8046a0:	3804d53a 	srli	r2,r7,20
  8046a4:	382ed7fa 	srli	r23,r7,31
  8046a8:	04400434 	movhi	r17,16
  8046ac:	8c7fffc4 	addi	r17,r17,-1
  8046b0:	1081ffcc 	andi	r2,r2,2047
  8046b4:	3011883a 	mov	r8,r6
  8046b8:	3c62703a 	and	r17,r7,r17
  8046bc:	ba803fcc 	andi	r10,r23,255
  8046c0:	10006d26 	beq	r2,zero,804878 <__muldf3+0x254>
  8046c4:	00c1ffc4 	movi	r3,2047
  8046c8:	10c06526 	beq	r2,r3,804860 <__muldf3+0x23c>
  8046cc:	88c00434 	orhi	r3,r17,16
  8046d0:	180690fa 	slli	r3,r3,3
  8046d4:	3022d77a 	srli	r17,r6,29
  8046d8:	301090fa 	slli	r8,r6,3
  8046dc:	10bf0044 	addi	r2,r2,-1023
  8046e0:	88e2b03a 	or	r17,r17,r3
  8046e4:	000b883a 	mov	r5,zero
  8046e8:	9085883a 	add	r2,r18,r2
  8046ec:	2cc8b03a 	or	r4,r5,r19
  8046f0:	00c003c4 	movi	r3,15
  8046f4:	bdacf03a 	xor	r22,r23,r22
  8046f8:	12c00044 	addi	r11,r2,1
  8046fc:	19009936 	bltu	r3,r4,804964 <__muldf3+0x340>
  804700:	200890ba 	slli	r4,r4,2
  804704:	00c02034 	movhi	r3,128
  804708:	18d1c604 	addi	r3,r3,18200
  80470c:	20c9883a 	add	r4,r4,r3
  804710:	20c00017 	ldw	r3,0(r4)
  804714:	1800683a 	jmp	r3
  804718:	00804964 	muli	r2,zero,293
  80471c:	00804778 	rdprs	r2,zero,285
  804720:	00804778 	rdprs	r2,zero,285
  804724:	00804774 	movhi	r2,285
  804728:	00804940 	call	80494 <__alt_mem_sdram-0x77fb6c>
  80472c:	00804940 	call	80494 <__alt_mem_sdram-0x77fb6c>
  804730:	00804928 	cmpgeui	r2,zero,292
  804734:	00804774 	movhi	r2,285
  804738:	00804940 	call	80494 <__alt_mem_sdram-0x77fb6c>
  80473c:	00804928 	cmpgeui	r2,zero,292
  804740:	00804940 	call	80494 <__alt_mem_sdram-0x77fb6c>
  804744:	00804774 	movhi	r2,285
  804748:	00804950 	cmplti	r2,zero,293
  80474c:	00804950 	cmplti	r2,zero,293
  804750:	00804950 	cmplti	r2,zero,293
  804754:	00804b6c 	andhi	r2,zero,301
  804758:	2404b03a 	or	r2,r4,r16
  80475c:	10006f1e 	bne	r2,zero,80491c <__muldf3+0x2f8>
  804760:	04c00204 	movi	r19,8
  804764:	0021883a 	mov	r16,zero
  804768:	0029883a 	mov	r20,zero
  80476c:	07000084 	movi	fp,2
  804770:	003fcb06 	br	8046a0 <__alt_data_end+0xff8046a0>
  804774:	502d883a 	mov	r22,r10
  804778:	00800084 	movi	r2,2
  80477c:	28805726 	beq	r5,r2,8048dc <__muldf3+0x2b8>
  804780:	008000c4 	movi	r2,3
  804784:	28816626 	beq	r5,r2,804d20 <__muldf3+0x6fc>
  804788:	00800044 	movi	r2,1
  80478c:	2881411e 	bne	r5,r2,804c94 <__muldf3+0x670>
  804790:	b02b883a 	mov	r21,r22
  804794:	0005883a 	mov	r2,zero
  804798:	000b883a 	mov	r5,zero
  80479c:	0029883a 	mov	r20,zero
  8047a0:	1004953a 	slli	r2,r2,20
  8047a4:	a8c03fcc 	andi	r3,r21,255
  8047a8:	04400434 	movhi	r17,16
  8047ac:	8c7fffc4 	addi	r17,r17,-1
  8047b0:	180697fa 	slli	r3,r3,31
  8047b4:	2c4a703a 	and	r5,r5,r17
  8047b8:	288ab03a 	or	r5,r5,r2
  8047bc:	28c6b03a 	or	r3,r5,r3
  8047c0:	a005883a 	mov	r2,r20
  8047c4:	dfc00c17 	ldw	ra,48(sp)
  8047c8:	df000b17 	ldw	fp,44(sp)
  8047cc:	ddc00a17 	ldw	r23,40(sp)
  8047d0:	dd800917 	ldw	r22,36(sp)
  8047d4:	dd400817 	ldw	r21,32(sp)
  8047d8:	dd000717 	ldw	r20,28(sp)
  8047dc:	dcc00617 	ldw	r19,24(sp)
  8047e0:	dc800517 	ldw	r18,20(sp)
  8047e4:	dc400417 	ldw	r17,16(sp)
  8047e8:	dc000317 	ldw	r16,12(sp)
  8047ec:	dec00d04 	addi	sp,sp,52
  8047f0:	f800283a 	ret
  8047f4:	2404b03a 	or	r2,r4,r16
  8047f8:	2027883a 	mov	r19,r4
  8047fc:	10004226 	beq	r2,zero,804908 <__muldf3+0x2e4>
  804800:	8000fc26 	beq	r16,zero,804bf4 <__muldf3+0x5d0>
  804804:	8009883a 	mov	r4,r16
  804808:	d9800215 	stw	r6,8(sp)
  80480c:	d9c00015 	stw	r7,0(sp)
  804810:	da400115 	stw	r9,4(sp)
  804814:	0805a4c0 	call	805a4c <__clzsi2>
  804818:	d9800217 	ldw	r6,8(sp)
  80481c:	d9c00017 	ldw	r7,0(sp)
  804820:	da400117 	ldw	r9,4(sp)
  804824:	113ffd44 	addi	r4,r2,-11
  804828:	00c00704 	movi	r3,28
  80482c:	1900ed16 	blt	r3,r4,804be4 <__muldf3+0x5c0>
  804830:	00c00744 	movi	r3,29
  804834:	147ffe04 	addi	r17,r2,-8
  804838:	1907c83a 	sub	r3,r3,r4
  80483c:	8460983a 	sll	r16,r16,r17
  804840:	98c6d83a 	srl	r3,r19,r3
  804844:	9c68983a 	sll	r20,r19,r17
  804848:	1c20b03a 	or	r16,r3,r16
  80484c:	1080fcc4 	addi	r2,r2,1011
  804850:	00a5c83a 	sub	r18,zero,r2
  804854:	0027883a 	mov	r19,zero
  804858:	0039883a 	mov	fp,zero
  80485c:	003f9006 	br	8046a0 <__alt_data_end+0xff8046a0>
  804860:	3446b03a 	or	r3,r6,r17
  804864:	1800261e 	bne	r3,zero,804900 <__muldf3+0x2dc>
  804868:	0023883a 	mov	r17,zero
  80486c:	0011883a 	mov	r8,zero
  804870:	01400084 	movi	r5,2
  804874:	003f9c06 	br	8046e8 <__alt_data_end+0xff8046e8>
  804878:	3446b03a 	or	r3,r6,r17
  80487c:	18001c26 	beq	r3,zero,8048f0 <__muldf3+0x2cc>
  804880:	8800ce26 	beq	r17,zero,804bbc <__muldf3+0x598>
  804884:	8809883a 	mov	r4,r17
  804888:	d9800215 	stw	r6,8(sp)
  80488c:	da400115 	stw	r9,4(sp)
  804890:	da800015 	stw	r10,0(sp)
  804894:	0805a4c0 	call	805a4c <__clzsi2>
  804898:	d9800217 	ldw	r6,8(sp)
  80489c:	da400117 	ldw	r9,4(sp)
  8048a0:	da800017 	ldw	r10,0(sp)
  8048a4:	113ffd44 	addi	r4,r2,-11
  8048a8:	00c00704 	movi	r3,28
  8048ac:	1900bf16 	blt	r3,r4,804bac <__muldf3+0x588>
  8048b0:	00c00744 	movi	r3,29
  8048b4:	123ffe04 	addi	r8,r2,-8
  8048b8:	1907c83a 	sub	r3,r3,r4
  8048bc:	8a22983a 	sll	r17,r17,r8
  8048c0:	30c6d83a 	srl	r3,r6,r3
  8048c4:	3210983a 	sll	r8,r6,r8
  8048c8:	1c62b03a 	or	r17,r3,r17
  8048cc:	1080fcc4 	addi	r2,r2,1011
  8048d0:	0085c83a 	sub	r2,zero,r2
  8048d4:	000b883a 	mov	r5,zero
  8048d8:	003f8306 	br	8046e8 <__alt_data_end+0xff8046e8>
  8048dc:	b02b883a 	mov	r21,r22
  8048e0:	0081ffc4 	movi	r2,2047
  8048e4:	000b883a 	mov	r5,zero
  8048e8:	0029883a 	mov	r20,zero
  8048ec:	003fac06 	br	8047a0 <__alt_data_end+0xff8047a0>
  8048f0:	0023883a 	mov	r17,zero
  8048f4:	0011883a 	mov	r8,zero
  8048f8:	01400044 	movi	r5,1
  8048fc:	003f7a06 	br	8046e8 <__alt_data_end+0xff8046e8>
  804900:	014000c4 	movi	r5,3
  804904:	003f7806 	br	8046e8 <__alt_data_end+0xff8046e8>
  804908:	04c00104 	movi	r19,4
  80490c:	0021883a 	mov	r16,zero
  804910:	0029883a 	mov	r20,zero
  804914:	07000044 	movi	fp,1
  804918:	003f6106 	br	8046a0 <__alt_data_end+0xff8046a0>
  80491c:	04c00304 	movi	r19,12
  804920:	070000c4 	movi	fp,3
  804924:	003f5e06 	br	8046a0 <__alt_data_end+0xff8046a0>
  804928:	01400434 	movhi	r5,16
  80492c:	002b883a 	mov	r21,zero
  804930:	297fffc4 	addi	r5,r5,-1
  804934:	053fffc4 	movi	r20,-1
  804938:	0081ffc4 	movi	r2,2047
  80493c:	003f9806 	br	8047a0 <__alt_data_end+0xff8047a0>
  804940:	8023883a 	mov	r17,r16
  804944:	a011883a 	mov	r8,r20
  804948:	e00b883a 	mov	r5,fp
  80494c:	003f8a06 	br	804778 <__alt_data_end+0xff804778>
  804950:	8023883a 	mov	r17,r16
  804954:	a011883a 	mov	r8,r20
  804958:	482d883a 	mov	r22,r9
  80495c:	e00b883a 	mov	r5,fp
  804960:	003f8506 	br	804778 <__alt_data_end+0xff804778>
  804964:	a00ad43a 	srli	r5,r20,16
  804968:	401ad43a 	srli	r13,r8,16
  80496c:	a53fffcc 	andi	r20,r20,65535
  804970:	423fffcc 	andi	r8,r8,65535
  804974:	4519383a 	mul	r12,r8,r20
  804978:	4147383a 	mul	r3,r8,r5
  80497c:	6d09383a 	mul	r4,r13,r20
  804980:	600cd43a 	srli	r6,r12,16
  804984:	2b5d383a 	mul	r14,r5,r13
  804988:	20c9883a 	add	r4,r4,r3
  80498c:	310d883a 	add	r6,r6,r4
  804990:	30c0022e 	bgeu	r6,r3,80499c <__muldf3+0x378>
  804994:	00c00074 	movhi	r3,1
  804998:	70dd883a 	add	r14,r14,r3
  80499c:	8826d43a 	srli	r19,r17,16
  8049a0:	8bffffcc 	andi	r15,r17,65535
  8049a4:	7d23383a 	mul	r17,r15,r20
  8049a8:	7949383a 	mul	r4,r15,r5
  8049ac:	9d29383a 	mul	r20,r19,r20
  8049b0:	8814d43a 	srli	r10,r17,16
  8049b4:	3012943a 	slli	r9,r6,16
  8049b8:	a129883a 	add	r20,r20,r4
  8049bc:	633fffcc 	andi	r12,r12,65535
  8049c0:	5515883a 	add	r10,r10,r20
  8049c4:	3006d43a 	srli	r3,r6,16
  8049c8:	4b13883a 	add	r9,r9,r12
  8049cc:	2ccb383a 	mul	r5,r5,r19
  8049d0:	5100022e 	bgeu	r10,r4,8049dc <__muldf3+0x3b8>
  8049d4:	01000074 	movhi	r4,1
  8049d8:	290b883a 	add	r5,r5,r4
  8049dc:	802ad43a 	srli	r21,r16,16
  8049e0:	843fffcc 	andi	r16,r16,65535
  8049e4:	440d383a 	mul	r6,r8,r16
  8049e8:	4565383a 	mul	r18,r8,r21
  8049ec:	8349383a 	mul	r4,r16,r13
  8049f0:	500e943a 	slli	r7,r10,16
  8049f4:	3010d43a 	srli	r8,r6,16
  8049f8:	5028d43a 	srli	r20,r10,16
  8049fc:	2489883a 	add	r4,r4,r18
  804a00:	8abfffcc 	andi	r10,r17,65535
  804a04:	3a95883a 	add	r10,r7,r10
  804a08:	4119883a 	add	r12,r8,r4
  804a0c:	a169883a 	add	r20,r20,r5
  804a10:	1a87883a 	add	r3,r3,r10
  804a14:	6d5b383a 	mul	r13,r13,r21
  804a18:	6480022e 	bgeu	r12,r18,804a24 <__muldf3+0x400>
  804a1c:	01000074 	movhi	r4,1
  804a20:	691b883a 	add	r13,r13,r4
  804a24:	7c25383a 	mul	r18,r15,r16
  804a28:	7d4b383a 	mul	r5,r15,r21
  804a2c:	84cf383a 	mul	r7,r16,r19
  804a30:	901ed43a 	srli	r15,r18,16
  804a34:	6008d43a 	srli	r4,r12,16
  804a38:	6010943a 	slli	r8,r12,16
  804a3c:	394f883a 	add	r7,r7,r5
  804a40:	333fffcc 	andi	r12,r6,65535
  804a44:	79df883a 	add	r15,r15,r7
  804a48:	235b883a 	add	r13,r4,r13
  804a4c:	9d63383a 	mul	r17,r19,r21
  804a50:	4309883a 	add	r4,r8,r12
  804a54:	7940022e 	bgeu	r15,r5,804a60 <__muldf3+0x43c>
  804a58:	01400074 	movhi	r5,1
  804a5c:	8963883a 	add	r17,r17,r5
  804a60:	780a943a 	slli	r5,r15,16
  804a64:	91bfffcc 	andi	r6,r18,65535
  804a68:	70c7883a 	add	r3,r14,r3
  804a6c:	298d883a 	add	r6,r5,r6
  804a70:	1a8f803a 	cmpltu	r7,r3,r10
  804a74:	350b883a 	add	r5,r6,r20
  804a78:	20c7883a 	add	r3,r4,r3
  804a7c:	3955883a 	add	r10,r7,r5
  804a80:	1909803a 	cmpltu	r4,r3,r4
  804a84:	6a91883a 	add	r8,r13,r10
  804a88:	780cd43a 	srli	r6,r15,16
  804a8c:	2219883a 	add	r12,r4,r8
  804a90:	2d0b803a 	cmpltu	r5,r5,r20
  804a94:	51cf803a 	cmpltu	r7,r10,r7
  804a98:	29ceb03a 	or	r7,r5,r7
  804a9c:	4351803a 	cmpltu	r8,r8,r13
  804aa0:	610b803a 	cmpltu	r5,r12,r4
  804aa4:	4148b03a 	or	r4,r8,r5
  804aa8:	398f883a 	add	r7,r7,r6
  804aac:	3909883a 	add	r4,r7,r4
  804ab0:	1810927a 	slli	r8,r3,9
  804ab4:	2449883a 	add	r4,r4,r17
  804ab8:	2008927a 	slli	r4,r4,9
  804abc:	6022d5fa 	srli	r17,r12,23
  804ac0:	1806d5fa 	srli	r3,r3,23
  804ac4:	4252b03a 	or	r9,r8,r9
  804ac8:	600a927a 	slli	r5,r12,9
  804acc:	4810c03a 	cmpne	r8,r9,zero
  804ad0:	2462b03a 	or	r17,r4,r17
  804ad4:	40c6b03a 	or	r3,r8,r3
  804ad8:	8900402c 	andhi	r4,r17,256
  804adc:	1950b03a 	or	r8,r3,r5
  804ae0:	20000726 	beq	r4,zero,804b00 <__muldf3+0x4dc>
  804ae4:	4006d07a 	srli	r3,r8,1
  804ae8:	880497fa 	slli	r2,r17,31
  804aec:	4200004c 	andi	r8,r8,1
  804af0:	8822d07a 	srli	r17,r17,1
  804af4:	1a10b03a 	or	r8,r3,r8
  804af8:	1210b03a 	or	r8,r2,r8
  804afc:	5805883a 	mov	r2,r11
  804b00:	1140ffc4 	addi	r5,r2,1023
  804b04:	0140440e 	bge	zero,r5,804c18 <__muldf3+0x5f4>
  804b08:	40c001cc 	andi	r3,r8,7
  804b0c:	18000726 	beq	r3,zero,804b2c <__muldf3+0x508>
  804b10:	40c003cc 	andi	r3,r8,15
  804b14:	01000104 	movi	r4,4
  804b18:	19000426 	beq	r3,r4,804b2c <__muldf3+0x508>
  804b1c:	4107883a 	add	r3,r8,r4
  804b20:	1a11803a 	cmpltu	r8,r3,r8
  804b24:	8a23883a 	add	r17,r17,r8
  804b28:	1811883a 	mov	r8,r3
  804b2c:	88c0402c 	andhi	r3,r17,256
  804b30:	18000426 	beq	r3,zero,804b44 <__muldf3+0x520>
  804b34:	11410004 	addi	r5,r2,1024
  804b38:	00bfc034 	movhi	r2,65280
  804b3c:	10bfffc4 	addi	r2,r2,-1
  804b40:	88a2703a 	and	r17,r17,r2
  804b44:	0081ff84 	movi	r2,2046
  804b48:	117f6416 	blt	r2,r5,8048dc <__alt_data_end+0xff8048dc>
  804b4c:	8828977a 	slli	r20,r17,29
  804b50:	4010d0fa 	srli	r8,r8,3
  804b54:	8822927a 	slli	r17,r17,9
  804b58:	2881ffcc 	andi	r2,r5,2047
  804b5c:	a228b03a 	or	r20,r20,r8
  804b60:	880ad33a 	srli	r5,r17,12
  804b64:	b02b883a 	mov	r21,r22
  804b68:	003f0d06 	br	8047a0 <__alt_data_end+0xff8047a0>
  804b6c:	8080022c 	andhi	r2,r16,8
  804b70:	10000926 	beq	r2,zero,804b98 <__muldf3+0x574>
  804b74:	8880022c 	andhi	r2,r17,8
  804b78:	1000071e 	bne	r2,zero,804b98 <__muldf3+0x574>
  804b7c:	00800434 	movhi	r2,16
  804b80:	89400234 	orhi	r5,r17,8
  804b84:	10bfffc4 	addi	r2,r2,-1
  804b88:	b82b883a 	mov	r21,r23
  804b8c:	288a703a 	and	r5,r5,r2
  804b90:	4029883a 	mov	r20,r8
  804b94:	003f6806 	br	804938 <__alt_data_end+0xff804938>
  804b98:	00800434 	movhi	r2,16
  804b9c:	81400234 	orhi	r5,r16,8
  804ba0:	10bfffc4 	addi	r2,r2,-1
  804ba4:	288a703a 	and	r5,r5,r2
  804ba8:	003f6306 	br	804938 <__alt_data_end+0xff804938>
  804bac:	147ff604 	addi	r17,r2,-40
  804bb0:	3462983a 	sll	r17,r6,r17
  804bb4:	0011883a 	mov	r8,zero
  804bb8:	003f4406 	br	8048cc <__alt_data_end+0xff8048cc>
  804bbc:	3009883a 	mov	r4,r6
  804bc0:	d9800215 	stw	r6,8(sp)
  804bc4:	da400115 	stw	r9,4(sp)
  804bc8:	da800015 	stw	r10,0(sp)
  804bcc:	0805a4c0 	call	805a4c <__clzsi2>
  804bd0:	10800804 	addi	r2,r2,32
  804bd4:	da800017 	ldw	r10,0(sp)
  804bd8:	da400117 	ldw	r9,4(sp)
  804bdc:	d9800217 	ldw	r6,8(sp)
  804be0:	003f3006 	br	8048a4 <__alt_data_end+0xff8048a4>
  804be4:	143ff604 	addi	r16,r2,-40
  804be8:	9c20983a 	sll	r16,r19,r16
  804bec:	0029883a 	mov	r20,zero
  804bf0:	003f1606 	br	80484c <__alt_data_end+0xff80484c>
  804bf4:	d9800215 	stw	r6,8(sp)
  804bf8:	d9c00015 	stw	r7,0(sp)
  804bfc:	da400115 	stw	r9,4(sp)
  804c00:	0805a4c0 	call	805a4c <__clzsi2>
  804c04:	10800804 	addi	r2,r2,32
  804c08:	da400117 	ldw	r9,4(sp)
  804c0c:	d9c00017 	ldw	r7,0(sp)
  804c10:	d9800217 	ldw	r6,8(sp)
  804c14:	003f0306 	br	804824 <__alt_data_end+0xff804824>
  804c18:	00c00044 	movi	r3,1
  804c1c:	1947c83a 	sub	r3,r3,r5
  804c20:	00800e04 	movi	r2,56
  804c24:	10feda16 	blt	r2,r3,804790 <__alt_data_end+0xff804790>
  804c28:	008007c4 	movi	r2,31
  804c2c:	10c01b16 	blt	r2,r3,804c9c <__muldf3+0x678>
  804c30:	00800804 	movi	r2,32
  804c34:	10c5c83a 	sub	r2,r2,r3
  804c38:	888a983a 	sll	r5,r17,r2
  804c3c:	40c8d83a 	srl	r4,r8,r3
  804c40:	4084983a 	sll	r2,r8,r2
  804c44:	88e2d83a 	srl	r17,r17,r3
  804c48:	2906b03a 	or	r3,r5,r4
  804c4c:	1004c03a 	cmpne	r2,r2,zero
  804c50:	1886b03a 	or	r3,r3,r2
  804c54:	188001cc 	andi	r2,r3,7
  804c58:	10000726 	beq	r2,zero,804c78 <__muldf3+0x654>
  804c5c:	188003cc 	andi	r2,r3,15
  804c60:	01000104 	movi	r4,4
  804c64:	11000426 	beq	r2,r4,804c78 <__muldf3+0x654>
  804c68:	1805883a 	mov	r2,r3
  804c6c:	10c00104 	addi	r3,r2,4
  804c70:	1885803a 	cmpltu	r2,r3,r2
  804c74:	88a3883a 	add	r17,r17,r2
  804c78:	8880202c 	andhi	r2,r17,128
  804c7c:	10001c26 	beq	r2,zero,804cf0 <__muldf3+0x6cc>
  804c80:	b02b883a 	mov	r21,r22
  804c84:	00800044 	movi	r2,1
  804c88:	000b883a 	mov	r5,zero
  804c8c:	0029883a 	mov	r20,zero
  804c90:	003ec306 	br	8047a0 <__alt_data_end+0xff8047a0>
  804c94:	5805883a 	mov	r2,r11
  804c98:	003f9906 	br	804b00 <__alt_data_end+0xff804b00>
  804c9c:	00bff844 	movi	r2,-31
  804ca0:	1145c83a 	sub	r2,r2,r5
  804ca4:	8888d83a 	srl	r4,r17,r2
  804ca8:	00800804 	movi	r2,32
  804cac:	18801a26 	beq	r3,r2,804d18 <__muldf3+0x6f4>
  804cb0:	00801004 	movi	r2,64
  804cb4:	10c5c83a 	sub	r2,r2,r3
  804cb8:	8884983a 	sll	r2,r17,r2
  804cbc:	1204b03a 	or	r2,r2,r8
  804cc0:	1004c03a 	cmpne	r2,r2,zero
  804cc4:	2084b03a 	or	r2,r4,r2
  804cc8:	144001cc 	andi	r17,r2,7
  804ccc:	88000d1e 	bne	r17,zero,804d04 <__muldf3+0x6e0>
  804cd0:	000b883a 	mov	r5,zero
  804cd4:	1028d0fa 	srli	r20,r2,3
  804cd8:	b02b883a 	mov	r21,r22
  804cdc:	0005883a 	mov	r2,zero
  804ce0:	a468b03a 	or	r20,r20,r17
  804ce4:	003eae06 	br	8047a0 <__alt_data_end+0xff8047a0>
  804ce8:	1007883a 	mov	r3,r2
  804cec:	0023883a 	mov	r17,zero
  804cf0:	880a927a 	slli	r5,r17,9
  804cf4:	1805883a 	mov	r2,r3
  804cf8:	8822977a 	slli	r17,r17,29
  804cfc:	280ad33a 	srli	r5,r5,12
  804d00:	003ff406 	br	804cd4 <__alt_data_end+0xff804cd4>
  804d04:	10c003cc 	andi	r3,r2,15
  804d08:	01000104 	movi	r4,4
  804d0c:	193ff626 	beq	r3,r4,804ce8 <__alt_data_end+0xff804ce8>
  804d10:	0023883a 	mov	r17,zero
  804d14:	003fd506 	br	804c6c <__alt_data_end+0xff804c6c>
  804d18:	0005883a 	mov	r2,zero
  804d1c:	003fe706 	br	804cbc <__alt_data_end+0xff804cbc>
  804d20:	00800434 	movhi	r2,16
  804d24:	89400234 	orhi	r5,r17,8
  804d28:	10bfffc4 	addi	r2,r2,-1
  804d2c:	b02b883a 	mov	r21,r22
  804d30:	288a703a 	and	r5,r5,r2
  804d34:	4029883a 	mov	r20,r8
  804d38:	003eff06 	br	804938 <__alt_data_end+0xff804938>

00804d3c <__subdf3>:
  804d3c:	02000434 	movhi	r8,16
  804d40:	423fffc4 	addi	r8,r8,-1
  804d44:	defffb04 	addi	sp,sp,-20
  804d48:	2a14703a 	and	r10,r5,r8
  804d4c:	3812d53a 	srli	r9,r7,20
  804d50:	3a10703a 	and	r8,r7,r8
  804d54:	2006d77a 	srli	r3,r4,29
  804d58:	3004d77a 	srli	r2,r6,29
  804d5c:	dc000015 	stw	r16,0(sp)
  804d60:	501490fa 	slli	r10,r10,3
  804d64:	2820d53a 	srli	r16,r5,20
  804d68:	401090fa 	slli	r8,r8,3
  804d6c:	dc800215 	stw	r18,8(sp)
  804d70:	dc400115 	stw	r17,4(sp)
  804d74:	dfc00415 	stw	ra,16(sp)
  804d78:	202290fa 	slli	r17,r4,3
  804d7c:	dcc00315 	stw	r19,12(sp)
  804d80:	4a41ffcc 	andi	r9,r9,2047
  804d84:	0101ffc4 	movi	r4,2047
  804d88:	2824d7fa 	srli	r18,r5,31
  804d8c:	8401ffcc 	andi	r16,r16,2047
  804d90:	50c6b03a 	or	r3,r10,r3
  804d94:	380ed7fa 	srli	r7,r7,31
  804d98:	408ab03a 	or	r5,r8,r2
  804d9c:	300c90fa 	slli	r6,r6,3
  804da0:	49009626 	beq	r9,r4,804ffc <__subdf3+0x2c0>
  804da4:	39c0005c 	xori	r7,r7,1
  804da8:	8245c83a 	sub	r2,r16,r9
  804dac:	3c807426 	beq	r7,r18,804f80 <__subdf3+0x244>
  804db0:	0080af0e 	bge	zero,r2,805070 <__subdf3+0x334>
  804db4:	48002a1e 	bne	r9,zero,804e60 <__subdf3+0x124>
  804db8:	2988b03a 	or	r4,r5,r6
  804dbc:	20009a1e 	bne	r4,zero,805028 <__subdf3+0x2ec>
  804dc0:	888001cc 	andi	r2,r17,7
  804dc4:	10000726 	beq	r2,zero,804de4 <__subdf3+0xa8>
  804dc8:	888003cc 	andi	r2,r17,15
  804dcc:	01000104 	movi	r4,4
  804dd0:	11000426 	beq	r2,r4,804de4 <__subdf3+0xa8>
  804dd4:	890b883a 	add	r5,r17,r4
  804dd8:	2c63803a 	cmpltu	r17,r5,r17
  804ddc:	1c47883a 	add	r3,r3,r17
  804de0:	2823883a 	mov	r17,r5
  804de4:	1880202c 	andhi	r2,r3,128
  804de8:	10005926 	beq	r2,zero,804f50 <__subdf3+0x214>
  804dec:	84000044 	addi	r16,r16,1
  804df0:	0081ffc4 	movi	r2,2047
  804df4:	8080be26 	beq	r16,r2,8050f0 <__subdf3+0x3b4>
  804df8:	017fe034 	movhi	r5,65408
  804dfc:	297fffc4 	addi	r5,r5,-1
  804e00:	1946703a 	and	r3,r3,r5
  804e04:	1804977a 	slli	r2,r3,29
  804e08:	1806927a 	slli	r3,r3,9
  804e0c:	8822d0fa 	srli	r17,r17,3
  804e10:	8401ffcc 	andi	r16,r16,2047
  804e14:	180ad33a 	srli	r5,r3,12
  804e18:	9100004c 	andi	r4,r18,1
  804e1c:	1444b03a 	or	r2,r2,r17
  804e20:	80c1ffcc 	andi	r3,r16,2047
  804e24:	1820953a 	slli	r16,r3,20
  804e28:	20c03fcc 	andi	r3,r4,255
  804e2c:	180897fa 	slli	r4,r3,31
  804e30:	00c00434 	movhi	r3,16
  804e34:	18ffffc4 	addi	r3,r3,-1
  804e38:	28c6703a 	and	r3,r5,r3
  804e3c:	1c06b03a 	or	r3,r3,r16
  804e40:	1906b03a 	or	r3,r3,r4
  804e44:	dfc00417 	ldw	ra,16(sp)
  804e48:	dcc00317 	ldw	r19,12(sp)
  804e4c:	dc800217 	ldw	r18,8(sp)
  804e50:	dc400117 	ldw	r17,4(sp)
  804e54:	dc000017 	ldw	r16,0(sp)
  804e58:	dec00504 	addi	sp,sp,20
  804e5c:	f800283a 	ret
  804e60:	0101ffc4 	movi	r4,2047
  804e64:	813fd626 	beq	r16,r4,804dc0 <__alt_data_end+0xff804dc0>
  804e68:	29402034 	orhi	r5,r5,128
  804e6c:	01000e04 	movi	r4,56
  804e70:	2080a316 	blt	r4,r2,805100 <__subdf3+0x3c4>
  804e74:	010007c4 	movi	r4,31
  804e78:	2080c616 	blt	r4,r2,805194 <__subdf3+0x458>
  804e7c:	01000804 	movi	r4,32
  804e80:	2089c83a 	sub	r4,r4,r2
  804e84:	2910983a 	sll	r8,r5,r4
  804e88:	308ed83a 	srl	r7,r6,r2
  804e8c:	3108983a 	sll	r4,r6,r4
  804e90:	2884d83a 	srl	r2,r5,r2
  804e94:	41ccb03a 	or	r6,r8,r7
  804e98:	2008c03a 	cmpne	r4,r4,zero
  804e9c:	310cb03a 	or	r6,r6,r4
  804ea0:	898dc83a 	sub	r6,r17,r6
  804ea4:	89a3803a 	cmpltu	r17,r17,r6
  804ea8:	1887c83a 	sub	r3,r3,r2
  804eac:	1c47c83a 	sub	r3,r3,r17
  804eb0:	3023883a 	mov	r17,r6
  804eb4:	1880202c 	andhi	r2,r3,128
  804eb8:	10002326 	beq	r2,zero,804f48 <__subdf3+0x20c>
  804ebc:	04c02034 	movhi	r19,128
  804ec0:	9cffffc4 	addi	r19,r19,-1
  804ec4:	1ce6703a 	and	r19,r3,r19
  804ec8:	98007a26 	beq	r19,zero,8050b4 <__subdf3+0x378>
  804ecc:	9809883a 	mov	r4,r19
  804ed0:	0805a4c0 	call	805a4c <__clzsi2>
  804ed4:	113ffe04 	addi	r4,r2,-8
  804ed8:	00c007c4 	movi	r3,31
  804edc:	19007b16 	blt	r3,r4,8050cc <__subdf3+0x390>
  804ee0:	00800804 	movi	r2,32
  804ee4:	1105c83a 	sub	r2,r2,r4
  804ee8:	8884d83a 	srl	r2,r17,r2
  804eec:	9906983a 	sll	r3,r19,r4
  804ef0:	8922983a 	sll	r17,r17,r4
  804ef4:	10c4b03a 	or	r2,r2,r3
  804ef8:	24007816 	blt	r4,r16,8050dc <__subdf3+0x3a0>
  804efc:	2421c83a 	sub	r16,r4,r16
  804f00:	80c00044 	addi	r3,r16,1
  804f04:	010007c4 	movi	r4,31
  804f08:	20c09516 	blt	r4,r3,805160 <__subdf3+0x424>
  804f0c:	01400804 	movi	r5,32
  804f10:	28cbc83a 	sub	r5,r5,r3
  804f14:	88c8d83a 	srl	r4,r17,r3
  804f18:	8962983a 	sll	r17,r17,r5
  804f1c:	114a983a 	sll	r5,r2,r5
  804f20:	10c6d83a 	srl	r3,r2,r3
  804f24:	8804c03a 	cmpne	r2,r17,zero
  804f28:	290ab03a 	or	r5,r5,r4
  804f2c:	28a2b03a 	or	r17,r5,r2
  804f30:	0021883a 	mov	r16,zero
  804f34:	003fa206 	br	804dc0 <__alt_data_end+0xff804dc0>
  804f38:	2090b03a 	or	r8,r4,r2
  804f3c:	40018e26 	beq	r8,zero,805578 <__subdf3+0x83c>
  804f40:	1007883a 	mov	r3,r2
  804f44:	2023883a 	mov	r17,r4
  804f48:	888001cc 	andi	r2,r17,7
  804f4c:	103f9e1e 	bne	r2,zero,804dc8 <__alt_data_end+0xff804dc8>
  804f50:	1804977a 	slli	r2,r3,29
  804f54:	8822d0fa 	srli	r17,r17,3
  804f58:	1810d0fa 	srli	r8,r3,3
  804f5c:	9100004c 	andi	r4,r18,1
  804f60:	1444b03a 	or	r2,r2,r17
  804f64:	00c1ffc4 	movi	r3,2047
  804f68:	80c02826 	beq	r16,r3,80500c <__subdf3+0x2d0>
  804f6c:	01400434 	movhi	r5,16
  804f70:	297fffc4 	addi	r5,r5,-1
  804f74:	80e0703a 	and	r16,r16,r3
  804f78:	414a703a 	and	r5,r8,r5
  804f7c:	003fa806 	br	804e20 <__alt_data_end+0xff804e20>
  804f80:	0080630e 	bge	zero,r2,805110 <__subdf3+0x3d4>
  804f84:	48003026 	beq	r9,zero,805048 <__subdf3+0x30c>
  804f88:	0101ffc4 	movi	r4,2047
  804f8c:	813f8c26 	beq	r16,r4,804dc0 <__alt_data_end+0xff804dc0>
  804f90:	29402034 	orhi	r5,r5,128
  804f94:	01000e04 	movi	r4,56
  804f98:	2080a90e 	bge	r4,r2,805240 <__subdf3+0x504>
  804f9c:	298cb03a 	or	r6,r5,r6
  804fa0:	3012c03a 	cmpne	r9,r6,zero
  804fa4:	0005883a 	mov	r2,zero
  804fa8:	4c53883a 	add	r9,r9,r17
  804fac:	4c63803a 	cmpltu	r17,r9,r17
  804fb0:	10c7883a 	add	r3,r2,r3
  804fb4:	88c7883a 	add	r3,r17,r3
  804fb8:	4823883a 	mov	r17,r9
  804fbc:	1880202c 	andhi	r2,r3,128
  804fc0:	1000d026 	beq	r2,zero,805304 <__subdf3+0x5c8>
  804fc4:	84000044 	addi	r16,r16,1
  804fc8:	0081ffc4 	movi	r2,2047
  804fcc:	8080fe26 	beq	r16,r2,8053c8 <__subdf3+0x68c>
  804fd0:	00bfe034 	movhi	r2,65408
  804fd4:	10bfffc4 	addi	r2,r2,-1
  804fd8:	1886703a 	and	r3,r3,r2
  804fdc:	880ad07a 	srli	r5,r17,1
  804fe0:	180497fa 	slli	r2,r3,31
  804fe4:	8900004c 	andi	r4,r17,1
  804fe8:	2922b03a 	or	r17,r5,r4
  804fec:	1806d07a 	srli	r3,r3,1
  804ff0:	1462b03a 	or	r17,r2,r17
  804ff4:	3825883a 	mov	r18,r7
  804ff8:	003f7106 	br	804dc0 <__alt_data_end+0xff804dc0>
  804ffc:	2984b03a 	or	r2,r5,r6
  805000:	103f6826 	beq	r2,zero,804da4 <__alt_data_end+0xff804da4>
  805004:	39c03fcc 	andi	r7,r7,255
  805008:	003f6706 	br	804da8 <__alt_data_end+0xff804da8>
  80500c:	4086b03a 	or	r3,r8,r2
  805010:	18015226 	beq	r3,zero,80555c <__subdf3+0x820>
  805014:	00c00434 	movhi	r3,16
  805018:	41400234 	orhi	r5,r8,8
  80501c:	18ffffc4 	addi	r3,r3,-1
  805020:	28ca703a 	and	r5,r5,r3
  805024:	003f7e06 	br	804e20 <__alt_data_end+0xff804e20>
  805028:	10bfffc4 	addi	r2,r2,-1
  80502c:	1000491e 	bne	r2,zero,805154 <__subdf3+0x418>
  805030:	898fc83a 	sub	r7,r17,r6
  805034:	89e3803a 	cmpltu	r17,r17,r7
  805038:	1947c83a 	sub	r3,r3,r5
  80503c:	1c47c83a 	sub	r3,r3,r17
  805040:	3823883a 	mov	r17,r7
  805044:	003f9b06 	br	804eb4 <__alt_data_end+0xff804eb4>
  805048:	2988b03a 	or	r4,r5,r6
  80504c:	203f5c26 	beq	r4,zero,804dc0 <__alt_data_end+0xff804dc0>
  805050:	10bfffc4 	addi	r2,r2,-1
  805054:	1000931e 	bne	r2,zero,8052a4 <__subdf3+0x568>
  805058:	898d883a 	add	r6,r17,r6
  80505c:	3463803a 	cmpltu	r17,r6,r17
  805060:	1947883a 	add	r3,r3,r5
  805064:	88c7883a 	add	r3,r17,r3
  805068:	3023883a 	mov	r17,r6
  80506c:	003fd306 	br	804fbc <__alt_data_end+0xff804fbc>
  805070:	1000541e 	bne	r2,zero,8051c4 <__subdf3+0x488>
  805074:	80800044 	addi	r2,r16,1
  805078:	1081ffcc 	andi	r2,r2,2047
  80507c:	01000044 	movi	r4,1
  805080:	2080a20e 	bge	r4,r2,80530c <__subdf3+0x5d0>
  805084:	8989c83a 	sub	r4,r17,r6
  805088:	8905803a 	cmpltu	r2,r17,r4
  80508c:	1967c83a 	sub	r19,r3,r5
  805090:	98a7c83a 	sub	r19,r19,r2
  805094:	9880202c 	andhi	r2,r19,128
  805098:	10006326 	beq	r2,zero,805228 <__subdf3+0x4ec>
  80509c:	3463c83a 	sub	r17,r6,r17
  8050a0:	28c7c83a 	sub	r3,r5,r3
  8050a4:	344d803a 	cmpltu	r6,r6,r17
  8050a8:	19a7c83a 	sub	r19,r3,r6
  8050ac:	3825883a 	mov	r18,r7
  8050b0:	983f861e 	bne	r19,zero,804ecc <__alt_data_end+0xff804ecc>
  8050b4:	8809883a 	mov	r4,r17
  8050b8:	0805a4c0 	call	805a4c <__clzsi2>
  8050bc:	10800804 	addi	r2,r2,32
  8050c0:	113ffe04 	addi	r4,r2,-8
  8050c4:	00c007c4 	movi	r3,31
  8050c8:	193f850e 	bge	r3,r4,804ee0 <__alt_data_end+0xff804ee0>
  8050cc:	10bff604 	addi	r2,r2,-40
  8050d0:	8884983a 	sll	r2,r17,r2
  8050d4:	0023883a 	mov	r17,zero
  8050d8:	243f880e 	bge	r4,r16,804efc <__alt_data_end+0xff804efc>
  8050dc:	00ffe034 	movhi	r3,65408
  8050e0:	18ffffc4 	addi	r3,r3,-1
  8050e4:	8121c83a 	sub	r16,r16,r4
  8050e8:	10c6703a 	and	r3,r2,r3
  8050ec:	003f3406 	br	804dc0 <__alt_data_end+0xff804dc0>
  8050f0:	9100004c 	andi	r4,r18,1
  8050f4:	000b883a 	mov	r5,zero
  8050f8:	0005883a 	mov	r2,zero
  8050fc:	003f4806 	br	804e20 <__alt_data_end+0xff804e20>
  805100:	298cb03a 	or	r6,r5,r6
  805104:	300cc03a 	cmpne	r6,r6,zero
  805108:	0005883a 	mov	r2,zero
  80510c:	003f6406 	br	804ea0 <__alt_data_end+0xff804ea0>
  805110:	10009a1e 	bne	r2,zero,80537c <__subdf3+0x640>
  805114:	82400044 	addi	r9,r16,1
  805118:	4881ffcc 	andi	r2,r9,2047
  80511c:	02800044 	movi	r10,1
  805120:	5080670e 	bge	r10,r2,8052c0 <__subdf3+0x584>
  805124:	0081ffc4 	movi	r2,2047
  805128:	4880af26 	beq	r9,r2,8053e8 <__subdf3+0x6ac>
  80512c:	898d883a 	add	r6,r17,r6
  805130:	1945883a 	add	r2,r3,r5
  805134:	3447803a 	cmpltu	r3,r6,r17
  805138:	1887883a 	add	r3,r3,r2
  80513c:	182297fa 	slli	r17,r3,31
  805140:	300cd07a 	srli	r6,r6,1
  805144:	1806d07a 	srli	r3,r3,1
  805148:	4821883a 	mov	r16,r9
  80514c:	89a2b03a 	or	r17,r17,r6
  805150:	003f1b06 	br	804dc0 <__alt_data_end+0xff804dc0>
  805154:	0101ffc4 	movi	r4,2047
  805158:	813f441e 	bne	r16,r4,804e6c <__alt_data_end+0xff804e6c>
  80515c:	003f1806 	br	804dc0 <__alt_data_end+0xff804dc0>
  805160:	843ff844 	addi	r16,r16,-31
  805164:	01400804 	movi	r5,32
  805168:	1408d83a 	srl	r4,r2,r16
  80516c:	19405026 	beq	r3,r5,8052b0 <__subdf3+0x574>
  805170:	01401004 	movi	r5,64
  805174:	28c7c83a 	sub	r3,r5,r3
  805178:	10c4983a 	sll	r2,r2,r3
  80517c:	88a2b03a 	or	r17,r17,r2
  805180:	8822c03a 	cmpne	r17,r17,zero
  805184:	2462b03a 	or	r17,r4,r17
  805188:	0007883a 	mov	r3,zero
  80518c:	0021883a 	mov	r16,zero
  805190:	003f6d06 	br	804f48 <__alt_data_end+0xff804f48>
  805194:	11fff804 	addi	r7,r2,-32
  805198:	01000804 	movi	r4,32
  80519c:	29ced83a 	srl	r7,r5,r7
  8051a0:	11004526 	beq	r2,r4,8052b8 <__subdf3+0x57c>
  8051a4:	01001004 	movi	r4,64
  8051a8:	2089c83a 	sub	r4,r4,r2
  8051ac:	2904983a 	sll	r2,r5,r4
  8051b0:	118cb03a 	or	r6,r2,r6
  8051b4:	300cc03a 	cmpne	r6,r6,zero
  8051b8:	398cb03a 	or	r6,r7,r6
  8051bc:	0005883a 	mov	r2,zero
  8051c0:	003f3706 	br	804ea0 <__alt_data_end+0xff804ea0>
  8051c4:	80002a26 	beq	r16,zero,805270 <__subdf3+0x534>
  8051c8:	0101ffc4 	movi	r4,2047
  8051cc:	49006626 	beq	r9,r4,805368 <__subdf3+0x62c>
  8051d0:	0085c83a 	sub	r2,zero,r2
  8051d4:	18c02034 	orhi	r3,r3,128
  8051d8:	01000e04 	movi	r4,56
  8051dc:	20807e16 	blt	r4,r2,8053d8 <__subdf3+0x69c>
  8051e0:	010007c4 	movi	r4,31
  8051e4:	2080e716 	blt	r4,r2,805584 <__subdf3+0x848>
  8051e8:	01000804 	movi	r4,32
  8051ec:	2089c83a 	sub	r4,r4,r2
  8051f0:	1914983a 	sll	r10,r3,r4
  8051f4:	8890d83a 	srl	r8,r17,r2
  8051f8:	8908983a 	sll	r4,r17,r4
  8051fc:	1884d83a 	srl	r2,r3,r2
  805200:	5222b03a 	or	r17,r10,r8
  805204:	2006c03a 	cmpne	r3,r4,zero
  805208:	88e2b03a 	or	r17,r17,r3
  80520c:	3463c83a 	sub	r17,r6,r17
  805210:	2885c83a 	sub	r2,r5,r2
  805214:	344d803a 	cmpltu	r6,r6,r17
  805218:	1187c83a 	sub	r3,r2,r6
  80521c:	4821883a 	mov	r16,r9
  805220:	3825883a 	mov	r18,r7
  805224:	003f2306 	br	804eb4 <__alt_data_end+0xff804eb4>
  805228:	24d0b03a 	or	r8,r4,r19
  80522c:	40001b1e 	bne	r8,zero,80529c <__subdf3+0x560>
  805230:	0005883a 	mov	r2,zero
  805234:	0009883a 	mov	r4,zero
  805238:	0021883a 	mov	r16,zero
  80523c:	003f4906 	br	804f64 <__alt_data_end+0xff804f64>
  805240:	010007c4 	movi	r4,31
  805244:	20803a16 	blt	r4,r2,805330 <__subdf3+0x5f4>
  805248:	01000804 	movi	r4,32
  80524c:	2089c83a 	sub	r4,r4,r2
  805250:	2912983a 	sll	r9,r5,r4
  805254:	3090d83a 	srl	r8,r6,r2
  805258:	3108983a 	sll	r4,r6,r4
  80525c:	2884d83a 	srl	r2,r5,r2
  805260:	4a12b03a 	or	r9,r9,r8
  805264:	2008c03a 	cmpne	r4,r4,zero
  805268:	4912b03a 	or	r9,r9,r4
  80526c:	003f4e06 	br	804fa8 <__alt_data_end+0xff804fa8>
  805270:	1c48b03a 	or	r4,r3,r17
  805274:	20003c26 	beq	r4,zero,805368 <__subdf3+0x62c>
  805278:	0084303a 	nor	r2,zero,r2
  80527c:	1000381e 	bne	r2,zero,805360 <__subdf3+0x624>
  805280:	3463c83a 	sub	r17,r6,r17
  805284:	28c5c83a 	sub	r2,r5,r3
  805288:	344d803a 	cmpltu	r6,r6,r17
  80528c:	1187c83a 	sub	r3,r2,r6
  805290:	4821883a 	mov	r16,r9
  805294:	3825883a 	mov	r18,r7
  805298:	003f0606 	br	804eb4 <__alt_data_end+0xff804eb4>
  80529c:	2023883a 	mov	r17,r4
  8052a0:	003f0906 	br	804ec8 <__alt_data_end+0xff804ec8>
  8052a4:	0101ffc4 	movi	r4,2047
  8052a8:	813f3a1e 	bne	r16,r4,804f94 <__alt_data_end+0xff804f94>
  8052ac:	003ec406 	br	804dc0 <__alt_data_end+0xff804dc0>
  8052b0:	0005883a 	mov	r2,zero
  8052b4:	003fb106 	br	80517c <__alt_data_end+0xff80517c>
  8052b8:	0005883a 	mov	r2,zero
  8052bc:	003fbc06 	br	8051b0 <__alt_data_end+0xff8051b0>
  8052c0:	1c44b03a 	or	r2,r3,r17
  8052c4:	80008e1e 	bne	r16,zero,805500 <__subdf3+0x7c4>
  8052c8:	1000c826 	beq	r2,zero,8055ec <__subdf3+0x8b0>
  8052cc:	2984b03a 	or	r2,r5,r6
  8052d0:	103ebb26 	beq	r2,zero,804dc0 <__alt_data_end+0xff804dc0>
  8052d4:	8989883a 	add	r4,r17,r6
  8052d8:	1945883a 	add	r2,r3,r5
  8052dc:	2447803a 	cmpltu	r3,r4,r17
  8052e0:	1887883a 	add	r3,r3,r2
  8052e4:	1880202c 	andhi	r2,r3,128
  8052e8:	2023883a 	mov	r17,r4
  8052ec:	103f1626 	beq	r2,zero,804f48 <__alt_data_end+0xff804f48>
  8052f0:	00bfe034 	movhi	r2,65408
  8052f4:	10bfffc4 	addi	r2,r2,-1
  8052f8:	5021883a 	mov	r16,r10
  8052fc:	1886703a 	and	r3,r3,r2
  805300:	003eaf06 	br	804dc0 <__alt_data_end+0xff804dc0>
  805304:	3825883a 	mov	r18,r7
  805308:	003f0f06 	br	804f48 <__alt_data_end+0xff804f48>
  80530c:	1c44b03a 	or	r2,r3,r17
  805310:	8000251e 	bne	r16,zero,8053a8 <__subdf3+0x66c>
  805314:	1000661e 	bne	r2,zero,8054b0 <__subdf3+0x774>
  805318:	2990b03a 	or	r8,r5,r6
  80531c:	40009626 	beq	r8,zero,805578 <__subdf3+0x83c>
  805320:	2807883a 	mov	r3,r5
  805324:	3023883a 	mov	r17,r6
  805328:	3825883a 	mov	r18,r7
  80532c:	003ea406 	br	804dc0 <__alt_data_end+0xff804dc0>
  805330:	127ff804 	addi	r9,r2,-32
  805334:	01000804 	movi	r4,32
  805338:	2a52d83a 	srl	r9,r5,r9
  80533c:	11008c26 	beq	r2,r4,805570 <__subdf3+0x834>
  805340:	01001004 	movi	r4,64
  805344:	2085c83a 	sub	r2,r4,r2
  805348:	2884983a 	sll	r2,r5,r2
  80534c:	118cb03a 	or	r6,r2,r6
  805350:	300cc03a 	cmpne	r6,r6,zero
  805354:	4992b03a 	or	r9,r9,r6
  805358:	0005883a 	mov	r2,zero
  80535c:	003f1206 	br	804fa8 <__alt_data_end+0xff804fa8>
  805360:	0101ffc4 	movi	r4,2047
  805364:	493f9c1e 	bne	r9,r4,8051d8 <__alt_data_end+0xff8051d8>
  805368:	2807883a 	mov	r3,r5
  80536c:	3023883a 	mov	r17,r6
  805370:	4821883a 	mov	r16,r9
  805374:	3825883a 	mov	r18,r7
  805378:	003e9106 	br	804dc0 <__alt_data_end+0xff804dc0>
  80537c:	80001f1e 	bne	r16,zero,8053fc <__subdf3+0x6c0>
  805380:	1c48b03a 	or	r4,r3,r17
  805384:	20005a26 	beq	r4,zero,8054f0 <__subdf3+0x7b4>
  805388:	0084303a 	nor	r2,zero,r2
  80538c:	1000561e 	bne	r2,zero,8054e8 <__subdf3+0x7ac>
  805390:	89a3883a 	add	r17,r17,r6
  805394:	1945883a 	add	r2,r3,r5
  805398:	898d803a 	cmpltu	r6,r17,r6
  80539c:	3087883a 	add	r3,r6,r2
  8053a0:	4821883a 	mov	r16,r9
  8053a4:	003f0506 	br	804fbc <__alt_data_end+0xff804fbc>
  8053a8:	10002b1e 	bne	r2,zero,805458 <__subdf3+0x71c>
  8053ac:	2984b03a 	or	r2,r5,r6
  8053b0:	10008026 	beq	r2,zero,8055b4 <__subdf3+0x878>
  8053b4:	2807883a 	mov	r3,r5
  8053b8:	3023883a 	mov	r17,r6
  8053bc:	3825883a 	mov	r18,r7
  8053c0:	0401ffc4 	movi	r16,2047
  8053c4:	003e7e06 	br	804dc0 <__alt_data_end+0xff804dc0>
  8053c8:	3809883a 	mov	r4,r7
  8053cc:	0011883a 	mov	r8,zero
  8053d0:	0005883a 	mov	r2,zero
  8053d4:	003ee306 	br	804f64 <__alt_data_end+0xff804f64>
  8053d8:	1c62b03a 	or	r17,r3,r17
  8053dc:	8822c03a 	cmpne	r17,r17,zero
  8053e0:	0005883a 	mov	r2,zero
  8053e4:	003f8906 	br	80520c <__alt_data_end+0xff80520c>
  8053e8:	3809883a 	mov	r4,r7
  8053ec:	4821883a 	mov	r16,r9
  8053f0:	0011883a 	mov	r8,zero
  8053f4:	0005883a 	mov	r2,zero
  8053f8:	003eda06 	br	804f64 <__alt_data_end+0xff804f64>
  8053fc:	0101ffc4 	movi	r4,2047
  805400:	49003b26 	beq	r9,r4,8054f0 <__subdf3+0x7b4>
  805404:	0085c83a 	sub	r2,zero,r2
  805408:	18c02034 	orhi	r3,r3,128
  80540c:	01000e04 	movi	r4,56
  805410:	20806e16 	blt	r4,r2,8055cc <__subdf3+0x890>
  805414:	010007c4 	movi	r4,31
  805418:	20807716 	blt	r4,r2,8055f8 <__subdf3+0x8bc>
  80541c:	01000804 	movi	r4,32
  805420:	2089c83a 	sub	r4,r4,r2
  805424:	1914983a 	sll	r10,r3,r4
  805428:	8890d83a 	srl	r8,r17,r2
  80542c:	8908983a 	sll	r4,r17,r4
  805430:	1884d83a 	srl	r2,r3,r2
  805434:	5222b03a 	or	r17,r10,r8
  805438:	2006c03a 	cmpne	r3,r4,zero
  80543c:	88e2b03a 	or	r17,r17,r3
  805440:	89a3883a 	add	r17,r17,r6
  805444:	1145883a 	add	r2,r2,r5
  805448:	898d803a 	cmpltu	r6,r17,r6
  80544c:	3087883a 	add	r3,r6,r2
  805450:	4821883a 	mov	r16,r9
  805454:	003ed906 	br	804fbc <__alt_data_end+0xff804fbc>
  805458:	2984b03a 	or	r2,r5,r6
  80545c:	10004226 	beq	r2,zero,805568 <__subdf3+0x82c>
  805460:	1808d0fa 	srli	r4,r3,3
  805464:	8822d0fa 	srli	r17,r17,3
  805468:	1806977a 	slli	r3,r3,29
  80546c:	2080022c 	andhi	r2,r4,8
  805470:	1c62b03a 	or	r17,r3,r17
  805474:	10000826 	beq	r2,zero,805498 <__subdf3+0x75c>
  805478:	2812d0fa 	srli	r9,r5,3
  80547c:	4880022c 	andhi	r2,r9,8
  805480:	1000051e 	bne	r2,zero,805498 <__subdf3+0x75c>
  805484:	300cd0fa 	srli	r6,r6,3
  805488:	2804977a 	slli	r2,r5,29
  80548c:	4809883a 	mov	r4,r9
  805490:	3825883a 	mov	r18,r7
  805494:	11a2b03a 	or	r17,r2,r6
  805498:	8806d77a 	srli	r3,r17,29
  80549c:	200890fa 	slli	r4,r4,3
  8054a0:	882290fa 	slli	r17,r17,3
  8054a4:	0401ffc4 	movi	r16,2047
  8054a8:	1906b03a 	or	r3,r3,r4
  8054ac:	003e4406 	br	804dc0 <__alt_data_end+0xff804dc0>
  8054b0:	2984b03a 	or	r2,r5,r6
  8054b4:	103e4226 	beq	r2,zero,804dc0 <__alt_data_end+0xff804dc0>
  8054b8:	8989c83a 	sub	r4,r17,r6
  8054bc:	8911803a 	cmpltu	r8,r17,r4
  8054c0:	1945c83a 	sub	r2,r3,r5
  8054c4:	1205c83a 	sub	r2,r2,r8
  8054c8:	1200202c 	andhi	r8,r2,128
  8054cc:	403e9a26 	beq	r8,zero,804f38 <__alt_data_end+0xff804f38>
  8054d0:	3463c83a 	sub	r17,r6,r17
  8054d4:	28c5c83a 	sub	r2,r5,r3
  8054d8:	344d803a 	cmpltu	r6,r6,r17
  8054dc:	1187c83a 	sub	r3,r2,r6
  8054e0:	3825883a 	mov	r18,r7
  8054e4:	003e3606 	br	804dc0 <__alt_data_end+0xff804dc0>
  8054e8:	0101ffc4 	movi	r4,2047
  8054ec:	493fc71e 	bne	r9,r4,80540c <__alt_data_end+0xff80540c>
  8054f0:	2807883a 	mov	r3,r5
  8054f4:	3023883a 	mov	r17,r6
  8054f8:	4821883a 	mov	r16,r9
  8054fc:	003e3006 	br	804dc0 <__alt_data_end+0xff804dc0>
  805500:	10003626 	beq	r2,zero,8055dc <__subdf3+0x8a0>
  805504:	2984b03a 	or	r2,r5,r6
  805508:	10001726 	beq	r2,zero,805568 <__subdf3+0x82c>
  80550c:	1808d0fa 	srli	r4,r3,3
  805510:	8822d0fa 	srli	r17,r17,3
  805514:	1806977a 	slli	r3,r3,29
  805518:	2080022c 	andhi	r2,r4,8
  80551c:	1c62b03a 	or	r17,r3,r17
  805520:	10000726 	beq	r2,zero,805540 <__subdf3+0x804>
  805524:	2812d0fa 	srli	r9,r5,3
  805528:	4880022c 	andhi	r2,r9,8
  80552c:	1000041e 	bne	r2,zero,805540 <__subdf3+0x804>
  805530:	300cd0fa 	srli	r6,r6,3
  805534:	2804977a 	slli	r2,r5,29
  805538:	4809883a 	mov	r4,r9
  80553c:	11a2b03a 	or	r17,r2,r6
  805540:	8806d77a 	srli	r3,r17,29
  805544:	200890fa 	slli	r4,r4,3
  805548:	882290fa 	slli	r17,r17,3
  80554c:	3825883a 	mov	r18,r7
  805550:	1906b03a 	or	r3,r3,r4
  805554:	0401ffc4 	movi	r16,2047
  805558:	003e1906 	br	804dc0 <__alt_data_end+0xff804dc0>
  80555c:	000b883a 	mov	r5,zero
  805560:	0005883a 	mov	r2,zero
  805564:	003e2e06 	br	804e20 <__alt_data_end+0xff804e20>
  805568:	0401ffc4 	movi	r16,2047
  80556c:	003e1406 	br	804dc0 <__alt_data_end+0xff804dc0>
  805570:	0005883a 	mov	r2,zero
  805574:	003f7506 	br	80534c <__alt_data_end+0xff80534c>
  805578:	0005883a 	mov	r2,zero
  80557c:	0009883a 	mov	r4,zero
  805580:	003e7806 	br	804f64 <__alt_data_end+0xff804f64>
  805584:	123ff804 	addi	r8,r2,-32
  805588:	01000804 	movi	r4,32
  80558c:	1a10d83a 	srl	r8,r3,r8
  805590:	11002526 	beq	r2,r4,805628 <__subdf3+0x8ec>
  805594:	01001004 	movi	r4,64
  805598:	2085c83a 	sub	r2,r4,r2
  80559c:	1884983a 	sll	r2,r3,r2
  8055a0:	1444b03a 	or	r2,r2,r17
  8055a4:	1004c03a 	cmpne	r2,r2,zero
  8055a8:	40a2b03a 	or	r17,r8,r2
  8055ac:	0005883a 	mov	r2,zero
  8055b0:	003f1606 	br	80520c <__alt_data_end+0xff80520c>
  8055b4:	02000434 	movhi	r8,16
  8055b8:	0009883a 	mov	r4,zero
  8055bc:	423fffc4 	addi	r8,r8,-1
  8055c0:	00bfffc4 	movi	r2,-1
  8055c4:	0401ffc4 	movi	r16,2047
  8055c8:	003e6606 	br	804f64 <__alt_data_end+0xff804f64>
  8055cc:	1c62b03a 	or	r17,r3,r17
  8055d0:	8822c03a 	cmpne	r17,r17,zero
  8055d4:	0005883a 	mov	r2,zero
  8055d8:	003f9906 	br	805440 <__alt_data_end+0xff805440>
  8055dc:	2807883a 	mov	r3,r5
  8055e0:	3023883a 	mov	r17,r6
  8055e4:	0401ffc4 	movi	r16,2047
  8055e8:	003df506 	br	804dc0 <__alt_data_end+0xff804dc0>
  8055ec:	2807883a 	mov	r3,r5
  8055f0:	3023883a 	mov	r17,r6
  8055f4:	003df206 	br	804dc0 <__alt_data_end+0xff804dc0>
  8055f8:	123ff804 	addi	r8,r2,-32
  8055fc:	01000804 	movi	r4,32
  805600:	1a10d83a 	srl	r8,r3,r8
  805604:	11000a26 	beq	r2,r4,805630 <__subdf3+0x8f4>
  805608:	01001004 	movi	r4,64
  80560c:	2085c83a 	sub	r2,r4,r2
  805610:	1884983a 	sll	r2,r3,r2
  805614:	1444b03a 	or	r2,r2,r17
  805618:	1004c03a 	cmpne	r2,r2,zero
  80561c:	40a2b03a 	or	r17,r8,r2
  805620:	0005883a 	mov	r2,zero
  805624:	003f8606 	br	805440 <__alt_data_end+0xff805440>
  805628:	0005883a 	mov	r2,zero
  80562c:	003fdc06 	br	8055a0 <__alt_data_end+0xff8055a0>
  805630:	0005883a 	mov	r2,zero
  805634:	003ff706 	br	805614 <__alt_data_end+0xff805614>

00805638 <__fixdfsi>:
  805638:	280cd53a 	srli	r6,r5,20
  80563c:	00c00434 	movhi	r3,16
  805640:	18ffffc4 	addi	r3,r3,-1
  805644:	3181ffcc 	andi	r6,r6,2047
  805648:	01c0ff84 	movi	r7,1022
  80564c:	28c6703a 	and	r3,r5,r3
  805650:	280ad7fa 	srli	r5,r5,31
  805654:	3980120e 	bge	r7,r6,8056a0 <__fixdfsi+0x68>
  805658:	00810744 	movi	r2,1053
  80565c:	11800c16 	blt	r2,r6,805690 <__fixdfsi+0x58>
  805660:	00810cc4 	movi	r2,1075
  805664:	1185c83a 	sub	r2,r2,r6
  805668:	01c007c4 	movi	r7,31
  80566c:	18c00434 	orhi	r3,r3,16
  805670:	38800d16 	blt	r7,r2,8056a8 <__fixdfsi+0x70>
  805674:	31befb44 	addi	r6,r6,-1043
  805678:	2084d83a 	srl	r2,r4,r2
  80567c:	1986983a 	sll	r3,r3,r6
  805680:	1884b03a 	or	r2,r3,r2
  805684:	28000726 	beq	r5,zero,8056a4 <__fixdfsi+0x6c>
  805688:	0085c83a 	sub	r2,zero,r2
  80568c:	f800283a 	ret
  805690:	00a00034 	movhi	r2,32768
  805694:	10bfffc4 	addi	r2,r2,-1
  805698:	2885883a 	add	r2,r5,r2
  80569c:	f800283a 	ret
  8056a0:	0005883a 	mov	r2,zero
  8056a4:	f800283a 	ret
  8056a8:	008104c4 	movi	r2,1043
  8056ac:	1185c83a 	sub	r2,r2,r6
  8056b0:	1884d83a 	srl	r2,r3,r2
  8056b4:	003ff306 	br	805684 <__alt_data_end+0xff805684>

008056b8 <__floatsidf>:
  8056b8:	defffd04 	addi	sp,sp,-12
  8056bc:	dfc00215 	stw	ra,8(sp)
  8056c0:	dc400115 	stw	r17,4(sp)
  8056c4:	dc000015 	stw	r16,0(sp)
  8056c8:	20002b26 	beq	r4,zero,805778 <__floatsidf+0xc0>
  8056cc:	2023883a 	mov	r17,r4
  8056d0:	2020d7fa 	srli	r16,r4,31
  8056d4:	20002d16 	blt	r4,zero,80578c <__floatsidf+0xd4>
  8056d8:	8809883a 	mov	r4,r17
  8056dc:	0805a4c0 	call	805a4c <__clzsi2>
  8056e0:	01410784 	movi	r5,1054
  8056e4:	288bc83a 	sub	r5,r5,r2
  8056e8:	01010cc4 	movi	r4,1075
  8056ec:	2149c83a 	sub	r4,r4,r5
  8056f0:	00c007c4 	movi	r3,31
  8056f4:	1900160e 	bge	r3,r4,805750 <__floatsidf+0x98>
  8056f8:	00c104c4 	movi	r3,1043
  8056fc:	1947c83a 	sub	r3,r3,r5
  805700:	88c6983a 	sll	r3,r17,r3
  805704:	00800434 	movhi	r2,16
  805708:	10bfffc4 	addi	r2,r2,-1
  80570c:	1886703a 	and	r3,r3,r2
  805710:	2941ffcc 	andi	r5,r5,2047
  805714:	800d883a 	mov	r6,r16
  805718:	0005883a 	mov	r2,zero
  80571c:	280a953a 	slli	r5,r5,20
  805720:	31803fcc 	andi	r6,r6,255
  805724:	01000434 	movhi	r4,16
  805728:	300c97fa 	slli	r6,r6,31
  80572c:	213fffc4 	addi	r4,r4,-1
  805730:	1906703a 	and	r3,r3,r4
  805734:	1946b03a 	or	r3,r3,r5
  805738:	1986b03a 	or	r3,r3,r6
  80573c:	dfc00217 	ldw	ra,8(sp)
  805740:	dc400117 	ldw	r17,4(sp)
  805744:	dc000017 	ldw	r16,0(sp)
  805748:	dec00304 	addi	sp,sp,12
  80574c:	f800283a 	ret
  805750:	00c002c4 	movi	r3,11
  805754:	1887c83a 	sub	r3,r3,r2
  805758:	88c6d83a 	srl	r3,r17,r3
  80575c:	8904983a 	sll	r2,r17,r4
  805760:	01000434 	movhi	r4,16
  805764:	213fffc4 	addi	r4,r4,-1
  805768:	2941ffcc 	andi	r5,r5,2047
  80576c:	1906703a 	and	r3,r3,r4
  805770:	800d883a 	mov	r6,r16
  805774:	003fe906 	br	80571c <__alt_data_end+0xff80571c>
  805778:	000d883a 	mov	r6,zero
  80577c:	000b883a 	mov	r5,zero
  805780:	0007883a 	mov	r3,zero
  805784:	0005883a 	mov	r2,zero
  805788:	003fe406 	br	80571c <__alt_data_end+0xff80571c>
  80578c:	0123c83a 	sub	r17,zero,r4
  805790:	003fd106 	br	8056d8 <__alt_data_end+0xff8056d8>

00805794 <__extendsfdf2>:
  805794:	200ad5fa 	srli	r5,r4,23
  805798:	defffd04 	addi	sp,sp,-12
  80579c:	dc400115 	stw	r17,4(sp)
  8057a0:	29403fcc 	andi	r5,r5,255
  8057a4:	29800044 	addi	r6,r5,1
  8057a8:	04402034 	movhi	r17,128
  8057ac:	dc000015 	stw	r16,0(sp)
  8057b0:	8c7fffc4 	addi	r17,r17,-1
  8057b4:	dfc00215 	stw	ra,8(sp)
  8057b8:	31803fcc 	andi	r6,r6,255
  8057bc:	00800044 	movi	r2,1
  8057c0:	8922703a 	and	r17,r17,r4
  8057c4:	2020d7fa 	srli	r16,r4,31
  8057c8:	1180110e 	bge	r2,r6,805810 <__extendsfdf2+0x7c>
  8057cc:	880cd0fa 	srli	r6,r17,3
  8057d0:	8822977a 	slli	r17,r17,29
  8057d4:	2940e004 	addi	r5,r5,896
  8057d8:	2941ffcc 	andi	r5,r5,2047
  8057dc:	2804953a 	slli	r2,r5,20
  8057e0:	01400434 	movhi	r5,16
  8057e4:	800697fa 	slli	r3,r16,31
  8057e8:	297fffc4 	addi	r5,r5,-1
  8057ec:	314a703a 	and	r5,r6,r5
  8057f0:	288ab03a 	or	r5,r5,r2
  8057f4:	28c6b03a 	or	r3,r5,r3
  8057f8:	8805883a 	mov	r2,r17
  8057fc:	dfc00217 	ldw	ra,8(sp)
  805800:	dc400117 	ldw	r17,4(sp)
  805804:	dc000017 	ldw	r16,0(sp)
  805808:	dec00304 	addi	sp,sp,12
  80580c:	f800283a 	ret
  805810:	2800111e 	bne	r5,zero,805858 <__extendsfdf2+0xc4>
  805814:	88001c26 	beq	r17,zero,805888 <__extendsfdf2+0xf4>
  805818:	8809883a 	mov	r4,r17
  80581c:	0805a4c0 	call	805a4c <__clzsi2>
  805820:	00c00284 	movi	r3,10
  805824:	18801b16 	blt	r3,r2,805894 <__extendsfdf2+0x100>
  805828:	018002c4 	movi	r6,11
  80582c:	308dc83a 	sub	r6,r6,r2
  805830:	11000544 	addi	r4,r2,21
  805834:	8986d83a 	srl	r3,r17,r6
  805838:	8922983a 	sll	r17,r17,r4
  80583c:	0180e244 	movi	r6,905
  805840:	01400434 	movhi	r5,16
  805844:	3085c83a 	sub	r2,r6,r2
  805848:	297fffc4 	addi	r5,r5,-1
  80584c:	194c703a 	and	r6,r3,r5
  805850:	1141ffcc 	andi	r5,r2,2047
  805854:	003fe006 	br	8057d8 <__alt_data_end+0xff8057d8>
  805858:	88000826 	beq	r17,zero,80587c <__extendsfdf2+0xe8>
  80585c:	880cd0fa 	srli	r6,r17,3
  805860:	00800434 	movhi	r2,16
  805864:	10bfffc4 	addi	r2,r2,-1
  805868:	31800234 	orhi	r6,r6,8
  80586c:	8822977a 	slli	r17,r17,29
  805870:	308c703a 	and	r6,r6,r2
  805874:	0141ffc4 	movi	r5,2047
  805878:	003fd706 	br	8057d8 <__alt_data_end+0xff8057d8>
  80587c:	0141ffc4 	movi	r5,2047
  805880:	000d883a 	mov	r6,zero
  805884:	003fd406 	br	8057d8 <__alt_data_end+0xff8057d8>
  805888:	000b883a 	mov	r5,zero
  80588c:	000d883a 	mov	r6,zero
  805890:	003fd106 	br	8057d8 <__alt_data_end+0xff8057d8>
  805894:	11bffd44 	addi	r6,r2,-11
  805898:	8986983a 	sll	r3,r17,r6
  80589c:	0023883a 	mov	r17,zero
  8058a0:	003fe606 	br	80583c <__alt_data_end+0xff80583c>

008058a4 <__truncdfsf2>:
  8058a4:	2810d53a 	srli	r8,r5,20
  8058a8:	01c00434 	movhi	r7,16
  8058ac:	39ffffc4 	addi	r7,r7,-1
  8058b0:	29ce703a 	and	r7,r5,r7
  8058b4:	4201ffcc 	andi	r8,r8,2047
  8058b8:	380e90fa 	slli	r7,r7,3
  8058bc:	200cd77a 	srli	r6,r4,29
  8058c0:	42400044 	addi	r9,r8,1
  8058c4:	4a41ffcc 	andi	r9,r9,2047
  8058c8:	00c00044 	movi	r3,1
  8058cc:	280ad7fa 	srli	r5,r5,31
  8058d0:	31ceb03a 	or	r7,r6,r7
  8058d4:	200490fa 	slli	r2,r4,3
  8058d8:	1a40230e 	bge	r3,r9,805968 <__truncdfsf2+0xc4>
  8058dc:	40ff2004 	addi	r3,r8,-896
  8058e0:	01803f84 	movi	r6,254
  8058e4:	30c01516 	blt	r6,r3,80593c <__truncdfsf2+0x98>
  8058e8:	00c0380e 	bge	zero,r3,8059cc <__truncdfsf2+0x128>
  8058ec:	200c91ba 	slli	r6,r4,6
  8058f0:	380e90fa 	slli	r7,r7,3
  8058f4:	1004d77a 	srli	r2,r2,29
  8058f8:	300cc03a 	cmpne	r6,r6,zero
  8058fc:	31ccb03a 	or	r6,r6,r7
  805900:	308cb03a 	or	r6,r6,r2
  805904:	308001cc 	andi	r2,r6,7
  805908:	10000426 	beq	r2,zero,80591c <__truncdfsf2+0x78>
  80590c:	308003cc 	andi	r2,r6,15
  805910:	01000104 	movi	r4,4
  805914:	11000126 	beq	r2,r4,80591c <__truncdfsf2+0x78>
  805918:	31800104 	addi	r6,r6,4
  80591c:	3081002c 	andhi	r2,r6,1024
  805920:	10001626 	beq	r2,zero,80597c <__truncdfsf2+0xd8>
  805924:	18c00044 	addi	r3,r3,1
  805928:	00803fc4 	movi	r2,255
  80592c:	18800326 	beq	r3,r2,80593c <__truncdfsf2+0x98>
  805930:	300c91ba 	slli	r6,r6,6
  805934:	300cd27a 	srli	r6,r6,9
  805938:	00000206 	br	805944 <__truncdfsf2+0xa0>
  80593c:	00ffffc4 	movi	r3,-1
  805940:	000d883a 	mov	r6,zero
  805944:	18c03fcc 	andi	r3,r3,255
  805948:	180895fa 	slli	r4,r3,23
  80594c:	00c02034 	movhi	r3,128
  805950:	280a97fa 	slli	r5,r5,31
  805954:	18ffffc4 	addi	r3,r3,-1
  805958:	30c6703a 	and	r3,r6,r3
  80595c:	1906b03a 	or	r3,r3,r4
  805960:	1944b03a 	or	r2,r3,r5
  805964:	f800283a 	ret
  805968:	40000b1e 	bne	r8,zero,805998 <__truncdfsf2+0xf4>
  80596c:	388cb03a 	or	r6,r7,r2
  805970:	0007883a 	mov	r3,zero
  805974:	30000426 	beq	r6,zero,805988 <__truncdfsf2+0xe4>
  805978:	01800144 	movi	r6,5
  80597c:	00803fc4 	movi	r2,255
  805980:	300cd0fa 	srli	r6,r6,3
  805984:	18800a26 	beq	r3,r2,8059b0 <__truncdfsf2+0x10c>
  805988:	00802034 	movhi	r2,128
  80598c:	10bfffc4 	addi	r2,r2,-1
  805990:	308c703a 	and	r6,r6,r2
  805994:	003feb06 	br	805944 <__alt_data_end+0xff805944>
  805998:	3888b03a 	or	r4,r7,r2
  80599c:	203fe726 	beq	r4,zero,80593c <__alt_data_end+0xff80593c>
  8059a0:	380c90fa 	slli	r6,r7,3
  8059a4:	00c03fc4 	movi	r3,255
  8059a8:	31808034 	orhi	r6,r6,512
  8059ac:	003fd506 	br	805904 <__alt_data_end+0xff805904>
  8059b0:	303fe226 	beq	r6,zero,80593c <__alt_data_end+0xff80593c>
  8059b4:	00802034 	movhi	r2,128
  8059b8:	31801034 	orhi	r6,r6,64
  8059bc:	10bfffc4 	addi	r2,r2,-1
  8059c0:	00ffffc4 	movi	r3,-1
  8059c4:	308c703a 	and	r6,r6,r2
  8059c8:	003fde06 	br	805944 <__alt_data_end+0xff805944>
  8059cc:	013ffa44 	movi	r4,-23
  8059d0:	19000e16 	blt	r3,r4,805a0c <__truncdfsf2+0x168>
  8059d4:	01000784 	movi	r4,30
  8059d8:	20c9c83a 	sub	r4,r4,r3
  8059dc:	018007c4 	movi	r6,31
  8059e0:	39c02034 	orhi	r7,r7,128
  8059e4:	31000b16 	blt	r6,r4,805a14 <__truncdfsf2+0x170>
  8059e8:	423f2084 	addi	r8,r8,-894
  8059ec:	120c983a 	sll	r6,r2,r8
  8059f0:	3a0e983a 	sll	r7,r7,r8
  8059f4:	1104d83a 	srl	r2,r2,r4
  8059f8:	300cc03a 	cmpne	r6,r6,zero
  8059fc:	31ceb03a 	or	r7,r6,r7
  805a00:	388cb03a 	or	r6,r7,r2
  805a04:	0007883a 	mov	r3,zero
  805a08:	003fbe06 	br	805904 <__alt_data_end+0xff805904>
  805a0c:	0007883a 	mov	r3,zero
  805a10:	003fd906 	br	805978 <__alt_data_end+0xff805978>
  805a14:	01bfff84 	movi	r6,-2
  805a18:	30cdc83a 	sub	r6,r6,r3
  805a1c:	00c00804 	movi	r3,32
  805a20:	398cd83a 	srl	r6,r7,r6
  805a24:	20c00726 	beq	r4,r3,805a44 <__truncdfsf2+0x1a0>
  805a28:	423f2884 	addi	r8,r8,-862
  805a2c:	3a0e983a 	sll	r7,r7,r8
  805a30:	3884b03a 	or	r2,r7,r2
  805a34:	1004c03a 	cmpne	r2,r2,zero
  805a38:	118cb03a 	or	r6,r2,r6
  805a3c:	0007883a 	mov	r3,zero
  805a40:	003fb006 	br	805904 <__alt_data_end+0xff805904>
  805a44:	000f883a 	mov	r7,zero
  805a48:	003ff906 	br	805a30 <__alt_data_end+0xff805a30>

00805a4c <__clzsi2>:
  805a4c:	00bfffd4 	movui	r2,65535
  805a50:	11000536 	bltu	r2,r4,805a68 <__clzsi2+0x1c>
  805a54:	00803fc4 	movi	r2,255
  805a58:	11000f36 	bltu	r2,r4,805a98 <__clzsi2+0x4c>
  805a5c:	00800804 	movi	r2,32
  805a60:	0007883a 	mov	r3,zero
  805a64:	00000506 	br	805a7c <__clzsi2+0x30>
  805a68:	00804034 	movhi	r2,256
  805a6c:	10bfffc4 	addi	r2,r2,-1
  805a70:	11000c2e 	bgeu	r2,r4,805aa4 <__clzsi2+0x58>
  805a74:	00800204 	movi	r2,8
  805a78:	00c00604 	movi	r3,24
  805a7c:	20c8d83a 	srl	r4,r4,r3
  805a80:	00c02074 	movhi	r3,129
  805a84:	18c9ef04 	addi	r3,r3,10172
  805a88:	1909883a 	add	r4,r3,r4
  805a8c:	20c00003 	ldbu	r3,0(r4)
  805a90:	10c5c83a 	sub	r2,r2,r3
  805a94:	f800283a 	ret
  805a98:	00800604 	movi	r2,24
  805a9c:	00c00204 	movi	r3,8
  805aa0:	003ff606 	br	805a7c <__alt_data_end+0xff805a7c>
  805aa4:	00800404 	movi	r2,16
  805aa8:	1007883a 	mov	r3,r2
  805aac:	003ff306 	br	805a7c <__alt_data_end+0xff805a7c>

00805ab0 <_printf_r>:
  805ab0:	defffd04 	addi	sp,sp,-12
  805ab4:	2805883a 	mov	r2,r5
  805ab8:	dfc00015 	stw	ra,0(sp)
  805abc:	d9800115 	stw	r6,4(sp)
  805ac0:	d9c00215 	stw	r7,8(sp)
  805ac4:	21400217 	ldw	r5,8(r4)
  805ac8:	d9c00104 	addi	r7,sp,4
  805acc:	100d883a 	mov	r6,r2
  805ad0:	0805c880 	call	805c88 <___vfprintf_internal_r>
  805ad4:	dfc00017 	ldw	ra,0(sp)
  805ad8:	dec00304 	addi	sp,sp,12
  805adc:	f800283a 	ret

00805ae0 <printf>:
  805ae0:	defffc04 	addi	sp,sp,-16
  805ae4:	dfc00015 	stw	ra,0(sp)
  805ae8:	d9400115 	stw	r5,4(sp)
  805aec:	d9800215 	stw	r6,8(sp)
  805af0:	d9c00315 	stw	r7,12(sp)
  805af4:	00802074 	movhi	r2,129
  805af8:	10915904 	addi	r2,r2,17764
  805afc:	10800017 	ldw	r2,0(r2)
  805b00:	200b883a 	mov	r5,r4
  805b04:	d9800104 	addi	r6,sp,4
  805b08:	11000217 	ldw	r4,8(r2)
  805b0c:	0807e800 	call	807e80 <__vfprintf_internal>
  805b10:	dfc00017 	ldw	ra,0(sp)
  805b14:	dec00404 	addi	sp,sp,16
  805b18:	f800283a 	ret

00805b1c <_puts_r>:
  805b1c:	defff604 	addi	sp,sp,-40
  805b20:	dc000715 	stw	r16,28(sp)
  805b24:	2021883a 	mov	r16,r4
  805b28:	2809883a 	mov	r4,r5
  805b2c:	dc400815 	stw	r17,32(sp)
  805b30:	dfc00915 	stw	ra,36(sp)
  805b34:	2823883a 	mov	r17,r5
  805b38:	0805bf00 	call	805bf0 <strlen>
  805b3c:	10c00044 	addi	r3,r2,1
  805b40:	d8800115 	stw	r2,4(sp)
  805b44:	00802074 	movhi	r2,129
  805b48:	108a2f04 	addi	r2,r2,10428
  805b4c:	d8800215 	stw	r2,8(sp)
  805b50:	00800044 	movi	r2,1
  805b54:	d8800315 	stw	r2,12(sp)
  805b58:	00800084 	movi	r2,2
  805b5c:	dc400015 	stw	r17,0(sp)
  805b60:	d8c00615 	stw	r3,24(sp)
  805b64:	dec00415 	stw	sp,16(sp)
  805b68:	d8800515 	stw	r2,20(sp)
  805b6c:	80000226 	beq	r16,zero,805b78 <_puts_r+0x5c>
  805b70:	80800e17 	ldw	r2,56(r16)
  805b74:	10001426 	beq	r2,zero,805bc8 <_puts_r+0xac>
  805b78:	81400217 	ldw	r5,8(r16)
  805b7c:	2880030b 	ldhu	r2,12(r5)
  805b80:	10c8000c 	andi	r3,r2,8192
  805b84:	1800061e 	bne	r3,zero,805ba0 <_puts_r+0x84>
  805b88:	29001917 	ldw	r4,100(r5)
  805b8c:	00f7ffc4 	movi	r3,-8193
  805b90:	10880014 	ori	r2,r2,8192
  805b94:	20c6703a 	and	r3,r4,r3
  805b98:	2880030d 	sth	r2,12(r5)
  805b9c:	28c01915 	stw	r3,100(r5)
  805ba0:	d9800404 	addi	r6,sp,16
  805ba4:	8009883a 	mov	r4,r16
  805ba8:	080a3b00 	call	80a3b0 <__sfvwrite_r>
  805bac:	1000091e 	bne	r2,zero,805bd4 <_puts_r+0xb8>
  805bb0:	00800284 	movi	r2,10
  805bb4:	dfc00917 	ldw	ra,36(sp)
  805bb8:	dc400817 	ldw	r17,32(sp)
  805bbc:	dc000717 	ldw	r16,28(sp)
  805bc0:	dec00a04 	addi	sp,sp,40
  805bc4:	f800283a 	ret
  805bc8:	8009883a 	mov	r4,r16
  805bcc:	0809f2c0 	call	809f2c <__sinit>
  805bd0:	003fe906 	br	805b78 <__alt_data_end+0xff805b78>
  805bd4:	00bfffc4 	movi	r2,-1
  805bd8:	003ff606 	br	805bb4 <__alt_data_end+0xff805bb4>

00805bdc <puts>:
  805bdc:	00802074 	movhi	r2,129
  805be0:	10915904 	addi	r2,r2,17764
  805be4:	200b883a 	mov	r5,r4
  805be8:	11000017 	ldw	r4,0(r2)
  805bec:	0805b1c1 	jmpi	805b1c <_puts_r>

00805bf0 <strlen>:
  805bf0:	208000cc 	andi	r2,r4,3
  805bf4:	10002026 	beq	r2,zero,805c78 <strlen+0x88>
  805bf8:	20800007 	ldb	r2,0(r4)
  805bfc:	10002026 	beq	r2,zero,805c80 <strlen+0x90>
  805c00:	2005883a 	mov	r2,r4
  805c04:	00000206 	br	805c10 <strlen+0x20>
  805c08:	10c00007 	ldb	r3,0(r2)
  805c0c:	18001826 	beq	r3,zero,805c70 <strlen+0x80>
  805c10:	10800044 	addi	r2,r2,1
  805c14:	10c000cc 	andi	r3,r2,3
  805c18:	183ffb1e 	bne	r3,zero,805c08 <__alt_data_end+0xff805c08>
  805c1c:	10c00017 	ldw	r3,0(r2)
  805c20:	01ffbff4 	movhi	r7,65279
  805c24:	39ffbfc4 	addi	r7,r7,-257
  805c28:	00ca303a 	nor	r5,zero,r3
  805c2c:	01a02074 	movhi	r6,32897
  805c30:	19c7883a 	add	r3,r3,r7
  805c34:	31a02004 	addi	r6,r6,-32640
  805c38:	1946703a 	and	r3,r3,r5
  805c3c:	1986703a 	and	r3,r3,r6
  805c40:	1800091e 	bne	r3,zero,805c68 <strlen+0x78>
  805c44:	10800104 	addi	r2,r2,4
  805c48:	10c00017 	ldw	r3,0(r2)
  805c4c:	19cb883a 	add	r5,r3,r7
  805c50:	00c6303a 	nor	r3,zero,r3
  805c54:	28c6703a 	and	r3,r5,r3
  805c58:	1986703a 	and	r3,r3,r6
  805c5c:	183ff926 	beq	r3,zero,805c44 <__alt_data_end+0xff805c44>
  805c60:	00000106 	br	805c68 <strlen+0x78>
  805c64:	10800044 	addi	r2,r2,1
  805c68:	10c00007 	ldb	r3,0(r2)
  805c6c:	183ffd1e 	bne	r3,zero,805c64 <__alt_data_end+0xff805c64>
  805c70:	1105c83a 	sub	r2,r2,r4
  805c74:	f800283a 	ret
  805c78:	2005883a 	mov	r2,r4
  805c7c:	003fe706 	br	805c1c <__alt_data_end+0xff805c1c>
  805c80:	0005883a 	mov	r2,zero
  805c84:	f800283a 	ret

00805c88 <___vfprintf_internal_r>:
  805c88:	deffb804 	addi	sp,sp,-288
  805c8c:	dfc04715 	stw	ra,284(sp)
  805c90:	ddc04515 	stw	r23,276(sp)
  805c94:	dd404315 	stw	r21,268(sp)
  805c98:	d9002c15 	stw	r4,176(sp)
  805c9c:	282f883a 	mov	r23,r5
  805ca0:	302b883a 	mov	r21,r6
  805ca4:	d9c02d15 	stw	r7,180(sp)
  805ca8:	df004615 	stw	fp,280(sp)
  805cac:	dd804415 	stw	r22,272(sp)
  805cb0:	dd004215 	stw	r20,264(sp)
  805cb4:	dcc04115 	stw	r19,260(sp)
  805cb8:	dc804015 	stw	r18,256(sp)
  805cbc:	dc403f15 	stw	r17,252(sp)
  805cc0:	dc003e15 	stw	r16,248(sp)
  805cc4:	080aaa00 	call	80aaa0 <_localeconv_r>
  805cc8:	10800017 	ldw	r2,0(r2)
  805ccc:	1009883a 	mov	r4,r2
  805cd0:	d8803415 	stw	r2,208(sp)
  805cd4:	0805bf00 	call	805bf0 <strlen>
  805cd8:	d8803715 	stw	r2,220(sp)
  805cdc:	d8802c17 	ldw	r2,176(sp)
  805ce0:	10000226 	beq	r2,zero,805cec <___vfprintf_internal_r+0x64>
  805ce4:	10800e17 	ldw	r2,56(r2)
  805ce8:	1000f926 	beq	r2,zero,8060d0 <___vfprintf_internal_r+0x448>
  805cec:	b880030b 	ldhu	r2,12(r23)
  805cf0:	10c8000c 	andi	r3,r2,8192
  805cf4:	1800061e 	bne	r3,zero,805d10 <___vfprintf_internal_r+0x88>
  805cf8:	b9001917 	ldw	r4,100(r23)
  805cfc:	00f7ffc4 	movi	r3,-8193
  805d00:	10880014 	ori	r2,r2,8192
  805d04:	20c6703a 	and	r3,r4,r3
  805d08:	b880030d 	sth	r2,12(r23)
  805d0c:	b8c01915 	stw	r3,100(r23)
  805d10:	10c0020c 	andi	r3,r2,8
  805d14:	1800c126 	beq	r3,zero,80601c <___vfprintf_internal_r+0x394>
  805d18:	b8c00417 	ldw	r3,16(r23)
  805d1c:	1800bf26 	beq	r3,zero,80601c <___vfprintf_internal_r+0x394>
  805d20:	1080068c 	andi	r2,r2,26
  805d24:	00c00284 	movi	r3,10
  805d28:	10c0c426 	beq	r2,r3,80603c <___vfprintf_internal_r+0x3b4>
  805d2c:	d8c00404 	addi	r3,sp,16
  805d30:	05002074 	movhi	r20,129
  805d34:	d9001e04 	addi	r4,sp,120
  805d38:	a50a4084 	addi	r20,r20,10498
  805d3c:	d8c01e15 	stw	r3,120(sp)
  805d40:	d8002015 	stw	zero,128(sp)
  805d44:	d8001f15 	stw	zero,124(sp)
  805d48:	d8003315 	stw	zero,204(sp)
  805d4c:	d8003615 	stw	zero,216(sp)
  805d50:	d8003815 	stw	zero,224(sp)
  805d54:	1811883a 	mov	r8,r3
  805d58:	d8003915 	stw	zero,228(sp)
  805d5c:	d8003a15 	stw	zero,232(sp)
  805d60:	d8002f15 	stw	zero,188(sp)
  805d64:	d9002815 	stw	r4,160(sp)
  805d68:	a8800007 	ldb	r2,0(r21)
  805d6c:	10027b26 	beq	r2,zero,80675c <___vfprintf_internal_r+0xad4>
  805d70:	00c00944 	movi	r3,37
  805d74:	a821883a 	mov	r16,r21
  805d78:	10c0021e 	bne	r2,r3,805d84 <___vfprintf_internal_r+0xfc>
  805d7c:	00001406 	br	805dd0 <___vfprintf_internal_r+0x148>
  805d80:	10c00326 	beq	r2,r3,805d90 <___vfprintf_internal_r+0x108>
  805d84:	84000044 	addi	r16,r16,1
  805d88:	80800007 	ldb	r2,0(r16)
  805d8c:	103ffc1e 	bne	r2,zero,805d80 <__alt_data_end+0xff805d80>
  805d90:	8563c83a 	sub	r17,r16,r21
  805d94:	88000e26 	beq	r17,zero,805dd0 <___vfprintf_internal_r+0x148>
  805d98:	d8c02017 	ldw	r3,128(sp)
  805d9c:	d8801f17 	ldw	r2,124(sp)
  805da0:	45400015 	stw	r21,0(r8)
  805da4:	1c47883a 	add	r3,r3,r17
  805da8:	10800044 	addi	r2,r2,1
  805dac:	d8c02015 	stw	r3,128(sp)
  805db0:	44400115 	stw	r17,4(r8)
  805db4:	d8801f15 	stw	r2,124(sp)
  805db8:	00c001c4 	movi	r3,7
  805dbc:	1880a716 	blt	r3,r2,80605c <___vfprintf_internal_r+0x3d4>
  805dc0:	42000204 	addi	r8,r8,8
  805dc4:	d9402f17 	ldw	r5,188(sp)
  805dc8:	2c4b883a 	add	r5,r5,r17
  805dcc:	d9402f15 	stw	r5,188(sp)
  805dd0:	80800007 	ldb	r2,0(r16)
  805dd4:	1000a826 	beq	r2,zero,806078 <___vfprintf_internal_r+0x3f0>
  805dd8:	84400047 	ldb	r17,1(r16)
  805ddc:	00bfffc4 	movi	r2,-1
  805de0:	85400044 	addi	r21,r16,1
  805de4:	d8002785 	stb	zero,158(sp)
  805de8:	0007883a 	mov	r3,zero
  805dec:	000f883a 	mov	r7,zero
  805df0:	d8802915 	stw	r2,164(sp)
  805df4:	d8003115 	stw	zero,196(sp)
  805df8:	0025883a 	mov	r18,zero
  805dfc:	01401604 	movi	r5,88
  805e00:	01800244 	movi	r6,9
  805e04:	02800a84 	movi	r10,42
  805e08:	02401b04 	movi	r9,108
  805e0c:	ad400044 	addi	r21,r21,1
  805e10:	88bff804 	addi	r2,r17,-32
  805e14:	28830436 	bltu	r5,r2,806a28 <___vfprintf_internal_r+0xda0>
  805e18:	100490ba 	slli	r2,r2,2
  805e1c:	01002034 	movhi	r4,128
  805e20:	21178c04 	addi	r4,r4,24112
  805e24:	1105883a 	add	r2,r2,r4
  805e28:	10800017 	ldw	r2,0(r2)
  805e2c:	1000683a 	jmp	r2
  805e30:	00806948 	cmpgei	r2,zero,421
  805e34:	00806a28 	cmpgeui	r2,zero,424
  805e38:	00806a28 	cmpgeui	r2,zero,424
  805e3c:	00806968 	cmpgeui	r2,zero,421
  805e40:	00806a28 	cmpgeui	r2,zero,424
  805e44:	00806a28 	cmpgeui	r2,zero,424
  805e48:	00806a28 	cmpgeui	r2,zero,424
  805e4c:	00806a28 	cmpgeui	r2,zero,424
  805e50:	00806a28 	cmpgeui	r2,zero,424
  805e54:	00806a28 	cmpgeui	r2,zero,424
  805e58:	008060dc 	xori	r2,zero,387
  805e5c:	00806884 	movi	r2,418
  805e60:	00806a28 	cmpgeui	r2,zero,424
  805e64:	00805fa4 	muli	r2,zero,382
  805e68:	00806104 	movi	r2,388
  805e6c:	00806a28 	cmpgeui	r2,zero,424
  805e70:	00806144 	movi	r2,389
  805e74:	00806150 	cmplti	r2,zero,389
  805e78:	00806150 	cmplti	r2,zero,389
  805e7c:	00806150 	cmplti	r2,zero,389
  805e80:	00806150 	cmplti	r2,zero,389
  805e84:	00806150 	cmplti	r2,zero,389
  805e88:	00806150 	cmplti	r2,zero,389
  805e8c:	00806150 	cmplti	r2,zero,389
  805e90:	00806150 	cmplti	r2,zero,389
  805e94:	00806150 	cmplti	r2,zero,389
  805e98:	00806a28 	cmpgeui	r2,zero,424
  805e9c:	00806a28 	cmpgeui	r2,zero,424
  805ea0:	00806a28 	cmpgeui	r2,zero,424
  805ea4:	00806a28 	cmpgeui	r2,zero,424
  805ea8:	00806a28 	cmpgeui	r2,zero,424
  805eac:	00806a28 	cmpgeui	r2,zero,424
  805eb0:	00806a28 	cmpgeui	r2,zero,424
  805eb4:	00806a28 	cmpgeui	r2,zero,424
  805eb8:	00806a28 	cmpgeui	r2,zero,424
  805ebc:	00806a28 	cmpgeui	r2,zero,424
  805ec0:	00806184 	movi	r2,390
  805ec4:	00806240 	call	80624 <__alt_mem_sdram-0x77f9dc>
  805ec8:	00806a28 	cmpgeui	r2,zero,424
  805ecc:	00806240 	call	80624 <__alt_mem_sdram-0x77f9dc>
  805ed0:	00806a28 	cmpgeui	r2,zero,424
  805ed4:	00806a28 	cmpgeui	r2,zero,424
  805ed8:	00806a28 	cmpgeui	r2,zero,424
  805edc:	00806a28 	cmpgeui	r2,zero,424
  805ee0:	008062e0 	cmpeqi	r2,zero,395
  805ee4:	00806a28 	cmpgeui	r2,zero,424
  805ee8:	00806a28 	cmpgeui	r2,zero,424
  805eec:	008062ec 	andhi	r2,zero,395
  805ef0:	00806a28 	cmpgeui	r2,zero,424
  805ef4:	00806a28 	cmpgeui	r2,zero,424
  805ef8:	00806a28 	cmpgeui	r2,zero,424
  805efc:	00806a28 	cmpgeui	r2,zero,424
  805f00:	00806a28 	cmpgeui	r2,zero,424
  805f04:	00806764 	muli	r2,zero,413
  805f08:	00806a28 	cmpgeui	r2,zero,424
  805f0c:	00806a28 	cmpgeui	r2,zero,424
  805f10:	008067c4 	movi	r2,415
  805f14:	00806a28 	cmpgeui	r2,zero,424
  805f18:	00806a28 	cmpgeui	r2,zero,424
  805f1c:	00806a28 	cmpgeui	r2,zero,424
  805f20:	00806a28 	cmpgeui	r2,zero,424
  805f24:	00806a28 	cmpgeui	r2,zero,424
  805f28:	00806a28 	cmpgeui	r2,zero,424
  805f2c:	00806a28 	cmpgeui	r2,zero,424
  805f30:	00806a28 	cmpgeui	r2,zero,424
  805f34:	00806a28 	cmpgeui	r2,zero,424
  805f38:	00806a28 	cmpgeui	r2,zero,424
  805f3c:	008069d4 	movui	r2,423
  805f40:	00806974 	movhi	r2,421
  805f44:	00806240 	call	80624 <__alt_mem_sdram-0x77f9dc>
  805f48:	00806240 	call	80624 <__alt_mem_sdram-0x77f9dc>
  805f4c:	00806240 	call	80624 <__alt_mem_sdram-0x77f9dc>
  805f50:	00806984 	movi	r2,422
  805f54:	00806974 	movhi	r2,421
  805f58:	00806a28 	cmpgeui	r2,zero,424
  805f5c:	00806a28 	cmpgeui	r2,zero,424
  805f60:	00806990 	cmplti	r2,zero,422
  805f64:	00806a28 	cmpgeui	r2,zero,424
  805f68:	008069a0 	cmpeqi	r2,zero,422
  805f6c:	00806874 	movhi	r2,417
  805f70:	00805fb0 	cmpltui	r2,zero,382
  805f74:	00806894 	movui	r2,418
  805f78:	00806a28 	cmpgeui	r2,zero,424
  805f7c:	008068a0 	cmpeqi	r2,zero,418
  805f80:	00806a28 	cmpgeui	r2,zero,424
  805f84:	008068fc 	xorhi	r2,zero,419
  805f88:	00806a28 	cmpgeui	r2,zero,424
  805f8c:	00806a28 	cmpgeui	r2,zero,424
  805f90:	0080690c 	andi	r2,zero,420
  805f94:	d9003117 	ldw	r4,196(sp)
  805f98:	d8802d15 	stw	r2,180(sp)
  805f9c:	0109c83a 	sub	r4,zero,r4
  805fa0:	d9003115 	stw	r4,196(sp)
  805fa4:	94800114 	ori	r18,r18,4
  805fa8:	ac400007 	ldb	r17,0(r21)
  805fac:	003f9706 	br	805e0c <__alt_data_end+0xff805e0c>
  805fb0:	00800c04 	movi	r2,48
  805fb4:	d9002d17 	ldw	r4,180(sp)
  805fb8:	d9402917 	ldw	r5,164(sp)
  805fbc:	d8802705 	stb	r2,156(sp)
  805fc0:	00801e04 	movi	r2,120
  805fc4:	d8802745 	stb	r2,157(sp)
  805fc8:	d8002785 	stb	zero,158(sp)
  805fcc:	20c00104 	addi	r3,r4,4
  805fd0:	24c00017 	ldw	r19,0(r4)
  805fd4:	002d883a 	mov	r22,zero
  805fd8:	90800094 	ori	r2,r18,2
  805fdc:	28029a16 	blt	r5,zero,806a48 <___vfprintf_internal_r+0xdc0>
  805fe0:	00bfdfc4 	movi	r2,-129
  805fe4:	90a4703a 	and	r18,r18,r2
  805fe8:	d8c02d15 	stw	r3,180(sp)
  805fec:	94800094 	ori	r18,r18,2
  805ff0:	9802871e 	bne	r19,zero,806a10 <___vfprintf_internal_r+0xd88>
  805ff4:	00802074 	movhi	r2,129
  805ff8:	108a3904 	addi	r2,r2,10468
  805ffc:	d8803915 	stw	r2,228(sp)
  806000:	04401e04 	movi	r17,120
  806004:	d8802917 	ldw	r2,164(sp)
  806008:	0039883a 	mov	fp,zero
  80600c:	1001e926 	beq	r2,zero,8067b4 <___vfprintf_internal_r+0xb2c>
  806010:	0027883a 	mov	r19,zero
  806014:	002d883a 	mov	r22,zero
  806018:	00020506 	br	806830 <___vfprintf_internal_r+0xba8>
  80601c:	d9002c17 	ldw	r4,176(sp)
  806020:	b80b883a 	mov	r5,r23
  806024:	0807f580 	call	807f58 <__swsetup_r>
  806028:	1005ac1e 	bne	r2,zero,8076dc <___vfprintf_internal_r+0x1a54>
  80602c:	b880030b 	ldhu	r2,12(r23)
  806030:	00c00284 	movi	r3,10
  806034:	1080068c 	andi	r2,r2,26
  806038:	10ff3c1e 	bne	r2,r3,805d2c <__alt_data_end+0xff805d2c>
  80603c:	b880038f 	ldh	r2,14(r23)
  806040:	103f3a16 	blt	r2,zero,805d2c <__alt_data_end+0xff805d2c>
  806044:	d9c02d17 	ldw	r7,180(sp)
  806048:	d9002c17 	ldw	r4,176(sp)
  80604c:	a80d883a 	mov	r6,r21
  806050:	b80b883a 	mov	r5,r23
  806054:	0807e9c0 	call	807e9c <__sbprintf>
  806058:	00001106 	br	8060a0 <___vfprintf_internal_r+0x418>
  80605c:	d9002c17 	ldw	r4,176(sp)
  806060:	d9801e04 	addi	r6,sp,120
  806064:	b80b883a 	mov	r5,r23
  806068:	080d2840 	call	80d284 <__sprint_r>
  80606c:	1000081e 	bne	r2,zero,806090 <___vfprintf_internal_r+0x408>
  806070:	da000404 	addi	r8,sp,16
  806074:	003f5306 	br	805dc4 <__alt_data_end+0xff805dc4>
  806078:	d8802017 	ldw	r2,128(sp)
  80607c:	10000426 	beq	r2,zero,806090 <___vfprintf_internal_r+0x408>
  806080:	d9002c17 	ldw	r4,176(sp)
  806084:	d9801e04 	addi	r6,sp,120
  806088:	b80b883a 	mov	r5,r23
  80608c:	080d2840 	call	80d284 <__sprint_r>
  806090:	b880030b 	ldhu	r2,12(r23)
  806094:	1080100c 	andi	r2,r2,64
  806098:	1005901e 	bne	r2,zero,8076dc <___vfprintf_internal_r+0x1a54>
  80609c:	d8802f17 	ldw	r2,188(sp)
  8060a0:	dfc04717 	ldw	ra,284(sp)
  8060a4:	df004617 	ldw	fp,280(sp)
  8060a8:	ddc04517 	ldw	r23,276(sp)
  8060ac:	dd804417 	ldw	r22,272(sp)
  8060b0:	dd404317 	ldw	r21,268(sp)
  8060b4:	dd004217 	ldw	r20,264(sp)
  8060b8:	dcc04117 	ldw	r19,260(sp)
  8060bc:	dc804017 	ldw	r18,256(sp)
  8060c0:	dc403f17 	ldw	r17,252(sp)
  8060c4:	dc003e17 	ldw	r16,248(sp)
  8060c8:	dec04804 	addi	sp,sp,288
  8060cc:	f800283a 	ret
  8060d0:	d9002c17 	ldw	r4,176(sp)
  8060d4:	0809f2c0 	call	809f2c <__sinit>
  8060d8:	003f0406 	br	805cec <__alt_data_end+0xff805cec>
  8060dc:	d8802d17 	ldw	r2,180(sp)
  8060e0:	d9002d17 	ldw	r4,180(sp)
  8060e4:	10800017 	ldw	r2,0(r2)
  8060e8:	d8803115 	stw	r2,196(sp)
  8060ec:	20800104 	addi	r2,r4,4
  8060f0:	d9003117 	ldw	r4,196(sp)
  8060f4:	203fa716 	blt	r4,zero,805f94 <__alt_data_end+0xff805f94>
  8060f8:	d8802d15 	stw	r2,180(sp)
  8060fc:	ac400007 	ldb	r17,0(r21)
  806100:	003f4206 	br	805e0c <__alt_data_end+0xff805e0c>
  806104:	ac400007 	ldb	r17,0(r21)
  806108:	aac00044 	addi	r11,r21,1
  80610c:	8a872826 	beq	r17,r10,807db0 <___vfprintf_internal_r+0x2128>
  806110:	88bff404 	addi	r2,r17,-48
  806114:	0009883a 	mov	r4,zero
  806118:	30867d36 	bltu	r6,r2,807b10 <___vfprintf_internal_r+0x1e88>
  80611c:	5c400007 	ldb	r17,0(r11)
  806120:	210002a4 	muli	r4,r4,10
  806124:	5d400044 	addi	r21,r11,1
  806128:	a817883a 	mov	r11,r21
  80612c:	2089883a 	add	r4,r4,r2
  806130:	88bff404 	addi	r2,r17,-48
  806134:	30bff92e 	bgeu	r6,r2,80611c <__alt_data_end+0xff80611c>
  806138:	2005c916 	blt	r4,zero,807860 <___vfprintf_internal_r+0x1bd8>
  80613c:	d9002915 	stw	r4,164(sp)
  806140:	003f3306 	br	805e10 <__alt_data_end+0xff805e10>
  806144:	94802014 	ori	r18,r18,128
  806148:	ac400007 	ldb	r17,0(r21)
  80614c:	003f2f06 	br	805e0c <__alt_data_end+0xff805e0c>
  806150:	a809883a 	mov	r4,r21
  806154:	d8003115 	stw	zero,196(sp)
  806158:	88bff404 	addi	r2,r17,-48
  80615c:	0017883a 	mov	r11,zero
  806160:	24400007 	ldb	r17,0(r4)
  806164:	5ac002a4 	muli	r11,r11,10
  806168:	ad400044 	addi	r21,r21,1
  80616c:	a809883a 	mov	r4,r21
  806170:	12d7883a 	add	r11,r2,r11
  806174:	88bff404 	addi	r2,r17,-48
  806178:	30bff92e 	bgeu	r6,r2,806160 <__alt_data_end+0xff806160>
  80617c:	dac03115 	stw	r11,196(sp)
  806180:	003f2306 	br	805e10 <__alt_data_end+0xff805e10>
  806184:	18c03fcc 	andi	r3,r3,255
  806188:	18072b1e 	bne	r3,zero,807e38 <___vfprintf_internal_r+0x21b0>
  80618c:	94800414 	ori	r18,r18,16
  806190:	9080080c 	andi	r2,r18,32
  806194:	10037b26 	beq	r2,zero,806f84 <___vfprintf_internal_r+0x12fc>
  806198:	d9402d17 	ldw	r5,180(sp)
  80619c:	28800117 	ldw	r2,4(r5)
  8061a0:	2cc00017 	ldw	r19,0(r5)
  8061a4:	29400204 	addi	r5,r5,8
  8061a8:	d9402d15 	stw	r5,180(sp)
  8061ac:	102d883a 	mov	r22,r2
  8061b0:	10044b16 	blt	r2,zero,8072e0 <___vfprintf_internal_r+0x1658>
  8061b4:	d9402917 	ldw	r5,164(sp)
  8061b8:	df002783 	ldbu	fp,158(sp)
  8061bc:	2803bc16 	blt	r5,zero,8070b0 <___vfprintf_internal_r+0x1428>
  8061c0:	00ffdfc4 	movi	r3,-129
  8061c4:	9d84b03a 	or	r2,r19,r22
  8061c8:	90e4703a 	and	r18,r18,r3
  8061cc:	10017726 	beq	r2,zero,8067ac <___vfprintf_internal_r+0xb24>
  8061d0:	b0038326 	beq	r22,zero,806fe0 <___vfprintf_internal_r+0x1358>
  8061d4:	dc402a15 	stw	r17,168(sp)
  8061d8:	dc001e04 	addi	r16,sp,120
  8061dc:	b023883a 	mov	r17,r22
  8061e0:	402d883a 	mov	r22,r8
  8061e4:	9809883a 	mov	r4,r19
  8061e8:	880b883a 	mov	r5,r17
  8061ec:	01800284 	movi	r6,10
  8061f0:	000f883a 	mov	r7,zero
  8061f4:	080f67c0 	call	80f67c <__umoddi3>
  8061f8:	10800c04 	addi	r2,r2,48
  8061fc:	843fffc4 	addi	r16,r16,-1
  806200:	9809883a 	mov	r4,r19
  806204:	880b883a 	mov	r5,r17
  806208:	80800005 	stb	r2,0(r16)
  80620c:	01800284 	movi	r6,10
  806210:	000f883a 	mov	r7,zero
  806214:	080f1040 	call	80f104 <__udivdi3>
  806218:	1027883a 	mov	r19,r2
  80621c:	10c4b03a 	or	r2,r2,r3
  806220:	1823883a 	mov	r17,r3
  806224:	103fef1e 	bne	r2,zero,8061e4 <__alt_data_end+0xff8061e4>
  806228:	d8c02817 	ldw	r3,160(sp)
  80622c:	dc402a17 	ldw	r17,168(sp)
  806230:	b011883a 	mov	r8,r22
  806234:	1c07c83a 	sub	r3,r3,r16
  806238:	d8c02e15 	stw	r3,184(sp)
  80623c:	00005906 	br	8063a4 <___vfprintf_internal_r+0x71c>
  806240:	18c03fcc 	andi	r3,r3,255
  806244:	1806fa1e 	bne	r3,zero,807e30 <___vfprintf_internal_r+0x21a8>
  806248:	9080020c 	andi	r2,r18,8
  80624c:	10048a26 	beq	r2,zero,807478 <___vfprintf_internal_r+0x17f0>
  806250:	d8c02d17 	ldw	r3,180(sp)
  806254:	d9002d17 	ldw	r4,180(sp)
  806258:	d9402d17 	ldw	r5,180(sp)
  80625c:	18c00017 	ldw	r3,0(r3)
  806260:	21000117 	ldw	r4,4(r4)
  806264:	29400204 	addi	r5,r5,8
  806268:	d8c03615 	stw	r3,216(sp)
  80626c:	d9003815 	stw	r4,224(sp)
  806270:	d9402d15 	stw	r5,180(sp)
  806274:	d9003617 	ldw	r4,216(sp)
  806278:	d9403817 	ldw	r5,224(sp)
  80627c:	da003d15 	stw	r8,244(sp)
  806280:	04000044 	movi	r16,1
  806284:	080cea80 	call	80cea8 <__fpclassifyd>
  806288:	da003d17 	ldw	r8,244(sp)
  80628c:	14041f1e 	bne	r2,r16,80730c <___vfprintf_internal_r+0x1684>
  806290:	d9003617 	ldw	r4,216(sp)
  806294:	d9403817 	ldw	r5,224(sp)
  806298:	000d883a 	mov	r6,zero
  80629c:	000f883a 	mov	r7,zero
  8062a0:	080fbb40 	call	80fbb4 <__ledf2>
  8062a4:	da003d17 	ldw	r8,244(sp)
  8062a8:	1005be16 	blt	r2,zero,8079a4 <___vfprintf_internal_r+0x1d1c>
  8062ac:	df002783 	ldbu	fp,158(sp)
  8062b0:	008011c4 	movi	r2,71
  8062b4:	1445330e 	bge	r2,r17,807784 <___vfprintf_internal_r+0x1afc>
  8062b8:	04002074 	movhi	r16,129
  8062bc:	840a3104 	addi	r16,r16,10436
  8062c0:	00c000c4 	movi	r3,3
  8062c4:	00bfdfc4 	movi	r2,-129
  8062c8:	d8c02a15 	stw	r3,168(sp)
  8062cc:	90a4703a 	and	r18,r18,r2
  8062d0:	d8c02e15 	stw	r3,184(sp)
  8062d4:	d8002915 	stw	zero,164(sp)
  8062d8:	d8003215 	stw	zero,200(sp)
  8062dc:	00003706 	br	8063bc <___vfprintf_internal_r+0x734>
  8062e0:	94800214 	ori	r18,r18,8
  8062e4:	ac400007 	ldb	r17,0(r21)
  8062e8:	003ec806 	br	805e0c <__alt_data_end+0xff805e0c>
  8062ec:	18c03fcc 	andi	r3,r3,255
  8062f0:	1806db1e 	bne	r3,zero,807e60 <___vfprintf_internal_r+0x21d8>
  8062f4:	94800414 	ori	r18,r18,16
  8062f8:	9080080c 	andi	r2,r18,32
  8062fc:	1002d826 	beq	r2,zero,806e60 <___vfprintf_internal_r+0x11d8>
  806300:	d9402d17 	ldw	r5,180(sp)
  806304:	d8c02917 	ldw	r3,164(sp)
  806308:	d8002785 	stb	zero,158(sp)
  80630c:	28800204 	addi	r2,r5,8
  806310:	2cc00017 	ldw	r19,0(r5)
  806314:	2d800117 	ldw	r22,4(r5)
  806318:	18048f16 	blt	r3,zero,807558 <___vfprintf_internal_r+0x18d0>
  80631c:	013fdfc4 	movi	r4,-129
  806320:	9d86b03a 	or	r3,r19,r22
  806324:	d8802d15 	stw	r2,180(sp)
  806328:	9124703a 	and	r18,r18,r4
  80632c:	1802d91e 	bne	r3,zero,806e94 <___vfprintf_internal_r+0x120c>
  806330:	d8c02917 	ldw	r3,164(sp)
  806334:	0039883a 	mov	fp,zero
  806338:	1805c326 	beq	r3,zero,807a48 <___vfprintf_internal_r+0x1dc0>
  80633c:	0027883a 	mov	r19,zero
  806340:	002d883a 	mov	r22,zero
  806344:	dc001e04 	addi	r16,sp,120
  806348:	9806d0fa 	srli	r3,r19,3
  80634c:	b008977a 	slli	r4,r22,29
  806350:	b02cd0fa 	srli	r22,r22,3
  806354:	9cc001cc 	andi	r19,r19,7
  806358:	98800c04 	addi	r2,r19,48
  80635c:	843fffc4 	addi	r16,r16,-1
  806360:	20e6b03a 	or	r19,r4,r3
  806364:	80800005 	stb	r2,0(r16)
  806368:	9d86b03a 	or	r3,r19,r22
  80636c:	183ff61e 	bne	r3,zero,806348 <__alt_data_end+0xff806348>
  806370:	90c0004c 	andi	r3,r18,1
  806374:	18013b26 	beq	r3,zero,806864 <___vfprintf_internal_r+0xbdc>
  806378:	10803fcc 	andi	r2,r2,255
  80637c:	1080201c 	xori	r2,r2,128
  806380:	10bfe004 	addi	r2,r2,-128
  806384:	00c00c04 	movi	r3,48
  806388:	10c13626 	beq	r2,r3,806864 <___vfprintf_internal_r+0xbdc>
  80638c:	80ffffc5 	stb	r3,-1(r16)
  806390:	d8c02817 	ldw	r3,160(sp)
  806394:	80bfffc4 	addi	r2,r16,-1
  806398:	1021883a 	mov	r16,r2
  80639c:	1887c83a 	sub	r3,r3,r2
  8063a0:	d8c02e15 	stw	r3,184(sp)
  8063a4:	d8802e17 	ldw	r2,184(sp)
  8063a8:	d9002917 	ldw	r4,164(sp)
  8063ac:	1100010e 	bge	r2,r4,8063b4 <___vfprintf_internal_r+0x72c>
  8063b0:	2005883a 	mov	r2,r4
  8063b4:	d8802a15 	stw	r2,168(sp)
  8063b8:	d8003215 	stw	zero,200(sp)
  8063bc:	e7003fcc 	andi	fp,fp,255
  8063c0:	e700201c 	xori	fp,fp,128
  8063c4:	e73fe004 	addi	fp,fp,-128
  8063c8:	e0000326 	beq	fp,zero,8063d8 <___vfprintf_internal_r+0x750>
  8063cc:	d8c02a17 	ldw	r3,168(sp)
  8063d0:	18c00044 	addi	r3,r3,1
  8063d4:	d8c02a15 	stw	r3,168(sp)
  8063d8:	90c0008c 	andi	r3,r18,2
  8063dc:	d8c02b15 	stw	r3,172(sp)
  8063e0:	18000326 	beq	r3,zero,8063f0 <___vfprintf_internal_r+0x768>
  8063e4:	d8c02a17 	ldw	r3,168(sp)
  8063e8:	18c00084 	addi	r3,r3,2
  8063ec:	d8c02a15 	stw	r3,168(sp)
  8063f0:	90c0210c 	andi	r3,r18,132
  8063f4:	d8c03015 	stw	r3,192(sp)
  8063f8:	1801a31e 	bne	r3,zero,806a88 <___vfprintf_internal_r+0xe00>
  8063fc:	d9003117 	ldw	r4,196(sp)
  806400:	d8c02a17 	ldw	r3,168(sp)
  806404:	20e7c83a 	sub	r19,r4,r3
  806408:	04c19f0e 	bge	zero,r19,806a88 <___vfprintf_internal_r+0xe00>
  80640c:	02400404 	movi	r9,16
  806410:	d8c02017 	ldw	r3,128(sp)
  806414:	d8801f17 	ldw	r2,124(sp)
  806418:	4cc50d0e 	bge	r9,r19,807850 <___vfprintf_internal_r+0x1bc8>
  80641c:	01402074 	movhi	r5,129
  806420:	294a4484 	addi	r5,r5,10514
  806424:	dc403b15 	stw	r17,236(sp)
  806428:	d9403515 	stw	r5,212(sp)
  80642c:	9823883a 	mov	r17,r19
  806430:	482d883a 	mov	r22,r9
  806434:	9027883a 	mov	r19,r18
  806438:	070001c4 	movi	fp,7
  80643c:	8025883a 	mov	r18,r16
  806440:	dc002c17 	ldw	r16,176(sp)
  806444:	00000306 	br	806454 <___vfprintf_internal_r+0x7cc>
  806448:	8c7ffc04 	addi	r17,r17,-16
  80644c:	42000204 	addi	r8,r8,8
  806450:	b440130e 	bge	r22,r17,8064a0 <___vfprintf_internal_r+0x818>
  806454:	01002074 	movhi	r4,129
  806458:	18c00404 	addi	r3,r3,16
  80645c:	10800044 	addi	r2,r2,1
  806460:	210a4484 	addi	r4,r4,10514
  806464:	41000015 	stw	r4,0(r8)
  806468:	45800115 	stw	r22,4(r8)
  80646c:	d8c02015 	stw	r3,128(sp)
  806470:	d8801f15 	stw	r2,124(sp)
  806474:	e0bff40e 	bge	fp,r2,806448 <__alt_data_end+0xff806448>
  806478:	d9801e04 	addi	r6,sp,120
  80647c:	b80b883a 	mov	r5,r23
  806480:	8009883a 	mov	r4,r16
  806484:	080d2840 	call	80d284 <__sprint_r>
  806488:	103f011e 	bne	r2,zero,806090 <__alt_data_end+0xff806090>
  80648c:	8c7ffc04 	addi	r17,r17,-16
  806490:	d8c02017 	ldw	r3,128(sp)
  806494:	d8801f17 	ldw	r2,124(sp)
  806498:	da000404 	addi	r8,sp,16
  80649c:	b47fed16 	blt	r22,r17,806454 <__alt_data_end+0xff806454>
  8064a0:	9021883a 	mov	r16,r18
  8064a4:	9825883a 	mov	r18,r19
  8064a8:	8827883a 	mov	r19,r17
  8064ac:	dc403b17 	ldw	r17,236(sp)
  8064b0:	d9403517 	ldw	r5,212(sp)
  8064b4:	98c7883a 	add	r3,r19,r3
  8064b8:	10800044 	addi	r2,r2,1
  8064bc:	41400015 	stw	r5,0(r8)
  8064c0:	44c00115 	stw	r19,4(r8)
  8064c4:	d8c02015 	stw	r3,128(sp)
  8064c8:	d8801f15 	stw	r2,124(sp)
  8064cc:	010001c4 	movi	r4,7
  8064d0:	2082a316 	blt	r4,r2,806f60 <___vfprintf_internal_r+0x12d8>
  8064d4:	df002787 	ldb	fp,158(sp)
  8064d8:	42000204 	addi	r8,r8,8
  8064dc:	e0000c26 	beq	fp,zero,806510 <___vfprintf_internal_r+0x888>
  8064e0:	d8801f17 	ldw	r2,124(sp)
  8064e4:	d9002784 	addi	r4,sp,158
  8064e8:	18c00044 	addi	r3,r3,1
  8064ec:	10800044 	addi	r2,r2,1
  8064f0:	41000015 	stw	r4,0(r8)
  8064f4:	01000044 	movi	r4,1
  8064f8:	41000115 	stw	r4,4(r8)
  8064fc:	d8c02015 	stw	r3,128(sp)
  806500:	d8801f15 	stw	r2,124(sp)
  806504:	010001c4 	movi	r4,7
  806508:	20823c16 	blt	r4,r2,806dfc <___vfprintf_internal_r+0x1174>
  80650c:	42000204 	addi	r8,r8,8
  806510:	d8802b17 	ldw	r2,172(sp)
  806514:	10000c26 	beq	r2,zero,806548 <___vfprintf_internal_r+0x8c0>
  806518:	d8801f17 	ldw	r2,124(sp)
  80651c:	d9002704 	addi	r4,sp,156
  806520:	18c00084 	addi	r3,r3,2
  806524:	10800044 	addi	r2,r2,1
  806528:	41000015 	stw	r4,0(r8)
  80652c:	01000084 	movi	r4,2
  806530:	41000115 	stw	r4,4(r8)
  806534:	d8c02015 	stw	r3,128(sp)
  806538:	d8801f15 	stw	r2,124(sp)
  80653c:	010001c4 	movi	r4,7
  806540:	20823616 	blt	r4,r2,806e1c <___vfprintf_internal_r+0x1194>
  806544:	42000204 	addi	r8,r8,8
  806548:	d9003017 	ldw	r4,192(sp)
  80654c:	00802004 	movi	r2,128
  806550:	20819926 	beq	r4,r2,806bb8 <___vfprintf_internal_r+0xf30>
  806554:	d9402917 	ldw	r5,164(sp)
  806558:	d8802e17 	ldw	r2,184(sp)
  80655c:	28adc83a 	sub	r22,r5,r2
  806560:	0580310e 	bge	zero,r22,806628 <___vfprintf_internal_r+0x9a0>
  806564:	07000404 	movi	fp,16
  806568:	d8801f17 	ldw	r2,124(sp)
  80656c:	e584140e 	bge	fp,r22,8075c0 <___vfprintf_internal_r+0x1938>
  806570:	01402074 	movhi	r5,129
  806574:	294a4084 	addi	r5,r5,10498
  806578:	dc402915 	stw	r17,164(sp)
  80657c:	d9402b15 	stw	r5,172(sp)
  806580:	b023883a 	mov	r17,r22
  806584:	04c001c4 	movi	r19,7
  806588:	a82d883a 	mov	r22,r21
  80658c:	902b883a 	mov	r21,r18
  806590:	8025883a 	mov	r18,r16
  806594:	dc002c17 	ldw	r16,176(sp)
  806598:	00000306 	br	8065a8 <___vfprintf_internal_r+0x920>
  80659c:	8c7ffc04 	addi	r17,r17,-16
  8065a0:	42000204 	addi	r8,r8,8
  8065a4:	e440110e 	bge	fp,r17,8065ec <___vfprintf_internal_r+0x964>
  8065a8:	18c00404 	addi	r3,r3,16
  8065ac:	10800044 	addi	r2,r2,1
  8065b0:	45000015 	stw	r20,0(r8)
  8065b4:	47000115 	stw	fp,4(r8)
  8065b8:	d8c02015 	stw	r3,128(sp)
  8065bc:	d8801f15 	stw	r2,124(sp)
  8065c0:	98bff60e 	bge	r19,r2,80659c <__alt_data_end+0xff80659c>
  8065c4:	d9801e04 	addi	r6,sp,120
  8065c8:	b80b883a 	mov	r5,r23
  8065cc:	8009883a 	mov	r4,r16
  8065d0:	080d2840 	call	80d284 <__sprint_r>
  8065d4:	103eae1e 	bne	r2,zero,806090 <__alt_data_end+0xff806090>
  8065d8:	8c7ffc04 	addi	r17,r17,-16
  8065dc:	d8c02017 	ldw	r3,128(sp)
  8065e0:	d8801f17 	ldw	r2,124(sp)
  8065e4:	da000404 	addi	r8,sp,16
  8065e8:	e47fef16 	blt	fp,r17,8065a8 <__alt_data_end+0xff8065a8>
  8065ec:	9021883a 	mov	r16,r18
  8065f0:	a825883a 	mov	r18,r21
  8065f4:	b02b883a 	mov	r21,r22
  8065f8:	882d883a 	mov	r22,r17
  8065fc:	dc402917 	ldw	r17,164(sp)
  806600:	d9002b17 	ldw	r4,172(sp)
  806604:	1d87883a 	add	r3,r3,r22
  806608:	10800044 	addi	r2,r2,1
  80660c:	41000015 	stw	r4,0(r8)
  806610:	45800115 	stw	r22,4(r8)
  806614:	d8c02015 	stw	r3,128(sp)
  806618:	d8801f15 	stw	r2,124(sp)
  80661c:	010001c4 	movi	r4,7
  806620:	2081ee16 	blt	r4,r2,806ddc <___vfprintf_internal_r+0x1154>
  806624:	42000204 	addi	r8,r8,8
  806628:	9080400c 	andi	r2,r18,256
  80662c:	1001181e 	bne	r2,zero,806a90 <___vfprintf_internal_r+0xe08>
  806630:	d9402e17 	ldw	r5,184(sp)
  806634:	d8801f17 	ldw	r2,124(sp)
  806638:	44000015 	stw	r16,0(r8)
  80663c:	1947883a 	add	r3,r3,r5
  806640:	10800044 	addi	r2,r2,1
  806644:	41400115 	stw	r5,4(r8)
  806648:	d8c02015 	stw	r3,128(sp)
  80664c:	d8801f15 	stw	r2,124(sp)
  806650:	010001c4 	movi	r4,7
  806654:	2081d316 	blt	r4,r2,806da4 <___vfprintf_internal_r+0x111c>
  806658:	42000204 	addi	r8,r8,8
  80665c:	9480010c 	andi	r18,r18,4
  806660:	90003226 	beq	r18,zero,80672c <___vfprintf_internal_r+0xaa4>
  806664:	d9403117 	ldw	r5,196(sp)
  806668:	d8802a17 	ldw	r2,168(sp)
  80666c:	28a1c83a 	sub	r16,r5,r2
  806670:	04002e0e 	bge	zero,r16,80672c <___vfprintf_internal_r+0xaa4>
  806674:	04400404 	movi	r17,16
  806678:	d8801f17 	ldw	r2,124(sp)
  80667c:	8c04a20e 	bge	r17,r16,807908 <___vfprintf_internal_r+0x1c80>
  806680:	01402074 	movhi	r5,129
  806684:	294a4484 	addi	r5,r5,10514
  806688:	d9403515 	stw	r5,212(sp)
  80668c:	048001c4 	movi	r18,7
  806690:	dcc02c17 	ldw	r19,176(sp)
  806694:	00000306 	br	8066a4 <___vfprintf_internal_r+0xa1c>
  806698:	843ffc04 	addi	r16,r16,-16
  80669c:	42000204 	addi	r8,r8,8
  8066a0:	8c00130e 	bge	r17,r16,8066f0 <___vfprintf_internal_r+0xa68>
  8066a4:	01002074 	movhi	r4,129
  8066a8:	18c00404 	addi	r3,r3,16
  8066ac:	10800044 	addi	r2,r2,1
  8066b0:	210a4484 	addi	r4,r4,10514
  8066b4:	41000015 	stw	r4,0(r8)
  8066b8:	44400115 	stw	r17,4(r8)
  8066bc:	d8c02015 	stw	r3,128(sp)
  8066c0:	d8801f15 	stw	r2,124(sp)
  8066c4:	90bff40e 	bge	r18,r2,806698 <__alt_data_end+0xff806698>
  8066c8:	d9801e04 	addi	r6,sp,120
  8066cc:	b80b883a 	mov	r5,r23
  8066d0:	9809883a 	mov	r4,r19
  8066d4:	080d2840 	call	80d284 <__sprint_r>
  8066d8:	103e6d1e 	bne	r2,zero,806090 <__alt_data_end+0xff806090>
  8066dc:	843ffc04 	addi	r16,r16,-16
  8066e0:	d8c02017 	ldw	r3,128(sp)
  8066e4:	d8801f17 	ldw	r2,124(sp)
  8066e8:	da000404 	addi	r8,sp,16
  8066ec:	8c3fed16 	blt	r17,r16,8066a4 <__alt_data_end+0xff8066a4>
  8066f0:	d9403517 	ldw	r5,212(sp)
  8066f4:	1c07883a 	add	r3,r3,r16
  8066f8:	10800044 	addi	r2,r2,1
  8066fc:	41400015 	stw	r5,0(r8)
  806700:	44000115 	stw	r16,4(r8)
  806704:	d8c02015 	stw	r3,128(sp)
  806708:	d8801f15 	stw	r2,124(sp)
  80670c:	010001c4 	movi	r4,7
  806710:	2080060e 	bge	r4,r2,80672c <___vfprintf_internal_r+0xaa4>
  806714:	d9002c17 	ldw	r4,176(sp)
  806718:	d9801e04 	addi	r6,sp,120
  80671c:	b80b883a 	mov	r5,r23
  806720:	080d2840 	call	80d284 <__sprint_r>
  806724:	103e5a1e 	bne	r2,zero,806090 <__alt_data_end+0xff806090>
  806728:	d8c02017 	ldw	r3,128(sp)
  80672c:	d8803117 	ldw	r2,196(sp)
  806730:	d9002a17 	ldw	r4,168(sp)
  806734:	1100010e 	bge	r2,r4,80673c <___vfprintf_internal_r+0xab4>
  806738:	2005883a 	mov	r2,r4
  80673c:	d9402f17 	ldw	r5,188(sp)
  806740:	288b883a 	add	r5,r5,r2
  806744:	d9402f15 	stw	r5,188(sp)
  806748:	18019e1e 	bne	r3,zero,806dc4 <___vfprintf_internal_r+0x113c>
  80674c:	a8800007 	ldb	r2,0(r21)
  806750:	d8001f15 	stw	zero,124(sp)
  806754:	da000404 	addi	r8,sp,16
  806758:	103d851e 	bne	r2,zero,805d70 <__alt_data_end+0xff805d70>
  80675c:	a821883a 	mov	r16,r21
  806760:	003d9b06 	br	805dd0 <__alt_data_end+0xff805dd0>
  806764:	18c03fcc 	andi	r3,r3,255
  806768:	1805c11e 	bne	r3,zero,807e70 <___vfprintf_internal_r+0x21e8>
  80676c:	94800414 	ori	r18,r18,16
  806770:	9080080c 	andi	r2,r18,32
  806774:	10020c26 	beq	r2,zero,806fa8 <___vfprintf_internal_r+0x1320>
  806778:	d8802d17 	ldw	r2,180(sp)
  80677c:	d9002917 	ldw	r4,164(sp)
  806780:	d8002785 	stb	zero,158(sp)
  806784:	10c00204 	addi	r3,r2,8
  806788:	14c00017 	ldw	r19,0(r2)
  80678c:	15800117 	ldw	r22,4(r2)
  806790:	20040f16 	blt	r4,zero,8077d0 <___vfprintf_internal_r+0x1b48>
  806794:	013fdfc4 	movi	r4,-129
  806798:	9d84b03a 	or	r2,r19,r22
  80679c:	d8c02d15 	stw	r3,180(sp)
  8067a0:	9124703a 	and	r18,r18,r4
  8067a4:	0039883a 	mov	fp,zero
  8067a8:	103e891e 	bne	r2,zero,8061d0 <__alt_data_end+0xff8061d0>
  8067ac:	d9002917 	ldw	r4,164(sp)
  8067b0:	2002c11e 	bne	r4,zero,8072b8 <___vfprintf_internal_r+0x1630>
  8067b4:	d8002915 	stw	zero,164(sp)
  8067b8:	d8002e15 	stw	zero,184(sp)
  8067bc:	dc001e04 	addi	r16,sp,120
  8067c0:	003ef806 	br	8063a4 <__alt_data_end+0xff8063a4>
  8067c4:	18c03fcc 	andi	r3,r3,255
  8067c8:	18059d1e 	bne	r3,zero,807e40 <___vfprintf_internal_r+0x21b8>
  8067cc:	01402074 	movhi	r5,129
  8067d0:	294a3404 	addi	r5,r5,10448
  8067d4:	d9403915 	stw	r5,228(sp)
  8067d8:	9080080c 	andi	r2,r18,32
  8067dc:	10005226 	beq	r2,zero,806928 <___vfprintf_internal_r+0xca0>
  8067e0:	d8802d17 	ldw	r2,180(sp)
  8067e4:	14c00017 	ldw	r19,0(r2)
  8067e8:	15800117 	ldw	r22,4(r2)
  8067ec:	10800204 	addi	r2,r2,8
  8067f0:	d8802d15 	stw	r2,180(sp)
  8067f4:	9080004c 	andi	r2,r18,1
  8067f8:	10019026 	beq	r2,zero,806e3c <___vfprintf_internal_r+0x11b4>
  8067fc:	9d84b03a 	or	r2,r19,r22
  806800:	10036926 	beq	r2,zero,8075a8 <___vfprintf_internal_r+0x1920>
  806804:	d8c02917 	ldw	r3,164(sp)
  806808:	00800c04 	movi	r2,48
  80680c:	d8802705 	stb	r2,156(sp)
  806810:	dc402745 	stb	r17,157(sp)
  806814:	d8002785 	stb	zero,158(sp)
  806818:	90800094 	ori	r2,r18,2
  80681c:	18045d16 	blt	r3,zero,807994 <___vfprintf_internal_r+0x1d0c>
  806820:	00bfdfc4 	movi	r2,-129
  806824:	90a4703a 	and	r18,r18,r2
  806828:	94800094 	ori	r18,r18,2
  80682c:	0039883a 	mov	fp,zero
  806830:	d9003917 	ldw	r4,228(sp)
  806834:	dc001e04 	addi	r16,sp,120
  806838:	988003cc 	andi	r2,r19,15
  80683c:	b006973a 	slli	r3,r22,28
  806840:	2085883a 	add	r2,r4,r2
  806844:	9826d13a 	srli	r19,r19,4
  806848:	10800003 	ldbu	r2,0(r2)
  80684c:	b02cd13a 	srli	r22,r22,4
  806850:	843fffc4 	addi	r16,r16,-1
  806854:	1ce6b03a 	or	r19,r3,r19
  806858:	80800005 	stb	r2,0(r16)
  80685c:	9d84b03a 	or	r2,r19,r22
  806860:	103ff51e 	bne	r2,zero,806838 <__alt_data_end+0xff806838>
  806864:	d8c02817 	ldw	r3,160(sp)
  806868:	1c07c83a 	sub	r3,r3,r16
  80686c:	d8c02e15 	stw	r3,184(sp)
  806870:	003ecc06 	br	8063a4 <__alt_data_end+0xff8063a4>
  806874:	18c03fcc 	andi	r3,r3,255
  806878:	183e9f26 	beq	r3,zero,8062f8 <__alt_data_end+0xff8062f8>
  80687c:	d9c02785 	stb	r7,158(sp)
  806880:	003e9d06 	br	8062f8 <__alt_data_end+0xff8062f8>
  806884:	00c00044 	movi	r3,1
  806888:	01c00ac4 	movi	r7,43
  80688c:	ac400007 	ldb	r17,0(r21)
  806890:	003d5e06 	br	805e0c <__alt_data_end+0xff805e0c>
  806894:	94800814 	ori	r18,r18,32
  806898:	ac400007 	ldb	r17,0(r21)
  80689c:	003d5b06 	br	805e0c <__alt_data_end+0xff805e0c>
  8068a0:	d8c02d17 	ldw	r3,180(sp)
  8068a4:	d8002785 	stb	zero,158(sp)
  8068a8:	1c000017 	ldw	r16,0(r3)
  8068ac:	1cc00104 	addi	r19,r3,4
  8068b0:	80041926 	beq	r16,zero,807918 <___vfprintf_internal_r+0x1c90>
  8068b4:	d9002917 	ldw	r4,164(sp)
  8068b8:	2003d016 	blt	r4,zero,8077fc <___vfprintf_internal_r+0x1b74>
  8068bc:	200d883a 	mov	r6,r4
  8068c0:	000b883a 	mov	r5,zero
  8068c4:	8009883a 	mov	r4,r16
  8068c8:	da003d15 	stw	r8,244(sp)
  8068cc:	080b4980 	call	80b498 <memchr>
  8068d0:	da003d17 	ldw	r8,244(sp)
  8068d4:	10045426 	beq	r2,zero,807a28 <___vfprintf_internal_r+0x1da0>
  8068d8:	1405c83a 	sub	r2,r2,r16
  8068dc:	d8802e15 	stw	r2,184(sp)
  8068e0:	1003cc16 	blt	r2,zero,807814 <___vfprintf_internal_r+0x1b8c>
  8068e4:	df002783 	ldbu	fp,158(sp)
  8068e8:	d8802a15 	stw	r2,168(sp)
  8068ec:	dcc02d15 	stw	r19,180(sp)
  8068f0:	d8002915 	stw	zero,164(sp)
  8068f4:	d8003215 	stw	zero,200(sp)
  8068f8:	003eb006 	br	8063bc <__alt_data_end+0xff8063bc>
  8068fc:	18c03fcc 	andi	r3,r3,255
  806900:	183f9b26 	beq	r3,zero,806770 <__alt_data_end+0xff806770>
  806904:	d9c02785 	stb	r7,158(sp)
  806908:	003f9906 	br	806770 <__alt_data_end+0xff806770>
  80690c:	18c03fcc 	andi	r3,r3,255
  806910:	1805551e 	bne	r3,zero,807e68 <___vfprintf_internal_r+0x21e0>
  806914:	01402074 	movhi	r5,129
  806918:	294a3904 	addi	r5,r5,10468
  80691c:	d9403915 	stw	r5,228(sp)
  806920:	9080080c 	andi	r2,r18,32
  806924:	103fae1e 	bne	r2,zero,8067e0 <__alt_data_end+0xff8067e0>
  806928:	9080040c 	andi	r2,r18,16
  80692c:	1002de26 	beq	r2,zero,8074a8 <___vfprintf_internal_r+0x1820>
  806930:	d8c02d17 	ldw	r3,180(sp)
  806934:	002d883a 	mov	r22,zero
  806938:	1cc00017 	ldw	r19,0(r3)
  80693c:	18c00104 	addi	r3,r3,4
  806940:	d8c02d15 	stw	r3,180(sp)
  806944:	003fab06 	br	8067f4 <__alt_data_end+0xff8067f4>
  806948:	38803fcc 	andi	r2,r7,255
  80694c:	1080201c 	xori	r2,r2,128
  806950:	10bfe004 	addi	r2,r2,-128
  806954:	1002d21e 	bne	r2,zero,8074a0 <___vfprintf_internal_r+0x1818>
  806958:	00c00044 	movi	r3,1
  80695c:	01c00804 	movi	r7,32
  806960:	ac400007 	ldb	r17,0(r21)
  806964:	003d2906 	br	805e0c <__alt_data_end+0xff805e0c>
  806968:	94800054 	ori	r18,r18,1
  80696c:	ac400007 	ldb	r17,0(r21)
  806970:	003d2606 	br	805e0c <__alt_data_end+0xff805e0c>
  806974:	18c03fcc 	andi	r3,r3,255
  806978:	183e0526 	beq	r3,zero,806190 <__alt_data_end+0xff806190>
  80697c:	d9c02785 	stb	r7,158(sp)
  806980:	003e0306 	br	806190 <__alt_data_end+0xff806190>
  806984:	94801014 	ori	r18,r18,64
  806988:	ac400007 	ldb	r17,0(r21)
  80698c:	003d1f06 	br	805e0c <__alt_data_end+0xff805e0c>
  806990:	ac400007 	ldb	r17,0(r21)
  806994:	8a438726 	beq	r17,r9,8077b4 <___vfprintf_internal_r+0x1b2c>
  806998:	94800414 	ori	r18,r18,16
  80699c:	003d1b06 	br	805e0c <__alt_data_end+0xff805e0c>
  8069a0:	18c03fcc 	andi	r3,r3,255
  8069a4:	1805341e 	bne	r3,zero,807e78 <___vfprintf_internal_r+0x21f0>
  8069a8:	9080080c 	andi	r2,r18,32
  8069ac:	1002cd26 	beq	r2,zero,8074e4 <___vfprintf_internal_r+0x185c>
  8069b0:	d9402d17 	ldw	r5,180(sp)
  8069b4:	d9002f17 	ldw	r4,188(sp)
  8069b8:	28800017 	ldw	r2,0(r5)
  8069bc:	2007d7fa 	srai	r3,r4,31
  8069c0:	29400104 	addi	r5,r5,4
  8069c4:	d9402d15 	stw	r5,180(sp)
  8069c8:	11000015 	stw	r4,0(r2)
  8069cc:	10c00115 	stw	r3,4(r2)
  8069d0:	003ce506 	br	805d68 <__alt_data_end+0xff805d68>
  8069d4:	d8c02d17 	ldw	r3,180(sp)
  8069d8:	d9002d17 	ldw	r4,180(sp)
  8069dc:	d8002785 	stb	zero,158(sp)
  8069e0:	18800017 	ldw	r2,0(r3)
  8069e4:	21000104 	addi	r4,r4,4
  8069e8:	00c00044 	movi	r3,1
  8069ec:	d8c02a15 	stw	r3,168(sp)
  8069f0:	d8801405 	stb	r2,80(sp)
  8069f4:	d9002d15 	stw	r4,180(sp)
  8069f8:	d8c02e15 	stw	r3,184(sp)
  8069fc:	d8002915 	stw	zero,164(sp)
  806a00:	d8003215 	stw	zero,200(sp)
  806a04:	dc001404 	addi	r16,sp,80
  806a08:	0039883a 	mov	fp,zero
  806a0c:	003e7206 	br	8063d8 <__alt_data_end+0xff8063d8>
  806a10:	01002074 	movhi	r4,129
  806a14:	210a3904 	addi	r4,r4,10468
  806a18:	0039883a 	mov	fp,zero
  806a1c:	d9003915 	stw	r4,228(sp)
  806a20:	04401e04 	movi	r17,120
  806a24:	003f8206 	br	806830 <__alt_data_end+0xff806830>
  806a28:	18c03fcc 	andi	r3,r3,255
  806a2c:	1805061e 	bne	r3,zero,807e48 <___vfprintf_internal_r+0x21c0>
  806a30:	883d9126 	beq	r17,zero,806078 <__alt_data_end+0xff806078>
  806a34:	00c00044 	movi	r3,1
  806a38:	d8c02a15 	stw	r3,168(sp)
  806a3c:	dc401405 	stb	r17,80(sp)
  806a40:	d8002785 	stb	zero,158(sp)
  806a44:	003fec06 	br	8069f8 <__alt_data_end+0xff8069f8>
  806a48:	01402074 	movhi	r5,129
  806a4c:	294a3904 	addi	r5,r5,10468
  806a50:	d9403915 	stw	r5,228(sp)
  806a54:	d8c02d15 	stw	r3,180(sp)
  806a58:	1025883a 	mov	r18,r2
  806a5c:	04401e04 	movi	r17,120
  806a60:	9d84b03a 	or	r2,r19,r22
  806a64:	1000fc1e 	bne	r2,zero,806e58 <___vfprintf_internal_r+0x11d0>
  806a68:	0039883a 	mov	fp,zero
  806a6c:	00800084 	movi	r2,2
  806a70:	10803fcc 	andi	r2,r2,255
  806a74:	00c00044 	movi	r3,1
  806a78:	10c20f26 	beq	r2,r3,8072b8 <___vfprintf_internal_r+0x1630>
  806a7c:	00c00084 	movi	r3,2
  806a80:	10fd6326 	beq	r2,r3,806010 <__alt_data_end+0xff806010>
  806a84:	003e2d06 	br	80633c <__alt_data_end+0xff80633c>
  806a88:	d8c02017 	ldw	r3,128(sp)
  806a8c:	003e9306 	br	8064dc <__alt_data_end+0xff8064dc>
  806a90:	00801944 	movi	r2,101
  806a94:	14407e0e 	bge	r2,r17,806c90 <___vfprintf_internal_r+0x1008>
  806a98:	d9003617 	ldw	r4,216(sp)
  806a9c:	d9403817 	ldw	r5,224(sp)
  806aa0:	000d883a 	mov	r6,zero
  806aa4:	000f883a 	mov	r7,zero
  806aa8:	d8c03c15 	stw	r3,240(sp)
  806aac:	da003d15 	stw	r8,244(sp)
  806ab0:	08044c00 	call	8044c0 <__eqdf2>
  806ab4:	d8c03c17 	ldw	r3,240(sp)
  806ab8:	da003d17 	ldw	r8,244(sp)
  806abc:	1000f71e 	bne	r2,zero,806e9c <___vfprintf_internal_r+0x1214>
  806ac0:	d8801f17 	ldw	r2,124(sp)
  806ac4:	01002074 	movhi	r4,129
  806ac8:	210a4004 	addi	r4,r4,10496
  806acc:	18c00044 	addi	r3,r3,1
  806ad0:	10800044 	addi	r2,r2,1
  806ad4:	41000015 	stw	r4,0(r8)
  806ad8:	01000044 	movi	r4,1
  806adc:	41000115 	stw	r4,4(r8)
  806ae0:	d8c02015 	stw	r3,128(sp)
  806ae4:	d8801f15 	stw	r2,124(sp)
  806ae8:	010001c4 	movi	r4,7
  806aec:	2082b816 	blt	r4,r2,8075d0 <___vfprintf_internal_r+0x1948>
  806af0:	42000204 	addi	r8,r8,8
  806af4:	d8802617 	ldw	r2,152(sp)
  806af8:	d9403317 	ldw	r5,204(sp)
  806afc:	11400216 	blt	r2,r5,806b08 <___vfprintf_internal_r+0xe80>
  806b00:	9080004c 	andi	r2,r18,1
  806b04:	103ed526 	beq	r2,zero,80665c <__alt_data_end+0xff80665c>
  806b08:	d8803717 	ldw	r2,220(sp)
  806b0c:	d9003417 	ldw	r4,208(sp)
  806b10:	d9403717 	ldw	r5,220(sp)
  806b14:	1887883a 	add	r3,r3,r2
  806b18:	d8801f17 	ldw	r2,124(sp)
  806b1c:	41000015 	stw	r4,0(r8)
  806b20:	41400115 	stw	r5,4(r8)
  806b24:	10800044 	addi	r2,r2,1
  806b28:	d8c02015 	stw	r3,128(sp)
  806b2c:	d8801f15 	stw	r2,124(sp)
  806b30:	010001c4 	movi	r4,7
  806b34:	20832916 	blt	r4,r2,8077dc <___vfprintf_internal_r+0x1b54>
  806b38:	42000204 	addi	r8,r8,8
  806b3c:	d8803317 	ldw	r2,204(sp)
  806b40:	143fffc4 	addi	r16,r2,-1
  806b44:	043ec50e 	bge	zero,r16,80665c <__alt_data_end+0xff80665c>
  806b48:	04400404 	movi	r17,16
  806b4c:	d8801f17 	ldw	r2,124(sp)
  806b50:	8c00880e 	bge	r17,r16,806d74 <___vfprintf_internal_r+0x10ec>
  806b54:	01402074 	movhi	r5,129
  806b58:	294a4084 	addi	r5,r5,10498
  806b5c:	d9402b15 	stw	r5,172(sp)
  806b60:	058001c4 	movi	r22,7
  806b64:	dcc02c17 	ldw	r19,176(sp)
  806b68:	00000306 	br	806b78 <___vfprintf_internal_r+0xef0>
  806b6c:	42000204 	addi	r8,r8,8
  806b70:	843ffc04 	addi	r16,r16,-16
  806b74:	8c00820e 	bge	r17,r16,806d80 <___vfprintf_internal_r+0x10f8>
  806b78:	18c00404 	addi	r3,r3,16
  806b7c:	10800044 	addi	r2,r2,1
  806b80:	45000015 	stw	r20,0(r8)
  806b84:	44400115 	stw	r17,4(r8)
  806b88:	d8c02015 	stw	r3,128(sp)
  806b8c:	d8801f15 	stw	r2,124(sp)
  806b90:	b0bff60e 	bge	r22,r2,806b6c <__alt_data_end+0xff806b6c>
  806b94:	d9801e04 	addi	r6,sp,120
  806b98:	b80b883a 	mov	r5,r23
  806b9c:	9809883a 	mov	r4,r19
  806ba0:	080d2840 	call	80d284 <__sprint_r>
  806ba4:	103d3a1e 	bne	r2,zero,806090 <__alt_data_end+0xff806090>
  806ba8:	d8c02017 	ldw	r3,128(sp)
  806bac:	d8801f17 	ldw	r2,124(sp)
  806bb0:	da000404 	addi	r8,sp,16
  806bb4:	003fee06 	br	806b70 <__alt_data_end+0xff806b70>
  806bb8:	d9403117 	ldw	r5,196(sp)
  806bbc:	d8802a17 	ldw	r2,168(sp)
  806bc0:	28adc83a 	sub	r22,r5,r2
  806bc4:	05be630e 	bge	zero,r22,806554 <__alt_data_end+0xff806554>
  806bc8:	07000404 	movi	fp,16
  806bcc:	d8801f17 	ldw	r2,124(sp)
  806bd0:	e5838f0e 	bge	fp,r22,807a10 <___vfprintf_internal_r+0x1d88>
  806bd4:	01402074 	movhi	r5,129
  806bd8:	294a4084 	addi	r5,r5,10498
  806bdc:	dc403015 	stw	r17,192(sp)
  806be0:	d9402b15 	stw	r5,172(sp)
  806be4:	b023883a 	mov	r17,r22
  806be8:	04c001c4 	movi	r19,7
  806bec:	a82d883a 	mov	r22,r21
  806bf0:	902b883a 	mov	r21,r18
  806bf4:	8025883a 	mov	r18,r16
  806bf8:	dc002c17 	ldw	r16,176(sp)
  806bfc:	00000306 	br	806c0c <___vfprintf_internal_r+0xf84>
  806c00:	8c7ffc04 	addi	r17,r17,-16
  806c04:	42000204 	addi	r8,r8,8
  806c08:	e440110e 	bge	fp,r17,806c50 <___vfprintf_internal_r+0xfc8>
  806c0c:	18c00404 	addi	r3,r3,16
  806c10:	10800044 	addi	r2,r2,1
  806c14:	45000015 	stw	r20,0(r8)
  806c18:	47000115 	stw	fp,4(r8)
  806c1c:	d8c02015 	stw	r3,128(sp)
  806c20:	d8801f15 	stw	r2,124(sp)
  806c24:	98bff60e 	bge	r19,r2,806c00 <__alt_data_end+0xff806c00>
  806c28:	d9801e04 	addi	r6,sp,120
  806c2c:	b80b883a 	mov	r5,r23
  806c30:	8009883a 	mov	r4,r16
  806c34:	080d2840 	call	80d284 <__sprint_r>
  806c38:	103d151e 	bne	r2,zero,806090 <__alt_data_end+0xff806090>
  806c3c:	8c7ffc04 	addi	r17,r17,-16
  806c40:	d8c02017 	ldw	r3,128(sp)
  806c44:	d8801f17 	ldw	r2,124(sp)
  806c48:	da000404 	addi	r8,sp,16
  806c4c:	e47fef16 	blt	fp,r17,806c0c <__alt_data_end+0xff806c0c>
  806c50:	9021883a 	mov	r16,r18
  806c54:	a825883a 	mov	r18,r21
  806c58:	b02b883a 	mov	r21,r22
  806c5c:	882d883a 	mov	r22,r17
  806c60:	dc403017 	ldw	r17,192(sp)
  806c64:	d9002b17 	ldw	r4,172(sp)
  806c68:	1d87883a 	add	r3,r3,r22
  806c6c:	10800044 	addi	r2,r2,1
  806c70:	41000015 	stw	r4,0(r8)
  806c74:	45800115 	stw	r22,4(r8)
  806c78:	d8c02015 	stw	r3,128(sp)
  806c7c:	d8801f15 	stw	r2,124(sp)
  806c80:	010001c4 	movi	r4,7
  806c84:	20818e16 	blt	r4,r2,8072c0 <___vfprintf_internal_r+0x1638>
  806c88:	42000204 	addi	r8,r8,8
  806c8c:	003e3106 	br	806554 <__alt_data_end+0xff806554>
  806c90:	d9403317 	ldw	r5,204(sp)
  806c94:	00800044 	movi	r2,1
  806c98:	18c00044 	addi	r3,r3,1
  806c9c:	1141530e 	bge	r2,r5,8071ec <___vfprintf_internal_r+0x1564>
  806ca0:	dc401f17 	ldw	r17,124(sp)
  806ca4:	00800044 	movi	r2,1
  806ca8:	40800115 	stw	r2,4(r8)
  806cac:	8c400044 	addi	r17,r17,1
  806cb0:	44000015 	stw	r16,0(r8)
  806cb4:	d8c02015 	stw	r3,128(sp)
  806cb8:	dc401f15 	stw	r17,124(sp)
  806cbc:	008001c4 	movi	r2,7
  806cc0:	14416b16 	blt	r2,r17,807270 <___vfprintf_internal_r+0x15e8>
  806cc4:	42000204 	addi	r8,r8,8
  806cc8:	d8803717 	ldw	r2,220(sp)
  806ccc:	d9003417 	ldw	r4,208(sp)
  806cd0:	8c400044 	addi	r17,r17,1
  806cd4:	10c7883a 	add	r3,r2,r3
  806cd8:	40800115 	stw	r2,4(r8)
  806cdc:	41000015 	stw	r4,0(r8)
  806ce0:	d8c02015 	stw	r3,128(sp)
  806ce4:	dc401f15 	stw	r17,124(sp)
  806ce8:	008001c4 	movi	r2,7
  806cec:	14416916 	blt	r2,r17,807294 <___vfprintf_internal_r+0x160c>
  806cf0:	45800204 	addi	r22,r8,8
  806cf4:	d9003617 	ldw	r4,216(sp)
  806cf8:	d9403817 	ldw	r5,224(sp)
  806cfc:	000d883a 	mov	r6,zero
  806d00:	000f883a 	mov	r7,zero
  806d04:	d8c03c15 	stw	r3,240(sp)
  806d08:	08044c00 	call	8044c0 <__eqdf2>
  806d0c:	d8c03c17 	ldw	r3,240(sp)
  806d10:	1000bc26 	beq	r2,zero,807004 <___vfprintf_internal_r+0x137c>
  806d14:	d9403317 	ldw	r5,204(sp)
  806d18:	84000044 	addi	r16,r16,1
  806d1c:	8c400044 	addi	r17,r17,1
  806d20:	28bfffc4 	addi	r2,r5,-1
  806d24:	1887883a 	add	r3,r3,r2
  806d28:	b0800115 	stw	r2,4(r22)
  806d2c:	b4000015 	stw	r16,0(r22)
  806d30:	d8c02015 	stw	r3,128(sp)
  806d34:	dc401f15 	stw	r17,124(sp)
  806d38:	008001c4 	movi	r2,7
  806d3c:	14414316 	blt	r2,r17,80724c <___vfprintf_internal_r+0x15c4>
  806d40:	b5800204 	addi	r22,r22,8
  806d44:	d9003a17 	ldw	r4,232(sp)
  806d48:	df0022c4 	addi	fp,sp,139
  806d4c:	8c400044 	addi	r17,r17,1
  806d50:	20c7883a 	add	r3,r4,r3
  806d54:	b7000015 	stw	fp,0(r22)
  806d58:	b1000115 	stw	r4,4(r22)
  806d5c:	d8c02015 	stw	r3,128(sp)
  806d60:	dc401f15 	stw	r17,124(sp)
  806d64:	008001c4 	movi	r2,7
  806d68:	14400e16 	blt	r2,r17,806da4 <___vfprintf_internal_r+0x111c>
  806d6c:	b2000204 	addi	r8,r22,8
  806d70:	003e3a06 	br	80665c <__alt_data_end+0xff80665c>
  806d74:	01002074 	movhi	r4,129
  806d78:	210a4084 	addi	r4,r4,10498
  806d7c:	d9002b15 	stw	r4,172(sp)
  806d80:	d9002b17 	ldw	r4,172(sp)
  806d84:	1c07883a 	add	r3,r3,r16
  806d88:	44000115 	stw	r16,4(r8)
  806d8c:	41000015 	stw	r4,0(r8)
  806d90:	10800044 	addi	r2,r2,1
  806d94:	d8c02015 	stw	r3,128(sp)
  806d98:	d8801f15 	stw	r2,124(sp)
  806d9c:	010001c4 	movi	r4,7
  806da0:	20be2d0e 	bge	r4,r2,806658 <__alt_data_end+0xff806658>
  806da4:	d9002c17 	ldw	r4,176(sp)
  806da8:	d9801e04 	addi	r6,sp,120
  806dac:	b80b883a 	mov	r5,r23
  806db0:	080d2840 	call	80d284 <__sprint_r>
  806db4:	103cb61e 	bne	r2,zero,806090 <__alt_data_end+0xff806090>
  806db8:	d8c02017 	ldw	r3,128(sp)
  806dbc:	da000404 	addi	r8,sp,16
  806dc0:	003e2606 	br	80665c <__alt_data_end+0xff80665c>
  806dc4:	d9002c17 	ldw	r4,176(sp)
  806dc8:	d9801e04 	addi	r6,sp,120
  806dcc:	b80b883a 	mov	r5,r23
  806dd0:	080d2840 	call	80d284 <__sprint_r>
  806dd4:	103e5d26 	beq	r2,zero,80674c <__alt_data_end+0xff80674c>
  806dd8:	003cad06 	br	806090 <__alt_data_end+0xff806090>
  806ddc:	d9002c17 	ldw	r4,176(sp)
  806de0:	d9801e04 	addi	r6,sp,120
  806de4:	b80b883a 	mov	r5,r23
  806de8:	080d2840 	call	80d284 <__sprint_r>
  806dec:	103ca81e 	bne	r2,zero,806090 <__alt_data_end+0xff806090>
  806df0:	d8c02017 	ldw	r3,128(sp)
  806df4:	da000404 	addi	r8,sp,16
  806df8:	003e0b06 	br	806628 <__alt_data_end+0xff806628>
  806dfc:	d9002c17 	ldw	r4,176(sp)
  806e00:	d9801e04 	addi	r6,sp,120
  806e04:	b80b883a 	mov	r5,r23
  806e08:	080d2840 	call	80d284 <__sprint_r>
  806e0c:	103ca01e 	bne	r2,zero,806090 <__alt_data_end+0xff806090>
  806e10:	d8c02017 	ldw	r3,128(sp)
  806e14:	da000404 	addi	r8,sp,16
  806e18:	003dbd06 	br	806510 <__alt_data_end+0xff806510>
  806e1c:	d9002c17 	ldw	r4,176(sp)
  806e20:	d9801e04 	addi	r6,sp,120
  806e24:	b80b883a 	mov	r5,r23
  806e28:	080d2840 	call	80d284 <__sprint_r>
  806e2c:	103c981e 	bne	r2,zero,806090 <__alt_data_end+0xff806090>
  806e30:	d8c02017 	ldw	r3,128(sp)
  806e34:	da000404 	addi	r8,sp,16
  806e38:	003dc306 	br	806548 <__alt_data_end+0xff806548>
  806e3c:	d8802917 	ldw	r2,164(sp)
  806e40:	d8002785 	stb	zero,158(sp)
  806e44:	103f0616 	blt	r2,zero,806a60 <__alt_data_end+0xff806a60>
  806e48:	00ffdfc4 	movi	r3,-129
  806e4c:	9d84b03a 	or	r2,r19,r22
  806e50:	90e4703a 	and	r18,r18,r3
  806e54:	103c6b26 	beq	r2,zero,806004 <__alt_data_end+0xff806004>
  806e58:	0039883a 	mov	fp,zero
  806e5c:	003e7406 	br	806830 <__alt_data_end+0xff806830>
  806e60:	9080040c 	andi	r2,r18,16
  806e64:	1001b326 	beq	r2,zero,807534 <___vfprintf_internal_r+0x18ac>
  806e68:	d9002d17 	ldw	r4,180(sp)
  806e6c:	d9402917 	ldw	r5,164(sp)
  806e70:	d8002785 	stb	zero,158(sp)
  806e74:	20800104 	addi	r2,r4,4
  806e78:	24c00017 	ldw	r19,0(r4)
  806e7c:	002d883a 	mov	r22,zero
  806e80:	2801b516 	blt	r5,zero,807558 <___vfprintf_internal_r+0x18d0>
  806e84:	00ffdfc4 	movi	r3,-129
  806e88:	d8802d15 	stw	r2,180(sp)
  806e8c:	90e4703a 	and	r18,r18,r3
  806e90:	983d2726 	beq	r19,zero,806330 <__alt_data_end+0xff806330>
  806e94:	0039883a 	mov	fp,zero
  806e98:	003d2a06 	br	806344 <__alt_data_end+0xff806344>
  806e9c:	dc402617 	ldw	r17,152(sp)
  806ea0:	0441d30e 	bge	zero,r17,8075f0 <___vfprintf_internal_r+0x1968>
  806ea4:	dc403217 	ldw	r17,200(sp)
  806ea8:	d8803317 	ldw	r2,204(sp)
  806eac:	1440010e 	bge	r2,r17,806eb4 <___vfprintf_internal_r+0x122c>
  806eb0:	1023883a 	mov	r17,r2
  806eb4:	04400a0e 	bge	zero,r17,806ee0 <___vfprintf_internal_r+0x1258>
  806eb8:	d8801f17 	ldw	r2,124(sp)
  806ebc:	1c47883a 	add	r3,r3,r17
  806ec0:	44000015 	stw	r16,0(r8)
  806ec4:	10800044 	addi	r2,r2,1
  806ec8:	44400115 	stw	r17,4(r8)
  806ecc:	d8c02015 	stw	r3,128(sp)
  806ed0:	d8801f15 	stw	r2,124(sp)
  806ed4:	010001c4 	movi	r4,7
  806ed8:	20826516 	blt	r4,r2,807870 <___vfprintf_internal_r+0x1be8>
  806edc:	42000204 	addi	r8,r8,8
  806ee0:	88026116 	blt	r17,zero,807868 <___vfprintf_internal_r+0x1be0>
  806ee4:	d9003217 	ldw	r4,200(sp)
  806ee8:	2463c83a 	sub	r17,r4,r17
  806eec:	04407b0e 	bge	zero,r17,8070dc <___vfprintf_internal_r+0x1454>
  806ef0:	05800404 	movi	r22,16
  806ef4:	d8801f17 	ldw	r2,124(sp)
  806ef8:	b4419d0e 	bge	r22,r17,807570 <___vfprintf_internal_r+0x18e8>
  806efc:	01002074 	movhi	r4,129
  806f00:	210a4084 	addi	r4,r4,10498
  806f04:	d9002b15 	stw	r4,172(sp)
  806f08:	070001c4 	movi	fp,7
  806f0c:	dcc02c17 	ldw	r19,176(sp)
  806f10:	00000306 	br	806f20 <___vfprintf_internal_r+0x1298>
  806f14:	42000204 	addi	r8,r8,8
  806f18:	8c7ffc04 	addi	r17,r17,-16
  806f1c:	b441970e 	bge	r22,r17,80757c <___vfprintf_internal_r+0x18f4>
  806f20:	18c00404 	addi	r3,r3,16
  806f24:	10800044 	addi	r2,r2,1
  806f28:	45000015 	stw	r20,0(r8)
  806f2c:	45800115 	stw	r22,4(r8)
  806f30:	d8c02015 	stw	r3,128(sp)
  806f34:	d8801f15 	stw	r2,124(sp)
  806f38:	e0bff60e 	bge	fp,r2,806f14 <__alt_data_end+0xff806f14>
  806f3c:	d9801e04 	addi	r6,sp,120
  806f40:	b80b883a 	mov	r5,r23
  806f44:	9809883a 	mov	r4,r19
  806f48:	080d2840 	call	80d284 <__sprint_r>
  806f4c:	103c501e 	bne	r2,zero,806090 <__alt_data_end+0xff806090>
  806f50:	d8c02017 	ldw	r3,128(sp)
  806f54:	d8801f17 	ldw	r2,124(sp)
  806f58:	da000404 	addi	r8,sp,16
  806f5c:	003fee06 	br	806f18 <__alt_data_end+0xff806f18>
  806f60:	d9002c17 	ldw	r4,176(sp)
  806f64:	d9801e04 	addi	r6,sp,120
  806f68:	b80b883a 	mov	r5,r23
  806f6c:	080d2840 	call	80d284 <__sprint_r>
  806f70:	103c471e 	bne	r2,zero,806090 <__alt_data_end+0xff806090>
  806f74:	d8c02017 	ldw	r3,128(sp)
  806f78:	df002787 	ldb	fp,158(sp)
  806f7c:	da000404 	addi	r8,sp,16
  806f80:	003d5606 	br	8064dc <__alt_data_end+0xff8064dc>
  806f84:	9080040c 	andi	r2,r18,16
  806f88:	10016126 	beq	r2,zero,807510 <___vfprintf_internal_r+0x1888>
  806f8c:	d8802d17 	ldw	r2,180(sp)
  806f90:	14c00017 	ldw	r19,0(r2)
  806f94:	10800104 	addi	r2,r2,4
  806f98:	d8802d15 	stw	r2,180(sp)
  806f9c:	982dd7fa 	srai	r22,r19,31
  806fa0:	b005883a 	mov	r2,r22
  806fa4:	003c8206 	br	8061b0 <__alt_data_end+0xff8061b0>
  806fa8:	9080040c 	andi	r2,r18,16
  806fac:	10003526 	beq	r2,zero,807084 <___vfprintf_internal_r+0x13fc>
  806fb0:	d9402d17 	ldw	r5,180(sp)
  806fb4:	d8c02917 	ldw	r3,164(sp)
  806fb8:	d8002785 	stb	zero,158(sp)
  806fbc:	28800104 	addi	r2,r5,4
  806fc0:	2cc00017 	ldw	r19,0(r5)
  806fc4:	002d883a 	mov	r22,zero
  806fc8:	18003716 	blt	r3,zero,8070a8 <___vfprintf_internal_r+0x1420>
  806fcc:	00ffdfc4 	movi	r3,-129
  806fd0:	d8802d15 	stw	r2,180(sp)
  806fd4:	90e4703a 	and	r18,r18,r3
  806fd8:	0039883a 	mov	fp,zero
  806fdc:	983df326 	beq	r19,zero,8067ac <__alt_data_end+0xff8067ac>
  806fe0:	00800244 	movi	r2,9
  806fe4:	14fc7b36 	bltu	r2,r19,8061d4 <__alt_data_end+0xff8061d4>
  806fe8:	d8c02817 	ldw	r3,160(sp)
  806fec:	dc001dc4 	addi	r16,sp,119
  806ff0:	9cc00c04 	addi	r19,r19,48
  806ff4:	1c07c83a 	sub	r3,r3,r16
  806ff8:	dcc01dc5 	stb	r19,119(sp)
  806ffc:	d8c02e15 	stw	r3,184(sp)
  807000:	003ce806 	br	8063a4 <__alt_data_end+0xff8063a4>
  807004:	d8803317 	ldw	r2,204(sp)
  807008:	143fffc4 	addi	r16,r2,-1
  80700c:	043f4d0e 	bge	zero,r16,806d44 <__alt_data_end+0xff806d44>
  807010:	07000404 	movi	fp,16
  807014:	e400810e 	bge	fp,r16,80721c <___vfprintf_internal_r+0x1594>
  807018:	01402074 	movhi	r5,129
  80701c:	294a4084 	addi	r5,r5,10498
  807020:	d9402b15 	stw	r5,172(sp)
  807024:	01c001c4 	movi	r7,7
  807028:	dcc02c17 	ldw	r19,176(sp)
  80702c:	00000306 	br	80703c <___vfprintf_internal_r+0x13b4>
  807030:	b5800204 	addi	r22,r22,8
  807034:	843ffc04 	addi	r16,r16,-16
  807038:	e4007b0e 	bge	fp,r16,807228 <___vfprintf_internal_r+0x15a0>
  80703c:	18c00404 	addi	r3,r3,16
  807040:	8c400044 	addi	r17,r17,1
  807044:	b5000015 	stw	r20,0(r22)
  807048:	b7000115 	stw	fp,4(r22)
  80704c:	d8c02015 	stw	r3,128(sp)
  807050:	dc401f15 	stw	r17,124(sp)
  807054:	3c7ff60e 	bge	r7,r17,807030 <__alt_data_end+0xff807030>
  807058:	d9801e04 	addi	r6,sp,120
  80705c:	b80b883a 	mov	r5,r23
  807060:	9809883a 	mov	r4,r19
  807064:	d9c03c15 	stw	r7,240(sp)
  807068:	080d2840 	call	80d284 <__sprint_r>
  80706c:	d9c03c17 	ldw	r7,240(sp)
  807070:	103c071e 	bne	r2,zero,806090 <__alt_data_end+0xff806090>
  807074:	d8c02017 	ldw	r3,128(sp)
  807078:	dc401f17 	ldw	r17,124(sp)
  80707c:	dd800404 	addi	r22,sp,16
  807080:	003fec06 	br	807034 <__alt_data_end+0xff807034>
  807084:	9080100c 	andi	r2,r18,64
  807088:	d8002785 	stb	zero,158(sp)
  80708c:	10010e26 	beq	r2,zero,8074c8 <___vfprintf_internal_r+0x1840>
  807090:	d9002d17 	ldw	r4,180(sp)
  807094:	d9402917 	ldw	r5,164(sp)
  807098:	002d883a 	mov	r22,zero
  80709c:	20800104 	addi	r2,r4,4
  8070a0:	24c0000b 	ldhu	r19,0(r4)
  8070a4:	283fc90e 	bge	r5,zero,806fcc <__alt_data_end+0xff806fcc>
  8070a8:	d8802d15 	stw	r2,180(sp)
  8070ac:	0039883a 	mov	fp,zero
  8070b0:	9d84b03a 	or	r2,r19,r22
  8070b4:	103c461e 	bne	r2,zero,8061d0 <__alt_data_end+0xff8061d0>
  8070b8:	00800044 	movi	r2,1
  8070bc:	003e6c06 	br	806a70 <__alt_data_end+0xff806a70>
  8070c0:	d9002c17 	ldw	r4,176(sp)
  8070c4:	d9801e04 	addi	r6,sp,120
  8070c8:	b80b883a 	mov	r5,r23
  8070cc:	080d2840 	call	80d284 <__sprint_r>
  8070d0:	103bef1e 	bne	r2,zero,806090 <__alt_data_end+0xff806090>
  8070d4:	d8c02017 	ldw	r3,128(sp)
  8070d8:	da000404 	addi	r8,sp,16
  8070dc:	d9003217 	ldw	r4,200(sp)
  8070e0:	d8802617 	ldw	r2,152(sp)
  8070e4:	d9403317 	ldw	r5,204(sp)
  8070e8:	8123883a 	add	r17,r16,r4
  8070ec:	11400216 	blt	r2,r5,8070f8 <___vfprintf_internal_r+0x1470>
  8070f0:	9100004c 	andi	r4,r18,1
  8070f4:	20000d26 	beq	r4,zero,80712c <___vfprintf_internal_r+0x14a4>
  8070f8:	d9003717 	ldw	r4,220(sp)
  8070fc:	d9403417 	ldw	r5,208(sp)
  807100:	1907883a 	add	r3,r3,r4
  807104:	d9001f17 	ldw	r4,124(sp)
  807108:	41400015 	stw	r5,0(r8)
  80710c:	d9403717 	ldw	r5,220(sp)
  807110:	21000044 	addi	r4,r4,1
  807114:	d8c02015 	stw	r3,128(sp)
  807118:	41400115 	stw	r5,4(r8)
  80711c:	d9001f15 	stw	r4,124(sp)
  807120:	014001c4 	movi	r5,7
  807124:	2901e816 	blt	r5,r4,8078c8 <___vfprintf_internal_r+0x1c40>
  807128:	42000204 	addi	r8,r8,8
  80712c:	d9003317 	ldw	r4,204(sp)
  807130:	8121883a 	add	r16,r16,r4
  807134:	2085c83a 	sub	r2,r4,r2
  807138:	8461c83a 	sub	r16,r16,r17
  80713c:	1400010e 	bge	r2,r16,807144 <___vfprintf_internal_r+0x14bc>
  807140:	1021883a 	mov	r16,r2
  807144:	04000a0e 	bge	zero,r16,807170 <___vfprintf_internal_r+0x14e8>
  807148:	d9001f17 	ldw	r4,124(sp)
  80714c:	1c07883a 	add	r3,r3,r16
  807150:	44400015 	stw	r17,0(r8)
  807154:	21000044 	addi	r4,r4,1
  807158:	44000115 	stw	r16,4(r8)
  80715c:	d8c02015 	stw	r3,128(sp)
  807160:	d9001f15 	stw	r4,124(sp)
  807164:	014001c4 	movi	r5,7
  807168:	2901fb16 	blt	r5,r4,807958 <___vfprintf_internal_r+0x1cd0>
  80716c:	42000204 	addi	r8,r8,8
  807170:	8001f716 	blt	r16,zero,807950 <___vfprintf_internal_r+0x1cc8>
  807174:	1421c83a 	sub	r16,r2,r16
  807178:	043d380e 	bge	zero,r16,80665c <__alt_data_end+0xff80665c>
  80717c:	04400404 	movi	r17,16
  807180:	d8801f17 	ldw	r2,124(sp)
  807184:	8c3efb0e 	bge	r17,r16,806d74 <__alt_data_end+0xff806d74>
  807188:	01402074 	movhi	r5,129
  80718c:	294a4084 	addi	r5,r5,10498
  807190:	d9402b15 	stw	r5,172(sp)
  807194:	058001c4 	movi	r22,7
  807198:	dcc02c17 	ldw	r19,176(sp)
  80719c:	00000306 	br	8071ac <___vfprintf_internal_r+0x1524>
  8071a0:	42000204 	addi	r8,r8,8
  8071a4:	843ffc04 	addi	r16,r16,-16
  8071a8:	8c3ef50e 	bge	r17,r16,806d80 <__alt_data_end+0xff806d80>
  8071ac:	18c00404 	addi	r3,r3,16
  8071b0:	10800044 	addi	r2,r2,1
  8071b4:	45000015 	stw	r20,0(r8)
  8071b8:	44400115 	stw	r17,4(r8)
  8071bc:	d8c02015 	stw	r3,128(sp)
  8071c0:	d8801f15 	stw	r2,124(sp)
  8071c4:	b0bff60e 	bge	r22,r2,8071a0 <__alt_data_end+0xff8071a0>
  8071c8:	d9801e04 	addi	r6,sp,120
  8071cc:	b80b883a 	mov	r5,r23
  8071d0:	9809883a 	mov	r4,r19
  8071d4:	080d2840 	call	80d284 <__sprint_r>
  8071d8:	103bad1e 	bne	r2,zero,806090 <__alt_data_end+0xff806090>
  8071dc:	d8c02017 	ldw	r3,128(sp)
  8071e0:	d8801f17 	ldw	r2,124(sp)
  8071e4:	da000404 	addi	r8,sp,16
  8071e8:	003fee06 	br	8071a4 <__alt_data_end+0xff8071a4>
  8071ec:	9088703a 	and	r4,r18,r2
  8071f0:	203eab1e 	bne	r4,zero,806ca0 <__alt_data_end+0xff806ca0>
  8071f4:	dc401f17 	ldw	r17,124(sp)
  8071f8:	40800115 	stw	r2,4(r8)
  8071fc:	44000015 	stw	r16,0(r8)
  807200:	8c400044 	addi	r17,r17,1
  807204:	d8c02015 	stw	r3,128(sp)
  807208:	dc401f15 	stw	r17,124(sp)
  80720c:	008001c4 	movi	r2,7
  807210:	14400e16 	blt	r2,r17,80724c <___vfprintf_internal_r+0x15c4>
  807214:	45800204 	addi	r22,r8,8
  807218:	003eca06 	br	806d44 <__alt_data_end+0xff806d44>
  80721c:	01002074 	movhi	r4,129
  807220:	210a4084 	addi	r4,r4,10498
  807224:	d9002b15 	stw	r4,172(sp)
  807228:	d8802b17 	ldw	r2,172(sp)
  80722c:	1c07883a 	add	r3,r3,r16
  807230:	8c400044 	addi	r17,r17,1
  807234:	b0800015 	stw	r2,0(r22)
  807238:	b4000115 	stw	r16,4(r22)
  80723c:	d8c02015 	stw	r3,128(sp)
  807240:	dc401f15 	stw	r17,124(sp)
  807244:	008001c4 	movi	r2,7
  807248:	147ebd0e 	bge	r2,r17,806d40 <__alt_data_end+0xff806d40>
  80724c:	d9002c17 	ldw	r4,176(sp)
  807250:	d9801e04 	addi	r6,sp,120
  807254:	b80b883a 	mov	r5,r23
  807258:	080d2840 	call	80d284 <__sprint_r>
  80725c:	103b8c1e 	bne	r2,zero,806090 <__alt_data_end+0xff806090>
  807260:	d8c02017 	ldw	r3,128(sp)
  807264:	dc401f17 	ldw	r17,124(sp)
  807268:	dd800404 	addi	r22,sp,16
  80726c:	003eb506 	br	806d44 <__alt_data_end+0xff806d44>
  807270:	d9002c17 	ldw	r4,176(sp)
  807274:	d9801e04 	addi	r6,sp,120
  807278:	b80b883a 	mov	r5,r23
  80727c:	080d2840 	call	80d284 <__sprint_r>
  807280:	103b831e 	bne	r2,zero,806090 <__alt_data_end+0xff806090>
  807284:	d8c02017 	ldw	r3,128(sp)
  807288:	dc401f17 	ldw	r17,124(sp)
  80728c:	da000404 	addi	r8,sp,16
  807290:	003e8d06 	br	806cc8 <__alt_data_end+0xff806cc8>
  807294:	d9002c17 	ldw	r4,176(sp)
  807298:	d9801e04 	addi	r6,sp,120
  80729c:	b80b883a 	mov	r5,r23
  8072a0:	080d2840 	call	80d284 <__sprint_r>
  8072a4:	103b7a1e 	bne	r2,zero,806090 <__alt_data_end+0xff806090>
  8072a8:	d8c02017 	ldw	r3,128(sp)
  8072ac:	dc401f17 	ldw	r17,124(sp)
  8072b0:	dd800404 	addi	r22,sp,16
  8072b4:	003e8f06 	br	806cf4 <__alt_data_end+0xff806cf4>
  8072b8:	0027883a 	mov	r19,zero
  8072bc:	003f4a06 	br	806fe8 <__alt_data_end+0xff806fe8>
  8072c0:	d9002c17 	ldw	r4,176(sp)
  8072c4:	d9801e04 	addi	r6,sp,120
  8072c8:	b80b883a 	mov	r5,r23
  8072cc:	080d2840 	call	80d284 <__sprint_r>
  8072d0:	103b6f1e 	bne	r2,zero,806090 <__alt_data_end+0xff806090>
  8072d4:	d8c02017 	ldw	r3,128(sp)
  8072d8:	da000404 	addi	r8,sp,16
  8072dc:	003c9d06 	br	806554 <__alt_data_end+0xff806554>
  8072e0:	04e7c83a 	sub	r19,zero,r19
  8072e4:	9804c03a 	cmpne	r2,r19,zero
  8072e8:	05adc83a 	sub	r22,zero,r22
  8072ec:	b0adc83a 	sub	r22,r22,r2
  8072f0:	d8802917 	ldw	r2,164(sp)
  8072f4:	07000b44 	movi	fp,45
  8072f8:	df002785 	stb	fp,158(sp)
  8072fc:	10017b16 	blt	r2,zero,8078ec <___vfprintf_internal_r+0x1c64>
  807300:	00bfdfc4 	movi	r2,-129
  807304:	90a4703a 	and	r18,r18,r2
  807308:	003bb106 	br	8061d0 <__alt_data_end+0xff8061d0>
  80730c:	d9003617 	ldw	r4,216(sp)
  807310:	d9403817 	ldw	r5,224(sp)
  807314:	da003d15 	stw	r8,244(sp)
  807318:	080cea80 	call	80cea8 <__fpclassifyd>
  80731c:	da003d17 	ldw	r8,244(sp)
  807320:	1000f026 	beq	r2,zero,8076e4 <___vfprintf_internal_r+0x1a5c>
  807324:	d9002917 	ldw	r4,164(sp)
  807328:	05bff7c4 	movi	r22,-33
  80732c:	00bfffc4 	movi	r2,-1
  807330:	8dac703a 	and	r22,r17,r22
  807334:	20820026 	beq	r4,r2,807b38 <___vfprintf_internal_r+0x1eb0>
  807338:	008011c4 	movi	r2,71
  80733c:	b081f726 	beq	r22,r2,807b1c <___vfprintf_internal_r+0x1e94>
  807340:	d9003817 	ldw	r4,224(sp)
  807344:	90c04014 	ori	r3,r18,256
  807348:	d8c02b15 	stw	r3,172(sp)
  80734c:	20021516 	blt	r4,zero,807ba4 <___vfprintf_internal_r+0x1f1c>
  807350:	dcc03817 	ldw	r19,224(sp)
  807354:	d8002a05 	stb	zero,168(sp)
  807358:	00801984 	movi	r2,102
  80735c:	8881f926 	beq	r17,r2,807b44 <___vfprintf_internal_r+0x1ebc>
  807360:	00801184 	movi	r2,70
  807364:	88821c26 	beq	r17,r2,807bd8 <___vfprintf_internal_r+0x1f50>
  807368:	00801144 	movi	r2,69
  80736c:	b081ef26 	beq	r22,r2,807b2c <___vfprintf_internal_r+0x1ea4>
  807370:	d8c02917 	ldw	r3,164(sp)
  807374:	d8802104 	addi	r2,sp,132
  807378:	d8800315 	stw	r2,12(sp)
  80737c:	d9403617 	ldw	r5,216(sp)
  807380:	d8802504 	addi	r2,sp,148
  807384:	d9002c17 	ldw	r4,176(sp)
  807388:	d8800215 	stw	r2,8(sp)
  80738c:	d8802604 	addi	r2,sp,152
  807390:	d8c00015 	stw	r3,0(sp)
  807394:	d8800115 	stw	r2,4(sp)
  807398:	01c00084 	movi	r7,2
  80739c:	980d883a 	mov	r6,r19
  8073a0:	d8c03c15 	stw	r3,240(sp)
  8073a4:	da003d15 	stw	r8,244(sp)
  8073a8:	08082ac0 	call	8082ac <_dtoa_r>
  8073ac:	1021883a 	mov	r16,r2
  8073b0:	008019c4 	movi	r2,103
  8073b4:	d8c03c17 	ldw	r3,240(sp)
  8073b8:	da003d17 	ldw	r8,244(sp)
  8073bc:	88817126 	beq	r17,r2,807984 <___vfprintf_internal_r+0x1cfc>
  8073c0:	008011c4 	movi	r2,71
  8073c4:	88829226 	beq	r17,r2,807e10 <___vfprintf_internal_r+0x2188>
  8073c8:	80f9883a 	add	fp,r16,r3
  8073cc:	d9003617 	ldw	r4,216(sp)
  8073d0:	000d883a 	mov	r6,zero
  8073d4:	000f883a 	mov	r7,zero
  8073d8:	980b883a 	mov	r5,r19
  8073dc:	da003d15 	stw	r8,244(sp)
  8073e0:	08044c00 	call	8044c0 <__eqdf2>
  8073e4:	da003d17 	ldw	r8,244(sp)
  8073e8:	10018d26 	beq	r2,zero,807a20 <___vfprintf_internal_r+0x1d98>
  8073ec:	d8802117 	ldw	r2,132(sp)
  8073f0:	1700062e 	bgeu	r2,fp,80740c <___vfprintf_internal_r+0x1784>
  8073f4:	01000c04 	movi	r4,48
  8073f8:	10c00044 	addi	r3,r2,1
  8073fc:	d8c02115 	stw	r3,132(sp)
  807400:	11000005 	stb	r4,0(r2)
  807404:	d8802117 	ldw	r2,132(sp)
  807408:	173ffb36 	bltu	r2,fp,8073f8 <__alt_data_end+0xff8073f8>
  80740c:	1405c83a 	sub	r2,r2,r16
  807410:	d8803315 	stw	r2,204(sp)
  807414:	008011c4 	movi	r2,71
  807418:	b0817626 	beq	r22,r2,8079f4 <___vfprintf_internal_r+0x1d6c>
  80741c:	00801944 	movi	r2,101
  807420:	1442810e 	bge	r2,r17,807e28 <___vfprintf_internal_r+0x21a0>
  807424:	d8c02617 	ldw	r3,152(sp)
  807428:	00801984 	movi	r2,102
  80742c:	d8c03215 	stw	r3,200(sp)
  807430:	8881fe26 	beq	r17,r2,807c2c <___vfprintf_internal_r+0x1fa4>
  807434:	d8c03217 	ldw	r3,200(sp)
  807438:	d9003317 	ldw	r4,204(sp)
  80743c:	1901dd16 	blt	r3,r4,807bb4 <___vfprintf_internal_r+0x1f2c>
  807440:	9480004c 	andi	r18,r18,1
  807444:	90022b1e 	bne	r18,zero,807cf4 <___vfprintf_internal_r+0x206c>
  807448:	1805883a 	mov	r2,r3
  80744c:	18028016 	blt	r3,zero,807e50 <___vfprintf_internal_r+0x21c8>
  807450:	d8c03217 	ldw	r3,200(sp)
  807454:	044019c4 	movi	r17,103
  807458:	d8c02e15 	stw	r3,184(sp)
  80745c:	df002a07 	ldb	fp,168(sp)
  807460:	e001531e 	bne	fp,zero,8079b0 <___vfprintf_internal_r+0x1d28>
  807464:	df002783 	ldbu	fp,158(sp)
  807468:	d8802a15 	stw	r2,168(sp)
  80746c:	dc802b17 	ldw	r18,172(sp)
  807470:	d8002915 	stw	zero,164(sp)
  807474:	003bd106 	br	8063bc <__alt_data_end+0xff8063bc>
  807478:	d8802d17 	ldw	r2,180(sp)
  80747c:	d8c02d17 	ldw	r3,180(sp)
  807480:	d9002d17 	ldw	r4,180(sp)
  807484:	10800017 	ldw	r2,0(r2)
  807488:	18c00117 	ldw	r3,4(r3)
  80748c:	21000204 	addi	r4,r4,8
  807490:	d8803615 	stw	r2,216(sp)
  807494:	d8c03815 	stw	r3,224(sp)
  807498:	d9002d15 	stw	r4,180(sp)
  80749c:	003b7506 	br	806274 <__alt_data_end+0xff806274>
  8074a0:	ac400007 	ldb	r17,0(r21)
  8074a4:	003a5906 	br	805e0c <__alt_data_end+0xff805e0c>
  8074a8:	9080100c 	andi	r2,r18,64
  8074ac:	1000a826 	beq	r2,zero,807750 <___vfprintf_internal_r+0x1ac8>
  8074b0:	d9002d17 	ldw	r4,180(sp)
  8074b4:	002d883a 	mov	r22,zero
  8074b8:	24c0000b 	ldhu	r19,0(r4)
  8074bc:	21000104 	addi	r4,r4,4
  8074c0:	d9002d15 	stw	r4,180(sp)
  8074c4:	003ccb06 	br	8067f4 <__alt_data_end+0xff8067f4>
  8074c8:	d8c02d17 	ldw	r3,180(sp)
  8074cc:	d9002917 	ldw	r4,164(sp)
  8074d0:	002d883a 	mov	r22,zero
  8074d4:	18800104 	addi	r2,r3,4
  8074d8:	1cc00017 	ldw	r19,0(r3)
  8074dc:	203ebb0e 	bge	r4,zero,806fcc <__alt_data_end+0xff806fcc>
  8074e0:	003ef106 	br	8070a8 <__alt_data_end+0xff8070a8>
  8074e4:	9080040c 	andi	r2,r18,16
  8074e8:	1000921e 	bne	r2,zero,807734 <___vfprintf_internal_r+0x1aac>
  8074ec:	9480100c 	andi	r18,r18,64
  8074f0:	90013926 	beq	r18,zero,8079d8 <___vfprintf_internal_r+0x1d50>
  8074f4:	d9002d17 	ldw	r4,180(sp)
  8074f8:	d9402f17 	ldw	r5,188(sp)
  8074fc:	20800017 	ldw	r2,0(r4)
  807500:	21000104 	addi	r4,r4,4
  807504:	d9002d15 	stw	r4,180(sp)
  807508:	1140000d 	sth	r5,0(r2)
  80750c:	003a1606 	br	805d68 <__alt_data_end+0xff805d68>
  807510:	9080100c 	andi	r2,r18,64
  807514:	10008026 	beq	r2,zero,807718 <___vfprintf_internal_r+0x1a90>
  807518:	d8c02d17 	ldw	r3,180(sp)
  80751c:	1cc0000f 	ldh	r19,0(r3)
  807520:	18c00104 	addi	r3,r3,4
  807524:	d8c02d15 	stw	r3,180(sp)
  807528:	982dd7fa 	srai	r22,r19,31
  80752c:	b005883a 	mov	r2,r22
  807530:	003b1f06 	br	8061b0 <__alt_data_end+0xff8061b0>
  807534:	9080100c 	andi	r2,r18,64
  807538:	d8002785 	stb	zero,158(sp)
  80753c:	10008a1e 	bne	r2,zero,807768 <___vfprintf_internal_r+0x1ae0>
  807540:	d9402d17 	ldw	r5,180(sp)
  807544:	d8c02917 	ldw	r3,164(sp)
  807548:	002d883a 	mov	r22,zero
  80754c:	28800104 	addi	r2,r5,4
  807550:	2cc00017 	ldw	r19,0(r5)
  807554:	183e4b0e 	bge	r3,zero,806e84 <__alt_data_end+0xff806e84>
  807558:	9d86b03a 	or	r3,r19,r22
  80755c:	d8802d15 	stw	r2,180(sp)
  807560:	183e4c1e 	bne	r3,zero,806e94 <__alt_data_end+0xff806e94>
  807564:	0039883a 	mov	fp,zero
  807568:	0005883a 	mov	r2,zero
  80756c:	003d4006 	br	806a70 <__alt_data_end+0xff806a70>
  807570:	01402074 	movhi	r5,129
  807574:	294a4084 	addi	r5,r5,10498
  807578:	d9402b15 	stw	r5,172(sp)
  80757c:	d9402b17 	ldw	r5,172(sp)
  807580:	1c47883a 	add	r3,r3,r17
  807584:	10800044 	addi	r2,r2,1
  807588:	41400015 	stw	r5,0(r8)
  80758c:	44400115 	stw	r17,4(r8)
  807590:	d8c02015 	stw	r3,128(sp)
  807594:	d8801f15 	stw	r2,124(sp)
  807598:	010001c4 	movi	r4,7
  80759c:	20bec816 	blt	r4,r2,8070c0 <__alt_data_end+0xff8070c0>
  8075a0:	42000204 	addi	r8,r8,8
  8075a4:	003ecd06 	br	8070dc <__alt_data_end+0xff8070dc>
  8075a8:	d9002917 	ldw	r4,164(sp)
  8075ac:	d8002785 	stb	zero,158(sp)
  8075b0:	203d2d16 	blt	r4,zero,806a68 <__alt_data_end+0xff806a68>
  8075b4:	00bfdfc4 	movi	r2,-129
  8075b8:	90a4703a 	and	r18,r18,r2
  8075bc:	003a9106 	br	806004 <__alt_data_end+0xff806004>
  8075c0:	01002074 	movhi	r4,129
  8075c4:	210a4084 	addi	r4,r4,10498
  8075c8:	d9002b15 	stw	r4,172(sp)
  8075cc:	003c0c06 	br	806600 <__alt_data_end+0xff806600>
  8075d0:	d9002c17 	ldw	r4,176(sp)
  8075d4:	d9801e04 	addi	r6,sp,120
  8075d8:	b80b883a 	mov	r5,r23
  8075dc:	080d2840 	call	80d284 <__sprint_r>
  8075e0:	103aab1e 	bne	r2,zero,806090 <__alt_data_end+0xff806090>
  8075e4:	d8c02017 	ldw	r3,128(sp)
  8075e8:	da000404 	addi	r8,sp,16
  8075ec:	003d4106 	br	806af4 <__alt_data_end+0xff806af4>
  8075f0:	d8801f17 	ldw	r2,124(sp)
  8075f4:	01402074 	movhi	r5,129
  8075f8:	01000044 	movi	r4,1
  8075fc:	18c00044 	addi	r3,r3,1
  807600:	10800044 	addi	r2,r2,1
  807604:	294a4004 	addi	r5,r5,10496
  807608:	41000115 	stw	r4,4(r8)
  80760c:	41400015 	stw	r5,0(r8)
  807610:	d8c02015 	stw	r3,128(sp)
  807614:	d8801f15 	stw	r2,124(sp)
  807618:	010001c4 	movi	r4,7
  80761c:	20805c16 	blt	r4,r2,807790 <___vfprintf_internal_r+0x1b08>
  807620:	42000204 	addi	r8,r8,8
  807624:	8800041e 	bne	r17,zero,807638 <___vfprintf_internal_r+0x19b0>
  807628:	d8803317 	ldw	r2,204(sp)
  80762c:	1000021e 	bne	r2,zero,807638 <___vfprintf_internal_r+0x19b0>
  807630:	9080004c 	andi	r2,r18,1
  807634:	103c0926 	beq	r2,zero,80665c <__alt_data_end+0xff80665c>
  807638:	d9003717 	ldw	r4,220(sp)
  80763c:	d8801f17 	ldw	r2,124(sp)
  807640:	d9403417 	ldw	r5,208(sp)
  807644:	20c7883a 	add	r3,r4,r3
  807648:	10800044 	addi	r2,r2,1
  80764c:	41000115 	stw	r4,4(r8)
  807650:	41400015 	stw	r5,0(r8)
  807654:	d8c02015 	stw	r3,128(sp)
  807658:	d8801f15 	stw	r2,124(sp)
  80765c:	010001c4 	movi	r4,7
  807660:	20812116 	blt	r4,r2,807ae8 <___vfprintf_internal_r+0x1e60>
  807664:	42000204 	addi	r8,r8,8
  807668:	0463c83a 	sub	r17,zero,r17
  80766c:	0440730e 	bge	zero,r17,80783c <___vfprintf_internal_r+0x1bb4>
  807670:	05800404 	movi	r22,16
  807674:	b440860e 	bge	r22,r17,807890 <___vfprintf_internal_r+0x1c08>
  807678:	01402074 	movhi	r5,129
  80767c:	294a4084 	addi	r5,r5,10498
  807680:	d9402b15 	stw	r5,172(sp)
  807684:	070001c4 	movi	fp,7
  807688:	dcc02c17 	ldw	r19,176(sp)
  80768c:	00000306 	br	80769c <___vfprintf_internal_r+0x1a14>
  807690:	42000204 	addi	r8,r8,8
  807694:	8c7ffc04 	addi	r17,r17,-16
  807698:	b440800e 	bge	r22,r17,80789c <___vfprintf_internal_r+0x1c14>
  80769c:	18c00404 	addi	r3,r3,16
  8076a0:	10800044 	addi	r2,r2,1
  8076a4:	45000015 	stw	r20,0(r8)
  8076a8:	45800115 	stw	r22,4(r8)
  8076ac:	d8c02015 	stw	r3,128(sp)
  8076b0:	d8801f15 	stw	r2,124(sp)
  8076b4:	e0bff60e 	bge	fp,r2,807690 <__alt_data_end+0xff807690>
  8076b8:	d9801e04 	addi	r6,sp,120
  8076bc:	b80b883a 	mov	r5,r23
  8076c0:	9809883a 	mov	r4,r19
  8076c4:	080d2840 	call	80d284 <__sprint_r>
  8076c8:	103a711e 	bne	r2,zero,806090 <__alt_data_end+0xff806090>
  8076cc:	d8c02017 	ldw	r3,128(sp)
  8076d0:	d8801f17 	ldw	r2,124(sp)
  8076d4:	da000404 	addi	r8,sp,16
  8076d8:	003fee06 	br	807694 <__alt_data_end+0xff807694>
  8076dc:	00bfffc4 	movi	r2,-1
  8076e0:	003a6f06 	br	8060a0 <__alt_data_end+0xff8060a0>
  8076e4:	008011c4 	movi	r2,71
  8076e8:	1440b816 	blt	r2,r17,8079cc <___vfprintf_internal_r+0x1d44>
  8076ec:	04002074 	movhi	r16,129
  8076f0:	840a3204 	addi	r16,r16,10440
  8076f4:	00c000c4 	movi	r3,3
  8076f8:	00bfdfc4 	movi	r2,-129
  8076fc:	d8c02a15 	stw	r3,168(sp)
  807700:	90a4703a 	and	r18,r18,r2
  807704:	df002783 	ldbu	fp,158(sp)
  807708:	d8c02e15 	stw	r3,184(sp)
  80770c:	d8002915 	stw	zero,164(sp)
  807710:	d8003215 	stw	zero,200(sp)
  807714:	003b2906 	br	8063bc <__alt_data_end+0xff8063bc>
  807718:	d9002d17 	ldw	r4,180(sp)
  80771c:	24c00017 	ldw	r19,0(r4)
  807720:	21000104 	addi	r4,r4,4
  807724:	d9002d15 	stw	r4,180(sp)
  807728:	982dd7fa 	srai	r22,r19,31
  80772c:	b005883a 	mov	r2,r22
  807730:	003a9f06 	br	8061b0 <__alt_data_end+0xff8061b0>
  807734:	d9402d17 	ldw	r5,180(sp)
  807738:	d8c02f17 	ldw	r3,188(sp)
  80773c:	28800017 	ldw	r2,0(r5)
  807740:	29400104 	addi	r5,r5,4
  807744:	d9402d15 	stw	r5,180(sp)
  807748:	10c00015 	stw	r3,0(r2)
  80774c:	00398606 	br	805d68 <__alt_data_end+0xff805d68>
  807750:	d9402d17 	ldw	r5,180(sp)
  807754:	002d883a 	mov	r22,zero
  807758:	2cc00017 	ldw	r19,0(r5)
  80775c:	29400104 	addi	r5,r5,4
  807760:	d9402d15 	stw	r5,180(sp)
  807764:	003c2306 	br	8067f4 <__alt_data_end+0xff8067f4>
  807768:	d8c02d17 	ldw	r3,180(sp)
  80776c:	d9002917 	ldw	r4,164(sp)
  807770:	002d883a 	mov	r22,zero
  807774:	18800104 	addi	r2,r3,4
  807778:	1cc0000b 	ldhu	r19,0(r3)
  80777c:	203dc10e 	bge	r4,zero,806e84 <__alt_data_end+0xff806e84>
  807780:	003f7506 	br	807558 <__alt_data_end+0xff807558>
  807784:	04002074 	movhi	r16,129
  807788:	840a3004 	addi	r16,r16,10432
  80778c:	003acc06 	br	8062c0 <__alt_data_end+0xff8062c0>
  807790:	d9002c17 	ldw	r4,176(sp)
  807794:	d9801e04 	addi	r6,sp,120
  807798:	b80b883a 	mov	r5,r23
  80779c:	080d2840 	call	80d284 <__sprint_r>
  8077a0:	103a3b1e 	bne	r2,zero,806090 <__alt_data_end+0xff806090>
  8077a4:	dc402617 	ldw	r17,152(sp)
  8077a8:	d8c02017 	ldw	r3,128(sp)
  8077ac:	da000404 	addi	r8,sp,16
  8077b0:	003f9c06 	br	807624 <__alt_data_end+0xff807624>
  8077b4:	ac400043 	ldbu	r17,1(r21)
  8077b8:	94800814 	ori	r18,r18,32
  8077bc:	ad400044 	addi	r21,r21,1
  8077c0:	8c403fcc 	andi	r17,r17,255
  8077c4:	8c40201c 	xori	r17,r17,128
  8077c8:	8c7fe004 	addi	r17,r17,-128
  8077cc:	00398f06 	br	805e0c <__alt_data_end+0xff805e0c>
  8077d0:	d8c02d15 	stw	r3,180(sp)
  8077d4:	0039883a 	mov	fp,zero
  8077d8:	003e3506 	br	8070b0 <__alt_data_end+0xff8070b0>
  8077dc:	d9002c17 	ldw	r4,176(sp)
  8077e0:	d9801e04 	addi	r6,sp,120
  8077e4:	b80b883a 	mov	r5,r23
  8077e8:	080d2840 	call	80d284 <__sprint_r>
  8077ec:	103a281e 	bne	r2,zero,806090 <__alt_data_end+0xff806090>
  8077f0:	d8c02017 	ldw	r3,128(sp)
  8077f4:	da000404 	addi	r8,sp,16
  8077f8:	003cd006 	br	806b3c <__alt_data_end+0xff806b3c>
  8077fc:	8009883a 	mov	r4,r16
  807800:	da003d15 	stw	r8,244(sp)
  807804:	0805bf00 	call	805bf0 <strlen>
  807808:	d8802e15 	stw	r2,184(sp)
  80780c:	da003d17 	ldw	r8,244(sp)
  807810:	103c340e 	bge	r2,zero,8068e4 <__alt_data_end+0xff8068e4>
  807814:	0005883a 	mov	r2,zero
  807818:	003c3206 	br	8068e4 <__alt_data_end+0xff8068e4>
  80781c:	d9002c17 	ldw	r4,176(sp)
  807820:	d9801e04 	addi	r6,sp,120
  807824:	b80b883a 	mov	r5,r23
  807828:	080d2840 	call	80d284 <__sprint_r>
  80782c:	103a181e 	bne	r2,zero,806090 <__alt_data_end+0xff806090>
  807830:	d8c02017 	ldw	r3,128(sp)
  807834:	d8801f17 	ldw	r2,124(sp)
  807838:	da000404 	addi	r8,sp,16
  80783c:	d9403317 	ldw	r5,204(sp)
  807840:	10800044 	addi	r2,r2,1
  807844:	44000015 	stw	r16,0(r8)
  807848:	28c7883a 	add	r3,r5,r3
  80784c:	003b7d06 	br	806644 <__alt_data_end+0xff806644>
  807850:	01002074 	movhi	r4,129
  807854:	210a4484 	addi	r4,r4,10514
  807858:	d9003515 	stw	r4,212(sp)
  80785c:	003b1406 	br	8064b0 <__alt_data_end+0xff8064b0>
  807860:	013fffc4 	movi	r4,-1
  807864:	003a3506 	br	80613c <__alt_data_end+0xff80613c>
  807868:	0023883a 	mov	r17,zero
  80786c:	003d9d06 	br	806ee4 <__alt_data_end+0xff806ee4>
  807870:	d9002c17 	ldw	r4,176(sp)
  807874:	d9801e04 	addi	r6,sp,120
  807878:	b80b883a 	mov	r5,r23
  80787c:	080d2840 	call	80d284 <__sprint_r>
  807880:	103a031e 	bne	r2,zero,806090 <__alt_data_end+0xff806090>
  807884:	d8c02017 	ldw	r3,128(sp)
  807888:	da000404 	addi	r8,sp,16
  80788c:	003d9406 	br	806ee0 <__alt_data_end+0xff806ee0>
  807890:	01002074 	movhi	r4,129
  807894:	210a4084 	addi	r4,r4,10498
  807898:	d9002b15 	stw	r4,172(sp)
  80789c:	d9002b17 	ldw	r4,172(sp)
  8078a0:	1c47883a 	add	r3,r3,r17
  8078a4:	10800044 	addi	r2,r2,1
  8078a8:	41000015 	stw	r4,0(r8)
  8078ac:	44400115 	stw	r17,4(r8)
  8078b0:	d8c02015 	stw	r3,128(sp)
  8078b4:	d8801f15 	stw	r2,124(sp)
  8078b8:	010001c4 	movi	r4,7
  8078bc:	20bfd716 	blt	r4,r2,80781c <__alt_data_end+0xff80781c>
  8078c0:	42000204 	addi	r8,r8,8
  8078c4:	003fdd06 	br	80783c <__alt_data_end+0xff80783c>
  8078c8:	d9002c17 	ldw	r4,176(sp)
  8078cc:	d9801e04 	addi	r6,sp,120
  8078d0:	b80b883a 	mov	r5,r23
  8078d4:	080d2840 	call	80d284 <__sprint_r>
  8078d8:	1039ed1e 	bne	r2,zero,806090 <__alt_data_end+0xff806090>
  8078dc:	d8802617 	ldw	r2,152(sp)
  8078e0:	d8c02017 	ldw	r3,128(sp)
  8078e4:	da000404 	addi	r8,sp,16
  8078e8:	003e1006 	br	80712c <__alt_data_end+0xff80712c>
  8078ec:	00800044 	movi	r2,1
  8078f0:	10803fcc 	andi	r2,r2,255
  8078f4:	00c00044 	movi	r3,1
  8078f8:	10fa3526 	beq	r2,r3,8061d0 <__alt_data_end+0xff8061d0>
  8078fc:	00c00084 	movi	r3,2
  807900:	10fbcb26 	beq	r2,r3,806830 <__alt_data_end+0xff806830>
  807904:	003a8f06 	br	806344 <__alt_data_end+0xff806344>
  807908:	01002074 	movhi	r4,129
  80790c:	210a4484 	addi	r4,r4,10514
  807910:	d9003515 	stw	r4,212(sp)
  807914:	003b7606 	br	8066f0 <__alt_data_end+0xff8066f0>
  807918:	d8802917 	ldw	r2,164(sp)
  80791c:	00c00184 	movi	r3,6
  807920:	1880012e 	bgeu	r3,r2,807928 <___vfprintf_internal_r+0x1ca0>
  807924:	1805883a 	mov	r2,r3
  807928:	d8802e15 	stw	r2,184(sp)
  80792c:	1000ef16 	blt	r2,zero,807cec <___vfprintf_internal_r+0x2064>
  807930:	04002074 	movhi	r16,129
  807934:	d8802a15 	stw	r2,168(sp)
  807938:	dcc02d15 	stw	r19,180(sp)
  80793c:	d8002915 	stw	zero,164(sp)
  807940:	d8003215 	stw	zero,200(sp)
  807944:	840a3e04 	addi	r16,r16,10488
  807948:	0039883a 	mov	fp,zero
  80794c:	003aa206 	br	8063d8 <__alt_data_end+0xff8063d8>
  807950:	0021883a 	mov	r16,zero
  807954:	003e0706 	br	807174 <__alt_data_end+0xff807174>
  807958:	d9002c17 	ldw	r4,176(sp)
  80795c:	d9801e04 	addi	r6,sp,120
  807960:	b80b883a 	mov	r5,r23
  807964:	080d2840 	call	80d284 <__sprint_r>
  807968:	1039c91e 	bne	r2,zero,806090 <__alt_data_end+0xff806090>
  80796c:	d8802617 	ldw	r2,152(sp)
  807970:	d9403317 	ldw	r5,204(sp)
  807974:	d8c02017 	ldw	r3,128(sp)
  807978:	da000404 	addi	r8,sp,16
  80797c:	2885c83a 	sub	r2,r5,r2
  807980:	003dfb06 	br	807170 <__alt_data_end+0xff807170>
  807984:	9080004c 	andi	r2,r18,1
  807988:	103e8f1e 	bne	r2,zero,8073c8 <__alt_data_end+0xff8073c8>
  80798c:	d8802117 	ldw	r2,132(sp)
  807990:	003e9e06 	br	80740c <__alt_data_end+0xff80740c>
  807994:	1025883a 	mov	r18,r2
  807998:	0039883a 	mov	fp,zero
  80799c:	00800084 	movi	r2,2
  8079a0:	003fd306 	br	8078f0 <__alt_data_end+0xff8078f0>
  8079a4:	07000b44 	movi	fp,45
  8079a8:	df002785 	stb	fp,158(sp)
  8079ac:	003a4006 	br	8062b0 <__alt_data_end+0xff8062b0>
  8079b0:	00c00b44 	movi	r3,45
  8079b4:	d8c02785 	stb	r3,158(sp)
  8079b8:	d8802a15 	stw	r2,168(sp)
  8079bc:	dc802b17 	ldw	r18,172(sp)
  8079c0:	d8002915 	stw	zero,164(sp)
  8079c4:	07000b44 	movi	fp,45
  8079c8:	003a8006 	br	8063cc <__alt_data_end+0xff8063cc>
  8079cc:	04002074 	movhi	r16,129
  8079d0:	840a3304 	addi	r16,r16,10444
  8079d4:	003f4706 	br	8076f4 <__alt_data_end+0xff8076f4>
  8079d8:	d8c02d17 	ldw	r3,180(sp)
  8079dc:	d9002f17 	ldw	r4,188(sp)
  8079e0:	18800017 	ldw	r2,0(r3)
  8079e4:	18c00104 	addi	r3,r3,4
  8079e8:	d8c02d15 	stw	r3,180(sp)
  8079ec:	11000015 	stw	r4,0(r2)
  8079f0:	0038dd06 	br	805d68 <__alt_data_end+0xff805d68>
  8079f4:	dd802617 	ldw	r22,152(sp)
  8079f8:	00bfff44 	movi	r2,-3
  8079fc:	b0801c16 	blt	r22,r2,807a70 <___vfprintf_internal_r+0x1de8>
  807a00:	d9402917 	ldw	r5,164(sp)
  807a04:	2d801a16 	blt	r5,r22,807a70 <___vfprintf_internal_r+0x1de8>
  807a08:	dd803215 	stw	r22,200(sp)
  807a0c:	003e8906 	br	807434 <__alt_data_end+0xff807434>
  807a10:	01002074 	movhi	r4,129
  807a14:	210a4084 	addi	r4,r4,10498
  807a18:	d9002b15 	stw	r4,172(sp)
  807a1c:	003c9106 	br	806c64 <__alt_data_end+0xff806c64>
  807a20:	e005883a 	mov	r2,fp
  807a24:	003e7906 	br	80740c <__alt_data_end+0xff80740c>
  807a28:	d9402917 	ldw	r5,164(sp)
  807a2c:	df002783 	ldbu	fp,158(sp)
  807a30:	dcc02d15 	stw	r19,180(sp)
  807a34:	d9402a15 	stw	r5,168(sp)
  807a38:	d9402e15 	stw	r5,184(sp)
  807a3c:	d8002915 	stw	zero,164(sp)
  807a40:	d8003215 	stw	zero,200(sp)
  807a44:	003a5d06 	br	8063bc <__alt_data_end+0xff8063bc>
  807a48:	9080004c 	andi	r2,r18,1
  807a4c:	0039883a 	mov	fp,zero
  807a50:	10000426 	beq	r2,zero,807a64 <___vfprintf_internal_r+0x1ddc>
  807a54:	00800c04 	movi	r2,48
  807a58:	dc001dc4 	addi	r16,sp,119
  807a5c:	d8801dc5 	stb	r2,119(sp)
  807a60:	003b8006 	br	806864 <__alt_data_end+0xff806864>
  807a64:	d8002e15 	stw	zero,184(sp)
  807a68:	dc001e04 	addi	r16,sp,120
  807a6c:	003a4d06 	br	8063a4 <__alt_data_end+0xff8063a4>
  807a70:	8c7fff84 	addi	r17,r17,-2
  807a74:	b5bfffc4 	addi	r22,r22,-1
  807a78:	dd802615 	stw	r22,152(sp)
  807a7c:	dc4022c5 	stb	r17,139(sp)
  807a80:	b000bf16 	blt	r22,zero,807d80 <___vfprintf_internal_r+0x20f8>
  807a84:	00800ac4 	movi	r2,43
  807a88:	d8802305 	stb	r2,140(sp)
  807a8c:	00800244 	movi	r2,9
  807a90:	15807016 	blt	r2,r22,807c54 <___vfprintf_internal_r+0x1fcc>
  807a94:	00800c04 	movi	r2,48
  807a98:	b5800c04 	addi	r22,r22,48
  807a9c:	d8802345 	stb	r2,141(sp)
  807aa0:	dd802385 	stb	r22,142(sp)
  807aa4:	d88023c4 	addi	r2,sp,143
  807aa8:	df0022c4 	addi	fp,sp,139
  807aac:	d8c03317 	ldw	r3,204(sp)
  807ab0:	1739c83a 	sub	fp,r2,fp
  807ab4:	d9003317 	ldw	r4,204(sp)
  807ab8:	e0c7883a 	add	r3,fp,r3
  807abc:	df003a15 	stw	fp,232(sp)
  807ac0:	d8c02e15 	stw	r3,184(sp)
  807ac4:	00800044 	movi	r2,1
  807ac8:	1100b30e 	bge	r2,r4,807d98 <___vfprintf_internal_r+0x2110>
  807acc:	d8c02e17 	ldw	r3,184(sp)
  807ad0:	18c00044 	addi	r3,r3,1
  807ad4:	d8c02e15 	stw	r3,184(sp)
  807ad8:	1805883a 	mov	r2,r3
  807adc:	1800ac16 	blt	r3,zero,807d90 <___vfprintf_internal_r+0x2108>
  807ae0:	d8003215 	stw	zero,200(sp)
  807ae4:	003e5d06 	br	80745c <__alt_data_end+0xff80745c>
  807ae8:	d9002c17 	ldw	r4,176(sp)
  807aec:	d9801e04 	addi	r6,sp,120
  807af0:	b80b883a 	mov	r5,r23
  807af4:	080d2840 	call	80d284 <__sprint_r>
  807af8:	1039651e 	bne	r2,zero,806090 <__alt_data_end+0xff806090>
  807afc:	dc402617 	ldw	r17,152(sp)
  807b00:	d8c02017 	ldw	r3,128(sp)
  807b04:	d8801f17 	ldw	r2,124(sp)
  807b08:	da000404 	addi	r8,sp,16
  807b0c:	003ed606 	br	807668 <__alt_data_end+0xff807668>
  807b10:	582b883a 	mov	r21,r11
  807b14:	d8002915 	stw	zero,164(sp)
  807b18:	0038bd06 	br	805e10 <__alt_data_end+0xff805e10>
  807b1c:	d8802917 	ldw	r2,164(sp)
  807b20:	103e071e 	bne	r2,zero,807340 <__alt_data_end+0xff807340>
  807b24:	dc002915 	stw	r16,164(sp)
  807b28:	003e0506 	br	807340 <__alt_data_end+0xff807340>
  807b2c:	d9002917 	ldw	r4,164(sp)
  807b30:	20c00044 	addi	r3,r4,1
  807b34:	003e0f06 	br	807374 <__alt_data_end+0xff807374>
  807b38:	01400184 	movi	r5,6
  807b3c:	d9402915 	stw	r5,164(sp)
  807b40:	003dff06 	br	807340 <__alt_data_end+0xff807340>
  807b44:	d8802104 	addi	r2,sp,132
  807b48:	d8800315 	stw	r2,12(sp)
  807b4c:	d8802504 	addi	r2,sp,148
  807b50:	d8800215 	stw	r2,8(sp)
  807b54:	d8802604 	addi	r2,sp,152
  807b58:	d8800115 	stw	r2,4(sp)
  807b5c:	d8802917 	ldw	r2,164(sp)
  807b60:	d9403617 	ldw	r5,216(sp)
  807b64:	d9002c17 	ldw	r4,176(sp)
  807b68:	d8800015 	stw	r2,0(sp)
  807b6c:	01c000c4 	movi	r7,3
  807b70:	980d883a 	mov	r6,r19
  807b74:	da003d15 	stw	r8,244(sp)
  807b78:	08082ac0 	call	8082ac <_dtoa_r>
  807b7c:	d8c02917 	ldw	r3,164(sp)
  807b80:	da003d17 	ldw	r8,244(sp)
  807b84:	1021883a 	mov	r16,r2
  807b88:	10f9883a 	add	fp,r2,r3
  807b8c:	81000007 	ldb	r4,0(r16)
  807b90:	00800c04 	movi	r2,48
  807b94:	20805e26 	beq	r4,r2,807d10 <___vfprintf_internal_r+0x2088>
  807b98:	d8c02617 	ldw	r3,152(sp)
  807b9c:	e0f9883a 	add	fp,fp,r3
  807ba0:	003e0a06 	br	8073cc <__alt_data_end+0xff8073cc>
  807ba4:	00c00b44 	movi	r3,45
  807ba8:	24e0003c 	xorhi	r19,r4,32768
  807bac:	d8c02a05 	stb	r3,168(sp)
  807bb0:	003de906 	br	807358 <__alt_data_end+0xff807358>
  807bb4:	d8c03217 	ldw	r3,200(sp)
  807bb8:	00c07a0e 	bge	zero,r3,807da4 <___vfprintf_internal_r+0x211c>
  807bbc:	00800044 	movi	r2,1
  807bc0:	d9003317 	ldw	r4,204(sp)
  807bc4:	1105883a 	add	r2,r2,r4
  807bc8:	d8802e15 	stw	r2,184(sp)
  807bcc:	10004e16 	blt	r2,zero,807d08 <___vfprintf_internal_r+0x2080>
  807bd0:	044019c4 	movi	r17,103
  807bd4:	003e2106 	br	80745c <__alt_data_end+0xff80745c>
  807bd8:	d9002917 	ldw	r4,164(sp)
  807bdc:	d8802104 	addi	r2,sp,132
  807be0:	d8800315 	stw	r2,12(sp)
  807be4:	d9000015 	stw	r4,0(sp)
  807be8:	d8802504 	addi	r2,sp,148
  807bec:	d9403617 	ldw	r5,216(sp)
  807bf0:	d9002c17 	ldw	r4,176(sp)
  807bf4:	d8800215 	stw	r2,8(sp)
  807bf8:	d8802604 	addi	r2,sp,152
  807bfc:	d8800115 	stw	r2,4(sp)
  807c00:	01c000c4 	movi	r7,3
  807c04:	980d883a 	mov	r6,r19
  807c08:	da003d15 	stw	r8,244(sp)
  807c0c:	08082ac0 	call	8082ac <_dtoa_r>
  807c10:	d8c02917 	ldw	r3,164(sp)
  807c14:	da003d17 	ldw	r8,244(sp)
  807c18:	1021883a 	mov	r16,r2
  807c1c:	00801184 	movi	r2,70
  807c20:	80f9883a 	add	fp,r16,r3
  807c24:	88bfd926 	beq	r17,r2,807b8c <__alt_data_end+0xff807b8c>
  807c28:	003de806 	br	8073cc <__alt_data_end+0xff8073cc>
  807c2c:	d9002917 	ldw	r4,164(sp)
  807c30:	00c04d0e 	bge	zero,r3,807d68 <___vfprintf_internal_r+0x20e0>
  807c34:	2000441e 	bne	r4,zero,807d48 <___vfprintf_internal_r+0x20c0>
  807c38:	9480004c 	andi	r18,r18,1
  807c3c:	9000421e 	bne	r18,zero,807d48 <___vfprintf_internal_r+0x20c0>
  807c40:	1805883a 	mov	r2,r3
  807c44:	18007016 	blt	r3,zero,807e08 <___vfprintf_internal_r+0x2180>
  807c48:	d8c03217 	ldw	r3,200(sp)
  807c4c:	d8c02e15 	stw	r3,184(sp)
  807c50:	003e0206 	br	80745c <__alt_data_end+0xff80745c>
  807c54:	df0022c4 	addi	fp,sp,139
  807c58:	dc002915 	stw	r16,164(sp)
  807c5c:	4027883a 	mov	r19,r8
  807c60:	e021883a 	mov	r16,fp
  807c64:	b009883a 	mov	r4,r22
  807c68:	01400284 	movi	r5,10
  807c6c:	08029380 	call	802938 <__modsi3>
  807c70:	10800c04 	addi	r2,r2,48
  807c74:	843fffc4 	addi	r16,r16,-1
  807c78:	b009883a 	mov	r4,r22
  807c7c:	01400284 	movi	r5,10
  807c80:	80800005 	stb	r2,0(r16)
  807c84:	08028b40 	call	8028b4 <__divsi3>
  807c88:	102d883a 	mov	r22,r2
  807c8c:	00800244 	movi	r2,9
  807c90:	15bff416 	blt	r2,r22,807c64 <__alt_data_end+0xff807c64>
  807c94:	9811883a 	mov	r8,r19
  807c98:	b0800c04 	addi	r2,r22,48
  807c9c:	8027883a 	mov	r19,r16
  807ca0:	997fffc4 	addi	r5,r19,-1
  807ca4:	98bfffc5 	stb	r2,-1(r19)
  807ca8:	dc002917 	ldw	r16,164(sp)
  807cac:	2f006a2e 	bgeu	r5,fp,807e58 <___vfprintf_internal_r+0x21d0>
  807cb0:	d9c02384 	addi	r7,sp,142
  807cb4:	3ccfc83a 	sub	r7,r7,r19
  807cb8:	d9002344 	addi	r4,sp,141
  807cbc:	e1cf883a 	add	r7,fp,r7
  807cc0:	00000106 	br	807cc8 <___vfprintf_internal_r+0x2040>
  807cc4:	28800003 	ldbu	r2,0(r5)
  807cc8:	20800005 	stb	r2,0(r4)
  807ccc:	21000044 	addi	r4,r4,1
  807cd0:	29400044 	addi	r5,r5,1
  807cd4:	393ffb1e 	bne	r7,r4,807cc4 <__alt_data_end+0xff807cc4>
  807cd8:	d8802304 	addi	r2,sp,140
  807cdc:	14c5c83a 	sub	r2,r2,r19
  807ce0:	d8c02344 	addi	r3,sp,141
  807ce4:	1885883a 	add	r2,r3,r2
  807ce8:	003f7006 	br	807aac <__alt_data_end+0xff807aac>
  807cec:	0005883a 	mov	r2,zero
  807cf0:	003f0f06 	br	807930 <__alt_data_end+0xff807930>
  807cf4:	d8c03217 	ldw	r3,200(sp)
  807cf8:	18c00044 	addi	r3,r3,1
  807cfc:	d8c02e15 	stw	r3,184(sp)
  807d00:	1805883a 	mov	r2,r3
  807d04:	183fb20e 	bge	r3,zero,807bd0 <__alt_data_end+0xff807bd0>
  807d08:	0005883a 	mov	r2,zero
  807d0c:	003fb006 	br	807bd0 <__alt_data_end+0xff807bd0>
  807d10:	d9003617 	ldw	r4,216(sp)
  807d14:	000d883a 	mov	r6,zero
  807d18:	000f883a 	mov	r7,zero
  807d1c:	980b883a 	mov	r5,r19
  807d20:	d8c03c15 	stw	r3,240(sp)
  807d24:	da003d15 	stw	r8,244(sp)
  807d28:	08044c00 	call	8044c0 <__eqdf2>
  807d2c:	d8c03c17 	ldw	r3,240(sp)
  807d30:	da003d17 	ldw	r8,244(sp)
  807d34:	103f9826 	beq	r2,zero,807b98 <__alt_data_end+0xff807b98>
  807d38:	00800044 	movi	r2,1
  807d3c:	10c7c83a 	sub	r3,r2,r3
  807d40:	d8c02615 	stw	r3,152(sp)
  807d44:	003f9506 	br	807b9c <__alt_data_end+0xff807b9c>
  807d48:	d9002917 	ldw	r4,164(sp)
  807d4c:	d8c03217 	ldw	r3,200(sp)
  807d50:	20800044 	addi	r2,r4,1
  807d54:	1885883a 	add	r2,r3,r2
  807d58:	d8802e15 	stw	r2,184(sp)
  807d5c:	103dbf0e 	bge	r2,zero,80745c <__alt_data_end+0xff80745c>
  807d60:	0005883a 	mov	r2,zero
  807d64:	003dbd06 	br	80745c <__alt_data_end+0xff80745c>
  807d68:	2000211e 	bne	r4,zero,807df0 <___vfprintf_internal_r+0x2168>
  807d6c:	9480004c 	andi	r18,r18,1
  807d70:	90001f1e 	bne	r18,zero,807df0 <___vfprintf_internal_r+0x2168>
  807d74:	00800044 	movi	r2,1
  807d78:	d8802e15 	stw	r2,184(sp)
  807d7c:	003db706 	br	80745c <__alt_data_end+0xff80745c>
  807d80:	00800b44 	movi	r2,45
  807d84:	05adc83a 	sub	r22,zero,r22
  807d88:	d8802305 	stb	r2,140(sp)
  807d8c:	003f3f06 	br	807a8c <__alt_data_end+0xff807a8c>
  807d90:	0005883a 	mov	r2,zero
  807d94:	003f5206 	br	807ae0 <__alt_data_end+0xff807ae0>
  807d98:	90a4703a 	and	r18,r18,r2
  807d9c:	903f4e26 	beq	r18,zero,807ad8 <__alt_data_end+0xff807ad8>
  807da0:	003f4a06 	br	807acc <__alt_data_end+0xff807acc>
  807da4:	00800084 	movi	r2,2
  807da8:	10c5c83a 	sub	r2,r2,r3
  807dac:	003f8406 	br	807bc0 <__alt_data_end+0xff807bc0>
  807db0:	d8802d17 	ldw	r2,180(sp)
  807db4:	d9002d17 	ldw	r4,180(sp)
  807db8:	ac400043 	ldbu	r17,1(r21)
  807dbc:	10800017 	ldw	r2,0(r2)
  807dc0:	582b883a 	mov	r21,r11
  807dc4:	d8802915 	stw	r2,164(sp)
  807dc8:	20800104 	addi	r2,r4,4
  807dcc:	d9002917 	ldw	r4,164(sp)
  807dd0:	d8802d15 	stw	r2,180(sp)
  807dd4:	203e7a0e 	bge	r4,zero,8077c0 <__alt_data_end+0xff8077c0>
  807dd8:	8c403fcc 	andi	r17,r17,255
  807ddc:	00bfffc4 	movi	r2,-1
  807de0:	8c40201c 	xori	r17,r17,128
  807de4:	d8802915 	stw	r2,164(sp)
  807de8:	8c7fe004 	addi	r17,r17,-128
  807dec:	00380706 	br	805e0c <__alt_data_end+0xff805e0c>
  807df0:	d8c02917 	ldw	r3,164(sp)
  807df4:	18c00084 	addi	r3,r3,2
  807df8:	d8c02e15 	stw	r3,184(sp)
  807dfc:	1805883a 	mov	r2,r3
  807e00:	183d960e 	bge	r3,zero,80745c <__alt_data_end+0xff80745c>
  807e04:	003fd606 	br	807d60 <__alt_data_end+0xff807d60>
  807e08:	0005883a 	mov	r2,zero
  807e0c:	003f8e06 	br	807c48 <__alt_data_end+0xff807c48>
  807e10:	9080004c 	andi	r2,r18,1
  807e14:	103f811e 	bne	r2,zero,807c1c <__alt_data_end+0xff807c1c>
  807e18:	d8802117 	ldw	r2,132(sp)
  807e1c:	1405c83a 	sub	r2,r2,r16
  807e20:	d8803315 	stw	r2,204(sp)
  807e24:	b47ef326 	beq	r22,r17,8079f4 <__alt_data_end+0xff8079f4>
  807e28:	dd802617 	ldw	r22,152(sp)
  807e2c:	003f1106 	br	807a74 <__alt_data_end+0xff807a74>
  807e30:	d9c02785 	stb	r7,158(sp)
  807e34:	00390406 	br	806248 <__alt_data_end+0xff806248>
  807e38:	d9c02785 	stb	r7,158(sp)
  807e3c:	0038d306 	br	80618c <__alt_data_end+0xff80618c>
  807e40:	d9c02785 	stb	r7,158(sp)
  807e44:	003a6106 	br	8067cc <__alt_data_end+0xff8067cc>
  807e48:	d9c02785 	stb	r7,158(sp)
  807e4c:	003af806 	br	806a30 <__alt_data_end+0xff806a30>
  807e50:	0005883a 	mov	r2,zero
  807e54:	003d7e06 	br	807450 <__alt_data_end+0xff807450>
  807e58:	d8802344 	addi	r2,sp,141
  807e5c:	003f1306 	br	807aac <__alt_data_end+0xff807aac>
  807e60:	d9c02785 	stb	r7,158(sp)
  807e64:	00392306 	br	8062f4 <__alt_data_end+0xff8062f4>
  807e68:	d9c02785 	stb	r7,158(sp)
  807e6c:	003aa906 	br	806914 <__alt_data_end+0xff806914>
  807e70:	d9c02785 	stb	r7,158(sp)
  807e74:	003a3d06 	br	80676c <__alt_data_end+0xff80676c>
  807e78:	d9c02785 	stb	r7,158(sp)
  807e7c:	003aca06 	br	8069a8 <__alt_data_end+0xff8069a8>

00807e80 <__vfprintf_internal>:
  807e80:	00802074 	movhi	r2,129
  807e84:	10915904 	addi	r2,r2,17764
  807e88:	300f883a 	mov	r7,r6
  807e8c:	280d883a 	mov	r6,r5
  807e90:	200b883a 	mov	r5,r4
  807e94:	11000017 	ldw	r4,0(r2)
  807e98:	0805c881 	jmpi	805c88 <___vfprintf_internal_r>

00807e9c <__sbprintf>:
  807e9c:	2880030b 	ldhu	r2,12(r5)
  807ea0:	2ac01917 	ldw	r11,100(r5)
  807ea4:	2a80038b 	ldhu	r10,14(r5)
  807ea8:	2a400717 	ldw	r9,28(r5)
  807eac:	2a000917 	ldw	r8,36(r5)
  807eb0:	defee204 	addi	sp,sp,-1144
  807eb4:	00c10004 	movi	r3,1024
  807eb8:	dc011a15 	stw	r16,1128(sp)
  807ebc:	10bfff4c 	andi	r2,r2,65533
  807ec0:	2821883a 	mov	r16,r5
  807ec4:	d8cb883a 	add	r5,sp,r3
  807ec8:	dc811c15 	stw	r18,1136(sp)
  807ecc:	dc411b15 	stw	r17,1132(sp)
  807ed0:	dfc11d15 	stw	ra,1140(sp)
  807ed4:	2025883a 	mov	r18,r4
  807ed8:	d881030d 	sth	r2,1036(sp)
  807edc:	dac11915 	stw	r11,1124(sp)
  807ee0:	da81038d 	sth	r10,1038(sp)
  807ee4:	da410715 	stw	r9,1052(sp)
  807ee8:	da010915 	stw	r8,1060(sp)
  807eec:	dec10015 	stw	sp,1024(sp)
  807ef0:	dec10415 	stw	sp,1040(sp)
  807ef4:	d8c10215 	stw	r3,1032(sp)
  807ef8:	d8c10515 	stw	r3,1044(sp)
  807efc:	d8010615 	stw	zero,1048(sp)
  807f00:	0805c880 	call	805c88 <___vfprintf_internal_r>
  807f04:	1023883a 	mov	r17,r2
  807f08:	10000416 	blt	r2,zero,807f1c <__sbprintf+0x80>
  807f0c:	d9410004 	addi	r5,sp,1024
  807f10:	9009883a 	mov	r4,r18
  807f14:	0809b500 	call	809b50 <_fflush_r>
  807f18:	10000d1e 	bne	r2,zero,807f50 <__sbprintf+0xb4>
  807f1c:	d881030b 	ldhu	r2,1036(sp)
  807f20:	1080100c 	andi	r2,r2,64
  807f24:	10000326 	beq	r2,zero,807f34 <__sbprintf+0x98>
  807f28:	8080030b 	ldhu	r2,12(r16)
  807f2c:	10801014 	ori	r2,r2,64
  807f30:	8080030d 	sth	r2,12(r16)
  807f34:	8805883a 	mov	r2,r17
  807f38:	dfc11d17 	ldw	ra,1140(sp)
  807f3c:	dc811c17 	ldw	r18,1136(sp)
  807f40:	dc411b17 	ldw	r17,1132(sp)
  807f44:	dc011a17 	ldw	r16,1128(sp)
  807f48:	dec11e04 	addi	sp,sp,1144
  807f4c:	f800283a 	ret
  807f50:	047fffc4 	movi	r17,-1
  807f54:	003ff106 	br	807f1c <__alt_data_end+0xff807f1c>

00807f58 <__swsetup_r>:
  807f58:	00802074 	movhi	r2,129
  807f5c:	defffd04 	addi	sp,sp,-12
  807f60:	10915904 	addi	r2,r2,17764
  807f64:	dc400115 	stw	r17,4(sp)
  807f68:	2023883a 	mov	r17,r4
  807f6c:	11000017 	ldw	r4,0(r2)
  807f70:	dc000015 	stw	r16,0(sp)
  807f74:	dfc00215 	stw	ra,8(sp)
  807f78:	2821883a 	mov	r16,r5
  807f7c:	20000226 	beq	r4,zero,807f88 <__swsetup_r+0x30>
  807f80:	20800e17 	ldw	r2,56(r4)
  807f84:	10003126 	beq	r2,zero,80804c <__swsetup_r+0xf4>
  807f88:	8080030b 	ldhu	r2,12(r16)
  807f8c:	10c0020c 	andi	r3,r2,8
  807f90:	1009883a 	mov	r4,r2
  807f94:	18000f26 	beq	r3,zero,807fd4 <__swsetup_r+0x7c>
  807f98:	80c00417 	ldw	r3,16(r16)
  807f9c:	18001526 	beq	r3,zero,807ff4 <__swsetup_r+0x9c>
  807fa0:	1100004c 	andi	r4,r2,1
  807fa4:	20001c1e 	bne	r4,zero,808018 <__swsetup_r+0xc0>
  807fa8:	1080008c 	andi	r2,r2,2
  807fac:	1000291e 	bne	r2,zero,808054 <__swsetup_r+0xfc>
  807fb0:	80800517 	ldw	r2,20(r16)
  807fb4:	80800215 	stw	r2,8(r16)
  807fb8:	18001c26 	beq	r3,zero,80802c <__swsetup_r+0xd4>
  807fbc:	0005883a 	mov	r2,zero
  807fc0:	dfc00217 	ldw	ra,8(sp)
  807fc4:	dc400117 	ldw	r17,4(sp)
  807fc8:	dc000017 	ldw	r16,0(sp)
  807fcc:	dec00304 	addi	sp,sp,12
  807fd0:	f800283a 	ret
  807fd4:	2080040c 	andi	r2,r4,16
  807fd8:	10002e26 	beq	r2,zero,808094 <__swsetup_r+0x13c>
  807fdc:	2080010c 	andi	r2,r4,4
  807fe0:	10001e1e 	bne	r2,zero,80805c <__swsetup_r+0x104>
  807fe4:	80c00417 	ldw	r3,16(r16)
  807fe8:	20800214 	ori	r2,r4,8
  807fec:	8080030d 	sth	r2,12(r16)
  807ff0:	183feb1e 	bne	r3,zero,807fa0 <__alt_data_end+0xff807fa0>
  807ff4:	1100a00c 	andi	r4,r2,640
  807ff8:	01408004 	movi	r5,512
  807ffc:	217fe826 	beq	r4,r5,807fa0 <__alt_data_end+0xff807fa0>
  808000:	800b883a 	mov	r5,r16
  808004:	8809883a 	mov	r4,r17
  808008:	080aad00 	call	80aad0 <__smakebuf_r>
  80800c:	8080030b 	ldhu	r2,12(r16)
  808010:	80c00417 	ldw	r3,16(r16)
  808014:	003fe206 	br	807fa0 <__alt_data_end+0xff807fa0>
  808018:	80800517 	ldw	r2,20(r16)
  80801c:	80000215 	stw	zero,8(r16)
  808020:	0085c83a 	sub	r2,zero,r2
  808024:	80800615 	stw	r2,24(r16)
  808028:	183fe41e 	bne	r3,zero,807fbc <__alt_data_end+0xff807fbc>
  80802c:	80c0030b 	ldhu	r3,12(r16)
  808030:	0005883a 	mov	r2,zero
  808034:	1900200c 	andi	r4,r3,128
  808038:	203fe126 	beq	r4,zero,807fc0 <__alt_data_end+0xff807fc0>
  80803c:	18c01014 	ori	r3,r3,64
  808040:	80c0030d 	sth	r3,12(r16)
  808044:	00bfffc4 	movi	r2,-1
  808048:	003fdd06 	br	807fc0 <__alt_data_end+0xff807fc0>
  80804c:	0809f2c0 	call	809f2c <__sinit>
  808050:	003fcd06 	br	807f88 <__alt_data_end+0xff807f88>
  808054:	0005883a 	mov	r2,zero
  808058:	003fd606 	br	807fb4 <__alt_data_end+0xff807fb4>
  80805c:	81400c17 	ldw	r5,48(r16)
  808060:	28000626 	beq	r5,zero,80807c <__swsetup_r+0x124>
  808064:	80801004 	addi	r2,r16,64
  808068:	28800326 	beq	r5,r2,808078 <__swsetup_r+0x120>
  80806c:	8809883a 	mov	r4,r17
  808070:	080a0a00 	call	80a0a0 <_free_r>
  808074:	8100030b 	ldhu	r4,12(r16)
  808078:	80000c15 	stw	zero,48(r16)
  80807c:	80c00417 	ldw	r3,16(r16)
  808080:	00bff6c4 	movi	r2,-37
  808084:	1108703a 	and	r4,r2,r4
  808088:	80000115 	stw	zero,4(r16)
  80808c:	80c00015 	stw	r3,0(r16)
  808090:	003fd506 	br	807fe8 <__alt_data_end+0xff807fe8>
  808094:	00800244 	movi	r2,9
  808098:	88800015 	stw	r2,0(r17)
  80809c:	20801014 	ori	r2,r4,64
  8080a0:	8080030d 	sth	r2,12(r16)
  8080a4:	00bfffc4 	movi	r2,-1
  8080a8:	003fc506 	br	807fc0 <__alt_data_end+0xff807fc0>

008080ac <quorem>:
  8080ac:	defff704 	addi	sp,sp,-36
  8080b0:	dc800215 	stw	r18,8(sp)
  8080b4:	20800417 	ldw	r2,16(r4)
  8080b8:	2c800417 	ldw	r18,16(r5)
  8080bc:	dfc00815 	stw	ra,32(sp)
  8080c0:	ddc00715 	stw	r23,28(sp)
  8080c4:	dd800615 	stw	r22,24(sp)
  8080c8:	dd400515 	stw	r21,20(sp)
  8080cc:	dd000415 	stw	r20,16(sp)
  8080d0:	dcc00315 	stw	r19,12(sp)
  8080d4:	dc400115 	stw	r17,4(sp)
  8080d8:	dc000015 	stw	r16,0(sp)
  8080dc:	14807116 	blt	r2,r18,8082a4 <quorem+0x1f8>
  8080e0:	94bfffc4 	addi	r18,r18,-1
  8080e4:	94ad883a 	add	r22,r18,r18
  8080e8:	b5ad883a 	add	r22,r22,r22
  8080ec:	2c400504 	addi	r17,r5,20
  8080f0:	8da9883a 	add	r20,r17,r22
  8080f4:	25400504 	addi	r21,r4,20
  8080f8:	282f883a 	mov	r23,r5
  8080fc:	adad883a 	add	r22,r21,r22
  808100:	a1400017 	ldw	r5,0(r20)
  808104:	2021883a 	mov	r16,r4
  808108:	b1000017 	ldw	r4,0(r22)
  80810c:	29400044 	addi	r5,r5,1
  808110:	08029ac0 	call	8029ac <__udivsi3>
  808114:	1027883a 	mov	r19,r2
  808118:	10002c26 	beq	r2,zero,8081cc <quorem+0x120>
  80811c:	a813883a 	mov	r9,r21
  808120:	880b883a 	mov	r5,r17
  808124:	0009883a 	mov	r4,zero
  808128:	000d883a 	mov	r6,zero
  80812c:	2a000017 	ldw	r8,0(r5)
  808130:	49c00017 	ldw	r7,0(r9)
  808134:	29400104 	addi	r5,r5,4
  808138:	40bfffcc 	andi	r2,r8,65535
  80813c:	14c5383a 	mul	r2,r2,r19
  808140:	4010d43a 	srli	r8,r8,16
  808144:	38ffffcc 	andi	r3,r7,65535
  808148:	1105883a 	add	r2,r2,r4
  80814c:	1008d43a 	srli	r4,r2,16
  808150:	44d1383a 	mul	r8,r8,r19
  808154:	198d883a 	add	r6,r3,r6
  808158:	10ffffcc 	andi	r3,r2,65535
  80815c:	30c7c83a 	sub	r3,r6,r3
  808160:	380ed43a 	srli	r7,r7,16
  808164:	4105883a 	add	r2,r8,r4
  808168:	180dd43a 	srai	r6,r3,16
  80816c:	113fffcc 	andi	r4,r2,65535
  808170:	390fc83a 	sub	r7,r7,r4
  808174:	398d883a 	add	r6,r7,r6
  808178:	300e943a 	slli	r7,r6,16
  80817c:	18ffffcc 	andi	r3,r3,65535
  808180:	1008d43a 	srli	r4,r2,16
  808184:	38ceb03a 	or	r7,r7,r3
  808188:	49c00015 	stw	r7,0(r9)
  80818c:	300dd43a 	srai	r6,r6,16
  808190:	4a400104 	addi	r9,r9,4
  808194:	a17fe52e 	bgeu	r20,r5,80812c <__alt_data_end+0xff80812c>
  808198:	b0800017 	ldw	r2,0(r22)
  80819c:	10000b1e 	bne	r2,zero,8081cc <quorem+0x120>
  8081a0:	b0bfff04 	addi	r2,r22,-4
  8081a4:	a880082e 	bgeu	r21,r2,8081c8 <quorem+0x11c>
  8081a8:	b0ffff17 	ldw	r3,-4(r22)
  8081ac:	18000326 	beq	r3,zero,8081bc <quorem+0x110>
  8081b0:	00000506 	br	8081c8 <quorem+0x11c>
  8081b4:	10c00017 	ldw	r3,0(r2)
  8081b8:	1800031e 	bne	r3,zero,8081c8 <quorem+0x11c>
  8081bc:	10bfff04 	addi	r2,r2,-4
  8081c0:	94bfffc4 	addi	r18,r18,-1
  8081c4:	a8bffb36 	bltu	r21,r2,8081b4 <__alt_data_end+0xff8081b4>
  8081c8:	84800415 	stw	r18,16(r16)
  8081cc:	b80b883a 	mov	r5,r23
  8081d0:	8009883a 	mov	r4,r16
  8081d4:	080c2100 	call	80c210 <__mcmp>
  8081d8:	10002616 	blt	r2,zero,808274 <quorem+0x1c8>
  8081dc:	9cc00044 	addi	r19,r19,1
  8081e0:	a805883a 	mov	r2,r21
  8081e4:	000b883a 	mov	r5,zero
  8081e8:	11000017 	ldw	r4,0(r2)
  8081ec:	89800017 	ldw	r6,0(r17)
  8081f0:	10800104 	addi	r2,r2,4
  8081f4:	20ffffcc 	andi	r3,r4,65535
  8081f8:	194b883a 	add	r5,r3,r5
  8081fc:	30ffffcc 	andi	r3,r6,65535
  808200:	28c7c83a 	sub	r3,r5,r3
  808204:	300cd43a 	srli	r6,r6,16
  808208:	2008d43a 	srli	r4,r4,16
  80820c:	180bd43a 	srai	r5,r3,16
  808210:	18ffffcc 	andi	r3,r3,65535
  808214:	2189c83a 	sub	r4,r4,r6
  808218:	2149883a 	add	r4,r4,r5
  80821c:	200c943a 	slli	r6,r4,16
  808220:	8c400104 	addi	r17,r17,4
  808224:	200bd43a 	srai	r5,r4,16
  808228:	30c6b03a 	or	r3,r6,r3
  80822c:	10ffff15 	stw	r3,-4(r2)
  808230:	a47fed2e 	bgeu	r20,r17,8081e8 <__alt_data_end+0xff8081e8>
  808234:	9485883a 	add	r2,r18,r18
  808238:	1085883a 	add	r2,r2,r2
  80823c:	a887883a 	add	r3,r21,r2
  808240:	18800017 	ldw	r2,0(r3)
  808244:	10000b1e 	bne	r2,zero,808274 <quorem+0x1c8>
  808248:	18bfff04 	addi	r2,r3,-4
  80824c:	a880082e 	bgeu	r21,r2,808270 <quorem+0x1c4>
  808250:	18ffff17 	ldw	r3,-4(r3)
  808254:	18000326 	beq	r3,zero,808264 <quorem+0x1b8>
  808258:	00000506 	br	808270 <quorem+0x1c4>
  80825c:	10c00017 	ldw	r3,0(r2)
  808260:	1800031e 	bne	r3,zero,808270 <quorem+0x1c4>
  808264:	10bfff04 	addi	r2,r2,-4
  808268:	94bfffc4 	addi	r18,r18,-1
  80826c:	a8bffb36 	bltu	r21,r2,80825c <__alt_data_end+0xff80825c>
  808270:	84800415 	stw	r18,16(r16)
  808274:	9805883a 	mov	r2,r19
  808278:	dfc00817 	ldw	ra,32(sp)
  80827c:	ddc00717 	ldw	r23,28(sp)
  808280:	dd800617 	ldw	r22,24(sp)
  808284:	dd400517 	ldw	r21,20(sp)
  808288:	dd000417 	ldw	r20,16(sp)
  80828c:	dcc00317 	ldw	r19,12(sp)
  808290:	dc800217 	ldw	r18,8(sp)
  808294:	dc400117 	ldw	r17,4(sp)
  808298:	dc000017 	ldw	r16,0(sp)
  80829c:	dec00904 	addi	sp,sp,36
  8082a0:	f800283a 	ret
  8082a4:	0005883a 	mov	r2,zero
  8082a8:	003ff306 	br	808278 <__alt_data_end+0xff808278>

008082ac <_dtoa_r>:
  8082ac:	20801017 	ldw	r2,64(r4)
  8082b0:	deffde04 	addi	sp,sp,-136
  8082b4:	df002015 	stw	fp,128(sp)
  8082b8:	dcc01b15 	stw	r19,108(sp)
  8082bc:	dc801a15 	stw	r18,104(sp)
  8082c0:	dc401915 	stw	r17,100(sp)
  8082c4:	dc001815 	stw	r16,96(sp)
  8082c8:	dfc02115 	stw	ra,132(sp)
  8082cc:	ddc01f15 	stw	r23,124(sp)
  8082d0:	dd801e15 	stw	r22,120(sp)
  8082d4:	dd401d15 	stw	r21,116(sp)
  8082d8:	dd001c15 	stw	r20,112(sp)
  8082dc:	d9c00315 	stw	r7,12(sp)
  8082e0:	2039883a 	mov	fp,r4
  8082e4:	3023883a 	mov	r17,r6
  8082e8:	2825883a 	mov	r18,r5
  8082ec:	dc002417 	ldw	r16,144(sp)
  8082f0:	3027883a 	mov	r19,r6
  8082f4:	10000826 	beq	r2,zero,808318 <_dtoa_r+0x6c>
  8082f8:	21801117 	ldw	r6,68(r4)
  8082fc:	00c00044 	movi	r3,1
  808300:	100b883a 	mov	r5,r2
  808304:	1986983a 	sll	r3,r3,r6
  808308:	11800115 	stw	r6,4(r2)
  80830c:	10c00215 	stw	r3,8(r2)
  808310:	080b9f00 	call	80b9f0 <_Bfree>
  808314:	e0001015 	stw	zero,64(fp)
  808318:	88002e16 	blt	r17,zero,8083d4 <_dtoa_r+0x128>
  80831c:	80000015 	stw	zero,0(r16)
  808320:	889ffc2c 	andhi	r2,r17,32752
  808324:	00dffc34 	movhi	r3,32752
  808328:	10c01c26 	beq	r2,r3,80839c <_dtoa_r+0xf0>
  80832c:	000d883a 	mov	r6,zero
  808330:	000f883a 	mov	r7,zero
  808334:	9009883a 	mov	r4,r18
  808338:	980b883a 	mov	r5,r19
  80833c:	08044c00 	call	8044c0 <__eqdf2>
  808340:	10002b1e 	bne	r2,zero,8083f0 <_dtoa_r+0x144>
  808344:	d9c02317 	ldw	r7,140(sp)
  808348:	00800044 	movi	r2,1
  80834c:	38800015 	stw	r2,0(r7)
  808350:	d8802517 	ldw	r2,148(sp)
  808354:	10019e26 	beq	r2,zero,8089d0 <_dtoa_r+0x724>
  808358:	d8c02517 	ldw	r3,148(sp)
  80835c:	00802074 	movhi	r2,129
  808360:	108a4044 	addi	r2,r2,10497
  808364:	18800015 	stw	r2,0(r3)
  808368:	10bfffc4 	addi	r2,r2,-1
  80836c:	dfc02117 	ldw	ra,132(sp)
  808370:	df002017 	ldw	fp,128(sp)
  808374:	ddc01f17 	ldw	r23,124(sp)
  808378:	dd801e17 	ldw	r22,120(sp)
  80837c:	dd401d17 	ldw	r21,116(sp)
  808380:	dd001c17 	ldw	r20,112(sp)
  808384:	dcc01b17 	ldw	r19,108(sp)
  808388:	dc801a17 	ldw	r18,104(sp)
  80838c:	dc401917 	ldw	r17,100(sp)
  808390:	dc001817 	ldw	r16,96(sp)
  808394:	dec02204 	addi	sp,sp,136
  808398:	f800283a 	ret
  80839c:	d8c02317 	ldw	r3,140(sp)
  8083a0:	0089c3c4 	movi	r2,9999
  8083a4:	18800015 	stw	r2,0(r3)
  8083a8:	90017726 	beq	r18,zero,808988 <_dtoa_r+0x6dc>
  8083ac:	00802074 	movhi	r2,129
  8083b0:	108a4c04 	addi	r2,r2,10544
  8083b4:	d9002517 	ldw	r4,148(sp)
  8083b8:	203fec26 	beq	r4,zero,80836c <__alt_data_end+0xff80836c>
  8083bc:	10c000c7 	ldb	r3,3(r2)
  8083c0:	1801781e 	bne	r3,zero,8089a4 <_dtoa_r+0x6f8>
  8083c4:	10c000c4 	addi	r3,r2,3
  8083c8:	d9802517 	ldw	r6,148(sp)
  8083cc:	30c00015 	stw	r3,0(r6)
  8083d0:	003fe606 	br	80836c <__alt_data_end+0xff80836c>
  8083d4:	04e00034 	movhi	r19,32768
  8083d8:	9cffffc4 	addi	r19,r19,-1
  8083dc:	00800044 	movi	r2,1
  8083e0:	8ce6703a 	and	r19,r17,r19
  8083e4:	80800015 	stw	r2,0(r16)
  8083e8:	9823883a 	mov	r17,r19
  8083ec:	003fcc06 	br	808320 <__alt_data_end+0xff808320>
  8083f0:	d8800204 	addi	r2,sp,8
  8083f4:	d8800015 	stw	r2,0(sp)
  8083f8:	d9c00104 	addi	r7,sp,4
  8083fc:	900b883a 	mov	r5,r18
  808400:	980d883a 	mov	r6,r19
  808404:	e009883a 	mov	r4,fp
  808408:	8820d53a 	srli	r16,r17,20
  80840c:	080c5dc0 	call	80c5dc <__d2b>
  808410:	d8800915 	stw	r2,36(sp)
  808414:	8001651e 	bne	r16,zero,8089ac <_dtoa_r+0x700>
  808418:	dd800217 	ldw	r22,8(sp)
  80841c:	dc000117 	ldw	r16,4(sp)
  808420:	00800804 	movi	r2,32
  808424:	b421883a 	add	r16,r22,r16
  808428:	80c10c84 	addi	r3,r16,1074
  80842c:	10c2d10e 	bge	r2,r3,808f74 <_dtoa_r+0xcc8>
  808430:	00801004 	movi	r2,64
  808434:	81010484 	addi	r4,r16,1042
  808438:	10c7c83a 	sub	r3,r2,r3
  80843c:	9108d83a 	srl	r4,r18,r4
  808440:	88e2983a 	sll	r17,r17,r3
  808444:	2448b03a 	or	r4,r4,r17
  808448:	080fca80 	call	80fca8 <__floatunsidf>
  80844c:	017f8434 	movhi	r5,65040
  808450:	01800044 	movi	r6,1
  808454:	1009883a 	mov	r4,r2
  808458:	194b883a 	add	r5,r3,r5
  80845c:	843fffc4 	addi	r16,r16,-1
  808460:	d9801115 	stw	r6,68(sp)
  808464:	000d883a 	mov	r6,zero
  808468:	01cffe34 	movhi	r7,16376
  80846c:	0804d3c0 	call	804d3c <__subdf3>
  808470:	0198dbf4 	movhi	r6,25455
  808474:	01cff4f4 	movhi	r7,16339
  808478:	3190d844 	addi	r6,r6,17249
  80847c:	39e1e9c4 	addi	r7,r7,-30809
  808480:	1009883a 	mov	r4,r2
  808484:	180b883a 	mov	r5,r3
  808488:	08046240 	call	804624 <__muldf3>
  80848c:	01a2d874 	movhi	r6,35681
  808490:	01cff1f4 	movhi	r7,16327
  808494:	31b22cc4 	addi	r6,r6,-14157
  808498:	39e28a04 	addi	r7,r7,-30168
  80849c:	180b883a 	mov	r5,r3
  8084a0:	1009883a 	mov	r4,r2
  8084a4:	080332c0 	call	80332c <__adddf3>
  8084a8:	8009883a 	mov	r4,r16
  8084ac:	1029883a 	mov	r20,r2
  8084b0:	1823883a 	mov	r17,r3
  8084b4:	08056b80 	call	8056b8 <__floatsidf>
  8084b8:	019427f4 	movhi	r6,20639
  8084bc:	01cff4f4 	movhi	r7,16339
  8084c0:	319e7ec4 	addi	r6,r6,31227
  8084c4:	39d104c4 	addi	r7,r7,17427
  8084c8:	1009883a 	mov	r4,r2
  8084cc:	180b883a 	mov	r5,r3
  8084d0:	08046240 	call	804624 <__muldf3>
  8084d4:	100d883a 	mov	r6,r2
  8084d8:	180f883a 	mov	r7,r3
  8084dc:	a009883a 	mov	r4,r20
  8084e0:	880b883a 	mov	r5,r17
  8084e4:	080332c0 	call	80332c <__adddf3>
  8084e8:	1009883a 	mov	r4,r2
  8084ec:	180b883a 	mov	r5,r3
  8084f0:	1029883a 	mov	r20,r2
  8084f4:	1823883a 	mov	r17,r3
  8084f8:	08056380 	call	805638 <__fixdfsi>
  8084fc:	000d883a 	mov	r6,zero
  808500:	000f883a 	mov	r7,zero
  808504:	a009883a 	mov	r4,r20
  808508:	880b883a 	mov	r5,r17
  80850c:	d8800515 	stw	r2,20(sp)
  808510:	080fbb40 	call	80fbb4 <__ledf2>
  808514:	10028716 	blt	r2,zero,808f34 <_dtoa_r+0xc88>
  808518:	d8c00517 	ldw	r3,20(sp)
  80851c:	00800584 	movi	r2,22
  808520:	10c27536 	bltu	r2,r3,808ef8 <_dtoa_r+0xc4c>
  808524:	180490fa 	slli	r2,r3,3
  808528:	00c02074 	movhi	r3,129
  80852c:	18ca6804 	addi	r3,r3,10656
  808530:	1885883a 	add	r2,r3,r2
  808534:	11000017 	ldw	r4,0(r2)
  808538:	11400117 	ldw	r5,4(r2)
  80853c:	900d883a 	mov	r6,r18
  808540:	980f883a 	mov	r7,r19
  808544:	08045480 	call	804548 <__gedf2>
  808548:	00828d0e 	bge	zero,r2,808f80 <_dtoa_r+0xcd4>
  80854c:	d9000517 	ldw	r4,20(sp)
  808550:	d8000e15 	stw	zero,56(sp)
  808554:	213fffc4 	addi	r4,r4,-1
  808558:	d9000515 	stw	r4,20(sp)
  80855c:	b42dc83a 	sub	r22,r22,r16
  808560:	b5bfffc4 	addi	r22,r22,-1
  808564:	b0026f16 	blt	r22,zero,808f24 <_dtoa_r+0xc78>
  808568:	d8000815 	stw	zero,32(sp)
  80856c:	d9c00517 	ldw	r7,20(sp)
  808570:	38026416 	blt	r7,zero,808f04 <_dtoa_r+0xc58>
  808574:	b1ed883a 	add	r22,r22,r7
  808578:	d9c00d15 	stw	r7,52(sp)
  80857c:	d8000a15 	stw	zero,40(sp)
  808580:	d9800317 	ldw	r6,12(sp)
  808584:	00800244 	movi	r2,9
  808588:	11811436 	bltu	r2,r6,8089dc <_dtoa_r+0x730>
  80858c:	00800144 	movi	r2,5
  808590:	1184e10e 	bge	r2,r6,809918 <_dtoa_r+0x166c>
  808594:	31bfff04 	addi	r6,r6,-4
  808598:	d9800315 	stw	r6,12(sp)
  80859c:	0023883a 	mov	r17,zero
  8085a0:	d9800317 	ldw	r6,12(sp)
  8085a4:	008000c4 	movi	r2,3
  8085a8:	30836726 	beq	r6,r2,809348 <_dtoa_r+0x109c>
  8085ac:	1183410e 	bge	r2,r6,8092b4 <_dtoa_r+0x1008>
  8085b0:	d9c00317 	ldw	r7,12(sp)
  8085b4:	00800104 	movi	r2,4
  8085b8:	38827c26 	beq	r7,r2,808fac <_dtoa_r+0xd00>
  8085bc:	00800144 	movi	r2,5
  8085c0:	3884c41e 	bne	r7,r2,8098d4 <_dtoa_r+0x1628>
  8085c4:	00800044 	movi	r2,1
  8085c8:	d8800b15 	stw	r2,44(sp)
  8085cc:	d8c00517 	ldw	r3,20(sp)
  8085d0:	d9002217 	ldw	r4,136(sp)
  8085d4:	1907883a 	add	r3,r3,r4
  8085d8:	19800044 	addi	r6,r3,1
  8085dc:	d8c00c15 	stw	r3,48(sp)
  8085e0:	d9800615 	stw	r6,24(sp)
  8085e4:	0183a40e 	bge	zero,r6,809478 <_dtoa_r+0x11cc>
  8085e8:	d9800617 	ldw	r6,24(sp)
  8085ec:	3021883a 	mov	r16,r6
  8085f0:	e0001115 	stw	zero,68(fp)
  8085f4:	008005c4 	movi	r2,23
  8085f8:	1184c92e 	bgeu	r2,r6,809920 <_dtoa_r+0x1674>
  8085fc:	00c00044 	movi	r3,1
  808600:	00800104 	movi	r2,4
  808604:	1085883a 	add	r2,r2,r2
  808608:	11000504 	addi	r4,r2,20
  80860c:	180b883a 	mov	r5,r3
  808610:	18c00044 	addi	r3,r3,1
  808614:	313ffb2e 	bgeu	r6,r4,808604 <__alt_data_end+0xff808604>
  808618:	e1401115 	stw	r5,68(fp)
  80861c:	e009883a 	mov	r4,fp
  808620:	080b9480 	call	80b948 <_Balloc>
  808624:	d8800715 	stw	r2,28(sp)
  808628:	e0801015 	stw	r2,64(fp)
  80862c:	00800384 	movi	r2,14
  808630:	1400f736 	bltu	r2,r16,808a10 <_dtoa_r+0x764>
  808634:	8800f626 	beq	r17,zero,808a10 <_dtoa_r+0x764>
  808638:	d9c00517 	ldw	r7,20(sp)
  80863c:	01c39a0e 	bge	zero,r7,8094a8 <_dtoa_r+0x11fc>
  808640:	388003cc 	andi	r2,r7,15
  808644:	100490fa 	slli	r2,r2,3
  808648:	382bd13a 	srai	r21,r7,4
  80864c:	00c02074 	movhi	r3,129
  808650:	18ca6804 	addi	r3,r3,10656
  808654:	1885883a 	add	r2,r3,r2
  808658:	a8c0040c 	andi	r3,r21,16
  80865c:	12400017 	ldw	r9,0(r2)
  808660:	12000117 	ldw	r8,4(r2)
  808664:	18037926 	beq	r3,zero,80944c <_dtoa_r+0x11a0>
  808668:	00802074 	movhi	r2,129
  80866c:	108a5e04 	addi	r2,r2,10616
  808670:	11800817 	ldw	r6,32(r2)
  808674:	11c00917 	ldw	r7,36(r2)
  808678:	9009883a 	mov	r4,r18
  80867c:	980b883a 	mov	r5,r19
  808680:	da001715 	stw	r8,92(sp)
  808684:	da401615 	stw	r9,88(sp)
  808688:	0803bd80 	call	803bd8 <__divdf3>
  80868c:	da001717 	ldw	r8,92(sp)
  808690:	da401617 	ldw	r9,88(sp)
  808694:	ad4003cc 	andi	r21,r21,15
  808698:	040000c4 	movi	r16,3
  80869c:	1023883a 	mov	r17,r2
  8086a0:	1829883a 	mov	r20,r3
  8086a4:	a8001126 	beq	r21,zero,8086ec <_dtoa_r+0x440>
  8086a8:	05c02074 	movhi	r23,129
  8086ac:	bdca5e04 	addi	r23,r23,10616
  8086b0:	4805883a 	mov	r2,r9
  8086b4:	4007883a 	mov	r3,r8
  8086b8:	a980004c 	andi	r6,r21,1
  8086bc:	1009883a 	mov	r4,r2
  8086c0:	a82bd07a 	srai	r21,r21,1
  8086c4:	180b883a 	mov	r5,r3
  8086c8:	30000426 	beq	r6,zero,8086dc <_dtoa_r+0x430>
  8086cc:	b9800017 	ldw	r6,0(r23)
  8086d0:	b9c00117 	ldw	r7,4(r23)
  8086d4:	84000044 	addi	r16,r16,1
  8086d8:	08046240 	call	804624 <__muldf3>
  8086dc:	bdc00204 	addi	r23,r23,8
  8086e0:	a83ff51e 	bne	r21,zero,8086b8 <__alt_data_end+0xff8086b8>
  8086e4:	1013883a 	mov	r9,r2
  8086e8:	1811883a 	mov	r8,r3
  8086ec:	480d883a 	mov	r6,r9
  8086f0:	400f883a 	mov	r7,r8
  8086f4:	8809883a 	mov	r4,r17
  8086f8:	a00b883a 	mov	r5,r20
  8086fc:	0803bd80 	call	803bd8 <__divdf3>
  808700:	d8800f15 	stw	r2,60(sp)
  808704:	d8c01015 	stw	r3,64(sp)
  808708:	d8c00e17 	ldw	r3,56(sp)
  80870c:	18000626 	beq	r3,zero,808728 <_dtoa_r+0x47c>
  808710:	d9000f17 	ldw	r4,60(sp)
  808714:	d9401017 	ldw	r5,64(sp)
  808718:	000d883a 	mov	r6,zero
  80871c:	01cffc34 	movhi	r7,16368
  808720:	080fbb40 	call	80fbb4 <__ledf2>
  808724:	10040b16 	blt	r2,zero,809754 <_dtoa_r+0x14a8>
  808728:	8009883a 	mov	r4,r16
  80872c:	08056b80 	call	8056b8 <__floatsidf>
  808730:	d9800f17 	ldw	r6,60(sp)
  808734:	d9c01017 	ldw	r7,64(sp)
  808738:	1009883a 	mov	r4,r2
  80873c:	180b883a 	mov	r5,r3
  808740:	08046240 	call	804624 <__muldf3>
  808744:	000d883a 	mov	r6,zero
  808748:	01d00734 	movhi	r7,16412
  80874c:	1009883a 	mov	r4,r2
  808750:	180b883a 	mov	r5,r3
  808754:	080332c0 	call	80332c <__adddf3>
  808758:	1021883a 	mov	r16,r2
  80875c:	d8800617 	ldw	r2,24(sp)
  808760:	047f3034 	movhi	r17,64704
  808764:	1c63883a 	add	r17,r3,r17
  808768:	10031826 	beq	r2,zero,8093cc <_dtoa_r+0x1120>
  80876c:	d8c00517 	ldw	r3,20(sp)
  808770:	db000617 	ldw	r12,24(sp)
  808774:	d8c01315 	stw	r3,76(sp)
  808778:	d9000b17 	ldw	r4,44(sp)
  80877c:	20038f26 	beq	r4,zero,8095bc <_dtoa_r+0x1310>
  808780:	60bfffc4 	addi	r2,r12,-1
  808784:	100490fa 	slli	r2,r2,3
  808788:	00c02074 	movhi	r3,129
  80878c:	18ca6804 	addi	r3,r3,10656
  808790:	1885883a 	add	r2,r3,r2
  808794:	11800017 	ldw	r6,0(r2)
  808798:	11c00117 	ldw	r7,4(r2)
  80879c:	d8800717 	ldw	r2,28(sp)
  8087a0:	0009883a 	mov	r4,zero
  8087a4:	014ff834 	movhi	r5,16352
  8087a8:	db001615 	stw	r12,88(sp)
  8087ac:	15c00044 	addi	r23,r2,1
  8087b0:	0803bd80 	call	803bd8 <__divdf3>
  8087b4:	800d883a 	mov	r6,r16
  8087b8:	880f883a 	mov	r7,r17
  8087bc:	1009883a 	mov	r4,r2
  8087c0:	180b883a 	mov	r5,r3
  8087c4:	0804d3c0 	call	804d3c <__subdf3>
  8087c8:	d9401017 	ldw	r5,64(sp)
  8087cc:	d9000f17 	ldw	r4,60(sp)
  8087d0:	102b883a 	mov	r21,r2
  8087d4:	d8c01215 	stw	r3,72(sp)
  8087d8:	08056380 	call	805638 <__fixdfsi>
  8087dc:	1009883a 	mov	r4,r2
  8087e0:	1029883a 	mov	r20,r2
  8087e4:	08056b80 	call	8056b8 <__floatsidf>
  8087e8:	d9000f17 	ldw	r4,60(sp)
  8087ec:	d9401017 	ldw	r5,64(sp)
  8087f0:	100d883a 	mov	r6,r2
  8087f4:	180f883a 	mov	r7,r3
  8087f8:	0804d3c0 	call	804d3c <__subdf3>
  8087fc:	1823883a 	mov	r17,r3
  808800:	d8c00717 	ldw	r3,28(sp)
  808804:	d9401217 	ldw	r5,72(sp)
  808808:	a2000c04 	addi	r8,r20,48
  80880c:	1021883a 	mov	r16,r2
  808810:	1a000005 	stb	r8,0(r3)
  808814:	800d883a 	mov	r6,r16
  808818:	880f883a 	mov	r7,r17
  80881c:	a809883a 	mov	r4,r21
  808820:	4029883a 	mov	r20,r8
  808824:	08045480 	call	804548 <__gedf2>
  808828:	00841d16 	blt	zero,r2,8098a0 <_dtoa_r+0x15f4>
  80882c:	800d883a 	mov	r6,r16
  808830:	880f883a 	mov	r7,r17
  808834:	0009883a 	mov	r4,zero
  808838:	014ffc34 	movhi	r5,16368
  80883c:	0804d3c0 	call	804d3c <__subdf3>
  808840:	d9401217 	ldw	r5,72(sp)
  808844:	100d883a 	mov	r6,r2
  808848:	180f883a 	mov	r7,r3
  80884c:	a809883a 	mov	r4,r21
  808850:	08045480 	call	804548 <__gedf2>
  808854:	db001617 	ldw	r12,88(sp)
  808858:	00840e16 	blt	zero,r2,809894 <_dtoa_r+0x15e8>
  80885c:	00800044 	movi	r2,1
  808860:	13006b0e 	bge	r2,r12,808a10 <_dtoa_r+0x764>
  808864:	d9000717 	ldw	r4,28(sp)
  808868:	dd800f15 	stw	r22,60(sp)
  80886c:	dcc01015 	stw	r19,64(sp)
  808870:	2319883a 	add	r12,r4,r12
  808874:	dcc01217 	ldw	r19,72(sp)
  808878:	602d883a 	mov	r22,r12
  80887c:	dc801215 	stw	r18,72(sp)
  808880:	b825883a 	mov	r18,r23
  808884:	00000906 	br	8088ac <_dtoa_r+0x600>
  808888:	0804d3c0 	call	804d3c <__subdf3>
  80888c:	a80d883a 	mov	r6,r21
  808890:	980f883a 	mov	r7,r19
  808894:	1009883a 	mov	r4,r2
  808898:	180b883a 	mov	r5,r3
  80889c:	080fbb40 	call	80fbb4 <__ledf2>
  8088a0:	1003e816 	blt	r2,zero,809844 <_dtoa_r+0x1598>
  8088a4:	b825883a 	mov	r18,r23
  8088a8:	bd83e926 	beq	r23,r22,809850 <_dtoa_r+0x15a4>
  8088ac:	a809883a 	mov	r4,r21
  8088b0:	980b883a 	mov	r5,r19
  8088b4:	000d883a 	mov	r6,zero
  8088b8:	01d00934 	movhi	r7,16420
  8088bc:	08046240 	call	804624 <__muldf3>
  8088c0:	000d883a 	mov	r6,zero
  8088c4:	01d00934 	movhi	r7,16420
  8088c8:	8009883a 	mov	r4,r16
  8088cc:	880b883a 	mov	r5,r17
  8088d0:	102b883a 	mov	r21,r2
  8088d4:	1827883a 	mov	r19,r3
  8088d8:	08046240 	call	804624 <__muldf3>
  8088dc:	180b883a 	mov	r5,r3
  8088e0:	1009883a 	mov	r4,r2
  8088e4:	1821883a 	mov	r16,r3
  8088e8:	1023883a 	mov	r17,r2
  8088ec:	08056380 	call	805638 <__fixdfsi>
  8088f0:	1009883a 	mov	r4,r2
  8088f4:	1029883a 	mov	r20,r2
  8088f8:	08056b80 	call	8056b8 <__floatsidf>
  8088fc:	8809883a 	mov	r4,r17
  808900:	800b883a 	mov	r5,r16
  808904:	100d883a 	mov	r6,r2
  808908:	180f883a 	mov	r7,r3
  80890c:	0804d3c0 	call	804d3c <__subdf3>
  808910:	a5000c04 	addi	r20,r20,48
  808914:	a80d883a 	mov	r6,r21
  808918:	980f883a 	mov	r7,r19
  80891c:	1009883a 	mov	r4,r2
  808920:	180b883a 	mov	r5,r3
  808924:	95000005 	stb	r20,0(r18)
  808928:	1021883a 	mov	r16,r2
  80892c:	1823883a 	mov	r17,r3
  808930:	080fbb40 	call	80fbb4 <__ledf2>
  808934:	bdc00044 	addi	r23,r23,1
  808938:	800d883a 	mov	r6,r16
  80893c:	880f883a 	mov	r7,r17
  808940:	0009883a 	mov	r4,zero
  808944:	014ffc34 	movhi	r5,16368
  808948:	103fcf0e 	bge	r2,zero,808888 <__alt_data_end+0xff808888>
  80894c:	d8c01317 	ldw	r3,76(sp)
  808950:	d8c00515 	stw	r3,20(sp)
  808954:	d9400917 	ldw	r5,36(sp)
  808958:	e009883a 	mov	r4,fp
  80895c:	080b9f00 	call	80b9f0 <_Bfree>
  808960:	d9000517 	ldw	r4,20(sp)
  808964:	d9802317 	ldw	r6,140(sp)
  808968:	d9c02517 	ldw	r7,148(sp)
  80896c:	b8000005 	stb	zero,0(r23)
  808970:	20800044 	addi	r2,r4,1
  808974:	30800015 	stw	r2,0(r6)
  808978:	3802aa26 	beq	r7,zero,809424 <_dtoa_r+0x1178>
  80897c:	3dc00015 	stw	r23,0(r7)
  808980:	d8800717 	ldw	r2,28(sp)
  808984:	003e7906 	br	80836c <__alt_data_end+0xff80836c>
  808988:	00800434 	movhi	r2,16
  80898c:	10bfffc4 	addi	r2,r2,-1
  808990:	88a2703a 	and	r17,r17,r2
  808994:	883e851e 	bne	r17,zero,8083ac <__alt_data_end+0xff8083ac>
  808998:	00802074 	movhi	r2,129
  80899c:	108a4904 	addi	r2,r2,10532
  8089a0:	003e8406 	br	8083b4 <__alt_data_end+0xff8083b4>
  8089a4:	10c00204 	addi	r3,r2,8
  8089a8:	003e8706 	br	8083c8 <__alt_data_end+0xff8083c8>
  8089ac:	01400434 	movhi	r5,16
  8089b0:	297fffc4 	addi	r5,r5,-1
  8089b4:	994a703a 	and	r5,r19,r5
  8089b8:	9009883a 	mov	r4,r18
  8089bc:	843f0044 	addi	r16,r16,-1023
  8089c0:	294ffc34 	orhi	r5,r5,16368
  8089c4:	dd800217 	ldw	r22,8(sp)
  8089c8:	d8001115 	stw	zero,68(sp)
  8089cc:	003ea506 	br	808464 <__alt_data_end+0xff808464>
  8089d0:	00802074 	movhi	r2,129
  8089d4:	108a4004 	addi	r2,r2,10496
  8089d8:	003e6406 	br	80836c <__alt_data_end+0xff80836c>
  8089dc:	e0001115 	stw	zero,68(fp)
  8089e0:	000b883a 	mov	r5,zero
  8089e4:	e009883a 	mov	r4,fp
  8089e8:	080b9480 	call	80b948 <_Balloc>
  8089ec:	01bfffc4 	movi	r6,-1
  8089f0:	01c00044 	movi	r7,1
  8089f4:	d8800715 	stw	r2,28(sp)
  8089f8:	d9800c15 	stw	r6,48(sp)
  8089fc:	e0801015 	stw	r2,64(fp)
  808a00:	d8000315 	stw	zero,12(sp)
  808a04:	d9c00b15 	stw	r7,44(sp)
  808a08:	d9800615 	stw	r6,24(sp)
  808a0c:	d8002215 	stw	zero,136(sp)
  808a10:	d8800117 	ldw	r2,4(sp)
  808a14:	10008916 	blt	r2,zero,808c3c <_dtoa_r+0x990>
  808a18:	d9000517 	ldw	r4,20(sp)
  808a1c:	00c00384 	movi	r3,14
  808a20:	19008616 	blt	r3,r4,808c3c <_dtoa_r+0x990>
  808a24:	200490fa 	slli	r2,r4,3
  808a28:	00c02074 	movhi	r3,129
  808a2c:	d9802217 	ldw	r6,136(sp)
  808a30:	18ca6804 	addi	r3,r3,10656
  808a34:	1885883a 	add	r2,r3,r2
  808a38:	14000017 	ldw	r16,0(r2)
  808a3c:	14400117 	ldw	r17,4(r2)
  808a40:	30016316 	blt	r6,zero,808fd0 <_dtoa_r+0xd24>
  808a44:	800d883a 	mov	r6,r16
  808a48:	880f883a 	mov	r7,r17
  808a4c:	9009883a 	mov	r4,r18
  808a50:	980b883a 	mov	r5,r19
  808a54:	0803bd80 	call	803bd8 <__divdf3>
  808a58:	180b883a 	mov	r5,r3
  808a5c:	1009883a 	mov	r4,r2
  808a60:	08056380 	call	805638 <__fixdfsi>
  808a64:	1009883a 	mov	r4,r2
  808a68:	102b883a 	mov	r21,r2
  808a6c:	08056b80 	call	8056b8 <__floatsidf>
  808a70:	800d883a 	mov	r6,r16
  808a74:	880f883a 	mov	r7,r17
  808a78:	1009883a 	mov	r4,r2
  808a7c:	180b883a 	mov	r5,r3
  808a80:	08046240 	call	804624 <__muldf3>
  808a84:	100d883a 	mov	r6,r2
  808a88:	180f883a 	mov	r7,r3
  808a8c:	9009883a 	mov	r4,r18
  808a90:	980b883a 	mov	r5,r19
  808a94:	0804d3c0 	call	804d3c <__subdf3>
  808a98:	d9c00717 	ldw	r7,28(sp)
  808a9c:	1009883a 	mov	r4,r2
  808aa0:	a8800c04 	addi	r2,r21,48
  808aa4:	38800005 	stb	r2,0(r7)
  808aa8:	3dc00044 	addi	r23,r7,1
  808aac:	d9c00617 	ldw	r7,24(sp)
  808ab0:	01800044 	movi	r6,1
  808ab4:	180b883a 	mov	r5,r3
  808ab8:	2005883a 	mov	r2,r4
  808abc:	39803826 	beq	r7,r6,808ba0 <_dtoa_r+0x8f4>
  808ac0:	000d883a 	mov	r6,zero
  808ac4:	01d00934 	movhi	r7,16420
  808ac8:	08046240 	call	804624 <__muldf3>
  808acc:	000d883a 	mov	r6,zero
  808ad0:	000f883a 	mov	r7,zero
  808ad4:	1009883a 	mov	r4,r2
  808ad8:	180b883a 	mov	r5,r3
  808adc:	1025883a 	mov	r18,r2
  808ae0:	1827883a 	mov	r19,r3
  808ae4:	08044c00 	call	8044c0 <__eqdf2>
  808ae8:	103f9a26 	beq	r2,zero,808954 <__alt_data_end+0xff808954>
  808aec:	d9c00617 	ldw	r7,24(sp)
  808af0:	d8c00717 	ldw	r3,28(sp)
  808af4:	b829883a 	mov	r20,r23
  808af8:	38bfffc4 	addi	r2,r7,-1
  808afc:	18ad883a 	add	r22,r3,r2
  808b00:	00000a06 	br	808b2c <_dtoa_r+0x880>
  808b04:	08046240 	call	804624 <__muldf3>
  808b08:	000d883a 	mov	r6,zero
  808b0c:	000f883a 	mov	r7,zero
  808b10:	1009883a 	mov	r4,r2
  808b14:	180b883a 	mov	r5,r3
  808b18:	1025883a 	mov	r18,r2
  808b1c:	1827883a 	mov	r19,r3
  808b20:	b829883a 	mov	r20,r23
  808b24:	08044c00 	call	8044c0 <__eqdf2>
  808b28:	103f8a26 	beq	r2,zero,808954 <__alt_data_end+0xff808954>
  808b2c:	800d883a 	mov	r6,r16
  808b30:	880f883a 	mov	r7,r17
  808b34:	9009883a 	mov	r4,r18
  808b38:	980b883a 	mov	r5,r19
  808b3c:	0803bd80 	call	803bd8 <__divdf3>
  808b40:	180b883a 	mov	r5,r3
  808b44:	1009883a 	mov	r4,r2
  808b48:	08056380 	call	805638 <__fixdfsi>
  808b4c:	1009883a 	mov	r4,r2
  808b50:	102b883a 	mov	r21,r2
  808b54:	08056b80 	call	8056b8 <__floatsidf>
  808b58:	800d883a 	mov	r6,r16
  808b5c:	880f883a 	mov	r7,r17
  808b60:	1009883a 	mov	r4,r2
  808b64:	180b883a 	mov	r5,r3
  808b68:	08046240 	call	804624 <__muldf3>
  808b6c:	100d883a 	mov	r6,r2
  808b70:	180f883a 	mov	r7,r3
  808b74:	9009883a 	mov	r4,r18
  808b78:	980b883a 	mov	r5,r19
  808b7c:	0804d3c0 	call	804d3c <__subdf3>
  808b80:	aa000c04 	addi	r8,r21,48
  808b84:	a2000005 	stb	r8,0(r20)
  808b88:	000d883a 	mov	r6,zero
  808b8c:	01d00934 	movhi	r7,16420
  808b90:	1009883a 	mov	r4,r2
  808b94:	180b883a 	mov	r5,r3
  808b98:	a5c00044 	addi	r23,r20,1
  808b9c:	b53fd91e 	bne	r22,r20,808b04 <__alt_data_end+0xff808b04>
  808ba0:	100d883a 	mov	r6,r2
  808ba4:	180f883a 	mov	r7,r3
  808ba8:	1009883a 	mov	r4,r2
  808bac:	180b883a 	mov	r5,r3
  808bb0:	080332c0 	call	80332c <__adddf3>
  808bb4:	100d883a 	mov	r6,r2
  808bb8:	180f883a 	mov	r7,r3
  808bbc:	8009883a 	mov	r4,r16
  808bc0:	880b883a 	mov	r5,r17
  808bc4:	1027883a 	mov	r19,r2
  808bc8:	1825883a 	mov	r18,r3
  808bcc:	080fbb40 	call	80fbb4 <__ledf2>
  808bd0:	10000816 	blt	r2,zero,808bf4 <_dtoa_r+0x948>
  808bd4:	980d883a 	mov	r6,r19
  808bd8:	900f883a 	mov	r7,r18
  808bdc:	8009883a 	mov	r4,r16
  808be0:	880b883a 	mov	r5,r17
  808be4:	08044c00 	call	8044c0 <__eqdf2>
  808be8:	103f5a1e 	bne	r2,zero,808954 <__alt_data_end+0xff808954>
  808bec:	ad40004c 	andi	r21,r21,1
  808bf0:	a83f5826 	beq	r21,zero,808954 <__alt_data_end+0xff808954>
  808bf4:	bd3fffc3 	ldbu	r20,-1(r23)
  808bf8:	b8bfffc4 	addi	r2,r23,-1
  808bfc:	1007883a 	mov	r3,r2
  808c00:	01400e44 	movi	r5,57
  808c04:	d9800717 	ldw	r6,28(sp)
  808c08:	00000506 	br	808c20 <_dtoa_r+0x974>
  808c0c:	18ffffc4 	addi	r3,r3,-1
  808c10:	11824726 	beq	r2,r6,809530 <_dtoa_r+0x1284>
  808c14:	1d000003 	ldbu	r20,0(r3)
  808c18:	102f883a 	mov	r23,r2
  808c1c:	10bfffc4 	addi	r2,r2,-1
  808c20:	a1003fcc 	andi	r4,r20,255
  808c24:	2100201c 	xori	r4,r4,128
  808c28:	213fe004 	addi	r4,r4,-128
  808c2c:	217ff726 	beq	r4,r5,808c0c <__alt_data_end+0xff808c0c>
  808c30:	a2000044 	addi	r8,r20,1
  808c34:	12000005 	stb	r8,0(r2)
  808c38:	003f4606 	br	808954 <__alt_data_end+0xff808954>
  808c3c:	d9000b17 	ldw	r4,44(sp)
  808c40:	2000c826 	beq	r4,zero,808f64 <_dtoa_r+0xcb8>
  808c44:	d9800317 	ldw	r6,12(sp)
  808c48:	00c00044 	movi	r3,1
  808c4c:	1980f90e 	bge	r3,r6,809034 <_dtoa_r+0xd88>
  808c50:	d8800617 	ldw	r2,24(sp)
  808c54:	d8c00a17 	ldw	r3,40(sp)
  808c58:	157fffc4 	addi	r21,r2,-1
  808c5c:	1d41f316 	blt	r3,r21,80942c <_dtoa_r+0x1180>
  808c60:	1d6bc83a 	sub	r21,r3,r21
  808c64:	d9c00617 	ldw	r7,24(sp)
  808c68:	3802aa16 	blt	r7,zero,809714 <_dtoa_r+0x1468>
  808c6c:	dd000817 	ldw	r20,32(sp)
  808c70:	d8800617 	ldw	r2,24(sp)
  808c74:	d8c00817 	ldw	r3,32(sp)
  808c78:	01400044 	movi	r5,1
  808c7c:	e009883a 	mov	r4,fp
  808c80:	1887883a 	add	r3,r3,r2
  808c84:	d8c00815 	stw	r3,32(sp)
  808c88:	b0ad883a 	add	r22,r22,r2
  808c8c:	080bd540 	call	80bd54 <__i2b>
  808c90:	1023883a 	mov	r17,r2
  808c94:	a0000826 	beq	r20,zero,808cb8 <_dtoa_r+0xa0c>
  808c98:	0580070e 	bge	zero,r22,808cb8 <_dtoa_r+0xa0c>
  808c9c:	a005883a 	mov	r2,r20
  808ca0:	b500b916 	blt	r22,r20,808f88 <_dtoa_r+0xcdc>
  808ca4:	d9000817 	ldw	r4,32(sp)
  808ca8:	a0a9c83a 	sub	r20,r20,r2
  808cac:	b0adc83a 	sub	r22,r22,r2
  808cb0:	2089c83a 	sub	r4,r4,r2
  808cb4:	d9000815 	stw	r4,32(sp)
  808cb8:	d9800a17 	ldw	r6,40(sp)
  808cbc:	0181810e 	bge	zero,r6,8092c4 <_dtoa_r+0x1018>
  808cc0:	d9c00b17 	ldw	r7,44(sp)
  808cc4:	3800b326 	beq	r7,zero,808f94 <_dtoa_r+0xce8>
  808cc8:	a800b226 	beq	r21,zero,808f94 <_dtoa_r+0xce8>
  808ccc:	880b883a 	mov	r5,r17
  808cd0:	a80d883a 	mov	r6,r21
  808cd4:	e009883a 	mov	r4,fp
  808cd8:	080bf880 	call	80bf88 <__pow5mult>
  808cdc:	d9800917 	ldw	r6,36(sp)
  808ce0:	100b883a 	mov	r5,r2
  808ce4:	e009883a 	mov	r4,fp
  808ce8:	1023883a 	mov	r17,r2
  808cec:	080bd900 	call	80bd90 <__multiply>
  808cf0:	1021883a 	mov	r16,r2
  808cf4:	d8800a17 	ldw	r2,40(sp)
  808cf8:	d9400917 	ldw	r5,36(sp)
  808cfc:	e009883a 	mov	r4,fp
  808d00:	1545c83a 	sub	r2,r2,r21
  808d04:	d8800a15 	stw	r2,40(sp)
  808d08:	080b9f00 	call	80b9f0 <_Bfree>
  808d0c:	d8c00a17 	ldw	r3,40(sp)
  808d10:	18009f1e 	bne	r3,zero,808f90 <_dtoa_r+0xce4>
  808d14:	05c00044 	movi	r23,1
  808d18:	e009883a 	mov	r4,fp
  808d1c:	b80b883a 	mov	r5,r23
  808d20:	080bd540 	call	80bd54 <__i2b>
  808d24:	d9000d17 	ldw	r4,52(sp)
  808d28:	102b883a 	mov	r21,r2
  808d2c:	2000ce26 	beq	r4,zero,809068 <_dtoa_r+0xdbc>
  808d30:	200d883a 	mov	r6,r4
  808d34:	100b883a 	mov	r5,r2
  808d38:	e009883a 	mov	r4,fp
  808d3c:	080bf880 	call	80bf88 <__pow5mult>
  808d40:	d9800317 	ldw	r6,12(sp)
  808d44:	102b883a 	mov	r21,r2
  808d48:	b981810e 	bge	r23,r6,809350 <_dtoa_r+0x10a4>
  808d4c:	0027883a 	mov	r19,zero
  808d50:	a8800417 	ldw	r2,16(r21)
  808d54:	05c00804 	movi	r23,32
  808d58:	10800104 	addi	r2,r2,4
  808d5c:	1085883a 	add	r2,r2,r2
  808d60:	1085883a 	add	r2,r2,r2
  808d64:	a885883a 	add	r2,r21,r2
  808d68:	11000017 	ldw	r4,0(r2)
  808d6c:	080bc3c0 	call	80bc3c <__hi0bits>
  808d70:	b885c83a 	sub	r2,r23,r2
  808d74:	1585883a 	add	r2,r2,r22
  808d78:	108007cc 	andi	r2,r2,31
  808d7c:	1000b326 	beq	r2,zero,80904c <_dtoa_r+0xda0>
  808d80:	00c00804 	movi	r3,32
  808d84:	1887c83a 	sub	r3,r3,r2
  808d88:	01000104 	movi	r4,4
  808d8c:	20c2cd0e 	bge	r4,r3,8098c4 <_dtoa_r+0x1618>
  808d90:	00c00704 	movi	r3,28
  808d94:	1885c83a 	sub	r2,r3,r2
  808d98:	d8c00817 	ldw	r3,32(sp)
  808d9c:	a0a9883a 	add	r20,r20,r2
  808da0:	b0ad883a 	add	r22,r22,r2
  808da4:	1887883a 	add	r3,r3,r2
  808da8:	d8c00815 	stw	r3,32(sp)
  808dac:	d9800817 	ldw	r6,32(sp)
  808db0:	0180040e 	bge	zero,r6,808dc4 <_dtoa_r+0xb18>
  808db4:	800b883a 	mov	r5,r16
  808db8:	e009883a 	mov	r4,fp
  808dbc:	080c0c80 	call	80c0c8 <__lshift>
  808dc0:	1021883a 	mov	r16,r2
  808dc4:	0580050e 	bge	zero,r22,808ddc <_dtoa_r+0xb30>
  808dc8:	a80b883a 	mov	r5,r21
  808dcc:	b00d883a 	mov	r6,r22
  808dd0:	e009883a 	mov	r4,fp
  808dd4:	080c0c80 	call	80c0c8 <__lshift>
  808dd8:	102b883a 	mov	r21,r2
  808ddc:	d9c00e17 	ldw	r7,56(sp)
  808de0:	3801211e 	bne	r7,zero,809268 <_dtoa_r+0xfbc>
  808de4:	d9800617 	ldw	r6,24(sp)
  808de8:	0181380e 	bge	zero,r6,8092cc <_dtoa_r+0x1020>
  808dec:	d8c00b17 	ldw	r3,44(sp)
  808df0:	1800ab1e 	bne	r3,zero,8090a0 <_dtoa_r+0xdf4>
  808df4:	dc800717 	ldw	r18,28(sp)
  808df8:	dcc00617 	ldw	r19,24(sp)
  808dfc:	9029883a 	mov	r20,r18
  808e00:	00000206 	br	808e0c <_dtoa_r+0xb60>
  808e04:	080ba180 	call	80ba18 <__multadd>
  808e08:	1021883a 	mov	r16,r2
  808e0c:	a80b883a 	mov	r5,r21
  808e10:	8009883a 	mov	r4,r16
  808e14:	08080ac0 	call	8080ac <quorem>
  808e18:	10800c04 	addi	r2,r2,48
  808e1c:	90800005 	stb	r2,0(r18)
  808e20:	94800044 	addi	r18,r18,1
  808e24:	9507c83a 	sub	r3,r18,r20
  808e28:	000f883a 	mov	r7,zero
  808e2c:	01800284 	movi	r6,10
  808e30:	800b883a 	mov	r5,r16
  808e34:	e009883a 	mov	r4,fp
  808e38:	1cfff216 	blt	r3,r19,808e04 <__alt_data_end+0xff808e04>
  808e3c:	1011883a 	mov	r8,r2
  808e40:	d8800617 	ldw	r2,24(sp)
  808e44:	0082370e 	bge	zero,r2,809724 <_dtoa_r+0x1478>
  808e48:	d9000717 	ldw	r4,28(sp)
  808e4c:	0025883a 	mov	r18,zero
  808e50:	20af883a 	add	r23,r4,r2
  808e54:	01800044 	movi	r6,1
  808e58:	800b883a 	mov	r5,r16
  808e5c:	e009883a 	mov	r4,fp
  808e60:	da001715 	stw	r8,92(sp)
  808e64:	080c0c80 	call	80c0c8 <__lshift>
  808e68:	a80b883a 	mov	r5,r21
  808e6c:	1009883a 	mov	r4,r2
  808e70:	d8800915 	stw	r2,36(sp)
  808e74:	080c2100 	call	80c210 <__mcmp>
  808e78:	da001717 	ldw	r8,92(sp)
  808e7c:	0081800e 	bge	zero,r2,809480 <_dtoa_r+0x11d4>
  808e80:	b93fffc3 	ldbu	r4,-1(r23)
  808e84:	b8bfffc4 	addi	r2,r23,-1
  808e88:	1007883a 	mov	r3,r2
  808e8c:	01800e44 	movi	r6,57
  808e90:	d9c00717 	ldw	r7,28(sp)
  808e94:	00000506 	br	808eac <_dtoa_r+0xc00>
  808e98:	18ffffc4 	addi	r3,r3,-1
  808e9c:	11c12326 	beq	r2,r7,80932c <_dtoa_r+0x1080>
  808ea0:	19000003 	ldbu	r4,0(r3)
  808ea4:	102f883a 	mov	r23,r2
  808ea8:	10bfffc4 	addi	r2,r2,-1
  808eac:	21403fcc 	andi	r5,r4,255
  808eb0:	2940201c 	xori	r5,r5,128
  808eb4:	297fe004 	addi	r5,r5,-128
  808eb8:	29bff726 	beq	r5,r6,808e98 <__alt_data_end+0xff808e98>
  808ebc:	21000044 	addi	r4,r4,1
  808ec0:	11000005 	stb	r4,0(r2)
  808ec4:	a80b883a 	mov	r5,r21
  808ec8:	e009883a 	mov	r4,fp
  808ecc:	080b9f00 	call	80b9f0 <_Bfree>
  808ed0:	883ea026 	beq	r17,zero,808954 <__alt_data_end+0xff808954>
  808ed4:	90000426 	beq	r18,zero,808ee8 <_dtoa_r+0xc3c>
  808ed8:	94400326 	beq	r18,r17,808ee8 <_dtoa_r+0xc3c>
  808edc:	900b883a 	mov	r5,r18
  808ee0:	e009883a 	mov	r4,fp
  808ee4:	080b9f00 	call	80b9f0 <_Bfree>
  808ee8:	880b883a 	mov	r5,r17
  808eec:	e009883a 	mov	r4,fp
  808ef0:	080b9f00 	call	80b9f0 <_Bfree>
  808ef4:	003e9706 	br	808954 <__alt_data_end+0xff808954>
  808ef8:	01800044 	movi	r6,1
  808efc:	d9800e15 	stw	r6,56(sp)
  808f00:	003d9606 	br	80855c <__alt_data_end+0xff80855c>
  808f04:	d8800817 	ldw	r2,32(sp)
  808f08:	d8c00517 	ldw	r3,20(sp)
  808f0c:	d8000d15 	stw	zero,52(sp)
  808f10:	10c5c83a 	sub	r2,r2,r3
  808f14:	00c9c83a 	sub	r4,zero,r3
  808f18:	d8800815 	stw	r2,32(sp)
  808f1c:	d9000a15 	stw	r4,40(sp)
  808f20:	003d9706 	br	808580 <__alt_data_end+0xff808580>
  808f24:	05adc83a 	sub	r22,zero,r22
  808f28:	dd800815 	stw	r22,32(sp)
  808f2c:	002d883a 	mov	r22,zero
  808f30:	003d8e06 	br	80856c <__alt_data_end+0xff80856c>
  808f34:	d9000517 	ldw	r4,20(sp)
  808f38:	08056b80 	call	8056b8 <__floatsidf>
  808f3c:	100d883a 	mov	r6,r2
  808f40:	180f883a 	mov	r7,r3
  808f44:	a009883a 	mov	r4,r20
  808f48:	880b883a 	mov	r5,r17
  808f4c:	08044c00 	call	8044c0 <__eqdf2>
  808f50:	103d7126 	beq	r2,zero,808518 <__alt_data_end+0xff808518>
  808f54:	d9c00517 	ldw	r7,20(sp)
  808f58:	39ffffc4 	addi	r7,r7,-1
  808f5c:	d9c00515 	stw	r7,20(sp)
  808f60:	003d6d06 	br	808518 <__alt_data_end+0xff808518>
  808f64:	dd400a17 	ldw	r21,40(sp)
  808f68:	dd000817 	ldw	r20,32(sp)
  808f6c:	0023883a 	mov	r17,zero
  808f70:	003f4806 	br	808c94 <__alt_data_end+0xff808c94>
  808f74:	10e3c83a 	sub	r17,r2,r3
  808f78:	9448983a 	sll	r4,r18,r17
  808f7c:	003d3206 	br	808448 <__alt_data_end+0xff808448>
  808f80:	d8000e15 	stw	zero,56(sp)
  808f84:	003d7506 	br	80855c <__alt_data_end+0xff80855c>
  808f88:	b005883a 	mov	r2,r22
  808f8c:	003f4506 	br	808ca4 <__alt_data_end+0xff808ca4>
  808f90:	dc000915 	stw	r16,36(sp)
  808f94:	d9800a17 	ldw	r6,40(sp)
  808f98:	d9400917 	ldw	r5,36(sp)
  808f9c:	e009883a 	mov	r4,fp
  808fa0:	080bf880 	call	80bf88 <__pow5mult>
  808fa4:	1021883a 	mov	r16,r2
  808fa8:	003f5a06 	br	808d14 <__alt_data_end+0xff808d14>
  808fac:	01c00044 	movi	r7,1
  808fb0:	d9c00b15 	stw	r7,44(sp)
  808fb4:	d8802217 	ldw	r2,136(sp)
  808fb8:	0081280e 	bge	zero,r2,80945c <_dtoa_r+0x11b0>
  808fbc:	100d883a 	mov	r6,r2
  808fc0:	1021883a 	mov	r16,r2
  808fc4:	d8800c15 	stw	r2,48(sp)
  808fc8:	d8800615 	stw	r2,24(sp)
  808fcc:	003d8806 	br	8085f0 <__alt_data_end+0xff8085f0>
  808fd0:	d8800617 	ldw	r2,24(sp)
  808fd4:	00be9b16 	blt	zero,r2,808a44 <__alt_data_end+0xff808a44>
  808fd8:	10010f1e 	bne	r2,zero,809418 <_dtoa_r+0x116c>
  808fdc:	880b883a 	mov	r5,r17
  808fe0:	000d883a 	mov	r6,zero
  808fe4:	01d00534 	movhi	r7,16404
  808fe8:	8009883a 	mov	r4,r16
  808fec:	08046240 	call	804624 <__muldf3>
  808ff0:	900d883a 	mov	r6,r18
  808ff4:	980f883a 	mov	r7,r19
  808ff8:	1009883a 	mov	r4,r2
  808ffc:	180b883a 	mov	r5,r3
  809000:	08045480 	call	804548 <__gedf2>
  809004:	002b883a 	mov	r21,zero
  809008:	0023883a 	mov	r17,zero
  80900c:	1000bf16 	blt	r2,zero,80930c <_dtoa_r+0x1060>
  809010:	d9802217 	ldw	r6,136(sp)
  809014:	ddc00717 	ldw	r23,28(sp)
  809018:	018c303a 	nor	r6,zero,r6
  80901c:	d9800515 	stw	r6,20(sp)
  809020:	a80b883a 	mov	r5,r21
  809024:	e009883a 	mov	r4,fp
  809028:	080b9f00 	call	80b9f0 <_Bfree>
  80902c:	883e4926 	beq	r17,zero,808954 <__alt_data_end+0xff808954>
  809030:	003fad06 	br	808ee8 <__alt_data_end+0xff808ee8>
  809034:	d9c01117 	ldw	r7,68(sp)
  809038:	3801bc26 	beq	r7,zero,80972c <_dtoa_r+0x1480>
  80903c:	10810cc4 	addi	r2,r2,1075
  809040:	dd400a17 	ldw	r21,40(sp)
  809044:	dd000817 	ldw	r20,32(sp)
  809048:	003f0a06 	br	808c74 <__alt_data_end+0xff808c74>
  80904c:	00800704 	movi	r2,28
  809050:	d9000817 	ldw	r4,32(sp)
  809054:	a0a9883a 	add	r20,r20,r2
  809058:	b0ad883a 	add	r22,r22,r2
  80905c:	2089883a 	add	r4,r4,r2
  809060:	d9000815 	stw	r4,32(sp)
  809064:	003f5106 	br	808dac <__alt_data_end+0xff808dac>
  809068:	d8c00317 	ldw	r3,12(sp)
  80906c:	b8c1fc0e 	bge	r23,r3,809860 <_dtoa_r+0x15b4>
  809070:	0027883a 	mov	r19,zero
  809074:	b805883a 	mov	r2,r23
  809078:	003f3e06 	br	808d74 <__alt_data_end+0xff808d74>
  80907c:	880b883a 	mov	r5,r17
  809080:	e009883a 	mov	r4,fp
  809084:	000f883a 	mov	r7,zero
  809088:	01800284 	movi	r6,10
  80908c:	080ba180 	call	80ba18 <__multadd>
  809090:	d9000c17 	ldw	r4,48(sp)
  809094:	1023883a 	mov	r17,r2
  809098:	0102040e 	bge	zero,r4,8098ac <_dtoa_r+0x1600>
  80909c:	d9000615 	stw	r4,24(sp)
  8090a0:	0500050e 	bge	zero,r20,8090b8 <_dtoa_r+0xe0c>
  8090a4:	880b883a 	mov	r5,r17
  8090a8:	a00d883a 	mov	r6,r20
  8090ac:	e009883a 	mov	r4,fp
  8090b0:	080c0c80 	call	80c0c8 <__lshift>
  8090b4:	1023883a 	mov	r17,r2
  8090b8:	9801241e 	bne	r19,zero,80954c <_dtoa_r+0x12a0>
  8090bc:	8829883a 	mov	r20,r17
  8090c0:	d9000617 	ldw	r4,24(sp)
  8090c4:	dcc00717 	ldw	r19,28(sp)
  8090c8:	9480004c 	andi	r18,r18,1
  8090cc:	20bfffc4 	addi	r2,r4,-1
  8090d0:	9885883a 	add	r2,r19,r2
  8090d4:	d8800415 	stw	r2,16(sp)
  8090d8:	dc800615 	stw	r18,24(sp)
  8090dc:	a80b883a 	mov	r5,r21
  8090e0:	8009883a 	mov	r4,r16
  8090e4:	08080ac0 	call	8080ac <quorem>
  8090e8:	880b883a 	mov	r5,r17
  8090ec:	8009883a 	mov	r4,r16
  8090f0:	102f883a 	mov	r23,r2
  8090f4:	080c2100 	call	80c210 <__mcmp>
  8090f8:	a80b883a 	mov	r5,r21
  8090fc:	a00d883a 	mov	r6,r20
  809100:	e009883a 	mov	r4,fp
  809104:	102d883a 	mov	r22,r2
  809108:	080c2700 	call	80c270 <__mdiff>
  80910c:	1007883a 	mov	r3,r2
  809110:	10800317 	ldw	r2,12(r2)
  809114:	bc800c04 	addi	r18,r23,48
  809118:	180b883a 	mov	r5,r3
  80911c:	10004e1e 	bne	r2,zero,809258 <_dtoa_r+0xfac>
  809120:	8009883a 	mov	r4,r16
  809124:	d8c01615 	stw	r3,88(sp)
  809128:	080c2100 	call	80c210 <__mcmp>
  80912c:	d8c01617 	ldw	r3,88(sp)
  809130:	e009883a 	mov	r4,fp
  809134:	d8801615 	stw	r2,88(sp)
  809138:	180b883a 	mov	r5,r3
  80913c:	080b9f00 	call	80b9f0 <_Bfree>
  809140:	d8801617 	ldw	r2,88(sp)
  809144:	1000041e 	bne	r2,zero,809158 <_dtoa_r+0xeac>
  809148:	d9800317 	ldw	r6,12(sp)
  80914c:	3000021e 	bne	r6,zero,809158 <_dtoa_r+0xeac>
  809150:	d8c00617 	ldw	r3,24(sp)
  809154:	18003726 	beq	r3,zero,809234 <_dtoa_r+0xf88>
  809158:	b0002016 	blt	r22,zero,8091dc <_dtoa_r+0xf30>
  80915c:	b000041e 	bne	r22,zero,809170 <_dtoa_r+0xec4>
  809160:	d9000317 	ldw	r4,12(sp)
  809164:	2000021e 	bne	r4,zero,809170 <_dtoa_r+0xec4>
  809168:	d8c00617 	ldw	r3,24(sp)
  80916c:	18001b26 	beq	r3,zero,8091dc <_dtoa_r+0xf30>
  809170:	00810716 	blt	zero,r2,809590 <_dtoa_r+0x12e4>
  809174:	d8c00417 	ldw	r3,16(sp)
  809178:	9d800044 	addi	r22,r19,1
  80917c:	9c800005 	stb	r18,0(r19)
  809180:	b02f883a 	mov	r23,r22
  809184:	98c10626 	beq	r19,r3,8095a0 <_dtoa_r+0x12f4>
  809188:	800b883a 	mov	r5,r16
  80918c:	000f883a 	mov	r7,zero
  809190:	01800284 	movi	r6,10
  809194:	e009883a 	mov	r4,fp
  809198:	080ba180 	call	80ba18 <__multadd>
  80919c:	1021883a 	mov	r16,r2
  8091a0:	000f883a 	mov	r7,zero
  8091a4:	01800284 	movi	r6,10
  8091a8:	880b883a 	mov	r5,r17
  8091ac:	e009883a 	mov	r4,fp
  8091b0:	8d002526 	beq	r17,r20,809248 <_dtoa_r+0xf9c>
  8091b4:	080ba180 	call	80ba18 <__multadd>
  8091b8:	a00b883a 	mov	r5,r20
  8091bc:	000f883a 	mov	r7,zero
  8091c0:	01800284 	movi	r6,10
  8091c4:	e009883a 	mov	r4,fp
  8091c8:	1023883a 	mov	r17,r2
  8091cc:	080ba180 	call	80ba18 <__multadd>
  8091d0:	1029883a 	mov	r20,r2
  8091d4:	b027883a 	mov	r19,r22
  8091d8:	003fc006 	br	8090dc <__alt_data_end+0xff8090dc>
  8091dc:	9011883a 	mov	r8,r18
  8091e0:	00800e0e 	bge	zero,r2,80921c <_dtoa_r+0xf70>
  8091e4:	800b883a 	mov	r5,r16
  8091e8:	01800044 	movi	r6,1
  8091ec:	e009883a 	mov	r4,fp
  8091f0:	da001715 	stw	r8,92(sp)
  8091f4:	080c0c80 	call	80c0c8 <__lshift>
  8091f8:	a80b883a 	mov	r5,r21
  8091fc:	1009883a 	mov	r4,r2
  809200:	1021883a 	mov	r16,r2
  809204:	080c2100 	call	80c210 <__mcmp>
  809208:	da001717 	ldw	r8,92(sp)
  80920c:	0081960e 	bge	zero,r2,809868 <_dtoa_r+0x15bc>
  809210:	00800e44 	movi	r2,57
  809214:	40817026 	beq	r8,r2,8097d8 <_dtoa_r+0x152c>
  809218:	ba000c44 	addi	r8,r23,49
  80921c:	8825883a 	mov	r18,r17
  809220:	9dc00044 	addi	r23,r19,1
  809224:	9a000005 	stb	r8,0(r19)
  809228:	a023883a 	mov	r17,r20
  80922c:	dc000915 	stw	r16,36(sp)
  809230:	003f2406 	br	808ec4 <__alt_data_end+0xff808ec4>
  809234:	00800e44 	movi	r2,57
  809238:	9011883a 	mov	r8,r18
  80923c:	90816626 	beq	r18,r2,8097d8 <_dtoa_r+0x152c>
  809240:	05bff516 	blt	zero,r22,809218 <__alt_data_end+0xff809218>
  809244:	003ff506 	br	80921c <__alt_data_end+0xff80921c>
  809248:	080ba180 	call	80ba18 <__multadd>
  80924c:	1023883a 	mov	r17,r2
  809250:	1029883a 	mov	r20,r2
  809254:	003fdf06 	br	8091d4 <__alt_data_end+0xff8091d4>
  809258:	e009883a 	mov	r4,fp
  80925c:	080b9f00 	call	80b9f0 <_Bfree>
  809260:	00800044 	movi	r2,1
  809264:	003fbc06 	br	809158 <__alt_data_end+0xff809158>
  809268:	a80b883a 	mov	r5,r21
  80926c:	8009883a 	mov	r4,r16
  809270:	080c2100 	call	80c210 <__mcmp>
  809274:	103edb0e 	bge	r2,zero,808de4 <__alt_data_end+0xff808de4>
  809278:	800b883a 	mov	r5,r16
  80927c:	000f883a 	mov	r7,zero
  809280:	01800284 	movi	r6,10
  809284:	e009883a 	mov	r4,fp
  809288:	080ba180 	call	80ba18 <__multadd>
  80928c:	1021883a 	mov	r16,r2
  809290:	d8800517 	ldw	r2,20(sp)
  809294:	d8c00b17 	ldw	r3,44(sp)
  809298:	10bfffc4 	addi	r2,r2,-1
  80929c:	d8800515 	stw	r2,20(sp)
  8092a0:	183f761e 	bne	r3,zero,80907c <__alt_data_end+0xff80907c>
  8092a4:	d9000c17 	ldw	r4,48(sp)
  8092a8:	0101730e 	bge	zero,r4,809878 <_dtoa_r+0x15cc>
  8092ac:	d9000615 	stw	r4,24(sp)
  8092b0:	003ed006 	br	808df4 <__alt_data_end+0xff808df4>
  8092b4:	00800084 	movi	r2,2
  8092b8:	3081861e 	bne	r6,r2,8098d4 <_dtoa_r+0x1628>
  8092bc:	d8000b15 	stw	zero,44(sp)
  8092c0:	003f3c06 	br	808fb4 <__alt_data_end+0xff808fb4>
  8092c4:	dc000917 	ldw	r16,36(sp)
  8092c8:	003e9206 	br	808d14 <__alt_data_end+0xff808d14>
  8092cc:	d9c00317 	ldw	r7,12(sp)
  8092d0:	00800084 	movi	r2,2
  8092d4:	11fec50e 	bge	r2,r7,808dec <__alt_data_end+0xff808dec>
  8092d8:	d9000617 	ldw	r4,24(sp)
  8092dc:	20013c1e 	bne	r4,zero,8097d0 <_dtoa_r+0x1524>
  8092e0:	a80b883a 	mov	r5,r21
  8092e4:	000f883a 	mov	r7,zero
  8092e8:	01800144 	movi	r6,5
  8092ec:	e009883a 	mov	r4,fp
  8092f0:	080ba180 	call	80ba18 <__multadd>
  8092f4:	100b883a 	mov	r5,r2
  8092f8:	8009883a 	mov	r4,r16
  8092fc:	102b883a 	mov	r21,r2
  809300:	080c2100 	call	80c210 <__mcmp>
  809304:	dc000915 	stw	r16,36(sp)
  809308:	00bf410e 	bge	zero,r2,809010 <__alt_data_end+0xff809010>
  80930c:	d9c00717 	ldw	r7,28(sp)
  809310:	00800c44 	movi	r2,49
  809314:	38800005 	stb	r2,0(r7)
  809318:	d8800517 	ldw	r2,20(sp)
  80931c:	3dc00044 	addi	r23,r7,1
  809320:	10800044 	addi	r2,r2,1
  809324:	d8800515 	stw	r2,20(sp)
  809328:	003f3d06 	br	809020 <__alt_data_end+0xff809020>
  80932c:	d9800517 	ldw	r6,20(sp)
  809330:	d9c00717 	ldw	r7,28(sp)
  809334:	00800c44 	movi	r2,49
  809338:	31800044 	addi	r6,r6,1
  80933c:	d9800515 	stw	r6,20(sp)
  809340:	38800005 	stb	r2,0(r7)
  809344:	003edf06 	br	808ec4 <__alt_data_end+0xff808ec4>
  809348:	d8000b15 	stw	zero,44(sp)
  80934c:	003c9f06 	br	8085cc <__alt_data_end+0xff8085cc>
  809350:	903e7e1e 	bne	r18,zero,808d4c <__alt_data_end+0xff808d4c>
  809354:	00800434 	movhi	r2,16
  809358:	10bfffc4 	addi	r2,r2,-1
  80935c:	9884703a 	and	r2,r19,r2
  809360:	1000ea1e 	bne	r2,zero,80970c <_dtoa_r+0x1460>
  809364:	9cdffc2c 	andhi	r19,r19,32752
  809368:	9800e826 	beq	r19,zero,80970c <_dtoa_r+0x1460>
  80936c:	d9c00817 	ldw	r7,32(sp)
  809370:	b5800044 	addi	r22,r22,1
  809374:	04c00044 	movi	r19,1
  809378:	39c00044 	addi	r7,r7,1
  80937c:	d9c00815 	stw	r7,32(sp)
  809380:	d8800d17 	ldw	r2,52(sp)
  809384:	103e721e 	bne	r2,zero,808d50 <__alt_data_end+0xff808d50>
  809388:	00800044 	movi	r2,1
  80938c:	003e7906 	br	808d74 <__alt_data_end+0xff808d74>
  809390:	8009883a 	mov	r4,r16
  809394:	08056b80 	call	8056b8 <__floatsidf>
  809398:	d9800f17 	ldw	r6,60(sp)
  80939c:	d9c01017 	ldw	r7,64(sp)
  8093a0:	1009883a 	mov	r4,r2
  8093a4:	180b883a 	mov	r5,r3
  8093a8:	08046240 	call	804624 <__muldf3>
  8093ac:	000d883a 	mov	r6,zero
  8093b0:	01d00734 	movhi	r7,16412
  8093b4:	1009883a 	mov	r4,r2
  8093b8:	180b883a 	mov	r5,r3
  8093bc:	080332c0 	call	80332c <__adddf3>
  8093c0:	047f3034 	movhi	r17,64704
  8093c4:	1021883a 	mov	r16,r2
  8093c8:	1c63883a 	add	r17,r3,r17
  8093cc:	d9000f17 	ldw	r4,60(sp)
  8093d0:	d9401017 	ldw	r5,64(sp)
  8093d4:	000d883a 	mov	r6,zero
  8093d8:	01d00534 	movhi	r7,16404
  8093dc:	0804d3c0 	call	804d3c <__subdf3>
  8093e0:	800d883a 	mov	r6,r16
  8093e4:	880f883a 	mov	r7,r17
  8093e8:	1009883a 	mov	r4,r2
  8093ec:	180b883a 	mov	r5,r3
  8093f0:	102b883a 	mov	r21,r2
  8093f4:	1829883a 	mov	r20,r3
  8093f8:	08045480 	call	804548 <__gedf2>
  8093fc:	00806c16 	blt	zero,r2,8095b0 <_dtoa_r+0x1304>
  809400:	89e0003c 	xorhi	r7,r17,32768
  809404:	800d883a 	mov	r6,r16
  809408:	a809883a 	mov	r4,r21
  80940c:	a00b883a 	mov	r5,r20
  809410:	080fbb40 	call	80fbb4 <__ledf2>
  809414:	103d7e0e 	bge	r2,zero,808a10 <__alt_data_end+0xff808a10>
  809418:	002b883a 	mov	r21,zero
  80941c:	0023883a 	mov	r17,zero
  809420:	003efb06 	br	809010 <__alt_data_end+0xff809010>
  809424:	d8800717 	ldw	r2,28(sp)
  809428:	003bd006 	br	80836c <__alt_data_end+0xff80836c>
  80942c:	d9000a17 	ldw	r4,40(sp)
  809430:	d9800d17 	ldw	r6,52(sp)
  809434:	dd400a15 	stw	r21,40(sp)
  809438:	a905c83a 	sub	r2,r21,r4
  80943c:	308d883a 	add	r6,r6,r2
  809440:	d9800d15 	stw	r6,52(sp)
  809444:	002b883a 	mov	r21,zero
  809448:	003e0606 	br	808c64 <__alt_data_end+0xff808c64>
  80944c:	9023883a 	mov	r17,r18
  809450:	9829883a 	mov	r20,r19
  809454:	04000084 	movi	r16,2
  809458:	003c9206 	br	8086a4 <__alt_data_end+0xff8086a4>
  80945c:	04000044 	movi	r16,1
  809460:	dc000c15 	stw	r16,48(sp)
  809464:	dc000615 	stw	r16,24(sp)
  809468:	dc002215 	stw	r16,136(sp)
  80946c:	e0001115 	stw	zero,68(fp)
  809470:	000b883a 	mov	r5,zero
  809474:	003c6906 	br	80861c <__alt_data_end+0xff80861c>
  809478:	3021883a 	mov	r16,r6
  80947c:	003ffb06 	br	80946c <__alt_data_end+0xff80946c>
  809480:	1000021e 	bne	r2,zero,80948c <_dtoa_r+0x11e0>
  809484:	4200004c 	andi	r8,r8,1
  809488:	403e7d1e 	bne	r8,zero,808e80 <__alt_data_end+0xff808e80>
  80948c:	01000c04 	movi	r4,48
  809490:	00000106 	br	809498 <_dtoa_r+0x11ec>
  809494:	102f883a 	mov	r23,r2
  809498:	b8bfffc4 	addi	r2,r23,-1
  80949c:	10c00007 	ldb	r3,0(r2)
  8094a0:	193ffc26 	beq	r3,r4,809494 <__alt_data_end+0xff809494>
  8094a4:	003e8706 	br	808ec4 <__alt_data_end+0xff808ec4>
  8094a8:	d8800517 	ldw	r2,20(sp)
  8094ac:	00a3c83a 	sub	r17,zero,r2
  8094b0:	8800a426 	beq	r17,zero,809744 <_dtoa_r+0x1498>
  8094b4:	888003cc 	andi	r2,r17,15
  8094b8:	100490fa 	slli	r2,r2,3
  8094bc:	00c02074 	movhi	r3,129
  8094c0:	18ca6804 	addi	r3,r3,10656
  8094c4:	1885883a 	add	r2,r3,r2
  8094c8:	11800017 	ldw	r6,0(r2)
  8094cc:	11c00117 	ldw	r7,4(r2)
  8094d0:	9009883a 	mov	r4,r18
  8094d4:	980b883a 	mov	r5,r19
  8094d8:	8823d13a 	srai	r17,r17,4
  8094dc:	08046240 	call	804624 <__muldf3>
  8094e0:	d8800f15 	stw	r2,60(sp)
  8094e4:	d8c01015 	stw	r3,64(sp)
  8094e8:	8800e826 	beq	r17,zero,80988c <_dtoa_r+0x15e0>
  8094ec:	05002074 	movhi	r20,129
  8094f0:	a50a5e04 	addi	r20,r20,10616
  8094f4:	04000084 	movi	r16,2
  8094f8:	8980004c 	andi	r6,r17,1
  8094fc:	1009883a 	mov	r4,r2
  809500:	8823d07a 	srai	r17,r17,1
  809504:	180b883a 	mov	r5,r3
  809508:	30000426 	beq	r6,zero,80951c <_dtoa_r+0x1270>
  80950c:	a1800017 	ldw	r6,0(r20)
  809510:	a1c00117 	ldw	r7,4(r20)
  809514:	84000044 	addi	r16,r16,1
  809518:	08046240 	call	804624 <__muldf3>
  80951c:	a5000204 	addi	r20,r20,8
  809520:	883ff51e 	bne	r17,zero,8094f8 <__alt_data_end+0xff8094f8>
  809524:	d8800f15 	stw	r2,60(sp)
  809528:	d8c01015 	stw	r3,64(sp)
  80952c:	003c7606 	br	808708 <__alt_data_end+0xff808708>
  809530:	00c00c04 	movi	r3,48
  809534:	10c00005 	stb	r3,0(r2)
  809538:	d8c00517 	ldw	r3,20(sp)
  80953c:	bd3fffc3 	ldbu	r20,-1(r23)
  809540:	18c00044 	addi	r3,r3,1
  809544:	d8c00515 	stw	r3,20(sp)
  809548:	003db906 	br	808c30 <__alt_data_end+0xff808c30>
  80954c:	89400117 	ldw	r5,4(r17)
  809550:	e009883a 	mov	r4,fp
  809554:	080b9480 	call	80b948 <_Balloc>
  809558:	89800417 	ldw	r6,16(r17)
  80955c:	89400304 	addi	r5,r17,12
  809560:	11000304 	addi	r4,r2,12
  809564:	31800084 	addi	r6,r6,2
  809568:	318d883a 	add	r6,r6,r6
  80956c:	318d883a 	add	r6,r6,r6
  809570:	1027883a 	mov	r19,r2
  809574:	080b57c0 	call	80b57c <memcpy>
  809578:	01800044 	movi	r6,1
  80957c:	980b883a 	mov	r5,r19
  809580:	e009883a 	mov	r4,fp
  809584:	080c0c80 	call	80c0c8 <__lshift>
  809588:	1029883a 	mov	r20,r2
  80958c:	003ecc06 	br	8090c0 <__alt_data_end+0xff8090c0>
  809590:	00800e44 	movi	r2,57
  809594:	90809026 	beq	r18,r2,8097d8 <_dtoa_r+0x152c>
  809598:	92000044 	addi	r8,r18,1
  80959c:	003f1f06 	br	80921c <__alt_data_end+0xff80921c>
  8095a0:	9011883a 	mov	r8,r18
  8095a4:	8825883a 	mov	r18,r17
  8095a8:	a023883a 	mov	r17,r20
  8095ac:	003e2906 	br	808e54 <__alt_data_end+0xff808e54>
  8095b0:	002b883a 	mov	r21,zero
  8095b4:	0023883a 	mov	r17,zero
  8095b8:	003f5406 	br	80930c <__alt_data_end+0xff80930c>
  8095bc:	61bfffc4 	addi	r6,r12,-1
  8095c0:	300490fa 	slli	r2,r6,3
  8095c4:	00c02074 	movhi	r3,129
  8095c8:	18ca6804 	addi	r3,r3,10656
  8095cc:	1885883a 	add	r2,r3,r2
  8095d0:	11000017 	ldw	r4,0(r2)
  8095d4:	11400117 	ldw	r5,4(r2)
  8095d8:	d8800717 	ldw	r2,28(sp)
  8095dc:	880f883a 	mov	r7,r17
  8095e0:	d9801215 	stw	r6,72(sp)
  8095e4:	800d883a 	mov	r6,r16
  8095e8:	db001615 	stw	r12,88(sp)
  8095ec:	15c00044 	addi	r23,r2,1
  8095f0:	08046240 	call	804624 <__muldf3>
  8095f4:	d9401017 	ldw	r5,64(sp)
  8095f8:	d9000f17 	ldw	r4,60(sp)
  8095fc:	d8c01515 	stw	r3,84(sp)
  809600:	d8801415 	stw	r2,80(sp)
  809604:	08056380 	call	805638 <__fixdfsi>
  809608:	1009883a 	mov	r4,r2
  80960c:	1021883a 	mov	r16,r2
  809610:	08056b80 	call	8056b8 <__floatsidf>
  809614:	d9000f17 	ldw	r4,60(sp)
  809618:	d9401017 	ldw	r5,64(sp)
  80961c:	100d883a 	mov	r6,r2
  809620:	180f883a 	mov	r7,r3
  809624:	0804d3c0 	call	804d3c <__subdf3>
  809628:	1829883a 	mov	r20,r3
  80962c:	d8c00717 	ldw	r3,28(sp)
  809630:	84000c04 	addi	r16,r16,48
  809634:	1023883a 	mov	r17,r2
  809638:	1c000005 	stb	r16,0(r3)
  80963c:	db001617 	ldw	r12,88(sp)
  809640:	00800044 	movi	r2,1
  809644:	60802226 	beq	r12,r2,8096d0 <_dtoa_r+0x1424>
  809648:	d9c00717 	ldw	r7,28(sp)
  80964c:	8805883a 	mov	r2,r17
  809650:	b82b883a 	mov	r21,r23
  809654:	3b19883a 	add	r12,r7,r12
  809658:	6023883a 	mov	r17,r12
  80965c:	a007883a 	mov	r3,r20
  809660:	dc800f15 	stw	r18,60(sp)
  809664:	000d883a 	mov	r6,zero
  809668:	01d00934 	movhi	r7,16420
  80966c:	1009883a 	mov	r4,r2
  809670:	180b883a 	mov	r5,r3
  809674:	08046240 	call	804624 <__muldf3>
  809678:	180b883a 	mov	r5,r3
  80967c:	1009883a 	mov	r4,r2
  809680:	1829883a 	mov	r20,r3
  809684:	1025883a 	mov	r18,r2
  809688:	08056380 	call	805638 <__fixdfsi>
  80968c:	1009883a 	mov	r4,r2
  809690:	1021883a 	mov	r16,r2
  809694:	08056b80 	call	8056b8 <__floatsidf>
  809698:	100d883a 	mov	r6,r2
  80969c:	180f883a 	mov	r7,r3
  8096a0:	9009883a 	mov	r4,r18
  8096a4:	a00b883a 	mov	r5,r20
  8096a8:	84000c04 	addi	r16,r16,48
  8096ac:	0804d3c0 	call	804d3c <__subdf3>
  8096b0:	ad400044 	addi	r21,r21,1
  8096b4:	ac3fffc5 	stb	r16,-1(r21)
  8096b8:	ac7fea1e 	bne	r21,r17,809664 <__alt_data_end+0xff809664>
  8096bc:	1023883a 	mov	r17,r2
  8096c0:	d8801217 	ldw	r2,72(sp)
  8096c4:	dc800f17 	ldw	r18,60(sp)
  8096c8:	1829883a 	mov	r20,r3
  8096cc:	b8af883a 	add	r23,r23,r2
  8096d0:	d9001417 	ldw	r4,80(sp)
  8096d4:	d9401517 	ldw	r5,84(sp)
  8096d8:	000d883a 	mov	r6,zero
  8096dc:	01cff834 	movhi	r7,16352
  8096e0:	080332c0 	call	80332c <__adddf3>
  8096e4:	880d883a 	mov	r6,r17
  8096e8:	a00f883a 	mov	r7,r20
  8096ec:	1009883a 	mov	r4,r2
  8096f0:	180b883a 	mov	r5,r3
  8096f4:	080fbb40 	call	80fbb4 <__ledf2>
  8096f8:	10003e0e 	bge	r2,zero,8097f4 <_dtoa_r+0x1548>
  8096fc:	d9001317 	ldw	r4,76(sp)
  809700:	bd3fffc3 	ldbu	r20,-1(r23)
  809704:	d9000515 	stw	r4,20(sp)
  809708:	003d3b06 	br	808bf8 <__alt_data_end+0xff808bf8>
  80970c:	0027883a 	mov	r19,zero
  809710:	003f1b06 	br	809380 <__alt_data_end+0xff809380>
  809714:	d8800817 	ldw	r2,32(sp)
  809718:	11e9c83a 	sub	r20,r2,r7
  80971c:	0005883a 	mov	r2,zero
  809720:	003d5406 	br	808c74 <__alt_data_end+0xff808c74>
  809724:	00800044 	movi	r2,1
  809728:	003dc706 	br	808e48 <__alt_data_end+0xff808e48>
  80972c:	d8c00217 	ldw	r3,8(sp)
  809730:	00800d84 	movi	r2,54
  809734:	dd400a17 	ldw	r21,40(sp)
  809738:	10c5c83a 	sub	r2,r2,r3
  80973c:	dd000817 	ldw	r20,32(sp)
  809740:	003d4c06 	br	808c74 <__alt_data_end+0xff808c74>
  809744:	dc800f15 	stw	r18,60(sp)
  809748:	dcc01015 	stw	r19,64(sp)
  80974c:	04000084 	movi	r16,2
  809750:	003bed06 	br	808708 <__alt_data_end+0xff808708>
  809754:	d9000617 	ldw	r4,24(sp)
  809758:	203f0d26 	beq	r4,zero,809390 <__alt_data_end+0xff809390>
  80975c:	d9800c17 	ldw	r6,48(sp)
  809760:	01bcab0e 	bge	zero,r6,808a10 <__alt_data_end+0xff808a10>
  809764:	d9401017 	ldw	r5,64(sp)
  809768:	d9000f17 	ldw	r4,60(sp)
  80976c:	000d883a 	mov	r6,zero
  809770:	01d00934 	movhi	r7,16420
  809774:	08046240 	call	804624 <__muldf3>
  809778:	81000044 	addi	r4,r16,1
  80977c:	d8800f15 	stw	r2,60(sp)
  809780:	d8c01015 	stw	r3,64(sp)
  809784:	08056b80 	call	8056b8 <__floatsidf>
  809788:	d9800f17 	ldw	r6,60(sp)
  80978c:	d9c01017 	ldw	r7,64(sp)
  809790:	1009883a 	mov	r4,r2
  809794:	180b883a 	mov	r5,r3
  809798:	08046240 	call	804624 <__muldf3>
  80979c:	01d00734 	movhi	r7,16412
  8097a0:	000d883a 	mov	r6,zero
  8097a4:	1009883a 	mov	r4,r2
  8097a8:	180b883a 	mov	r5,r3
  8097ac:	080332c0 	call	80332c <__adddf3>
  8097b0:	d9c00517 	ldw	r7,20(sp)
  8097b4:	047f3034 	movhi	r17,64704
  8097b8:	1021883a 	mov	r16,r2
  8097bc:	39ffffc4 	addi	r7,r7,-1
  8097c0:	d9c01315 	stw	r7,76(sp)
  8097c4:	1c63883a 	add	r17,r3,r17
  8097c8:	db000c17 	ldw	r12,48(sp)
  8097cc:	003bea06 	br	808778 <__alt_data_end+0xff808778>
  8097d0:	dc000915 	stw	r16,36(sp)
  8097d4:	003e0e06 	br	809010 <__alt_data_end+0xff809010>
  8097d8:	01000e44 	movi	r4,57
  8097dc:	8825883a 	mov	r18,r17
  8097e0:	9dc00044 	addi	r23,r19,1
  8097e4:	99000005 	stb	r4,0(r19)
  8097e8:	a023883a 	mov	r17,r20
  8097ec:	dc000915 	stw	r16,36(sp)
  8097f0:	003da406 	br	808e84 <__alt_data_end+0xff808e84>
  8097f4:	d9801417 	ldw	r6,80(sp)
  8097f8:	d9c01517 	ldw	r7,84(sp)
  8097fc:	0009883a 	mov	r4,zero
  809800:	014ff834 	movhi	r5,16352
  809804:	0804d3c0 	call	804d3c <__subdf3>
  809808:	880d883a 	mov	r6,r17
  80980c:	a00f883a 	mov	r7,r20
  809810:	1009883a 	mov	r4,r2
  809814:	180b883a 	mov	r5,r3
  809818:	08045480 	call	804548 <__gedf2>
  80981c:	00bc7c0e 	bge	zero,r2,808a10 <__alt_data_end+0xff808a10>
  809820:	01000c04 	movi	r4,48
  809824:	00000106 	br	80982c <_dtoa_r+0x1580>
  809828:	102f883a 	mov	r23,r2
  80982c:	b8bfffc4 	addi	r2,r23,-1
  809830:	10c00007 	ldb	r3,0(r2)
  809834:	193ffc26 	beq	r3,r4,809828 <__alt_data_end+0xff809828>
  809838:	d9801317 	ldw	r6,76(sp)
  80983c:	d9800515 	stw	r6,20(sp)
  809840:	003c4406 	br	808954 <__alt_data_end+0xff808954>
  809844:	d9801317 	ldw	r6,76(sp)
  809848:	d9800515 	stw	r6,20(sp)
  80984c:	003cea06 	br	808bf8 <__alt_data_end+0xff808bf8>
  809850:	dd800f17 	ldw	r22,60(sp)
  809854:	dcc01017 	ldw	r19,64(sp)
  809858:	dc801217 	ldw	r18,72(sp)
  80985c:	003c6c06 	br	808a10 <__alt_data_end+0xff808a10>
  809860:	903e031e 	bne	r18,zero,809070 <__alt_data_end+0xff809070>
  809864:	003ebb06 	br	809354 <__alt_data_end+0xff809354>
  809868:	103e6c1e 	bne	r2,zero,80921c <__alt_data_end+0xff80921c>
  80986c:	4080004c 	andi	r2,r8,1
  809870:	103e6a26 	beq	r2,zero,80921c <__alt_data_end+0xff80921c>
  809874:	003e6606 	br	809210 <__alt_data_end+0xff809210>
  809878:	d8c00317 	ldw	r3,12(sp)
  80987c:	00800084 	movi	r2,2
  809880:	10c02916 	blt	r2,r3,809928 <_dtoa_r+0x167c>
  809884:	d9000c17 	ldw	r4,48(sp)
  809888:	003e8806 	br	8092ac <__alt_data_end+0xff8092ac>
  80988c:	04000084 	movi	r16,2
  809890:	003b9d06 	br	808708 <__alt_data_end+0xff808708>
  809894:	d9001317 	ldw	r4,76(sp)
  809898:	d9000515 	stw	r4,20(sp)
  80989c:	003cd606 	br	808bf8 <__alt_data_end+0xff808bf8>
  8098a0:	d8801317 	ldw	r2,76(sp)
  8098a4:	d8800515 	stw	r2,20(sp)
  8098a8:	003c2a06 	br	808954 <__alt_data_end+0xff808954>
  8098ac:	d9800317 	ldw	r6,12(sp)
  8098b0:	00800084 	movi	r2,2
  8098b4:	11801516 	blt	r2,r6,80990c <_dtoa_r+0x1660>
  8098b8:	d9c00c17 	ldw	r7,48(sp)
  8098bc:	d9c00615 	stw	r7,24(sp)
  8098c0:	003df706 	br	8090a0 <__alt_data_end+0xff8090a0>
  8098c4:	193d3926 	beq	r3,r4,808dac <__alt_data_end+0xff808dac>
  8098c8:	00c00f04 	movi	r3,60
  8098cc:	1885c83a 	sub	r2,r3,r2
  8098d0:	003ddf06 	br	809050 <__alt_data_end+0xff809050>
  8098d4:	e009883a 	mov	r4,fp
  8098d8:	e0001115 	stw	zero,68(fp)
  8098dc:	000b883a 	mov	r5,zero
  8098e0:	080b9480 	call	80b948 <_Balloc>
  8098e4:	d8800715 	stw	r2,28(sp)
  8098e8:	d8c00717 	ldw	r3,28(sp)
  8098ec:	00bfffc4 	movi	r2,-1
  8098f0:	01000044 	movi	r4,1
  8098f4:	d8800c15 	stw	r2,48(sp)
  8098f8:	e0c01015 	stw	r3,64(fp)
  8098fc:	d9000b15 	stw	r4,44(sp)
  809900:	d8800615 	stw	r2,24(sp)
  809904:	d8002215 	stw	zero,136(sp)
  809908:	003c4106 	br	808a10 <__alt_data_end+0xff808a10>
  80990c:	d8c00c17 	ldw	r3,48(sp)
  809910:	d8c00615 	stw	r3,24(sp)
  809914:	003e7006 	br	8092d8 <__alt_data_end+0xff8092d8>
  809918:	04400044 	movi	r17,1
  80991c:	003b2006 	br	8085a0 <__alt_data_end+0xff8085a0>
  809920:	000b883a 	mov	r5,zero
  809924:	003b3d06 	br	80861c <__alt_data_end+0xff80861c>
  809928:	d8800c17 	ldw	r2,48(sp)
  80992c:	d8800615 	stw	r2,24(sp)
  809930:	003e6906 	br	8092d8 <__alt_data_end+0xff8092d8>

00809934 <__sflush_r>:
  809934:	2880030b 	ldhu	r2,12(r5)
  809938:	defffb04 	addi	sp,sp,-20
  80993c:	dcc00315 	stw	r19,12(sp)
  809940:	dc400115 	stw	r17,4(sp)
  809944:	dfc00415 	stw	ra,16(sp)
  809948:	dc800215 	stw	r18,8(sp)
  80994c:	dc000015 	stw	r16,0(sp)
  809950:	10c0020c 	andi	r3,r2,8
  809954:	2823883a 	mov	r17,r5
  809958:	2027883a 	mov	r19,r4
  80995c:	1800311e 	bne	r3,zero,809a24 <__sflush_r+0xf0>
  809960:	28c00117 	ldw	r3,4(r5)
  809964:	10820014 	ori	r2,r2,2048
  809968:	2880030d 	sth	r2,12(r5)
  80996c:	00c04b0e 	bge	zero,r3,809a9c <__sflush_r+0x168>
  809970:	8a000a17 	ldw	r8,40(r17)
  809974:	40002326 	beq	r8,zero,809a04 <__sflush_r+0xd0>
  809978:	9c000017 	ldw	r16,0(r19)
  80997c:	10c4000c 	andi	r3,r2,4096
  809980:	98000015 	stw	zero,0(r19)
  809984:	18004826 	beq	r3,zero,809aa8 <__sflush_r+0x174>
  809988:	89801417 	ldw	r6,80(r17)
  80998c:	10c0010c 	andi	r3,r2,4
  809990:	18000626 	beq	r3,zero,8099ac <__sflush_r+0x78>
  809994:	88c00117 	ldw	r3,4(r17)
  809998:	88800c17 	ldw	r2,48(r17)
  80999c:	30cdc83a 	sub	r6,r6,r3
  8099a0:	10000226 	beq	r2,zero,8099ac <__sflush_r+0x78>
  8099a4:	88800f17 	ldw	r2,60(r17)
  8099a8:	308dc83a 	sub	r6,r6,r2
  8099ac:	89400717 	ldw	r5,28(r17)
  8099b0:	000f883a 	mov	r7,zero
  8099b4:	9809883a 	mov	r4,r19
  8099b8:	403ee83a 	callr	r8
  8099bc:	00ffffc4 	movi	r3,-1
  8099c0:	10c04426 	beq	r2,r3,809ad4 <__sflush_r+0x1a0>
  8099c4:	88c0030b 	ldhu	r3,12(r17)
  8099c8:	89000417 	ldw	r4,16(r17)
  8099cc:	88000115 	stw	zero,4(r17)
  8099d0:	197dffcc 	andi	r5,r3,63487
  8099d4:	8940030d 	sth	r5,12(r17)
  8099d8:	89000015 	stw	r4,0(r17)
  8099dc:	18c4000c 	andi	r3,r3,4096
  8099e0:	18002c1e 	bne	r3,zero,809a94 <__sflush_r+0x160>
  8099e4:	89400c17 	ldw	r5,48(r17)
  8099e8:	9c000015 	stw	r16,0(r19)
  8099ec:	28000526 	beq	r5,zero,809a04 <__sflush_r+0xd0>
  8099f0:	88801004 	addi	r2,r17,64
  8099f4:	28800226 	beq	r5,r2,809a00 <__sflush_r+0xcc>
  8099f8:	9809883a 	mov	r4,r19
  8099fc:	080a0a00 	call	80a0a0 <_free_r>
  809a00:	88000c15 	stw	zero,48(r17)
  809a04:	0005883a 	mov	r2,zero
  809a08:	dfc00417 	ldw	ra,16(sp)
  809a0c:	dcc00317 	ldw	r19,12(sp)
  809a10:	dc800217 	ldw	r18,8(sp)
  809a14:	dc400117 	ldw	r17,4(sp)
  809a18:	dc000017 	ldw	r16,0(sp)
  809a1c:	dec00504 	addi	sp,sp,20
  809a20:	f800283a 	ret
  809a24:	2c800417 	ldw	r18,16(r5)
  809a28:	903ff626 	beq	r18,zero,809a04 <__alt_data_end+0xff809a04>
  809a2c:	2c000017 	ldw	r16,0(r5)
  809a30:	108000cc 	andi	r2,r2,3
  809a34:	2c800015 	stw	r18,0(r5)
  809a38:	84a1c83a 	sub	r16,r16,r18
  809a3c:	1000131e 	bne	r2,zero,809a8c <__sflush_r+0x158>
  809a40:	28800517 	ldw	r2,20(r5)
  809a44:	88800215 	stw	r2,8(r17)
  809a48:	04000316 	blt	zero,r16,809a58 <__sflush_r+0x124>
  809a4c:	003fed06 	br	809a04 <__alt_data_end+0xff809a04>
  809a50:	90a5883a 	add	r18,r18,r2
  809a54:	043feb0e 	bge	zero,r16,809a04 <__alt_data_end+0xff809a04>
  809a58:	88800917 	ldw	r2,36(r17)
  809a5c:	89400717 	ldw	r5,28(r17)
  809a60:	800f883a 	mov	r7,r16
  809a64:	900d883a 	mov	r6,r18
  809a68:	9809883a 	mov	r4,r19
  809a6c:	103ee83a 	callr	r2
  809a70:	80a1c83a 	sub	r16,r16,r2
  809a74:	00bff616 	blt	zero,r2,809a50 <__alt_data_end+0xff809a50>
  809a78:	88c0030b 	ldhu	r3,12(r17)
  809a7c:	00bfffc4 	movi	r2,-1
  809a80:	18c01014 	ori	r3,r3,64
  809a84:	88c0030d 	sth	r3,12(r17)
  809a88:	003fdf06 	br	809a08 <__alt_data_end+0xff809a08>
  809a8c:	0005883a 	mov	r2,zero
  809a90:	003fec06 	br	809a44 <__alt_data_end+0xff809a44>
  809a94:	88801415 	stw	r2,80(r17)
  809a98:	003fd206 	br	8099e4 <__alt_data_end+0xff8099e4>
  809a9c:	28c00f17 	ldw	r3,60(r5)
  809aa0:	00ffb316 	blt	zero,r3,809970 <__alt_data_end+0xff809970>
  809aa4:	003fd706 	br	809a04 <__alt_data_end+0xff809a04>
  809aa8:	89400717 	ldw	r5,28(r17)
  809aac:	000d883a 	mov	r6,zero
  809ab0:	01c00044 	movi	r7,1
  809ab4:	9809883a 	mov	r4,r19
  809ab8:	403ee83a 	callr	r8
  809abc:	100d883a 	mov	r6,r2
  809ac0:	00bfffc4 	movi	r2,-1
  809ac4:	30801426 	beq	r6,r2,809b18 <__sflush_r+0x1e4>
  809ac8:	8880030b 	ldhu	r2,12(r17)
  809acc:	8a000a17 	ldw	r8,40(r17)
  809ad0:	003fae06 	br	80998c <__alt_data_end+0xff80998c>
  809ad4:	98c00017 	ldw	r3,0(r19)
  809ad8:	183fba26 	beq	r3,zero,8099c4 <__alt_data_end+0xff8099c4>
  809adc:	01000744 	movi	r4,29
  809ae0:	19000626 	beq	r3,r4,809afc <__sflush_r+0x1c8>
  809ae4:	01000584 	movi	r4,22
  809ae8:	19000426 	beq	r3,r4,809afc <__sflush_r+0x1c8>
  809aec:	88c0030b 	ldhu	r3,12(r17)
  809af0:	18c01014 	ori	r3,r3,64
  809af4:	88c0030d 	sth	r3,12(r17)
  809af8:	003fc306 	br	809a08 <__alt_data_end+0xff809a08>
  809afc:	8880030b 	ldhu	r2,12(r17)
  809b00:	88c00417 	ldw	r3,16(r17)
  809b04:	88000115 	stw	zero,4(r17)
  809b08:	10bdffcc 	andi	r2,r2,63487
  809b0c:	8880030d 	sth	r2,12(r17)
  809b10:	88c00015 	stw	r3,0(r17)
  809b14:	003fb306 	br	8099e4 <__alt_data_end+0xff8099e4>
  809b18:	98800017 	ldw	r2,0(r19)
  809b1c:	103fea26 	beq	r2,zero,809ac8 <__alt_data_end+0xff809ac8>
  809b20:	00c00744 	movi	r3,29
  809b24:	10c00226 	beq	r2,r3,809b30 <__sflush_r+0x1fc>
  809b28:	00c00584 	movi	r3,22
  809b2c:	10c0031e 	bne	r2,r3,809b3c <__sflush_r+0x208>
  809b30:	9c000015 	stw	r16,0(r19)
  809b34:	0005883a 	mov	r2,zero
  809b38:	003fb306 	br	809a08 <__alt_data_end+0xff809a08>
  809b3c:	88c0030b 	ldhu	r3,12(r17)
  809b40:	3005883a 	mov	r2,r6
  809b44:	18c01014 	ori	r3,r3,64
  809b48:	88c0030d 	sth	r3,12(r17)
  809b4c:	003fae06 	br	809a08 <__alt_data_end+0xff809a08>

00809b50 <_fflush_r>:
  809b50:	defffd04 	addi	sp,sp,-12
  809b54:	dc000115 	stw	r16,4(sp)
  809b58:	dfc00215 	stw	ra,8(sp)
  809b5c:	2021883a 	mov	r16,r4
  809b60:	20000226 	beq	r4,zero,809b6c <_fflush_r+0x1c>
  809b64:	20800e17 	ldw	r2,56(r4)
  809b68:	10000c26 	beq	r2,zero,809b9c <_fflush_r+0x4c>
  809b6c:	2880030f 	ldh	r2,12(r5)
  809b70:	1000051e 	bne	r2,zero,809b88 <_fflush_r+0x38>
  809b74:	0005883a 	mov	r2,zero
  809b78:	dfc00217 	ldw	ra,8(sp)
  809b7c:	dc000117 	ldw	r16,4(sp)
  809b80:	dec00304 	addi	sp,sp,12
  809b84:	f800283a 	ret
  809b88:	8009883a 	mov	r4,r16
  809b8c:	dfc00217 	ldw	ra,8(sp)
  809b90:	dc000117 	ldw	r16,4(sp)
  809b94:	dec00304 	addi	sp,sp,12
  809b98:	08099341 	jmpi	809934 <__sflush_r>
  809b9c:	d9400015 	stw	r5,0(sp)
  809ba0:	0809f2c0 	call	809f2c <__sinit>
  809ba4:	d9400017 	ldw	r5,0(sp)
  809ba8:	003ff006 	br	809b6c <__alt_data_end+0xff809b6c>

00809bac <fflush>:
  809bac:	20000526 	beq	r4,zero,809bc4 <fflush+0x18>
  809bb0:	00802074 	movhi	r2,129
  809bb4:	10915904 	addi	r2,r2,17764
  809bb8:	200b883a 	mov	r5,r4
  809bbc:	11000017 	ldw	r4,0(r2)
  809bc0:	0809b501 	jmpi	809b50 <_fflush_r>
  809bc4:	00802074 	movhi	r2,129
  809bc8:	10915804 	addi	r2,r2,17760
  809bcc:	11000017 	ldw	r4,0(r2)
  809bd0:	01402074 	movhi	r5,129
  809bd4:	2966d404 	addi	r5,r5,-25776
  809bd8:	080a9301 	jmpi	80a930 <_fwalk_reent>

00809bdc <__fp_unlock>:
  809bdc:	0005883a 	mov	r2,zero
  809be0:	f800283a 	ret

00809be4 <_cleanup_r>:
  809be4:	01402074 	movhi	r5,129
  809be8:	297a5204 	addi	r5,r5,-5816
  809bec:	080a9301 	jmpi	80a930 <_fwalk_reent>

00809bf0 <__sinit.part.1>:
  809bf0:	defff704 	addi	sp,sp,-36
  809bf4:	00c02074 	movhi	r3,129
  809bf8:	dfc00815 	stw	ra,32(sp)
  809bfc:	ddc00715 	stw	r23,28(sp)
  809c00:	dd800615 	stw	r22,24(sp)
  809c04:	dd400515 	stw	r21,20(sp)
  809c08:	dd000415 	stw	r20,16(sp)
  809c0c:	dcc00315 	stw	r19,12(sp)
  809c10:	dc800215 	stw	r18,8(sp)
  809c14:	dc400115 	stw	r17,4(sp)
  809c18:	dc000015 	stw	r16,0(sp)
  809c1c:	18e6f904 	addi	r3,r3,-25628
  809c20:	24000117 	ldw	r16,4(r4)
  809c24:	20c00f15 	stw	r3,60(r4)
  809c28:	2080bb04 	addi	r2,r4,748
  809c2c:	00c000c4 	movi	r3,3
  809c30:	20c0b915 	stw	r3,740(r4)
  809c34:	2080ba15 	stw	r2,744(r4)
  809c38:	2000b815 	stw	zero,736(r4)
  809c3c:	05c00204 	movi	r23,8
  809c40:	00800104 	movi	r2,4
  809c44:	2025883a 	mov	r18,r4
  809c48:	b80d883a 	mov	r6,r23
  809c4c:	81001704 	addi	r4,r16,92
  809c50:	000b883a 	mov	r5,zero
  809c54:	80000015 	stw	zero,0(r16)
  809c58:	80000115 	stw	zero,4(r16)
  809c5c:	80000215 	stw	zero,8(r16)
  809c60:	8080030d 	sth	r2,12(r16)
  809c64:	80001915 	stw	zero,100(r16)
  809c68:	8000038d 	sth	zero,14(r16)
  809c6c:	80000415 	stw	zero,16(r16)
  809c70:	80000515 	stw	zero,20(r16)
  809c74:	80000615 	stw	zero,24(r16)
  809c78:	080b8200 	call	80b820 <memset>
  809c7c:	05802074 	movhi	r22,129
  809c80:	94400217 	ldw	r17,8(r18)
  809c84:	05402074 	movhi	r21,129
  809c88:	05002074 	movhi	r20,129
  809c8c:	04c02074 	movhi	r19,129
  809c90:	b5b3dc04 	addi	r22,r22,-12432
  809c94:	ad73f304 	addi	r21,r21,-12340
  809c98:	a5341204 	addi	r20,r20,-12216
  809c9c:	9cf42904 	addi	r19,r19,-12124
  809ca0:	85800815 	stw	r22,32(r16)
  809ca4:	85400915 	stw	r21,36(r16)
  809ca8:	85000a15 	stw	r20,40(r16)
  809cac:	84c00b15 	stw	r19,44(r16)
  809cb0:	84000715 	stw	r16,28(r16)
  809cb4:	00800284 	movi	r2,10
  809cb8:	8880030d 	sth	r2,12(r17)
  809cbc:	00800044 	movi	r2,1
  809cc0:	b80d883a 	mov	r6,r23
  809cc4:	89001704 	addi	r4,r17,92
  809cc8:	000b883a 	mov	r5,zero
  809ccc:	88000015 	stw	zero,0(r17)
  809cd0:	88000115 	stw	zero,4(r17)
  809cd4:	88000215 	stw	zero,8(r17)
  809cd8:	88001915 	stw	zero,100(r17)
  809cdc:	8880038d 	sth	r2,14(r17)
  809ce0:	88000415 	stw	zero,16(r17)
  809ce4:	88000515 	stw	zero,20(r17)
  809ce8:	88000615 	stw	zero,24(r17)
  809cec:	080b8200 	call	80b820 <memset>
  809cf0:	94000317 	ldw	r16,12(r18)
  809cf4:	00800484 	movi	r2,18
  809cf8:	8c400715 	stw	r17,28(r17)
  809cfc:	8d800815 	stw	r22,32(r17)
  809d00:	8d400915 	stw	r21,36(r17)
  809d04:	8d000a15 	stw	r20,40(r17)
  809d08:	8cc00b15 	stw	r19,44(r17)
  809d0c:	8080030d 	sth	r2,12(r16)
  809d10:	00800084 	movi	r2,2
  809d14:	80000015 	stw	zero,0(r16)
  809d18:	80000115 	stw	zero,4(r16)
  809d1c:	80000215 	stw	zero,8(r16)
  809d20:	80001915 	stw	zero,100(r16)
  809d24:	8080038d 	sth	r2,14(r16)
  809d28:	80000415 	stw	zero,16(r16)
  809d2c:	80000515 	stw	zero,20(r16)
  809d30:	80000615 	stw	zero,24(r16)
  809d34:	b80d883a 	mov	r6,r23
  809d38:	000b883a 	mov	r5,zero
  809d3c:	81001704 	addi	r4,r16,92
  809d40:	080b8200 	call	80b820 <memset>
  809d44:	00800044 	movi	r2,1
  809d48:	84000715 	stw	r16,28(r16)
  809d4c:	85800815 	stw	r22,32(r16)
  809d50:	85400915 	stw	r21,36(r16)
  809d54:	85000a15 	stw	r20,40(r16)
  809d58:	84c00b15 	stw	r19,44(r16)
  809d5c:	90800e15 	stw	r2,56(r18)
  809d60:	dfc00817 	ldw	ra,32(sp)
  809d64:	ddc00717 	ldw	r23,28(sp)
  809d68:	dd800617 	ldw	r22,24(sp)
  809d6c:	dd400517 	ldw	r21,20(sp)
  809d70:	dd000417 	ldw	r20,16(sp)
  809d74:	dcc00317 	ldw	r19,12(sp)
  809d78:	dc800217 	ldw	r18,8(sp)
  809d7c:	dc400117 	ldw	r17,4(sp)
  809d80:	dc000017 	ldw	r16,0(sp)
  809d84:	dec00904 	addi	sp,sp,36
  809d88:	f800283a 	ret

00809d8c <__fp_lock>:
  809d8c:	0005883a 	mov	r2,zero
  809d90:	f800283a 	ret

00809d94 <__sfmoreglue>:
  809d94:	defffc04 	addi	sp,sp,-16
  809d98:	dc400115 	stw	r17,4(sp)
  809d9c:	2c7fffc4 	addi	r17,r5,-1
  809da0:	8c401a24 	muli	r17,r17,104
  809da4:	dc800215 	stw	r18,8(sp)
  809da8:	2825883a 	mov	r18,r5
  809dac:	89401d04 	addi	r5,r17,116
  809db0:	dc000015 	stw	r16,0(sp)
  809db4:	dfc00315 	stw	ra,12(sp)
  809db8:	080ac8c0 	call	80ac8c <_malloc_r>
  809dbc:	1021883a 	mov	r16,r2
  809dc0:	10000726 	beq	r2,zero,809de0 <__sfmoreglue+0x4c>
  809dc4:	11000304 	addi	r4,r2,12
  809dc8:	10000015 	stw	zero,0(r2)
  809dcc:	14800115 	stw	r18,4(r2)
  809dd0:	11000215 	stw	r4,8(r2)
  809dd4:	89801a04 	addi	r6,r17,104
  809dd8:	000b883a 	mov	r5,zero
  809ddc:	080b8200 	call	80b820 <memset>
  809de0:	8005883a 	mov	r2,r16
  809de4:	dfc00317 	ldw	ra,12(sp)
  809de8:	dc800217 	ldw	r18,8(sp)
  809dec:	dc400117 	ldw	r17,4(sp)
  809df0:	dc000017 	ldw	r16,0(sp)
  809df4:	dec00404 	addi	sp,sp,16
  809df8:	f800283a 	ret

00809dfc <__sfp>:
  809dfc:	defffb04 	addi	sp,sp,-20
  809e00:	dc000015 	stw	r16,0(sp)
  809e04:	04002074 	movhi	r16,129
  809e08:	84115804 	addi	r16,r16,17760
  809e0c:	dcc00315 	stw	r19,12(sp)
  809e10:	2027883a 	mov	r19,r4
  809e14:	81000017 	ldw	r4,0(r16)
  809e18:	dfc00415 	stw	ra,16(sp)
  809e1c:	dc800215 	stw	r18,8(sp)
  809e20:	20800e17 	ldw	r2,56(r4)
  809e24:	dc400115 	stw	r17,4(sp)
  809e28:	1000021e 	bne	r2,zero,809e34 <__sfp+0x38>
  809e2c:	0809bf00 	call	809bf0 <__sinit.part.1>
  809e30:	81000017 	ldw	r4,0(r16)
  809e34:	2480b804 	addi	r18,r4,736
  809e38:	047fffc4 	movi	r17,-1
  809e3c:	91000117 	ldw	r4,4(r18)
  809e40:	94000217 	ldw	r16,8(r18)
  809e44:	213fffc4 	addi	r4,r4,-1
  809e48:	20000a16 	blt	r4,zero,809e74 <__sfp+0x78>
  809e4c:	8080030f 	ldh	r2,12(r16)
  809e50:	10000c26 	beq	r2,zero,809e84 <__sfp+0x88>
  809e54:	80c01d04 	addi	r3,r16,116
  809e58:	00000206 	br	809e64 <__sfp+0x68>
  809e5c:	18bfe60f 	ldh	r2,-104(r3)
  809e60:	10000826 	beq	r2,zero,809e84 <__sfp+0x88>
  809e64:	213fffc4 	addi	r4,r4,-1
  809e68:	1c3ffd04 	addi	r16,r3,-12
  809e6c:	18c01a04 	addi	r3,r3,104
  809e70:	247ffa1e 	bne	r4,r17,809e5c <__alt_data_end+0xff809e5c>
  809e74:	90800017 	ldw	r2,0(r18)
  809e78:	10001d26 	beq	r2,zero,809ef0 <__sfp+0xf4>
  809e7c:	1025883a 	mov	r18,r2
  809e80:	003fee06 	br	809e3c <__alt_data_end+0xff809e3c>
  809e84:	00bfffc4 	movi	r2,-1
  809e88:	8080038d 	sth	r2,14(r16)
  809e8c:	00800044 	movi	r2,1
  809e90:	8080030d 	sth	r2,12(r16)
  809e94:	80001915 	stw	zero,100(r16)
  809e98:	80000015 	stw	zero,0(r16)
  809e9c:	80000215 	stw	zero,8(r16)
  809ea0:	80000115 	stw	zero,4(r16)
  809ea4:	80000415 	stw	zero,16(r16)
  809ea8:	80000515 	stw	zero,20(r16)
  809eac:	80000615 	stw	zero,24(r16)
  809eb0:	01800204 	movi	r6,8
  809eb4:	000b883a 	mov	r5,zero
  809eb8:	81001704 	addi	r4,r16,92
  809ebc:	080b8200 	call	80b820 <memset>
  809ec0:	8005883a 	mov	r2,r16
  809ec4:	80000c15 	stw	zero,48(r16)
  809ec8:	80000d15 	stw	zero,52(r16)
  809ecc:	80001115 	stw	zero,68(r16)
  809ed0:	80001215 	stw	zero,72(r16)
  809ed4:	dfc00417 	ldw	ra,16(sp)
  809ed8:	dcc00317 	ldw	r19,12(sp)
  809edc:	dc800217 	ldw	r18,8(sp)
  809ee0:	dc400117 	ldw	r17,4(sp)
  809ee4:	dc000017 	ldw	r16,0(sp)
  809ee8:	dec00504 	addi	sp,sp,20
  809eec:	f800283a 	ret
  809ef0:	01400104 	movi	r5,4
  809ef4:	9809883a 	mov	r4,r19
  809ef8:	0809d940 	call	809d94 <__sfmoreglue>
  809efc:	90800015 	stw	r2,0(r18)
  809f00:	103fde1e 	bne	r2,zero,809e7c <__alt_data_end+0xff809e7c>
  809f04:	00800304 	movi	r2,12
  809f08:	98800015 	stw	r2,0(r19)
  809f0c:	0005883a 	mov	r2,zero
  809f10:	003ff006 	br	809ed4 <__alt_data_end+0xff809ed4>

00809f14 <_cleanup>:
  809f14:	00802074 	movhi	r2,129
  809f18:	10915804 	addi	r2,r2,17760
  809f1c:	11000017 	ldw	r4,0(r2)
  809f20:	01402074 	movhi	r5,129
  809f24:	297a5204 	addi	r5,r5,-5816
  809f28:	080a9301 	jmpi	80a930 <_fwalk_reent>

00809f2c <__sinit>:
  809f2c:	20800e17 	ldw	r2,56(r4)
  809f30:	10000126 	beq	r2,zero,809f38 <__sinit+0xc>
  809f34:	f800283a 	ret
  809f38:	0809bf01 	jmpi	809bf0 <__sinit.part.1>

00809f3c <__sfp_lock_acquire>:
  809f3c:	f800283a 	ret

00809f40 <__sfp_lock_release>:
  809f40:	f800283a 	ret

00809f44 <__sinit_lock_acquire>:
  809f44:	f800283a 	ret

00809f48 <__sinit_lock_release>:
  809f48:	f800283a 	ret

00809f4c <__fp_lock_all>:
  809f4c:	00802074 	movhi	r2,129
  809f50:	10915904 	addi	r2,r2,17764
  809f54:	11000017 	ldw	r4,0(r2)
  809f58:	01402074 	movhi	r5,129
  809f5c:	29676304 	addi	r5,r5,-25204
  809f60:	080a86c1 	jmpi	80a86c <_fwalk>

00809f64 <__fp_unlock_all>:
  809f64:	00802074 	movhi	r2,129
  809f68:	10915904 	addi	r2,r2,17764
  809f6c:	11000017 	ldw	r4,0(r2)
  809f70:	01402074 	movhi	r5,129
  809f74:	2966f704 	addi	r5,r5,-25636
  809f78:	080a86c1 	jmpi	80a86c <_fwalk>

00809f7c <_malloc_trim_r>:
  809f7c:	defffb04 	addi	sp,sp,-20
  809f80:	dcc00315 	stw	r19,12(sp)
  809f84:	04c02074 	movhi	r19,129
  809f88:	dc800215 	stw	r18,8(sp)
  809f8c:	dc400115 	stw	r17,4(sp)
  809f90:	dc000015 	stw	r16,0(sp)
  809f94:	dfc00415 	stw	ra,16(sp)
  809f98:	2821883a 	mov	r16,r5
  809f9c:	9ccbd404 	addi	r19,r19,12112
  809fa0:	2025883a 	mov	r18,r4
  809fa4:	08102cc0 	call	8102cc <__malloc_lock>
  809fa8:	98800217 	ldw	r2,8(r19)
  809fac:	14400117 	ldw	r17,4(r2)
  809fb0:	00bfff04 	movi	r2,-4
  809fb4:	88a2703a 	and	r17,r17,r2
  809fb8:	8c21c83a 	sub	r16,r17,r16
  809fbc:	8403fbc4 	addi	r16,r16,4079
  809fc0:	8020d33a 	srli	r16,r16,12
  809fc4:	0083ffc4 	movi	r2,4095
  809fc8:	843fffc4 	addi	r16,r16,-1
  809fcc:	8020933a 	slli	r16,r16,12
  809fd0:	1400060e 	bge	r2,r16,809fec <_malloc_trim_r+0x70>
  809fd4:	000b883a 	mov	r5,zero
  809fd8:	9009883a 	mov	r4,r18
  809fdc:	080cf1c0 	call	80cf1c <_sbrk_r>
  809fe0:	98c00217 	ldw	r3,8(r19)
  809fe4:	1c47883a 	add	r3,r3,r17
  809fe8:	10c00a26 	beq	r2,r3,80a014 <_malloc_trim_r+0x98>
  809fec:	9009883a 	mov	r4,r18
  809ff0:	08102f00 	call	8102f0 <__malloc_unlock>
  809ff4:	0005883a 	mov	r2,zero
  809ff8:	dfc00417 	ldw	ra,16(sp)
  809ffc:	dcc00317 	ldw	r19,12(sp)
  80a000:	dc800217 	ldw	r18,8(sp)
  80a004:	dc400117 	ldw	r17,4(sp)
  80a008:	dc000017 	ldw	r16,0(sp)
  80a00c:	dec00504 	addi	sp,sp,20
  80a010:	f800283a 	ret
  80a014:	040bc83a 	sub	r5,zero,r16
  80a018:	9009883a 	mov	r4,r18
  80a01c:	080cf1c0 	call	80cf1c <_sbrk_r>
  80a020:	00ffffc4 	movi	r3,-1
  80a024:	10c00d26 	beq	r2,r3,80a05c <_malloc_trim_r+0xe0>
  80a028:	00c02074 	movhi	r3,129
  80a02c:	18d83104 	addi	r3,r3,24772
  80a030:	18800017 	ldw	r2,0(r3)
  80a034:	99000217 	ldw	r4,8(r19)
  80a038:	8c23c83a 	sub	r17,r17,r16
  80a03c:	8c400054 	ori	r17,r17,1
  80a040:	1421c83a 	sub	r16,r2,r16
  80a044:	24400115 	stw	r17,4(r4)
  80a048:	9009883a 	mov	r4,r18
  80a04c:	1c000015 	stw	r16,0(r3)
  80a050:	08102f00 	call	8102f0 <__malloc_unlock>
  80a054:	00800044 	movi	r2,1
  80a058:	003fe706 	br	809ff8 <__alt_data_end+0xff809ff8>
  80a05c:	000b883a 	mov	r5,zero
  80a060:	9009883a 	mov	r4,r18
  80a064:	080cf1c0 	call	80cf1c <_sbrk_r>
  80a068:	99000217 	ldw	r4,8(r19)
  80a06c:	014003c4 	movi	r5,15
  80a070:	1107c83a 	sub	r3,r2,r4
  80a074:	28ffdd0e 	bge	r5,r3,809fec <__alt_data_end+0xff809fec>
  80a078:	01402074 	movhi	r5,129
  80a07c:	29515b04 	addi	r5,r5,17772
  80a080:	29400017 	ldw	r5,0(r5)
  80a084:	18c00054 	ori	r3,r3,1
  80a088:	20c00115 	stw	r3,4(r4)
  80a08c:	00c02074 	movhi	r3,129
  80a090:	1145c83a 	sub	r2,r2,r5
  80a094:	18d83104 	addi	r3,r3,24772
  80a098:	18800015 	stw	r2,0(r3)
  80a09c:	003fd306 	br	809fec <__alt_data_end+0xff809fec>

0080a0a0 <_free_r>:
  80a0a0:	28004126 	beq	r5,zero,80a1a8 <_free_r+0x108>
  80a0a4:	defffd04 	addi	sp,sp,-12
  80a0a8:	dc400115 	stw	r17,4(sp)
  80a0ac:	dc000015 	stw	r16,0(sp)
  80a0b0:	2023883a 	mov	r17,r4
  80a0b4:	2821883a 	mov	r16,r5
  80a0b8:	dfc00215 	stw	ra,8(sp)
  80a0bc:	08102cc0 	call	8102cc <__malloc_lock>
  80a0c0:	81ffff17 	ldw	r7,-4(r16)
  80a0c4:	00bfff84 	movi	r2,-2
  80a0c8:	01002074 	movhi	r4,129
  80a0cc:	81bffe04 	addi	r6,r16,-8
  80a0d0:	3884703a 	and	r2,r7,r2
  80a0d4:	210bd404 	addi	r4,r4,12112
  80a0d8:	308b883a 	add	r5,r6,r2
  80a0dc:	2a400117 	ldw	r9,4(r5)
  80a0e0:	22000217 	ldw	r8,8(r4)
  80a0e4:	00ffff04 	movi	r3,-4
  80a0e8:	48c6703a 	and	r3,r9,r3
  80a0ec:	2a005726 	beq	r5,r8,80a24c <_free_r+0x1ac>
  80a0f0:	28c00115 	stw	r3,4(r5)
  80a0f4:	39c0004c 	andi	r7,r7,1
  80a0f8:	3800091e 	bne	r7,zero,80a120 <_free_r+0x80>
  80a0fc:	823ffe17 	ldw	r8,-8(r16)
  80a100:	22400204 	addi	r9,r4,8
  80a104:	320dc83a 	sub	r6,r6,r8
  80a108:	31c00217 	ldw	r7,8(r6)
  80a10c:	1205883a 	add	r2,r2,r8
  80a110:	3a406526 	beq	r7,r9,80a2a8 <_free_r+0x208>
  80a114:	32000317 	ldw	r8,12(r6)
  80a118:	3a000315 	stw	r8,12(r7)
  80a11c:	41c00215 	stw	r7,8(r8)
  80a120:	28cf883a 	add	r7,r5,r3
  80a124:	39c00117 	ldw	r7,4(r7)
  80a128:	39c0004c 	andi	r7,r7,1
  80a12c:	38003a26 	beq	r7,zero,80a218 <_free_r+0x178>
  80a130:	10c00054 	ori	r3,r2,1
  80a134:	30c00115 	stw	r3,4(r6)
  80a138:	3087883a 	add	r3,r6,r2
  80a13c:	18800015 	stw	r2,0(r3)
  80a140:	00c07fc4 	movi	r3,511
  80a144:	18801936 	bltu	r3,r2,80a1ac <_free_r+0x10c>
  80a148:	1004d0fa 	srli	r2,r2,3
  80a14c:	01c00044 	movi	r7,1
  80a150:	21400117 	ldw	r5,4(r4)
  80a154:	10c00044 	addi	r3,r2,1
  80a158:	18c7883a 	add	r3,r3,r3
  80a15c:	1005d0ba 	srai	r2,r2,2
  80a160:	18c7883a 	add	r3,r3,r3
  80a164:	18c7883a 	add	r3,r3,r3
  80a168:	1907883a 	add	r3,r3,r4
  80a16c:	3884983a 	sll	r2,r7,r2
  80a170:	19c00017 	ldw	r7,0(r3)
  80a174:	1a3ffe04 	addi	r8,r3,-8
  80a178:	1144b03a 	or	r2,r2,r5
  80a17c:	32000315 	stw	r8,12(r6)
  80a180:	31c00215 	stw	r7,8(r6)
  80a184:	20800115 	stw	r2,4(r4)
  80a188:	19800015 	stw	r6,0(r3)
  80a18c:	39800315 	stw	r6,12(r7)
  80a190:	8809883a 	mov	r4,r17
  80a194:	dfc00217 	ldw	ra,8(sp)
  80a198:	dc400117 	ldw	r17,4(sp)
  80a19c:	dc000017 	ldw	r16,0(sp)
  80a1a0:	dec00304 	addi	sp,sp,12
  80a1a4:	08102f01 	jmpi	8102f0 <__malloc_unlock>
  80a1a8:	f800283a 	ret
  80a1ac:	100ad27a 	srli	r5,r2,9
  80a1b0:	00c00104 	movi	r3,4
  80a1b4:	19404a36 	bltu	r3,r5,80a2e0 <_free_r+0x240>
  80a1b8:	100ad1ba 	srli	r5,r2,6
  80a1bc:	28c00e44 	addi	r3,r5,57
  80a1c0:	18c7883a 	add	r3,r3,r3
  80a1c4:	29400e04 	addi	r5,r5,56
  80a1c8:	18c7883a 	add	r3,r3,r3
  80a1cc:	18c7883a 	add	r3,r3,r3
  80a1d0:	1909883a 	add	r4,r3,r4
  80a1d4:	20c00017 	ldw	r3,0(r4)
  80a1d8:	01c02074 	movhi	r7,129
  80a1dc:	213ffe04 	addi	r4,r4,-8
  80a1e0:	39cbd404 	addi	r7,r7,12112
  80a1e4:	20c04426 	beq	r4,r3,80a2f8 <_free_r+0x258>
  80a1e8:	01ffff04 	movi	r7,-4
  80a1ec:	19400117 	ldw	r5,4(r3)
  80a1f0:	29ca703a 	and	r5,r5,r7
  80a1f4:	1140022e 	bgeu	r2,r5,80a200 <_free_r+0x160>
  80a1f8:	18c00217 	ldw	r3,8(r3)
  80a1fc:	20fffb1e 	bne	r4,r3,80a1ec <__alt_data_end+0xff80a1ec>
  80a200:	19000317 	ldw	r4,12(r3)
  80a204:	31000315 	stw	r4,12(r6)
  80a208:	30c00215 	stw	r3,8(r6)
  80a20c:	21800215 	stw	r6,8(r4)
  80a210:	19800315 	stw	r6,12(r3)
  80a214:	003fde06 	br	80a190 <__alt_data_end+0xff80a190>
  80a218:	29c00217 	ldw	r7,8(r5)
  80a21c:	10c5883a 	add	r2,r2,r3
  80a220:	00c02074 	movhi	r3,129
  80a224:	18cbd604 	addi	r3,r3,12120
  80a228:	38c03b26 	beq	r7,r3,80a318 <_free_r+0x278>
  80a22c:	2a000317 	ldw	r8,12(r5)
  80a230:	11400054 	ori	r5,r2,1
  80a234:	3087883a 	add	r3,r6,r2
  80a238:	3a000315 	stw	r8,12(r7)
  80a23c:	41c00215 	stw	r7,8(r8)
  80a240:	31400115 	stw	r5,4(r6)
  80a244:	18800015 	stw	r2,0(r3)
  80a248:	003fbd06 	br	80a140 <__alt_data_end+0xff80a140>
  80a24c:	39c0004c 	andi	r7,r7,1
  80a250:	10c5883a 	add	r2,r2,r3
  80a254:	3800071e 	bne	r7,zero,80a274 <_free_r+0x1d4>
  80a258:	81fffe17 	ldw	r7,-8(r16)
  80a25c:	31cdc83a 	sub	r6,r6,r7
  80a260:	30c00317 	ldw	r3,12(r6)
  80a264:	31400217 	ldw	r5,8(r6)
  80a268:	11c5883a 	add	r2,r2,r7
  80a26c:	28c00315 	stw	r3,12(r5)
  80a270:	19400215 	stw	r5,8(r3)
  80a274:	10c00054 	ori	r3,r2,1
  80a278:	30c00115 	stw	r3,4(r6)
  80a27c:	00c02074 	movhi	r3,129
  80a280:	18d15c04 	addi	r3,r3,17776
  80a284:	18c00017 	ldw	r3,0(r3)
  80a288:	21800215 	stw	r6,8(r4)
  80a28c:	10ffc036 	bltu	r2,r3,80a190 <__alt_data_end+0xff80a190>
  80a290:	00802074 	movhi	r2,129
  80a294:	10982804 	addi	r2,r2,24736
  80a298:	11400017 	ldw	r5,0(r2)
  80a29c:	8809883a 	mov	r4,r17
  80a2a0:	0809f7c0 	call	809f7c <_malloc_trim_r>
  80a2a4:	003fba06 	br	80a190 <__alt_data_end+0xff80a190>
  80a2a8:	28c9883a 	add	r4,r5,r3
  80a2ac:	21000117 	ldw	r4,4(r4)
  80a2b0:	2100004c 	andi	r4,r4,1
  80a2b4:	2000391e 	bne	r4,zero,80a39c <_free_r+0x2fc>
  80a2b8:	29c00217 	ldw	r7,8(r5)
  80a2bc:	29000317 	ldw	r4,12(r5)
  80a2c0:	1885883a 	add	r2,r3,r2
  80a2c4:	10c00054 	ori	r3,r2,1
  80a2c8:	39000315 	stw	r4,12(r7)
  80a2cc:	21c00215 	stw	r7,8(r4)
  80a2d0:	30c00115 	stw	r3,4(r6)
  80a2d4:	308d883a 	add	r6,r6,r2
  80a2d8:	30800015 	stw	r2,0(r6)
  80a2dc:	003fac06 	br	80a190 <__alt_data_end+0xff80a190>
  80a2e0:	00c00504 	movi	r3,20
  80a2e4:	19401536 	bltu	r3,r5,80a33c <_free_r+0x29c>
  80a2e8:	28c01704 	addi	r3,r5,92
  80a2ec:	18c7883a 	add	r3,r3,r3
  80a2f0:	294016c4 	addi	r5,r5,91
  80a2f4:	003fb406 	br	80a1c8 <__alt_data_end+0xff80a1c8>
  80a2f8:	280bd0ba 	srai	r5,r5,2
  80a2fc:	00c00044 	movi	r3,1
  80a300:	38800117 	ldw	r2,4(r7)
  80a304:	194a983a 	sll	r5,r3,r5
  80a308:	2007883a 	mov	r3,r4
  80a30c:	2884b03a 	or	r2,r5,r2
  80a310:	38800115 	stw	r2,4(r7)
  80a314:	003fbb06 	br	80a204 <__alt_data_end+0xff80a204>
  80a318:	21800515 	stw	r6,20(r4)
  80a31c:	21800415 	stw	r6,16(r4)
  80a320:	10c00054 	ori	r3,r2,1
  80a324:	31c00315 	stw	r7,12(r6)
  80a328:	31c00215 	stw	r7,8(r6)
  80a32c:	30c00115 	stw	r3,4(r6)
  80a330:	308d883a 	add	r6,r6,r2
  80a334:	30800015 	stw	r2,0(r6)
  80a338:	003f9506 	br	80a190 <__alt_data_end+0xff80a190>
  80a33c:	00c01504 	movi	r3,84
  80a340:	19400536 	bltu	r3,r5,80a358 <_free_r+0x2b8>
  80a344:	100ad33a 	srli	r5,r2,12
  80a348:	28c01bc4 	addi	r3,r5,111
  80a34c:	18c7883a 	add	r3,r3,r3
  80a350:	29401b84 	addi	r5,r5,110
  80a354:	003f9c06 	br	80a1c8 <__alt_data_end+0xff80a1c8>
  80a358:	00c05504 	movi	r3,340
  80a35c:	19400536 	bltu	r3,r5,80a374 <_free_r+0x2d4>
  80a360:	100ad3fa 	srli	r5,r2,15
  80a364:	28c01e04 	addi	r3,r5,120
  80a368:	18c7883a 	add	r3,r3,r3
  80a36c:	29401dc4 	addi	r5,r5,119
  80a370:	003f9506 	br	80a1c8 <__alt_data_end+0xff80a1c8>
  80a374:	00c15504 	movi	r3,1364
  80a378:	19400536 	bltu	r3,r5,80a390 <_free_r+0x2f0>
  80a37c:	100ad4ba 	srli	r5,r2,18
  80a380:	28c01f44 	addi	r3,r5,125
  80a384:	18c7883a 	add	r3,r3,r3
  80a388:	29401f04 	addi	r5,r5,124
  80a38c:	003f8e06 	br	80a1c8 <__alt_data_end+0xff80a1c8>
  80a390:	00c03f84 	movi	r3,254
  80a394:	01401f84 	movi	r5,126
  80a398:	003f8b06 	br	80a1c8 <__alt_data_end+0xff80a1c8>
  80a39c:	10c00054 	ori	r3,r2,1
  80a3a0:	30c00115 	stw	r3,4(r6)
  80a3a4:	308d883a 	add	r6,r6,r2
  80a3a8:	30800015 	stw	r2,0(r6)
  80a3ac:	003f7806 	br	80a190 <__alt_data_end+0xff80a190>

0080a3b0 <__sfvwrite_r>:
  80a3b0:	30800217 	ldw	r2,8(r6)
  80a3b4:	10006726 	beq	r2,zero,80a554 <__sfvwrite_r+0x1a4>
  80a3b8:	28c0030b 	ldhu	r3,12(r5)
  80a3bc:	defff404 	addi	sp,sp,-48
  80a3c0:	dd400715 	stw	r21,28(sp)
  80a3c4:	dd000615 	stw	r20,24(sp)
  80a3c8:	dc000215 	stw	r16,8(sp)
  80a3cc:	dfc00b15 	stw	ra,44(sp)
  80a3d0:	df000a15 	stw	fp,40(sp)
  80a3d4:	ddc00915 	stw	r23,36(sp)
  80a3d8:	dd800815 	stw	r22,32(sp)
  80a3dc:	dcc00515 	stw	r19,20(sp)
  80a3e0:	dc800415 	stw	r18,16(sp)
  80a3e4:	dc400315 	stw	r17,12(sp)
  80a3e8:	1880020c 	andi	r2,r3,8
  80a3ec:	2821883a 	mov	r16,r5
  80a3f0:	202b883a 	mov	r21,r4
  80a3f4:	3029883a 	mov	r20,r6
  80a3f8:	10002726 	beq	r2,zero,80a498 <__sfvwrite_r+0xe8>
  80a3fc:	28800417 	ldw	r2,16(r5)
  80a400:	10002526 	beq	r2,zero,80a498 <__sfvwrite_r+0xe8>
  80a404:	1880008c 	andi	r2,r3,2
  80a408:	a4400017 	ldw	r17,0(r20)
  80a40c:	10002a26 	beq	r2,zero,80a4b8 <__sfvwrite_r+0x108>
  80a410:	05a00034 	movhi	r22,32768
  80a414:	0027883a 	mov	r19,zero
  80a418:	0025883a 	mov	r18,zero
  80a41c:	b5bf0004 	addi	r22,r22,-1024
  80a420:	980d883a 	mov	r6,r19
  80a424:	a809883a 	mov	r4,r21
  80a428:	90004626 	beq	r18,zero,80a544 <__sfvwrite_r+0x194>
  80a42c:	900f883a 	mov	r7,r18
  80a430:	b480022e 	bgeu	r22,r18,80a43c <__sfvwrite_r+0x8c>
  80a434:	01e00034 	movhi	r7,32768
  80a438:	39ff0004 	addi	r7,r7,-1024
  80a43c:	80800917 	ldw	r2,36(r16)
  80a440:	81400717 	ldw	r5,28(r16)
  80a444:	103ee83a 	callr	r2
  80a448:	0080570e 	bge	zero,r2,80a5a8 <__sfvwrite_r+0x1f8>
  80a44c:	a0c00217 	ldw	r3,8(r20)
  80a450:	98a7883a 	add	r19,r19,r2
  80a454:	90a5c83a 	sub	r18,r18,r2
  80a458:	1885c83a 	sub	r2,r3,r2
  80a45c:	a0800215 	stw	r2,8(r20)
  80a460:	103fef1e 	bne	r2,zero,80a420 <__alt_data_end+0xff80a420>
  80a464:	0005883a 	mov	r2,zero
  80a468:	dfc00b17 	ldw	ra,44(sp)
  80a46c:	df000a17 	ldw	fp,40(sp)
  80a470:	ddc00917 	ldw	r23,36(sp)
  80a474:	dd800817 	ldw	r22,32(sp)
  80a478:	dd400717 	ldw	r21,28(sp)
  80a47c:	dd000617 	ldw	r20,24(sp)
  80a480:	dcc00517 	ldw	r19,20(sp)
  80a484:	dc800417 	ldw	r18,16(sp)
  80a488:	dc400317 	ldw	r17,12(sp)
  80a48c:	dc000217 	ldw	r16,8(sp)
  80a490:	dec00c04 	addi	sp,sp,48
  80a494:	f800283a 	ret
  80a498:	800b883a 	mov	r5,r16
  80a49c:	a809883a 	mov	r4,r21
  80a4a0:	0807f580 	call	807f58 <__swsetup_r>
  80a4a4:	1000eb1e 	bne	r2,zero,80a854 <__sfvwrite_r+0x4a4>
  80a4a8:	80c0030b 	ldhu	r3,12(r16)
  80a4ac:	a4400017 	ldw	r17,0(r20)
  80a4b0:	1880008c 	andi	r2,r3,2
  80a4b4:	103fd61e 	bne	r2,zero,80a410 <__alt_data_end+0xff80a410>
  80a4b8:	1880004c 	andi	r2,r3,1
  80a4bc:	10003f1e 	bne	r2,zero,80a5bc <__sfvwrite_r+0x20c>
  80a4c0:	0039883a 	mov	fp,zero
  80a4c4:	0025883a 	mov	r18,zero
  80a4c8:	90001a26 	beq	r18,zero,80a534 <__sfvwrite_r+0x184>
  80a4cc:	1880800c 	andi	r2,r3,512
  80a4d0:	84c00217 	ldw	r19,8(r16)
  80a4d4:	10002126 	beq	r2,zero,80a55c <__sfvwrite_r+0x1ac>
  80a4d8:	982f883a 	mov	r23,r19
  80a4dc:	94c09336 	bltu	r18,r19,80a72c <__sfvwrite_r+0x37c>
  80a4e0:	1881200c 	andi	r2,r3,1152
  80a4e4:	10009e1e 	bne	r2,zero,80a760 <__sfvwrite_r+0x3b0>
  80a4e8:	81000017 	ldw	r4,0(r16)
  80a4ec:	b80d883a 	mov	r6,r23
  80a4f0:	e00b883a 	mov	r5,fp
  80a4f4:	080b6c40 	call	80b6c4 <memmove>
  80a4f8:	80c00217 	ldw	r3,8(r16)
  80a4fc:	81000017 	ldw	r4,0(r16)
  80a500:	9005883a 	mov	r2,r18
  80a504:	1ce7c83a 	sub	r19,r3,r19
  80a508:	25cf883a 	add	r7,r4,r23
  80a50c:	84c00215 	stw	r19,8(r16)
  80a510:	81c00015 	stw	r7,0(r16)
  80a514:	a0c00217 	ldw	r3,8(r20)
  80a518:	e0b9883a 	add	fp,fp,r2
  80a51c:	90a5c83a 	sub	r18,r18,r2
  80a520:	18a7c83a 	sub	r19,r3,r2
  80a524:	a4c00215 	stw	r19,8(r20)
  80a528:	983fce26 	beq	r19,zero,80a464 <__alt_data_end+0xff80a464>
  80a52c:	80c0030b 	ldhu	r3,12(r16)
  80a530:	903fe61e 	bne	r18,zero,80a4cc <__alt_data_end+0xff80a4cc>
  80a534:	8f000017 	ldw	fp,0(r17)
  80a538:	8c800117 	ldw	r18,4(r17)
  80a53c:	8c400204 	addi	r17,r17,8
  80a540:	003fe106 	br	80a4c8 <__alt_data_end+0xff80a4c8>
  80a544:	8cc00017 	ldw	r19,0(r17)
  80a548:	8c800117 	ldw	r18,4(r17)
  80a54c:	8c400204 	addi	r17,r17,8
  80a550:	003fb306 	br	80a420 <__alt_data_end+0xff80a420>
  80a554:	0005883a 	mov	r2,zero
  80a558:	f800283a 	ret
  80a55c:	81000017 	ldw	r4,0(r16)
  80a560:	80800417 	ldw	r2,16(r16)
  80a564:	11005736 	bltu	r2,r4,80a6c4 <__sfvwrite_r+0x314>
  80a568:	85c00517 	ldw	r23,20(r16)
  80a56c:	95c05536 	bltu	r18,r23,80a6c4 <__sfvwrite_r+0x314>
  80a570:	00a00034 	movhi	r2,32768
  80a574:	10bfffc4 	addi	r2,r2,-1
  80a578:	9009883a 	mov	r4,r18
  80a57c:	1480012e 	bgeu	r2,r18,80a584 <__sfvwrite_r+0x1d4>
  80a580:	1009883a 	mov	r4,r2
  80a584:	b80b883a 	mov	r5,r23
  80a588:	08028b40 	call	8028b4 <__divsi3>
  80a58c:	15cf383a 	mul	r7,r2,r23
  80a590:	81400717 	ldw	r5,28(r16)
  80a594:	80800917 	ldw	r2,36(r16)
  80a598:	e00d883a 	mov	r6,fp
  80a59c:	a809883a 	mov	r4,r21
  80a5a0:	103ee83a 	callr	r2
  80a5a4:	00bfdb16 	blt	zero,r2,80a514 <__alt_data_end+0xff80a514>
  80a5a8:	8080030b 	ldhu	r2,12(r16)
  80a5ac:	10801014 	ori	r2,r2,64
  80a5b0:	8080030d 	sth	r2,12(r16)
  80a5b4:	00bfffc4 	movi	r2,-1
  80a5b8:	003fab06 	br	80a468 <__alt_data_end+0xff80a468>
  80a5bc:	0027883a 	mov	r19,zero
  80a5c0:	0011883a 	mov	r8,zero
  80a5c4:	0039883a 	mov	fp,zero
  80a5c8:	0025883a 	mov	r18,zero
  80a5cc:	90001f26 	beq	r18,zero,80a64c <__sfvwrite_r+0x29c>
  80a5d0:	40005a26 	beq	r8,zero,80a73c <__sfvwrite_r+0x38c>
  80a5d4:	982d883a 	mov	r22,r19
  80a5d8:	94c0012e 	bgeu	r18,r19,80a5e0 <__sfvwrite_r+0x230>
  80a5dc:	902d883a 	mov	r22,r18
  80a5e0:	81000017 	ldw	r4,0(r16)
  80a5e4:	80800417 	ldw	r2,16(r16)
  80a5e8:	b02f883a 	mov	r23,r22
  80a5ec:	81c00517 	ldw	r7,20(r16)
  80a5f0:	1100032e 	bgeu	r2,r4,80a600 <__sfvwrite_r+0x250>
  80a5f4:	80c00217 	ldw	r3,8(r16)
  80a5f8:	38c7883a 	add	r3,r7,r3
  80a5fc:	1d801816 	blt	r3,r22,80a660 <__sfvwrite_r+0x2b0>
  80a600:	b1c03e16 	blt	r22,r7,80a6fc <__sfvwrite_r+0x34c>
  80a604:	80800917 	ldw	r2,36(r16)
  80a608:	81400717 	ldw	r5,28(r16)
  80a60c:	e00d883a 	mov	r6,fp
  80a610:	da000115 	stw	r8,4(sp)
  80a614:	a809883a 	mov	r4,r21
  80a618:	103ee83a 	callr	r2
  80a61c:	102f883a 	mov	r23,r2
  80a620:	da000117 	ldw	r8,4(sp)
  80a624:	00bfe00e 	bge	zero,r2,80a5a8 <__alt_data_end+0xff80a5a8>
  80a628:	9de7c83a 	sub	r19,r19,r23
  80a62c:	98001f26 	beq	r19,zero,80a6ac <__sfvwrite_r+0x2fc>
  80a630:	a0800217 	ldw	r2,8(r20)
  80a634:	e5f9883a 	add	fp,fp,r23
  80a638:	95e5c83a 	sub	r18,r18,r23
  80a63c:	15efc83a 	sub	r23,r2,r23
  80a640:	a5c00215 	stw	r23,8(r20)
  80a644:	b83f8726 	beq	r23,zero,80a464 <__alt_data_end+0xff80a464>
  80a648:	903fe11e 	bne	r18,zero,80a5d0 <__alt_data_end+0xff80a5d0>
  80a64c:	8f000017 	ldw	fp,0(r17)
  80a650:	8c800117 	ldw	r18,4(r17)
  80a654:	0011883a 	mov	r8,zero
  80a658:	8c400204 	addi	r17,r17,8
  80a65c:	003fdb06 	br	80a5cc <__alt_data_end+0xff80a5cc>
  80a660:	180d883a 	mov	r6,r3
  80a664:	e00b883a 	mov	r5,fp
  80a668:	da000115 	stw	r8,4(sp)
  80a66c:	d8c00015 	stw	r3,0(sp)
  80a670:	080b6c40 	call	80b6c4 <memmove>
  80a674:	d8c00017 	ldw	r3,0(sp)
  80a678:	80800017 	ldw	r2,0(r16)
  80a67c:	800b883a 	mov	r5,r16
  80a680:	a809883a 	mov	r4,r21
  80a684:	10c5883a 	add	r2,r2,r3
  80a688:	80800015 	stw	r2,0(r16)
  80a68c:	d8c00015 	stw	r3,0(sp)
  80a690:	0809b500 	call	809b50 <_fflush_r>
  80a694:	d8c00017 	ldw	r3,0(sp)
  80a698:	da000117 	ldw	r8,4(sp)
  80a69c:	103fc21e 	bne	r2,zero,80a5a8 <__alt_data_end+0xff80a5a8>
  80a6a0:	182f883a 	mov	r23,r3
  80a6a4:	9de7c83a 	sub	r19,r19,r23
  80a6a8:	983fe11e 	bne	r19,zero,80a630 <__alt_data_end+0xff80a630>
  80a6ac:	800b883a 	mov	r5,r16
  80a6b0:	a809883a 	mov	r4,r21
  80a6b4:	0809b500 	call	809b50 <_fflush_r>
  80a6b8:	103fbb1e 	bne	r2,zero,80a5a8 <__alt_data_end+0xff80a5a8>
  80a6bc:	0011883a 	mov	r8,zero
  80a6c0:	003fdb06 	br	80a630 <__alt_data_end+0xff80a630>
  80a6c4:	94c0012e 	bgeu	r18,r19,80a6cc <__sfvwrite_r+0x31c>
  80a6c8:	9027883a 	mov	r19,r18
  80a6cc:	980d883a 	mov	r6,r19
  80a6d0:	e00b883a 	mov	r5,fp
  80a6d4:	080b6c40 	call	80b6c4 <memmove>
  80a6d8:	80800217 	ldw	r2,8(r16)
  80a6dc:	80c00017 	ldw	r3,0(r16)
  80a6e0:	14c5c83a 	sub	r2,r2,r19
  80a6e4:	1cc7883a 	add	r3,r3,r19
  80a6e8:	80800215 	stw	r2,8(r16)
  80a6ec:	80c00015 	stw	r3,0(r16)
  80a6f0:	10004326 	beq	r2,zero,80a800 <__sfvwrite_r+0x450>
  80a6f4:	9805883a 	mov	r2,r19
  80a6f8:	003f8606 	br	80a514 <__alt_data_end+0xff80a514>
  80a6fc:	b00d883a 	mov	r6,r22
  80a700:	e00b883a 	mov	r5,fp
  80a704:	da000115 	stw	r8,4(sp)
  80a708:	080b6c40 	call	80b6c4 <memmove>
  80a70c:	80800217 	ldw	r2,8(r16)
  80a710:	80c00017 	ldw	r3,0(r16)
  80a714:	da000117 	ldw	r8,4(sp)
  80a718:	1585c83a 	sub	r2,r2,r22
  80a71c:	1dad883a 	add	r22,r3,r22
  80a720:	80800215 	stw	r2,8(r16)
  80a724:	85800015 	stw	r22,0(r16)
  80a728:	003fbf06 	br	80a628 <__alt_data_end+0xff80a628>
  80a72c:	81000017 	ldw	r4,0(r16)
  80a730:	9027883a 	mov	r19,r18
  80a734:	902f883a 	mov	r23,r18
  80a738:	003f6c06 	br	80a4ec <__alt_data_end+0xff80a4ec>
  80a73c:	900d883a 	mov	r6,r18
  80a740:	01400284 	movi	r5,10
  80a744:	e009883a 	mov	r4,fp
  80a748:	080b4980 	call	80b498 <memchr>
  80a74c:	10003e26 	beq	r2,zero,80a848 <__sfvwrite_r+0x498>
  80a750:	10800044 	addi	r2,r2,1
  80a754:	1727c83a 	sub	r19,r2,fp
  80a758:	02000044 	movi	r8,1
  80a75c:	003f9d06 	br	80a5d4 <__alt_data_end+0xff80a5d4>
  80a760:	80800517 	ldw	r2,20(r16)
  80a764:	81400417 	ldw	r5,16(r16)
  80a768:	81c00017 	ldw	r7,0(r16)
  80a76c:	10a7883a 	add	r19,r2,r2
  80a770:	9885883a 	add	r2,r19,r2
  80a774:	1026d7fa 	srli	r19,r2,31
  80a778:	396dc83a 	sub	r22,r7,r5
  80a77c:	b1000044 	addi	r4,r22,1
  80a780:	9885883a 	add	r2,r19,r2
  80a784:	1027d07a 	srai	r19,r2,1
  80a788:	2485883a 	add	r2,r4,r18
  80a78c:	980d883a 	mov	r6,r19
  80a790:	9880022e 	bgeu	r19,r2,80a79c <__sfvwrite_r+0x3ec>
  80a794:	1027883a 	mov	r19,r2
  80a798:	100d883a 	mov	r6,r2
  80a79c:	18c1000c 	andi	r3,r3,1024
  80a7a0:	18001c26 	beq	r3,zero,80a814 <__sfvwrite_r+0x464>
  80a7a4:	300b883a 	mov	r5,r6
  80a7a8:	a809883a 	mov	r4,r21
  80a7ac:	080ac8c0 	call	80ac8c <_malloc_r>
  80a7b0:	102f883a 	mov	r23,r2
  80a7b4:	10002926 	beq	r2,zero,80a85c <__sfvwrite_r+0x4ac>
  80a7b8:	81400417 	ldw	r5,16(r16)
  80a7bc:	b00d883a 	mov	r6,r22
  80a7c0:	1009883a 	mov	r4,r2
  80a7c4:	080b57c0 	call	80b57c <memcpy>
  80a7c8:	8080030b 	ldhu	r2,12(r16)
  80a7cc:	00fedfc4 	movi	r3,-1153
  80a7d0:	10c4703a 	and	r2,r2,r3
  80a7d4:	10802014 	ori	r2,r2,128
  80a7d8:	8080030d 	sth	r2,12(r16)
  80a7dc:	bd89883a 	add	r4,r23,r22
  80a7e0:	9d8fc83a 	sub	r7,r19,r22
  80a7e4:	85c00415 	stw	r23,16(r16)
  80a7e8:	84c00515 	stw	r19,20(r16)
  80a7ec:	81000015 	stw	r4,0(r16)
  80a7f0:	9027883a 	mov	r19,r18
  80a7f4:	81c00215 	stw	r7,8(r16)
  80a7f8:	902f883a 	mov	r23,r18
  80a7fc:	003f3b06 	br	80a4ec <__alt_data_end+0xff80a4ec>
  80a800:	800b883a 	mov	r5,r16
  80a804:	a809883a 	mov	r4,r21
  80a808:	0809b500 	call	809b50 <_fflush_r>
  80a80c:	103fb926 	beq	r2,zero,80a6f4 <__alt_data_end+0xff80a6f4>
  80a810:	003f6506 	br	80a5a8 <__alt_data_end+0xff80a5a8>
  80a814:	a809883a 	mov	r4,r21
  80a818:	080c9440 	call	80c944 <_realloc_r>
  80a81c:	102f883a 	mov	r23,r2
  80a820:	103fee1e 	bne	r2,zero,80a7dc <__alt_data_end+0xff80a7dc>
  80a824:	81400417 	ldw	r5,16(r16)
  80a828:	a809883a 	mov	r4,r21
  80a82c:	080a0a00 	call	80a0a0 <_free_r>
  80a830:	8080030b 	ldhu	r2,12(r16)
  80a834:	00ffdfc4 	movi	r3,-129
  80a838:	1884703a 	and	r2,r3,r2
  80a83c:	00c00304 	movi	r3,12
  80a840:	a8c00015 	stw	r3,0(r21)
  80a844:	003f5906 	br	80a5ac <__alt_data_end+0xff80a5ac>
  80a848:	94c00044 	addi	r19,r18,1
  80a84c:	02000044 	movi	r8,1
  80a850:	003f6006 	br	80a5d4 <__alt_data_end+0xff80a5d4>
  80a854:	00bfffc4 	movi	r2,-1
  80a858:	003f0306 	br	80a468 <__alt_data_end+0xff80a468>
  80a85c:	00800304 	movi	r2,12
  80a860:	a8800015 	stw	r2,0(r21)
  80a864:	8080030b 	ldhu	r2,12(r16)
  80a868:	003f5006 	br	80a5ac <__alt_data_end+0xff80a5ac>

0080a86c <_fwalk>:
  80a86c:	defff704 	addi	sp,sp,-36
  80a870:	dd000415 	stw	r20,16(sp)
  80a874:	dfc00815 	stw	ra,32(sp)
  80a878:	ddc00715 	stw	r23,28(sp)
  80a87c:	dd800615 	stw	r22,24(sp)
  80a880:	dd400515 	stw	r21,20(sp)
  80a884:	dcc00315 	stw	r19,12(sp)
  80a888:	dc800215 	stw	r18,8(sp)
  80a88c:	dc400115 	stw	r17,4(sp)
  80a890:	dc000015 	stw	r16,0(sp)
  80a894:	2500b804 	addi	r20,r4,736
  80a898:	a0002326 	beq	r20,zero,80a928 <_fwalk+0xbc>
  80a89c:	282b883a 	mov	r21,r5
  80a8a0:	002f883a 	mov	r23,zero
  80a8a4:	05800044 	movi	r22,1
  80a8a8:	04ffffc4 	movi	r19,-1
  80a8ac:	a4400117 	ldw	r17,4(r20)
  80a8b0:	a4800217 	ldw	r18,8(r20)
  80a8b4:	8c7fffc4 	addi	r17,r17,-1
  80a8b8:	88000d16 	blt	r17,zero,80a8f0 <_fwalk+0x84>
  80a8bc:	94000304 	addi	r16,r18,12
  80a8c0:	94800384 	addi	r18,r18,14
  80a8c4:	8080000b 	ldhu	r2,0(r16)
  80a8c8:	8c7fffc4 	addi	r17,r17,-1
  80a8cc:	813ffd04 	addi	r4,r16,-12
  80a8d0:	b080042e 	bgeu	r22,r2,80a8e4 <_fwalk+0x78>
  80a8d4:	9080000f 	ldh	r2,0(r18)
  80a8d8:	14c00226 	beq	r2,r19,80a8e4 <_fwalk+0x78>
  80a8dc:	a83ee83a 	callr	r21
  80a8e0:	b8aeb03a 	or	r23,r23,r2
  80a8e4:	84001a04 	addi	r16,r16,104
  80a8e8:	94801a04 	addi	r18,r18,104
  80a8ec:	8cfff51e 	bne	r17,r19,80a8c4 <__alt_data_end+0xff80a8c4>
  80a8f0:	a5000017 	ldw	r20,0(r20)
  80a8f4:	a03fed1e 	bne	r20,zero,80a8ac <__alt_data_end+0xff80a8ac>
  80a8f8:	b805883a 	mov	r2,r23
  80a8fc:	dfc00817 	ldw	ra,32(sp)
  80a900:	ddc00717 	ldw	r23,28(sp)
  80a904:	dd800617 	ldw	r22,24(sp)
  80a908:	dd400517 	ldw	r21,20(sp)
  80a90c:	dd000417 	ldw	r20,16(sp)
  80a910:	dcc00317 	ldw	r19,12(sp)
  80a914:	dc800217 	ldw	r18,8(sp)
  80a918:	dc400117 	ldw	r17,4(sp)
  80a91c:	dc000017 	ldw	r16,0(sp)
  80a920:	dec00904 	addi	sp,sp,36
  80a924:	f800283a 	ret
  80a928:	002f883a 	mov	r23,zero
  80a92c:	003ff206 	br	80a8f8 <__alt_data_end+0xff80a8f8>

0080a930 <_fwalk_reent>:
  80a930:	defff704 	addi	sp,sp,-36
  80a934:	dd000415 	stw	r20,16(sp)
  80a938:	dfc00815 	stw	ra,32(sp)
  80a93c:	ddc00715 	stw	r23,28(sp)
  80a940:	dd800615 	stw	r22,24(sp)
  80a944:	dd400515 	stw	r21,20(sp)
  80a948:	dcc00315 	stw	r19,12(sp)
  80a94c:	dc800215 	stw	r18,8(sp)
  80a950:	dc400115 	stw	r17,4(sp)
  80a954:	dc000015 	stw	r16,0(sp)
  80a958:	2500b804 	addi	r20,r4,736
  80a95c:	a0002326 	beq	r20,zero,80a9ec <_fwalk_reent+0xbc>
  80a960:	282b883a 	mov	r21,r5
  80a964:	2027883a 	mov	r19,r4
  80a968:	002f883a 	mov	r23,zero
  80a96c:	05800044 	movi	r22,1
  80a970:	04bfffc4 	movi	r18,-1
  80a974:	a4400117 	ldw	r17,4(r20)
  80a978:	a4000217 	ldw	r16,8(r20)
  80a97c:	8c7fffc4 	addi	r17,r17,-1
  80a980:	88000c16 	blt	r17,zero,80a9b4 <_fwalk_reent+0x84>
  80a984:	84000304 	addi	r16,r16,12
  80a988:	8080000b 	ldhu	r2,0(r16)
  80a98c:	8c7fffc4 	addi	r17,r17,-1
  80a990:	817ffd04 	addi	r5,r16,-12
  80a994:	b080052e 	bgeu	r22,r2,80a9ac <_fwalk_reent+0x7c>
  80a998:	8080008f 	ldh	r2,2(r16)
  80a99c:	9809883a 	mov	r4,r19
  80a9a0:	14800226 	beq	r2,r18,80a9ac <_fwalk_reent+0x7c>
  80a9a4:	a83ee83a 	callr	r21
  80a9a8:	b8aeb03a 	or	r23,r23,r2
  80a9ac:	84001a04 	addi	r16,r16,104
  80a9b0:	8cbff51e 	bne	r17,r18,80a988 <__alt_data_end+0xff80a988>
  80a9b4:	a5000017 	ldw	r20,0(r20)
  80a9b8:	a03fee1e 	bne	r20,zero,80a974 <__alt_data_end+0xff80a974>
  80a9bc:	b805883a 	mov	r2,r23
  80a9c0:	dfc00817 	ldw	ra,32(sp)
  80a9c4:	ddc00717 	ldw	r23,28(sp)
  80a9c8:	dd800617 	ldw	r22,24(sp)
  80a9cc:	dd400517 	ldw	r21,20(sp)
  80a9d0:	dd000417 	ldw	r20,16(sp)
  80a9d4:	dcc00317 	ldw	r19,12(sp)
  80a9d8:	dc800217 	ldw	r18,8(sp)
  80a9dc:	dc400117 	ldw	r17,4(sp)
  80a9e0:	dc000017 	ldw	r16,0(sp)
  80a9e4:	dec00904 	addi	sp,sp,36
  80a9e8:	f800283a 	ret
  80a9ec:	002f883a 	mov	r23,zero
  80a9f0:	003ff206 	br	80a9bc <__alt_data_end+0xff80a9bc>

0080a9f4 <_setlocale_r>:
  80a9f4:	30001b26 	beq	r6,zero,80aa64 <_setlocale_r+0x70>
  80a9f8:	01402074 	movhi	r5,129
  80a9fc:	defffe04 	addi	sp,sp,-8
  80aa00:	294a4e04 	addi	r5,r5,10552
  80aa04:	3009883a 	mov	r4,r6
  80aa08:	dc000015 	stw	r16,0(sp)
  80aa0c:	dfc00115 	stw	ra,4(sp)
  80aa10:	3021883a 	mov	r16,r6
  80aa14:	080d0ac0 	call	80d0ac <strcmp>
  80aa18:	1000061e 	bne	r2,zero,80aa34 <_setlocale_r+0x40>
  80aa1c:	00802074 	movhi	r2,129
  80aa20:	108a4d04 	addi	r2,r2,10548
  80aa24:	dfc00117 	ldw	ra,4(sp)
  80aa28:	dc000017 	ldw	r16,0(sp)
  80aa2c:	dec00204 	addi	sp,sp,8
  80aa30:	f800283a 	ret
  80aa34:	01402074 	movhi	r5,129
  80aa38:	294a4d04 	addi	r5,r5,10548
  80aa3c:	8009883a 	mov	r4,r16
  80aa40:	080d0ac0 	call	80d0ac <strcmp>
  80aa44:	103ff526 	beq	r2,zero,80aa1c <__alt_data_end+0xff80aa1c>
  80aa48:	01402074 	movhi	r5,129
  80aa4c:	294a3804 	addi	r5,r5,10464
  80aa50:	8009883a 	mov	r4,r16
  80aa54:	080d0ac0 	call	80d0ac <strcmp>
  80aa58:	103ff026 	beq	r2,zero,80aa1c <__alt_data_end+0xff80aa1c>
  80aa5c:	0005883a 	mov	r2,zero
  80aa60:	003ff006 	br	80aa24 <__alt_data_end+0xff80aa24>
  80aa64:	00802074 	movhi	r2,129
  80aa68:	108a4d04 	addi	r2,r2,10548
  80aa6c:	f800283a 	ret

0080aa70 <__locale_charset>:
  80aa70:	00802074 	movhi	r2,129
  80aa74:	108bbe04 	addi	r2,r2,12024
  80aa78:	f800283a 	ret

0080aa7c <__locale_mb_cur_max>:
  80aa7c:	00802074 	movhi	r2,129
  80aa80:	10915a04 	addi	r2,r2,17768
  80aa84:	10800017 	ldw	r2,0(r2)
  80aa88:	f800283a 	ret

0080aa8c <__locale_msgcharset>:
  80aa8c:	00802074 	movhi	r2,129
  80aa90:	108bb604 	addi	r2,r2,11992
  80aa94:	f800283a 	ret

0080aa98 <__locale_cjk_lang>:
  80aa98:	0005883a 	mov	r2,zero
  80aa9c:	f800283a 	ret

0080aaa0 <_localeconv_r>:
  80aaa0:	00802074 	movhi	r2,129
  80aaa4:	108bc604 	addi	r2,r2,12056
  80aaa8:	f800283a 	ret

0080aaac <setlocale>:
  80aaac:	00802074 	movhi	r2,129
  80aab0:	10915904 	addi	r2,r2,17764
  80aab4:	280d883a 	mov	r6,r5
  80aab8:	200b883a 	mov	r5,r4
  80aabc:	11000017 	ldw	r4,0(r2)
  80aac0:	080a9f41 	jmpi	80a9f4 <_setlocale_r>

0080aac4 <localeconv>:
  80aac4:	00802074 	movhi	r2,129
  80aac8:	108bc604 	addi	r2,r2,12056
  80aacc:	f800283a 	ret

0080aad0 <__smakebuf_r>:
  80aad0:	2880030b 	ldhu	r2,12(r5)
  80aad4:	10c0008c 	andi	r3,r2,2
  80aad8:	1800411e 	bne	r3,zero,80abe0 <__smakebuf_r+0x110>
  80aadc:	deffec04 	addi	sp,sp,-80
  80aae0:	dc000f15 	stw	r16,60(sp)
  80aae4:	2821883a 	mov	r16,r5
  80aae8:	2940038f 	ldh	r5,14(r5)
  80aaec:	dc401015 	stw	r17,64(sp)
  80aaf0:	dfc01315 	stw	ra,76(sp)
  80aaf4:	dcc01215 	stw	r19,72(sp)
  80aaf8:	dc801115 	stw	r18,68(sp)
  80aafc:	2023883a 	mov	r17,r4
  80ab00:	28001c16 	blt	r5,zero,80ab74 <__smakebuf_r+0xa4>
  80ab04:	d80d883a 	mov	r6,sp
  80ab08:	080ec540 	call	80ec54 <_fstat_r>
  80ab0c:	10001816 	blt	r2,zero,80ab70 <__smakebuf_r+0xa0>
  80ab10:	d8800117 	ldw	r2,4(sp)
  80ab14:	00e00014 	movui	r3,32768
  80ab18:	10bc000c 	andi	r2,r2,61440
  80ab1c:	14c80020 	cmpeqi	r19,r2,8192
  80ab20:	10c03726 	beq	r2,r3,80ac00 <__smakebuf_r+0x130>
  80ab24:	80c0030b 	ldhu	r3,12(r16)
  80ab28:	18c20014 	ori	r3,r3,2048
  80ab2c:	80c0030d 	sth	r3,12(r16)
  80ab30:	00c80004 	movi	r3,8192
  80ab34:	10c0521e 	bne	r2,r3,80ac80 <__smakebuf_r+0x1b0>
  80ab38:	8140038f 	ldh	r5,14(r16)
  80ab3c:	8809883a 	mov	r4,r17
  80ab40:	080ecb00 	call	80ecb0 <_isatty_r>
  80ab44:	10004c26 	beq	r2,zero,80ac78 <__smakebuf_r+0x1a8>
  80ab48:	8080030b 	ldhu	r2,12(r16)
  80ab4c:	80c010c4 	addi	r3,r16,67
  80ab50:	80c00015 	stw	r3,0(r16)
  80ab54:	10800054 	ori	r2,r2,1
  80ab58:	8080030d 	sth	r2,12(r16)
  80ab5c:	00800044 	movi	r2,1
  80ab60:	80c00415 	stw	r3,16(r16)
  80ab64:	80800515 	stw	r2,20(r16)
  80ab68:	04810004 	movi	r18,1024
  80ab6c:	00000706 	br	80ab8c <__smakebuf_r+0xbc>
  80ab70:	8080030b 	ldhu	r2,12(r16)
  80ab74:	10c0200c 	andi	r3,r2,128
  80ab78:	18001f1e 	bne	r3,zero,80abf8 <__smakebuf_r+0x128>
  80ab7c:	04810004 	movi	r18,1024
  80ab80:	10820014 	ori	r2,r2,2048
  80ab84:	8080030d 	sth	r2,12(r16)
  80ab88:	0027883a 	mov	r19,zero
  80ab8c:	900b883a 	mov	r5,r18
  80ab90:	8809883a 	mov	r4,r17
  80ab94:	080ac8c0 	call	80ac8c <_malloc_r>
  80ab98:	10002c26 	beq	r2,zero,80ac4c <__smakebuf_r+0x17c>
  80ab9c:	80c0030b 	ldhu	r3,12(r16)
  80aba0:	01002074 	movhi	r4,129
  80aba4:	2126f904 	addi	r4,r4,-25628
  80aba8:	89000f15 	stw	r4,60(r17)
  80abac:	18c02014 	ori	r3,r3,128
  80abb0:	80c0030d 	sth	r3,12(r16)
  80abb4:	80800015 	stw	r2,0(r16)
  80abb8:	80800415 	stw	r2,16(r16)
  80abbc:	84800515 	stw	r18,20(r16)
  80abc0:	98001a1e 	bne	r19,zero,80ac2c <__smakebuf_r+0x15c>
  80abc4:	dfc01317 	ldw	ra,76(sp)
  80abc8:	dcc01217 	ldw	r19,72(sp)
  80abcc:	dc801117 	ldw	r18,68(sp)
  80abd0:	dc401017 	ldw	r17,64(sp)
  80abd4:	dc000f17 	ldw	r16,60(sp)
  80abd8:	dec01404 	addi	sp,sp,80
  80abdc:	f800283a 	ret
  80abe0:	288010c4 	addi	r2,r5,67
  80abe4:	28800015 	stw	r2,0(r5)
  80abe8:	28800415 	stw	r2,16(r5)
  80abec:	00800044 	movi	r2,1
  80abf0:	28800515 	stw	r2,20(r5)
  80abf4:	f800283a 	ret
  80abf8:	04801004 	movi	r18,64
  80abfc:	003fe006 	br	80ab80 <__alt_data_end+0xff80ab80>
  80ac00:	81000a17 	ldw	r4,40(r16)
  80ac04:	00c02074 	movhi	r3,129
  80ac08:	18f41204 	addi	r3,r3,-12216
  80ac0c:	20ffc51e 	bne	r4,r3,80ab24 <__alt_data_end+0xff80ab24>
  80ac10:	8080030b 	ldhu	r2,12(r16)
  80ac14:	04810004 	movi	r18,1024
  80ac18:	84801315 	stw	r18,76(r16)
  80ac1c:	1484b03a 	or	r2,r2,r18
  80ac20:	8080030d 	sth	r2,12(r16)
  80ac24:	0027883a 	mov	r19,zero
  80ac28:	003fd806 	br	80ab8c <__alt_data_end+0xff80ab8c>
  80ac2c:	8140038f 	ldh	r5,14(r16)
  80ac30:	8809883a 	mov	r4,r17
  80ac34:	080ecb00 	call	80ecb0 <_isatty_r>
  80ac38:	103fe226 	beq	r2,zero,80abc4 <__alt_data_end+0xff80abc4>
  80ac3c:	8080030b 	ldhu	r2,12(r16)
  80ac40:	10800054 	ori	r2,r2,1
  80ac44:	8080030d 	sth	r2,12(r16)
  80ac48:	003fde06 	br	80abc4 <__alt_data_end+0xff80abc4>
  80ac4c:	8080030b 	ldhu	r2,12(r16)
  80ac50:	10c0800c 	andi	r3,r2,512
  80ac54:	183fdb1e 	bne	r3,zero,80abc4 <__alt_data_end+0xff80abc4>
  80ac58:	10800094 	ori	r2,r2,2
  80ac5c:	80c010c4 	addi	r3,r16,67
  80ac60:	8080030d 	sth	r2,12(r16)
  80ac64:	00800044 	movi	r2,1
  80ac68:	80c00015 	stw	r3,0(r16)
  80ac6c:	80c00415 	stw	r3,16(r16)
  80ac70:	80800515 	stw	r2,20(r16)
  80ac74:	003fd306 	br	80abc4 <__alt_data_end+0xff80abc4>
  80ac78:	04810004 	movi	r18,1024
  80ac7c:	003fc306 	br	80ab8c <__alt_data_end+0xff80ab8c>
  80ac80:	0027883a 	mov	r19,zero
  80ac84:	04810004 	movi	r18,1024
  80ac88:	003fc006 	br	80ab8c <__alt_data_end+0xff80ab8c>

0080ac8c <_malloc_r>:
  80ac8c:	defff504 	addi	sp,sp,-44
  80ac90:	dc800315 	stw	r18,12(sp)
  80ac94:	dfc00a15 	stw	ra,40(sp)
  80ac98:	df000915 	stw	fp,36(sp)
  80ac9c:	ddc00815 	stw	r23,32(sp)
  80aca0:	dd800715 	stw	r22,28(sp)
  80aca4:	dd400615 	stw	r21,24(sp)
  80aca8:	dd000515 	stw	r20,20(sp)
  80acac:	dcc00415 	stw	r19,16(sp)
  80acb0:	dc400215 	stw	r17,8(sp)
  80acb4:	dc000115 	stw	r16,4(sp)
  80acb8:	288002c4 	addi	r2,r5,11
  80acbc:	00c00584 	movi	r3,22
  80acc0:	2025883a 	mov	r18,r4
  80acc4:	18807f2e 	bgeu	r3,r2,80aec4 <_malloc_r+0x238>
  80acc8:	047ffe04 	movi	r17,-8
  80accc:	1462703a 	and	r17,r2,r17
  80acd0:	8800a316 	blt	r17,zero,80af60 <_malloc_r+0x2d4>
  80acd4:	8940a236 	bltu	r17,r5,80af60 <_malloc_r+0x2d4>
  80acd8:	08102cc0 	call	8102cc <__malloc_lock>
  80acdc:	00807dc4 	movi	r2,503
  80ace0:	1441e92e 	bgeu	r2,r17,80b488 <_malloc_r+0x7fc>
  80ace4:	8804d27a 	srli	r2,r17,9
  80ace8:	1000a126 	beq	r2,zero,80af70 <_malloc_r+0x2e4>
  80acec:	00c00104 	movi	r3,4
  80acf0:	18811e36 	bltu	r3,r2,80b16c <_malloc_r+0x4e0>
  80acf4:	8804d1ba 	srli	r2,r17,6
  80acf8:	12000e44 	addi	r8,r2,57
  80acfc:	11c00e04 	addi	r7,r2,56
  80ad00:	4209883a 	add	r4,r8,r8
  80ad04:	04c02074 	movhi	r19,129
  80ad08:	2109883a 	add	r4,r4,r4
  80ad0c:	9ccbd404 	addi	r19,r19,12112
  80ad10:	2109883a 	add	r4,r4,r4
  80ad14:	9909883a 	add	r4,r19,r4
  80ad18:	24000117 	ldw	r16,4(r4)
  80ad1c:	213ffe04 	addi	r4,r4,-8
  80ad20:	24009726 	beq	r4,r16,80af80 <_malloc_r+0x2f4>
  80ad24:	80800117 	ldw	r2,4(r16)
  80ad28:	01bfff04 	movi	r6,-4
  80ad2c:	014003c4 	movi	r5,15
  80ad30:	1184703a 	and	r2,r2,r6
  80ad34:	1447c83a 	sub	r3,r2,r17
  80ad38:	28c00716 	blt	r5,r3,80ad58 <_malloc_r+0xcc>
  80ad3c:	1800920e 	bge	r3,zero,80af88 <_malloc_r+0x2fc>
  80ad40:	84000317 	ldw	r16,12(r16)
  80ad44:	24008e26 	beq	r4,r16,80af80 <_malloc_r+0x2f4>
  80ad48:	80800117 	ldw	r2,4(r16)
  80ad4c:	1184703a 	and	r2,r2,r6
  80ad50:	1447c83a 	sub	r3,r2,r17
  80ad54:	28fff90e 	bge	r5,r3,80ad3c <__alt_data_end+0xff80ad3c>
  80ad58:	3809883a 	mov	r4,r7
  80ad5c:	01802074 	movhi	r6,129
  80ad60:	9c000417 	ldw	r16,16(r19)
  80ad64:	318bd404 	addi	r6,r6,12112
  80ad68:	32000204 	addi	r8,r6,8
  80ad6c:	82013426 	beq	r16,r8,80b240 <_malloc_r+0x5b4>
  80ad70:	80c00117 	ldw	r3,4(r16)
  80ad74:	00bfff04 	movi	r2,-4
  80ad78:	188e703a 	and	r7,r3,r2
  80ad7c:	3c45c83a 	sub	r2,r7,r17
  80ad80:	00c003c4 	movi	r3,15
  80ad84:	18811f16 	blt	r3,r2,80b204 <_malloc_r+0x578>
  80ad88:	32000515 	stw	r8,20(r6)
  80ad8c:	32000415 	stw	r8,16(r6)
  80ad90:	10007f0e 	bge	r2,zero,80af90 <_malloc_r+0x304>
  80ad94:	00807fc4 	movi	r2,511
  80ad98:	11c0fd36 	bltu	r2,r7,80b190 <_malloc_r+0x504>
  80ad9c:	3806d0fa 	srli	r3,r7,3
  80ada0:	01c00044 	movi	r7,1
  80ada4:	30800117 	ldw	r2,4(r6)
  80ada8:	19400044 	addi	r5,r3,1
  80adac:	294b883a 	add	r5,r5,r5
  80adb0:	1807d0ba 	srai	r3,r3,2
  80adb4:	294b883a 	add	r5,r5,r5
  80adb8:	294b883a 	add	r5,r5,r5
  80adbc:	298b883a 	add	r5,r5,r6
  80adc0:	38c6983a 	sll	r3,r7,r3
  80adc4:	29c00017 	ldw	r7,0(r5)
  80adc8:	2a7ffe04 	addi	r9,r5,-8
  80adcc:	1886b03a 	or	r3,r3,r2
  80add0:	82400315 	stw	r9,12(r16)
  80add4:	81c00215 	stw	r7,8(r16)
  80add8:	30c00115 	stw	r3,4(r6)
  80addc:	2c000015 	stw	r16,0(r5)
  80ade0:	3c000315 	stw	r16,12(r7)
  80ade4:	2005d0ba 	srai	r2,r4,2
  80ade8:	01400044 	movi	r5,1
  80adec:	288a983a 	sll	r5,r5,r2
  80adf0:	19406f36 	bltu	r3,r5,80afb0 <_malloc_r+0x324>
  80adf4:	28c4703a 	and	r2,r5,r3
  80adf8:	10000a1e 	bne	r2,zero,80ae24 <_malloc_r+0x198>
  80adfc:	00bfff04 	movi	r2,-4
  80ae00:	294b883a 	add	r5,r5,r5
  80ae04:	2088703a 	and	r4,r4,r2
  80ae08:	28c4703a 	and	r2,r5,r3
  80ae0c:	21000104 	addi	r4,r4,4
  80ae10:	1000041e 	bne	r2,zero,80ae24 <_malloc_r+0x198>
  80ae14:	294b883a 	add	r5,r5,r5
  80ae18:	28c4703a 	and	r2,r5,r3
  80ae1c:	21000104 	addi	r4,r4,4
  80ae20:	103ffc26 	beq	r2,zero,80ae14 <__alt_data_end+0xff80ae14>
  80ae24:	02bfff04 	movi	r10,-4
  80ae28:	024003c4 	movi	r9,15
  80ae2c:	21800044 	addi	r6,r4,1
  80ae30:	318d883a 	add	r6,r6,r6
  80ae34:	318d883a 	add	r6,r6,r6
  80ae38:	318d883a 	add	r6,r6,r6
  80ae3c:	998d883a 	add	r6,r19,r6
  80ae40:	333ffe04 	addi	r12,r6,-8
  80ae44:	2017883a 	mov	r11,r4
  80ae48:	31800104 	addi	r6,r6,4
  80ae4c:	34000017 	ldw	r16,0(r6)
  80ae50:	31fffd04 	addi	r7,r6,-12
  80ae54:	81c0041e 	bne	r16,r7,80ae68 <_malloc_r+0x1dc>
  80ae58:	0000fb06 	br	80b248 <_malloc_r+0x5bc>
  80ae5c:	1801030e 	bge	r3,zero,80b26c <_malloc_r+0x5e0>
  80ae60:	84000317 	ldw	r16,12(r16)
  80ae64:	81c0f826 	beq	r16,r7,80b248 <_malloc_r+0x5bc>
  80ae68:	80800117 	ldw	r2,4(r16)
  80ae6c:	1284703a 	and	r2,r2,r10
  80ae70:	1447c83a 	sub	r3,r2,r17
  80ae74:	48fff90e 	bge	r9,r3,80ae5c <__alt_data_end+0xff80ae5c>
  80ae78:	80800317 	ldw	r2,12(r16)
  80ae7c:	81000217 	ldw	r4,8(r16)
  80ae80:	89400054 	ori	r5,r17,1
  80ae84:	81400115 	stw	r5,4(r16)
  80ae88:	20800315 	stw	r2,12(r4)
  80ae8c:	11000215 	stw	r4,8(r2)
  80ae90:	8463883a 	add	r17,r16,r17
  80ae94:	9c400515 	stw	r17,20(r19)
  80ae98:	9c400415 	stw	r17,16(r19)
  80ae9c:	18800054 	ori	r2,r3,1
  80aea0:	88800115 	stw	r2,4(r17)
  80aea4:	8a000315 	stw	r8,12(r17)
  80aea8:	8a000215 	stw	r8,8(r17)
  80aeac:	88e3883a 	add	r17,r17,r3
  80aeb0:	88c00015 	stw	r3,0(r17)
  80aeb4:	9009883a 	mov	r4,r18
  80aeb8:	08102f00 	call	8102f0 <__malloc_unlock>
  80aebc:	80800204 	addi	r2,r16,8
  80aec0:	00001b06 	br	80af30 <_malloc_r+0x2a4>
  80aec4:	04400404 	movi	r17,16
  80aec8:	89402536 	bltu	r17,r5,80af60 <_malloc_r+0x2d4>
  80aecc:	08102cc0 	call	8102cc <__malloc_lock>
  80aed0:	00800184 	movi	r2,6
  80aed4:	01000084 	movi	r4,2
  80aed8:	04c02074 	movhi	r19,129
  80aedc:	1085883a 	add	r2,r2,r2
  80aee0:	9ccbd404 	addi	r19,r19,12112
  80aee4:	1085883a 	add	r2,r2,r2
  80aee8:	9885883a 	add	r2,r19,r2
  80aeec:	14000117 	ldw	r16,4(r2)
  80aef0:	10fffe04 	addi	r3,r2,-8
  80aef4:	80c0d926 	beq	r16,r3,80b25c <_malloc_r+0x5d0>
  80aef8:	80c00117 	ldw	r3,4(r16)
  80aefc:	81000317 	ldw	r4,12(r16)
  80af00:	00bfff04 	movi	r2,-4
  80af04:	1884703a 	and	r2,r3,r2
  80af08:	81400217 	ldw	r5,8(r16)
  80af0c:	8085883a 	add	r2,r16,r2
  80af10:	10c00117 	ldw	r3,4(r2)
  80af14:	29000315 	stw	r4,12(r5)
  80af18:	21400215 	stw	r5,8(r4)
  80af1c:	18c00054 	ori	r3,r3,1
  80af20:	10c00115 	stw	r3,4(r2)
  80af24:	9009883a 	mov	r4,r18
  80af28:	08102f00 	call	8102f0 <__malloc_unlock>
  80af2c:	80800204 	addi	r2,r16,8
  80af30:	dfc00a17 	ldw	ra,40(sp)
  80af34:	df000917 	ldw	fp,36(sp)
  80af38:	ddc00817 	ldw	r23,32(sp)
  80af3c:	dd800717 	ldw	r22,28(sp)
  80af40:	dd400617 	ldw	r21,24(sp)
  80af44:	dd000517 	ldw	r20,20(sp)
  80af48:	dcc00417 	ldw	r19,16(sp)
  80af4c:	dc800317 	ldw	r18,12(sp)
  80af50:	dc400217 	ldw	r17,8(sp)
  80af54:	dc000117 	ldw	r16,4(sp)
  80af58:	dec00b04 	addi	sp,sp,44
  80af5c:	f800283a 	ret
  80af60:	00800304 	movi	r2,12
  80af64:	90800015 	stw	r2,0(r18)
  80af68:	0005883a 	mov	r2,zero
  80af6c:	003ff006 	br	80af30 <__alt_data_end+0xff80af30>
  80af70:	01002004 	movi	r4,128
  80af74:	02001004 	movi	r8,64
  80af78:	01c00fc4 	movi	r7,63
  80af7c:	003f6106 	br	80ad04 <__alt_data_end+0xff80ad04>
  80af80:	4009883a 	mov	r4,r8
  80af84:	003f7506 	br	80ad5c <__alt_data_end+0xff80ad5c>
  80af88:	81000317 	ldw	r4,12(r16)
  80af8c:	003fde06 	br	80af08 <__alt_data_end+0xff80af08>
  80af90:	81c5883a 	add	r2,r16,r7
  80af94:	11400117 	ldw	r5,4(r2)
  80af98:	9009883a 	mov	r4,r18
  80af9c:	29400054 	ori	r5,r5,1
  80afa0:	11400115 	stw	r5,4(r2)
  80afa4:	08102f00 	call	8102f0 <__malloc_unlock>
  80afa8:	80800204 	addi	r2,r16,8
  80afac:	003fe006 	br	80af30 <__alt_data_end+0xff80af30>
  80afb0:	9c000217 	ldw	r16,8(r19)
  80afb4:	00bfff04 	movi	r2,-4
  80afb8:	85800117 	ldw	r22,4(r16)
  80afbc:	b0ac703a 	and	r22,r22,r2
  80afc0:	b4400336 	bltu	r22,r17,80afd0 <_malloc_r+0x344>
  80afc4:	b445c83a 	sub	r2,r22,r17
  80afc8:	00c003c4 	movi	r3,15
  80afcc:	18805d16 	blt	r3,r2,80b144 <_malloc_r+0x4b8>
  80afd0:	05c02074 	movhi	r23,129
  80afd4:	00802074 	movhi	r2,129
  80afd8:	10982804 	addi	r2,r2,24736
  80afdc:	bdd15b04 	addi	r23,r23,17772
  80afe0:	15400017 	ldw	r21,0(r2)
  80afe4:	b8c00017 	ldw	r3,0(r23)
  80afe8:	00bfffc4 	movi	r2,-1
  80afec:	858d883a 	add	r6,r16,r22
  80aff0:	8d6b883a 	add	r21,r17,r21
  80aff4:	1880ea26 	beq	r3,r2,80b3a0 <_malloc_r+0x714>
  80aff8:	ad4403c4 	addi	r21,r21,4111
  80affc:	00bc0004 	movi	r2,-4096
  80b000:	a8aa703a 	and	r21,r21,r2
  80b004:	a80b883a 	mov	r5,r21
  80b008:	9009883a 	mov	r4,r18
  80b00c:	d9800015 	stw	r6,0(sp)
  80b010:	080cf1c0 	call	80cf1c <_sbrk_r>
  80b014:	1029883a 	mov	r20,r2
  80b018:	00bfffc4 	movi	r2,-1
  80b01c:	d9800017 	ldw	r6,0(sp)
  80b020:	a080e826 	beq	r20,r2,80b3c4 <_malloc_r+0x738>
  80b024:	a180a636 	bltu	r20,r6,80b2c0 <_malloc_r+0x634>
  80b028:	07002074 	movhi	fp,129
  80b02c:	e7183104 	addi	fp,fp,24772
  80b030:	e0800017 	ldw	r2,0(fp)
  80b034:	a887883a 	add	r3,r21,r2
  80b038:	e0c00015 	stw	r3,0(fp)
  80b03c:	3500e626 	beq	r6,r20,80b3d8 <_malloc_r+0x74c>
  80b040:	b9000017 	ldw	r4,0(r23)
  80b044:	00bfffc4 	movi	r2,-1
  80b048:	2080ee26 	beq	r4,r2,80b404 <_malloc_r+0x778>
  80b04c:	a185c83a 	sub	r2,r20,r6
  80b050:	10c5883a 	add	r2,r2,r3
  80b054:	e0800015 	stw	r2,0(fp)
  80b058:	a0c001cc 	andi	r3,r20,7
  80b05c:	1800bc26 	beq	r3,zero,80b350 <_malloc_r+0x6c4>
  80b060:	a0e9c83a 	sub	r20,r20,r3
  80b064:	00840204 	movi	r2,4104
  80b068:	a5000204 	addi	r20,r20,8
  80b06c:	10c7c83a 	sub	r3,r2,r3
  80b070:	a545883a 	add	r2,r20,r21
  80b074:	1083ffcc 	andi	r2,r2,4095
  80b078:	18abc83a 	sub	r21,r3,r2
  80b07c:	a80b883a 	mov	r5,r21
  80b080:	9009883a 	mov	r4,r18
  80b084:	080cf1c0 	call	80cf1c <_sbrk_r>
  80b088:	00ffffc4 	movi	r3,-1
  80b08c:	10c0e126 	beq	r2,r3,80b414 <_malloc_r+0x788>
  80b090:	1505c83a 	sub	r2,r2,r20
  80b094:	1545883a 	add	r2,r2,r21
  80b098:	10800054 	ori	r2,r2,1
  80b09c:	e0c00017 	ldw	r3,0(fp)
  80b0a0:	9d000215 	stw	r20,8(r19)
  80b0a4:	a0800115 	stw	r2,4(r20)
  80b0a8:	a8c7883a 	add	r3,r21,r3
  80b0ac:	e0c00015 	stw	r3,0(fp)
  80b0b0:	84c00e26 	beq	r16,r19,80b0ec <_malloc_r+0x460>
  80b0b4:	018003c4 	movi	r6,15
  80b0b8:	3580a72e 	bgeu	r6,r22,80b358 <_malloc_r+0x6cc>
  80b0bc:	81400117 	ldw	r5,4(r16)
  80b0c0:	013ffe04 	movi	r4,-8
  80b0c4:	b0bffd04 	addi	r2,r22,-12
  80b0c8:	1104703a 	and	r2,r2,r4
  80b0cc:	2900004c 	andi	r4,r5,1
  80b0d0:	2088b03a 	or	r4,r4,r2
  80b0d4:	81000115 	stw	r4,4(r16)
  80b0d8:	01400144 	movi	r5,5
  80b0dc:	8089883a 	add	r4,r16,r2
  80b0e0:	21400115 	stw	r5,4(r4)
  80b0e4:	21400215 	stw	r5,8(r4)
  80b0e8:	3080cd36 	bltu	r6,r2,80b420 <_malloc_r+0x794>
  80b0ec:	00802074 	movhi	r2,129
  80b0f0:	10982704 	addi	r2,r2,24732
  80b0f4:	11000017 	ldw	r4,0(r2)
  80b0f8:	20c0012e 	bgeu	r4,r3,80b100 <_malloc_r+0x474>
  80b0fc:	10c00015 	stw	r3,0(r2)
  80b100:	00802074 	movhi	r2,129
  80b104:	10982604 	addi	r2,r2,24728
  80b108:	11000017 	ldw	r4,0(r2)
  80b10c:	9c000217 	ldw	r16,8(r19)
  80b110:	20c0012e 	bgeu	r4,r3,80b118 <_malloc_r+0x48c>
  80b114:	10c00015 	stw	r3,0(r2)
  80b118:	80c00117 	ldw	r3,4(r16)
  80b11c:	00bfff04 	movi	r2,-4
  80b120:	1886703a 	and	r3,r3,r2
  80b124:	1c45c83a 	sub	r2,r3,r17
  80b128:	1c400236 	bltu	r3,r17,80b134 <_malloc_r+0x4a8>
  80b12c:	00c003c4 	movi	r3,15
  80b130:	18800416 	blt	r3,r2,80b144 <_malloc_r+0x4b8>
  80b134:	9009883a 	mov	r4,r18
  80b138:	08102f00 	call	8102f0 <__malloc_unlock>
  80b13c:	0005883a 	mov	r2,zero
  80b140:	003f7b06 	br	80af30 <__alt_data_end+0xff80af30>
  80b144:	88c00054 	ori	r3,r17,1
  80b148:	80c00115 	stw	r3,4(r16)
  80b14c:	8463883a 	add	r17,r16,r17
  80b150:	10800054 	ori	r2,r2,1
  80b154:	9c400215 	stw	r17,8(r19)
  80b158:	88800115 	stw	r2,4(r17)
  80b15c:	9009883a 	mov	r4,r18
  80b160:	08102f00 	call	8102f0 <__malloc_unlock>
  80b164:	80800204 	addi	r2,r16,8
  80b168:	003f7106 	br	80af30 <__alt_data_end+0xff80af30>
  80b16c:	00c00504 	movi	r3,20
  80b170:	18804a2e 	bgeu	r3,r2,80b29c <_malloc_r+0x610>
  80b174:	00c01504 	movi	r3,84
  80b178:	18806e36 	bltu	r3,r2,80b334 <_malloc_r+0x6a8>
  80b17c:	8804d33a 	srli	r2,r17,12
  80b180:	12001bc4 	addi	r8,r2,111
  80b184:	11c01b84 	addi	r7,r2,110
  80b188:	4209883a 	add	r4,r8,r8
  80b18c:	003edd06 	br	80ad04 <__alt_data_end+0xff80ad04>
  80b190:	3804d27a 	srli	r2,r7,9
  80b194:	00c00104 	movi	r3,4
  80b198:	1880442e 	bgeu	r3,r2,80b2ac <_malloc_r+0x620>
  80b19c:	00c00504 	movi	r3,20
  80b1a0:	18808136 	bltu	r3,r2,80b3a8 <_malloc_r+0x71c>
  80b1a4:	11401704 	addi	r5,r2,92
  80b1a8:	10c016c4 	addi	r3,r2,91
  80b1ac:	294b883a 	add	r5,r5,r5
  80b1b0:	294b883a 	add	r5,r5,r5
  80b1b4:	294b883a 	add	r5,r5,r5
  80b1b8:	994b883a 	add	r5,r19,r5
  80b1bc:	28800017 	ldw	r2,0(r5)
  80b1c0:	01802074 	movhi	r6,129
  80b1c4:	297ffe04 	addi	r5,r5,-8
  80b1c8:	318bd404 	addi	r6,r6,12112
  80b1cc:	28806526 	beq	r5,r2,80b364 <_malloc_r+0x6d8>
  80b1d0:	01bfff04 	movi	r6,-4
  80b1d4:	10c00117 	ldw	r3,4(r2)
  80b1d8:	1986703a 	and	r3,r3,r6
  80b1dc:	38c0022e 	bgeu	r7,r3,80b1e8 <_malloc_r+0x55c>
  80b1e0:	10800217 	ldw	r2,8(r2)
  80b1e4:	28bffb1e 	bne	r5,r2,80b1d4 <__alt_data_end+0xff80b1d4>
  80b1e8:	11400317 	ldw	r5,12(r2)
  80b1ec:	98c00117 	ldw	r3,4(r19)
  80b1f0:	81400315 	stw	r5,12(r16)
  80b1f4:	80800215 	stw	r2,8(r16)
  80b1f8:	2c000215 	stw	r16,8(r5)
  80b1fc:	14000315 	stw	r16,12(r2)
  80b200:	003ef806 	br	80ade4 <__alt_data_end+0xff80ade4>
  80b204:	88c00054 	ori	r3,r17,1
  80b208:	80c00115 	stw	r3,4(r16)
  80b20c:	8463883a 	add	r17,r16,r17
  80b210:	34400515 	stw	r17,20(r6)
  80b214:	34400415 	stw	r17,16(r6)
  80b218:	10c00054 	ori	r3,r2,1
  80b21c:	8a000315 	stw	r8,12(r17)
  80b220:	8a000215 	stw	r8,8(r17)
  80b224:	88c00115 	stw	r3,4(r17)
  80b228:	88a3883a 	add	r17,r17,r2
  80b22c:	88800015 	stw	r2,0(r17)
  80b230:	9009883a 	mov	r4,r18
  80b234:	08102f00 	call	8102f0 <__malloc_unlock>
  80b238:	80800204 	addi	r2,r16,8
  80b23c:	003f3c06 	br	80af30 <__alt_data_end+0xff80af30>
  80b240:	30c00117 	ldw	r3,4(r6)
  80b244:	003ee706 	br	80ade4 <__alt_data_end+0xff80ade4>
  80b248:	5ac00044 	addi	r11,r11,1
  80b24c:	588000cc 	andi	r2,r11,3
  80b250:	31800204 	addi	r6,r6,8
  80b254:	103efd1e 	bne	r2,zero,80ae4c <__alt_data_end+0xff80ae4c>
  80b258:	00002406 	br	80b2ec <_malloc_r+0x660>
  80b25c:	14000317 	ldw	r16,12(r2)
  80b260:	143f251e 	bne	r2,r16,80aef8 <__alt_data_end+0xff80aef8>
  80b264:	21000084 	addi	r4,r4,2
  80b268:	003ebc06 	br	80ad5c <__alt_data_end+0xff80ad5c>
  80b26c:	8085883a 	add	r2,r16,r2
  80b270:	10c00117 	ldw	r3,4(r2)
  80b274:	81000317 	ldw	r4,12(r16)
  80b278:	81400217 	ldw	r5,8(r16)
  80b27c:	18c00054 	ori	r3,r3,1
  80b280:	10c00115 	stw	r3,4(r2)
  80b284:	29000315 	stw	r4,12(r5)
  80b288:	21400215 	stw	r5,8(r4)
  80b28c:	9009883a 	mov	r4,r18
  80b290:	08102f00 	call	8102f0 <__malloc_unlock>
  80b294:	80800204 	addi	r2,r16,8
  80b298:	003f2506 	br	80af30 <__alt_data_end+0xff80af30>
  80b29c:	12001704 	addi	r8,r2,92
  80b2a0:	11c016c4 	addi	r7,r2,91
  80b2a4:	4209883a 	add	r4,r8,r8
  80b2a8:	003e9606 	br	80ad04 <__alt_data_end+0xff80ad04>
  80b2ac:	3804d1ba 	srli	r2,r7,6
  80b2b0:	11400e44 	addi	r5,r2,57
  80b2b4:	10c00e04 	addi	r3,r2,56
  80b2b8:	294b883a 	add	r5,r5,r5
  80b2bc:	003fbc06 	br	80b1b0 <__alt_data_end+0xff80b1b0>
  80b2c0:	84ff5926 	beq	r16,r19,80b028 <__alt_data_end+0xff80b028>
  80b2c4:	00802074 	movhi	r2,129
  80b2c8:	108bd404 	addi	r2,r2,12112
  80b2cc:	14000217 	ldw	r16,8(r2)
  80b2d0:	00bfff04 	movi	r2,-4
  80b2d4:	80c00117 	ldw	r3,4(r16)
  80b2d8:	1886703a 	and	r3,r3,r2
  80b2dc:	003f9106 	br	80b124 <__alt_data_end+0xff80b124>
  80b2e0:	60800217 	ldw	r2,8(r12)
  80b2e4:	213fffc4 	addi	r4,r4,-1
  80b2e8:	1300651e 	bne	r2,r12,80b480 <_malloc_r+0x7f4>
  80b2ec:	208000cc 	andi	r2,r4,3
  80b2f0:	633ffe04 	addi	r12,r12,-8
  80b2f4:	103ffa1e 	bne	r2,zero,80b2e0 <__alt_data_end+0xff80b2e0>
  80b2f8:	98800117 	ldw	r2,4(r19)
  80b2fc:	0146303a 	nor	r3,zero,r5
  80b300:	1884703a 	and	r2,r3,r2
  80b304:	98800115 	stw	r2,4(r19)
  80b308:	294b883a 	add	r5,r5,r5
  80b30c:	117f2836 	bltu	r2,r5,80afb0 <__alt_data_end+0xff80afb0>
  80b310:	283f2726 	beq	r5,zero,80afb0 <__alt_data_end+0xff80afb0>
  80b314:	2886703a 	and	r3,r5,r2
  80b318:	5809883a 	mov	r4,r11
  80b31c:	183ec31e 	bne	r3,zero,80ae2c <__alt_data_end+0xff80ae2c>
  80b320:	294b883a 	add	r5,r5,r5
  80b324:	2886703a 	and	r3,r5,r2
  80b328:	21000104 	addi	r4,r4,4
  80b32c:	183ffc26 	beq	r3,zero,80b320 <__alt_data_end+0xff80b320>
  80b330:	003ebe06 	br	80ae2c <__alt_data_end+0xff80ae2c>
  80b334:	00c05504 	movi	r3,340
  80b338:	18801236 	bltu	r3,r2,80b384 <_malloc_r+0x6f8>
  80b33c:	8804d3fa 	srli	r2,r17,15
  80b340:	12001e04 	addi	r8,r2,120
  80b344:	11c01dc4 	addi	r7,r2,119
  80b348:	4209883a 	add	r4,r8,r8
  80b34c:	003e6d06 	br	80ad04 <__alt_data_end+0xff80ad04>
  80b350:	00c40004 	movi	r3,4096
  80b354:	003f4606 	br	80b070 <__alt_data_end+0xff80b070>
  80b358:	00800044 	movi	r2,1
  80b35c:	a0800115 	stw	r2,4(r20)
  80b360:	003f7406 	br	80b134 <__alt_data_end+0xff80b134>
  80b364:	1805d0ba 	srai	r2,r3,2
  80b368:	01c00044 	movi	r7,1
  80b36c:	30c00117 	ldw	r3,4(r6)
  80b370:	388e983a 	sll	r7,r7,r2
  80b374:	2805883a 	mov	r2,r5
  80b378:	38c6b03a 	or	r3,r7,r3
  80b37c:	30c00115 	stw	r3,4(r6)
  80b380:	003f9b06 	br	80b1f0 <__alt_data_end+0xff80b1f0>
  80b384:	00c15504 	movi	r3,1364
  80b388:	18801a36 	bltu	r3,r2,80b3f4 <_malloc_r+0x768>
  80b38c:	8804d4ba 	srli	r2,r17,18
  80b390:	12001f44 	addi	r8,r2,125
  80b394:	11c01f04 	addi	r7,r2,124
  80b398:	4209883a 	add	r4,r8,r8
  80b39c:	003e5906 	br	80ad04 <__alt_data_end+0xff80ad04>
  80b3a0:	ad400404 	addi	r21,r21,16
  80b3a4:	003f1706 	br	80b004 <__alt_data_end+0xff80b004>
  80b3a8:	00c01504 	movi	r3,84
  80b3ac:	18802336 	bltu	r3,r2,80b43c <_malloc_r+0x7b0>
  80b3b0:	3804d33a 	srli	r2,r7,12
  80b3b4:	11401bc4 	addi	r5,r2,111
  80b3b8:	10c01b84 	addi	r3,r2,110
  80b3bc:	294b883a 	add	r5,r5,r5
  80b3c0:	003f7b06 	br	80b1b0 <__alt_data_end+0xff80b1b0>
  80b3c4:	9c000217 	ldw	r16,8(r19)
  80b3c8:	00bfff04 	movi	r2,-4
  80b3cc:	80c00117 	ldw	r3,4(r16)
  80b3d0:	1886703a 	and	r3,r3,r2
  80b3d4:	003f5306 	br	80b124 <__alt_data_end+0xff80b124>
  80b3d8:	3083ffcc 	andi	r2,r6,4095
  80b3dc:	103f181e 	bne	r2,zero,80b040 <__alt_data_end+0xff80b040>
  80b3e0:	99000217 	ldw	r4,8(r19)
  80b3e4:	b545883a 	add	r2,r22,r21
  80b3e8:	10800054 	ori	r2,r2,1
  80b3ec:	20800115 	stw	r2,4(r4)
  80b3f0:	003f3e06 	br	80b0ec <__alt_data_end+0xff80b0ec>
  80b3f4:	01003f84 	movi	r4,254
  80b3f8:	02001fc4 	movi	r8,127
  80b3fc:	01c01f84 	movi	r7,126
  80b400:	003e4006 	br	80ad04 <__alt_data_end+0xff80ad04>
  80b404:	00802074 	movhi	r2,129
  80b408:	10915b04 	addi	r2,r2,17772
  80b40c:	15000015 	stw	r20,0(r2)
  80b410:	003f1106 	br	80b058 <__alt_data_end+0xff80b058>
  80b414:	00800044 	movi	r2,1
  80b418:	002b883a 	mov	r21,zero
  80b41c:	003f1f06 	br	80b09c <__alt_data_end+0xff80b09c>
  80b420:	81400204 	addi	r5,r16,8
  80b424:	9009883a 	mov	r4,r18
  80b428:	080a0a00 	call	80a0a0 <_free_r>
  80b42c:	00802074 	movhi	r2,129
  80b430:	10983104 	addi	r2,r2,24772
  80b434:	10c00017 	ldw	r3,0(r2)
  80b438:	003f2c06 	br	80b0ec <__alt_data_end+0xff80b0ec>
  80b43c:	00c05504 	movi	r3,340
  80b440:	18800536 	bltu	r3,r2,80b458 <_malloc_r+0x7cc>
  80b444:	3804d3fa 	srli	r2,r7,15
  80b448:	11401e04 	addi	r5,r2,120
  80b44c:	10c01dc4 	addi	r3,r2,119
  80b450:	294b883a 	add	r5,r5,r5
  80b454:	003f5606 	br	80b1b0 <__alt_data_end+0xff80b1b0>
  80b458:	00c15504 	movi	r3,1364
  80b45c:	18800536 	bltu	r3,r2,80b474 <_malloc_r+0x7e8>
  80b460:	3804d4ba 	srli	r2,r7,18
  80b464:	11401f44 	addi	r5,r2,125
  80b468:	10c01f04 	addi	r3,r2,124
  80b46c:	294b883a 	add	r5,r5,r5
  80b470:	003f4f06 	br	80b1b0 <__alt_data_end+0xff80b1b0>
  80b474:	01403f84 	movi	r5,254
  80b478:	00c01f84 	movi	r3,126
  80b47c:	003f4c06 	br	80b1b0 <__alt_data_end+0xff80b1b0>
  80b480:	98800117 	ldw	r2,4(r19)
  80b484:	003fa006 	br	80b308 <__alt_data_end+0xff80b308>
  80b488:	8808d0fa 	srli	r4,r17,3
  80b48c:	20800044 	addi	r2,r4,1
  80b490:	1085883a 	add	r2,r2,r2
  80b494:	003e9006 	br	80aed8 <__alt_data_end+0xff80aed8>

0080b498 <memchr>:
  80b498:	208000cc 	andi	r2,r4,3
  80b49c:	280f883a 	mov	r7,r5
  80b4a0:	10003426 	beq	r2,zero,80b574 <memchr+0xdc>
  80b4a4:	30bfffc4 	addi	r2,r6,-1
  80b4a8:	30001a26 	beq	r6,zero,80b514 <memchr+0x7c>
  80b4ac:	20c00003 	ldbu	r3,0(r4)
  80b4b0:	29803fcc 	andi	r6,r5,255
  80b4b4:	30c0051e 	bne	r6,r3,80b4cc <memchr+0x34>
  80b4b8:	00001806 	br	80b51c <memchr+0x84>
  80b4bc:	10001526 	beq	r2,zero,80b514 <memchr+0x7c>
  80b4c0:	20c00003 	ldbu	r3,0(r4)
  80b4c4:	10bfffc4 	addi	r2,r2,-1
  80b4c8:	30c01426 	beq	r6,r3,80b51c <memchr+0x84>
  80b4cc:	21000044 	addi	r4,r4,1
  80b4d0:	20c000cc 	andi	r3,r4,3
  80b4d4:	183ff91e 	bne	r3,zero,80b4bc <__alt_data_end+0xff80b4bc>
  80b4d8:	020000c4 	movi	r8,3
  80b4dc:	40801136 	bltu	r8,r2,80b524 <memchr+0x8c>
  80b4e0:	10000c26 	beq	r2,zero,80b514 <memchr+0x7c>
  80b4e4:	20c00003 	ldbu	r3,0(r4)
  80b4e8:	29403fcc 	andi	r5,r5,255
  80b4ec:	28c00b26 	beq	r5,r3,80b51c <memchr+0x84>
  80b4f0:	20c00044 	addi	r3,r4,1
  80b4f4:	39803fcc 	andi	r6,r7,255
  80b4f8:	2089883a 	add	r4,r4,r2
  80b4fc:	00000306 	br	80b50c <memchr+0x74>
  80b500:	18c00044 	addi	r3,r3,1
  80b504:	197fffc3 	ldbu	r5,-1(r3)
  80b508:	31400526 	beq	r6,r5,80b520 <memchr+0x88>
  80b50c:	1805883a 	mov	r2,r3
  80b510:	20fffb1e 	bne	r4,r3,80b500 <__alt_data_end+0xff80b500>
  80b514:	0005883a 	mov	r2,zero
  80b518:	f800283a 	ret
  80b51c:	2005883a 	mov	r2,r4
  80b520:	f800283a 	ret
  80b524:	28c03fcc 	andi	r3,r5,255
  80b528:	1812923a 	slli	r9,r3,8
  80b52c:	02ffbff4 	movhi	r11,65279
  80b530:	02a02074 	movhi	r10,32897
  80b534:	48d2b03a 	or	r9,r9,r3
  80b538:	4806943a 	slli	r3,r9,16
  80b53c:	5affbfc4 	addi	r11,r11,-257
  80b540:	52a02004 	addi	r10,r10,-32640
  80b544:	48d2b03a 	or	r9,r9,r3
  80b548:	20c00017 	ldw	r3,0(r4)
  80b54c:	48c6f03a 	xor	r3,r9,r3
  80b550:	1acd883a 	add	r6,r3,r11
  80b554:	00c6303a 	nor	r3,zero,r3
  80b558:	30c6703a 	and	r3,r6,r3
  80b55c:	1a86703a 	and	r3,r3,r10
  80b560:	183fe01e 	bne	r3,zero,80b4e4 <__alt_data_end+0xff80b4e4>
  80b564:	10bfff04 	addi	r2,r2,-4
  80b568:	21000104 	addi	r4,r4,4
  80b56c:	40bff636 	bltu	r8,r2,80b548 <__alt_data_end+0xff80b548>
  80b570:	003fdb06 	br	80b4e0 <__alt_data_end+0xff80b4e0>
  80b574:	3005883a 	mov	r2,r6
  80b578:	003fd706 	br	80b4d8 <__alt_data_end+0xff80b4d8>

0080b57c <memcpy>:
  80b57c:	defffd04 	addi	sp,sp,-12
  80b580:	dfc00215 	stw	ra,8(sp)
  80b584:	dc400115 	stw	r17,4(sp)
  80b588:	dc000015 	stw	r16,0(sp)
  80b58c:	00c003c4 	movi	r3,15
  80b590:	2005883a 	mov	r2,r4
  80b594:	1980452e 	bgeu	r3,r6,80b6ac <memcpy+0x130>
  80b598:	2906b03a 	or	r3,r5,r4
  80b59c:	18c000cc 	andi	r3,r3,3
  80b5a0:	1800441e 	bne	r3,zero,80b6b4 <memcpy+0x138>
  80b5a4:	347ffc04 	addi	r17,r6,-16
  80b5a8:	8822d13a 	srli	r17,r17,4
  80b5ac:	28c00104 	addi	r3,r5,4
  80b5b0:	23400104 	addi	r13,r4,4
  80b5b4:	8820913a 	slli	r16,r17,4
  80b5b8:	2b000204 	addi	r12,r5,8
  80b5bc:	22c00204 	addi	r11,r4,8
  80b5c0:	84000504 	addi	r16,r16,20
  80b5c4:	2a800304 	addi	r10,r5,12
  80b5c8:	22400304 	addi	r9,r4,12
  80b5cc:	2c21883a 	add	r16,r5,r16
  80b5d0:	2811883a 	mov	r8,r5
  80b5d4:	200f883a 	mov	r7,r4
  80b5d8:	41000017 	ldw	r4,0(r8)
  80b5dc:	1fc00017 	ldw	ra,0(r3)
  80b5e0:	63c00017 	ldw	r15,0(r12)
  80b5e4:	39000015 	stw	r4,0(r7)
  80b5e8:	53800017 	ldw	r14,0(r10)
  80b5ec:	6fc00015 	stw	ra,0(r13)
  80b5f0:	5bc00015 	stw	r15,0(r11)
  80b5f4:	4b800015 	stw	r14,0(r9)
  80b5f8:	18c00404 	addi	r3,r3,16
  80b5fc:	39c00404 	addi	r7,r7,16
  80b600:	42000404 	addi	r8,r8,16
  80b604:	6b400404 	addi	r13,r13,16
  80b608:	63000404 	addi	r12,r12,16
  80b60c:	5ac00404 	addi	r11,r11,16
  80b610:	52800404 	addi	r10,r10,16
  80b614:	4a400404 	addi	r9,r9,16
  80b618:	1c3fef1e 	bne	r3,r16,80b5d8 <__alt_data_end+0xff80b5d8>
  80b61c:	89c00044 	addi	r7,r17,1
  80b620:	380e913a 	slli	r7,r7,4
  80b624:	310003cc 	andi	r4,r6,15
  80b628:	02c000c4 	movi	r11,3
  80b62c:	11c7883a 	add	r3,r2,r7
  80b630:	29cb883a 	add	r5,r5,r7
  80b634:	5900212e 	bgeu	r11,r4,80b6bc <memcpy+0x140>
  80b638:	1813883a 	mov	r9,r3
  80b63c:	2811883a 	mov	r8,r5
  80b640:	200f883a 	mov	r7,r4
  80b644:	42800017 	ldw	r10,0(r8)
  80b648:	4a400104 	addi	r9,r9,4
  80b64c:	39ffff04 	addi	r7,r7,-4
  80b650:	4abfff15 	stw	r10,-4(r9)
  80b654:	42000104 	addi	r8,r8,4
  80b658:	59fffa36 	bltu	r11,r7,80b644 <__alt_data_end+0xff80b644>
  80b65c:	213fff04 	addi	r4,r4,-4
  80b660:	2008d0ba 	srli	r4,r4,2
  80b664:	318000cc 	andi	r6,r6,3
  80b668:	21000044 	addi	r4,r4,1
  80b66c:	2109883a 	add	r4,r4,r4
  80b670:	2109883a 	add	r4,r4,r4
  80b674:	1907883a 	add	r3,r3,r4
  80b678:	290b883a 	add	r5,r5,r4
  80b67c:	30000626 	beq	r6,zero,80b698 <memcpy+0x11c>
  80b680:	198d883a 	add	r6,r3,r6
  80b684:	29c00003 	ldbu	r7,0(r5)
  80b688:	18c00044 	addi	r3,r3,1
  80b68c:	29400044 	addi	r5,r5,1
  80b690:	19ffffc5 	stb	r7,-1(r3)
  80b694:	19bffb1e 	bne	r3,r6,80b684 <__alt_data_end+0xff80b684>
  80b698:	dfc00217 	ldw	ra,8(sp)
  80b69c:	dc400117 	ldw	r17,4(sp)
  80b6a0:	dc000017 	ldw	r16,0(sp)
  80b6a4:	dec00304 	addi	sp,sp,12
  80b6a8:	f800283a 	ret
  80b6ac:	2007883a 	mov	r3,r4
  80b6b0:	003ff206 	br	80b67c <__alt_data_end+0xff80b67c>
  80b6b4:	2007883a 	mov	r3,r4
  80b6b8:	003ff106 	br	80b680 <__alt_data_end+0xff80b680>
  80b6bc:	200d883a 	mov	r6,r4
  80b6c0:	003fee06 	br	80b67c <__alt_data_end+0xff80b67c>

0080b6c4 <memmove>:
  80b6c4:	2005883a 	mov	r2,r4
  80b6c8:	29000b2e 	bgeu	r5,r4,80b6f8 <memmove+0x34>
  80b6cc:	298f883a 	add	r7,r5,r6
  80b6d0:	21c0092e 	bgeu	r4,r7,80b6f8 <memmove+0x34>
  80b6d4:	2187883a 	add	r3,r4,r6
  80b6d8:	198bc83a 	sub	r5,r3,r6
  80b6dc:	30004826 	beq	r6,zero,80b800 <memmove+0x13c>
  80b6e0:	39ffffc4 	addi	r7,r7,-1
  80b6e4:	39000003 	ldbu	r4,0(r7)
  80b6e8:	18ffffc4 	addi	r3,r3,-1
  80b6ec:	19000005 	stb	r4,0(r3)
  80b6f0:	28fffb1e 	bne	r5,r3,80b6e0 <__alt_data_end+0xff80b6e0>
  80b6f4:	f800283a 	ret
  80b6f8:	00c003c4 	movi	r3,15
  80b6fc:	1980412e 	bgeu	r3,r6,80b804 <memmove+0x140>
  80b700:	2886b03a 	or	r3,r5,r2
  80b704:	18c000cc 	andi	r3,r3,3
  80b708:	1800401e 	bne	r3,zero,80b80c <memmove+0x148>
  80b70c:	33fffc04 	addi	r15,r6,-16
  80b710:	781ed13a 	srli	r15,r15,4
  80b714:	28c00104 	addi	r3,r5,4
  80b718:	13400104 	addi	r13,r2,4
  80b71c:	781c913a 	slli	r14,r15,4
  80b720:	2b000204 	addi	r12,r5,8
  80b724:	12c00204 	addi	r11,r2,8
  80b728:	73800504 	addi	r14,r14,20
  80b72c:	2a800304 	addi	r10,r5,12
  80b730:	12400304 	addi	r9,r2,12
  80b734:	2b9d883a 	add	r14,r5,r14
  80b738:	2811883a 	mov	r8,r5
  80b73c:	100f883a 	mov	r7,r2
  80b740:	41000017 	ldw	r4,0(r8)
  80b744:	39c00404 	addi	r7,r7,16
  80b748:	18c00404 	addi	r3,r3,16
  80b74c:	393ffc15 	stw	r4,-16(r7)
  80b750:	193ffc17 	ldw	r4,-16(r3)
  80b754:	6b400404 	addi	r13,r13,16
  80b758:	5ac00404 	addi	r11,r11,16
  80b75c:	693ffc15 	stw	r4,-16(r13)
  80b760:	61000017 	ldw	r4,0(r12)
  80b764:	4a400404 	addi	r9,r9,16
  80b768:	42000404 	addi	r8,r8,16
  80b76c:	593ffc15 	stw	r4,-16(r11)
  80b770:	51000017 	ldw	r4,0(r10)
  80b774:	63000404 	addi	r12,r12,16
  80b778:	52800404 	addi	r10,r10,16
  80b77c:	493ffc15 	stw	r4,-16(r9)
  80b780:	1bbfef1e 	bne	r3,r14,80b740 <__alt_data_end+0xff80b740>
  80b784:	79000044 	addi	r4,r15,1
  80b788:	2008913a 	slli	r4,r4,4
  80b78c:	328003cc 	andi	r10,r6,15
  80b790:	02c000c4 	movi	r11,3
  80b794:	1107883a 	add	r3,r2,r4
  80b798:	290b883a 	add	r5,r5,r4
  80b79c:	5a801e2e 	bgeu	r11,r10,80b818 <memmove+0x154>
  80b7a0:	1813883a 	mov	r9,r3
  80b7a4:	2811883a 	mov	r8,r5
  80b7a8:	500f883a 	mov	r7,r10
  80b7ac:	41000017 	ldw	r4,0(r8)
  80b7b0:	4a400104 	addi	r9,r9,4
  80b7b4:	39ffff04 	addi	r7,r7,-4
  80b7b8:	493fff15 	stw	r4,-4(r9)
  80b7bc:	42000104 	addi	r8,r8,4
  80b7c0:	59fffa36 	bltu	r11,r7,80b7ac <__alt_data_end+0xff80b7ac>
  80b7c4:	513fff04 	addi	r4,r10,-4
  80b7c8:	2008d0ba 	srli	r4,r4,2
  80b7cc:	318000cc 	andi	r6,r6,3
  80b7d0:	21000044 	addi	r4,r4,1
  80b7d4:	2109883a 	add	r4,r4,r4
  80b7d8:	2109883a 	add	r4,r4,r4
  80b7dc:	1907883a 	add	r3,r3,r4
  80b7e0:	290b883a 	add	r5,r5,r4
  80b7e4:	30000b26 	beq	r6,zero,80b814 <memmove+0x150>
  80b7e8:	198d883a 	add	r6,r3,r6
  80b7ec:	29c00003 	ldbu	r7,0(r5)
  80b7f0:	18c00044 	addi	r3,r3,1
  80b7f4:	29400044 	addi	r5,r5,1
  80b7f8:	19ffffc5 	stb	r7,-1(r3)
  80b7fc:	19bffb1e 	bne	r3,r6,80b7ec <__alt_data_end+0xff80b7ec>
  80b800:	f800283a 	ret
  80b804:	1007883a 	mov	r3,r2
  80b808:	003ff606 	br	80b7e4 <__alt_data_end+0xff80b7e4>
  80b80c:	1007883a 	mov	r3,r2
  80b810:	003ff506 	br	80b7e8 <__alt_data_end+0xff80b7e8>
  80b814:	f800283a 	ret
  80b818:	500d883a 	mov	r6,r10
  80b81c:	003ff106 	br	80b7e4 <__alt_data_end+0xff80b7e4>

0080b820 <memset>:
  80b820:	20c000cc 	andi	r3,r4,3
  80b824:	2005883a 	mov	r2,r4
  80b828:	18004426 	beq	r3,zero,80b93c <memset+0x11c>
  80b82c:	31ffffc4 	addi	r7,r6,-1
  80b830:	30004026 	beq	r6,zero,80b934 <memset+0x114>
  80b834:	2813883a 	mov	r9,r5
  80b838:	200d883a 	mov	r6,r4
  80b83c:	2007883a 	mov	r3,r4
  80b840:	00000406 	br	80b854 <memset+0x34>
  80b844:	3a3fffc4 	addi	r8,r7,-1
  80b848:	31800044 	addi	r6,r6,1
  80b84c:	38003926 	beq	r7,zero,80b934 <memset+0x114>
  80b850:	400f883a 	mov	r7,r8
  80b854:	18c00044 	addi	r3,r3,1
  80b858:	32400005 	stb	r9,0(r6)
  80b85c:	1a0000cc 	andi	r8,r3,3
  80b860:	403ff81e 	bne	r8,zero,80b844 <__alt_data_end+0xff80b844>
  80b864:	010000c4 	movi	r4,3
  80b868:	21c02d2e 	bgeu	r4,r7,80b920 <memset+0x100>
  80b86c:	29003fcc 	andi	r4,r5,255
  80b870:	200c923a 	slli	r6,r4,8
  80b874:	3108b03a 	or	r4,r6,r4
  80b878:	200c943a 	slli	r6,r4,16
  80b87c:	218cb03a 	or	r6,r4,r6
  80b880:	010003c4 	movi	r4,15
  80b884:	21c0182e 	bgeu	r4,r7,80b8e8 <memset+0xc8>
  80b888:	3b3ffc04 	addi	r12,r7,-16
  80b88c:	6018d13a 	srli	r12,r12,4
  80b890:	1a000104 	addi	r8,r3,4
  80b894:	1ac00204 	addi	r11,r3,8
  80b898:	6008913a 	slli	r4,r12,4
  80b89c:	1a800304 	addi	r10,r3,12
  80b8a0:	1813883a 	mov	r9,r3
  80b8a4:	21000504 	addi	r4,r4,20
  80b8a8:	1909883a 	add	r4,r3,r4
  80b8ac:	49800015 	stw	r6,0(r9)
  80b8b0:	41800015 	stw	r6,0(r8)
  80b8b4:	59800015 	stw	r6,0(r11)
  80b8b8:	51800015 	stw	r6,0(r10)
  80b8bc:	42000404 	addi	r8,r8,16
  80b8c0:	4a400404 	addi	r9,r9,16
  80b8c4:	5ac00404 	addi	r11,r11,16
  80b8c8:	52800404 	addi	r10,r10,16
  80b8cc:	413ff71e 	bne	r8,r4,80b8ac <__alt_data_end+0xff80b8ac>
  80b8d0:	63000044 	addi	r12,r12,1
  80b8d4:	6018913a 	slli	r12,r12,4
  80b8d8:	39c003cc 	andi	r7,r7,15
  80b8dc:	010000c4 	movi	r4,3
  80b8e0:	1b07883a 	add	r3,r3,r12
  80b8e4:	21c00e2e 	bgeu	r4,r7,80b920 <memset+0x100>
  80b8e8:	1813883a 	mov	r9,r3
  80b8ec:	3811883a 	mov	r8,r7
  80b8f0:	010000c4 	movi	r4,3
  80b8f4:	49800015 	stw	r6,0(r9)
  80b8f8:	423fff04 	addi	r8,r8,-4
  80b8fc:	4a400104 	addi	r9,r9,4
  80b900:	223ffc36 	bltu	r4,r8,80b8f4 <__alt_data_end+0xff80b8f4>
  80b904:	393fff04 	addi	r4,r7,-4
  80b908:	2008d0ba 	srli	r4,r4,2
  80b90c:	39c000cc 	andi	r7,r7,3
  80b910:	21000044 	addi	r4,r4,1
  80b914:	2109883a 	add	r4,r4,r4
  80b918:	2109883a 	add	r4,r4,r4
  80b91c:	1907883a 	add	r3,r3,r4
  80b920:	38000526 	beq	r7,zero,80b938 <memset+0x118>
  80b924:	19cf883a 	add	r7,r3,r7
  80b928:	19400005 	stb	r5,0(r3)
  80b92c:	18c00044 	addi	r3,r3,1
  80b930:	38fffd1e 	bne	r7,r3,80b928 <__alt_data_end+0xff80b928>
  80b934:	f800283a 	ret
  80b938:	f800283a 	ret
  80b93c:	2007883a 	mov	r3,r4
  80b940:	300f883a 	mov	r7,r6
  80b944:	003fc706 	br	80b864 <__alt_data_end+0xff80b864>

0080b948 <_Balloc>:
  80b948:	20801317 	ldw	r2,76(r4)
  80b94c:	defffc04 	addi	sp,sp,-16
  80b950:	dc400115 	stw	r17,4(sp)
  80b954:	dc000015 	stw	r16,0(sp)
  80b958:	dfc00315 	stw	ra,12(sp)
  80b95c:	dc800215 	stw	r18,8(sp)
  80b960:	2023883a 	mov	r17,r4
  80b964:	2821883a 	mov	r16,r5
  80b968:	10000f26 	beq	r2,zero,80b9a8 <_Balloc+0x60>
  80b96c:	8407883a 	add	r3,r16,r16
  80b970:	18c7883a 	add	r3,r3,r3
  80b974:	10c7883a 	add	r3,r2,r3
  80b978:	18800017 	ldw	r2,0(r3)
  80b97c:	10001126 	beq	r2,zero,80b9c4 <_Balloc+0x7c>
  80b980:	11000017 	ldw	r4,0(r2)
  80b984:	19000015 	stw	r4,0(r3)
  80b988:	10000415 	stw	zero,16(r2)
  80b98c:	10000315 	stw	zero,12(r2)
  80b990:	dfc00317 	ldw	ra,12(sp)
  80b994:	dc800217 	ldw	r18,8(sp)
  80b998:	dc400117 	ldw	r17,4(sp)
  80b99c:	dc000017 	ldw	r16,0(sp)
  80b9a0:	dec00404 	addi	sp,sp,16
  80b9a4:	f800283a 	ret
  80b9a8:	01800844 	movi	r6,33
  80b9ac:	01400104 	movi	r5,4
  80b9b0:	080e8840 	call	80e884 <_calloc_r>
  80b9b4:	88801315 	stw	r2,76(r17)
  80b9b8:	103fec1e 	bne	r2,zero,80b96c <__alt_data_end+0xff80b96c>
  80b9bc:	0005883a 	mov	r2,zero
  80b9c0:	003ff306 	br	80b990 <__alt_data_end+0xff80b990>
  80b9c4:	01400044 	movi	r5,1
  80b9c8:	2c24983a 	sll	r18,r5,r16
  80b9cc:	8809883a 	mov	r4,r17
  80b9d0:	91800144 	addi	r6,r18,5
  80b9d4:	318d883a 	add	r6,r6,r6
  80b9d8:	318d883a 	add	r6,r6,r6
  80b9dc:	080e8840 	call	80e884 <_calloc_r>
  80b9e0:	103ff626 	beq	r2,zero,80b9bc <__alt_data_end+0xff80b9bc>
  80b9e4:	14000115 	stw	r16,4(r2)
  80b9e8:	14800215 	stw	r18,8(r2)
  80b9ec:	003fe606 	br	80b988 <__alt_data_end+0xff80b988>

0080b9f0 <_Bfree>:
  80b9f0:	28000826 	beq	r5,zero,80ba14 <_Bfree+0x24>
  80b9f4:	28c00117 	ldw	r3,4(r5)
  80b9f8:	20801317 	ldw	r2,76(r4)
  80b9fc:	18c7883a 	add	r3,r3,r3
  80ba00:	18c7883a 	add	r3,r3,r3
  80ba04:	10c5883a 	add	r2,r2,r3
  80ba08:	10c00017 	ldw	r3,0(r2)
  80ba0c:	28c00015 	stw	r3,0(r5)
  80ba10:	11400015 	stw	r5,0(r2)
  80ba14:	f800283a 	ret

0080ba18 <__multadd>:
  80ba18:	defffa04 	addi	sp,sp,-24
  80ba1c:	dc800315 	stw	r18,12(sp)
  80ba20:	dc400215 	stw	r17,8(sp)
  80ba24:	dc000115 	stw	r16,4(sp)
  80ba28:	2823883a 	mov	r17,r5
  80ba2c:	2c000417 	ldw	r16,16(r5)
  80ba30:	dfc00515 	stw	ra,20(sp)
  80ba34:	dcc00415 	stw	r19,16(sp)
  80ba38:	2025883a 	mov	r18,r4
  80ba3c:	29400504 	addi	r5,r5,20
  80ba40:	0011883a 	mov	r8,zero
  80ba44:	28c00017 	ldw	r3,0(r5)
  80ba48:	29400104 	addi	r5,r5,4
  80ba4c:	42000044 	addi	r8,r8,1
  80ba50:	18bfffcc 	andi	r2,r3,65535
  80ba54:	1185383a 	mul	r2,r2,r6
  80ba58:	1806d43a 	srli	r3,r3,16
  80ba5c:	11cf883a 	add	r7,r2,r7
  80ba60:	3808d43a 	srli	r4,r7,16
  80ba64:	1987383a 	mul	r3,r3,r6
  80ba68:	38bfffcc 	andi	r2,r7,65535
  80ba6c:	1907883a 	add	r3,r3,r4
  80ba70:	1808943a 	slli	r4,r3,16
  80ba74:	180ed43a 	srli	r7,r3,16
  80ba78:	2085883a 	add	r2,r4,r2
  80ba7c:	28bfff15 	stw	r2,-4(r5)
  80ba80:	443ff016 	blt	r8,r16,80ba44 <__alt_data_end+0xff80ba44>
  80ba84:	38000926 	beq	r7,zero,80baac <__multadd+0x94>
  80ba88:	88800217 	ldw	r2,8(r17)
  80ba8c:	80800f0e 	bge	r16,r2,80bacc <__multadd+0xb4>
  80ba90:	80800144 	addi	r2,r16,5
  80ba94:	1085883a 	add	r2,r2,r2
  80ba98:	1085883a 	add	r2,r2,r2
  80ba9c:	8885883a 	add	r2,r17,r2
  80baa0:	11c00015 	stw	r7,0(r2)
  80baa4:	84000044 	addi	r16,r16,1
  80baa8:	8c000415 	stw	r16,16(r17)
  80baac:	8805883a 	mov	r2,r17
  80bab0:	dfc00517 	ldw	ra,20(sp)
  80bab4:	dcc00417 	ldw	r19,16(sp)
  80bab8:	dc800317 	ldw	r18,12(sp)
  80babc:	dc400217 	ldw	r17,8(sp)
  80bac0:	dc000117 	ldw	r16,4(sp)
  80bac4:	dec00604 	addi	sp,sp,24
  80bac8:	f800283a 	ret
  80bacc:	89400117 	ldw	r5,4(r17)
  80bad0:	9009883a 	mov	r4,r18
  80bad4:	d9c00015 	stw	r7,0(sp)
  80bad8:	29400044 	addi	r5,r5,1
  80badc:	080b9480 	call	80b948 <_Balloc>
  80bae0:	89800417 	ldw	r6,16(r17)
  80bae4:	89400304 	addi	r5,r17,12
  80bae8:	11000304 	addi	r4,r2,12
  80baec:	31800084 	addi	r6,r6,2
  80baf0:	318d883a 	add	r6,r6,r6
  80baf4:	318d883a 	add	r6,r6,r6
  80baf8:	1027883a 	mov	r19,r2
  80bafc:	080b57c0 	call	80b57c <memcpy>
  80bb00:	d9c00017 	ldw	r7,0(sp)
  80bb04:	88000a26 	beq	r17,zero,80bb30 <__multadd+0x118>
  80bb08:	88c00117 	ldw	r3,4(r17)
  80bb0c:	90801317 	ldw	r2,76(r18)
  80bb10:	18c7883a 	add	r3,r3,r3
  80bb14:	18c7883a 	add	r3,r3,r3
  80bb18:	10c5883a 	add	r2,r2,r3
  80bb1c:	10c00017 	ldw	r3,0(r2)
  80bb20:	88c00015 	stw	r3,0(r17)
  80bb24:	14400015 	stw	r17,0(r2)
  80bb28:	9823883a 	mov	r17,r19
  80bb2c:	003fd806 	br	80ba90 <__alt_data_end+0xff80ba90>
  80bb30:	9823883a 	mov	r17,r19
  80bb34:	003fd606 	br	80ba90 <__alt_data_end+0xff80ba90>

0080bb38 <__s2b>:
  80bb38:	defff904 	addi	sp,sp,-28
  80bb3c:	dc400115 	stw	r17,4(sp)
  80bb40:	dc000015 	stw	r16,0(sp)
  80bb44:	2023883a 	mov	r17,r4
  80bb48:	2821883a 	mov	r16,r5
  80bb4c:	39000204 	addi	r4,r7,8
  80bb50:	01400244 	movi	r5,9
  80bb54:	dcc00315 	stw	r19,12(sp)
  80bb58:	dc800215 	stw	r18,8(sp)
  80bb5c:	dfc00615 	stw	ra,24(sp)
  80bb60:	dd400515 	stw	r21,20(sp)
  80bb64:	dd000415 	stw	r20,16(sp)
  80bb68:	3825883a 	mov	r18,r7
  80bb6c:	3027883a 	mov	r19,r6
  80bb70:	08028b40 	call	8028b4 <__divsi3>
  80bb74:	00c00044 	movi	r3,1
  80bb78:	000b883a 	mov	r5,zero
  80bb7c:	1880030e 	bge	r3,r2,80bb8c <__s2b+0x54>
  80bb80:	18c7883a 	add	r3,r3,r3
  80bb84:	29400044 	addi	r5,r5,1
  80bb88:	18bffd16 	blt	r3,r2,80bb80 <__alt_data_end+0xff80bb80>
  80bb8c:	8809883a 	mov	r4,r17
  80bb90:	080b9480 	call	80b948 <_Balloc>
  80bb94:	d8c00717 	ldw	r3,28(sp)
  80bb98:	10c00515 	stw	r3,20(r2)
  80bb9c:	00c00044 	movi	r3,1
  80bba0:	10c00415 	stw	r3,16(r2)
  80bba4:	00c00244 	movi	r3,9
  80bba8:	1cc0210e 	bge	r3,r19,80bc30 <__s2b+0xf8>
  80bbac:	80eb883a 	add	r21,r16,r3
  80bbb0:	a829883a 	mov	r20,r21
  80bbb4:	84e1883a 	add	r16,r16,r19
  80bbb8:	a1c00007 	ldb	r7,0(r20)
  80bbbc:	01800284 	movi	r6,10
  80bbc0:	a5000044 	addi	r20,r20,1
  80bbc4:	100b883a 	mov	r5,r2
  80bbc8:	39fff404 	addi	r7,r7,-48
  80bbcc:	8809883a 	mov	r4,r17
  80bbd0:	080ba180 	call	80ba18 <__multadd>
  80bbd4:	a43ff81e 	bne	r20,r16,80bbb8 <__alt_data_end+0xff80bbb8>
  80bbd8:	ace1883a 	add	r16,r21,r19
  80bbdc:	843ffe04 	addi	r16,r16,-8
  80bbe0:	9c800a0e 	bge	r19,r18,80bc0c <__s2b+0xd4>
  80bbe4:	94e5c83a 	sub	r18,r18,r19
  80bbe8:	84a5883a 	add	r18,r16,r18
  80bbec:	81c00007 	ldb	r7,0(r16)
  80bbf0:	01800284 	movi	r6,10
  80bbf4:	84000044 	addi	r16,r16,1
  80bbf8:	100b883a 	mov	r5,r2
  80bbfc:	39fff404 	addi	r7,r7,-48
  80bc00:	8809883a 	mov	r4,r17
  80bc04:	080ba180 	call	80ba18 <__multadd>
  80bc08:	84bff81e 	bne	r16,r18,80bbec <__alt_data_end+0xff80bbec>
  80bc0c:	dfc00617 	ldw	ra,24(sp)
  80bc10:	dd400517 	ldw	r21,20(sp)
  80bc14:	dd000417 	ldw	r20,16(sp)
  80bc18:	dcc00317 	ldw	r19,12(sp)
  80bc1c:	dc800217 	ldw	r18,8(sp)
  80bc20:	dc400117 	ldw	r17,4(sp)
  80bc24:	dc000017 	ldw	r16,0(sp)
  80bc28:	dec00704 	addi	sp,sp,28
  80bc2c:	f800283a 	ret
  80bc30:	84000284 	addi	r16,r16,10
  80bc34:	1827883a 	mov	r19,r3
  80bc38:	003fe906 	br	80bbe0 <__alt_data_end+0xff80bbe0>

0080bc3c <__hi0bits>:
  80bc3c:	20bfffec 	andhi	r2,r4,65535
  80bc40:	1000141e 	bne	r2,zero,80bc94 <__hi0bits+0x58>
  80bc44:	2008943a 	slli	r4,r4,16
  80bc48:	00800404 	movi	r2,16
  80bc4c:	20ffc02c 	andhi	r3,r4,65280
  80bc50:	1800021e 	bne	r3,zero,80bc5c <__hi0bits+0x20>
  80bc54:	2008923a 	slli	r4,r4,8
  80bc58:	10800204 	addi	r2,r2,8
  80bc5c:	20fc002c 	andhi	r3,r4,61440
  80bc60:	1800021e 	bne	r3,zero,80bc6c <__hi0bits+0x30>
  80bc64:	2008913a 	slli	r4,r4,4
  80bc68:	10800104 	addi	r2,r2,4
  80bc6c:	20f0002c 	andhi	r3,r4,49152
  80bc70:	1800031e 	bne	r3,zero,80bc80 <__hi0bits+0x44>
  80bc74:	2109883a 	add	r4,r4,r4
  80bc78:	10800084 	addi	r2,r2,2
  80bc7c:	2109883a 	add	r4,r4,r4
  80bc80:	20000316 	blt	r4,zero,80bc90 <__hi0bits+0x54>
  80bc84:	2110002c 	andhi	r4,r4,16384
  80bc88:	2000041e 	bne	r4,zero,80bc9c <__hi0bits+0x60>
  80bc8c:	00800804 	movi	r2,32
  80bc90:	f800283a 	ret
  80bc94:	0005883a 	mov	r2,zero
  80bc98:	003fec06 	br	80bc4c <__alt_data_end+0xff80bc4c>
  80bc9c:	10800044 	addi	r2,r2,1
  80bca0:	f800283a 	ret

0080bca4 <__lo0bits>:
  80bca4:	20c00017 	ldw	r3,0(r4)
  80bca8:	188001cc 	andi	r2,r3,7
  80bcac:	10000826 	beq	r2,zero,80bcd0 <__lo0bits+0x2c>
  80bcb0:	1880004c 	andi	r2,r3,1
  80bcb4:	1000211e 	bne	r2,zero,80bd3c <__lo0bits+0x98>
  80bcb8:	1880008c 	andi	r2,r3,2
  80bcbc:	1000211e 	bne	r2,zero,80bd44 <__lo0bits+0xa0>
  80bcc0:	1806d0ba 	srli	r3,r3,2
  80bcc4:	00800084 	movi	r2,2
  80bcc8:	20c00015 	stw	r3,0(r4)
  80bccc:	f800283a 	ret
  80bcd0:	18bfffcc 	andi	r2,r3,65535
  80bcd4:	10001326 	beq	r2,zero,80bd24 <__lo0bits+0x80>
  80bcd8:	0005883a 	mov	r2,zero
  80bcdc:	19403fcc 	andi	r5,r3,255
  80bce0:	2800021e 	bne	r5,zero,80bcec <__lo0bits+0x48>
  80bce4:	1806d23a 	srli	r3,r3,8
  80bce8:	10800204 	addi	r2,r2,8
  80bcec:	194003cc 	andi	r5,r3,15
  80bcf0:	2800021e 	bne	r5,zero,80bcfc <__lo0bits+0x58>
  80bcf4:	1806d13a 	srli	r3,r3,4
  80bcf8:	10800104 	addi	r2,r2,4
  80bcfc:	194000cc 	andi	r5,r3,3
  80bd00:	2800021e 	bne	r5,zero,80bd0c <__lo0bits+0x68>
  80bd04:	1806d0ba 	srli	r3,r3,2
  80bd08:	10800084 	addi	r2,r2,2
  80bd0c:	1940004c 	andi	r5,r3,1
  80bd10:	2800081e 	bne	r5,zero,80bd34 <__lo0bits+0x90>
  80bd14:	1806d07a 	srli	r3,r3,1
  80bd18:	1800051e 	bne	r3,zero,80bd30 <__lo0bits+0x8c>
  80bd1c:	00800804 	movi	r2,32
  80bd20:	f800283a 	ret
  80bd24:	1806d43a 	srli	r3,r3,16
  80bd28:	00800404 	movi	r2,16
  80bd2c:	003feb06 	br	80bcdc <__alt_data_end+0xff80bcdc>
  80bd30:	10800044 	addi	r2,r2,1
  80bd34:	20c00015 	stw	r3,0(r4)
  80bd38:	f800283a 	ret
  80bd3c:	0005883a 	mov	r2,zero
  80bd40:	f800283a 	ret
  80bd44:	1806d07a 	srli	r3,r3,1
  80bd48:	00800044 	movi	r2,1
  80bd4c:	20c00015 	stw	r3,0(r4)
  80bd50:	f800283a 	ret

0080bd54 <__i2b>:
  80bd54:	defffd04 	addi	sp,sp,-12
  80bd58:	dc000015 	stw	r16,0(sp)
  80bd5c:	04000044 	movi	r16,1
  80bd60:	dc400115 	stw	r17,4(sp)
  80bd64:	2823883a 	mov	r17,r5
  80bd68:	800b883a 	mov	r5,r16
  80bd6c:	dfc00215 	stw	ra,8(sp)
  80bd70:	080b9480 	call	80b948 <_Balloc>
  80bd74:	14400515 	stw	r17,20(r2)
  80bd78:	14000415 	stw	r16,16(r2)
  80bd7c:	dfc00217 	ldw	ra,8(sp)
  80bd80:	dc400117 	ldw	r17,4(sp)
  80bd84:	dc000017 	ldw	r16,0(sp)
  80bd88:	dec00304 	addi	sp,sp,12
  80bd8c:	f800283a 	ret

0080bd90 <__multiply>:
  80bd90:	defffa04 	addi	sp,sp,-24
  80bd94:	dcc00315 	stw	r19,12(sp)
  80bd98:	dc800215 	stw	r18,8(sp)
  80bd9c:	34c00417 	ldw	r19,16(r6)
  80bda0:	2c800417 	ldw	r18,16(r5)
  80bda4:	dd000415 	stw	r20,16(sp)
  80bda8:	dc400115 	stw	r17,4(sp)
  80bdac:	dfc00515 	stw	ra,20(sp)
  80bdb0:	dc000015 	stw	r16,0(sp)
  80bdb4:	2829883a 	mov	r20,r5
  80bdb8:	3023883a 	mov	r17,r6
  80bdbc:	94c0050e 	bge	r18,r19,80bdd4 <__multiply+0x44>
  80bdc0:	9007883a 	mov	r3,r18
  80bdc4:	3029883a 	mov	r20,r6
  80bdc8:	9825883a 	mov	r18,r19
  80bdcc:	2823883a 	mov	r17,r5
  80bdd0:	1827883a 	mov	r19,r3
  80bdd4:	a0800217 	ldw	r2,8(r20)
  80bdd8:	94e1883a 	add	r16,r18,r19
  80bddc:	a1400117 	ldw	r5,4(r20)
  80bde0:	1400010e 	bge	r2,r16,80bde8 <__multiply+0x58>
  80bde4:	29400044 	addi	r5,r5,1
  80bde8:	080b9480 	call	80b948 <_Balloc>
  80bdec:	8415883a 	add	r10,r16,r16
  80bdf0:	12c00504 	addi	r11,r2,20
  80bdf4:	5295883a 	add	r10,r10,r10
  80bdf8:	5a95883a 	add	r10,r11,r10
  80bdfc:	5807883a 	mov	r3,r11
  80be00:	5a80032e 	bgeu	r11,r10,80be10 <__multiply+0x80>
  80be04:	18000015 	stw	zero,0(r3)
  80be08:	18c00104 	addi	r3,r3,4
  80be0c:	1abffd36 	bltu	r3,r10,80be04 <__alt_data_end+0xff80be04>
  80be10:	9ce7883a 	add	r19,r19,r19
  80be14:	94a5883a 	add	r18,r18,r18
  80be18:	89800504 	addi	r6,r17,20
  80be1c:	9ce7883a 	add	r19,r19,r19
  80be20:	a3400504 	addi	r13,r20,20
  80be24:	94a5883a 	add	r18,r18,r18
  80be28:	34d9883a 	add	r12,r6,r19
  80be2c:	6c93883a 	add	r9,r13,r18
  80be30:	3300422e 	bgeu	r6,r12,80bf3c <__multiply+0x1ac>
  80be34:	37c00017 	ldw	ra,0(r6)
  80be38:	fbffffcc 	andi	r15,ra,65535
  80be3c:	78001b26 	beq	r15,zero,80beac <__multiply+0x11c>
  80be40:	5811883a 	mov	r8,r11
  80be44:	681d883a 	mov	r14,r13
  80be48:	000f883a 	mov	r7,zero
  80be4c:	71000017 	ldw	r4,0(r14)
  80be50:	40c00017 	ldw	r3,0(r8)
  80be54:	73800104 	addi	r14,r14,4
  80be58:	217fffcc 	andi	r5,r4,65535
  80be5c:	2bcb383a 	mul	r5,r5,r15
  80be60:	2008d43a 	srli	r4,r4,16
  80be64:	1c7fffcc 	andi	r17,r3,65535
  80be68:	2c4b883a 	add	r5,r5,r17
  80be6c:	29cb883a 	add	r5,r5,r7
  80be70:	23c9383a 	mul	r4,r4,r15
  80be74:	1806d43a 	srli	r3,r3,16
  80be78:	280ed43a 	srli	r7,r5,16
  80be7c:	297fffcc 	andi	r5,r5,65535
  80be80:	20c7883a 	add	r3,r4,r3
  80be84:	19c7883a 	add	r3,r3,r7
  80be88:	1808943a 	slli	r4,r3,16
  80be8c:	4023883a 	mov	r17,r8
  80be90:	180ed43a 	srli	r7,r3,16
  80be94:	214ab03a 	or	r5,r4,r5
  80be98:	41400015 	stw	r5,0(r8)
  80be9c:	42000104 	addi	r8,r8,4
  80bea0:	727fea36 	bltu	r14,r9,80be4c <__alt_data_end+0xff80be4c>
  80bea4:	89c00115 	stw	r7,4(r17)
  80bea8:	37c00017 	ldw	ra,0(r6)
  80beac:	f83ed43a 	srli	ra,ra,16
  80beb0:	f8001f26 	beq	ra,zero,80bf30 <__multiply+0x1a0>
  80beb4:	58c00017 	ldw	r3,0(r11)
  80beb8:	681d883a 	mov	r14,r13
  80bebc:	581f883a 	mov	r15,r11
  80bec0:	1811883a 	mov	r8,r3
  80bec4:	5825883a 	mov	r18,r11
  80bec8:	000f883a 	mov	r7,zero
  80becc:	00000106 	br	80bed4 <__multiply+0x144>
  80bed0:	8825883a 	mov	r18,r17
  80bed4:	7140000b 	ldhu	r5,0(r14)
  80bed8:	4010d43a 	srli	r8,r8,16
  80bedc:	193fffcc 	andi	r4,r3,65535
  80bee0:	2fcb383a 	mul	r5,r5,ra
  80bee4:	7bc00104 	addi	r15,r15,4
  80bee8:	73800104 	addi	r14,r14,4
  80beec:	2a0b883a 	add	r5,r5,r8
  80bef0:	29cb883a 	add	r5,r5,r7
  80bef4:	2806943a 	slli	r3,r5,16
  80bef8:	94400104 	addi	r17,r18,4
  80befc:	280ad43a 	srli	r5,r5,16
  80bf00:	1908b03a 	or	r4,r3,r4
  80bf04:	793fff15 	stw	r4,-4(r15)
  80bf08:	70ffff17 	ldw	r3,-4(r14)
  80bf0c:	8a000017 	ldw	r8,0(r17)
  80bf10:	1806d43a 	srli	r3,r3,16
  80bf14:	413fffcc 	andi	r4,r8,65535
  80bf18:	1fc7383a 	mul	r3,r3,ra
  80bf1c:	1907883a 	add	r3,r3,r4
  80bf20:	1947883a 	add	r3,r3,r5
  80bf24:	180ed43a 	srli	r7,r3,16
  80bf28:	727fe936 	bltu	r14,r9,80bed0 <__alt_data_end+0xff80bed0>
  80bf2c:	90c00115 	stw	r3,4(r18)
  80bf30:	31800104 	addi	r6,r6,4
  80bf34:	5ac00104 	addi	r11,r11,4
  80bf38:	333fbe36 	bltu	r6,r12,80be34 <__alt_data_end+0xff80be34>
  80bf3c:	0400090e 	bge	zero,r16,80bf64 <__multiply+0x1d4>
  80bf40:	50ffff17 	ldw	r3,-4(r10)
  80bf44:	52bfff04 	addi	r10,r10,-4
  80bf48:	18000326 	beq	r3,zero,80bf58 <__multiply+0x1c8>
  80bf4c:	00000506 	br	80bf64 <__multiply+0x1d4>
  80bf50:	50c00017 	ldw	r3,0(r10)
  80bf54:	1800031e 	bne	r3,zero,80bf64 <__multiply+0x1d4>
  80bf58:	843fffc4 	addi	r16,r16,-1
  80bf5c:	52bfff04 	addi	r10,r10,-4
  80bf60:	803ffb1e 	bne	r16,zero,80bf50 <__alt_data_end+0xff80bf50>
  80bf64:	14000415 	stw	r16,16(r2)
  80bf68:	dfc00517 	ldw	ra,20(sp)
  80bf6c:	dd000417 	ldw	r20,16(sp)
  80bf70:	dcc00317 	ldw	r19,12(sp)
  80bf74:	dc800217 	ldw	r18,8(sp)
  80bf78:	dc400117 	ldw	r17,4(sp)
  80bf7c:	dc000017 	ldw	r16,0(sp)
  80bf80:	dec00604 	addi	sp,sp,24
  80bf84:	f800283a 	ret

0080bf88 <__pow5mult>:
  80bf88:	defffa04 	addi	sp,sp,-24
  80bf8c:	dcc00315 	stw	r19,12(sp)
  80bf90:	dc000015 	stw	r16,0(sp)
  80bf94:	dfc00515 	stw	ra,20(sp)
  80bf98:	dd000415 	stw	r20,16(sp)
  80bf9c:	dc800215 	stw	r18,8(sp)
  80bfa0:	dc400115 	stw	r17,4(sp)
  80bfa4:	308000cc 	andi	r2,r6,3
  80bfa8:	3021883a 	mov	r16,r6
  80bfac:	2027883a 	mov	r19,r4
  80bfb0:	10002f1e 	bne	r2,zero,80c070 <__pow5mult+0xe8>
  80bfb4:	2825883a 	mov	r18,r5
  80bfb8:	8021d0ba 	srai	r16,r16,2
  80bfbc:	80001a26 	beq	r16,zero,80c028 <__pow5mult+0xa0>
  80bfc0:	9c401217 	ldw	r17,72(r19)
  80bfc4:	8800061e 	bne	r17,zero,80bfe0 <__pow5mult+0x58>
  80bfc8:	00003406 	br	80c09c <__pow5mult+0x114>
  80bfcc:	8021d07a 	srai	r16,r16,1
  80bfd0:	80001526 	beq	r16,zero,80c028 <__pow5mult+0xa0>
  80bfd4:	88800017 	ldw	r2,0(r17)
  80bfd8:	10001c26 	beq	r2,zero,80c04c <__pow5mult+0xc4>
  80bfdc:	1023883a 	mov	r17,r2
  80bfe0:	8080004c 	andi	r2,r16,1
  80bfe4:	103ff926 	beq	r2,zero,80bfcc <__alt_data_end+0xff80bfcc>
  80bfe8:	880d883a 	mov	r6,r17
  80bfec:	900b883a 	mov	r5,r18
  80bff0:	9809883a 	mov	r4,r19
  80bff4:	080bd900 	call	80bd90 <__multiply>
  80bff8:	90001b26 	beq	r18,zero,80c068 <__pow5mult+0xe0>
  80bffc:	91000117 	ldw	r4,4(r18)
  80c000:	98c01317 	ldw	r3,76(r19)
  80c004:	8021d07a 	srai	r16,r16,1
  80c008:	2109883a 	add	r4,r4,r4
  80c00c:	2109883a 	add	r4,r4,r4
  80c010:	1907883a 	add	r3,r3,r4
  80c014:	19000017 	ldw	r4,0(r3)
  80c018:	91000015 	stw	r4,0(r18)
  80c01c:	1c800015 	stw	r18,0(r3)
  80c020:	1025883a 	mov	r18,r2
  80c024:	803feb1e 	bne	r16,zero,80bfd4 <__alt_data_end+0xff80bfd4>
  80c028:	9005883a 	mov	r2,r18
  80c02c:	dfc00517 	ldw	ra,20(sp)
  80c030:	dd000417 	ldw	r20,16(sp)
  80c034:	dcc00317 	ldw	r19,12(sp)
  80c038:	dc800217 	ldw	r18,8(sp)
  80c03c:	dc400117 	ldw	r17,4(sp)
  80c040:	dc000017 	ldw	r16,0(sp)
  80c044:	dec00604 	addi	sp,sp,24
  80c048:	f800283a 	ret
  80c04c:	880d883a 	mov	r6,r17
  80c050:	880b883a 	mov	r5,r17
  80c054:	9809883a 	mov	r4,r19
  80c058:	080bd900 	call	80bd90 <__multiply>
  80c05c:	88800015 	stw	r2,0(r17)
  80c060:	10000015 	stw	zero,0(r2)
  80c064:	003fdd06 	br	80bfdc <__alt_data_end+0xff80bfdc>
  80c068:	1025883a 	mov	r18,r2
  80c06c:	003fd706 	br	80bfcc <__alt_data_end+0xff80bfcc>
  80c070:	10bfffc4 	addi	r2,r2,-1
  80c074:	1085883a 	add	r2,r2,r2
  80c078:	00c02074 	movhi	r3,129
  80c07c:	18ca5104 	addi	r3,r3,10564
  80c080:	1085883a 	add	r2,r2,r2
  80c084:	1885883a 	add	r2,r3,r2
  80c088:	11800017 	ldw	r6,0(r2)
  80c08c:	000f883a 	mov	r7,zero
  80c090:	080ba180 	call	80ba18 <__multadd>
  80c094:	1025883a 	mov	r18,r2
  80c098:	003fc706 	br	80bfb8 <__alt_data_end+0xff80bfb8>
  80c09c:	05000044 	movi	r20,1
  80c0a0:	a00b883a 	mov	r5,r20
  80c0a4:	9809883a 	mov	r4,r19
  80c0a8:	080b9480 	call	80b948 <_Balloc>
  80c0ac:	1023883a 	mov	r17,r2
  80c0b0:	00809c44 	movi	r2,625
  80c0b4:	88800515 	stw	r2,20(r17)
  80c0b8:	8d000415 	stw	r20,16(r17)
  80c0bc:	9c401215 	stw	r17,72(r19)
  80c0c0:	88000015 	stw	zero,0(r17)
  80c0c4:	003fc606 	br	80bfe0 <__alt_data_end+0xff80bfe0>

0080c0c8 <__lshift>:
  80c0c8:	defff904 	addi	sp,sp,-28
  80c0cc:	dd400515 	stw	r21,20(sp)
  80c0d0:	dcc00315 	stw	r19,12(sp)
  80c0d4:	302bd17a 	srai	r21,r6,5
  80c0d8:	2cc00417 	ldw	r19,16(r5)
  80c0dc:	28800217 	ldw	r2,8(r5)
  80c0e0:	dd000415 	stw	r20,16(sp)
  80c0e4:	ace7883a 	add	r19,r21,r19
  80c0e8:	dc800215 	stw	r18,8(sp)
  80c0ec:	dc400115 	stw	r17,4(sp)
  80c0f0:	dc000015 	stw	r16,0(sp)
  80c0f4:	dfc00615 	stw	ra,24(sp)
  80c0f8:	9c000044 	addi	r16,r19,1
  80c0fc:	2823883a 	mov	r17,r5
  80c100:	3029883a 	mov	r20,r6
  80c104:	2025883a 	mov	r18,r4
  80c108:	29400117 	ldw	r5,4(r5)
  80c10c:	1400030e 	bge	r2,r16,80c11c <__lshift+0x54>
  80c110:	1085883a 	add	r2,r2,r2
  80c114:	29400044 	addi	r5,r5,1
  80c118:	143ffd16 	blt	r2,r16,80c110 <__alt_data_end+0xff80c110>
  80c11c:	9009883a 	mov	r4,r18
  80c120:	080b9480 	call	80b948 <_Balloc>
  80c124:	10c00504 	addi	r3,r2,20
  80c128:	0540070e 	bge	zero,r21,80c148 <__lshift+0x80>
  80c12c:	ad6b883a 	add	r21,r21,r21
  80c130:	ad6b883a 	add	r21,r21,r21
  80c134:	1809883a 	mov	r4,r3
  80c138:	1d47883a 	add	r3,r3,r21
  80c13c:	20000015 	stw	zero,0(r4)
  80c140:	21000104 	addi	r4,r4,4
  80c144:	193ffd1e 	bne	r3,r4,80c13c <__alt_data_end+0xff80c13c>
  80c148:	8a000417 	ldw	r8,16(r17)
  80c14c:	89000504 	addi	r4,r17,20
  80c150:	a18007cc 	andi	r6,r20,31
  80c154:	4211883a 	add	r8,r8,r8
  80c158:	4211883a 	add	r8,r8,r8
  80c15c:	2211883a 	add	r8,r4,r8
  80c160:	30002326 	beq	r6,zero,80c1f0 <__lshift+0x128>
  80c164:	02400804 	movi	r9,32
  80c168:	4993c83a 	sub	r9,r9,r6
  80c16c:	000b883a 	mov	r5,zero
  80c170:	21c00017 	ldw	r7,0(r4)
  80c174:	1815883a 	mov	r10,r3
  80c178:	18c00104 	addi	r3,r3,4
  80c17c:	398e983a 	sll	r7,r7,r6
  80c180:	21000104 	addi	r4,r4,4
  80c184:	394ab03a 	or	r5,r7,r5
  80c188:	197fff15 	stw	r5,-4(r3)
  80c18c:	217fff17 	ldw	r5,-4(r4)
  80c190:	2a4ad83a 	srl	r5,r5,r9
  80c194:	223ff636 	bltu	r4,r8,80c170 <__alt_data_end+0xff80c170>
  80c198:	51400115 	stw	r5,4(r10)
  80c19c:	28001a1e 	bne	r5,zero,80c208 <__lshift+0x140>
  80c1a0:	843fffc4 	addi	r16,r16,-1
  80c1a4:	14000415 	stw	r16,16(r2)
  80c1a8:	88000826 	beq	r17,zero,80c1cc <__lshift+0x104>
  80c1ac:	89000117 	ldw	r4,4(r17)
  80c1b0:	90c01317 	ldw	r3,76(r18)
  80c1b4:	2109883a 	add	r4,r4,r4
  80c1b8:	2109883a 	add	r4,r4,r4
  80c1bc:	1907883a 	add	r3,r3,r4
  80c1c0:	19000017 	ldw	r4,0(r3)
  80c1c4:	89000015 	stw	r4,0(r17)
  80c1c8:	1c400015 	stw	r17,0(r3)
  80c1cc:	dfc00617 	ldw	ra,24(sp)
  80c1d0:	dd400517 	ldw	r21,20(sp)
  80c1d4:	dd000417 	ldw	r20,16(sp)
  80c1d8:	dcc00317 	ldw	r19,12(sp)
  80c1dc:	dc800217 	ldw	r18,8(sp)
  80c1e0:	dc400117 	ldw	r17,4(sp)
  80c1e4:	dc000017 	ldw	r16,0(sp)
  80c1e8:	dec00704 	addi	sp,sp,28
  80c1ec:	f800283a 	ret
  80c1f0:	21400017 	ldw	r5,0(r4)
  80c1f4:	18c00104 	addi	r3,r3,4
  80c1f8:	21000104 	addi	r4,r4,4
  80c1fc:	197fff15 	stw	r5,-4(r3)
  80c200:	223ffb36 	bltu	r4,r8,80c1f0 <__alt_data_end+0xff80c1f0>
  80c204:	003fe606 	br	80c1a0 <__alt_data_end+0xff80c1a0>
  80c208:	9c000084 	addi	r16,r19,2
  80c20c:	003fe406 	br	80c1a0 <__alt_data_end+0xff80c1a0>

0080c210 <__mcmp>:
  80c210:	20800417 	ldw	r2,16(r4)
  80c214:	28c00417 	ldw	r3,16(r5)
  80c218:	10c5c83a 	sub	r2,r2,r3
  80c21c:	1000111e 	bne	r2,zero,80c264 <__mcmp+0x54>
  80c220:	18c7883a 	add	r3,r3,r3
  80c224:	18c7883a 	add	r3,r3,r3
  80c228:	21000504 	addi	r4,r4,20
  80c22c:	29400504 	addi	r5,r5,20
  80c230:	20c5883a 	add	r2,r4,r3
  80c234:	28cb883a 	add	r5,r5,r3
  80c238:	00000106 	br	80c240 <__mcmp+0x30>
  80c23c:	20800a2e 	bgeu	r4,r2,80c268 <__mcmp+0x58>
  80c240:	10bfff04 	addi	r2,r2,-4
  80c244:	297fff04 	addi	r5,r5,-4
  80c248:	11800017 	ldw	r6,0(r2)
  80c24c:	28c00017 	ldw	r3,0(r5)
  80c250:	30fffa26 	beq	r6,r3,80c23c <__alt_data_end+0xff80c23c>
  80c254:	30c00236 	bltu	r6,r3,80c260 <__mcmp+0x50>
  80c258:	00800044 	movi	r2,1
  80c25c:	f800283a 	ret
  80c260:	00bfffc4 	movi	r2,-1
  80c264:	f800283a 	ret
  80c268:	0005883a 	mov	r2,zero
  80c26c:	f800283a 	ret

0080c270 <__mdiff>:
  80c270:	28c00417 	ldw	r3,16(r5)
  80c274:	30800417 	ldw	r2,16(r6)
  80c278:	defffa04 	addi	sp,sp,-24
  80c27c:	dcc00315 	stw	r19,12(sp)
  80c280:	dc800215 	stw	r18,8(sp)
  80c284:	dfc00515 	stw	ra,20(sp)
  80c288:	dd000415 	stw	r20,16(sp)
  80c28c:	dc400115 	stw	r17,4(sp)
  80c290:	dc000015 	stw	r16,0(sp)
  80c294:	1887c83a 	sub	r3,r3,r2
  80c298:	2825883a 	mov	r18,r5
  80c29c:	3027883a 	mov	r19,r6
  80c2a0:	1800141e 	bne	r3,zero,80c2f4 <__mdiff+0x84>
  80c2a4:	1085883a 	add	r2,r2,r2
  80c2a8:	1085883a 	add	r2,r2,r2
  80c2ac:	2a000504 	addi	r8,r5,20
  80c2b0:	34000504 	addi	r16,r6,20
  80c2b4:	4087883a 	add	r3,r8,r2
  80c2b8:	8085883a 	add	r2,r16,r2
  80c2bc:	00000106 	br	80c2c4 <__mdiff+0x54>
  80c2c0:	40c0592e 	bgeu	r8,r3,80c428 <__mdiff+0x1b8>
  80c2c4:	18ffff04 	addi	r3,r3,-4
  80c2c8:	10bfff04 	addi	r2,r2,-4
  80c2cc:	19c00017 	ldw	r7,0(r3)
  80c2d0:	11400017 	ldw	r5,0(r2)
  80c2d4:	397ffa26 	beq	r7,r5,80c2c0 <__alt_data_end+0xff80c2c0>
  80c2d8:	3940592e 	bgeu	r7,r5,80c440 <__mdiff+0x1d0>
  80c2dc:	9005883a 	mov	r2,r18
  80c2e0:	4023883a 	mov	r17,r8
  80c2e4:	9825883a 	mov	r18,r19
  80c2e8:	05000044 	movi	r20,1
  80c2ec:	1027883a 	mov	r19,r2
  80c2f0:	00000406 	br	80c304 <__mdiff+0x94>
  80c2f4:	18005616 	blt	r3,zero,80c450 <__mdiff+0x1e0>
  80c2f8:	34400504 	addi	r17,r6,20
  80c2fc:	2c000504 	addi	r16,r5,20
  80c300:	0029883a 	mov	r20,zero
  80c304:	91400117 	ldw	r5,4(r18)
  80c308:	080b9480 	call	80b948 <_Balloc>
  80c30c:	92400417 	ldw	r9,16(r18)
  80c310:	9b000417 	ldw	r12,16(r19)
  80c314:	12c00504 	addi	r11,r2,20
  80c318:	4a51883a 	add	r8,r9,r9
  80c31c:	6319883a 	add	r12,r12,r12
  80c320:	4211883a 	add	r8,r8,r8
  80c324:	6319883a 	add	r12,r12,r12
  80c328:	15000315 	stw	r20,12(r2)
  80c32c:	8211883a 	add	r8,r16,r8
  80c330:	8b19883a 	add	r12,r17,r12
  80c334:	0007883a 	mov	r3,zero
  80c338:	81400017 	ldw	r5,0(r16)
  80c33c:	89c00017 	ldw	r7,0(r17)
  80c340:	59800104 	addi	r6,r11,4
  80c344:	293fffcc 	andi	r4,r5,65535
  80c348:	20c7883a 	add	r3,r4,r3
  80c34c:	393fffcc 	andi	r4,r7,65535
  80c350:	1909c83a 	sub	r4,r3,r4
  80c354:	280ad43a 	srli	r5,r5,16
  80c358:	380ed43a 	srli	r7,r7,16
  80c35c:	2007d43a 	srai	r3,r4,16
  80c360:	213fffcc 	andi	r4,r4,65535
  80c364:	29cbc83a 	sub	r5,r5,r7
  80c368:	28c7883a 	add	r3,r5,r3
  80c36c:	180a943a 	slli	r5,r3,16
  80c370:	8c400104 	addi	r17,r17,4
  80c374:	84000104 	addi	r16,r16,4
  80c378:	2908b03a 	or	r4,r5,r4
  80c37c:	59000015 	stw	r4,0(r11)
  80c380:	1807d43a 	srai	r3,r3,16
  80c384:	3015883a 	mov	r10,r6
  80c388:	3017883a 	mov	r11,r6
  80c38c:	8b3fea36 	bltu	r17,r12,80c338 <__alt_data_end+0xff80c338>
  80c390:	8200162e 	bgeu	r16,r8,80c3ec <__mdiff+0x17c>
  80c394:	8017883a 	mov	r11,r16
  80c398:	59400017 	ldw	r5,0(r11)
  80c39c:	31800104 	addi	r6,r6,4
  80c3a0:	5ac00104 	addi	r11,r11,4
  80c3a4:	293fffcc 	andi	r4,r5,65535
  80c3a8:	20c7883a 	add	r3,r4,r3
  80c3ac:	280ed43a 	srli	r7,r5,16
  80c3b0:	180bd43a 	srai	r5,r3,16
  80c3b4:	193fffcc 	andi	r4,r3,65535
  80c3b8:	3947883a 	add	r3,r7,r5
  80c3bc:	180a943a 	slli	r5,r3,16
  80c3c0:	1807d43a 	srai	r3,r3,16
  80c3c4:	2908b03a 	or	r4,r5,r4
  80c3c8:	313fff15 	stw	r4,-4(r6)
  80c3cc:	5a3ff236 	bltu	r11,r8,80c398 <__alt_data_end+0xff80c398>
  80c3d0:	0406303a 	nor	r3,zero,r16
  80c3d4:	1a07883a 	add	r3,r3,r8
  80c3d8:	1806d0ba 	srli	r3,r3,2
  80c3dc:	18c00044 	addi	r3,r3,1
  80c3e0:	18c7883a 	add	r3,r3,r3
  80c3e4:	18c7883a 	add	r3,r3,r3
  80c3e8:	50d5883a 	add	r10,r10,r3
  80c3ec:	50ffff04 	addi	r3,r10,-4
  80c3f0:	2000041e 	bne	r4,zero,80c404 <__mdiff+0x194>
  80c3f4:	18ffff04 	addi	r3,r3,-4
  80c3f8:	19000017 	ldw	r4,0(r3)
  80c3fc:	4a7fffc4 	addi	r9,r9,-1
  80c400:	203ffc26 	beq	r4,zero,80c3f4 <__alt_data_end+0xff80c3f4>
  80c404:	12400415 	stw	r9,16(r2)
  80c408:	dfc00517 	ldw	ra,20(sp)
  80c40c:	dd000417 	ldw	r20,16(sp)
  80c410:	dcc00317 	ldw	r19,12(sp)
  80c414:	dc800217 	ldw	r18,8(sp)
  80c418:	dc400117 	ldw	r17,4(sp)
  80c41c:	dc000017 	ldw	r16,0(sp)
  80c420:	dec00604 	addi	sp,sp,24
  80c424:	f800283a 	ret
  80c428:	000b883a 	mov	r5,zero
  80c42c:	080b9480 	call	80b948 <_Balloc>
  80c430:	00c00044 	movi	r3,1
  80c434:	10c00415 	stw	r3,16(r2)
  80c438:	10000515 	stw	zero,20(r2)
  80c43c:	003ff206 	br	80c408 <__alt_data_end+0xff80c408>
  80c440:	8023883a 	mov	r17,r16
  80c444:	0029883a 	mov	r20,zero
  80c448:	4021883a 	mov	r16,r8
  80c44c:	003fad06 	br	80c304 <__alt_data_end+0xff80c304>
  80c450:	9005883a 	mov	r2,r18
  80c454:	94400504 	addi	r17,r18,20
  80c458:	9c000504 	addi	r16,r19,20
  80c45c:	9825883a 	mov	r18,r19
  80c460:	05000044 	movi	r20,1
  80c464:	1027883a 	mov	r19,r2
  80c468:	003fa606 	br	80c304 <__alt_data_end+0xff80c304>

0080c46c <__ulp>:
  80c46c:	295ffc2c 	andhi	r5,r5,32752
  80c470:	00bf3034 	movhi	r2,64704
  80c474:	2887883a 	add	r3,r5,r2
  80c478:	00c0020e 	bge	zero,r3,80c484 <__ulp+0x18>
  80c47c:	0005883a 	mov	r2,zero
  80c480:	f800283a 	ret
  80c484:	00c7c83a 	sub	r3,zero,r3
  80c488:	1807d53a 	srai	r3,r3,20
  80c48c:	008004c4 	movi	r2,19
  80c490:	10c00b0e 	bge	r2,r3,80c4c0 <__ulp+0x54>
  80c494:	18bffb04 	addi	r2,r3,-20
  80c498:	01000784 	movi	r4,30
  80c49c:	0007883a 	mov	r3,zero
  80c4a0:	20800516 	blt	r4,r2,80c4b8 <__ulp+0x4c>
  80c4a4:	010007c4 	movi	r4,31
  80c4a8:	2089c83a 	sub	r4,r4,r2
  80c4ac:	00800044 	movi	r2,1
  80c4b0:	1104983a 	sll	r2,r2,r4
  80c4b4:	f800283a 	ret
  80c4b8:	00800044 	movi	r2,1
  80c4bc:	f800283a 	ret
  80c4c0:	01400234 	movhi	r5,8
  80c4c4:	28c7d83a 	sra	r3,r5,r3
  80c4c8:	0005883a 	mov	r2,zero
  80c4cc:	f800283a 	ret

0080c4d0 <__b2d>:
  80c4d0:	defffa04 	addi	sp,sp,-24
  80c4d4:	dc000015 	stw	r16,0(sp)
  80c4d8:	24000417 	ldw	r16,16(r4)
  80c4dc:	dc400115 	stw	r17,4(sp)
  80c4e0:	24400504 	addi	r17,r4,20
  80c4e4:	8421883a 	add	r16,r16,r16
  80c4e8:	8421883a 	add	r16,r16,r16
  80c4ec:	8c21883a 	add	r16,r17,r16
  80c4f0:	dc800215 	stw	r18,8(sp)
  80c4f4:	84bfff17 	ldw	r18,-4(r16)
  80c4f8:	dd000415 	stw	r20,16(sp)
  80c4fc:	dcc00315 	stw	r19,12(sp)
  80c500:	9009883a 	mov	r4,r18
  80c504:	2829883a 	mov	r20,r5
  80c508:	dfc00515 	stw	ra,20(sp)
  80c50c:	080bc3c0 	call	80bc3c <__hi0bits>
  80c510:	00c00804 	movi	r3,32
  80c514:	1889c83a 	sub	r4,r3,r2
  80c518:	a1000015 	stw	r4,0(r20)
  80c51c:	01000284 	movi	r4,10
  80c520:	84ffff04 	addi	r19,r16,-4
  80c524:	20801216 	blt	r4,r2,80c570 <__b2d+0xa0>
  80c528:	018002c4 	movi	r6,11
  80c52c:	308dc83a 	sub	r6,r6,r2
  80c530:	9186d83a 	srl	r3,r18,r6
  80c534:	18cffc34 	orhi	r3,r3,16368
  80c538:	8cc0212e 	bgeu	r17,r19,80c5c0 <__b2d+0xf0>
  80c53c:	813ffe17 	ldw	r4,-8(r16)
  80c540:	218cd83a 	srl	r6,r4,r6
  80c544:	10800544 	addi	r2,r2,21
  80c548:	9084983a 	sll	r2,r18,r2
  80c54c:	1184b03a 	or	r2,r2,r6
  80c550:	dfc00517 	ldw	ra,20(sp)
  80c554:	dd000417 	ldw	r20,16(sp)
  80c558:	dcc00317 	ldw	r19,12(sp)
  80c55c:	dc800217 	ldw	r18,8(sp)
  80c560:	dc400117 	ldw	r17,4(sp)
  80c564:	dc000017 	ldw	r16,0(sp)
  80c568:	dec00604 	addi	sp,sp,24
  80c56c:	f800283a 	ret
  80c570:	8cc00f2e 	bgeu	r17,r19,80c5b0 <__b2d+0xe0>
  80c574:	117ffd44 	addi	r5,r2,-11
  80c578:	80bffe17 	ldw	r2,-8(r16)
  80c57c:	28000e26 	beq	r5,zero,80c5b8 <__b2d+0xe8>
  80c580:	1949c83a 	sub	r4,r3,r5
  80c584:	9164983a 	sll	r18,r18,r5
  80c588:	1106d83a 	srl	r3,r2,r4
  80c58c:	81bffe04 	addi	r6,r16,-8
  80c590:	948ffc34 	orhi	r18,r18,16368
  80c594:	90c6b03a 	or	r3,r18,r3
  80c598:	89800e2e 	bgeu	r17,r6,80c5d4 <__b2d+0x104>
  80c59c:	81bffd17 	ldw	r6,-12(r16)
  80c5a0:	1144983a 	sll	r2,r2,r5
  80c5a4:	310ad83a 	srl	r5,r6,r4
  80c5a8:	2884b03a 	or	r2,r5,r2
  80c5ac:	003fe806 	br	80c550 <__alt_data_end+0xff80c550>
  80c5b0:	10bffd44 	addi	r2,r2,-11
  80c5b4:	1000041e 	bne	r2,zero,80c5c8 <__b2d+0xf8>
  80c5b8:	90cffc34 	orhi	r3,r18,16368
  80c5bc:	003fe406 	br	80c550 <__alt_data_end+0xff80c550>
  80c5c0:	000d883a 	mov	r6,zero
  80c5c4:	003fdf06 	br	80c544 <__alt_data_end+0xff80c544>
  80c5c8:	90a4983a 	sll	r18,r18,r2
  80c5cc:	0005883a 	mov	r2,zero
  80c5d0:	003ff906 	br	80c5b8 <__alt_data_end+0xff80c5b8>
  80c5d4:	1144983a 	sll	r2,r2,r5
  80c5d8:	003fdd06 	br	80c550 <__alt_data_end+0xff80c550>

0080c5dc <__d2b>:
  80c5dc:	defff804 	addi	sp,sp,-32
  80c5e0:	dc000215 	stw	r16,8(sp)
  80c5e4:	3021883a 	mov	r16,r6
  80c5e8:	dc400315 	stw	r17,12(sp)
  80c5ec:	8022907a 	slli	r17,r16,1
  80c5f0:	dd000615 	stw	r20,24(sp)
  80c5f4:	2829883a 	mov	r20,r5
  80c5f8:	01400044 	movi	r5,1
  80c5fc:	dcc00515 	stw	r19,20(sp)
  80c600:	dc800415 	stw	r18,16(sp)
  80c604:	dfc00715 	stw	ra,28(sp)
  80c608:	3825883a 	mov	r18,r7
  80c60c:	8822d57a 	srli	r17,r17,21
  80c610:	080b9480 	call	80b948 <_Balloc>
  80c614:	1027883a 	mov	r19,r2
  80c618:	00800434 	movhi	r2,16
  80c61c:	10bfffc4 	addi	r2,r2,-1
  80c620:	808c703a 	and	r6,r16,r2
  80c624:	88000126 	beq	r17,zero,80c62c <__d2b+0x50>
  80c628:	31800434 	orhi	r6,r6,16
  80c62c:	d9800015 	stw	r6,0(sp)
  80c630:	a0002426 	beq	r20,zero,80c6c4 <__d2b+0xe8>
  80c634:	d9000104 	addi	r4,sp,4
  80c638:	dd000115 	stw	r20,4(sp)
  80c63c:	080bca40 	call	80bca4 <__lo0bits>
  80c640:	d8c00017 	ldw	r3,0(sp)
  80c644:	10002f1e 	bne	r2,zero,80c704 <__d2b+0x128>
  80c648:	d9000117 	ldw	r4,4(sp)
  80c64c:	99000515 	stw	r4,20(r19)
  80c650:	1821003a 	cmpeq	r16,r3,zero
  80c654:	01000084 	movi	r4,2
  80c658:	2421c83a 	sub	r16,r4,r16
  80c65c:	98c00615 	stw	r3,24(r19)
  80c660:	9c000415 	stw	r16,16(r19)
  80c664:	88001f1e 	bne	r17,zero,80c6e4 <__d2b+0x108>
  80c668:	10bef384 	addi	r2,r2,-1074
  80c66c:	90800015 	stw	r2,0(r18)
  80c670:	00900034 	movhi	r2,16384
  80c674:	10bfffc4 	addi	r2,r2,-1
  80c678:	8085883a 	add	r2,r16,r2
  80c67c:	1085883a 	add	r2,r2,r2
  80c680:	1085883a 	add	r2,r2,r2
  80c684:	9885883a 	add	r2,r19,r2
  80c688:	11000517 	ldw	r4,20(r2)
  80c68c:	8020917a 	slli	r16,r16,5
  80c690:	080bc3c0 	call	80bc3c <__hi0bits>
  80c694:	d8c00817 	ldw	r3,32(sp)
  80c698:	8085c83a 	sub	r2,r16,r2
  80c69c:	18800015 	stw	r2,0(r3)
  80c6a0:	9805883a 	mov	r2,r19
  80c6a4:	dfc00717 	ldw	ra,28(sp)
  80c6a8:	dd000617 	ldw	r20,24(sp)
  80c6ac:	dcc00517 	ldw	r19,20(sp)
  80c6b0:	dc800417 	ldw	r18,16(sp)
  80c6b4:	dc400317 	ldw	r17,12(sp)
  80c6b8:	dc000217 	ldw	r16,8(sp)
  80c6bc:	dec00804 	addi	sp,sp,32
  80c6c0:	f800283a 	ret
  80c6c4:	d809883a 	mov	r4,sp
  80c6c8:	080bca40 	call	80bca4 <__lo0bits>
  80c6cc:	d8c00017 	ldw	r3,0(sp)
  80c6d0:	04000044 	movi	r16,1
  80c6d4:	9c000415 	stw	r16,16(r19)
  80c6d8:	98c00515 	stw	r3,20(r19)
  80c6dc:	10800804 	addi	r2,r2,32
  80c6e0:	883fe126 	beq	r17,zero,80c668 <__alt_data_end+0xff80c668>
  80c6e4:	00c00d44 	movi	r3,53
  80c6e8:	8c7ef344 	addi	r17,r17,-1075
  80c6ec:	88a3883a 	add	r17,r17,r2
  80c6f0:	1885c83a 	sub	r2,r3,r2
  80c6f4:	d8c00817 	ldw	r3,32(sp)
  80c6f8:	94400015 	stw	r17,0(r18)
  80c6fc:	18800015 	stw	r2,0(r3)
  80c700:	003fe706 	br	80c6a0 <__alt_data_end+0xff80c6a0>
  80c704:	01000804 	movi	r4,32
  80c708:	2089c83a 	sub	r4,r4,r2
  80c70c:	1908983a 	sll	r4,r3,r4
  80c710:	d9400117 	ldw	r5,4(sp)
  80c714:	1886d83a 	srl	r3,r3,r2
  80c718:	2148b03a 	or	r4,r4,r5
  80c71c:	99000515 	stw	r4,20(r19)
  80c720:	d8c00015 	stw	r3,0(sp)
  80c724:	003fca06 	br	80c650 <__alt_data_end+0xff80c650>

0080c728 <__ratio>:
  80c728:	defff904 	addi	sp,sp,-28
  80c72c:	dc400315 	stw	r17,12(sp)
  80c730:	2823883a 	mov	r17,r5
  80c734:	d9400104 	addi	r5,sp,4
  80c738:	dfc00615 	stw	ra,24(sp)
  80c73c:	dcc00515 	stw	r19,20(sp)
  80c740:	dc800415 	stw	r18,16(sp)
  80c744:	2027883a 	mov	r19,r4
  80c748:	dc000215 	stw	r16,8(sp)
  80c74c:	080c4d00 	call	80c4d0 <__b2d>
  80c750:	d80b883a 	mov	r5,sp
  80c754:	8809883a 	mov	r4,r17
  80c758:	1025883a 	mov	r18,r2
  80c75c:	1821883a 	mov	r16,r3
  80c760:	080c4d00 	call	80c4d0 <__b2d>
  80c764:	8a000417 	ldw	r8,16(r17)
  80c768:	99000417 	ldw	r4,16(r19)
  80c76c:	d9400117 	ldw	r5,4(sp)
  80c770:	2209c83a 	sub	r4,r4,r8
  80c774:	2010917a 	slli	r8,r4,5
  80c778:	d9000017 	ldw	r4,0(sp)
  80c77c:	2909c83a 	sub	r4,r5,r4
  80c780:	4109883a 	add	r4,r8,r4
  80c784:	01000e0e 	bge	zero,r4,80c7c0 <__ratio+0x98>
  80c788:	2008953a 	slli	r4,r4,20
  80c78c:	2421883a 	add	r16,r4,r16
  80c790:	100d883a 	mov	r6,r2
  80c794:	180f883a 	mov	r7,r3
  80c798:	9009883a 	mov	r4,r18
  80c79c:	800b883a 	mov	r5,r16
  80c7a0:	0803bd80 	call	803bd8 <__divdf3>
  80c7a4:	dfc00617 	ldw	ra,24(sp)
  80c7a8:	dcc00517 	ldw	r19,20(sp)
  80c7ac:	dc800417 	ldw	r18,16(sp)
  80c7b0:	dc400317 	ldw	r17,12(sp)
  80c7b4:	dc000217 	ldw	r16,8(sp)
  80c7b8:	dec00704 	addi	sp,sp,28
  80c7bc:	f800283a 	ret
  80c7c0:	2008953a 	slli	r4,r4,20
  80c7c4:	1907c83a 	sub	r3,r3,r4
  80c7c8:	003ff106 	br	80c790 <__alt_data_end+0xff80c790>

0080c7cc <_mprec_log10>:
  80c7cc:	defffe04 	addi	sp,sp,-8
  80c7d0:	dc000015 	stw	r16,0(sp)
  80c7d4:	dfc00115 	stw	ra,4(sp)
  80c7d8:	008005c4 	movi	r2,23
  80c7dc:	2021883a 	mov	r16,r4
  80c7e0:	11000d0e 	bge	r2,r4,80c818 <_mprec_log10+0x4c>
  80c7e4:	0005883a 	mov	r2,zero
  80c7e8:	00cffc34 	movhi	r3,16368
  80c7ec:	843fffc4 	addi	r16,r16,-1
  80c7f0:	000d883a 	mov	r6,zero
  80c7f4:	01d00934 	movhi	r7,16420
  80c7f8:	1009883a 	mov	r4,r2
  80c7fc:	180b883a 	mov	r5,r3
  80c800:	08046240 	call	804624 <__muldf3>
  80c804:	803ff91e 	bne	r16,zero,80c7ec <__alt_data_end+0xff80c7ec>
  80c808:	dfc00117 	ldw	ra,4(sp)
  80c80c:	dc000017 	ldw	r16,0(sp)
  80c810:	dec00204 	addi	sp,sp,8
  80c814:	f800283a 	ret
  80c818:	202090fa 	slli	r16,r4,3
  80c81c:	00802074 	movhi	r2,129
  80c820:	108a6804 	addi	r2,r2,10656
  80c824:	1421883a 	add	r16,r2,r16
  80c828:	80800017 	ldw	r2,0(r16)
  80c82c:	80c00117 	ldw	r3,4(r16)
  80c830:	dfc00117 	ldw	ra,4(sp)
  80c834:	dc000017 	ldw	r16,0(sp)
  80c838:	dec00204 	addi	sp,sp,8
  80c83c:	f800283a 	ret

0080c840 <__copybits>:
  80c840:	297fffc4 	addi	r5,r5,-1
  80c844:	280fd17a 	srai	r7,r5,5
  80c848:	30c00417 	ldw	r3,16(r6)
  80c84c:	30800504 	addi	r2,r6,20
  80c850:	39c00044 	addi	r7,r7,1
  80c854:	18c7883a 	add	r3,r3,r3
  80c858:	39cf883a 	add	r7,r7,r7
  80c85c:	18c7883a 	add	r3,r3,r3
  80c860:	39cf883a 	add	r7,r7,r7
  80c864:	10c7883a 	add	r3,r2,r3
  80c868:	21cf883a 	add	r7,r4,r7
  80c86c:	10c00d2e 	bgeu	r2,r3,80c8a4 <__copybits+0x64>
  80c870:	200b883a 	mov	r5,r4
  80c874:	12000017 	ldw	r8,0(r2)
  80c878:	29400104 	addi	r5,r5,4
  80c87c:	10800104 	addi	r2,r2,4
  80c880:	2a3fff15 	stw	r8,-4(r5)
  80c884:	10fffb36 	bltu	r2,r3,80c874 <__alt_data_end+0xff80c874>
  80c888:	1985c83a 	sub	r2,r3,r6
  80c88c:	10bffac4 	addi	r2,r2,-21
  80c890:	1004d0ba 	srli	r2,r2,2
  80c894:	10800044 	addi	r2,r2,1
  80c898:	1085883a 	add	r2,r2,r2
  80c89c:	1085883a 	add	r2,r2,r2
  80c8a0:	2089883a 	add	r4,r4,r2
  80c8a4:	21c0032e 	bgeu	r4,r7,80c8b4 <__copybits+0x74>
  80c8a8:	20000015 	stw	zero,0(r4)
  80c8ac:	21000104 	addi	r4,r4,4
  80c8b0:	21fffd36 	bltu	r4,r7,80c8a8 <__alt_data_end+0xff80c8a8>
  80c8b4:	f800283a 	ret

0080c8b8 <__any_on>:
  80c8b8:	20c00417 	ldw	r3,16(r4)
  80c8bc:	2805d17a 	srai	r2,r5,5
  80c8c0:	21000504 	addi	r4,r4,20
  80c8c4:	18800d0e 	bge	r3,r2,80c8fc <__any_on+0x44>
  80c8c8:	18c7883a 	add	r3,r3,r3
  80c8cc:	18c7883a 	add	r3,r3,r3
  80c8d0:	20c7883a 	add	r3,r4,r3
  80c8d4:	20c0192e 	bgeu	r4,r3,80c93c <__any_on+0x84>
  80c8d8:	18bfff17 	ldw	r2,-4(r3)
  80c8dc:	18ffff04 	addi	r3,r3,-4
  80c8e0:	1000041e 	bne	r2,zero,80c8f4 <__any_on+0x3c>
  80c8e4:	20c0142e 	bgeu	r4,r3,80c938 <__any_on+0x80>
  80c8e8:	18ffff04 	addi	r3,r3,-4
  80c8ec:	19400017 	ldw	r5,0(r3)
  80c8f0:	283ffc26 	beq	r5,zero,80c8e4 <__alt_data_end+0xff80c8e4>
  80c8f4:	00800044 	movi	r2,1
  80c8f8:	f800283a 	ret
  80c8fc:	10c00a0e 	bge	r2,r3,80c928 <__any_on+0x70>
  80c900:	1085883a 	add	r2,r2,r2
  80c904:	1085883a 	add	r2,r2,r2
  80c908:	294007cc 	andi	r5,r5,31
  80c90c:	2087883a 	add	r3,r4,r2
  80c910:	283ff026 	beq	r5,zero,80c8d4 <__alt_data_end+0xff80c8d4>
  80c914:	19800017 	ldw	r6,0(r3)
  80c918:	3144d83a 	srl	r2,r6,r5
  80c91c:	114a983a 	sll	r5,r2,r5
  80c920:	317ff41e 	bne	r6,r5,80c8f4 <__alt_data_end+0xff80c8f4>
  80c924:	003feb06 	br	80c8d4 <__alt_data_end+0xff80c8d4>
  80c928:	1085883a 	add	r2,r2,r2
  80c92c:	1085883a 	add	r2,r2,r2
  80c930:	2087883a 	add	r3,r4,r2
  80c934:	003fe706 	br	80c8d4 <__alt_data_end+0xff80c8d4>
  80c938:	f800283a 	ret
  80c93c:	0005883a 	mov	r2,zero
  80c940:	f800283a 	ret

0080c944 <_realloc_r>:
  80c944:	defff604 	addi	sp,sp,-40
  80c948:	dc800215 	stw	r18,8(sp)
  80c94c:	dfc00915 	stw	ra,36(sp)
  80c950:	df000815 	stw	fp,32(sp)
  80c954:	ddc00715 	stw	r23,28(sp)
  80c958:	dd800615 	stw	r22,24(sp)
  80c95c:	dd400515 	stw	r21,20(sp)
  80c960:	dd000415 	stw	r20,16(sp)
  80c964:	dcc00315 	stw	r19,12(sp)
  80c968:	dc400115 	stw	r17,4(sp)
  80c96c:	dc000015 	stw	r16,0(sp)
  80c970:	3025883a 	mov	r18,r6
  80c974:	2800b726 	beq	r5,zero,80cc54 <_realloc_r+0x310>
  80c978:	282b883a 	mov	r21,r5
  80c97c:	2029883a 	mov	r20,r4
  80c980:	08102cc0 	call	8102cc <__malloc_lock>
  80c984:	a8bfff17 	ldw	r2,-4(r21)
  80c988:	043fff04 	movi	r16,-4
  80c98c:	90c002c4 	addi	r3,r18,11
  80c990:	01000584 	movi	r4,22
  80c994:	acfffe04 	addi	r19,r21,-8
  80c998:	1420703a 	and	r16,r2,r16
  80c99c:	20c0332e 	bgeu	r4,r3,80ca6c <_realloc_r+0x128>
  80c9a0:	047ffe04 	movi	r17,-8
  80c9a4:	1c62703a 	and	r17,r3,r17
  80c9a8:	8807883a 	mov	r3,r17
  80c9ac:	88005816 	blt	r17,zero,80cb10 <_realloc_r+0x1cc>
  80c9b0:	8c805736 	bltu	r17,r18,80cb10 <_realloc_r+0x1cc>
  80c9b4:	80c0300e 	bge	r16,r3,80ca78 <_realloc_r+0x134>
  80c9b8:	07002074 	movhi	fp,129
  80c9bc:	e70bd404 	addi	fp,fp,12112
  80c9c0:	e1c00217 	ldw	r7,8(fp)
  80c9c4:	9c09883a 	add	r4,r19,r16
  80c9c8:	22000117 	ldw	r8,4(r4)
  80c9cc:	21c06326 	beq	r4,r7,80cb5c <_realloc_r+0x218>
  80c9d0:	017fff84 	movi	r5,-2
  80c9d4:	414a703a 	and	r5,r8,r5
  80c9d8:	214b883a 	add	r5,r4,r5
  80c9dc:	29800117 	ldw	r6,4(r5)
  80c9e0:	3180004c 	andi	r6,r6,1
  80c9e4:	30003f26 	beq	r6,zero,80cae4 <_realloc_r+0x1a0>
  80c9e8:	1080004c 	andi	r2,r2,1
  80c9ec:	10008326 	beq	r2,zero,80cbfc <_realloc_r+0x2b8>
  80c9f0:	900b883a 	mov	r5,r18
  80c9f4:	a009883a 	mov	r4,r20
  80c9f8:	080ac8c0 	call	80ac8c <_malloc_r>
  80c9fc:	1025883a 	mov	r18,r2
  80ca00:	10011e26 	beq	r2,zero,80ce7c <_realloc_r+0x538>
  80ca04:	a93fff17 	ldw	r4,-4(r21)
  80ca08:	10fffe04 	addi	r3,r2,-8
  80ca0c:	00bfff84 	movi	r2,-2
  80ca10:	2084703a 	and	r2,r4,r2
  80ca14:	9885883a 	add	r2,r19,r2
  80ca18:	1880ee26 	beq	r3,r2,80cdd4 <_realloc_r+0x490>
  80ca1c:	81bfff04 	addi	r6,r16,-4
  80ca20:	00800904 	movi	r2,36
  80ca24:	1180b836 	bltu	r2,r6,80cd08 <_realloc_r+0x3c4>
  80ca28:	00c004c4 	movi	r3,19
  80ca2c:	19809636 	bltu	r3,r6,80cc88 <_realloc_r+0x344>
  80ca30:	9005883a 	mov	r2,r18
  80ca34:	a807883a 	mov	r3,r21
  80ca38:	19000017 	ldw	r4,0(r3)
  80ca3c:	11000015 	stw	r4,0(r2)
  80ca40:	19000117 	ldw	r4,4(r3)
  80ca44:	11000115 	stw	r4,4(r2)
  80ca48:	18c00217 	ldw	r3,8(r3)
  80ca4c:	10c00215 	stw	r3,8(r2)
  80ca50:	a80b883a 	mov	r5,r21
  80ca54:	a009883a 	mov	r4,r20
  80ca58:	080a0a00 	call	80a0a0 <_free_r>
  80ca5c:	a009883a 	mov	r4,r20
  80ca60:	08102f00 	call	8102f0 <__malloc_unlock>
  80ca64:	9005883a 	mov	r2,r18
  80ca68:	00001206 	br	80cab4 <_realloc_r+0x170>
  80ca6c:	00c00404 	movi	r3,16
  80ca70:	1823883a 	mov	r17,r3
  80ca74:	003fce06 	br	80c9b0 <__alt_data_end+0xff80c9b0>
  80ca78:	a825883a 	mov	r18,r21
  80ca7c:	8445c83a 	sub	r2,r16,r17
  80ca80:	00c003c4 	movi	r3,15
  80ca84:	18802636 	bltu	r3,r2,80cb20 <_realloc_r+0x1dc>
  80ca88:	99800117 	ldw	r6,4(r19)
  80ca8c:	9c07883a 	add	r3,r19,r16
  80ca90:	3180004c 	andi	r6,r6,1
  80ca94:	3420b03a 	or	r16,r6,r16
  80ca98:	9c000115 	stw	r16,4(r19)
  80ca9c:	18800117 	ldw	r2,4(r3)
  80caa0:	10800054 	ori	r2,r2,1
  80caa4:	18800115 	stw	r2,4(r3)
  80caa8:	a009883a 	mov	r4,r20
  80caac:	08102f00 	call	8102f0 <__malloc_unlock>
  80cab0:	9005883a 	mov	r2,r18
  80cab4:	dfc00917 	ldw	ra,36(sp)
  80cab8:	df000817 	ldw	fp,32(sp)
  80cabc:	ddc00717 	ldw	r23,28(sp)
  80cac0:	dd800617 	ldw	r22,24(sp)
  80cac4:	dd400517 	ldw	r21,20(sp)
  80cac8:	dd000417 	ldw	r20,16(sp)
  80cacc:	dcc00317 	ldw	r19,12(sp)
  80cad0:	dc800217 	ldw	r18,8(sp)
  80cad4:	dc400117 	ldw	r17,4(sp)
  80cad8:	dc000017 	ldw	r16,0(sp)
  80cadc:	dec00a04 	addi	sp,sp,40
  80cae0:	f800283a 	ret
  80cae4:	017fff04 	movi	r5,-4
  80cae8:	414a703a 	and	r5,r8,r5
  80caec:	814d883a 	add	r6,r16,r5
  80caf0:	30c01f16 	blt	r6,r3,80cb70 <_realloc_r+0x22c>
  80caf4:	20800317 	ldw	r2,12(r4)
  80caf8:	20c00217 	ldw	r3,8(r4)
  80cafc:	a825883a 	mov	r18,r21
  80cb00:	3021883a 	mov	r16,r6
  80cb04:	18800315 	stw	r2,12(r3)
  80cb08:	10c00215 	stw	r3,8(r2)
  80cb0c:	003fdb06 	br	80ca7c <__alt_data_end+0xff80ca7c>
  80cb10:	00800304 	movi	r2,12
  80cb14:	a0800015 	stw	r2,0(r20)
  80cb18:	0005883a 	mov	r2,zero
  80cb1c:	003fe506 	br	80cab4 <__alt_data_end+0xff80cab4>
  80cb20:	98c00117 	ldw	r3,4(r19)
  80cb24:	9c4b883a 	add	r5,r19,r17
  80cb28:	11000054 	ori	r4,r2,1
  80cb2c:	18c0004c 	andi	r3,r3,1
  80cb30:	1c62b03a 	or	r17,r3,r17
  80cb34:	9c400115 	stw	r17,4(r19)
  80cb38:	29000115 	stw	r4,4(r5)
  80cb3c:	2885883a 	add	r2,r5,r2
  80cb40:	10c00117 	ldw	r3,4(r2)
  80cb44:	29400204 	addi	r5,r5,8
  80cb48:	a009883a 	mov	r4,r20
  80cb4c:	18c00054 	ori	r3,r3,1
  80cb50:	10c00115 	stw	r3,4(r2)
  80cb54:	080a0a00 	call	80a0a0 <_free_r>
  80cb58:	003fd306 	br	80caa8 <__alt_data_end+0xff80caa8>
  80cb5c:	017fff04 	movi	r5,-4
  80cb60:	414a703a 	and	r5,r8,r5
  80cb64:	89800404 	addi	r6,r17,16
  80cb68:	8151883a 	add	r8,r16,r5
  80cb6c:	4180590e 	bge	r8,r6,80ccd4 <_realloc_r+0x390>
  80cb70:	1080004c 	andi	r2,r2,1
  80cb74:	103f9e1e 	bne	r2,zero,80c9f0 <__alt_data_end+0xff80c9f0>
  80cb78:	adbffe17 	ldw	r22,-8(r21)
  80cb7c:	00bfff04 	movi	r2,-4
  80cb80:	9dadc83a 	sub	r22,r19,r22
  80cb84:	b1800117 	ldw	r6,4(r22)
  80cb88:	3084703a 	and	r2,r6,r2
  80cb8c:	20002026 	beq	r4,zero,80cc10 <_realloc_r+0x2cc>
  80cb90:	80af883a 	add	r23,r16,r2
  80cb94:	b96f883a 	add	r23,r23,r5
  80cb98:	21c05f26 	beq	r4,r7,80cd18 <_realloc_r+0x3d4>
  80cb9c:	b8c01c16 	blt	r23,r3,80cc10 <_realloc_r+0x2cc>
  80cba0:	20800317 	ldw	r2,12(r4)
  80cba4:	20c00217 	ldw	r3,8(r4)
  80cba8:	81bfff04 	addi	r6,r16,-4
  80cbac:	01000904 	movi	r4,36
  80cbb0:	18800315 	stw	r2,12(r3)
  80cbb4:	10c00215 	stw	r3,8(r2)
  80cbb8:	b0c00217 	ldw	r3,8(r22)
  80cbbc:	b0800317 	ldw	r2,12(r22)
  80cbc0:	b4800204 	addi	r18,r22,8
  80cbc4:	18800315 	stw	r2,12(r3)
  80cbc8:	10c00215 	stw	r3,8(r2)
  80cbcc:	21801b36 	bltu	r4,r6,80cc3c <_realloc_r+0x2f8>
  80cbd0:	008004c4 	movi	r2,19
  80cbd4:	1180352e 	bgeu	r2,r6,80ccac <_realloc_r+0x368>
  80cbd8:	a8800017 	ldw	r2,0(r21)
  80cbdc:	b0800215 	stw	r2,8(r22)
  80cbe0:	a8800117 	ldw	r2,4(r21)
  80cbe4:	b0800315 	stw	r2,12(r22)
  80cbe8:	008006c4 	movi	r2,27
  80cbec:	11807f36 	bltu	r2,r6,80cdec <_realloc_r+0x4a8>
  80cbf0:	b0800404 	addi	r2,r22,16
  80cbf4:	ad400204 	addi	r21,r21,8
  80cbf8:	00002d06 	br	80ccb0 <_realloc_r+0x36c>
  80cbfc:	adbffe17 	ldw	r22,-8(r21)
  80cc00:	00bfff04 	movi	r2,-4
  80cc04:	9dadc83a 	sub	r22,r19,r22
  80cc08:	b1000117 	ldw	r4,4(r22)
  80cc0c:	2084703a 	and	r2,r4,r2
  80cc10:	b03f7726 	beq	r22,zero,80c9f0 <__alt_data_end+0xff80c9f0>
  80cc14:	80af883a 	add	r23,r16,r2
  80cc18:	b8ff7516 	blt	r23,r3,80c9f0 <__alt_data_end+0xff80c9f0>
  80cc1c:	b0800317 	ldw	r2,12(r22)
  80cc20:	b0c00217 	ldw	r3,8(r22)
  80cc24:	81bfff04 	addi	r6,r16,-4
  80cc28:	01000904 	movi	r4,36
  80cc2c:	18800315 	stw	r2,12(r3)
  80cc30:	10c00215 	stw	r3,8(r2)
  80cc34:	b4800204 	addi	r18,r22,8
  80cc38:	21bfe52e 	bgeu	r4,r6,80cbd0 <__alt_data_end+0xff80cbd0>
  80cc3c:	a80b883a 	mov	r5,r21
  80cc40:	9009883a 	mov	r4,r18
  80cc44:	080b6c40 	call	80b6c4 <memmove>
  80cc48:	b821883a 	mov	r16,r23
  80cc4c:	b027883a 	mov	r19,r22
  80cc50:	003f8a06 	br	80ca7c <__alt_data_end+0xff80ca7c>
  80cc54:	300b883a 	mov	r5,r6
  80cc58:	dfc00917 	ldw	ra,36(sp)
  80cc5c:	df000817 	ldw	fp,32(sp)
  80cc60:	ddc00717 	ldw	r23,28(sp)
  80cc64:	dd800617 	ldw	r22,24(sp)
  80cc68:	dd400517 	ldw	r21,20(sp)
  80cc6c:	dd000417 	ldw	r20,16(sp)
  80cc70:	dcc00317 	ldw	r19,12(sp)
  80cc74:	dc800217 	ldw	r18,8(sp)
  80cc78:	dc400117 	ldw	r17,4(sp)
  80cc7c:	dc000017 	ldw	r16,0(sp)
  80cc80:	dec00a04 	addi	sp,sp,40
  80cc84:	080ac8c1 	jmpi	80ac8c <_malloc_r>
  80cc88:	a8c00017 	ldw	r3,0(r21)
  80cc8c:	90c00015 	stw	r3,0(r18)
  80cc90:	a8c00117 	ldw	r3,4(r21)
  80cc94:	90c00115 	stw	r3,4(r18)
  80cc98:	00c006c4 	movi	r3,27
  80cc9c:	19804536 	bltu	r3,r6,80cdb4 <_realloc_r+0x470>
  80cca0:	90800204 	addi	r2,r18,8
  80cca4:	a8c00204 	addi	r3,r21,8
  80cca8:	003f6306 	br	80ca38 <__alt_data_end+0xff80ca38>
  80ccac:	9005883a 	mov	r2,r18
  80ccb0:	a8c00017 	ldw	r3,0(r21)
  80ccb4:	b821883a 	mov	r16,r23
  80ccb8:	b027883a 	mov	r19,r22
  80ccbc:	10c00015 	stw	r3,0(r2)
  80ccc0:	a8c00117 	ldw	r3,4(r21)
  80ccc4:	10c00115 	stw	r3,4(r2)
  80ccc8:	a8c00217 	ldw	r3,8(r21)
  80cccc:	10c00215 	stw	r3,8(r2)
  80ccd0:	003f6a06 	br	80ca7c <__alt_data_end+0xff80ca7c>
  80ccd4:	9c67883a 	add	r19,r19,r17
  80ccd8:	4445c83a 	sub	r2,r8,r17
  80ccdc:	e4c00215 	stw	r19,8(fp)
  80cce0:	10800054 	ori	r2,r2,1
  80cce4:	98800115 	stw	r2,4(r19)
  80cce8:	a8bfff17 	ldw	r2,-4(r21)
  80ccec:	a009883a 	mov	r4,r20
  80ccf0:	1080004c 	andi	r2,r2,1
  80ccf4:	1462b03a 	or	r17,r2,r17
  80ccf8:	ac7fff15 	stw	r17,-4(r21)
  80ccfc:	08102f00 	call	8102f0 <__malloc_unlock>
  80cd00:	a805883a 	mov	r2,r21
  80cd04:	003f6b06 	br	80cab4 <__alt_data_end+0xff80cab4>
  80cd08:	a80b883a 	mov	r5,r21
  80cd0c:	9009883a 	mov	r4,r18
  80cd10:	080b6c40 	call	80b6c4 <memmove>
  80cd14:	003f4e06 	br	80ca50 <__alt_data_end+0xff80ca50>
  80cd18:	89000404 	addi	r4,r17,16
  80cd1c:	b93fbc16 	blt	r23,r4,80cc10 <__alt_data_end+0xff80cc10>
  80cd20:	b0800317 	ldw	r2,12(r22)
  80cd24:	b0c00217 	ldw	r3,8(r22)
  80cd28:	81bfff04 	addi	r6,r16,-4
  80cd2c:	01000904 	movi	r4,36
  80cd30:	18800315 	stw	r2,12(r3)
  80cd34:	10c00215 	stw	r3,8(r2)
  80cd38:	b4800204 	addi	r18,r22,8
  80cd3c:	21804336 	bltu	r4,r6,80ce4c <_realloc_r+0x508>
  80cd40:	008004c4 	movi	r2,19
  80cd44:	11803f2e 	bgeu	r2,r6,80ce44 <_realloc_r+0x500>
  80cd48:	a8800017 	ldw	r2,0(r21)
  80cd4c:	b0800215 	stw	r2,8(r22)
  80cd50:	a8800117 	ldw	r2,4(r21)
  80cd54:	b0800315 	stw	r2,12(r22)
  80cd58:	008006c4 	movi	r2,27
  80cd5c:	11803f36 	bltu	r2,r6,80ce5c <_realloc_r+0x518>
  80cd60:	b0800404 	addi	r2,r22,16
  80cd64:	ad400204 	addi	r21,r21,8
  80cd68:	a8c00017 	ldw	r3,0(r21)
  80cd6c:	10c00015 	stw	r3,0(r2)
  80cd70:	a8c00117 	ldw	r3,4(r21)
  80cd74:	10c00115 	stw	r3,4(r2)
  80cd78:	a8c00217 	ldw	r3,8(r21)
  80cd7c:	10c00215 	stw	r3,8(r2)
  80cd80:	b447883a 	add	r3,r22,r17
  80cd84:	bc45c83a 	sub	r2,r23,r17
  80cd88:	e0c00215 	stw	r3,8(fp)
  80cd8c:	10800054 	ori	r2,r2,1
  80cd90:	18800115 	stw	r2,4(r3)
  80cd94:	b0800117 	ldw	r2,4(r22)
  80cd98:	a009883a 	mov	r4,r20
  80cd9c:	1080004c 	andi	r2,r2,1
  80cda0:	1462b03a 	or	r17,r2,r17
  80cda4:	b4400115 	stw	r17,4(r22)
  80cda8:	08102f00 	call	8102f0 <__malloc_unlock>
  80cdac:	9005883a 	mov	r2,r18
  80cdb0:	003f4006 	br	80cab4 <__alt_data_end+0xff80cab4>
  80cdb4:	a8c00217 	ldw	r3,8(r21)
  80cdb8:	90c00215 	stw	r3,8(r18)
  80cdbc:	a8c00317 	ldw	r3,12(r21)
  80cdc0:	90c00315 	stw	r3,12(r18)
  80cdc4:	30801126 	beq	r6,r2,80ce0c <_realloc_r+0x4c8>
  80cdc8:	90800404 	addi	r2,r18,16
  80cdcc:	a8c00404 	addi	r3,r21,16
  80cdd0:	003f1906 	br	80ca38 <__alt_data_end+0xff80ca38>
  80cdd4:	90ffff17 	ldw	r3,-4(r18)
  80cdd8:	00bfff04 	movi	r2,-4
  80cddc:	a825883a 	mov	r18,r21
  80cde0:	1884703a 	and	r2,r3,r2
  80cde4:	80a1883a 	add	r16,r16,r2
  80cde8:	003f2406 	br	80ca7c <__alt_data_end+0xff80ca7c>
  80cdec:	a8800217 	ldw	r2,8(r21)
  80cdf0:	b0800415 	stw	r2,16(r22)
  80cdf4:	a8800317 	ldw	r2,12(r21)
  80cdf8:	b0800515 	stw	r2,20(r22)
  80cdfc:	31000a26 	beq	r6,r4,80ce28 <_realloc_r+0x4e4>
  80ce00:	b0800604 	addi	r2,r22,24
  80ce04:	ad400404 	addi	r21,r21,16
  80ce08:	003fa906 	br	80ccb0 <__alt_data_end+0xff80ccb0>
  80ce0c:	a9000417 	ldw	r4,16(r21)
  80ce10:	90800604 	addi	r2,r18,24
  80ce14:	a8c00604 	addi	r3,r21,24
  80ce18:	91000415 	stw	r4,16(r18)
  80ce1c:	a9000517 	ldw	r4,20(r21)
  80ce20:	91000515 	stw	r4,20(r18)
  80ce24:	003f0406 	br	80ca38 <__alt_data_end+0xff80ca38>
  80ce28:	a8c00417 	ldw	r3,16(r21)
  80ce2c:	ad400604 	addi	r21,r21,24
  80ce30:	b0800804 	addi	r2,r22,32
  80ce34:	b0c00615 	stw	r3,24(r22)
  80ce38:	a8ffff17 	ldw	r3,-4(r21)
  80ce3c:	b0c00715 	stw	r3,28(r22)
  80ce40:	003f9b06 	br	80ccb0 <__alt_data_end+0xff80ccb0>
  80ce44:	9005883a 	mov	r2,r18
  80ce48:	003fc706 	br	80cd68 <__alt_data_end+0xff80cd68>
  80ce4c:	a80b883a 	mov	r5,r21
  80ce50:	9009883a 	mov	r4,r18
  80ce54:	080b6c40 	call	80b6c4 <memmove>
  80ce58:	003fc906 	br	80cd80 <__alt_data_end+0xff80cd80>
  80ce5c:	a8800217 	ldw	r2,8(r21)
  80ce60:	b0800415 	stw	r2,16(r22)
  80ce64:	a8800317 	ldw	r2,12(r21)
  80ce68:	b0800515 	stw	r2,20(r22)
  80ce6c:	31000726 	beq	r6,r4,80ce8c <_realloc_r+0x548>
  80ce70:	b0800604 	addi	r2,r22,24
  80ce74:	ad400404 	addi	r21,r21,16
  80ce78:	003fbb06 	br	80cd68 <__alt_data_end+0xff80cd68>
  80ce7c:	a009883a 	mov	r4,r20
  80ce80:	08102f00 	call	8102f0 <__malloc_unlock>
  80ce84:	0005883a 	mov	r2,zero
  80ce88:	003f0a06 	br	80cab4 <__alt_data_end+0xff80cab4>
  80ce8c:	a8c00417 	ldw	r3,16(r21)
  80ce90:	ad400604 	addi	r21,r21,24
  80ce94:	b0800804 	addi	r2,r22,32
  80ce98:	b0c00615 	stw	r3,24(r22)
  80ce9c:	a8ffff17 	ldw	r3,-4(r21)
  80cea0:	b0c00715 	stw	r3,28(r22)
  80cea4:	003fb006 	br	80cd68 <__alt_data_end+0xff80cd68>

0080cea8 <__fpclassifyd>:
  80cea8:	00a00034 	movhi	r2,32768
  80ceac:	10bfffc4 	addi	r2,r2,-1
  80ceb0:	2884703a 	and	r2,r5,r2
  80ceb4:	10000726 	beq	r2,zero,80ced4 <__fpclassifyd+0x2c>
  80ceb8:	00fffc34 	movhi	r3,65520
  80cebc:	019ff834 	movhi	r6,32736
  80cec0:	28c7883a 	add	r3,r5,r3
  80cec4:	31bfffc4 	addi	r6,r6,-1
  80cec8:	30c00536 	bltu	r6,r3,80cee0 <__fpclassifyd+0x38>
  80cecc:	00800104 	movi	r2,4
  80ced0:	f800283a 	ret
  80ced4:	2000021e 	bne	r4,zero,80cee0 <__fpclassifyd+0x38>
  80ced8:	00800084 	movi	r2,2
  80cedc:	f800283a 	ret
  80cee0:	00dffc34 	movhi	r3,32752
  80cee4:	019ff834 	movhi	r6,32736
  80cee8:	28cb883a 	add	r5,r5,r3
  80ceec:	31bfffc4 	addi	r6,r6,-1
  80cef0:	317ff62e 	bgeu	r6,r5,80cecc <__alt_data_end+0xff80cecc>
  80cef4:	01400434 	movhi	r5,16
  80cef8:	297fffc4 	addi	r5,r5,-1
  80cefc:	28800236 	bltu	r5,r2,80cf08 <__fpclassifyd+0x60>
  80cf00:	008000c4 	movi	r2,3
  80cf04:	f800283a 	ret
  80cf08:	10c00226 	beq	r2,r3,80cf14 <__fpclassifyd+0x6c>
  80cf0c:	0005883a 	mov	r2,zero
  80cf10:	f800283a 	ret
  80cf14:	2005003a 	cmpeq	r2,r4,zero
  80cf18:	f800283a 	ret

0080cf1c <_sbrk_r>:
  80cf1c:	defffd04 	addi	sp,sp,-12
  80cf20:	dc000015 	stw	r16,0(sp)
  80cf24:	04002074 	movhi	r16,129
  80cf28:	dc400115 	stw	r17,4(sp)
  80cf2c:	84182904 	addi	r16,r16,24740
  80cf30:	2023883a 	mov	r17,r4
  80cf34:	2809883a 	mov	r4,r5
  80cf38:	dfc00215 	stw	ra,8(sp)
  80cf3c:	80000015 	stw	zero,0(r16)
  80cf40:	08104b00 	call	8104b0 <sbrk>
  80cf44:	00ffffc4 	movi	r3,-1
  80cf48:	10c00526 	beq	r2,r3,80cf60 <_sbrk_r+0x44>
  80cf4c:	dfc00217 	ldw	ra,8(sp)
  80cf50:	dc400117 	ldw	r17,4(sp)
  80cf54:	dc000017 	ldw	r16,0(sp)
  80cf58:	dec00304 	addi	sp,sp,12
  80cf5c:	f800283a 	ret
  80cf60:	80c00017 	ldw	r3,0(r16)
  80cf64:	183ff926 	beq	r3,zero,80cf4c <__alt_data_end+0xff80cf4c>
  80cf68:	88c00015 	stw	r3,0(r17)
  80cf6c:	003ff706 	br	80cf4c <__alt_data_end+0xff80cf4c>

0080cf70 <__sread>:
  80cf70:	defffe04 	addi	sp,sp,-8
  80cf74:	dc000015 	stw	r16,0(sp)
  80cf78:	2821883a 	mov	r16,r5
  80cf7c:	2940038f 	ldh	r5,14(r5)
  80cf80:	dfc00115 	stw	ra,4(sp)
  80cf84:	080ed640 	call	80ed64 <_read_r>
  80cf88:	10000716 	blt	r2,zero,80cfa8 <__sread+0x38>
  80cf8c:	80c01417 	ldw	r3,80(r16)
  80cf90:	1887883a 	add	r3,r3,r2
  80cf94:	80c01415 	stw	r3,80(r16)
  80cf98:	dfc00117 	ldw	ra,4(sp)
  80cf9c:	dc000017 	ldw	r16,0(sp)
  80cfa0:	dec00204 	addi	sp,sp,8
  80cfa4:	f800283a 	ret
  80cfa8:	80c0030b 	ldhu	r3,12(r16)
  80cfac:	18fbffcc 	andi	r3,r3,61439
  80cfb0:	80c0030d 	sth	r3,12(r16)
  80cfb4:	dfc00117 	ldw	ra,4(sp)
  80cfb8:	dc000017 	ldw	r16,0(sp)
  80cfbc:	dec00204 	addi	sp,sp,8
  80cfc0:	f800283a 	ret

0080cfc4 <__seofread>:
  80cfc4:	0005883a 	mov	r2,zero
  80cfc8:	f800283a 	ret

0080cfcc <__swrite>:
  80cfcc:	2880030b 	ldhu	r2,12(r5)
  80cfd0:	defffb04 	addi	sp,sp,-20
  80cfd4:	dcc00315 	stw	r19,12(sp)
  80cfd8:	dc800215 	stw	r18,8(sp)
  80cfdc:	dc400115 	stw	r17,4(sp)
  80cfe0:	dc000015 	stw	r16,0(sp)
  80cfe4:	dfc00415 	stw	ra,16(sp)
  80cfe8:	10c0400c 	andi	r3,r2,256
  80cfec:	2821883a 	mov	r16,r5
  80cff0:	2023883a 	mov	r17,r4
  80cff4:	3025883a 	mov	r18,r6
  80cff8:	3827883a 	mov	r19,r7
  80cffc:	18000526 	beq	r3,zero,80d014 <__swrite+0x48>
  80d000:	2940038f 	ldh	r5,14(r5)
  80d004:	01c00084 	movi	r7,2
  80d008:	000d883a 	mov	r6,zero
  80d00c:	080ed040 	call	80ed04 <_lseek_r>
  80d010:	8080030b 	ldhu	r2,12(r16)
  80d014:	8140038f 	ldh	r5,14(r16)
  80d018:	10bbffcc 	andi	r2,r2,61439
  80d01c:	980f883a 	mov	r7,r19
  80d020:	900d883a 	mov	r6,r18
  80d024:	8809883a 	mov	r4,r17
  80d028:	8080030d 	sth	r2,12(r16)
  80d02c:	dfc00417 	ldw	ra,16(sp)
  80d030:	dcc00317 	ldw	r19,12(sp)
  80d034:	dc800217 	ldw	r18,8(sp)
  80d038:	dc400117 	ldw	r17,4(sp)
  80d03c:	dc000017 	ldw	r16,0(sp)
  80d040:	dec00504 	addi	sp,sp,20
  80d044:	080e7d01 	jmpi	80e7d0 <_write_r>

0080d048 <__sseek>:
  80d048:	defffe04 	addi	sp,sp,-8
  80d04c:	dc000015 	stw	r16,0(sp)
  80d050:	2821883a 	mov	r16,r5
  80d054:	2940038f 	ldh	r5,14(r5)
  80d058:	dfc00115 	stw	ra,4(sp)
  80d05c:	080ed040 	call	80ed04 <_lseek_r>
  80d060:	00ffffc4 	movi	r3,-1
  80d064:	10c00826 	beq	r2,r3,80d088 <__sseek+0x40>
  80d068:	80c0030b 	ldhu	r3,12(r16)
  80d06c:	80801415 	stw	r2,80(r16)
  80d070:	18c40014 	ori	r3,r3,4096
  80d074:	80c0030d 	sth	r3,12(r16)
  80d078:	dfc00117 	ldw	ra,4(sp)
  80d07c:	dc000017 	ldw	r16,0(sp)
  80d080:	dec00204 	addi	sp,sp,8
  80d084:	f800283a 	ret
  80d088:	80c0030b 	ldhu	r3,12(r16)
  80d08c:	18fbffcc 	andi	r3,r3,61439
  80d090:	80c0030d 	sth	r3,12(r16)
  80d094:	dfc00117 	ldw	ra,4(sp)
  80d098:	dc000017 	ldw	r16,0(sp)
  80d09c:	dec00204 	addi	sp,sp,8
  80d0a0:	f800283a 	ret

0080d0a4 <__sclose>:
  80d0a4:	2940038f 	ldh	r5,14(r5)
  80d0a8:	080e8301 	jmpi	80e830 <_close_r>

0080d0ac <strcmp>:
  80d0ac:	2144b03a 	or	r2,r4,r5
  80d0b0:	108000cc 	andi	r2,r2,3
  80d0b4:	1000171e 	bne	r2,zero,80d114 <strcmp+0x68>
  80d0b8:	20800017 	ldw	r2,0(r4)
  80d0bc:	28c00017 	ldw	r3,0(r5)
  80d0c0:	10c0141e 	bne	r2,r3,80d114 <strcmp+0x68>
  80d0c4:	027fbff4 	movhi	r9,65279
  80d0c8:	4a7fbfc4 	addi	r9,r9,-257
  80d0cc:	0086303a 	nor	r3,zero,r2
  80d0d0:	02202074 	movhi	r8,32897
  80d0d4:	1245883a 	add	r2,r2,r9
  80d0d8:	42202004 	addi	r8,r8,-32640
  80d0dc:	10c4703a 	and	r2,r2,r3
  80d0e0:	1204703a 	and	r2,r2,r8
  80d0e4:	10000226 	beq	r2,zero,80d0f0 <strcmp+0x44>
  80d0e8:	00002306 	br	80d178 <strcmp+0xcc>
  80d0ec:	1000221e 	bne	r2,zero,80d178 <strcmp+0xcc>
  80d0f0:	21000104 	addi	r4,r4,4
  80d0f4:	20c00017 	ldw	r3,0(r4)
  80d0f8:	29400104 	addi	r5,r5,4
  80d0fc:	29800017 	ldw	r6,0(r5)
  80d100:	1a4f883a 	add	r7,r3,r9
  80d104:	00c4303a 	nor	r2,zero,r3
  80d108:	3884703a 	and	r2,r7,r2
  80d10c:	1204703a 	and	r2,r2,r8
  80d110:	19bff626 	beq	r3,r6,80d0ec <__alt_data_end+0xff80d0ec>
  80d114:	20800003 	ldbu	r2,0(r4)
  80d118:	10c03fcc 	andi	r3,r2,255
  80d11c:	18c0201c 	xori	r3,r3,128
  80d120:	18ffe004 	addi	r3,r3,-128
  80d124:	18000c26 	beq	r3,zero,80d158 <strcmp+0xac>
  80d128:	29800007 	ldb	r6,0(r5)
  80d12c:	19800326 	beq	r3,r6,80d13c <strcmp+0x90>
  80d130:	00001306 	br	80d180 <strcmp+0xd4>
  80d134:	29800007 	ldb	r6,0(r5)
  80d138:	11800b1e 	bne	r2,r6,80d168 <strcmp+0xbc>
  80d13c:	21000044 	addi	r4,r4,1
  80d140:	20c00003 	ldbu	r3,0(r4)
  80d144:	29400044 	addi	r5,r5,1
  80d148:	18803fcc 	andi	r2,r3,255
  80d14c:	1080201c 	xori	r2,r2,128
  80d150:	10bfe004 	addi	r2,r2,-128
  80d154:	103ff71e 	bne	r2,zero,80d134 <__alt_data_end+0xff80d134>
  80d158:	0007883a 	mov	r3,zero
  80d15c:	28800003 	ldbu	r2,0(r5)
  80d160:	1885c83a 	sub	r2,r3,r2
  80d164:	f800283a 	ret
  80d168:	28800003 	ldbu	r2,0(r5)
  80d16c:	18c03fcc 	andi	r3,r3,255
  80d170:	1885c83a 	sub	r2,r3,r2
  80d174:	f800283a 	ret
  80d178:	0005883a 	mov	r2,zero
  80d17c:	f800283a 	ret
  80d180:	10c03fcc 	andi	r3,r2,255
  80d184:	003ff506 	br	80d15c <__alt_data_end+0xff80d15c>

0080d188 <__sprint_r.part.0>:
  80d188:	28801917 	ldw	r2,100(r5)
  80d18c:	defff604 	addi	sp,sp,-40
  80d190:	dd400515 	stw	r21,20(sp)
  80d194:	dfc00915 	stw	ra,36(sp)
  80d198:	df000815 	stw	fp,32(sp)
  80d19c:	ddc00715 	stw	r23,28(sp)
  80d1a0:	dd800615 	stw	r22,24(sp)
  80d1a4:	dd000415 	stw	r20,16(sp)
  80d1a8:	dcc00315 	stw	r19,12(sp)
  80d1ac:	dc800215 	stw	r18,8(sp)
  80d1b0:	dc400115 	stw	r17,4(sp)
  80d1b4:	dc000015 	stw	r16,0(sp)
  80d1b8:	1088000c 	andi	r2,r2,8192
  80d1bc:	302b883a 	mov	r21,r6
  80d1c0:	10002e26 	beq	r2,zero,80d27c <__sprint_r.part.0+0xf4>
  80d1c4:	30800217 	ldw	r2,8(r6)
  80d1c8:	35800017 	ldw	r22,0(r6)
  80d1cc:	10002926 	beq	r2,zero,80d274 <__sprint_r.part.0+0xec>
  80d1d0:	2827883a 	mov	r19,r5
  80d1d4:	2029883a 	mov	r20,r4
  80d1d8:	b5c00104 	addi	r23,r22,4
  80d1dc:	04bfffc4 	movi	r18,-1
  80d1e0:	bc400017 	ldw	r17,0(r23)
  80d1e4:	b4000017 	ldw	r16,0(r22)
  80d1e8:	0039883a 	mov	fp,zero
  80d1ec:	8822d0ba 	srli	r17,r17,2
  80d1f0:	8800031e 	bne	r17,zero,80d200 <__sprint_r.part.0+0x78>
  80d1f4:	00001806 	br	80d258 <__sprint_r.part.0+0xd0>
  80d1f8:	84000104 	addi	r16,r16,4
  80d1fc:	8f001526 	beq	r17,fp,80d254 <__sprint_r.part.0+0xcc>
  80d200:	81400017 	ldw	r5,0(r16)
  80d204:	980d883a 	mov	r6,r19
  80d208:	a009883a 	mov	r4,r20
  80d20c:	080ebb00 	call	80ebb0 <_fputwc_r>
  80d210:	e7000044 	addi	fp,fp,1
  80d214:	14bff81e 	bne	r2,r18,80d1f8 <__alt_data_end+0xff80d1f8>
  80d218:	9005883a 	mov	r2,r18
  80d21c:	a8000215 	stw	zero,8(r21)
  80d220:	a8000115 	stw	zero,4(r21)
  80d224:	dfc00917 	ldw	ra,36(sp)
  80d228:	df000817 	ldw	fp,32(sp)
  80d22c:	ddc00717 	ldw	r23,28(sp)
  80d230:	dd800617 	ldw	r22,24(sp)
  80d234:	dd400517 	ldw	r21,20(sp)
  80d238:	dd000417 	ldw	r20,16(sp)
  80d23c:	dcc00317 	ldw	r19,12(sp)
  80d240:	dc800217 	ldw	r18,8(sp)
  80d244:	dc400117 	ldw	r17,4(sp)
  80d248:	dc000017 	ldw	r16,0(sp)
  80d24c:	dec00a04 	addi	sp,sp,40
  80d250:	f800283a 	ret
  80d254:	a8800217 	ldw	r2,8(r21)
  80d258:	8c63883a 	add	r17,r17,r17
  80d25c:	8c63883a 	add	r17,r17,r17
  80d260:	1445c83a 	sub	r2,r2,r17
  80d264:	a8800215 	stw	r2,8(r21)
  80d268:	b5800204 	addi	r22,r22,8
  80d26c:	bdc00204 	addi	r23,r23,8
  80d270:	103fdb1e 	bne	r2,zero,80d1e0 <__alt_data_end+0xff80d1e0>
  80d274:	0005883a 	mov	r2,zero
  80d278:	003fe806 	br	80d21c <__alt_data_end+0xff80d21c>
  80d27c:	080a3b00 	call	80a3b0 <__sfvwrite_r>
  80d280:	003fe606 	br	80d21c <__alt_data_end+0xff80d21c>

0080d284 <__sprint_r>:
  80d284:	30c00217 	ldw	r3,8(r6)
  80d288:	18000126 	beq	r3,zero,80d290 <__sprint_r+0xc>
  80d28c:	080d1881 	jmpi	80d188 <__sprint_r.part.0>
  80d290:	30000115 	stw	zero,4(r6)
  80d294:	0005883a 	mov	r2,zero
  80d298:	f800283a 	ret

0080d29c <___vfiprintf_internal_r>:
  80d29c:	deffc904 	addi	sp,sp,-220
  80d2a0:	df003515 	stw	fp,212(sp)
  80d2a4:	dd003115 	stw	r20,196(sp)
  80d2a8:	dfc03615 	stw	ra,216(sp)
  80d2ac:	ddc03415 	stw	r23,208(sp)
  80d2b0:	dd803315 	stw	r22,204(sp)
  80d2b4:	dd403215 	stw	r21,200(sp)
  80d2b8:	dcc03015 	stw	r19,192(sp)
  80d2bc:	dc802f15 	stw	r18,188(sp)
  80d2c0:	dc402e15 	stw	r17,184(sp)
  80d2c4:	dc002d15 	stw	r16,180(sp)
  80d2c8:	d9002015 	stw	r4,128(sp)
  80d2cc:	d9c02215 	stw	r7,136(sp)
  80d2d0:	2829883a 	mov	r20,r5
  80d2d4:	3039883a 	mov	fp,r6
  80d2d8:	20000226 	beq	r4,zero,80d2e4 <___vfiprintf_internal_r+0x48>
  80d2dc:	20800e17 	ldw	r2,56(r4)
  80d2e0:	1000cf26 	beq	r2,zero,80d620 <___vfiprintf_internal_r+0x384>
  80d2e4:	a080030b 	ldhu	r2,12(r20)
  80d2e8:	10c8000c 	andi	r3,r2,8192
  80d2ec:	1800061e 	bne	r3,zero,80d308 <___vfiprintf_internal_r+0x6c>
  80d2f0:	a1001917 	ldw	r4,100(r20)
  80d2f4:	00f7ffc4 	movi	r3,-8193
  80d2f8:	10880014 	ori	r2,r2,8192
  80d2fc:	20c6703a 	and	r3,r4,r3
  80d300:	a080030d 	sth	r2,12(r20)
  80d304:	a0c01915 	stw	r3,100(r20)
  80d308:	10c0020c 	andi	r3,r2,8
  80d30c:	1800a926 	beq	r3,zero,80d5b4 <___vfiprintf_internal_r+0x318>
  80d310:	a0c00417 	ldw	r3,16(r20)
  80d314:	1800a726 	beq	r3,zero,80d5b4 <___vfiprintf_internal_r+0x318>
  80d318:	1080068c 	andi	r2,r2,26
  80d31c:	00c00284 	movi	r3,10
  80d320:	10c0ac26 	beq	r2,r3,80d5d4 <___vfiprintf_internal_r+0x338>
  80d324:	da801a04 	addi	r10,sp,104
  80d328:	da801e15 	stw	r10,120(sp)
  80d32c:	d8801e17 	ldw	r2,120(sp)
  80d330:	da8019c4 	addi	r10,sp,103
  80d334:	05802074 	movhi	r22,129
  80d338:	05c02074 	movhi	r23,129
  80d33c:	da801f15 	stw	r10,124(sp)
  80d340:	1295c83a 	sub	r10,r2,r10
  80d344:	b58a9e04 	addi	r22,r22,10872
  80d348:	bdca9a04 	addi	r23,r23,10856
  80d34c:	dec01a15 	stw	sp,104(sp)
  80d350:	d8001c15 	stw	zero,112(sp)
  80d354:	d8001b15 	stw	zero,108(sp)
  80d358:	d8002615 	stw	zero,152(sp)
  80d35c:	d8002315 	stw	zero,140(sp)
  80d360:	da802715 	stw	r10,156(sp)
  80d364:	d811883a 	mov	r8,sp
  80d368:	dd002115 	stw	r20,132(sp)
  80d36c:	e021883a 	mov	r16,fp
  80d370:	80800007 	ldb	r2,0(r16)
  80d374:	1003ea26 	beq	r2,zero,80e320 <___vfiprintf_internal_r+0x1084>
  80d378:	00c00944 	movi	r3,37
  80d37c:	8025883a 	mov	r18,r16
  80d380:	10c0021e 	bne	r2,r3,80d38c <___vfiprintf_internal_r+0xf0>
  80d384:	00001606 	br	80d3e0 <___vfiprintf_internal_r+0x144>
  80d388:	10c00326 	beq	r2,r3,80d398 <___vfiprintf_internal_r+0xfc>
  80d38c:	94800044 	addi	r18,r18,1
  80d390:	90800007 	ldb	r2,0(r18)
  80d394:	103ffc1e 	bne	r2,zero,80d388 <__alt_data_end+0xff80d388>
  80d398:	9423c83a 	sub	r17,r18,r16
  80d39c:	88001026 	beq	r17,zero,80d3e0 <___vfiprintf_internal_r+0x144>
  80d3a0:	d8c01c17 	ldw	r3,112(sp)
  80d3a4:	d8801b17 	ldw	r2,108(sp)
  80d3a8:	44000015 	stw	r16,0(r8)
  80d3ac:	88c7883a 	add	r3,r17,r3
  80d3b0:	10800044 	addi	r2,r2,1
  80d3b4:	44400115 	stw	r17,4(r8)
  80d3b8:	d8c01c15 	stw	r3,112(sp)
  80d3bc:	d8801b15 	stw	r2,108(sp)
  80d3c0:	010001c4 	movi	r4,7
  80d3c4:	2080760e 	bge	r4,r2,80d5a0 <___vfiprintf_internal_r+0x304>
  80d3c8:	1803821e 	bne	r3,zero,80e1d4 <___vfiprintf_internal_r+0xf38>
  80d3cc:	da802317 	ldw	r10,140(sp)
  80d3d0:	d8001b15 	stw	zero,108(sp)
  80d3d4:	d811883a 	mov	r8,sp
  80d3d8:	5455883a 	add	r10,r10,r17
  80d3dc:	da802315 	stw	r10,140(sp)
  80d3e0:	90800007 	ldb	r2,0(r18)
  80d3e4:	10044626 	beq	r2,zero,80e500 <___vfiprintf_internal_r+0x1264>
  80d3e8:	90c00047 	ldb	r3,1(r18)
  80d3ec:	94000044 	addi	r16,r18,1
  80d3f0:	d8001d85 	stb	zero,118(sp)
  80d3f4:	0009883a 	mov	r4,zero
  80d3f8:	000f883a 	mov	r7,zero
  80d3fc:	027fffc4 	movi	r9,-1
  80d400:	0023883a 	mov	r17,zero
  80d404:	0029883a 	mov	r20,zero
  80d408:	01401604 	movi	r5,88
  80d40c:	01800244 	movi	r6,9
  80d410:	03400a84 	movi	r13,42
  80d414:	03001b04 	movi	r12,108
  80d418:	84000044 	addi	r16,r16,1
  80d41c:	18bff804 	addi	r2,r3,-32
  80d420:	28827336 	bltu	r5,r2,80ddf0 <___vfiprintf_internal_r+0xb54>
  80d424:	100490ba 	slli	r2,r2,2
  80d428:	02802074 	movhi	r10,129
  80d42c:	52b50f04 	addi	r10,r10,-11204
  80d430:	1285883a 	add	r2,r2,r10
  80d434:	10800017 	ldw	r2,0(r2)
  80d438:	1000683a 	jmp	r2
  80d43c:	0080db24 	muli	r2,zero,876
  80d440:	0080ddf0 	cmpltui	r2,zero,887
  80d444:	0080ddf0 	cmpltui	r2,zero,887
  80d448:	0080db44 	movi	r2,877
  80d44c:	0080ddf0 	cmpltui	r2,zero,887
  80d450:	0080ddf0 	cmpltui	r2,zero,887
  80d454:	0080ddf0 	cmpltui	r2,zero,887
  80d458:	0080ddf0 	cmpltui	r2,zero,887
  80d45c:	0080ddf0 	cmpltui	r2,zero,887
  80d460:	0080ddf0 	cmpltui	r2,zero,887
  80d464:	0080dd2c 	andhi	r2,zero,884
  80d468:	0080dd48 	cmpgei	r2,zero,885
  80d46c:	0080ddf0 	cmpltui	r2,zero,887
  80d470:	0080d630 	cmpltui	r2,zero,856
  80d474:	0080dd58 	cmpnei	r2,zero,885
  80d478:	0080ddf0 	cmpltui	r2,zero,887
  80d47c:	0080db50 	cmplti	r2,zero,877
  80d480:	0080db5c 	xori	r2,zero,877
  80d484:	0080db5c 	xori	r2,zero,877
  80d488:	0080db5c 	xori	r2,zero,877
  80d48c:	0080db5c 	xori	r2,zero,877
  80d490:	0080db5c 	xori	r2,zero,877
  80d494:	0080db5c 	xori	r2,zero,877
  80d498:	0080db5c 	xori	r2,zero,877
  80d49c:	0080db5c 	xori	r2,zero,877
  80d4a0:	0080db5c 	xori	r2,zero,877
  80d4a4:	0080ddf0 	cmpltui	r2,zero,887
  80d4a8:	0080ddf0 	cmpltui	r2,zero,887
  80d4ac:	0080ddf0 	cmpltui	r2,zero,887
  80d4b0:	0080ddf0 	cmpltui	r2,zero,887
  80d4b4:	0080ddf0 	cmpltui	r2,zero,887
  80d4b8:	0080ddf0 	cmpltui	r2,zero,887
  80d4bc:	0080ddf0 	cmpltui	r2,zero,887
  80d4c0:	0080ddf0 	cmpltui	r2,zero,887
  80d4c4:	0080ddf0 	cmpltui	r2,zero,887
  80d4c8:	0080ddf0 	cmpltui	r2,zero,887
  80d4cc:	0080db88 	cmpgei	r2,zero,878
  80d4d0:	0080ddf0 	cmpltui	r2,zero,887
  80d4d4:	0080ddf0 	cmpltui	r2,zero,887
  80d4d8:	0080ddf0 	cmpltui	r2,zero,887
  80d4dc:	0080ddf0 	cmpltui	r2,zero,887
  80d4e0:	0080ddf0 	cmpltui	r2,zero,887
  80d4e4:	0080ddf0 	cmpltui	r2,zero,887
  80d4e8:	0080ddf0 	cmpltui	r2,zero,887
  80d4ec:	0080ddf0 	cmpltui	r2,zero,887
  80d4f0:	0080ddf0 	cmpltui	r2,zero,887
  80d4f4:	0080ddf0 	cmpltui	r2,zero,887
  80d4f8:	0080dbc0 	call	80dbc <__alt_mem_sdram-0x77f244>
  80d4fc:	0080ddf0 	cmpltui	r2,zero,887
  80d500:	0080ddf0 	cmpltui	r2,zero,887
  80d504:	0080ddf0 	cmpltui	r2,zero,887
  80d508:	0080ddf0 	cmpltui	r2,zero,887
  80d50c:	0080ddf0 	cmpltui	r2,zero,887
  80d510:	0080dc18 	cmpnei	r2,zero,880
  80d514:	0080ddf0 	cmpltui	r2,zero,887
  80d518:	0080ddf0 	cmpltui	r2,zero,887
  80d51c:	0080dc88 	cmpgei	r2,zero,882
  80d520:	0080ddf0 	cmpltui	r2,zero,887
  80d524:	0080ddf0 	cmpltui	r2,zero,887
  80d528:	0080ddf0 	cmpltui	r2,zero,887
  80d52c:	0080ddf0 	cmpltui	r2,zero,887
  80d530:	0080ddf0 	cmpltui	r2,zero,887
  80d534:	0080ddf0 	cmpltui	r2,zero,887
  80d538:	0080ddf0 	cmpltui	r2,zero,887
  80d53c:	0080ddf0 	cmpltui	r2,zero,887
  80d540:	0080ddf0 	cmpltui	r2,zero,887
  80d544:	0080ddf0 	cmpltui	r2,zero,887
  80d548:	0080da34 	movhi	r2,872
  80d54c:	0080da60 	cmpeqi	r2,zero,873
  80d550:	0080ddf0 	cmpltui	r2,zero,887
  80d554:	0080ddf0 	cmpltui	r2,zero,887
  80d558:	0080ddf0 	cmpltui	r2,zero,887
  80d55c:	0080dd98 	cmpnei	r2,zero,886
  80d560:	0080da60 	cmpeqi	r2,zero,873
  80d564:	0080ddf0 	cmpltui	r2,zero,887
  80d568:	0080ddf0 	cmpltui	r2,zero,887
  80d56c:	0080d8f4 	movhi	r2,867
  80d570:	0080ddf0 	cmpltui	r2,zero,887
  80d574:	0080d904 	movi	r2,868
  80d578:	0080d940 	call	80d94 <__alt_mem_sdram-0x77f26c>
  80d57c:	0080d63c 	xorhi	r2,zero,856
  80d580:	0080d8e8 	cmpgeui	r2,zero,867
  80d584:	0080ddf0 	cmpltui	r2,zero,887
  80d588:	0080dcc4 	movi	r2,883
  80d58c:	0080ddf0 	cmpltui	r2,zero,887
  80d590:	0080dd1c 	xori	r2,zero,884
  80d594:	0080ddf0 	cmpltui	r2,zero,887
  80d598:	0080ddf0 	cmpltui	r2,zero,887
  80d59c:	0080d9e0 	cmpeqi	r2,zero,871
  80d5a0:	42000204 	addi	r8,r8,8
  80d5a4:	da802317 	ldw	r10,140(sp)
  80d5a8:	5455883a 	add	r10,r10,r17
  80d5ac:	da802315 	stw	r10,140(sp)
  80d5b0:	003f8b06 	br	80d3e0 <__alt_data_end+0xff80d3e0>
  80d5b4:	d9002017 	ldw	r4,128(sp)
  80d5b8:	a00b883a 	mov	r5,r20
  80d5bc:	0807f580 	call	807f58 <__swsetup_r>
  80d5c0:	1003b11e 	bne	r2,zero,80e488 <___vfiprintf_internal_r+0x11ec>
  80d5c4:	a080030b 	ldhu	r2,12(r20)
  80d5c8:	00c00284 	movi	r3,10
  80d5cc:	1080068c 	andi	r2,r2,26
  80d5d0:	10ff541e 	bne	r2,r3,80d324 <__alt_data_end+0xff80d324>
  80d5d4:	a080038f 	ldh	r2,14(r20)
  80d5d8:	103f5216 	blt	r2,zero,80d324 <__alt_data_end+0xff80d324>
  80d5dc:	d9c02217 	ldw	r7,136(sp)
  80d5e0:	d9002017 	ldw	r4,128(sp)
  80d5e4:	e00d883a 	mov	r6,fp
  80d5e8:	a00b883a 	mov	r5,r20
  80d5ec:	080e7140 	call	80e714 <__sbprintf>
  80d5f0:	dfc03617 	ldw	ra,216(sp)
  80d5f4:	df003517 	ldw	fp,212(sp)
  80d5f8:	ddc03417 	ldw	r23,208(sp)
  80d5fc:	dd803317 	ldw	r22,204(sp)
  80d600:	dd403217 	ldw	r21,200(sp)
  80d604:	dd003117 	ldw	r20,196(sp)
  80d608:	dcc03017 	ldw	r19,192(sp)
  80d60c:	dc802f17 	ldw	r18,188(sp)
  80d610:	dc402e17 	ldw	r17,184(sp)
  80d614:	dc002d17 	ldw	r16,180(sp)
  80d618:	dec03704 	addi	sp,sp,220
  80d61c:	f800283a 	ret
  80d620:	0809f2c0 	call	809f2c <__sinit>
  80d624:	003f2f06 	br	80d2e4 <__alt_data_end+0xff80d2e4>
  80d628:	0463c83a 	sub	r17,zero,r17
  80d62c:	d8802215 	stw	r2,136(sp)
  80d630:	a5000114 	ori	r20,r20,4
  80d634:	80c00007 	ldb	r3,0(r16)
  80d638:	003f7706 	br	80d418 <__alt_data_end+0xff80d418>
  80d63c:	00800c04 	movi	r2,48
  80d640:	da802217 	ldw	r10,136(sp)
  80d644:	d8801d05 	stb	r2,116(sp)
  80d648:	00801e04 	movi	r2,120
  80d64c:	d8801d45 	stb	r2,117(sp)
  80d650:	d8001d85 	stb	zero,118(sp)
  80d654:	50c00104 	addi	r3,r10,4
  80d658:	54800017 	ldw	r18,0(r10)
  80d65c:	0027883a 	mov	r19,zero
  80d660:	a0800094 	ori	r2,r20,2
  80d664:	48030b16 	blt	r9,zero,80e294 <___vfiprintf_internal_r+0xff8>
  80d668:	00bfdfc4 	movi	r2,-129
  80d66c:	a096703a 	and	r11,r20,r2
  80d670:	d8c02215 	stw	r3,136(sp)
  80d674:	5d000094 	ori	r20,r11,2
  80d678:	90032b1e 	bne	r18,zero,80e328 <___vfiprintf_internal_r+0x108c>
  80d67c:	00802074 	movhi	r2,129
  80d680:	108a3904 	addi	r2,r2,10468
  80d684:	d8802615 	stw	r2,152(sp)
  80d688:	0039883a 	mov	fp,zero
  80d68c:	48017b1e 	bne	r9,zero,80dc7c <___vfiprintf_internal_r+0x9e0>
  80d690:	0013883a 	mov	r9,zero
  80d694:	0027883a 	mov	r19,zero
  80d698:	dd401a04 	addi	r21,sp,104
  80d69c:	4825883a 	mov	r18,r9
  80d6a0:	4cc0010e 	bge	r9,r19,80d6a8 <___vfiprintf_internal_r+0x40c>
  80d6a4:	9825883a 	mov	r18,r19
  80d6a8:	e7003fcc 	andi	fp,fp,255
  80d6ac:	e700201c 	xori	fp,fp,128
  80d6b0:	e73fe004 	addi	fp,fp,-128
  80d6b4:	e0000126 	beq	fp,zero,80d6bc <___vfiprintf_internal_r+0x420>
  80d6b8:	94800044 	addi	r18,r18,1
  80d6bc:	a380008c 	andi	r14,r20,2
  80d6c0:	70000126 	beq	r14,zero,80d6c8 <___vfiprintf_internal_r+0x42c>
  80d6c4:	94800084 	addi	r18,r18,2
  80d6c8:	a700210c 	andi	fp,r20,132
  80d6cc:	e001df1e 	bne	fp,zero,80de4c <___vfiprintf_internal_r+0xbb0>
  80d6d0:	8c87c83a 	sub	r3,r17,r18
  80d6d4:	00c1dd0e 	bge	zero,r3,80de4c <___vfiprintf_internal_r+0xbb0>
  80d6d8:	01c00404 	movi	r7,16
  80d6dc:	d8801c17 	ldw	r2,112(sp)
  80d6e0:	38c3ad0e 	bge	r7,r3,80e598 <___vfiprintf_internal_r+0x12fc>
  80d6e4:	02802074 	movhi	r10,129
  80d6e8:	528a9e04 	addi	r10,r10,10872
  80d6ec:	dc002915 	stw	r16,164(sp)
  80d6f0:	d9801b17 	ldw	r6,108(sp)
  80d6f4:	da802415 	stw	r10,144(sp)
  80d6f8:	03c001c4 	movi	r15,7
  80d6fc:	da402515 	stw	r9,148(sp)
  80d700:	db802815 	stw	r14,160(sp)
  80d704:	1821883a 	mov	r16,r3
  80d708:	00000506 	br	80d720 <___vfiprintf_internal_r+0x484>
  80d70c:	31400084 	addi	r5,r6,2
  80d710:	42000204 	addi	r8,r8,8
  80d714:	200d883a 	mov	r6,r4
  80d718:	843ffc04 	addi	r16,r16,-16
  80d71c:	3c000d0e 	bge	r7,r16,80d754 <___vfiprintf_internal_r+0x4b8>
  80d720:	10800404 	addi	r2,r2,16
  80d724:	31000044 	addi	r4,r6,1
  80d728:	45800015 	stw	r22,0(r8)
  80d72c:	41c00115 	stw	r7,4(r8)
  80d730:	d8801c15 	stw	r2,112(sp)
  80d734:	d9001b15 	stw	r4,108(sp)
  80d738:	793ff40e 	bge	r15,r4,80d70c <__alt_data_end+0xff80d70c>
  80d73c:	1001b51e 	bne	r2,zero,80de14 <___vfiprintf_internal_r+0xb78>
  80d740:	843ffc04 	addi	r16,r16,-16
  80d744:	000d883a 	mov	r6,zero
  80d748:	01400044 	movi	r5,1
  80d74c:	d811883a 	mov	r8,sp
  80d750:	3c3ff316 	blt	r7,r16,80d720 <__alt_data_end+0xff80d720>
  80d754:	8007883a 	mov	r3,r16
  80d758:	da402517 	ldw	r9,148(sp)
  80d75c:	db802817 	ldw	r14,160(sp)
  80d760:	dc002917 	ldw	r16,164(sp)
  80d764:	da802417 	ldw	r10,144(sp)
  80d768:	1885883a 	add	r2,r3,r2
  80d76c:	40c00115 	stw	r3,4(r8)
  80d770:	42800015 	stw	r10,0(r8)
  80d774:	d8801c15 	stw	r2,112(sp)
  80d778:	d9401b15 	stw	r5,108(sp)
  80d77c:	00c001c4 	movi	r3,7
  80d780:	19426016 	blt	r3,r5,80e104 <___vfiprintf_internal_r+0xe68>
  80d784:	d8c01d87 	ldb	r3,118(sp)
  80d788:	42000204 	addi	r8,r8,8
  80d78c:	29000044 	addi	r4,r5,1
  80d790:	1801b31e 	bne	r3,zero,80de60 <___vfiprintf_internal_r+0xbc4>
  80d794:	7001c026 	beq	r14,zero,80de98 <___vfiprintf_internal_r+0xbfc>
  80d798:	d8c01d04 	addi	r3,sp,116
  80d79c:	10800084 	addi	r2,r2,2
  80d7a0:	40c00015 	stw	r3,0(r8)
  80d7a4:	00c00084 	movi	r3,2
  80d7a8:	40c00115 	stw	r3,4(r8)
  80d7ac:	d8801c15 	stw	r2,112(sp)
  80d7b0:	d9001b15 	stw	r4,108(sp)
  80d7b4:	00c001c4 	movi	r3,7
  80d7b8:	1902650e 	bge	r3,r4,80e150 <___vfiprintf_internal_r+0xeb4>
  80d7bc:	10029a1e 	bne	r2,zero,80e228 <___vfiprintf_internal_r+0xf8c>
  80d7c0:	00c02004 	movi	r3,128
  80d7c4:	01000044 	movi	r4,1
  80d7c8:	000b883a 	mov	r5,zero
  80d7cc:	d811883a 	mov	r8,sp
  80d7d0:	e0c1b31e 	bne	fp,r3,80dea0 <___vfiprintf_internal_r+0xc04>
  80d7d4:	8cb9c83a 	sub	fp,r17,r18
  80d7d8:	0701b10e 	bge	zero,fp,80dea0 <___vfiprintf_internal_r+0xc04>
  80d7dc:	01c00404 	movi	r7,16
  80d7e0:	3f03890e 	bge	r7,fp,80e608 <___vfiprintf_internal_r+0x136c>
  80d7e4:	00c02074 	movhi	r3,129
  80d7e8:	18ca9a04 	addi	r3,r3,10856
  80d7ec:	d8c02415 	stw	r3,144(sp)
  80d7f0:	8007883a 	mov	r3,r16
  80d7f4:	034001c4 	movi	r13,7
  80d7f8:	e021883a 	mov	r16,fp
  80d7fc:	da402515 	stw	r9,148(sp)
  80d800:	1839883a 	mov	fp,r3
  80d804:	00000506 	br	80d81c <___vfiprintf_internal_r+0x580>
  80d808:	29800084 	addi	r6,r5,2
  80d80c:	42000204 	addi	r8,r8,8
  80d810:	180b883a 	mov	r5,r3
  80d814:	843ffc04 	addi	r16,r16,-16
  80d818:	3c000d0e 	bge	r7,r16,80d850 <___vfiprintf_internal_r+0x5b4>
  80d81c:	10800404 	addi	r2,r2,16
  80d820:	28c00044 	addi	r3,r5,1
  80d824:	45c00015 	stw	r23,0(r8)
  80d828:	41c00115 	stw	r7,4(r8)
  80d82c:	d8801c15 	stw	r2,112(sp)
  80d830:	d8c01b15 	stw	r3,108(sp)
  80d834:	68fff40e 	bge	r13,r3,80d808 <__alt_data_end+0xff80d808>
  80d838:	1002241e 	bne	r2,zero,80e0cc <___vfiprintf_internal_r+0xe30>
  80d83c:	843ffc04 	addi	r16,r16,-16
  80d840:	01800044 	movi	r6,1
  80d844:	000b883a 	mov	r5,zero
  80d848:	d811883a 	mov	r8,sp
  80d84c:	3c3ff316 	blt	r7,r16,80d81c <__alt_data_end+0xff80d81c>
  80d850:	da402517 	ldw	r9,148(sp)
  80d854:	e007883a 	mov	r3,fp
  80d858:	8039883a 	mov	fp,r16
  80d85c:	1821883a 	mov	r16,r3
  80d860:	d8c02417 	ldw	r3,144(sp)
  80d864:	1705883a 	add	r2,r2,fp
  80d868:	47000115 	stw	fp,4(r8)
  80d86c:	40c00015 	stw	r3,0(r8)
  80d870:	d8801c15 	stw	r2,112(sp)
  80d874:	d9801b15 	stw	r6,108(sp)
  80d878:	00c001c4 	movi	r3,7
  80d87c:	19827616 	blt	r3,r6,80e258 <___vfiprintf_internal_r+0xfbc>
  80d880:	4cf9c83a 	sub	fp,r9,r19
  80d884:	42000204 	addi	r8,r8,8
  80d888:	31000044 	addi	r4,r6,1
  80d88c:	300b883a 	mov	r5,r6
  80d890:	07018516 	blt	zero,fp,80dea8 <___vfiprintf_internal_r+0xc0c>
  80d894:	9885883a 	add	r2,r19,r2
  80d898:	45400015 	stw	r21,0(r8)
  80d89c:	44c00115 	stw	r19,4(r8)
  80d8a0:	d8801c15 	stw	r2,112(sp)
  80d8a4:	d9001b15 	stw	r4,108(sp)
  80d8a8:	00c001c4 	movi	r3,7
  80d8ac:	1901dd0e 	bge	r3,r4,80e024 <___vfiprintf_internal_r+0xd88>
  80d8b0:	1002401e 	bne	r2,zero,80e1b4 <___vfiprintf_internal_r+0xf18>
  80d8b4:	d8001b15 	stw	zero,108(sp)
  80d8b8:	a2c0010c 	andi	r11,r20,4
  80d8bc:	58000226 	beq	r11,zero,80d8c8 <___vfiprintf_internal_r+0x62c>
  80d8c0:	8ca7c83a 	sub	r19,r17,r18
  80d8c4:	04c2f216 	blt	zero,r19,80e490 <___vfiprintf_internal_r+0x11f4>
  80d8c8:	8c80010e 	bge	r17,r18,80d8d0 <___vfiprintf_internal_r+0x634>
  80d8cc:	9023883a 	mov	r17,r18
  80d8d0:	da802317 	ldw	r10,140(sp)
  80d8d4:	5455883a 	add	r10,r10,r17
  80d8d8:	da802315 	stw	r10,140(sp)
  80d8dc:	d8001b15 	stw	zero,108(sp)
  80d8e0:	d811883a 	mov	r8,sp
  80d8e4:	003ea206 	br	80d370 <__alt_data_end+0xff80d370>
  80d8e8:	a5000814 	ori	r20,r20,32
  80d8ec:	80c00007 	ldb	r3,0(r16)
  80d8f0:	003ec906 	br	80d418 <__alt_data_end+0xff80d418>
  80d8f4:	80c00007 	ldb	r3,0(r16)
  80d8f8:	1b030926 	beq	r3,r12,80e520 <___vfiprintf_internal_r+0x1284>
  80d8fc:	a5000414 	ori	r20,r20,16
  80d900:	003ec506 	br	80d418 <__alt_data_end+0xff80d418>
  80d904:	21003fcc 	andi	r4,r4,255
  80d908:	20035e1e 	bne	r4,zero,80e684 <___vfiprintf_internal_r+0x13e8>
  80d90c:	a080080c 	andi	r2,r20,32
  80d910:	1002a526 	beq	r2,zero,80e3a8 <___vfiprintf_internal_r+0x110c>
  80d914:	da802217 	ldw	r10,136(sp)
  80d918:	50800017 	ldw	r2,0(r10)
  80d91c:	da802317 	ldw	r10,140(sp)
  80d920:	5007d7fa 	srai	r3,r10,31
  80d924:	da802217 	ldw	r10,136(sp)
  80d928:	10c00115 	stw	r3,4(r2)
  80d92c:	52800104 	addi	r10,r10,4
  80d930:	da802215 	stw	r10,136(sp)
  80d934:	da802317 	ldw	r10,140(sp)
  80d938:	12800015 	stw	r10,0(r2)
  80d93c:	003e8c06 	br	80d370 <__alt_data_end+0xff80d370>
  80d940:	21003fcc 	andi	r4,r4,255
  80d944:	2003511e 	bne	r4,zero,80e68c <___vfiprintf_internal_r+0x13f0>
  80d948:	a080080c 	andi	r2,r20,32
  80d94c:	1000a126 	beq	r2,zero,80dbd4 <___vfiprintf_internal_r+0x938>
  80d950:	da802217 	ldw	r10,136(sp)
  80d954:	d8001d85 	stb	zero,118(sp)
  80d958:	50800204 	addi	r2,r10,8
  80d95c:	54800017 	ldw	r18,0(r10)
  80d960:	54c00117 	ldw	r19,4(r10)
  80d964:	4802b416 	blt	r9,zero,80e438 <___vfiprintf_internal_r+0x119c>
  80d968:	013fdfc4 	movi	r4,-129
  80d96c:	94c6b03a 	or	r3,r18,r19
  80d970:	d8802215 	stw	r2,136(sp)
  80d974:	a128703a 	and	r20,r20,r4
  80d978:	1800a226 	beq	r3,zero,80dc04 <___vfiprintf_internal_r+0x968>
  80d97c:	0039883a 	mov	fp,zero
  80d980:	dd401a04 	addi	r21,sp,104
  80d984:	9006d0fa 	srli	r3,r18,3
  80d988:	9808977a 	slli	r4,r19,29
  80d98c:	9826d0fa 	srli	r19,r19,3
  80d990:	948001cc 	andi	r18,r18,7
  80d994:	90800c04 	addi	r2,r18,48
  80d998:	ad7fffc4 	addi	r21,r21,-1
  80d99c:	20e4b03a 	or	r18,r4,r3
  80d9a0:	a8800005 	stb	r2,0(r21)
  80d9a4:	94c6b03a 	or	r3,r18,r19
  80d9a8:	183ff61e 	bne	r3,zero,80d984 <__alt_data_end+0xff80d984>
  80d9ac:	a0c0004c 	andi	r3,r20,1
  80d9b0:	18005926 	beq	r3,zero,80db18 <___vfiprintf_internal_r+0x87c>
  80d9b4:	10803fcc 	andi	r2,r2,255
  80d9b8:	1080201c 	xori	r2,r2,128
  80d9bc:	10bfe004 	addi	r2,r2,-128
  80d9c0:	00c00c04 	movi	r3,48
  80d9c4:	10c05426 	beq	r2,r3,80db18 <___vfiprintf_internal_r+0x87c>
  80d9c8:	da801e17 	ldw	r10,120(sp)
  80d9cc:	a8bfffc4 	addi	r2,r21,-1
  80d9d0:	a8ffffc5 	stb	r3,-1(r21)
  80d9d4:	50a7c83a 	sub	r19,r10,r2
  80d9d8:	102b883a 	mov	r21,r2
  80d9dc:	003f2f06 	br	80d69c <__alt_data_end+0xff80d69c>
  80d9e0:	21003fcc 	andi	r4,r4,255
  80d9e4:	2003421e 	bne	r4,zero,80e6f0 <___vfiprintf_internal_r+0x1454>
  80d9e8:	00802074 	movhi	r2,129
  80d9ec:	108a3904 	addi	r2,r2,10468
  80d9f0:	d8802615 	stw	r2,152(sp)
  80d9f4:	a080080c 	andi	r2,r20,32
  80d9f8:	1000aa26 	beq	r2,zero,80dca4 <___vfiprintf_internal_r+0xa08>
  80d9fc:	da802217 	ldw	r10,136(sp)
  80da00:	54800017 	ldw	r18,0(r10)
  80da04:	54c00117 	ldw	r19,4(r10)
  80da08:	52800204 	addi	r10,r10,8
  80da0c:	da802215 	stw	r10,136(sp)
  80da10:	a080004c 	andi	r2,r20,1
  80da14:	1001d226 	beq	r2,zero,80e160 <___vfiprintf_internal_r+0xec4>
  80da18:	94c4b03a 	or	r2,r18,r19
  80da1c:	1002351e 	bne	r2,zero,80e2f4 <___vfiprintf_internal_r+0x1058>
  80da20:	d8001d85 	stb	zero,118(sp)
  80da24:	48022216 	blt	r9,zero,80e2b0 <___vfiprintf_internal_r+0x1014>
  80da28:	00bfdfc4 	movi	r2,-129
  80da2c:	a0a8703a 	and	r20,r20,r2
  80da30:	003f1506 	br	80d688 <__alt_data_end+0xff80d688>
  80da34:	da802217 	ldw	r10,136(sp)
  80da38:	04800044 	movi	r18,1
  80da3c:	d8001d85 	stb	zero,118(sp)
  80da40:	50800017 	ldw	r2,0(r10)
  80da44:	52800104 	addi	r10,r10,4
  80da48:	da802215 	stw	r10,136(sp)
  80da4c:	d8801005 	stb	r2,64(sp)
  80da50:	9027883a 	mov	r19,r18
  80da54:	dd401004 	addi	r21,sp,64
  80da58:	0013883a 	mov	r9,zero
  80da5c:	003f1706 	br	80d6bc <__alt_data_end+0xff80d6bc>
  80da60:	21003fcc 	andi	r4,r4,255
  80da64:	2003201e 	bne	r4,zero,80e6e8 <___vfiprintf_internal_r+0x144c>
  80da68:	a080080c 	andi	r2,r20,32
  80da6c:	10004b26 	beq	r2,zero,80db9c <___vfiprintf_internal_r+0x900>
  80da70:	da802217 	ldw	r10,136(sp)
  80da74:	50800117 	ldw	r2,4(r10)
  80da78:	54800017 	ldw	r18,0(r10)
  80da7c:	52800204 	addi	r10,r10,8
  80da80:	da802215 	stw	r10,136(sp)
  80da84:	1027883a 	mov	r19,r2
  80da88:	10022c16 	blt	r2,zero,80e33c <___vfiprintf_internal_r+0x10a0>
  80da8c:	df001d83 	ldbu	fp,118(sp)
  80da90:	48007216 	blt	r9,zero,80dc5c <___vfiprintf_internal_r+0x9c0>
  80da94:	00ffdfc4 	movi	r3,-129
  80da98:	94c4b03a 	or	r2,r18,r19
  80da9c:	a0e8703a 	and	r20,r20,r3
  80daa0:	1000cc26 	beq	r2,zero,80ddd4 <___vfiprintf_internal_r+0xb38>
  80daa4:	98021026 	beq	r19,zero,80e2e8 <___vfiprintf_internal_r+0x104c>
  80daa8:	dc402415 	stw	r17,144(sp)
  80daac:	dc002515 	stw	r16,148(sp)
  80dab0:	9823883a 	mov	r17,r19
  80dab4:	9021883a 	mov	r16,r18
  80dab8:	dd401a04 	addi	r21,sp,104
  80dabc:	4825883a 	mov	r18,r9
  80dac0:	4027883a 	mov	r19,r8
  80dac4:	8009883a 	mov	r4,r16
  80dac8:	880b883a 	mov	r5,r17
  80dacc:	01800284 	movi	r6,10
  80dad0:	000f883a 	mov	r7,zero
  80dad4:	080f67c0 	call	80f67c <__umoddi3>
  80dad8:	10800c04 	addi	r2,r2,48
  80dadc:	ad7fffc4 	addi	r21,r21,-1
  80dae0:	8009883a 	mov	r4,r16
  80dae4:	880b883a 	mov	r5,r17
  80dae8:	a8800005 	stb	r2,0(r21)
  80daec:	01800284 	movi	r6,10
  80daf0:	000f883a 	mov	r7,zero
  80daf4:	080f1040 	call	80f104 <__udivdi3>
  80daf8:	1021883a 	mov	r16,r2
  80dafc:	10c4b03a 	or	r2,r2,r3
  80db00:	1823883a 	mov	r17,r3
  80db04:	103fef1e 	bne	r2,zero,80dac4 <__alt_data_end+0xff80dac4>
  80db08:	dc402417 	ldw	r17,144(sp)
  80db0c:	dc002517 	ldw	r16,148(sp)
  80db10:	9013883a 	mov	r9,r18
  80db14:	9811883a 	mov	r8,r19
  80db18:	da801e17 	ldw	r10,120(sp)
  80db1c:	5567c83a 	sub	r19,r10,r21
  80db20:	003ede06 	br	80d69c <__alt_data_end+0xff80d69c>
  80db24:	38803fcc 	andi	r2,r7,255
  80db28:	1080201c 	xori	r2,r2,128
  80db2c:	10bfe004 	addi	r2,r2,-128
  80db30:	1002371e 	bne	r2,zero,80e410 <___vfiprintf_internal_r+0x1174>
  80db34:	01000044 	movi	r4,1
  80db38:	01c00804 	movi	r7,32
  80db3c:	80c00007 	ldb	r3,0(r16)
  80db40:	003e3506 	br	80d418 <__alt_data_end+0xff80d418>
  80db44:	a5000054 	ori	r20,r20,1
  80db48:	80c00007 	ldb	r3,0(r16)
  80db4c:	003e3206 	br	80d418 <__alt_data_end+0xff80d418>
  80db50:	a5002014 	ori	r20,r20,128
  80db54:	80c00007 	ldb	r3,0(r16)
  80db58:	003e2f06 	br	80d418 <__alt_data_end+0xff80d418>
  80db5c:	8015883a 	mov	r10,r16
  80db60:	0023883a 	mov	r17,zero
  80db64:	18bff404 	addi	r2,r3,-48
  80db68:	50c00007 	ldb	r3,0(r10)
  80db6c:	8c4002a4 	muli	r17,r17,10
  80db70:	84000044 	addi	r16,r16,1
  80db74:	8015883a 	mov	r10,r16
  80db78:	1463883a 	add	r17,r2,r17
  80db7c:	18bff404 	addi	r2,r3,-48
  80db80:	30bff92e 	bgeu	r6,r2,80db68 <__alt_data_end+0xff80db68>
  80db84:	003e2506 	br	80d41c <__alt_data_end+0xff80d41c>
  80db88:	21003fcc 	andi	r4,r4,255
  80db8c:	2002d41e 	bne	r4,zero,80e6e0 <___vfiprintf_internal_r+0x1444>
  80db90:	a5000414 	ori	r20,r20,16
  80db94:	a080080c 	andi	r2,r20,32
  80db98:	103fb51e 	bne	r2,zero,80da70 <__alt_data_end+0xff80da70>
  80db9c:	a080040c 	andi	r2,r20,16
  80dba0:	1001f826 	beq	r2,zero,80e384 <___vfiprintf_internal_r+0x10e8>
  80dba4:	da802217 	ldw	r10,136(sp)
  80dba8:	54800017 	ldw	r18,0(r10)
  80dbac:	52800104 	addi	r10,r10,4
  80dbb0:	da802215 	stw	r10,136(sp)
  80dbb4:	9027d7fa 	srai	r19,r18,31
  80dbb8:	9805883a 	mov	r2,r19
  80dbbc:	003fb206 	br	80da88 <__alt_data_end+0xff80da88>
  80dbc0:	21003fcc 	andi	r4,r4,255
  80dbc4:	2002c41e 	bne	r4,zero,80e6d8 <___vfiprintf_internal_r+0x143c>
  80dbc8:	a5000414 	ori	r20,r20,16
  80dbcc:	a080080c 	andi	r2,r20,32
  80dbd0:	103f5f1e 	bne	r2,zero,80d950 <__alt_data_end+0xff80d950>
  80dbd4:	a080040c 	andi	r2,r20,16
  80dbd8:	10020f26 	beq	r2,zero,80e418 <___vfiprintf_internal_r+0x117c>
  80dbdc:	da802217 	ldw	r10,136(sp)
  80dbe0:	d8001d85 	stb	zero,118(sp)
  80dbe4:	0027883a 	mov	r19,zero
  80dbe8:	50800104 	addi	r2,r10,4
  80dbec:	54800017 	ldw	r18,0(r10)
  80dbf0:	48021116 	blt	r9,zero,80e438 <___vfiprintf_internal_r+0x119c>
  80dbf4:	00ffdfc4 	movi	r3,-129
  80dbf8:	d8802215 	stw	r2,136(sp)
  80dbfc:	a0e8703a 	and	r20,r20,r3
  80dc00:	903f5e1e 	bne	r18,zero,80d97c <__alt_data_end+0xff80d97c>
  80dc04:	0039883a 	mov	fp,zero
  80dc08:	4802a626 	beq	r9,zero,80e6a4 <___vfiprintf_internal_r+0x1408>
  80dc0c:	0025883a 	mov	r18,zero
  80dc10:	0027883a 	mov	r19,zero
  80dc14:	003f5a06 	br	80d980 <__alt_data_end+0xff80d980>
  80dc18:	21003fcc 	andi	r4,r4,255
  80dc1c:	20029f1e 	bne	r4,zero,80e69c <___vfiprintf_internal_r+0x1400>
  80dc20:	a5000414 	ori	r20,r20,16
  80dc24:	a080080c 	andi	r2,r20,32
  80dc28:	10005e1e 	bne	r2,zero,80dda4 <___vfiprintf_internal_r+0xb08>
  80dc2c:	a080040c 	andi	r2,r20,16
  80dc30:	1001a21e 	bne	r2,zero,80e2bc <___vfiprintf_internal_r+0x1020>
  80dc34:	a080100c 	andi	r2,r20,64
  80dc38:	d8001d85 	stb	zero,118(sp)
  80dc3c:	da802217 	ldw	r10,136(sp)
  80dc40:	1002231e 	bne	r2,zero,80e4d0 <___vfiprintf_internal_r+0x1234>
  80dc44:	50800104 	addi	r2,r10,4
  80dc48:	54800017 	ldw	r18,0(r10)
  80dc4c:	0027883a 	mov	r19,zero
  80dc50:	4801a00e 	bge	r9,zero,80e2d4 <___vfiprintf_internal_r+0x1038>
  80dc54:	d8802215 	stw	r2,136(sp)
  80dc58:	0039883a 	mov	fp,zero
  80dc5c:	94c4b03a 	or	r2,r18,r19
  80dc60:	103f901e 	bne	r2,zero,80daa4 <__alt_data_end+0xff80daa4>
  80dc64:	00800044 	movi	r2,1
  80dc68:	10803fcc 	andi	r2,r2,255
  80dc6c:	00c00044 	movi	r3,1
  80dc70:	10c05926 	beq	r2,r3,80ddd8 <___vfiprintf_internal_r+0xb3c>
  80dc74:	00c00084 	movi	r3,2
  80dc78:	10ffe41e 	bne	r2,r3,80dc0c <__alt_data_end+0xff80dc0c>
  80dc7c:	0025883a 	mov	r18,zero
  80dc80:	0027883a 	mov	r19,zero
  80dc84:	00013d06 	br	80e17c <___vfiprintf_internal_r+0xee0>
  80dc88:	21003fcc 	andi	r4,r4,255
  80dc8c:	2002811e 	bne	r4,zero,80e694 <___vfiprintf_internal_r+0x13f8>
  80dc90:	00802074 	movhi	r2,129
  80dc94:	108a3404 	addi	r2,r2,10448
  80dc98:	d8802615 	stw	r2,152(sp)
  80dc9c:	a080080c 	andi	r2,r20,32
  80dca0:	103f561e 	bne	r2,zero,80d9fc <__alt_data_end+0xff80d9fc>
  80dca4:	a080040c 	andi	r2,r20,16
  80dca8:	1001d126 	beq	r2,zero,80e3f0 <___vfiprintf_internal_r+0x1154>
  80dcac:	da802217 	ldw	r10,136(sp)
  80dcb0:	0027883a 	mov	r19,zero
  80dcb4:	54800017 	ldw	r18,0(r10)
  80dcb8:	52800104 	addi	r10,r10,4
  80dcbc:	da802215 	stw	r10,136(sp)
  80dcc0:	003f5306 	br	80da10 <__alt_data_end+0xff80da10>
  80dcc4:	da802217 	ldw	r10,136(sp)
  80dcc8:	d8001d85 	stb	zero,118(sp)
  80dccc:	55400017 	ldw	r21,0(r10)
  80dcd0:	50c00104 	addi	r3,r10,4
  80dcd4:	a8024226 	beq	r21,zero,80e5e0 <___vfiprintf_internal_r+0x1344>
  80dcd8:	48021816 	blt	r9,zero,80e53c <___vfiprintf_internal_r+0x12a0>
  80dcdc:	480d883a 	mov	r6,r9
  80dce0:	000b883a 	mov	r5,zero
  80dce4:	a809883a 	mov	r4,r21
  80dce8:	d8c02a15 	stw	r3,168(sp)
  80dcec:	da002b15 	stw	r8,172(sp)
  80dcf0:	da402c15 	stw	r9,176(sp)
  80dcf4:	080b4980 	call	80b498 <memchr>
  80dcf8:	d8c02a17 	ldw	r3,168(sp)
  80dcfc:	da002b17 	ldw	r8,172(sp)
  80dd00:	da402c17 	ldw	r9,176(sp)
  80dd04:	10024826 	beq	r2,zero,80e628 <___vfiprintf_internal_r+0x138c>
  80dd08:	1567c83a 	sub	r19,r2,r21
  80dd0c:	df001d83 	ldbu	fp,118(sp)
  80dd10:	d8c02215 	stw	r3,136(sp)
  80dd14:	0013883a 	mov	r9,zero
  80dd18:	003e6006 	br	80d69c <__alt_data_end+0xff80d69c>
  80dd1c:	21003fcc 	andi	r4,r4,255
  80dd20:	203fc026 	beq	r4,zero,80dc24 <__alt_data_end+0xff80dc24>
  80dd24:	d9c01d85 	stb	r7,118(sp)
  80dd28:	003fbe06 	br	80dc24 <__alt_data_end+0xff80dc24>
  80dd2c:	da802217 	ldw	r10,136(sp)
  80dd30:	54400017 	ldw	r17,0(r10)
  80dd34:	50800104 	addi	r2,r10,4
  80dd38:	883e3b16 	blt	r17,zero,80d628 <__alt_data_end+0xff80d628>
  80dd3c:	d8802215 	stw	r2,136(sp)
  80dd40:	80c00007 	ldb	r3,0(r16)
  80dd44:	003db406 	br	80d418 <__alt_data_end+0xff80d418>
  80dd48:	01000044 	movi	r4,1
  80dd4c:	01c00ac4 	movi	r7,43
  80dd50:	80c00007 	ldb	r3,0(r16)
  80dd54:	003db006 	br	80d418 <__alt_data_end+0xff80d418>
  80dd58:	80c00007 	ldb	r3,0(r16)
  80dd5c:	82800044 	addi	r10,r16,1
  80dd60:	1b423c26 	beq	r3,r13,80e654 <___vfiprintf_internal_r+0x13b8>
  80dd64:	18bff404 	addi	r2,r3,-48
  80dd68:	0013883a 	mov	r9,zero
  80dd6c:	30822b36 	bltu	r6,r2,80e61c <___vfiprintf_internal_r+0x1380>
  80dd70:	50c00007 	ldb	r3,0(r10)
  80dd74:	4a4002a4 	muli	r9,r9,10
  80dd78:	54000044 	addi	r16,r10,1
  80dd7c:	8015883a 	mov	r10,r16
  80dd80:	4893883a 	add	r9,r9,r2
  80dd84:	18bff404 	addi	r2,r3,-48
  80dd88:	30bff92e 	bgeu	r6,r2,80dd70 <__alt_data_end+0xff80dd70>
  80dd8c:	483da30e 	bge	r9,zero,80d41c <__alt_data_end+0xff80d41c>
  80dd90:	027fffc4 	movi	r9,-1
  80dd94:	003da106 	br	80d41c <__alt_data_end+0xff80d41c>
  80dd98:	a5001014 	ori	r20,r20,64
  80dd9c:	80c00007 	ldb	r3,0(r16)
  80dda0:	003d9d06 	br	80d418 <__alt_data_end+0xff80d418>
  80dda4:	da802217 	ldw	r10,136(sp)
  80dda8:	d8001d85 	stb	zero,118(sp)
  80ddac:	50c00204 	addi	r3,r10,8
  80ddb0:	54800017 	ldw	r18,0(r10)
  80ddb4:	54c00117 	ldw	r19,4(r10)
  80ddb8:	4801ca16 	blt	r9,zero,80e4e4 <___vfiprintf_internal_r+0x1248>
  80ddbc:	013fdfc4 	movi	r4,-129
  80ddc0:	94c4b03a 	or	r2,r18,r19
  80ddc4:	d8c02215 	stw	r3,136(sp)
  80ddc8:	a128703a 	and	r20,r20,r4
  80ddcc:	0039883a 	mov	fp,zero
  80ddd0:	103f341e 	bne	r2,zero,80daa4 <__alt_data_end+0xff80daa4>
  80ddd4:	483e2e26 	beq	r9,zero,80d690 <__alt_data_end+0xff80d690>
  80ddd8:	0025883a 	mov	r18,zero
  80dddc:	94800c04 	addi	r18,r18,48
  80dde0:	dc8019c5 	stb	r18,103(sp)
  80dde4:	dcc02717 	ldw	r19,156(sp)
  80dde8:	dd4019c4 	addi	r21,sp,103
  80ddec:	003e2b06 	br	80d69c <__alt_data_end+0xff80d69c>
  80ddf0:	21003fcc 	andi	r4,r4,255
  80ddf4:	2002361e 	bne	r4,zero,80e6d0 <___vfiprintf_internal_r+0x1434>
  80ddf8:	1801c126 	beq	r3,zero,80e500 <___vfiprintf_internal_r+0x1264>
  80ddfc:	04800044 	movi	r18,1
  80de00:	d8c01005 	stb	r3,64(sp)
  80de04:	d8001d85 	stb	zero,118(sp)
  80de08:	9027883a 	mov	r19,r18
  80de0c:	dd401004 	addi	r21,sp,64
  80de10:	003f1106 	br	80da58 <__alt_data_end+0xff80da58>
  80de14:	d9402117 	ldw	r5,132(sp)
  80de18:	d9002017 	ldw	r4,128(sp)
  80de1c:	d9801a04 	addi	r6,sp,104
  80de20:	d9c02b15 	stw	r7,172(sp)
  80de24:	dbc02a15 	stw	r15,168(sp)
  80de28:	080d1880 	call	80d188 <__sprint_r.part.0>
  80de2c:	d9c02b17 	ldw	r7,172(sp)
  80de30:	dbc02a17 	ldw	r15,168(sp)
  80de34:	10006d1e 	bne	r2,zero,80dfec <___vfiprintf_internal_r+0xd50>
  80de38:	d9801b17 	ldw	r6,108(sp)
  80de3c:	d8801c17 	ldw	r2,112(sp)
  80de40:	d811883a 	mov	r8,sp
  80de44:	31400044 	addi	r5,r6,1
  80de48:	003e3306 	br	80d718 <__alt_data_end+0xff80d718>
  80de4c:	d9401b17 	ldw	r5,108(sp)
  80de50:	d8801c17 	ldw	r2,112(sp)
  80de54:	29000044 	addi	r4,r5,1
  80de58:	d8c01d87 	ldb	r3,118(sp)
  80de5c:	183e4d26 	beq	r3,zero,80d794 <__alt_data_end+0xff80d794>
  80de60:	00c00044 	movi	r3,1
  80de64:	d9401d84 	addi	r5,sp,118
  80de68:	10c5883a 	add	r2,r2,r3
  80de6c:	41400015 	stw	r5,0(r8)
  80de70:	40c00115 	stw	r3,4(r8)
  80de74:	d8801c15 	stw	r2,112(sp)
  80de78:	d9001b15 	stw	r4,108(sp)
  80de7c:	014001c4 	movi	r5,7
  80de80:	2900a90e 	bge	r5,r4,80e128 <___vfiprintf_internal_r+0xe8c>
  80de84:	1000da1e 	bne	r2,zero,80e1f0 <___vfiprintf_internal_r+0xf54>
  80de88:	7000ab1e 	bne	r14,zero,80e138 <___vfiprintf_internal_r+0xe9c>
  80de8c:	000b883a 	mov	r5,zero
  80de90:	1809883a 	mov	r4,r3
  80de94:	d811883a 	mov	r8,sp
  80de98:	00c02004 	movi	r3,128
  80de9c:	e0fe4d26 	beq	fp,r3,80d7d4 <__alt_data_end+0xff80d7d4>
  80dea0:	4cf9c83a 	sub	fp,r9,r19
  80dea4:	073e7b0e 	bge	zero,fp,80d894 <__alt_data_end+0xff80d894>
  80dea8:	01c00404 	movi	r7,16
  80deac:	3f01900e 	bge	r7,fp,80e4f0 <___vfiprintf_internal_r+0x1254>
  80deb0:	00c02074 	movhi	r3,129
  80deb4:	18ca9a04 	addi	r3,r3,10856
  80deb8:	d8c02415 	stw	r3,144(sp)
  80debc:	034001c4 	movi	r13,7
  80dec0:	00000506 	br	80ded8 <___vfiprintf_internal_r+0xc3c>
  80dec4:	29000084 	addi	r4,r5,2
  80dec8:	42000204 	addi	r8,r8,8
  80decc:	180b883a 	mov	r5,r3
  80ded0:	e73ffc04 	addi	fp,fp,-16
  80ded4:	3f000d0e 	bge	r7,fp,80df0c <___vfiprintf_internal_r+0xc70>
  80ded8:	10800404 	addi	r2,r2,16
  80dedc:	28c00044 	addi	r3,r5,1
  80dee0:	45c00015 	stw	r23,0(r8)
  80dee4:	41c00115 	stw	r7,4(r8)
  80dee8:	d8801c15 	stw	r2,112(sp)
  80deec:	d8c01b15 	stw	r3,108(sp)
  80def0:	68fff40e 	bge	r13,r3,80dec4 <__alt_data_end+0xff80dec4>
  80def4:	1000101e 	bne	r2,zero,80df38 <___vfiprintf_internal_r+0xc9c>
  80def8:	e73ffc04 	addi	fp,fp,-16
  80defc:	01000044 	movi	r4,1
  80df00:	000b883a 	mov	r5,zero
  80df04:	d811883a 	mov	r8,sp
  80df08:	3f3ff316 	blt	r7,fp,80ded8 <__alt_data_end+0xff80ded8>
  80df0c:	da802417 	ldw	r10,144(sp)
  80df10:	1705883a 	add	r2,r2,fp
  80df14:	47000115 	stw	fp,4(r8)
  80df18:	42800015 	stw	r10,0(r8)
  80df1c:	d8801c15 	stw	r2,112(sp)
  80df20:	d9001b15 	stw	r4,108(sp)
  80df24:	00c001c4 	movi	r3,7
  80df28:	19003616 	blt	r3,r4,80e004 <___vfiprintf_internal_r+0xd68>
  80df2c:	42000204 	addi	r8,r8,8
  80df30:	21000044 	addi	r4,r4,1
  80df34:	003e5706 	br	80d894 <__alt_data_end+0xff80d894>
  80df38:	d9402117 	ldw	r5,132(sp)
  80df3c:	d9002017 	ldw	r4,128(sp)
  80df40:	d9801a04 	addi	r6,sp,104
  80df44:	d9c02b15 	stw	r7,172(sp)
  80df48:	db402a15 	stw	r13,168(sp)
  80df4c:	080d1880 	call	80d188 <__sprint_r.part.0>
  80df50:	d9c02b17 	ldw	r7,172(sp)
  80df54:	db402a17 	ldw	r13,168(sp)
  80df58:	1000241e 	bne	r2,zero,80dfec <___vfiprintf_internal_r+0xd50>
  80df5c:	d9401b17 	ldw	r5,108(sp)
  80df60:	d8801c17 	ldw	r2,112(sp)
  80df64:	d811883a 	mov	r8,sp
  80df68:	29000044 	addi	r4,r5,1
  80df6c:	003fd806 	br	80ded0 <__alt_data_end+0xff80ded0>
  80df70:	d9401b17 	ldw	r5,108(sp)
  80df74:	00c02074 	movhi	r3,129
  80df78:	18ca9e04 	addi	r3,r3,10872
  80df7c:	d8c02415 	stw	r3,144(sp)
  80df80:	29400044 	addi	r5,r5,1
  80df84:	d8c02417 	ldw	r3,144(sp)
  80df88:	14c5883a 	add	r2,r2,r19
  80df8c:	44c00115 	stw	r19,4(r8)
  80df90:	40c00015 	stw	r3,0(r8)
  80df94:	d8801c15 	stw	r2,112(sp)
  80df98:	d9401b15 	stw	r5,108(sp)
  80df9c:	00c001c4 	movi	r3,7
  80dfa0:	1940070e 	bge	r3,r5,80dfc0 <___vfiprintf_internal_r+0xd24>
  80dfa4:	103e4826 	beq	r2,zero,80d8c8 <__alt_data_end+0xff80d8c8>
  80dfa8:	d9402117 	ldw	r5,132(sp)
  80dfac:	d9002017 	ldw	r4,128(sp)
  80dfb0:	d9801a04 	addi	r6,sp,104
  80dfb4:	080d1880 	call	80d188 <__sprint_r.part.0>
  80dfb8:	10000c1e 	bne	r2,zero,80dfec <___vfiprintf_internal_r+0xd50>
  80dfbc:	d8801c17 	ldw	r2,112(sp)
  80dfc0:	8c80010e 	bge	r17,r18,80dfc8 <___vfiprintf_internal_r+0xd2c>
  80dfc4:	9023883a 	mov	r17,r18
  80dfc8:	da802317 	ldw	r10,140(sp)
  80dfcc:	5455883a 	add	r10,r10,r17
  80dfd0:	da802315 	stw	r10,140(sp)
  80dfd4:	103e4126 	beq	r2,zero,80d8dc <__alt_data_end+0xff80d8dc>
  80dfd8:	d9402117 	ldw	r5,132(sp)
  80dfdc:	d9002017 	ldw	r4,128(sp)
  80dfe0:	d9801a04 	addi	r6,sp,104
  80dfe4:	080d1880 	call	80d188 <__sprint_r.part.0>
  80dfe8:	103e3c26 	beq	r2,zero,80d8dc <__alt_data_end+0xff80d8dc>
  80dfec:	dd002117 	ldw	r20,132(sp)
  80dff0:	a080030b 	ldhu	r2,12(r20)
  80dff4:	1080100c 	andi	r2,r2,64
  80dff8:	1001231e 	bne	r2,zero,80e488 <___vfiprintf_internal_r+0x11ec>
  80dffc:	d8802317 	ldw	r2,140(sp)
  80e000:	003d7b06 	br	80d5f0 <__alt_data_end+0xff80d5f0>
  80e004:	1000991e 	bne	r2,zero,80e26c <___vfiprintf_internal_r+0xfd0>
  80e008:	00c00044 	movi	r3,1
  80e00c:	9805883a 	mov	r2,r19
  80e010:	dd400015 	stw	r21,0(sp)
  80e014:	dcc00115 	stw	r19,4(sp)
  80e018:	dcc01c15 	stw	r19,112(sp)
  80e01c:	d8c01b15 	stw	r3,108(sp)
  80e020:	d811883a 	mov	r8,sp
  80e024:	42000204 	addi	r8,r8,8
  80e028:	a2c0010c 	andi	r11,r20,4
  80e02c:	583fe426 	beq	r11,zero,80dfc0 <__alt_data_end+0xff80dfc0>
  80e030:	8ca7c83a 	sub	r19,r17,r18
  80e034:	04ffe20e 	bge	zero,r19,80dfc0 <__alt_data_end+0xff80dfc0>
  80e038:	01c00404 	movi	r7,16
  80e03c:	3cffcc0e 	bge	r7,r19,80df70 <__alt_data_end+0xff80df70>
  80e040:	02802074 	movhi	r10,129
  80e044:	528a9e04 	addi	r10,r10,10872
  80e048:	d9001b17 	ldw	r4,108(sp)
  80e04c:	da802415 	stw	r10,144(sp)
  80e050:	382b883a 	mov	r21,r7
  80e054:	050001c4 	movi	r20,7
  80e058:	df002017 	ldw	fp,128(sp)
  80e05c:	00000506 	br	80e074 <___vfiprintf_internal_r+0xdd8>
  80e060:	21400084 	addi	r5,r4,2
  80e064:	42000204 	addi	r8,r8,8
  80e068:	1809883a 	mov	r4,r3
  80e06c:	9cfffc04 	addi	r19,r19,-16
  80e070:	acffc40e 	bge	r21,r19,80df84 <__alt_data_end+0xff80df84>
  80e074:	10800404 	addi	r2,r2,16
  80e078:	20c00044 	addi	r3,r4,1
  80e07c:	45800015 	stw	r22,0(r8)
  80e080:	45400115 	stw	r21,4(r8)
  80e084:	d8801c15 	stw	r2,112(sp)
  80e088:	d8c01b15 	stw	r3,108(sp)
  80e08c:	a0fff40e 	bge	r20,r3,80e060 <__alt_data_end+0xff80e060>
  80e090:	1000041e 	bne	r2,zero,80e0a4 <___vfiprintf_internal_r+0xe08>
  80e094:	01400044 	movi	r5,1
  80e098:	0009883a 	mov	r4,zero
  80e09c:	d811883a 	mov	r8,sp
  80e0a0:	003ff206 	br	80e06c <__alt_data_end+0xff80e06c>
  80e0a4:	d9402117 	ldw	r5,132(sp)
  80e0a8:	d9801a04 	addi	r6,sp,104
  80e0ac:	e009883a 	mov	r4,fp
  80e0b0:	080d1880 	call	80d188 <__sprint_r.part.0>
  80e0b4:	103fcd1e 	bne	r2,zero,80dfec <__alt_data_end+0xff80dfec>
  80e0b8:	d9001b17 	ldw	r4,108(sp)
  80e0bc:	d8801c17 	ldw	r2,112(sp)
  80e0c0:	d811883a 	mov	r8,sp
  80e0c4:	21400044 	addi	r5,r4,1
  80e0c8:	003fe806 	br	80e06c <__alt_data_end+0xff80e06c>
  80e0cc:	d9402117 	ldw	r5,132(sp)
  80e0d0:	d9002017 	ldw	r4,128(sp)
  80e0d4:	d9801a04 	addi	r6,sp,104
  80e0d8:	d9c02b15 	stw	r7,172(sp)
  80e0dc:	db402a15 	stw	r13,168(sp)
  80e0e0:	080d1880 	call	80d188 <__sprint_r.part.0>
  80e0e4:	d9c02b17 	ldw	r7,172(sp)
  80e0e8:	db402a17 	ldw	r13,168(sp)
  80e0ec:	103fbf1e 	bne	r2,zero,80dfec <__alt_data_end+0xff80dfec>
  80e0f0:	d9401b17 	ldw	r5,108(sp)
  80e0f4:	d8801c17 	ldw	r2,112(sp)
  80e0f8:	d811883a 	mov	r8,sp
  80e0fc:	29800044 	addi	r6,r5,1
  80e100:	003dc406 	br	80d814 <__alt_data_end+0xff80d814>
  80e104:	1000d21e 	bne	r2,zero,80e450 <___vfiprintf_internal_r+0x11b4>
  80e108:	d8c01d87 	ldb	r3,118(sp)
  80e10c:	18009526 	beq	r3,zero,80e364 <___vfiprintf_internal_r+0x10c8>
  80e110:	00800044 	movi	r2,1
  80e114:	d8c01d84 	addi	r3,sp,118
  80e118:	1009883a 	mov	r4,r2
  80e11c:	d8c00015 	stw	r3,0(sp)
  80e120:	d8800115 	stw	r2,4(sp)
  80e124:	d811883a 	mov	r8,sp
  80e128:	200b883a 	mov	r5,r4
  80e12c:	42000204 	addi	r8,r8,8
  80e130:	21000044 	addi	r4,r4,1
  80e134:	003d9706 	br	80d794 <__alt_data_end+0xff80d794>
  80e138:	d9001d04 	addi	r4,sp,116
  80e13c:	00800084 	movi	r2,2
  80e140:	d9000015 	stw	r4,0(sp)
  80e144:	d8800115 	stw	r2,4(sp)
  80e148:	1809883a 	mov	r4,r3
  80e14c:	d811883a 	mov	r8,sp
  80e150:	200b883a 	mov	r5,r4
  80e154:	42000204 	addi	r8,r8,8
  80e158:	21000044 	addi	r4,r4,1
  80e15c:	003f4e06 	br	80de98 <__alt_data_end+0xff80de98>
  80e160:	d8001d85 	stb	zero,118(sp)
  80e164:	48005016 	blt	r9,zero,80e2a8 <___vfiprintf_internal_r+0x100c>
  80e168:	00ffdfc4 	movi	r3,-129
  80e16c:	94c4b03a 	or	r2,r18,r19
  80e170:	a0e8703a 	and	r20,r20,r3
  80e174:	103d4426 	beq	r2,zero,80d688 <__alt_data_end+0xff80d688>
  80e178:	0039883a 	mov	fp,zero
  80e17c:	d9002617 	ldw	r4,152(sp)
  80e180:	dd401a04 	addi	r21,sp,104
  80e184:	908003cc 	andi	r2,r18,15
  80e188:	9806973a 	slli	r3,r19,28
  80e18c:	2085883a 	add	r2,r4,r2
  80e190:	9024d13a 	srli	r18,r18,4
  80e194:	10800003 	ldbu	r2,0(r2)
  80e198:	9826d13a 	srli	r19,r19,4
  80e19c:	ad7fffc4 	addi	r21,r21,-1
  80e1a0:	1ca4b03a 	or	r18,r3,r18
  80e1a4:	a8800005 	stb	r2,0(r21)
  80e1a8:	94c4b03a 	or	r2,r18,r19
  80e1ac:	103ff51e 	bne	r2,zero,80e184 <__alt_data_end+0xff80e184>
  80e1b0:	003e5906 	br	80db18 <__alt_data_end+0xff80db18>
  80e1b4:	d9402117 	ldw	r5,132(sp)
  80e1b8:	d9002017 	ldw	r4,128(sp)
  80e1bc:	d9801a04 	addi	r6,sp,104
  80e1c0:	080d1880 	call	80d188 <__sprint_r.part.0>
  80e1c4:	103f891e 	bne	r2,zero,80dfec <__alt_data_end+0xff80dfec>
  80e1c8:	d8801c17 	ldw	r2,112(sp)
  80e1cc:	d811883a 	mov	r8,sp
  80e1d0:	003f9506 	br	80e028 <__alt_data_end+0xff80e028>
  80e1d4:	d9402117 	ldw	r5,132(sp)
  80e1d8:	d9002017 	ldw	r4,128(sp)
  80e1dc:	d9801a04 	addi	r6,sp,104
  80e1e0:	080d1880 	call	80d188 <__sprint_r.part.0>
  80e1e4:	103f811e 	bne	r2,zero,80dfec <__alt_data_end+0xff80dfec>
  80e1e8:	d811883a 	mov	r8,sp
  80e1ec:	003ced06 	br	80d5a4 <__alt_data_end+0xff80d5a4>
  80e1f0:	d9402117 	ldw	r5,132(sp)
  80e1f4:	d9002017 	ldw	r4,128(sp)
  80e1f8:	d9801a04 	addi	r6,sp,104
  80e1fc:	da402c15 	stw	r9,176(sp)
  80e200:	db802a15 	stw	r14,168(sp)
  80e204:	080d1880 	call	80d188 <__sprint_r.part.0>
  80e208:	da402c17 	ldw	r9,176(sp)
  80e20c:	db802a17 	ldw	r14,168(sp)
  80e210:	103f761e 	bne	r2,zero,80dfec <__alt_data_end+0xff80dfec>
  80e214:	d9401b17 	ldw	r5,108(sp)
  80e218:	d8801c17 	ldw	r2,112(sp)
  80e21c:	d811883a 	mov	r8,sp
  80e220:	29000044 	addi	r4,r5,1
  80e224:	003d5b06 	br	80d794 <__alt_data_end+0xff80d794>
  80e228:	d9402117 	ldw	r5,132(sp)
  80e22c:	d9002017 	ldw	r4,128(sp)
  80e230:	d9801a04 	addi	r6,sp,104
  80e234:	da402c15 	stw	r9,176(sp)
  80e238:	080d1880 	call	80d188 <__sprint_r.part.0>
  80e23c:	da402c17 	ldw	r9,176(sp)
  80e240:	103f6a1e 	bne	r2,zero,80dfec <__alt_data_end+0xff80dfec>
  80e244:	d9401b17 	ldw	r5,108(sp)
  80e248:	d8801c17 	ldw	r2,112(sp)
  80e24c:	d811883a 	mov	r8,sp
  80e250:	29000044 	addi	r4,r5,1
  80e254:	003f1006 	br	80de98 <__alt_data_end+0xff80de98>
  80e258:	1000c31e 	bne	r2,zero,80e568 <___vfiprintf_internal_r+0x12cc>
  80e25c:	01000044 	movi	r4,1
  80e260:	000b883a 	mov	r5,zero
  80e264:	d811883a 	mov	r8,sp
  80e268:	003f0d06 	br	80dea0 <__alt_data_end+0xff80dea0>
  80e26c:	d9402117 	ldw	r5,132(sp)
  80e270:	d9002017 	ldw	r4,128(sp)
  80e274:	d9801a04 	addi	r6,sp,104
  80e278:	080d1880 	call	80d188 <__sprint_r.part.0>
  80e27c:	103f5b1e 	bne	r2,zero,80dfec <__alt_data_end+0xff80dfec>
  80e280:	d9001b17 	ldw	r4,108(sp)
  80e284:	d8801c17 	ldw	r2,112(sp)
  80e288:	d811883a 	mov	r8,sp
  80e28c:	21000044 	addi	r4,r4,1
  80e290:	003d8006 	br	80d894 <__alt_data_end+0xff80d894>
  80e294:	01002074 	movhi	r4,129
  80e298:	210a3904 	addi	r4,r4,10468
  80e29c:	d9002615 	stw	r4,152(sp)
  80e2a0:	d8c02215 	stw	r3,136(sp)
  80e2a4:	1029883a 	mov	r20,r2
  80e2a8:	94c4b03a 	or	r2,r18,r19
  80e2ac:	103fb21e 	bne	r2,zero,80e178 <__alt_data_end+0xff80e178>
  80e2b0:	0039883a 	mov	fp,zero
  80e2b4:	00800084 	movi	r2,2
  80e2b8:	003e6b06 	br	80dc68 <__alt_data_end+0xff80dc68>
  80e2bc:	da802217 	ldw	r10,136(sp)
  80e2c0:	d8001d85 	stb	zero,118(sp)
  80e2c4:	0027883a 	mov	r19,zero
  80e2c8:	50800104 	addi	r2,r10,4
  80e2cc:	54800017 	ldw	r18,0(r10)
  80e2d0:	483e6016 	blt	r9,zero,80dc54 <__alt_data_end+0xff80dc54>
  80e2d4:	00ffdfc4 	movi	r3,-129
  80e2d8:	d8802215 	stw	r2,136(sp)
  80e2dc:	a0e8703a 	and	r20,r20,r3
  80e2e0:	0039883a 	mov	fp,zero
  80e2e4:	903ebb26 	beq	r18,zero,80ddd4 <__alt_data_end+0xff80ddd4>
  80e2e8:	00800244 	movi	r2,9
  80e2ec:	14bdee36 	bltu	r2,r18,80daa8 <__alt_data_end+0xff80daa8>
  80e2f0:	003eba06 	br	80dddc <__alt_data_end+0xff80dddc>
  80e2f4:	00800c04 	movi	r2,48
  80e2f8:	d8c01d45 	stb	r3,117(sp)
  80e2fc:	d8801d05 	stb	r2,116(sp)
  80e300:	d8001d85 	stb	zero,118(sp)
  80e304:	a0c00094 	ori	r3,r20,2
  80e308:	4800a916 	blt	r9,zero,80e5b0 <___vfiprintf_internal_r+0x1314>
  80e30c:	00bfdfc4 	movi	r2,-129
  80e310:	a096703a 	and	r11,r20,r2
  80e314:	5d000094 	ori	r20,r11,2
  80e318:	0039883a 	mov	fp,zero
  80e31c:	003f9706 	br	80e17c <__alt_data_end+0xff80e17c>
  80e320:	8025883a 	mov	r18,r16
  80e324:	003c2e06 	br	80d3e0 <__alt_data_end+0xff80d3e0>
  80e328:	00802074 	movhi	r2,129
  80e32c:	108a3904 	addi	r2,r2,10468
  80e330:	0039883a 	mov	fp,zero
  80e334:	d8802615 	stw	r2,152(sp)
  80e338:	003f9006 	br	80e17c <__alt_data_end+0xff80e17c>
  80e33c:	04a5c83a 	sub	r18,zero,r18
  80e340:	07000b44 	movi	fp,45
  80e344:	9004c03a 	cmpne	r2,r18,zero
  80e348:	04e7c83a 	sub	r19,zero,r19
  80e34c:	df001d85 	stb	fp,118(sp)
  80e350:	98a7c83a 	sub	r19,r19,r2
  80e354:	48009f16 	blt	r9,zero,80e5d4 <___vfiprintf_internal_r+0x1338>
  80e358:	00bfdfc4 	movi	r2,-129
  80e35c:	a0a8703a 	and	r20,r20,r2
  80e360:	003dd006 	br	80daa4 <__alt_data_end+0xff80daa4>
  80e364:	70004c26 	beq	r14,zero,80e498 <___vfiprintf_internal_r+0x11fc>
  80e368:	00800084 	movi	r2,2
  80e36c:	d8c01d04 	addi	r3,sp,116
  80e370:	d8c00015 	stw	r3,0(sp)
  80e374:	d8800115 	stw	r2,4(sp)
  80e378:	01000044 	movi	r4,1
  80e37c:	d811883a 	mov	r8,sp
  80e380:	003f7306 	br	80e150 <__alt_data_end+0xff80e150>
  80e384:	a080100c 	andi	r2,r20,64
  80e388:	da802217 	ldw	r10,136(sp)
  80e38c:	103e0626 	beq	r2,zero,80dba8 <__alt_data_end+0xff80dba8>
  80e390:	5480000f 	ldh	r18,0(r10)
  80e394:	52800104 	addi	r10,r10,4
  80e398:	da802215 	stw	r10,136(sp)
  80e39c:	9027d7fa 	srai	r19,r18,31
  80e3a0:	9805883a 	mov	r2,r19
  80e3a4:	003db806 	br	80da88 <__alt_data_end+0xff80da88>
  80e3a8:	a080040c 	andi	r2,r20,16
  80e3ac:	1000091e 	bne	r2,zero,80e3d4 <___vfiprintf_internal_r+0x1138>
  80e3b0:	a2c0100c 	andi	r11,r20,64
  80e3b4:	58000726 	beq	r11,zero,80e3d4 <___vfiprintf_internal_r+0x1138>
  80e3b8:	da802217 	ldw	r10,136(sp)
  80e3bc:	50800017 	ldw	r2,0(r10)
  80e3c0:	52800104 	addi	r10,r10,4
  80e3c4:	da802215 	stw	r10,136(sp)
  80e3c8:	da802317 	ldw	r10,140(sp)
  80e3cc:	1280000d 	sth	r10,0(r2)
  80e3d0:	003be706 	br	80d370 <__alt_data_end+0xff80d370>
  80e3d4:	da802217 	ldw	r10,136(sp)
  80e3d8:	50800017 	ldw	r2,0(r10)
  80e3dc:	52800104 	addi	r10,r10,4
  80e3e0:	da802215 	stw	r10,136(sp)
  80e3e4:	da802317 	ldw	r10,140(sp)
  80e3e8:	12800015 	stw	r10,0(r2)
  80e3ec:	003be006 	br	80d370 <__alt_data_end+0xff80d370>
  80e3f0:	a080100c 	andi	r2,r20,64
  80e3f4:	da802217 	ldw	r10,136(sp)
  80e3f8:	10003026 	beq	r2,zero,80e4bc <___vfiprintf_internal_r+0x1220>
  80e3fc:	5480000b 	ldhu	r18,0(r10)
  80e400:	52800104 	addi	r10,r10,4
  80e404:	0027883a 	mov	r19,zero
  80e408:	da802215 	stw	r10,136(sp)
  80e40c:	003d8006 	br	80da10 <__alt_data_end+0xff80da10>
  80e410:	80c00007 	ldb	r3,0(r16)
  80e414:	003c0006 	br	80d418 <__alt_data_end+0xff80d418>
  80e418:	a080100c 	andi	r2,r20,64
  80e41c:	d8001d85 	stb	zero,118(sp)
  80e420:	da802217 	ldw	r10,136(sp)
  80e424:	1000201e 	bne	r2,zero,80e4a8 <___vfiprintf_internal_r+0x120c>
  80e428:	50800104 	addi	r2,r10,4
  80e42c:	54800017 	ldw	r18,0(r10)
  80e430:	0027883a 	mov	r19,zero
  80e434:	483def0e 	bge	r9,zero,80dbf4 <__alt_data_end+0xff80dbf4>
  80e438:	94c6b03a 	or	r3,r18,r19
  80e43c:	d8802215 	stw	r2,136(sp)
  80e440:	183d4e1e 	bne	r3,zero,80d97c <__alt_data_end+0xff80d97c>
  80e444:	0039883a 	mov	fp,zero
  80e448:	0005883a 	mov	r2,zero
  80e44c:	003e0606 	br	80dc68 <__alt_data_end+0xff80dc68>
  80e450:	d9402117 	ldw	r5,132(sp)
  80e454:	d9002017 	ldw	r4,128(sp)
  80e458:	d9801a04 	addi	r6,sp,104
  80e45c:	da402c15 	stw	r9,176(sp)
  80e460:	db802a15 	stw	r14,168(sp)
  80e464:	080d1880 	call	80d188 <__sprint_r.part.0>
  80e468:	da402c17 	ldw	r9,176(sp)
  80e46c:	db802a17 	ldw	r14,168(sp)
  80e470:	103ede1e 	bne	r2,zero,80dfec <__alt_data_end+0xff80dfec>
  80e474:	d9401b17 	ldw	r5,108(sp)
  80e478:	d8801c17 	ldw	r2,112(sp)
  80e47c:	d811883a 	mov	r8,sp
  80e480:	29000044 	addi	r4,r5,1
  80e484:	003e7406 	br	80de58 <__alt_data_end+0xff80de58>
  80e488:	00bfffc4 	movi	r2,-1
  80e48c:	003c5806 	br	80d5f0 <__alt_data_end+0xff80d5f0>
  80e490:	d811883a 	mov	r8,sp
  80e494:	003ee806 	br	80e038 <__alt_data_end+0xff80e038>
  80e498:	000b883a 	mov	r5,zero
  80e49c:	01000044 	movi	r4,1
  80e4a0:	d811883a 	mov	r8,sp
  80e4a4:	003e7c06 	br	80de98 <__alt_data_end+0xff80de98>
  80e4a8:	50800104 	addi	r2,r10,4
  80e4ac:	5480000b 	ldhu	r18,0(r10)
  80e4b0:	0027883a 	mov	r19,zero
  80e4b4:	483dcf0e 	bge	r9,zero,80dbf4 <__alt_data_end+0xff80dbf4>
  80e4b8:	003fdf06 	br	80e438 <__alt_data_end+0xff80e438>
  80e4bc:	54800017 	ldw	r18,0(r10)
  80e4c0:	52800104 	addi	r10,r10,4
  80e4c4:	0027883a 	mov	r19,zero
  80e4c8:	da802215 	stw	r10,136(sp)
  80e4cc:	003d5006 	br	80da10 <__alt_data_end+0xff80da10>
  80e4d0:	50800104 	addi	r2,r10,4
  80e4d4:	5480000b 	ldhu	r18,0(r10)
  80e4d8:	0027883a 	mov	r19,zero
  80e4dc:	483f7d0e 	bge	r9,zero,80e2d4 <__alt_data_end+0xff80e2d4>
  80e4e0:	003ddc06 	br	80dc54 <__alt_data_end+0xff80dc54>
  80e4e4:	d8c02215 	stw	r3,136(sp)
  80e4e8:	0039883a 	mov	fp,zero
  80e4ec:	003ddb06 	br	80dc5c <__alt_data_end+0xff80dc5c>
  80e4f0:	02802074 	movhi	r10,129
  80e4f4:	528a9a04 	addi	r10,r10,10856
  80e4f8:	da802415 	stw	r10,144(sp)
  80e4fc:	003e8306 	br	80df0c <__alt_data_end+0xff80df0c>
  80e500:	d8801c17 	ldw	r2,112(sp)
  80e504:	dd002117 	ldw	r20,132(sp)
  80e508:	103eb926 	beq	r2,zero,80dff0 <__alt_data_end+0xff80dff0>
  80e50c:	d9002017 	ldw	r4,128(sp)
  80e510:	d9801a04 	addi	r6,sp,104
  80e514:	a00b883a 	mov	r5,r20
  80e518:	080d1880 	call	80d188 <__sprint_r.part.0>
  80e51c:	003eb406 	br	80dff0 <__alt_data_end+0xff80dff0>
  80e520:	80c00043 	ldbu	r3,1(r16)
  80e524:	a5000814 	ori	r20,r20,32
  80e528:	84000044 	addi	r16,r16,1
  80e52c:	18c03fcc 	andi	r3,r3,255
  80e530:	18c0201c 	xori	r3,r3,128
  80e534:	18ffe004 	addi	r3,r3,-128
  80e538:	003bb706 	br	80d418 <__alt_data_end+0xff80d418>
  80e53c:	a809883a 	mov	r4,r21
  80e540:	d8c02a15 	stw	r3,168(sp)
  80e544:	da002b15 	stw	r8,172(sp)
  80e548:	0805bf00 	call	805bf0 <strlen>
  80e54c:	d8c02a17 	ldw	r3,168(sp)
  80e550:	1027883a 	mov	r19,r2
  80e554:	df001d83 	ldbu	fp,118(sp)
  80e558:	d8c02215 	stw	r3,136(sp)
  80e55c:	0013883a 	mov	r9,zero
  80e560:	da002b17 	ldw	r8,172(sp)
  80e564:	003c4d06 	br	80d69c <__alt_data_end+0xff80d69c>
  80e568:	d9402117 	ldw	r5,132(sp)
  80e56c:	d9002017 	ldw	r4,128(sp)
  80e570:	d9801a04 	addi	r6,sp,104
  80e574:	da402c15 	stw	r9,176(sp)
  80e578:	080d1880 	call	80d188 <__sprint_r.part.0>
  80e57c:	da402c17 	ldw	r9,176(sp)
  80e580:	103e9a1e 	bne	r2,zero,80dfec <__alt_data_end+0xff80dfec>
  80e584:	d9401b17 	ldw	r5,108(sp)
  80e588:	d8801c17 	ldw	r2,112(sp)
  80e58c:	d811883a 	mov	r8,sp
  80e590:	29000044 	addi	r4,r5,1
  80e594:	003e4206 	br	80dea0 <__alt_data_end+0xff80dea0>
  80e598:	d9401b17 	ldw	r5,108(sp)
  80e59c:	01002074 	movhi	r4,129
  80e5a0:	210a9e04 	addi	r4,r4,10872
  80e5a4:	d9002415 	stw	r4,144(sp)
  80e5a8:	29400044 	addi	r5,r5,1
  80e5ac:	003c6d06 	br	80d764 <__alt_data_end+0xff80d764>
  80e5b0:	0039883a 	mov	fp,zero
  80e5b4:	00800084 	movi	r2,2
  80e5b8:	10803fcc 	andi	r2,r2,255
  80e5bc:	01000044 	movi	r4,1
  80e5c0:	11001e26 	beq	r2,r4,80e63c <___vfiprintf_internal_r+0x13a0>
  80e5c4:	01000084 	movi	r4,2
  80e5c8:	11001e1e 	bne	r2,r4,80e644 <___vfiprintf_internal_r+0x13a8>
  80e5cc:	1829883a 	mov	r20,r3
  80e5d0:	003eea06 	br	80e17c <__alt_data_end+0xff80e17c>
  80e5d4:	a007883a 	mov	r3,r20
  80e5d8:	00800044 	movi	r2,1
  80e5dc:	003ff606 	br	80e5b8 <__alt_data_end+0xff80e5b8>
  80e5e0:	00800184 	movi	r2,6
  80e5e4:	1240012e 	bgeu	r2,r9,80e5ec <___vfiprintf_internal_r+0x1350>
  80e5e8:	1013883a 	mov	r9,r2
  80e5ec:	4827883a 	mov	r19,r9
  80e5f0:	4825883a 	mov	r18,r9
  80e5f4:	48001516 	blt	r9,zero,80e64c <___vfiprintf_internal_r+0x13b0>
  80e5f8:	05402074 	movhi	r21,129
  80e5fc:	d8c02215 	stw	r3,136(sp)
  80e600:	ad4a3e04 	addi	r21,r21,10488
  80e604:	003d1406 	br	80da58 <__alt_data_end+0xff80da58>
  80e608:	02802074 	movhi	r10,129
  80e60c:	528a9a04 	addi	r10,r10,10856
  80e610:	da802415 	stw	r10,144(sp)
  80e614:	200d883a 	mov	r6,r4
  80e618:	003c9106 	br	80d860 <__alt_data_end+0xff80d860>
  80e61c:	5021883a 	mov	r16,r10
  80e620:	0013883a 	mov	r9,zero
  80e624:	003b7d06 	br	80d41c <__alt_data_end+0xff80d41c>
  80e628:	4827883a 	mov	r19,r9
  80e62c:	df001d83 	ldbu	fp,118(sp)
  80e630:	d8c02215 	stw	r3,136(sp)
  80e634:	0013883a 	mov	r9,zero
  80e638:	003c1806 	br	80d69c <__alt_data_end+0xff80d69c>
  80e63c:	1829883a 	mov	r20,r3
  80e640:	003d1806 	br	80daa4 <__alt_data_end+0xff80daa4>
  80e644:	1829883a 	mov	r20,r3
  80e648:	003ccd06 	br	80d980 <__alt_data_end+0xff80d980>
  80e64c:	0025883a 	mov	r18,zero
  80e650:	003fe906 	br	80e5f8 <__alt_data_end+0xff80e5f8>
  80e654:	d8802217 	ldw	r2,136(sp)
  80e658:	80c00043 	ldbu	r3,1(r16)
  80e65c:	5021883a 	mov	r16,r10
  80e660:	12400017 	ldw	r9,0(r2)
  80e664:	10800104 	addi	r2,r2,4
  80e668:	d8802215 	stw	r2,136(sp)
  80e66c:	483faf0e 	bge	r9,zero,80e52c <__alt_data_end+0xff80e52c>
  80e670:	18c03fcc 	andi	r3,r3,255
  80e674:	18c0201c 	xori	r3,r3,128
  80e678:	027fffc4 	movi	r9,-1
  80e67c:	18ffe004 	addi	r3,r3,-128
  80e680:	003b6506 	br	80d418 <__alt_data_end+0xff80d418>
  80e684:	d9c01d85 	stb	r7,118(sp)
  80e688:	003ca006 	br	80d90c <__alt_data_end+0xff80d90c>
  80e68c:	d9c01d85 	stb	r7,118(sp)
  80e690:	003cad06 	br	80d948 <__alt_data_end+0xff80d948>
  80e694:	d9c01d85 	stb	r7,118(sp)
  80e698:	003d7d06 	br	80dc90 <__alt_data_end+0xff80dc90>
  80e69c:	d9c01d85 	stb	r7,118(sp)
  80e6a0:	003d5f06 	br	80dc20 <__alt_data_end+0xff80dc20>
  80e6a4:	a080004c 	andi	r2,r20,1
  80e6a8:	0039883a 	mov	fp,zero
  80e6ac:	10000526 	beq	r2,zero,80e6c4 <___vfiprintf_internal_r+0x1428>
  80e6b0:	00800c04 	movi	r2,48
  80e6b4:	d88019c5 	stb	r2,103(sp)
  80e6b8:	dcc02717 	ldw	r19,156(sp)
  80e6bc:	dd4019c4 	addi	r21,sp,103
  80e6c0:	003bf606 	br	80d69c <__alt_data_end+0xff80d69c>
  80e6c4:	0027883a 	mov	r19,zero
  80e6c8:	dd401a04 	addi	r21,sp,104
  80e6cc:	003bf306 	br	80d69c <__alt_data_end+0xff80d69c>
  80e6d0:	d9c01d85 	stb	r7,118(sp)
  80e6d4:	003dc806 	br	80ddf8 <__alt_data_end+0xff80ddf8>
  80e6d8:	d9c01d85 	stb	r7,118(sp)
  80e6dc:	003d3a06 	br	80dbc8 <__alt_data_end+0xff80dbc8>
  80e6e0:	d9c01d85 	stb	r7,118(sp)
  80e6e4:	003d2a06 	br	80db90 <__alt_data_end+0xff80db90>
  80e6e8:	d9c01d85 	stb	r7,118(sp)
  80e6ec:	003cde06 	br	80da68 <__alt_data_end+0xff80da68>
  80e6f0:	d9c01d85 	stb	r7,118(sp)
  80e6f4:	003cbc06 	br	80d9e8 <__alt_data_end+0xff80d9e8>

0080e6f8 <__vfiprintf_internal>:
  80e6f8:	00802074 	movhi	r2,129
  80e6fc:	10915904 	addi	r2,r2,17764
  80e700:	300f883a 	mov	r7,r6
  80e704:	280d883a 	mov	r6,r5
  80e708:	200b883a 	mov	r5,r4
  80e70c:	11000017 	ldw	r4,0(r2)
  80e710:	080d29c1 	jmpi	80d29c <___vfiprintf_internal_r>

0080e714 <__sbprintf>:
  80e714:	2880030b 	ldhu	r2,12(r5)
  80e718:	2ac01917 	ldw	r11,100(r5)
  80e71c:	2a80038b 	ldhu	r10,14(r5)
  80e720:	2a400717 	ldw	r9,28(r5)
  80e724:	2a000917 	ldw	r8,36(r5)
  80e728:	defee204 	addi	sp,sp,-1144
  80e72c:	00c10004 	movi	r3,1024
  80e730:	dc011a15 	stw	r16,1128(sp)
  80e734:	10bfff4c 	andi	r2,r2,65533
  80e738:	2821883a 	mov	r16,r5
  80e73c:	d8cb883a 	add	r5,sp,r3
  80e740:	dc811c15 	stw	r18,1136(sp)
  80e744:	dc411b15 	stw	r17,1132(sp)
  80e748:	dfc11d15 	stw	ra,1140(sp)
  80e74c:	2025883a 	mov	r18,r4
  80e750:	d881030d 	sth	r2,1036(sp)
  80e754:	dac11915 	stw	r11,1124(sp)
  80e758:	da81038d 	sth	r10,1038(sp)
  80e75c:	da410715 	stw	r9,1052(sp)
  80e760:	da010915 	stw	r8,1060(sp)
  80e764:	dec10015 	stw	sp,1024(sp)
  80e768:	dec10415 	stw	sp,1040(sp)
  80e76c:	d8c10215 	stw	r3,1032(sp)
  80e770:	d8c10515 	stw	r3,1044(sp)
  80e774:	d8010615 	stw	zero,1048(sp)
  80e778:	080d29c0 	call	80d29c <___vfiprintf_internal_r>
  80e77c:	1023883a 	mov	r17,r2
  80e780:	10000416 	blt	r2,zero,80e794 <__sbprintf+0x80>
  80e784:	d9410004 	addi	r5,sp,1024
  80e788:	9009883a 	mov	r4,r18
  80e78c:	0809b500 	call	809b50 <_fflush_r>
  80e790:	10000d1e 	bne	r2,zero,80e7c8 <__sbprintf+0xb4>
  80e794:	d881030b 	ldhu	r2,1036(sp)
  80e798:	1080100c 	andi	r2,r2,64
  80e79c:	10000326 	beq	r2,zero,80e7ac <__sbprintf+0x98>
  80e7a0:	8080030b 	ldhu	r2,12(r16)
  80e7a4:	10801014 	ori	r2,r2,64
  80e7a8:	8080030d 	sth	r2,12(r16)
  80e7ac:	8805883a 	mov	r2,r17
  80e7b0:	dfc11d17 	ldw	ra,1140(sp)
  80e7b4:	dc811c17 	ldw	r18,1136(sp)
  80e7b8:	dc411b17 	ldw	r17,1132(sp)
  80e7bc:	dc011a17 	ldw	r16,1128(sp)
  80e7c0:	dec11e04 	addi	sp,sp,1144
  80e7c4:	f800283a 	ret
  80e7c8:	047fffc4 	movi	r17,-1
  80e7cc:	003ff106 	br	80e794 <__alt_data_end+0xff80e794>

0080e7d0 <_write_r>:
  80e7d0:	defffd04 	addi	sp,sp,-12
  80e7d4:	2805883a 	mov	r2,r5
  80e7d8:	dc000015 	stw	r16,0(sp)
  80e7dc:	04002074 	movhi	r16,129
  80e7e0:	dc400115 	stw	r17,4(sp)
  80e7e4:	300b883a 	mov	r5,r6
  80e7e8:	84182904 	addi	r16,r16,24740
  80e7ec:	2023883a 	mov	r17,r4
  80e7f0:	380d883a 	mov	r6,r7
  80e7f4:	1009883a 	mov	r4,r2
  80e7f8:	dfc00215 	stw	ra,8(sp)
  80e7fc:	80000015 	stw	zero,0(r16)
  80e800:	08106500 	call	810650 <write>
  80e804:	00ffffc4 	movi	r3,-1
  80e808:	10c00526 	beq	r2,r3,80e820 <_write_r+0x50>
  80e80c:	dfc00217 	ldw	ra,8(sp)
  80e810:	dc400117 	ldw	r17,4(sp)
  80e814:	dc000017 	ldw	r16,0(sp)
  80e818:	dec00304 	addi	sp,sp,12
  80e81c:	f800283a 	ret
  80e820:	80c00017 	ldw	r3,0(r16)
  80e824:	183ff926 	beq	r3,zero,80e80c <__alt_data_end+0xff80e80c>
  80e828:	88c00015 	stw	r3,0(r17)
  80e82c:	003ff706 	br	80e80c <__alt_data_end+0xff80e80c>

0080e830 <_close_r>:
  80e830:	defffd04 	addi	sp,sp,-12
  80e834:	dc000015 	stw	r16,0(sp)
  80e838:	04002074 	movhi	r16,129
  80e83c:	dc400115 	stw	r17,4(sp)
  80e840:	84182904 	addi	r16,r16,24740
  80e844:	2023883a 	mov	r17,r4
  80e848:	2809883a 	mov	r4,r5
  80e84c:	dfc00215 	stw	ra,8(sp)
  80e850:	80000015 	stw	zero,0(r16)
  80e854:	080fd8c0 	call	80fd8c <close>
  80e858:	00ffffc4 	movi	r3,-1
  80e85c:	10c00526 	beq	r2,r3,80e874 <_close_r+0x44>
  80e860:	dfc00217 	ldw	ra,8(sp)
  80e864:	dc400117 	ldw	r17,4(sp)
  80e868:	dc000017 	ldw	r16,0(sp)
  80e86c:	dec00304 	addi	sp,sp,12
  80e870:	f800283a 	ret
  80e874:	80c00017 	ldw	r3,0(r16)
  80e878:	183ff926 	beq	r3,zero,80e860 <__alt_data_end+0xff80e860>
  80e87c:	88c00015 	stw	r3,0(r17)
  80e880:	003ff706 	br	80e860 <__alt_data_end+0xff80e860>

0080e884 <_calloc_r>:
  80e884:	298b383a 	mul	r5,r5,r6
  80e888:	defffe04 	addi	sp,sp,-8
  80e88c:	dfc00115 	stw	ra,4(sp)
  80e890:	dc000015 	stw	r16,0(sp)
  80e894:	080ac8c0 	call	80ac8c <_malloc_r>
  80e898:	10002926 	beq	r2,zero,80e940 <_calloc_r+0xbc>
  80e89c:	11bfff17 	ldw	r6,-4(r2)
  80e8a0:	1021883a 	mov	r16,r2
  80e8a4:	00bfff04 	movi	r2,-4
  80e8a8:	308c703a 	and	r6,r6,r2
  80e8ac:	00c00904 	movi	r3,36
  80e8b0:	308d883a 	add	r6,r6,r2
  80e8b4:	19801636 	bltu	r3,r6,80e910 <_calloc_r+0x8c>
  80e8b8:	008004c4 	movi	r2,19
  80e8bc:	11800b2e 	bgeu	r2,r6,80e8ec <_calloc_r+0x68>
  80e8c0:	80000015 	stw	zero,0(r16)
  80e8c4:	80000115 	stw	zero,4(r16)
  80e8c8:	008006c4 	movi	r2,27
  80e8cc:	11801a2e 	bgeu	r2,r6,80e938 <_calloc_r+0xb4>
  80e8d0:	80000215 	stw	zero,8(r16)
  80e8d4:	80000315 	stw	zero,12(r16)
  80e8d8:	30c0151e 	bne	r6,r3,80e930 <_calloc_r+0xac>
  80e8dc:	80000415 	stw	zero,16(r16)
  80e8e0:	80800604 	addi	r2,r16,24
  80e8e4:	80000515 	stw	zero,20(r16)
  80e8e8:	00000106 	br	80e8f0 <_calloc_r+0x6c>
  80e8ec:	8005883a 	mov	r2,r16
  80e8f0:	10000015 	stw	zero,0(r2)
  80e8f4:	10000115 	stw	zero,4(r2)
  80e8f8:	10000215 	stw	zero,8(r2)
  80e8fc:	8005883a 	mov	r2,r16
  80e900:	dfc00117 	ldw	ra,4(sp)
  80e904:	dc000017 	ldw	r16,0(sp)
  80e908:	dec00204 	addi	sp,sp,8
  80e90c:	f800283a 	ret
  80e910:	000b883a 	mov	r5,zero
  80e914:	8009883a 	mov	r4,r16
  80e918:	080b8200 	call	80b820 <memset>
  80e91c:	8005883a 	mov	r2,r16
  80e920:	dfc00117 	ldw	ra,4(sp)
  80e924:	dc000017 	ldw	r16,0(sp)
  80e928:	dec00204 	addi	sp,sp,8
  80e92c:	f800283a 	ret
  80e930:	80800404 	addi	r2,r16,16
  80e934:	003fee06 	br	80e8f0 <__alt_data_end+0xff80e8f0>
  80e938:	80800204 	addi	r2,r16,8
  80e93c:	003fec06 	br	80e8f0 <__alt_data_end+0xff80e8f0>
  80e940:	0005883a 	mov	r2,zero
  80e944:	003fee06 	br	80e900 <__alt_data_end+0xff80e900>

0080e948 <_fclose_r>:
  80e948:	28003926 	beq	r5,zero,80ea30 <_fclose_r+0xe8>
  80e94c:	defffc04 	addi	sp,sp,-16
  80e950:	dc400115 	stw	r17,4(sp)
  80e954:	dc000015 	stw	r16,0(sp)
  80e958:	dfc00315 	stw	ra,12(sp)
  80e95c:	dc800215 	stw	r18,8(sp)
  80e960:	2023883a 	mov	r17,r4
  80e964:	2821883a 	mov	r16,r5
  80e968:	20000226 	beq	r4,zero,80e974 <_fclose_r+0x2c>
  80e96c:	20800e17 	ldw	r2,56(r4)
  80e970:	10002726 	beq	r2,zero,80ea10 <_fclose_r+0xc8>
  80e974:	8080030f 	ldh	r2,12(r16)
  80e978:	1000071e 	bne	r2,zero,80e998 <_fclose_r+0x50>
  80e97c:	0005883a 	mov	r2,zero
  80e980:	dfc00317 	ldw	ra,12(sp)
  80e984:	dc800217 	ldw	r18,8(sp)
  80e988:	dc400117 	ldw	r17,4(sp)
  80e98c:	dc000017 	ldw	r16,0(sp)
  80e990:	dec00404 	addi	sp,sp,16
  80e994:	f800283a 	ret
  80e998:	800b883a 	mov	r5,r16
  80e99c:	8809883a 	mov	r4,r17
  80e9a0:	08099340 	call	809934 <__sflush_r>
  80e9a4:	1025883a 	mov	r18,r2
  80e9a8:	80800b17 	ldw	r2,44(r16)
  80e9ac:	10000426 	beq	r2,zero,80e9c0 <_fclose_r+0x78>
  80e9b0:	81400717 	ldw	r5,28(r16)
  80e9b4:	8809883a 	mov	r4,r17
  80e9b8:	103ee83a 	callr	r2
  80e9bc:	10001616 	blt	r2,zero,80ea18 <_fclose_r+0xd0>
  80e9c0:	8080030b 	ldhu	r2,12(r16)
  80e9c4:	1080200c 	andi	r2,r2,128
  80e9c8:	1000151e 	bne	r2,zero,80ea20 <_fclose_r+0xd8>
  80e9cc:	81400c17 	ldw	r5,48(r16)
  80e9d0:	28000526 	beq	r5,zero,80e9e8 <_fclose_r+0xa0>
  80e9d4:	80801004 	addi	r2,r16,64
  80e9d8:	28800226 	beq	r5,r2,80e9e4 <_fclose_r+0x9c>
  80e9dc:	8809883a 	mov	r4,r17
  80e9e0:	080a0a00 	call	80a0a0 <_free_r>
  80e9e4:	80000c15 	stw	zero,48(r16)
  80e9e8:	81401117 	ldw	r5,68(r16)
  80e9ec:	28000326 	beq	r5,zero,80e9fc <_fclose_r+0xb4>
  80e9f0:	8809883a 	mov	r4,r17
  80e9f4:	080a0a00 	call	80a0a0 <_free_r>
  80e9f8:	80001115 	stw	zero,68(r16)
  80e9fc:	0809f3c0 	call	809f3c <__sfp_lock_acquire>
  80ea00:	8000030d 	sth	zero,12(r16)
  80ea04:	0809f400 	call	809f40 <__sfp_lock_release>
  80ea08:	9005883a 	mov	r2,r18
  80ea0c:	003fdc06 	br	80e980 <__alt_data_end+0xff80e980>
  80ea10:	0809f2c0 	call	809f2c <__sinit>
  80ea14:	003fd706 	br	80e974 <__alt_data_end+0xff80e974>
  80ea18:	04bfffc4 	movi	r18,-1
  80ea1c:	003fe806 	br	80e9c0 <__alt_data_end+0xff80e9c0>
  80ea20:	81400417 	ldw	r5,16(r16)
  80ea24:	8809883a 	mov	r4,r17
  80ea28:	080a0a00 	call	80a0a0 <_free_r>
  80ea2c:	003fe706 	br	80e9cc <__alt_data_end+0xff80e9cc>
  80ea30:	0005883a 	mov	r2,zero
  80ea34:	f800283a 	ret

0080ea38 <fclose>:
  80ea38:	00802074 	movhi	r2,129
  80ea3c:	10915904 	addi	r2,r2,17764
  80ea40:	200b883a 	mov	r5,r4
  80ea44:	11000017 	ldw	r4,0(r2)
  80ea48:	080e9481 	jmpi	80e948 <_fclose_r>

0080ea4c <__fputwc>:
  80ea4c:	defff804 	addi	sp,sp,-32
  80ea50:	dcc00415 	stw	r19,16(sp)
  80ea54:	dc800315 	stw	r18,12(sp)
  80ea58:	dc000115 	stw	r16,4(sp)
  80ea5c:	dfc00715 	stw	ra,28(sp)
  80ea60:	dd400615 	stw	r21,24(sp)
  80ea64:	dd000515 	stw	r20,20(sp)
  80ea68:	dc400215 	stw	r17,8(sp)
  80ea6c:	2027883a 	mov	r19,r4
  80ea70:	2825883a 	mov	r18,r5
  80ea74:	3021883a 	mov	r16,r6
  80ea78:	080aa7c0 	call	80aa7c <__locale_mb_cur_max>
  80ea7c:	00c00044 	movi	r3,1
  80ea80:	10c03e26 	beq	r2,r3,80eb7c <__fputwc+0x130>
  80ea84:	81c01704 	addi	r7,r16,92
  80ea88:	900d883a 	mov	r6,r18
  80ea8c:	d80b883a 	mov	r5,sp
  80ea90:	9809883a 	mov	r4,r19
  80ea94:	080ef1c0 	call	80ef1c <_wcrtomb_r>
  80ea98:	1029883a 	mov	r20,r2
  80ea9c:	00bfffc4 	movi	r2,-1
  80eaa0:	a0802026 	beq	r20,r2,80eb24 <__fputwc+0xd8>
  80eaa4:	d9400003 	ldbu	r5,0(sp)
  80eaa8:	a0001c26 	beq	r20,zero,80eb1c <__fputwc+0xd0>
  80eaac:	0023883a 	mov	r17,zero
  80eab0:	05400284 	movi	r21,10
  80eab4:	00000906 	br	80eadc <__fputwc+0x90>
  80eab8:	80800017 	ldw	r2,0(r16)
  80eabc:	11400005 	stb	r5,0(r2)
  80eac0:	80c00017 	ldw	r3,0(r16)
  80eac4:	18c00044 	addi	r3,r3,1
  80eac8:	80c00015 	stw	r3,0(r16)
  80eacc:	8c400044 	addi	r17,r17,1
  80ead0:	dc45883a 	add	r2,sp,r17
  80ead4:	8d00112e 	bgeu	r17,r20,80eb1c <__fputwc+0xd0>
  80ead8:	11400003 	ldbu	r5,0(r2)
  80eadc:	80c00217 	ldw	r3,8(r16)
  80eae0:	18ffffc4 	addi	r3,r3,-1
  80eae4:	80c00215 	stw	r3,8(r16)
  80eae8:	183ff30e 	bge	r3,zero,80eab8 <__alt_data_end+0xff80eab8>
  80eaec:	80800617 	ldw	r2,24(r16)
  80eaf0:	18801916 	blt	r3,r2,80eb58 <__fputwc+0x10c>
  80eaf4:	80800017 	ldw	r2,0(r16)
  80eaf8:	11400005 	stb	r5,0(r2)
  80eafc:	80800017 	ldw	r2,0(r16)
  80eb00:	10c00003 	ldbu	r3,0(r2)
  80eb04:	10800044 	addi	r2,r2,1
  80eb08:	1d402326 	beq	r3,r21,80eb98 <__fputwc+0x14c>
  80eb0c:	80800015 	stw	r2,0(r16)
  80eb10:	8c400044 	addi	r17,r17,1
  80eb14:	dc45883a 	add	r2,sp,r17
  80eb18:	8d3fef36 	bltu	r17,r20,80ead8 <__alt_data_end+0xff80ead8>
  80eb1c:	9005883a 	mov	r2,r18
  80eb20:	00000406 	br	80eb34 <__fputwc+0xe8>
  80eb24:	80c0030b 	ldhu	r3,12(r16)
  80eb28:	a005883a 	mov	r2,r20
  80eb2c:	18c01014 	ori	r3,r3,64
  80eb30:	80c0030d 	sth	r3,12(r16)
  80eb34:	dfc00717 	ldw	ra,28(sp)
  80eb38:	dd400617 	ldw	r21,24(sp)
  80eb3c:	dd000517 	ldw	r20,20(sp)
  80eb40:	dcc00417 	ldw	r19,16(sp)
  80eb44:	dc800317 	ldw	r18,12(sp)
  80eb48:	dc400217 	ldw	r17,8(sp)
  80eb4c:	dc000117 	ldw	r16,4(sp)
  80eb50:	dec00804 	addi	sp,sp,32
  80eb54:	f800283a 	ret
  80eb58:	800d883a 	mov	r6,r16
  80eb5c:	29403fcc 	andi	r5,r5,255
  80eb60:	9809883a 	mov	r4,r19
  80eb64:	080edc40 	call	80edc4 <__swbuf_r>
  80eb68:	10bfffe0 	cmpeqi	r2,r2,-1
  80eb6c:	10803fcc 	andi	r2,r2,255
  80eb70:	103fd626 	beq	r2,zero,80eacc <__alt_data_end+0xff80eacc>
  80eb74:	00bfffc4 	movi	r2,-1
  80eb78:	003fee06 	br	80eb34 <__alt_data_end+0xff80eb34>
  80eb7c:	90ffffc4 	addi	r3,r18,-1
  80eb80:	01003f84 	movi	r4,254
  80eb84:	20ffbf36 	bltu	r4,r3,80ea84 <__alt_data_end+0xff80ea84>
  80eb88:	900b883a 	mov	r5,r18
  80eb8c:	dc800005 	stb	r18,0(sp)
  80eb90:	1029883a 	mov	r20,r2
  80eb94:	003fc506 	br	80eaac <__alt_data_end+0xff80eaac>
  80eb98:	800d883a 	mov	r6,r16
  80eb9c:	a80b883a 	mov	r5,r21
  80eba0:	9809883a 	mov	r4,r19
  80eba4:	080edc40 	call	80edc4 <__swbuf_r>
  80eba8:	10bfffe0 	cmpeqi	r2,r2,-1
  80ebac:	003fef06 	br	80eb6c <__alt_data_end+0xff80eb6c>

0080ebb0 <_fputwc_r>:
  80ebb0:	3080030b 	ldhu	r2,12(r6)
  80ebb4:	10c8000c 	andi	r3,r2,8192
  80ebb8:	1800051e 	bne	r3,zero,80ebd0 <_fputwc_r+0x20>
  80ebbc:	30c01917 	ldw	r3,100(r6)
  80ebc0:	10880014 	ori	r2,r2,8192
  80ebc4:	3080030d 	sth	r2,12(r6)
  80ebc8:	18880014 	ori	r2,r3,8192
  80ebcc:	30801915 	stw	r2,100(r6)
  80ebd0:	080ea4c1 	jmpi	80ea4c <__fputwc>

0080ebd4 <fputwc>:
  80ebd4:	00802074 	movhi	r2,129
  80ebd8:	defffc04 	addi	sp,sp,-16
  80ebdc:	10915904 	addi	r2,r2,17764
  80ebe0:	dc000115 	stw	r16,4(sp)
  80ebe4:	14000017 	ldw	r16,0(r2)
  80ebe8:	dc400215 	stw	r17,8(sp)
  80ebec:	dfc00315 	stw	ra,12(sp)
  80ebf0:	2023883a 	mov	r17,r4
  80ebf4:	80000226 	beq	r16,zero,80ec00 <fputwc+0x2c>
  80ebf8:	80800e17 	ldw	r2,56(r16)
  80ebfc:	10001026 	beq	r2,zero,80ec40 <fputwc+0x6c>
  80ec00:	2880030b 	ldhu	r2,12(r5)
  80ec04:	10c8000c 	andi	r3,r2,8192
  80ec08:	1800051e 	bne	r3,zero,80ec20 <fputwc+0x4c>
  80ec0c:	28c01917 	ldw	r3,100(r5)
  80ec10:	10880014 	ori	r2,r2,8192
  80ec14:	2880030d 	sth	r2,12(r5)
  80ec18:	18880014 	ori	r2,r3,8192
  80ec1c:	28801915 	stw	r2,100(r5)
  80ec20:	280d883a 	mov	r6,r5
  80ec24:	8009883a 	mov	r4,r16
  80ec28:	880b883a 	mov	r5,r17
  80ec2c:	dfc00317 	ldw	ra,12(sp)
  80ec30:	dc400217 	ldw	r17,8(sp)
  80ec34:	dc000117 	ldw	r16,4(sp)
  80ec38:	dec00404 	addi	sp,sp,16
  80ec3c:	080ea4c1 	jmpi	80ea4c <__fputwc>
  80ec40:	8009883a 	mov	r4,r16
  80ec44:	d9400015 	stw	r5,0(sp)
  80ec48:	0809f2c0 	call	809f2c <__sinit>
  80ec4c:	d9400017 	ldw	r5,0(sp)
  80ec50:	003feb06 	br	80ec00 <__alt_data_end+0xff80ec00>

0080ec54 <_fstat_r>:
  80ec54:	defffd04 	addi	sp,sp,-12
  80ec58:	2805883a 	mov	r2,r5
  80ec5c:	dc000015 	stw	r16,0(sp)
  80ec60:	04002074 	movhi	r16,129
  80ec64:	dc400115 	stw	r17,4(sp)
  80ec68:	84182904 	addi	r16,r16,24740
  80ec6c:	2023883a 	mov	r17,r4
  80ec70:	300b883a 	mov	r5,r6
  80ec74:	1009883a 	mov	r4,r2
  80ec78:	dfc00215 	stw	ra,8(sp)
  80ec7c:	80000015 	stw	zero,0(r16)
  80ec80:	080fec40 	call	80fec4 <fstat>
  80ec84:	00ffffc4 	movi	r3,-1
  80ec88:	10c00526 	beq	r2,r3,80eca0 <_fstat_r+0x4c>
  80ec8c:	dfc00217 	ldw	ra,8(sp)
  80ec90:	dc400117 	ldw	r17,4(sp)
  80ec94:	dc000017 	ldw	r16,0(sp)
  80ec98:	dec00304 	addi	sp,sp,12
  80ec9c:	f800283a 	ret
  80eca0:	80c00017 	ldw	r3,0(r16)
  80eca4:	183ff926 	beq	r3,zero,80ec8c <__alt_data_end+0xff80ec8c>
  80eca8:	88c00015 	stw	r3,0(r17)
  80ecac:	003ff706 	br	80ec8c <__alt_data_end+0xff80ec8c>

0080ecb0 <_isatty_r>:
  80ecb0:	defffd04 	addi	sp,sp,-12
  80ecb4:	dc000015 	stw	r16,0(sp)
  80ecb8:	04002074 	movhi	r16,129
  80ecbc:	dc400115 	stw	r17,4(sp)
  80ecc0:	84182904 	addi	r16,r16,24740
  80ecc4:	2023883a 	mov	r17,r4
  80ecc8:	2809883a 	mov	r4,r5
  80eccc:	dfc00215 	stw	ra,8(sp)
  80ecd0:	80000015 	stw	zero,0(r16)
  80ecd4:	080ffb00 	call	80ffb0 <isatty>
  80ecd8:	00ffffc4 	movi	r3,-1
  80ecdc:	10c00526 	beq	r2,r3,80ecf4 <_isatty_r+0x44>
  80ece0:	dfc00217 	ldw	ra,8(sp)
  80ece4:	dc400117 	ldw	r17,4(sp)
  80ece8:	dc000017 	ldw	r16,0(sp)
  80ecec:	dec00304 	addi	sp,sp,12
  80ecf0:	f800283a 	ret
  80ecf4:	80c00017 	ldw	r3,0(r16)
  80ecf8:	183ff926 	beq	r3,zero,80ece0 <__alt_data_end+0xff80ece0>
  80ecfc:	88c00015 	stw	r3,0(r17)
  80ed00:	003ff706 	br	80ece0 <__alt_data_end+0xff80ece0>

0080ed04 <_lseek_r>:
  80ed04:	defffd04 	addi	sp,sp,-12
  80ed08:	2805883a 	mov	r2,r5
  80ed0c:	dc000015 	stw	r16,0(sp)
  80ed10:	04002074 	movhi	r16,129
  80ed14:	dc400115 	stw	r17,4(sp)
  80ed18:	300b883a 	mov	r5,r6
  80ed1c:	84182904 	addi	r16,r16,24740
  80ed20:	2023883a 	mov	r17,r4
  80ed24:	380d883a 	mov	r6,r7
  80ed28:	1009883a 	mov	r4,r2
  80ed2c:	dfc00215 	stw	ra,8(sp)
  80ed30:	80000015 	stw	zero,0(r16)
  80ed34:	081017c0 	call	81017c <lseek>
  80ed38:	00ffffc4 	movi	r3,-1
  80ed3c:	10c00526 	beq	r2,r3,80ed54 <_lseek_r+0x50>
  80ed40:	dfc00217 	ldw	ra,8(sp)
  80ed44:	dc400117 	ldw	r17,4(sp)
  80ed48:	dc000017 	ldw	r16,0(sp)
  80ed4c:	dec00304 	addi	sp,sp,12
  80ed50:	f800283a 	ret
  80ed54:	80c00017 	ldw	r3,0(r16)
  80ed58:	183ff926 	beq	r3,zero,80ed40 <__alt_data_end+0xff80ed40>
  80ed5c:	88c00015 	stw	r3,0(r17)
  80ed60:	003ff706 	br	80ed40 <__alt_data_end+0xff80ed40>

0080ed64 <_read_r>:
  80ed64:	defffd04 	addi	sp,sp,-12
  80ed68:	2805883a 	mov	r2,r5
  80ed6c:	dc000015 	stw	r16,0(sp)
  80ed70:	04002074 	movhi	r16,129
  80ed74:	dc400115 	stw	r17,4(sp)
  80ed78:	300b883a 	mov	r5,r6
  80ed7c:	84182904 	addi	r16,r16,24740
  80ed80:	2023883a 	mov	r17,r4
  80ed84:	380d883a 	mov	r6,r7
  80ed88:	1009883a 	mov	r4,r2
  80ed8c:	dfc00215 	stw	ra,8(sp)
  80ed90:	80000015 	stw	zero,0(r16)
  80ed94:	08103500 	call	810350 <read>
  80ed98:	00ffffc4 	movi	r3,-1
  80ed9c:	10c00526 	beq	r2,r3,80edb4 <_read_r+0x50>
  80eda0:	dfc00217 	ldw	ra,8(sp)
  80eda4:	dc400117 	ldw	r17,4(sp)
  80eda8:	dc000017 	ldw	r16,0(sp)
  80edac:	dec00304 	addi	sp,sp,12
  80edb0:	f800283a 	ret
  80edb4:	80c00017 	ldw	r3,0(r16)
  80edb8:	183ff926 	beq	r3,zero,80eda0 <__alt_data_end+0xff80eda0>
  80edbc:	88c00015 	stw	r3,0(r17)
  80edc0:	003ff706 	br	80eda0 <__alt_data_end+0xff80eda0>

0080edc4 <__swbuf_r>:
  80edc4:	defffb04 	addi	sp,sp,-20
  80edc8:	dcc00315 	stw	r19,12(sp)
  80edcc:	dc800215 	stw	r18,8(sp)
  80edd0:	dc000015 	stw	r16,0(sp)
  80edd4:	dfc00415 	stw	ra,16(sp)
  80edd8:	dc400115 	stw	r17,4(sp)
  80eddc:	2025883a 	mov	r18,r4
  80ede0:	2827883a 	mov	r19,r5
  80ede4:	3021883a 	mov	r16,r6
  80ede8:	20000226 	beq	r4,zero,80edf4 <__swbuf_r+0x30>
  80edec:	20800e17 	ldw	r2,56(r4)
  80edf0:	10004226 	beq	r2,zero,80eefc <__swbuf_r+0x138>
  80edf4:	80800617 	ldw	r2,24(r16)
  80edf8:	8100030b 	ldhu	r4,12(r16)
  80edfc:	80800215 	stw	r2,8(r16)
  80ee00:	2080020c 	andi	r2,r4,8
  80ee04:	10003626 	beq	r2,zero,80eee0 <__swbuf_r+0x11c>
  80ee08:	80c00417 	ldw	r3,16(r16)
  80ee0c:	18003426 	beq	r3,zero,80eee0 <__swbuf_r+0x11c>
  80ee10:	2088000c 	andi	r2,r4,8192
  80ee14:	9c403fcc 	andi	r17,r19,255
  80ee18:	10001a26 	beq	r2,zero,80ee84 <__swbuf_r+0xc0>
  80ee1c:	80800017 	ldw	r2,0(r16)
  80ee20:	81000517 	ldw	r4,20(r16)
  80ee24:	10c7c83a 	sub	r3,r2,r3
  80ee28:	1900200e 	bge	r3,r4,80eeac <__swbuf_r+0xe8>
  80ee2c:	18c00044 	addi	r3,r3,1
  80ee30:	81000217 	ldw	r4,8(r16)
  80ee34:	11400044 	addi	r5,r2,1
  80ee38:	81400015 	stw	r5,0(r16)
  80ee3c:	213fffc4 	addi	r4,r4,-1
  80ee40:	81000215 	stw	r4,8(r16)
  80ee44:	14c00005 	stb	r19,0(r2)
  80ee48:	80800517 	ldw	r2,20(r16)
  80ee4c:	10c01e26 	beq	r2,r3,80eec8 <__swbuf_r+0x104>
  80ee50:	8080030b 	ldhu	r2,12(r16)
  80ee54:	1080004c 	andi	r2,r2,1
  80ee58:	10000226 	beq	r2,zero,80ee64 <__swbuf_r+0xa0>
  80ee5c:	00800284 	movi	r2,10
  80ee60:	88801926 	beq	r17,r2,80eec8 <__swbuf_r+0x104>
  80ee64:	8805883a 	mov	r2,r17
  80ee68:	dfc00417 	ldw	ra,16(sp)
  80ee6c:	dcc00317 	ldw	r19,12(sp)
  80ee70:	dc800217 	ldw	r18,8(sp)
  80ee74:	dc400117 	ldw	r17,4(sp)
  80ee78:	dc000017 	ldw	r16,0(sp)
  80ee7c:	dec00504 	addi	sp,sp,20
  80ee80:	f800283a 	ret
  80ee84:	81401917 	ldw	r5,100(r16)
  80ee88:	00b7ffc4 	movi	r2,-8193
  80ee8c:	21080014 	ori	r4,r4,8192
  80ee90:	2884703a 	and	r2,r5,r2
  80ee94:	80801915 	stw	r2,100(r16)
  80ee98:	80800017 	ldw	r2,0(r16)
  80ee9c:	8100030d 	sth	r4,12(r16)
  80eea0:	81000517 	ldw	r4,20(r16)
  80eea4:	10c7c83a 	sub	r3,r2,r3
  80eea8:	193fe016 	blt	r3,r4,80ee2c <__alt_data_end+0xff80ee2c>
  80eeac:	800b883a 	mov	r5,r16
  80eeb0:	9009883a 	mov	r4,r18
  80eeb4:	0809b500 	call	809b50 <_fflush_r>
  80eeb8:	1000071e 	bne	r2,zero,80eed8 <__swbuf_r+0x114>
  80eebc:	80800017 	ldw	r2,0(r16)
  80eec0:	00c00044 	movi	r3,1
  80eec4:	003fda06 	br	80ee30 <__alt_data_end+0xff80ee30>
  80eec8:	800b883a 	mov	r5,r16
  80eecc:	9009883a 	mov	r4,r18
  80eed0:	0809b500 	call	809b50 <_fflush_r>
  80eed4:	103fe326 	beq	r2,zero,80ee64 <__alt_data_end+0xff80ee64>
  80eed8:	00bfffc4 	movi	r2,-1
  80eedc:	003fe206 	br	80ee68 <__alt_data_end+0xff80ee68>
  80eee0:	800b883a 	mov	r5,r16
  80eee4:	9009883a 	mov	r4,r18
  80eee8:	0807f580 	call	807f58 <__swsetup_r>
  80eeec:	103ffa1e 	bne	r2,zero,80eed8 <__alt_data_end+0xff80eed8>
  80eef0:	8100030b 	ldhu	r4,12(r16)
  80eef4:	80c00417 	ldw	r3,16(r16)
  80eef8:	003fc506 	br	80ee10 <__alt_data_end+0xff80ee10>
  80eefc:	0809f2c0 	call	809f2c <__sinit>
  80ef00:	003fbc06 	br	80edf4 <__alt_data_end+0xff80edf4>

0080ef04 <__swbuf>:
  80ef04:	00802074 	movhi	r2,129
  80ef08:	10915904 	addi	r2,r2,17764
  80ef0c:	280d883a 	mov	r6,r5
  80ef10:	200b883a 	mov	r5,r4
  80ef14:	11000017 	ldw	r4,0(r2)
  80ef18:	080edc41 	jmpi	80edc4 <__swbuf_r>

0080ef1c <_wcrtomb_r>:
  80ef1c:	defff604 	addi	sp,sp,-40
  80ef20:	00802074 	movhi	r2,129
  80ef24:	dc800815 	stw	r18,32(sp)
  80ef28:	dc400715 	stw	r17,28(sp)
  80ef2c:	dc000615 	stw	r16,24(sp)
  80ef30:	10915d04 	addi	r2,r2,17780
  80ef34:	dfc00915 	stw	ra,36(sp)
  80ef38:	2021883a 	mov	r16,r4
  80ef3c:	3823883a 	mov	r17,r7
  80ef40:	14800017 	ldw	r18,0(r2)
  80ef44:	28001426 	beq	r5,zero,80ef98 <_wcrtomb_r+0x7c>
  80ef48:	d9400415 	stw	r5,16(sp)
  80ef4c:	d9800515 	stw	r6,20(sp)
  80ef50:	080aa700 	call	80aa70 <__locale_charset>
  80ef54:	d9800517 	ldw	r6,20(sp)
  80ef58:	d9400417 	ldw	r5,16(sp)
  80ef5c:	100f883a 	mov	r7,r2
  80ef60:	dc400015 	stw	r17,0(sp)
  80ef64:	8009883a 	mov	r4,r16
  80ef68:	903ee83a 	callr	r18
  80ef6c:	00ffffc4 	movi	r3,-1
  80ef70:	10c0031e 	bne	r2,r3,80ef80 <_wcrtomb_r+0x64>
  80ef74:	88000015 	stw	zero,0(r17)
  80ef78:	00c02284 	movi	r3,138
  80ef7c:	80c00015 	stw	r3,0(r16)
  80ef80:	dfc00917 	ldw	ra,36(sp)
  80ef84:	dc800817 	ldw	r18,32(sp)
  80ef88:	dc400717 	ldw	r17,28(sp)
  80ef8c:	dc000617 	ldw	r16,24(sp)
  80ef90:	dec00a04 	addi	sp,sp,40
  80ef94:	f800283a 	ret
  80ef98:	080aa700 	call	80aa70 <__locale_charset>
  80ef9c:	100f883a 	mov	r7,r2
  80efa0:	dc400015 	stw	r17,0(sp)
  80efa4:	000d883a 	mov	r6,zero
  80efa8:	d9400104 	addi	r5,sp,4
  80efac:	8009883a 	mov	r4,r16
  80efb0:	903ee83a 	callr	r18
  80efb4:	003fed06 	br	80ef6c <__alt_data_end+0xff80ef6c>

0080efb8 <wcrtomb>:
  80efb8:	defff604 	addi	sp,sp,-40
  80efbc:	00802074 	movhi	r2,129
  80efc0:	dc800615 	stw	r18,24(sp)
  80efc4:	dc400515 	stw	r17,20(sp)
  80efc8:	10915904 	addi	r2,r2,17764
  80efcc:	dfc00915 	stw	ra,36(sp)
  80efd0:	dd000815 	stw	r20,32(sp)
  80efd4:	dcc00715 	stw	r19,28(sp)
  80efd8:	dc000415 	stw	r16,16(sp)
  80efdc:	3025883a 	mov	r18,r6
  80efe0:	14400017 	ldw	r17,0(r2)
  80efe4:	20001926 	beq	r4,zero,80f04c <wcrtomb+0x94>
  80efe8:	00802074 	movhi	r2,129
  80efec:	10915d04 	addi	r2,r2,17780
  80eff0:	15000017 	ldw	r20,0(r2)
  80eff4:	2021883a 	mov	r16,r4
  80eff8:	2827883a 	mov	r19,r5
  80effc:	080aa700 	call	80aa70 <__locale_charset>
  80f000:	100f883a 	mov	r7,r2
  80f004:	dc800015 	stw	r18,0(sp)
  80f008:	980d883a 	mov	r6,r19
  80f00c:	800b883a 	mov	r5,r16
  80f010:	8809883a 	mov	r4,r17
  80f014:	a03ee83a 	callr	r20
  80f018:	00ffffc4 	movi	r3,-1
  80f01c:	10c0031e 	bne	r2,r3,80f02c <wcrtomb+0x74>
  80f020:	90000015 	stw	zero,0(r18)
  80f024:	00c02284 	movi	r3,138
  80f028:	88c00015 	stw	r3,0(r17)
  80f02c:	dfc00917 	ldw	ra,36(sp)
  80f030:	dd000817 	ldw	r20,32(sp)
  80f034:	dcc00717 	ldw	r19,28(sp)
  80f038:	dc800617 	ldw	r18,24(sp)
  80f03c:	dc400517 	ldw	r17,20(sp)
  80f040:	dc000417 	ldw	r16,16(sp)
  80f044:	dec00a04 	addi	sp,sp,40
  80f048:	f800283a 	ret
  80f04c:	00802074 	movhi	r2,129
  80f050:	10915d04 	addi	r2,r2,17780
  80f054:	14000017 	ldw	r16,0(r2)
  80f058:	080aa700 	call	80aa70 <__locale_charset>
  80f05c:	100f883a 	mov	r7,r2
  80f060:	dc800015 	stw	r18,0(sp)
  80f064:	000d883a 	mov	r6,zero
  80f068:	d9400104 	addi	r5,sp,4
  80f06c:	8809883a 	mov	r4,r17
  80f070:	803ee83a 	callr	r16
  80f074:	003fe806 	br	80f018 <__alt_data_end+0xff80f018>

0080f078 <__ascii_wctomb>:
  80f078:	28000526 	beq	r5,zero,80f090 <__ascii_wctomb+0x18>
  80f07c:	00803fc4 	movi	r2,255
  80f080:	11800536 	bltu	r2,r6,80f098 <__ascii_wctomb+0x20>
  80f084:	29800005 	stb	r6,0(r5)
  80f088:	00800044 	movi	r2,1
  80f08c:	f800283a 	ret
  80f090:	0005883a 	mov	r2,zero
  80f094:	f800283a 	ret
  80f098:	00802284 	movi	r2,138
  80f09c:	20800015 	stw	r2,0(r4)
  80f0a0:	00bfffc4 	movi	r2,-1
  80f0a4:	f800283a 	ret

0080f0a8 <_wctomb_r>:
  80f0a8:	00802074 	movhi	r2,129
  80f0ac:	defff904 	addi	sp,sp,-28
  80f0b0:	10915d04 	addi	r2,r2,17780
  80f0b4:	dfc00615 	stw	ra,24(sp)
  80f0b8:	dc400515 	stw	r17,20(sp)
  80f0bc:	dc000415 	stw	r16,16(sp)
  80f0c0:	3823883a 	mov	r17,r7
  80f0c4:	14000017 	ldw	r16,0(r2)
  80f0c8:	d9000115 	stw	r4,4(sp)
  80f0cc:	d9400215 	stw	r5,8(sp)
  80f0d0:	d9800315 	stw	r6,12(sp)
  80f0d4:	080aa700 	call	80aa70 <__locale_charset>
  80f0d8:	d9800317 	ldw	r6,12(sp)
  80f0dc:	d9400217 	ldw	r5,8(sp)
  80f0e0:	d9000117 	ldw	r4,4(sp)
  80f0e4:	100f883a 	mov	r7,r2
  80f0e8:	dc400015 	stw	r17,0(sp)
  80f0ec:	803ee83a 	callr	r16
  80f0f0:	dfc00617 	ldw	ra,24(sp)
  80f0f4:	dc400517 	ldw	r17,20(sp)
  80f0f8:	dc000417 	ldw	r16,16(sp)
  80f0fc:	dec00704 	addi	sp,sp,28
  80f100:	f800283a 	ret

0080f104 <__udivdi3>:
  80f104:	defff504 	addi	sp,sp,-44
  80f108:	dcc00415 	stw	r19,16(sp)
  80f10c:	dc000115 	stw	r16,4(sp)
  80f110:	dfc00a15 	stw	ra,40(sp)
  80f114:	df000915 	stw	fp,36(sp)
  80f118:	ddc00815 	stw	r23,32(sp)
  80f11c:	dd800715 	stw	r22,28(sp)
  80f120:	dd400615 	stw	r21,24(sp)
  80f124:	dd000515 	stw	r20,20(sp)
  80f128:	dc800315 	stw	r18,12(sp)
  80f12c:	dc400215 	stw	r17,8(sp)
  80f130:	2027883a 	mov	r19,r4
  80f134:	2821883a 	mov	r16,r5
  80f138:	3800411e 	bne	r7,zero,80f240 <__udivdi3+0x13c>
  80f13c:	3023883a 	mov	r17,r6
  80f140:	2025883a 	mov	r18,r4
  80f144:	2980522e 	bgeu	r5,r6,80f290 <__udivdi3+0x18c>
  80f148:	00bfffd4 	movui	r2,65535
  80f14c:	282d883a 	mov	r22,r5
  80f150:	1180a836 	bltu	r2,r6,80f3f4 <__udivdi3+0x2f0>
  80f154:	00803fc4 	movi	r2,255
  80f158:	1185803a 	cmpltu	r2,r2,r6
  80f15c:	100490fa 	slli	r2,r2,3
  80f160:	3086d83a 	srl	r3,r6,r2
  80f164:	01002074 	movhi	r4,129
  80f168:	2109ef04 	addi	r4,r4,10172
  80f16c:	20c7883a 	add	r3,r4,r3
  80f170:	18c00003 	ldbu	r3,0(r3)
  80f174:	1885883a 	add	r2,r3,r2
  80f178:	00c00804 	movi	r3,32
  80f17c:	1887c83a 	sub	r3,r3,r2
  80f180:	18000526 	beq	r3,zero,80f198 <__udivdi3+0x94>
  80f184:	80e0983a 	sll	r16,r16,r3
  80f188:	9884d83a 	srl	r2,r19,r2
  80f18c:	30e2983a 	sll	r17,r6,r3
  80f190:	98e4983a 	sll	r18,r19,r3
  80f194:	142cb03a 	or	r22,r2,r16
  80f198:	882ad43a 	srli	r21,r17,16
  80f19c:	b009883a 	mov	r4,r22
  80f1a0:	8d3fffcc 	andi	r20,r17,65535
  80f1a4:	a80b883a 	mov	r5,r21
  80f1a8:	0802a100 	call	802a10 <__umodsi3>
  80f1ac:	b009883a 	mov	r4,r22
  80f1b0:	a80b883a 	mov	r5,r21
  80f1b4:	1027883a 	mov	r19,r2
  80f1b8:	08029ac0 	call	8029ac <__udivsi3>
  80f1bc:	102d883a 	mov	r22,r2
  80f1c0:	9826943a 	slli	r19,r19,16
  80f1c4:	9004d43a 	srli	r2,r18,16
  80f1c8:	a5a1383a 	mul	r16,r20,r22
  80f1cc:	14c4b03a 	or	r2,r2,r19
  80f1d0:	1400052e 	bgeu	r2,r16,80f1e8 <__udivdi3+0xe4>
  80f1d4:	1445883a 	add	r2,r2,r17
  80f1d8:	b0ffffc4 	addi	r3,r22,-1
  80f1dc:	14400136 	bltu	r2,r17,80f1e4 <__udivdi3+0xe0>
  80f1e0:	14012336 	bltu	r2,r16,80f670 <__udivdi3+0x56c>
  80f1e4:	182d883a 	mov	r22,r3
  80f1e8:	1421c83a 	sub	r16,r2,r16
  80f1ec:	a80b883a 	mov	r5,r21
  80f1f0:	8009883a 	mov	r4,r16
  80f1f4:	0802a100 	call	802a10 <__umodsi3>
  80f1f8:	1027883a 	mov	r19,r2
  80f1fc:	a80b883a 	mov	r5,r21
  80f200:	8009883a 	mov	r4,r16
  80f204:	08029ac0 	call	8029ac <__udivsi3>
  80f208:	9826943a 	slli	r19,r19,16
  80f20c:	a0a9383a 	mul	r20,r20,r2
  80f210:	94bfffcc 	andi	r18,r18,65535
  80f214:	94e4b03a 	or	r18,r18,r19
  80f218:	9500052e 	bgeu	r18,r20,80f230 <__udivdi3+0x12c>
  80f21c:	8ca5883a 	add	r18,r17,r18
  80f220:	10ffffc4 	addi	r3,r2,-1
  80f224:	9440f136 	bltu	r18,r17,80f5ec <__udivdi3+0x4e8>
  80f228:	9500f02e 	bgeu	r18,r20,80f5ec <__udivdi3+0x4e8>
  80f22c:	10bfff84 	addi	r2,r2,-2
  80f230:	b00c943a 	slli	r6,r22,16
  80f234:	0007883a 	mov	r3,zero
  80f238:	3084b03a 	or	r2,r6,r2
  80f23c:	00005906 	br	80f3a4 <__udivdi3+0x2a0>
  80f240:	29c05636 	bltu	r5,r7,80f39c <__udivdi3+0x298>
  80f244:	00bfffd4 	movui	r2,65535
  80f248:	11c0622e 	bgeu	r2,r7,80f3d4 <__udivdi3+0x2d0>
  80f24c:	00804034 	movhi	r2,256
  80f250:	10bfffc4 	addi	r2,r2,-1
  80f254:	11c0ee36 	bltu	r2,r7,80f610 <__udivdi3+0x50c>
  80f258:	00800404 	movi	r2,16
  80f25c:	3886d83a 	srl	r3,r7,r2
  80f260:	01002074 	movhi	r4,129
  80f264:	2109ef04 	addi	r4,r4,10172
  80f268:	20c7883a 	add	r3,r4,r3
  80f26c:	18c00003 	ldbu	r3,0(r3)
  80f270:	05400804 	movi	r21,32
  80f274:	1885883a 	add	r2,r3,r2
  80f278:	a8abc83a 	sub	r21,r21,r2
  80f27c:	a800621e 	bne	r21,zero,80f408 <__udivdi3+0x304>
  80f280:	3c00e936 	bltu	r7,r16,80f628 <__udivdi3+0x524>
  80f284:	9985403a 	cmpgeu	r2,r19,r6
  80f288:	0007883a 	mov	r3,zero
  80f28c:	00004506 	br	80f3a4 <__udivdi3+0x2a0>
  80f290:	3000041e 	bne	r6,zero,80f2a4 <__udivdi3+0x1a0>
  80f294:	000b883a 	mov	r5,zero
  80f298:	01000044 	movi	r4,1
  80f29c:	08029ac0 	call	8029ac <__udivsi3>
  80f2a0:	1023883a 	mov	r17,r2
  80f2a4:	00bfffd4 	movui	r2,65535
  80f2a8:	14404e2e 	bgeu	r2,r17,80f3e4 <__udivdi3+0x2e0>
  80f2ac:	00804034 	movhi	r2,256
  80f2b0:	10bfffc4 	addi	r2,r2,-1
  80f2b4:	1440d836 	bltu	r2,r17,80f618 <__udivdi3+0x514>
  80f2b8:	00800404 	movi	r2,16
  80f2bc:	8886d83a 	srl	r3,r17,r2
  80f2c0:	01002074 	movhi	r4,129
  80f2c4:	2109ef04 	addi	r4,r4,10172
  80f2c8:	20c7883a 	add	r3,r4,r3
  80f2cc:	18c00003 	ldbu	r3,0(r3)
  80f2d0:	1885883a 	add	r2,r3,r2
  80f2d4:	00c00804 	movi	r3,32
  80f2d8:	1887c83a 	sub	r3,r3,r2
  80f2dc:	18008f1e 	bne	r3,zero,80f51c <__udivdi3+0x418>
  80f2e0:	882ad43a 	srli	r21,r17,16
  80f2e4:	8461c83a 	sub	r16,r16,r17
  80f2e8:	8d3fffcc 	andi	r20,r17,65535
  80f2ec:	00c00044 	movi	r3,1
  80f2f0:	8009883a 	mov	r4,r16
  80f2f4:	a80b883a 	mov	r5,r21
  80f2f8:	d8c00015 	stw	r3,0(sp)
  80f2fc:	0802a100 	call	802a10 <__umodsi3>
  80f300:	8009883a 	mov	r4,r16
  80f304:	a80b883a 	mov	r5,r21
  80f308:	1027883a 	mov	r19,r2
  80f30c:	08029ac0 	call	8029ac <__udivsi3>
  80f310:	9826943a 	slli	r19,r19,16
  80f314:	9008d43a 	srli	r4,r18,16
  80f318:	1521383a 	mul	r16,r2,r20
  80f31c:	102d883a 	mov	r22,r2
  80f320:	24c8b03a 	or	r4,r4,r19
  80f324:	d8c00017 	ldw	r3,0(sp)
  80f328:	2400052e 	bgeu	r4,r16,80f340 <__udivdi3+0x23c>
  80f32c:	2449883a 	add	r4,r4,r17
  80f330:	b0bfffc4 	addi	r2,r22,-1
  80f334:	24400136 	bltu	r4,r17,80f33c <__udivdi3+0x238>
  80f338:	2400ca36 	bltu	r4,r16,80f664 <__udivdi3+0x560>
  80f33c:	102d883a 	mov	r22,r2
  80f340:	2421c83a 	sub	r16,r4,r16
  80f344:	a80b883a 	mov	r5,r21
  80f348:	8009883a 	mov	r4,r16
  80f34c:	d8c00015 	stw	r3,0(sp)
  80f350:	0802a100 	call	802a10 <__umodsi3>
  80f354:	1027883a 	mov	r19,r2
  80f358:	a80b883a 	mov	r5,r21
  80f35c:	8009883a 	mov	r4,r16
  80f360:	08029ac0 	call	8029ac <__udivsi3>
  80f364:	9826943a 	slli	r19,r19,16
  80f368:	1529383a 	mul	r20,r2,r20
  80f36c:	94bfffcc 	andi	r18,r18,65535
  80f370:	94e4b03a 	or	r18,r18,r19
  80f374:	d8c00017 	ldw	r3,0(sp)
  80f378:	9500052e 	bgeu	r18,r20,80f390 <__udivdi3+0x28c>
  80f37c:	8ca5883a 	add	r18,r17,r18
  80f380:	113fffc4 	addi	r4,r2,-1
  80f384:	94409736 	bltu	r18,r17,80f5e4 <__udivdi3+0x4e0>
  80f388:	9500962e 	bgeu	r18,r20,80f5e4 <__udivdi3+0x4e0>
  80f38c:	10bfff84 	addi	r2,r2,-2
  80f390:	b00c943a 	slli	r6,r22,16
  80f394:	3084b03a 	or	r2,r6,r2
  80f398:	00000206 	br	80f3a4 <__udivdi3+0x2a0>
  80f39c:	0007883a 	mov	r3,zero
  80f3a0:	0005883a 	mov	r2,zero
  80f3a4:	dfc00a17 	ldw	ra,40(sp)
  80f3a8:	df000917 	ldw	fp,36(sp)
  80f3ac:	ddc00817 	ldw	r23,32(sp)
  80f3b0:	dd800717 	ldw	r22,28(sp)
  80f3b4:	dd400617 	ldw	r21,24(sp)
  80f3b8:	dd000517 	ldw	r20,20(sp)
  80f3bc:	dcc00417 	ldw	r19,16(sp)
  80f3c0:	dc800317 	ldw	r18,12(sp)
  80f3c4:	dc400217 	ldw	r17,8(sp)
  80f3c8:	dc000117 	ldw	r16,4(sp)
  80f3cc:	dec00b04 	addi	sp,sp,44
  80f3d0:	f800283a 	ret
  80f3d4:	00803fc4 	movi	r2,255
  80f3d8:	11c5803a 	cmpltu	r2,r2,r7
  80f3dc:	100490fa 	slli	r2,r2,3
  80f3e0:	003f9e06 	br	80f25c <__alt_data_end+0xff80f25c>
  80f3e4:	00803fc4 	movi	r2,255
  80f3e8:	1445803a 	cmpltu	r2,r2,r17
  80f3ec:	100490fa 	slli	r2,r2,3
  80f3f0:	003fb206 	br	80f2bc <__alt_data_end+0xff80f2bc>
  80f3f4:	00804034 	movhi	r2,256
  80f3f8:	10bfffc4 	addi	r2,r2,-1
  80f3fc:	11808836 	bltu	r2,r6,80f620 <__udivdi3+0x51c>
  80f400:	00800404 	movi	r2,16
  80f404:	003f5606 	br	80f160 <__alt_data_end+0xff80f160>
  80f408:	30aed83a 	srl	r23,r6,r2
  80f40c:	3d4e983a 	sll	r7,r7,r21
  80f410:	80acd83a 	srl	r22,r16,r2
  80f414:	9884d83a 	srl	r2,r19,r2
  80f418:	3deeb03a 	or	r23,r7,r23
  80f41c:	b824d43a 	srli	r18,r23,16
  80f420:	8560983a 	sll	r16,r16,r21
  80f424:	b009883a 	mov	r4,r22
  80f428:	900b883a 	mov	r5,r18
  80f42c:	3568983a 	sll	r20,r6,r21
  80f430:	1420b03a 	or	r16,r2,r16
  80f434:	0802a100 	call	802a10 <__umodsi3>
  80f438:	b009883a 	mov	r4,r22
  80f43c:	900b883a 	mov	r5,r18
  80f440:	1023883a 	mov	r17,r2
  80f444:	08029ac0 	call	8029ac <__udivsi3>
  80f448:	8808943a 	slli	r4,r17,16
  80f44c:	bf3fffcc 	andi	fp,r23,65535
  80f450:	8006d43a 	srli	r3,r16,16
  80f454:	e0a3383a 	mul	r17,fp,r2
  80f458:	100d883a 	mov	r6,r2
  80f45c:	1906b03a 	or	r3,r3,r4
  80f460:	1c40042e 	bgeu	r3,r17,80f474 <__udivdi3+0x370>
  80f464:	1dc7883a 	add	r3,r3,r23
  80f468:	10bfffc4 	addi	r2,r2,-1
  80f46c:	1dc0752e 	bgeu	r3,r23,80f644 <__udivdi3+0x540>
  80f470:	100d883a 	mov	r6,r2
  80f474:	1c63c83a 	sub	r17,r3,r17
  80f478:	900b883a 	mov	r5,r18
  80f47c:	8809883a 	mov	r4,r17
  80f480:	d9800015 	stw	r6,0(sp)
  80f484:	0802a100 	call	802a10 <__umodsi3>
  80f488:	102d883a 	mov	r22,r2
  80f48c:	8809883a 	mov	r4,r17
  80f490:	900b883a 	mov	r5,r18
  80f494:	08029ac0 	call	8029ac <__udivsi3>
  80f498:	b02c943a 	slli	r22,r22,16
  80f49c:	e089383a 	mul	r4,fp,r2
  80f4a0:	843fffcc 	andi	r16,r16,65535
  80f4a4:	85a0b03a 	or	r16,r16,r22
  80f4a8:	d9800017 	ldw	r6,0(sp)
  80f4ac:	8100042e 	bgeu	r16,r4,80f4c0 <__udivdi3+0x3bc>
  80f4b0:	85e1883a 	add	r16,r16,r23
  80f4b4:	10ffffc4 	addi	r3,r2,-1
  80f4b8:	85c05e2e 	bgeu	r16,r23,80f634 <__udivdi3+0x530>
  80f4bc:	1805883a 	mov	r2,r3
  80f4c0:	300c943a 	slli	r6,r6,16
  80f4c4:	a17fffcc 	andi	r5,r20,65535
  80f4c8:	a028d43a 	srli	r20,r20,16
  80f4cc:	3084b03a 	or	r2,r6,r2
  80f4d0:	10ffffcc 	andi	r3,r2,65535
  80f4d4:	100cd43a 	srli	r6,r2,16
  80f4d8:	194f383a 	mul	r7,r3,r5
  80f4dc:	1d07383a 	mul	r3,r3,r20
  80f4e0:	314b383a 	mul	r5,r6,r5
  80f4e4:	3810d43a 	srli	r8,r7,16
  80f4e8:	8121c83a 	sub	r16,r16,r4
  80f4ec:	1947883a 	add	r3,r3,r5
  80f4f0:	40c7883a 	add	r3,r8,r3
  80f4f4:	350d383a 	mul	r6,r6,r20
  80f4f8:	1940022e 	bgeu	r3,r5,80f504 <__udivdi3+0x400>
  80f4fc:	01000074 	movhi	r4,1
  80f500:	310d883a 	add	r6,r6,r4
  80f504:	1828d43a 	srli	r20,r3,16
  80f508:	a18d883a 	add	r6,r20,r6
  80f50c:	81803e36 	bltu	r16,r6,80f608 <__udivdi3+0x504>
  80f510:	81803826 	beq	r16,r6,80f5f4 <__udivdi3+0x4f0>
  80f514:	0007883a 	mov	r3,zero
  80f518:	003fa206 	br	80f3a4 <__alt_data_end+0xff80f3a4>
  80f51c:	88e2983a 	sll	r17,r17,r3
  80f520:	80a8d83a 	srl	r20,r16,r2
  80f524:	80e0983a 	sll	r16,r16,r3
  80f528:	882ad43a 	srli	r21,r17,16
  80f52c:	9884d83a 	srl	r2,r19,r2
  80f530:	a009883a 	mov	r4,r20
  80f534:	a80b883a 	mov	r5,r21
  80f538:	142eb03a 	or	r23,r2,r16
  80f53c:	98e4983a 	sll	r18,r19,r3
  80f540:	0802a100 	call	802a10 <__umodsi3>
  80f544:	a009883a 	mov	r4,r20
  80f548:	a80b883a 	mov	r5,r21
  80f54c:	1021883a 	mov	r16,r2
  80f550:	08029ac0 	call	8029ac <__udivsi3>
  80f554:	1039883a 	mov	fp,r2
  80f558:	8d3fffcc 	andi	r20,r17,65535
  80f55c:	8020943a 	slli	r16,r16,16
  80f560:	b804d43a 	srli	r2,r23,16
  80f564:	a72d383a 	mul	r22,r20,fp
  80f568:	1404b03a 	or	r2,r2,r16
  80f56c:	1580062e 	bgeu	r2,r22,80f588 <__udivdi3+0x484>
  80f570:	1445883a 	add	r2,r2,r17
  80f574:	e0ffffc4 	addi	r3,fp,-1
  80f578:	14403836 	bltu	r2,r17,80f65c <__udivdi3+0x558>
  80f57c:	1580372e 	bgeu	r2,r22,80f65c <__udivdi3+0x558>
  80f580:	e73fff84 	addi	fp,fp,-2
  80f584:	1445883a 	add	r2,r2,r17
  80f588:	15adc83a 	sub	r22,r2,r22
  80f58c:	a80b883a 	mov	r5,r21
  80f590:	b009883a 	mov	r4,r22
  80f594:	0802a100 	call	802a10 <__umodsi3>
  80f598:	1027883a 	mov	r19,r2
  80f59c:	b009883a 	mov	r4,r22
  80f5a0:	a80b883a 	mov	r5,r21
  80f5a4:	08029ac0 	call	8029ac <__udivsi3>
  80f5a8:	9826943a 	slli	r19,r19,16
  80f5ac:	a0a1383a 	mul	r16,r20,r2
  80f5b0:	b93fffcc 	andi	r4,r23,65535
  80f5b4:	24c8b03a 	or	r4,r4,r19
  80f5b8:	2400062e 	bgeu	r4,r16,80f5d4 <__udivdi3+0x4d0>
  80f5bc:	2449883a 	add	r4,r4,r17
  80f5c0:	10ffffc4 	addi	r3,r2,-1
  80f5c4:	24402336 	bltu	r4,r17,80f654 <__udivdi3+0x550>
  80f5c8:	2400222e 	bgeu	r4,r16,80f654 <__udivdi3+0x550>
  80f5cc:	10bfff84 	addi	r2,r2,-2
  80f5d0:	2449883a 	add	r4,r4,r17
  80f5d4:	e038943a 	slli	fp,fp,16
  80f5d8:	2421c83a 	sub	r16,r4,r16
  80f5dc:	e086b03a 	or	r3,fp,r2
  80f5e0:	003f4306 	br	80f2f0 <__alt_data_end+0xff80f2f0>
  80f5e4:	2005883a 	mov	r2,r4
  80f5e8:	003f6906 	br	80f390 <__alt_data_end+0xff80f390>
  80f5ec:	1805883a 	mov	r2,r3
  80f5f0:	003f0f06 	br	80f230 <__alt_data_end+0xff80f230>
  80f5f4:	1806943a 	slli	r3,r3,16
  80f5f8:	9d66983a 	sll	r19,r19,r21
  80f5fc:	39ffffcc 	andi	r7,r7,65535
  80f600:	19c7883a 	add	r3,r3,r7
  80f604:	98ffc32e 	bgeu	r19,r3,80f514 <__alt_data_end+0xff80f514>
  80f608:	10bfffc4 	addi	r2,r2,-1
  80f60c:	003fc106 	br	80f514 <__alt_data_end+0xff80f514>
  80f610:	00800604 	movi	r2,24
  80f614:	003f1106 	br	80f25c <__alt_data_end+0xff80f25c>
  80f618:	00800604 	movi	r2,24
  80f61c:	003f2706 	br	80f2bc <__alt_data_end+0xff80f2bc>
  80f620:	00800604 	movi	r2,24
  80f624:	003ece06 	br	80f160 <__alt_data_end+0xff80f160>
  80f628:	0007883a 	mov	r3,zero
  80f62c:	00800044 	movi	r2,1
  80f630:	003f5c06 	br	80f3a4 <__alt_data_end+0xff80f3a4>
  80f634:	813fa12e 	bgeu	r16,r4,80f4bc <__alt_data_end+0xff80f4bc>
  80f638:	10bfff84 	addi	r2,r2,-2
  80f63c:	85e1883a 	add	r16,r16,r23
  80f640:	003f9f06 	br	80f4c0 <__alt_data_end+0xff80f4c0>
  80f644:	1c7f8a2e 	bgeu	r3,r17,80f470 <__alt_data_end+0xff80f470>
  80f648:	31bfff84 	addi	r6,r6,-2
  80f64c:	1dc7883a 	add	r3,r3,r23
  80f650:	003f8806 	br	80f474 <__alt_data_end+0xff80f474>
  80f654:	1805883a 	mov	r2,r3
  80f658:	003fde06 	br	80f5d4 <__alt_data_end+0xff80f5d4>
  80f65c:	1839883a 	mov	fp,r3
  80f660:	003fc906 	br	80f588 <__alt_data_end+0xff80f588>
  80f664:	b5bfff84 	addi	r22,r22,-2
  80f668:	2449883a 	add	r4,r4,r17
  80f66c:	003f3406 	br	80f340 <__alt_data_end+0xff80f340>
  80f670:	b5bfff84 	addi	r22,r22,-2
  80f674:	1445883a 	add	r2,r2,r17
  80f678:	003edb06 	br	80f1e8 <__alt_data_end+0xff80f1e8>

0080f67c <__umoddi3>:
  80f67c:	defff404 	addi	sp,sp,-48
  80f680:	df000a15 	stw	fp,40(sp)
  80f684:	dc400315 	stw	r17,12(sp)
  80f688:	dc000215 	stw	r16,8(sp)
  80f68c:	dfc00b15 	stw	ra,44(sp)
  80f690:	ddc00915 	stw	r23,36(sp)
  80f694:	dd800815 	stw	r22,32(sp)
  80f698:	dd400715 	stw	r21,28(sp)
  80f69c:	dd000615 	stw	r20,24(sp)
  80f6a0:	dcc00515 	stw	r19,20(sp)
  80f6a4:	dc800415 	stw	r18,16(sp)
  80f6a8:	2021883a 	mov	r16,r4
  80f6ac:	2823883a 	mov	r17,r5
  80f6b0:	2839883a 	mov	fp,r5
  80f6b4:	38003c1e 	bne	r7,zero,80f7a8 <__umoddi3+0x12c>
  80f6b8:	3027883a 	mov	r19,r6
  80f6bc:	2029883a 	mov	r20,r4
  80f6c0:	2980512e 	bgeu	r5,r6,80f808 <__umoddi3+0x18c>
  80f6c4:	00bfffd4 	movui	r2,65535
  80f6c8:	11809a36 	bltu	r2,r6,80f934 <__umoddi3+0x2b8>
  80f6cc:	01003fc4 	movi	r4,255
  80f6d0:	2189803a 	cmpltu	r4,r4,r6
  80f6d4:	200890fa 	slli	r4,r4,3
  80f6d8:	3104d83a 	srl	r2,r6,r4
  80f6dc:	00c02074 	movhi	r3,129
  80f6e0:	18c9ef04 	addi	r3,r3,10172
  80f6e4:	1885883a 	add	r2,r3,r2
  80f6e8:	10c00003 	ldbu	r3,0(r2)
  80f6ec:	00800804 	movi	r2,32
  80f6f0:	1909883a 	add	r4,r3,r4
  80f6f4:	1125c83a 	sub	r18,r2,r4
  80f6f8:	90000526 	beq	r18,zero,80f710 <__umoddi3+0x94>
  80f6fc:	8ca2983a 	sll	r17,r17,r18
  80f700:	8108d83a 	srl	r4,r16,r4
  80f704:	34a6983a 	sll	r19,r6,r18
  80f708:	84a8983a 	sll	r20,r16,r18
  80f70c:	2478b03a 	or	fp,r4,r17
  80f710:	982ed43a 	srli	r23,r19,16
  80f714:	e009883a 	mov	r4,fp
  80f718:	9dbfffcc 	andi	r22,r19,65535
  80f71c:	b80b883a 	mov	r5,r23
  80f720:	0802a100 	call	802a10 <__umodsi3>
  80f724:	e009883a 	mov	r4,fp
  80f728:	b80b883a 	mov	r5,r23
  80f72c:	102b883a 	mov	r21,r2
  80f730:	08029ac0 	call	8029ac <__udivsi3>
  80f734:	a806943a 	slli	r3,r21,16
  80f738:	a008d43a 	srli	r4,r20,16
  80f73c:	b085383a 	mul	r2,r22,r2
  80f740:	20c8b03a 	or	r4,r4,r3
  80f744:	2080032e 	bgeu	r4,r2,80f754 <__umoddi3+0xd8>
  80f748:	24c9883a 	add	r4,r4,r19
  80f74c:	24c00136 	bltu	r4,r19,80f754 <__umoddi3+0xd8>
  80f750:	20811036 	bltu	r4,r2,80fb94 <__umoddi3+0x518>
  80f754:	20abc83a 	sub	r21,r4,r2
  80f758:	b80b883a 	mov	r5,r23
  80f75c:	a809883a 	mov	r4,r21
  80f760:	0802a100 	call	802a10 <__umodsi3>
  80f764:	1023883a 	mov	r17,r2
  80f768:	b80b883a 	mov	r5,r23
  80f76c:	a809883a 	mov	r4,r21
  80f770:	08029ac0 	call	8029ac <__udivsi3>
  80f774:	8822943a 	slli	r17,r17,16
  80f778:	b085383a 	mul	r2,r22,r2
  80f77c:	a0ffffcc 	andi	r3,r20,65535
  80f780:	1c46b03a 	or	r3,r3,r17
  80f784:	1880042e 	bgeu	r3,r2,80f798 <__umoddi3+0x11c>
  80f788:	1cc7883a 	add	r3,r3,r19
  80f78c:	1cc00236 	bltu	r3,r19,80f798 <__umoddi3+0x11c>
  80f790:	1880012e 	bgeu	r3,r2,80f798 <__umoddi3+0x11c>
  80f794:	1cc7883a 	add	r3,r3,r19
  80f798:	1885c83a 	sub	r2,r3,r2
  80f79c:	1484d83a 	srl	r2,r2,r18
  80f7a0:	0007883a 	mov	r3,zero
  80f7a4:	00004f06 	br	80f8e4 <__umoddi3+0x268>
  80f7a8:	29c04c36 	bltu	r5,r7,80f8dc <__umoddi3+0x260>
  80f7ac:	00bfffd4 	movui	r2,65535
  80f7b0:	11c0582e 	bgeu	r2,r7,80f914 <__umoddi3+0x298>
  80f7b4:	00804034 	movhi	r2,256
  80f7b8:	10bfffc4 	addi	r2,r2,-1
  80f7bc:	11c0e736 	bltu	r2,r7,80fb5c <__umoddi3+0x4e0>
  80f7c0:	01000404 	movi	r4,16
  80f7c4:	3904d83a 	srl	r2,r7,r4
  80f7c8:	00c02074 	movhi	r3,129
  80f7cc:	18c9ef04 	addi	r3,r3,10172
  80f7d0:	1885883a 	add	r2,r3,r2
  80f7d4:	14c00003 	ldbu	r19,0(r2)
  80f7d8:	00c00804 	movi	r3,32
  80f7dc:	9927883a 	add	r19,r19,r4
  80f7e0:	1ce9c83a 	sub	r20,r3,r19
  80f7e4:	a000581e 	bne	r20,zero,80f948 <__umoddi3+0x2cc>
  80f7e8:	3c400136 	bltu	r7,r17,80f7f0 <__umoddi3+0x174>
  80f7ec:	8180eb36 	bltu	r16,r6,80fb9c <__umoddi3+0x520>
  80f7f0:	8185c83a 	sub	r2,r16,r6
  80f7f4:	89e3c83a 	sub	r17,r17,r7
  80f7f8:	8089803a 	cmpltu	r4,r16,r2
  80f7fc:	8939c83a 	sub	fp,r17,r4
  80f800:	e007883a 	mov	r3,fp
  80f804:	00003706 	br	80f8e4 <__umoddi3+0x268>
  80f808:	3000041e 	bne	r6,zero,80f81c <__umoddi3+0x1a0>
  80f80c:	000b883a 	mov	r5,zero
  80f810:	01000044 	movi	r4,1
  80f814:	08029ac0 	call	8029ac <__udivsi3>
  80f818:	1027883a 	mov	r19,r2
  80f81c:	00bfffd4 	movui	r2,65535
  80f820:	14c0402e 	bgeu	r2,r19,80f924 <__umoddi3+0x2a8>
  80f824:	00804034 	movhi	r2,256
  80f828:	10bfffc4 	addi	r2,r2,-1
  80f82c:	14c0cd36 	bltu	r2,r19,80fb64 <__umoddi3+0x4e8>
  80f830:	00800404 	movi	r2,16
  80f834:	9886d83a 	srl	r3,r19,r2
  80f838:	01002074 	movhi	r4,129
  80f83c:	2109ef04 	addi	r4,r4,10172
  80f840:	20c7883a 	add	r3,r4,r3
  80f844:	18c00003 	ldbu	r3,0(r3)
  80f848:	1887883a 	add	r3,r3,r2
  80f84c:	00800804 	movi	r2,32
  80f850:	10e5c83a 	sub	r18,r2,r3
  80f854:	9000901e 	bne	r18,zero,80fa98 <__umoddi3+0x41c>
  80f858:	982cd43a 	srli	r22,r19,16
  80f85c:	8ce3c83a 	sub	r17,r17,r19
  80f860:	9d7fffcc 	andi	r21,r19,65535
  80f864:	b00b883a 	mov	r5,r22
  80f868:	8809883a 	mov	r4,r17
  80f86c:	0802a100 	call	802a10 <__umodsi3>
  80f870:	8809883a 	mov	r4,r17
  80f874:	b00b883a 	mov	r5,r22
  80f878:	1021883a 	mov	r16,r2
  80f87c:	08029ac0 	call	8029ac <__udivsi3>
  80f880:	8006943a 	slli	r3,r16,16
  80f884:	a008d43a 	srli	r4,r20,16
  80f888:	1545383a 	mul	r2,r2,r21
  80f88c:	20c8b03a 	or	r4,r4,r3
  80f890:	2080042e 	bgeu	r4,r2,80f8a4 <__umoddi3+0x228>
  80f894:	24c9883a 	add	r4,r4,r19
  80f898:	24c00236 	bltu	r4,r19,80f8a4 <__umoddi3+0x228>
  80f89c:	2080012e 	bgeu	r4,r2,80f8a4 <__umoddi3+0x228>
  80f8a0:	24c9883a 	add	r4,r4,r19
  80f8a4:	20a1c83a 	sub	r16,r4,r2
  80f8a8:	b00b883a 	mov	r5,r22
  80f8ac:	8009883a 	mov	r4,r16
  80f8b0:	0802a100 	call	802a10 <__umodsi3>
  80f8b4:	1023883a 	mov	r17,r2
  80f8b8:	b00b883a 	mov	r5,r22
  80f8bc:	8009883a 	mov	r4,r16
  80f8c0:	08029ac0 	call	8029ac <__udivsi3>
  80f8c4:	8822943a 	slli	r17,r17,16
  80f8c8:	1545383a 	mul	r2,r2,r21
  80f8cc:	a53fffcc 	andi	r20,r20,65535
  80f8d0:	a446b03a 	or	r3,r20,r17
  80f8d4:	18bfb02e 	bgeu	r3,r2,80f798 <__alt_data_end+0xff80f798>
  80f8d8:	003fab06 	br	80f788 <__alt_data_end+0xff80f788>
  80f8dc:	2005883a 	mov	r2,r4
  80f8e0:	2807883a 	mov	r3,r5
  80f8e4:	dfc00b17 	ldw	ra,44(sp)
  80f8e8:	df000a17 	ldw	fp,40(sp)
  80f8ec:	ddc00917 	ldw	r23,36(sp)
  80f8f0:	dd800817 	ldw	r22,32(sp)
  80f8f4:	dd400717 	ldw	r21,28(sp)
  80f8f8:	dd000617 	ldw	r20,24(sp)
  80f8fc:	dcc00517 	ldw	r19,20(sp)
  80f900:	dc800417 	ldw	r18,16(sp)
  80f904:	dc400317 	ldw	r17,12(sp)
  80f908:	dc000217 	ldw	r16,8(sp)
  80f90c:	dec00c04 	addi	sp,sp,48
  80f910:	f800283a 	ret
  80f914:	04c03fc4 	movi	r19,255
  80f918:	99c9803a 	cmpltu	r4,r19,r7
  80f91c:	200890fa 	slli	r4,r4,3
  80f920:	003fa806 	br	80f7c4 <__alt_data_end+0xff80f7c4>
  80f924:	00803fc4 	movi	r2,255
  80f928:	14c5803a 	cmpltu	r2,r2,r19
  80f92c:	100490fa 	slli	r2,r2,3
  80f930:	003fc006 	br	80f834 <__alt_data_end+0xff80f834>
  80f934:	00804034 	movhi	r2,256
  80f938:	10bfffc4 	addi	r2,r2,-1
  80f93c:	11808b36 	bltu	r2,r6,80fb6c <__umoddi3+0x4f0>
  80f940:	01000404 	movi	r4,16
  80f944:	003f6406 	br	80f6d8 <__alt_data_end+0xff80f6d8>
  80f948:	34c4d83a 	srl	r2,r6,r19
  80f94c:	3d0e983a 	sll	r7,r7,r20
  80f950:	8cf8d83a 	srl	fp,r17,r19
  80f954:	8d10983a 	sll	r8,r17,r20
  80f958:	38aab03a 	or	r21,r7,r2
  80f95c:	a82cd43a 	srli	r22,r21,16
  80f960:	84e2d83a 	srl	r17,r16,r19
  80f964:	e009883a 	mov	r4,fp
  80f968:	b00b883a 	mov	r5,r22
  80f96c:	8a22b03a 	or	r17,r17,r8
  80f970:	3524983a 	sll	r18,r6,r20
  80f974:	0802a100 	call	802a10 <__umodsi3>
  80f978:	e009883a 	mov	r4,fp
  80f97c:	b00b883a 	mov	r5,r22
  80f980:	102f883a 	mov	r23,r2
  80f984:	08029ac0 	call	8029ac <__udivsi3>
  80f988:	100d883a 	mov	r6,r2
  80f98c:	b808943a 	slli	r4,r23,16
  80f990:	aa3fffcc 	andi	r8,r21,65535
  80f994:	8804d43a 	srli	r2,r17,16
  80f998:	41af383a 	mul	r23,r8,r6
  80f99c:	8520983a 	sll	r16,r16,r20
  80f9a0:	1104b03a 	or	r2,r2,r4
  80f9a4:	15c0042e 	bgeu	r2,r23,80f9b8 <__umoddi3+0x33c>
  80f9a8:	1545883a 	add	r2,r2,r21
  80f9ac:	30ffffc4 	addi	r3,r6,-1
  80f9b0:	1540742e 	bgeu	r2,r21,80fb84 <__umoddi3+0x508>
  80f9b4:	180d883a 	mov	r6,r3
  80f9b8:	15efc83a 	sub	r23,r2,r23
  80f9bc:	b00b883a 	mov	r5,r22
  80f9c0:	b809883a 	mov	r4,r23
  80f9c4:	d9800115 	stw	r6,4(sp)
  80f9c8:	da000015 	stw	r8,0(sp)
  80f9cc:	0802a100 	call	802a10 <__umodsi3>
  80f9d0:	b00b883a 	mov	r5,r22
  80f9d4:	b809883a 	mov	r4,r23
  80f9d8:	1039883a 	mov	fp,r2
  80f9dc:	08029ac0 	call	8029ac <__udivsi3>
  80f9e0:	da000017 	ldw	r8,0(sp)
  80f9e4:	e038943a 	slli	fp,fp,16
  80f9e8:	100b883a 	mov	r5,r2
  80f9ec:	4089383a 	mul	r4,r8,r2
  80f9f0:	8a3fffcc 	andi	r8,r17,65535
  80f9f4:	4710b03a 	or	r8,r8,fp
  80f9f8:	d9800117 	ldw	r6,4(sp)
  80f9fc:	4100042e 	bgeu	r8,r4,80fa10 <__umoddi3+0x394>
  80fa00:	4551883a 	add	r8,r8,r21
  80fa04:	10bfffc4 	addi	r2,r2,-1
  80fa08:	45405a2e 	bgeu	r8,r21,80fb74 <__umoddi3+0x4f8>
  80fa0c:	100b883a 	mov	r5,r2
  80fa10:	300c943a 	slli	r6,r6,16
  80fa14:	91ffffcc 	andi	r7,r18,65535
  80fa18:	9004d43a 	srli	r2,r18,16
  80fa1c:	314cb03a 	or	r6,r6,r5
  80fa20:	317fffcc 	andi	r5,r6,65535
  80fa24:	300cd43a 	srli	r6,r6,16
  80fa28:	29d3383a 	mul	r9,r5,r7
  80fa2c:	288b383a 	mul	r5,r5,r2
  80fa30:	31cf383a 	mul	r7,r6,r7
  80fa34:	4806d43a 	srli	r3,r9,16
  80fa38:	4111c83a 	sub	r8,r8,r4
  80fa3c:	29cb883a 	add	r5,r5,r7
  80fa40:	194b883a 	add	r5,r3,r5
  80fa44:	3085383a 	mul	r2,r6,r2
  80fa48:	29c0022e 	bgeu	r5,r7,80fa54 <__umoddi3+0x3d8>
  80fa4c:	00c00074 	movhi	r3,1
  80fa50:	10c5883a 	add	r2,r2,r3
  80fa54:	2808d43a 	srli	r4,r5,16
  80fa58:	280a943a 	slli	r5,r5,16
  80fa5c:	4a7fffcc 	andi	r9,r9,65535
  80fa60:	2085883a 	add	r2,r4,r2
  80fa64:	2a4b883a 	add	r5,r5,r9
  80fa68:	40803636 	bltu	r8,r2,80fb44 <__umoddi3+0x4c8>
  80fa6c:	40804d26 	beq	r8,r2,80fba4 <__umoddi3+0x528>
  80fa70:	4089c83a 	sub	r4,r8,r2
  80fa74:	280f883a 	mov	r7,r5
  80fa78:	81cfc83a 	sub	r7,r16,r7
  80fa7c:	81c7803a 	cmpltu	r3,r16,r7
  80fa80:	20c7c83a 	sub	r3,r4,r3
  80fa84:	1cc4983a 	sll	r2,r3,r19
  80fa88:	3d0ed83a 	srl	r7,r7,r20
  80fa8c:	1d06d83a 	srl	r3,r3,r20
  80fa90:	11c4b03a 	or	r2,r2,r7
  80fa94:	003f9306 	br	80f8e4 <__alt_data_end+0xff80f8e4>
  80fa98:	9ca6983a 	sll	r19,r19,r18
  80fa9c:	88e8d83a 	srl	r20,r17,r3
  80faa0:	80c4d83a 	srl	r2,r16,r3
  80faa4:	982cd43a 	srli	r22,r19,16
  80faa8:	8ca2983a 	sll	r17,r17,r18
  80faac:	a009883a 	mov	r4,r20
  80fab0:	b00b883a 	mov	r5,r22
  80fab4:	1478b03a 	or	fp,r2,r17
  80fab8:	0802a100 	call	802a10 <__umodsi3>
  80fabc:	a009883a 	mov	r4,r20
  80fac0:	b00b883a 	mov	r5,r22
  80fac4:	1023883a 	mov	r17,r2
  80fac8:	08029ac0 	call	8029ac <__udivsi3>
  80facc:	9d7fffcc 	andi	r21,r19,65535
  80fad0:	880a943a 	slli	r5,r17,16
  80fad4:	e008d43a 	srli	r4,fp,16
  80fad8:	a885383a 	mul	r2,r21,r2
  80fadc:	84a8983a 	sll	r20,r16,r18
  80fae0:	2148b03a 	or	r4,r4,r5
  80fae4:	2080042e 	bgeu	r4,r2,80faf8 <__umoddi3+0x47c>
  80fae8:	24c9883a 	add	r4,r4,r19
  80faec:	24c00236 	bltu	r4,r19,80faf8 <__umoddi3+0x47c>
  80faf0:	2080012e 	bgeu	r4,r2,80faf8 <__umoddi3+0x47c>
  80faf4:	24c9883a 	add	r4,r4,r19
  80faf8:	20a3c83a 	sub	r17,r4,r2
  80fafc:	b00b883a 	mov	r5,r22
  80fb00:	8809883a 	mov	r4,r17
  80fb04:	0802a100 	call	802a10 <__umodsi3>
  80fb08:	102f883a 	mov	r23,r2
  80fb0c:	8809883a 	mov	r4,r17
  80fb10:	b00b883a 	mov	r5,r22
  80fb14:	08029ac0 	call	8029ac <__udivsi3>
  80fb18:	b82e943a 	slli	r23,r23,16
  80fb1c:	a885383a 	mul	r2,r21,r2
  80fb20:	e13fffcc 	andi	r4,fp,65535
  80fb24:	25c8b03a 	or	r4,r4,r23
  80fb28:	2080042e 	bgeu	r4,r2,80fb3c <__umoddi3+0x4c0>
  80fb2c:	24c9883a 	add	r4,r4,r19
  80fb30:	24c00236 	bltu	r4,r19,80fb3c <__umoddi3+0x4c0>
  80fb34:	2080012e 	bgeu	r4,r2,80fb3c <__umoddi3+0x4c0>
  80fb38:	24c9883a 	add	r4,r4,r19
  80fb3c:	20a3c83a 	sub	r17,r4,r2
  80fb40:	003f4806 	br	80f864 <__alt_data_end+0xff80f864>
  80fb44:	2c8fc83a 	sub	r7,r5,r18
  80fb48:	1545c83a 	sub	r2,r2,r21
  80fb4c:	29cb803a 	cmpltu	r5,r5,r7
  80fb50:	1145c83a 	sub	r2,r2,r5
  80fb54:	4089c83a 	sub	r4,r8,r2
  80fb58:	003fc706 	br	80fa78 <__alt_data_end+0xff80fa78>
  80fb5c:	01000604 	movi	r4,24
  80fb60:	003f1806 	br	80f7c4 <__alt_data_end+0xff80f7c4>
  80fb64:	00800604 	movi	r2,24
  80fb68:	003f3206 	br	80f834 <__alt_data_end+0xff80f834>
  80fb6c:	01000604 	movi	r4,24
  80fb70:	003ed906 	br	80f6d8 <__alt_data_end+0xff80f6d8>
  80fb74:	413fa52e 	bgeu	r8,r4,80fa0c <__alt_data_end+0xff80fa0c>
  80fb78:	297fff84 	addi	r5,r5,-2
  80fb7c:	4551883a 	add	r8,r8,r21
  80fb80:	003fa306 	br	80fa10 <__alt_data_end+0xff80fa10>
  80fb84:	15ff8b2e 	bgeu	r2,r23,80f9b4 <__alt_data_end+0xff80f9b4>
  80fb88:	31bfff84 	addi	r6,r6,-2
  80fb8c:	1545883a 	add	r2,r2,r21
  80fb90:	003f8906 	br	80f9b8 <__alt_data_end+0xff80f9b8>
  80fb94:	24c9883a 	add	r4,r4,r19
  80fb98:	003eee06 	br	80f754 <__alt_data_end+0xff80f754>
  80fb9c:	8005883a 	mov	r2,r16
  80fba0:	003f1706 	br	80f800 <__alt_data_end+0xff80f800>
  80fba4:	817fe736 	bltu	r16,r5,80fb44 <__alt_data_end+0xff80fb44>
  80fba8:	280f883a 	mov	r7,r5
  80fbac:	0009883a 	mov	r4,zero
  80fbb0:	003fb106 	br	80fa78 <__alt_data_end+0xff80fa78>

0080fbb4 <__ledf2>:
  80fbb4:	2804d53a 	srli	r2,r5,20
  80fbb8:	3810d53a 	srli	r8,r7,20
  80fbbc:	00c00434 	movhi	r3,16
  80fbc0:	18ffffc4 	addi	r3,r3,-1
  80fbc4:	1081ffcc 	andi	r2,r2,2047
  80fbc8:	0241ffc4 	movi	r9,2047
  80fbcc:	28d4703a 	and	r10,r5,r3
  80fbd0:	4201ffcc 	andi	r8,r8,2047
  80fbd4:	38c6703a 	and	r3,r7,r3
  80fbd8:	280ad7fa 	srli	r5,r5,31
  80fbdc:	380ed7fa 	srli	r7,r7,31
  80fbe0:	12401f26 	beq	r2,r9,80fc60 <__ledf2+0xac>
  80fbe4:	0241ffc4 	movi	r9,2047
  80fbe8:	42401426 	beq	r8,r9,80fc3c <__ledf2+0x88>
  80fbec:	1000091e 	bne	r2,zero,80fc14 <__ledf2+0x60>
  80fbf0:	2296b03a 	or	r11,r4,r10
  80fbf4:	5813003a 	cmpeq	r9,r11,zero
  80fbf8:	29403fcc 	andi	r5,r5,255
  80fbfc:	40000a1e 	bne	r8,zero,80fc28 <__ledf2+0x74>
  80fc00:	30d8b03a 	or	r12,r6,r3
  80fc04:	6000081e 	bne	r12,zero,80fc28 <__ledf2+0x74>
  80fc08:	0005883a 	mov	r2,zero
  80fc0c:	5800111e 	bne	r11,zero,80fc54 <__ledf2+0xa0>
  80fc10:	f800283a 	ret
  80fc14:	29403fcc 	andi	r5,r5,255
  80fc18:	40000c1e 	bne	r8,zero,80fc4c <__ledf2+0x98>
  80fc1c:	30d2b03a 	or	r9,r6,r3
  80fc20:	48000c26 	beq	r9,zero,80fc54 <__ledf2+0xa0>
  80fc24:	0013883a 	mov	r9,zero
  80fc28:	39c03fcc 	andi	r7,r7,255
  80fc2c:	48000826 	beq	r9,zero,80fc50 <__ledf2+0x9c>
  80fc30:	38001126 	beq	r7,zero,80fc78 <__ledf2+0xc4>
  80fc34:	00800044 	movi	r2,1
  80fc38:	f800283a 	ret
  80fc3c:	30d2b03a 	or	r9,r6,r3
  80fc40:	483fea26 	beq	r9,zero,80fbec <__alt_data_end+0xff80fbec>
  80fc44:	00800084 	movi	r2,2
  80fc48:	f800283a 	ret
  80fc4c:	39c03fcc 	andi	r7,r7,255
  80fc50:	39400726 	beq	r7,r5,80fc70 <__ledf2+0xbc>
  80fc54:	2800081e 	bne	r5,zero,80fc78 <__ledf2+0xc4>
  80fc58:	00800044 	movi	r2,1
  80fc5c:	f800283a 	ret
  80fc60:	2292b03a 	or	r9,r4,r10
  80fc64:	483fdf26 	beq	r9,zero,80fbe4 <__alt_data_end+0xff80fbe4>
  80fc68:	00800084 	movi	r2,2
  80fc6c:	f800283a 	ret
  80fc70:	4080030e 	bge	r8,r2,80fc80 <__ledf2+0xcc>
  80fc74:	383fef26 	beq	r7,zero,80fc34 <__alt_data_end+0xff80fc34>
  80fc78:	00bfffc4 	movi	r2,-1
  80fc7c:	f800283a 	ret
  80fc80:	123feb16 	blt	r2,r8,80fc30 <__alt_data_end+0xff80fc30>
  80fc84:	1abff336 	bltu	r3,r10,80fc54 <__alt_data_end+0xff80fc54>
  80fc88:	50c00326 	beq	r10,r3,80fc98 <__ledf2+0xe4>
  80fc8c:	50c0042e 	bgeu	r10,r3,80fca0 <__ledf2+0xec>
  80fc90:	283fe81e 	bne	r5,zero,80fc34 <__alt_data_end+0xff80fc34>
  80fc94:	003ff806 	br	80fc78 <__alt_data_end+0xff80fc78>
  80fc98:	313fee36 	bltu	r6,r4,80fc54 <__alt_data_end+0xff80fc54>
  80fc9c:	21bffc36 	bltu	r4,r6,80fc90 <__alt_data_end+0xff80fc90>
  80fca0:	0005883a 	mov	r2,zero
  80fca4:	f800283a 	ret

0080fca8 <__floatunsidf>:
  80fca8:	defffe04 	addi	sp,sp,-8
  80fcac:	dc000015 	stw	r16,0(sp)
  80fcb0:	dfc00115 	stw	ra,4(sp)
  80fcb4:	2021883a 	mov	r16,r4
  80fcb8:	20002226 	beq	r4,zero,80fd44 <__floatunsidf+0x9c>
  80fcbc:	0805a4c0 	call	805a4c <__clzsi2>
  80fcc0:	01010784 	movi	r4,1054
  80fcc4:	2089c83a 	sub	r4,r4,r2
  80fcc8:	01810cc4 	movi	r6,1075
  80fccc:	310dc83a 	sub	r6,r6,r4
  80fcd0:	00c007c4 	movi	r3,31
  80fcd4:	1980120e 	bge	r3,r6,80fd20 <__floatunsidf+0x78>
  80fcd8:	00c104c4 	movi	r3,1043
  80fcdc:	1907c83a 	sub	r3,r3,r4
  80fce0:	80ca983a 	sll	r5,r16,r3
  80fce4:	00800434 	movhi	r2,16
  80fce8:	10bfffc4 	addi	r2,r2,-1
  80fcec:	2101ffcc 	andi	r4,r4,2047
  80fcf0:	0021883a 	mov	r16,zero
  80fcf4:	288a703a 	and	r5,r5,r2
  80fcf8:	2008953a 	slli	r4,r4,20
  80fcfc:	00c00434 	movhi	r3,16
  80fd00:	18ffffc4 	addi	r3,r3,-1
  80fd04:	28c6703a 	and	r3,r5,r3
  80fd08:	8005883a 	mov	r2,r16
  80fd0c:	1906b03a 	or	r3,r3,r4
  80fd10:	dfc00117 	ldw	ra,4(sp)
  80fd14:	dc000017 	ldw	r16,0(sp)
  80fd18:	dec00204 	addi	sp,sp,8
  80fd1c:	f800283a 	ret
  80fd20:	00c002c4 	movi	r3,11
  80fd24:	188bc83a 	sub	r5,r3,r2
  80fd28:	814ad83a 	srl	r5,r16,r5
  80fd2c:	00c00434 	movhi	r3,16
  80fd30:	18ffffc4 	addi	r3,r3,-1
  80fd34:	81a0983a 	sll	r16,r16,r6
  80fd38:	2101ffcc 	andi	r4,r4,2047
  80fd3c:	28ca703a 	and	r5,r5,r3
  80fd40:	003fed06 	br	80fcf8 <__alt_data_end+0xff80fcf8>
  80fd44:	0009883a 	mov	r4,zero
  80fd48:	000b883a 	mov	r5,zero
  80fd4c:	003fea06 	br	80fcf8 <__alt_data_end+0xff80fcf8>

0080fd50 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80fd50:	defffe04 	addi	sp,sp,-8
  80fd54:	dfc00115 	stw	ra,4(sp)
  80fd58:	df000015 	stw	fp,0(sp)
  80fd5c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80fd60:	d0a00b17 	ldw	r2,-32724(gp)
  80fd64:	10000326 	beq	r2,zero,80fd74 <alt_get_errno+0x24>
  80fd68:	d0a00b17 	ldw	r2,-32724(gp)
  80fd6c:	103ee83a 	callr	r2
  80fd70:	00000106 	br	80fd78 <alt_get_errno+0x28>
  80fd74:	d0a6d104 	addi	r2,gp,-25788
}
  80fd78:	e037883a 	mov	sp,fp
  80fd7c:	dfc00117 	ldw	ra,4(sp)
  80fd80:	df000017 	ldw	fp,0(sp)
  80fd84:	dec00204 	addi	sp,sp,8
  80fd88:	f800283a 	ret

0080fd8c <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
  80fd8c:	defffb04 	addi	sp,sp,-20
  80fd90:	dfc00415 	stw	ra,16(sp)
  80fd94:	df000315 	stw	fp,12(sp)
  80fd98:	df000304 	addi	fp,sp,12
  80fd9c:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
  80fda0:	e0bfff17 	ldw	r2,-4(fp)
  80fda4:	10000616 	blt	r2,zero,80fdc0 <close+0x34>
  80fda8:	e0bfff17 	ldw	r2,-4(fp)
  80fdac:	10c00324 	muli	r3,r2,12
  80fdb0:	00802074 	movhi	r2,129
  80fdb4:	108ce004 	addi	r2,r2,13184
  80fdb8:	1885883a 	add	r2,r3,r2
  80fdbc:	00000106 	br	80fdc4 <close+0x38>
  80fdc0:	0005883a 	mov	r2,zero
  80fdc4:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
  80fdc8:	e0bffd17 	ldw	r2,-12(fp)
  80fdcc:	10001926 	beq	r2,zero,80fe34 <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
  80fdd0:	e0bffd17 	ldw	r2,-12(fp)
  80fdd4:	10800017 	ldw	r2,0(r2)
  80fdd8:	10800417 	ldw	r2,16(r2)
  80fddc:	10000626 	beq	r2,zero,80fdf8 <close+0x6c>
  80fde0:	e0bffd17 	ldw	r2,-12(fp)
  80fde4:	10800017 	ldw	r2,0(r2)
  80fde8:	10800417 	ldw	r2,16(r2)
  80fdec:	e13ffd17 	ldw	r4,-12(fp)
  80fdf0:	103ee83a 	callr	r2
  80fdf4:	00000106 	br	80fdfc <close+0x70>
  80fdf8:	0005883a 	mov	r2,zero
  80fdfc:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
  80fe00:	e13fff17 	ldw	r4,-4(fp)
  80fe04:	081044c0 	call	81044c <alt_release_fd>
    if (rval < 0)
  80fe08:	e0bffe17 	ldw	r2,-8(fp)
  80fe0c:	1000070e 	bge	r2,zero,80fe2c <close+0xa0>
    {
      ALT_ERRNO = -rval;
  80fe10:	080fd500 	call	80fd50 <alt_get_errno>
  80fe14:	1007883a 	mov	r3,r2
  80fe18:	e0bffe17 	ldw	r2,-8(fp)
  80fe1c:	0085c83a 	sub	r2,zero,r2
  80fe20:	18800015 	stw	r2,0(r3)
      return -1;
  80fe24:	00bfffc4 	movi	r2,-1
  80fe28:	00000706 	br	80fe48 <close+0xbc>
    }
    return 0;
  80fe2c:	0005883a 	mov	r2,zero
  80fe30:	00000506 	br	80fe48 <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
  80fe34:	080fd500 	call	80fd50 <alt_get_errno>
  80fe38:	1007883a 	mov	r3,r2
  80fe3c:	00801444 	movi	r2,81
  80fe40:	18800015 	stw	r2,0(r3)
    return -1;
  80fe44:	00bfffc4 	movi	r2,-1
  }
}
  80fe48:	e037883a 	mov	sp,fp
  80fe4c:	dfc00117 	ldw	ra,4(sp)
  80fe50:	df000017 	ldw	fp,0(sp)
  80fe54:	dec00204 	addi	sp,sp,8
  80fe58:	f800283a 	ret

0080fe5c <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
  80fe5c:	defffc04 	addi	sp,sp,-16
  80fe60:	df000315 	stw	fp,12(sp)
  80fe64:	df000304 	addi	fp,sp,12
  80fe68:	e13ffd15 	stw	r4,-12(fp)
  80fe6c:	e17ffe15 	stw	r5,-8(fp)
  80fe70:	e1bfff15 	stw	r6,-4(fp)
  return len;
  80fe74:	e0bfff17 	ldw	r2,-4(fp)
}
  80fe78:	e037883a 	mov	sp,fp
  80fe7c:	df000017 	ldw	fp,0(sp)
  80fe80:	dec00104 	addi	sp,sp,4
  80fe84:	f800283a 	ret

0080fe88 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80fe88:	defffe04 	addi	sp,sp,-8
  80fe8c:	dfc00115 	stw	ra,4(sp)
  80fe90:	df000015 	stw	fp,0(sp)
  80fe94:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80fe98:	d0a00b17 	ldw	r2,-32724(gp)
  80fe9c:	10000326 	beq	r2,zero,80feac <alt_get_errno+0x24>
  80fea0:	d0a00b17 	ldw	r2,-32724(gp)
  80fea4:	103ee83a 	callr	r2
  80fea8:	00000106 	br	80feb0 <alt_get_errno+0x28>
  80feac:	d0a6d104 	addi	r2,gp,-25788
}
  80feb0:	e037883a 	mov	sp,fp
  80feb4:	dfc00117 	ldw	ra,4(sp)
  80feb8:	df000017 	ldw	fp,0(sp)
  80febc:	dec00204 	addi	sp,sp,8
  80fec0:	f800283a 	ret

0080fec4 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
  80fec4:	defffb04 	addi	sp,sp,-20
  80fec8:	dfc00415 	stw	ra,16(sp)
  80fecc:	df000315 	stw	fp,12(sp)
  80fed0:	df000304 	addi	fp,sp,12
  80fed4:	e13ffe15 	stw	r4,-8(fp)
  80fed8:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80fedc:	e0bffe17 	ldw	r2,-8(fp)
  80fee0:	10000616 	blt	r2,zero,80fefc <fstat+0x38>
  80fee4:	e0bffe17 	ldw	r2,-8(fp)
  80fee8:	10c00324 	muli	r3,r2,12
  80feec:	00802074 	movhi	r2,129
  80fef0:	108ce004 	addi	r2,r2,13184
  80fef4:	1885883a 	add	r2,r3,r2
  80fef8:	00000106 	br	80ff00 <fstat+0x3c>
  80fefc:	0005883a 	mov	r2,zero
  80ff00:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
  80ff04:	e0bffd17 	ldw	r2,-12(fp)
  80ff08:	10001026 	beq	r2,zero,80ff4c <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
  80ff0c:	e0bffd17 	ldw	r2,-12(fp)
  80ff10:	10800017 	ldw	r2,0(r2)
  80ff14:	10800817 	ldw	r2,32(r2)
  80ff18:	10000726 	beq	r2,zero,80ff38 <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
  80ff1c:	e0bffd17 	ldw	r2,-12(fp)
  80ff20:	10800017 	ldw	r2,0(r2)
  80ff24:	10800817 	ldw	r2,32(r2)
  80ff28:	e17fff17 	ldw	r5,-4(fp)
  80ff2c:	e13ffd17 	ldw	r4,-12(fp)
  80ff30:	103ee83a 	callr	r2
  80ff34:	00000a06 	br	80ff60 <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
  80ff38:	e0bfff17 	ldw	r2,-4(fp)
  80ff3c:	00c80004 	movi	r3,8192
  80ff40:	10c00115 	stw	r3,4(r2)
      return 0;
  80ff44:	0005883a 	mov	r2,zero
  80ff48:	00000506 	br	80ff60 <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
  80ff4c:	080fe880 	call	80fe88 <alt_get_errno>
  80ff50:	1007883a 	mov	r3,r2
  80ff54:	00801444 	movi	r2,81
  80ff58:	18800015 	stw	r2,0(r3)
    return -1;
  80ff5c:	00bfffc4 	movi	r2,-1
  }
}
  80ff60:	e037883a 	mov	sp,fp
  80ff64:	dfc00117 	ldw	ra,4(sp)
  80ff68:	df000017 	ldw	fp,0(sp)
  80ff6c:	dec00204 	addi	sp,sp,8
  80ff70:	f800283a 	ret

0080ff74 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80ff74:	defffe04 	addi	sp,sp,-8
  80ff78:	dfc00115 	stw	ra,4(sp)
  80ff7c:	df000015 	stw	fp,0(sp)
  80ff80:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80ff84:	d0a00b17 	ldw	r2,-32724(gp)
  80ff88:	10000326 	beq	r2,zero,80ff98 <alt_get_errno+0x24>
  80ff8c:	d0a00b17 	ldw	r2,-32724(gp)
  80ff90:	103ee83a 	callr	r2
  80ff94:	00000106 	br	80ff9c <alt_get_errno+0x28>
  80ff98:	d0a6d104 	addi	r2,gp,-25788
}
  80ff9c:	e037883a 	mov	sp,fp
  80ffa0:	dfc00117 	ldw	ra,4(sp)
  80ffa4:	df000017 	ldw	fp,0(sp)
  80ffa8:	dec00204 	addi	sp,sp,8
  80ffac:	f800283a 	ret

0080ffb0 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
  80ffb0:	deffed04 	addi	sp,sp,-76
  80ffb4:	dfc01215 	stw	ra,72(sp)
  80ffb8:	df001115 	stw	fp,68(sp)
  80ffbc:	df001104 	addi	fp,sp,68
  80ffc0:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80ffc4:	e0bfff17 	ldw	r2,-4(fp)
  80ffc8:	10000616 	blt	r2,zero,80ffe4 <isatty+0x34>
  80ffcc:	e0bfff17 	ldw	r2,-4(fp)
  80ffd0:	10c00324 	muli	r3,r2,12
  80ffd4:	00802074 	movhi	r2,129
  80ffd8:	108ce004 	addi	r2,r2,13184
  80ffdc:	1885883a 	add	r2,r3,r2
  80ffe0:	00000106 	br	80ffe8 <isatty+0x38>
  80ffe4:	0005883a 	mov	r2,zero
  80ffe8:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
  80ffec:	e0bfef17 	ldw	r2,-68(fp)
  80fff0:	10000e26 	beq	r2,zero,81002c <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
  80fff4:	e0bfef17 	ldw	r2,-68(fp)
  80fff8:	10800017 	ldw	r2,0(r2)
  80fffc:	10800817 	ldw	r2,32(r2)
  810000:	1000021e 	bne	r2,zero,81000c <isatty+0x5c>
    {
      return 1;
  810004:	00800044 	movi	r2,1
  810008:	00000d06 	br	810040 <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
  81000c:	e0bff004 	addi	r2,fp,-64
  810010:	100b883a 	mov	r5,r2
  810014:	e13fff17 	ldw	r4,-4(fp)
  810018:	080fec40 	call	80fec4 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
  81001c:	e0bff117 	ldw	r2,-60(fp)
  810020:	10880020 	cmpeqi	r2,r2,8192
  810024:	10803fcc 	andi	r2,r2,255
  810028:	00000506 	br	810040 <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
  81002c:	080ff740 	call	80ff74 <alt_get_errno>
  810030:	1007883a 	mov	r3,r2
  810034:	00801444 	movi	r2,81
  810038:	18800015 	stw	r2,0(r3)
    return 0;
  81003c:	0005883a 	mov	r2,zero
  }
}
  810040:	e037883a 	mov	sp,fp
  810044:	dfc00117 	ldw	ra,4(sp)
  810048:	df000017 	ldw	fp,0(sp)
  81004c:	dec00204 	addi	sp,sp,8
  810050:	f800283a 	ret

00810054 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
  810054:	defffc04 	addi	sp,sp,-16
  810058:	df000315 	stw	fp,12(sp)
  81005c:	df000304 	addi	fp,sp,12
  810060:	e13ffd15 	stw	r4,-12(fp)
  810064:	e17ffe15 	stw	r5,-8(fp)
  810068:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
  81006c:	e0fffe17 	ldw	r3,-8(fp)
  810070:	e0bffd17 	ldw	r2,-12(fp)
  810074:	18800c26 	beq	r3,r2,8100a8 <alt_load_section+0x54>
  {
    while( to != end )
  810078:	00000806 	br	81009c <alt_load_section+0x48>
    {
      *to++ = *from++;
  81007c:	e0bffe17 	ldw	r2,-8(fp)
  810080:	10c00104 	addi	r3,r2,4
  810084:	e0fffe15 	stw	r3,-8(fp)
  810088:	e0fffd17 	ldw	r3,-12(fp)
  81008c:	19000104 	addi	r4,r3,4
  810090:	e13ffd15 	stw	r4,-12(fp)
  810094:	18c00017 	ldw	r3,0(r3)
  810098:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
  81009c:	e0fffe17 	ldw	r3,-8(fp)
  8100a0:	e0bfff17 	ldw	r2,-4(fp)
  8100a4:	18bff51e 	bne	r3,r2,81007c <__alt_data_end+0xff81007c>
    {
      *to++ = *from++;
    }
  }
}
  8100a8:	0001883a 	nop
  8100ac:	e037883a 	mov	sp,fp
  8100b0:	df000017 	ldw	fp,0(sp)
  8100b4:	dec00104 	addi	sp,sp,4
  8100b8:	f800283a 	ret

008100bc <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
  8100bc:	defffe04 	addi	sp,sp,-8
  8100c0:	dfc00115 	stw	ra,4(sp)
  8100c4:	df000015 	stw	fp,0(sp)
  8100c8:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
  8100cc:	01802074 	movhi	r6,129
  8100d0:	31916804 	addi	r6,r6,17824
  8100d4:	01402074 	movhi	r5,129
  8100d8:	294aad04 	addi	r5,r5,10932
  8100dc:	01002074 	movhi	r4,129
  8100e0:	21116804 	addi	r4,r4,17824
  8100e4:	08100540 	call	810054 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
  8100e8:	01802034 	movhi	r6,128
  8100ec:	31809104 	addi	r6,r6,580
  8100f0:	01402034 	movhi	r5,128
  8100f4:	29400804 	addi	r5,r5,32
  8100f8:	01002034 	movhi	r4,128
  8100fc:	21000804 	addi	r4,r4,32
  810100:	08100540 	call	810054 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
  810104:	01802074 	movhi	r6,129
  810108:	318aad04 	addi	r6,r6,10932
  81010c:	01402074 	movhi	r5,129
  810110:	29496d04 	addi	r5,r5,9652
  810114:	01002074 	movhi	r4,129
  810118:	21096d04 	addi	r4,r4,9652
  81011c:	08100540 	call	810054 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
  810120:	08114a00 	call	8114a0 <alt_dcache_flush_all>
  alt_icache_flush_all();
  810124:	08116880 	call	811688 <alt_icache_flush_all>
}
  810128:	0001883a 	nop
  81012c:	e037883a 	mov	sp,fp
  810130:	dfc00117 	ldw	ra,4(sp)
  810134:	df000017 	ldw	fp,0(sp)
  810138:	dec00204 	addi	sp,sp,8
  81013c:	f800283a 	ret

00810140 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  810140:	defffe04 	addi	sp,sp,-8
  810144:	dfc00115 	stw	ra,4(sp)
  810148:	df000015 	stw	fp,0(sp)
  81014c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  810150:	d0a00b17 	ldw	r2,-32724(gp)
  810154:	10000326 	beq	r2,zero,810164 <alt_get_errno+0x24>
  810158:	d0a00b17 	ldw	r2,-32724(gp)
  81015c:	103ee83a 	callr	r2
  810160:	00000106 	br	810168 <alt_get_errno+0x28>
  810164:	d0a6d104 	addi	r2,gp,-25788
}
  810168:	e037883a 	mov	sp,fp
  81016c:	dfc00117 	ldw	ra,4(sp)
  810170:	df000017 	ldw	fp,0(sp)
  810174:	dec00204 	addi	sp,sp,8
  810178:	f800283a 	ret

0081017c <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
  81017c:	defff904 	addi	sp,sp,-28
  810180:	dfc00615 	stw	ra,24(sp)
  810184:	df000515 	stw	fp,20(sp)
  810188:	df000504 	addi	fp,sp,20
  81018c:	e13ffd15 	stw	r4,-12(fp)
  810190:	e17ffe15 	stw	r5,-8(fp)
  810194:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
  810198:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  81019c:	e0bffd17 	ldw	r2,-12(fp)
  8101a0:	10000616 	blt	r2,zero,8101bc <lseek+0x40>
  8101a4:	e0bffd17 	ldw	r2,-12(fp)
  8101a8:	10c00324 	muli	r3,r2,12
  8101ac:	00802074 	movhi	r2,129
  8101b0:	108ce004 	addi	r2,r2,13184
  8101b4:	1885883a 	add	r2,r3,r2
  8101b8:	00000106 	br	8101c0 <lseek+0x44>
  8101bc:	0005883a 	mov	r2,zero
  8101c0:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
  8101c4:	e0bffc17 	ldw	r2,-16(fp)
  8101c8:	10001026 	beq	r2,zero,81020c <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
  8101cc:	e0bffc17 	ldw	r2,-16(fp)
  8101d0:	10800017 	ldw	r2,0(r2)
  8101d4:	10800717 	ldw	r2,28(r2)
  8101d8:	10000926 	beq	r2,zero,810200 <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
  8101dc:	e0bffc17 	ldw	r2,-16(fp)
  8101e0:	10800017 	ldw	r2,0(r2)
  8101e4:	10800717 	ldw	r2,28(r2)
  8101e8:	e1bfff17 	ldw	r6,-4(fp)
  8101ec:	e17ffe17 	ldw	r5,-8(fp)
  8101f0:	e13ffc17 	ldw	r4,-16(fp)
  8101f4:	103ee83a 	callr	r2
  8101f8:	e0bffb15 	stw	r2,-20(fp)
  8101fc:	00000506 	br	810214 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
  810200:	00bfde84 	movi	r2,-134
  810204:	e0bffb15 	stw	r2,-20(fp)
  810208:	00000206 	br	810214 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
  81020c:	00bfebc4 	movi	r2,-81
  810210:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
  810214:	e0bffb17 	ldw	r2,-20(fp)
  810218:	1000070e 	bge	r2,zero,810238 <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
  81021c:	08101400 	call	810140 <alt_get_errno>
  810220:	1007883a 	mov	r3,r2
  810224:	e0bffb17 	ldw	r2,-20(fp)
  810228:	0085c83a 	sub	r2,zero,r2
  81022c:	18800015 	stw	r2,0(r3)
    rc = -1;
  810230:	00bfffc4 	movi	r2,-1
  810234:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
  810238:	e0bffb17 	ldw	r2,-20(fp)
}
  81023c:	e037883a 	mov	sp,fp
  810240:	dfc00117 	ldw	ra,4(sp)
  810244:	df000017 	ldw	fp,0(sp)
  810248:	dec00204 	addi	sp,sp,8
  81024c:	f800283a 	ret

00810250 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
  810250:	defffd04 	addi	sp,sp,-12
  810254:	dfc00215 	stw	ra,8(sp)
  810258:	df000115 	stw	fp,4(sp)
  81025c:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
  810260:	0009883a 	mov	r4,zero
  810264:	081077c0 	call	81077c <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
  810268:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
  81026c:	08107b40 	call	8107b4 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
  810270:	01802074 	movhi	r6,129
  810274:	318aa504 	addi	r6,r6,10900
  810278:	01402074 	movhi	r5,129
  81027c:	294aa504 	addi	r5,r5,10900
  810280:	01002074 	movhi	r4,129
  810284:	210aa504 	addi	r4,r4,10900
  810288:	0811a200 	call	811a20 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
  81028c:	08115c80 	call	8115c8 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
  810290:	01002074 	movhi	r4,129
  810294:	21058a04 	addi	r4,r4,5672
  810298:	08122200 	call	812220 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
  81029c:	d0a6d217 	ldw	r2,-25784(gp)
  8102a0:	d0e6d317 	ldw	r3,-25780(gp)
  8102a4:	d126d417 	ldw	r4,-25776(gp)
  8102a8:	200d883a 	mov	r6,r4
  8102ac:	180b883a 	mov	r5,r3
  8102b0:	1009883a 	mov	r4,r2
  8102b4:	08006900 	call	800690 <main>
  8102b8:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
  8102bc:	01000044 	movi	r4,1
  8102c0:	080fd8c0 	call	80fd8c <close>
  exit (result);
  8102c4:	e13fff17 	ldw	r4,-4(fp)
  8102c8:	08122340 	call	812234 <exit>

008102cc <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
  8102cc:	defffe04 	addi	sp,sp,-8
  8102d0:	df000115 	stw	fp,4(sp)
  8102d4:	df000104 	addi	fp,sp,4
  8102d8:	e13fff15 	stw	r4,-4(fp)
}
  8102dc:	0001883a 	nop
  8102e0:	e037883a 	mov	sp,fp
  8102e4:	df000017 	ldw	fp,0(sp)
  8102e8:	dec00104 	addi	sp,sp,4
  8102ec:	f800283a 	ret

008102f0 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
  8102f0:	defffe04 	addi	sp,sp,-8
  8102f4:	df000115 	stw	fp,4(sp)
  8102f8:	df000104 	addi	fp,sp,4
  8102fc:	e13fff15 	stw	r4,-4(fp)
}
  810300:	0001883a 	nop
  810304:	e037883a 	mov	sp,fp
  810308:	df000017 	ldw	fp,0(sp)
  81030c:	dec00104 	addi	sp,sp,4
  810310:	f800283a 	ret

00810314 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  810314:	defffe04 	addi	sp,sp,-8
  810318:	dfc00115 	stw	ra,4(sp)
  81031c:	df000015 	stw	fp,0(sp)
  810320:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  810324:	d0a00b17 	ldw	r2,-32724(gp)
  810328:	10000326 	beq	r2,zero,810338 <alt_get_errno+0x24>
  81032c:	d0a00b17 	ldw	r2,-32724(gp)
  810330:	103ee83a 	callr	r2
  810334:	00000106 	br	81033c <alt_get_errno+0x28>
  810338:	d0a6d104 	addi	r2,gp,-25788
}
  81033c:	e037883a 	mov	sp,fp
  810340:	dfc00117 	ldw	ra,4(sp)
  810344:	df000017 	ldw	fp,0(sp)
  810348:	dec00204 	addi	sp,sp,8
  81034c:	f800283a 	ret

00810350 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
  810350:	defff904 	addi	sp,sp,-28
  810354:	dfc00615 	stw	ra,24(sp)
  810358:	df000515 	stw	fp,20(sp)
  81035c:	df000504 	addi	fp,sp,20
  810360:	e13ffd15 	stw	r4,-12(fp)
  810364:	e17ffe15 	stw	r5,-8(fp)
  810368:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  81036c:	e0bffd17 	ldw	r2,-12(fp)
  810370:	10000616 	blt	r2,zero,81038c <read+0x3c>
  810374:	e0bffd17 	ldw	r2,-12(fp)
  810378:	10c00324 	muli	r3,r2,12
  81037c:	00802074 	movhi	r2,129
  810380:	108ce004 	addi	r2,r2,13184
  810384:	1885883a 	add	r2,r3,r2
  810388:	00000106 	br	810390 <read+0x40>
  81038c:	0005883a 	mov	r2,zero
  810390:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
  810394:	e0bffb17 	ldw	r2,-20(fp)
  810398:	10002226 	beq	r2,zero,810424 <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
  81039c:	e0bffb17 	ldw	r2,-20(fp)
  8103a0:	10800217 	ldw	r2,8(r2)
  8103a4:	108000cc 	andi	r2,r2,3
  8103a8:	10800060 	cmpeqi	r2,r2,1
  8103ac:	1000181e 	bne	r2,zero,810410 <read+0xc0>
        (fd->dev->read))
  8103b0:	e0bffb17 	ldw	r2,-20(fp)
  8103b4:	10800017 	ldw	r2,0(r2)
  8103b8:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
  8103bc:	10001426 	beq	r2,zero,810410 <read+0xc0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
  8103c0:	e0bffb17 	ldw	r2,-20(fp)
  8103c4:	10800017 	ldw	r2,0(r2)
  8103c8:	10800517 	ldw	r2,20(r2)
  8103cc:	e0ffff17 	ldw	r3,-4(fp)
  8103d0:	180d883a 	mov	r6,r3
  8103d4:	e17ffe17 	ldw	r5,-8(fp)
  8103d8:	e13ffb17 	ldw	r4,-20(fp)
  8103dc:	103ee83a 	callr	r2
  8103e0:	e0bffc15 	stw	r2,-16(fp)
  8103e4:	e0bffc17 	ldw	r2,-16(fp)
  8103e8:	1000070e 	bge	r2,zero,810408 <read+0xb8>
        {
          ALT_ERRNO = -rval;
  8103ec:	08103140 	call	810314 <alt_get_errno>
  8103f0:	1007883a 	mov	r3,r2
  8103f4:	e0bffc17 	ldw	r2,-16(fp)
  8103f8:	0085c83a 	sub	r2,zero,r2
  8103fc:	18800015 	stw	r2,0(r3)
          return -1;
  810400:	00bfffc4 	movi	r2,-1
  810404:	00000c06 	br	810438 <read+0xe8>
        }
        return rval;
  810408:	e0bffc17 	ldw	r2,-16(fp)
  81040c:	00000a06 	br	810438 <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
  810410:	08103140 	call	810314 <alt_get_errno>
  810414:	1007883a 	mov	r3,r2
  810418:	00800344 	movi	r2,13
  81041c:	18800015 	stw	r2,0(r3)
  810420:	00000406 	br	810434 <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
  810424:	08103140 	call	810314 <alt_get_errno>
  810428:	1007883a 	mov	r3,r2
  81042c:	00801444 	movi	r2,81
  810430:	18800015 	stw	r2,0(r3)
  }
  return -1;
  810434:	00bfffc4 	movi	r2,-1
}
  810438:	e037883a 	mov	sp,fp
  81043c:	dfc00117 	ldw	ra,4(sp)
  810440:	df000017 	ldw	fp,0(sp)
  810444:	dec00204 	addi	sp,sp,8
  810448:	f800283a 	ret

0081044c <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
  81044c:	defffe04 	addi	sp,sp,-8
  810450:	df000115 	stw	fp,4(sp)
  810454:	df000104 	addi	fp,sp,4
  810458:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
  81045c:	e0bfff17 	ldw	r2,-4(fp)
  810460:	108000d0 	cmplti	r2,r2,3
  810464:	10000d1e 	bne	r2,zero,81049c <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
  810468:	00802074 	movhi	r2,129
  81046c:	108ce004 	addi	r2,r2,13184
  810470:	e0ffff17 	ldw	r3,-4(fp)
  810474:	18c00324 	muli	r3,r3,12
  810478:	10c5883a 	add	r2,r2,r3
  81047c:	10800204 	addi	r2,r2,8
  810480:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
  810484:	00802074 	movhi	r2,129
  810488:	108ce004 	addi	r2,r2,13184
  81048c:	e0ffff17 	ldw	r3,-4(fp)
  810490:	18c00324 	muli	r3,r3,12
  810494:	10c5883a 	add	r2,r2,r3
  810498:	10000015 	stw	zero,0(r2)
  }
}
  81049c:	0001883a 	nop
  8104a0:	e037883a 	mov	sp,fp
  8104a4:	df000017 	ldw	fp,0(sp)
  8104a8:	dec00104 	addi	sp,sp,4
  8104ac:	f800283a 	ret

008104b0 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
  8104b0:	defff904 	addi	sp,sp,-28
  8104b4:	df000615 	stw	fp,24(sp)
  8104b8:	df000604 	addi	fp,sp,24
  8104bc:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  8104c0:	0005303a 	rdctl	r2,status
  8104c4:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  8104c8:	e0fffe17 	ldw	r3,-8(fp)
  8104cc:	00bfff84 	movi	r2,-2
  8104d0:	1884703a 	and	r2,r3,r2
  8104d4:	1001703a 	wrctl	status,r2
  
  return context;
  8104d8:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
  8104dc:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
  8104e0:	d0a00c17 	ldw	r2,-32720(gp)
  8104e4:	10c000c4 	addi	r3,r2,3
  8104e8:	00bfff04 	movi	r2,-4
  8104ec:	1884703a 	and	r2,r3,r2
  8104f0:	d0a00c15 	stw	r2,-32720(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
  8104f4:	d0e00c17 	ldw	r3,-32720(gp)
  8104f8:	e0bfff17 	ldw	r2,-4(fp)
  8104fc:	1887883a 	add	r3,r3,r2
  810500:	00804034 	movhi	r2,256
  810504:	10800004 	addi	r2,r2,0
  810508:	10c0062e 	bgeu	r2,r3,810524 <sbrk+0x74>
  81050c:	e0bffb17 	ldw	r2,-20(fp)
  810510:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  810514:	e0bffa17 	ldw	r2,-24(fp)
  810518:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  81051c:	00bfffc4 	movi	r2,-1
  810520:	00000b06 	br	810550 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
  810524:	d0a00c17 	ldw	r2,-32720(gp)
  810528:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
  81052c:	d0e00c17 	ldw	r3,-32720(gp)
  810530:	e0bfff17 	ldw	r2,-4(fp)
  810534:	1885883a 	add	r2,r3,r2
  810538:	d0a00c15 	stw	r2,-32720(gp)
  81053c:	e0bffb17 	ldw	r2,-20(fp)
  810540:	e0bffc15 	stw	r2,-16(fp)
  810544:	e0bffc17 	ldw	r2,-16(fp)
  810548:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
  81054c:	e0bffd17 	ldw	r2,-12(fp)
} 
  810550:	e037883a 	mov	sp,fp
  810554:	df000017 	ldw	fp,0(sp)
  810558:	dec00104 	addi	sp,sp,4
  81055c:	f800283a 	ret

00810560 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  810560:	defffe04 	addi	sp,sp,-8
  810564:	dfc00115 	stw	ra,4(sp)
  810568:	df000015 	stw	fp,0(sp)
  81056c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  810570:	d0a00b17 	ldw	r2,-32724(gp)
  810574:	10000326 	beq	r2,zero,810584 <alt_get_errno+0x24>
  810578:	d0a00b17 	ldw	r2,-32724(gp)
  81057c:	103ee83a 	callr	r2
  810580:	00000106 	br	810588 <alt_get_errno+0x28>
  810584:	d0a6d104 	addi	r2,gp,-25788
}
  810588:	e037883a 	mov	sp,fp
  81058c:	dfc00117 	ldw	ra,4(sp)
  810590:	df000017 	ldw	fp,0(sp)
  810594:	dec00204 	addi	sp,sp,8
  810598:	f800283a 	ret

0081059c <times>:
 *
 * ALT_TIMES is mapped onto the times() system call in alt_syscall.h
 */
 
clock_t ALT_TIMES (struct tms *buf)
{
  81059c:	defffc04 	addi	sp,sp,-16
  8105a0:	dfc00315 	stw	ra,12(sp)
  8105a4:	df000215 	stw	fp,8(sp)
  8105a8:	df000204 	addi	fp,sp,8
  8105ac:	e13fff15 	stw	r4,-4(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
  8105b0:	d0a6d717 	ldw	r2,-25764(gp)
  clock_t ticks = alt_nticks(); 
  8105b4:	e0bffe15 	stw	r2,-8(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
  8105b8:	d0a6d617 	ldw	r2,-25768(gp)

  /* If there is no system clock present, generate an error */

  if (!alt_ticks_per_second())
  8105bc:	1000061e 	bne	r2,zero,8105d8 <times+0x3c>
  {
    ALT_ERRNO = ENOSYS;
  8105c0:	08105600 	call	810560 <alt_get_errno>
  8105c4:	1007883a 	mov	r3,r2
  8105c8:	00801604 	movi	r2,88
  8105cc:	18800015 	stw	r2,0(r3)
    return 0;
  8105d0:	0005883a 	mov	r2,zero
  8105d4:	00000a06 	br	810600 <times+0x64>
  }

  /* Otherwise return the elapsed time */

  buf->tms_utime  = 0;
  8105d8:	e0bfff17 	ldw	r2,-4(fp)
  8105dc:	10000015 	stw	zero,0(r2)
  buf->tms_stime  = ticks;
  8105e0:	e0bfff17 	ldw	r2,-4(fp)
  8105e4:	e0fffe17 	ldw	r3,-8(fp)
  8105e8:	10c00115 	stw	r3,4(r2)
  buf->tms_cutime = 0;
  8105ec:	e0bfff17 	ldw	r2,-4(fp)
  8105f0:	10000215 	stw	zero,8(r2)
  buf->tms_cstime = 0;
  8105f4:	e0bfff17 	ldw	r2,-4(fp)
  8105f8:	10000315 	stw	zero,12(r2)

  return ticks;
  8105fc:	e0bffe17 	ldw	r2,-8(fp)
}
  810600:	e037883a 	mov	sp,fp
  810604:	dfc00117 	ldw	ra,4(sp)
  810608:	df000017 	ldw	fp,0(sp)
  81060c:	dec00204 	addi	sp,sp,8
  810610:	f800283a 	ret

00810614 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  810614:	defffe04 	addi	sp,sp,-8
  810618:	dfc00115 	stw	ra,4(sp)
  81061c:	df000015 	stw	fp,0(sp)
  810620:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  810624:	d0a00b17 	ldw	r2,-32724(gp)
  810628:	10000326 	beq	r2,zero,810638 <alt_get_errno+0x24>
  81062c:	d0a00b17 	ldw	r2,-32724(gp)
  810630:	103ee83a 	callr	r2
  810634:	00000106 	br	81063c <alt_get_errno+0x28>
  810638:	d0a6d104 	addi	r2,gp,-25788
}
  81063c:	e037883a 	mov	sp,fp
  810640:	dfc00117 	ldw	ra,4(sp)
  810644:	df000017 	ldw	fp,0(sp)
  810648:	dec00204 	addi	sp,sp,8
  81064c:	f800283a 	ret

00810650 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
  810650:	defff904 	addi	sp,sp,-28
  810654:	dfc00615 	stw	ra,24(sp)
  810658:	df000515 	stw	fp,20(sp)
  81065c:	df000504 	addi	fp,sp,20
  810660:	e13ffd15 	stw	r4,-12(fp)
  810664:	e17ffe15 	stw	r5,-8(fp)
  810668:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  81066c:	e0bffd17 	ldw	r2,-12(fp)
  810670:	10000616 	blt	r2,zero,81068c <write+0x3c>
  810674:	e0bffd17 	ldw	r2,-12(fp)
  810678:	10c00324 	muli	r3,r2,12
  81067c:	00802074 	movhi	r2,129
  810680:	108ce004 	addi	r2,r2,13184
  810684:	1885883a 	add	r2,r3,r2
  810688:	00000106 	br	810690 <write+0x40>
  81068c:	0005883a 	mov	r2,zero
  810690:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
  810694:	e0bffb17 	ldw	r2,-20(fp)
  810698:	10002126 	beq	r2,zero,810720 <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
  81069c:	e0bffb17 	ldw	r2,-20(fp)
  8106a0:	10800217 	ldw	r2,8(r2)
  8106a4:	108000cc 	andi	r2,r2,3
  8106a8:	10001826 	beq	r2,zero,81070c <write+0xbc>
  8106ac:	e0bffb17 	ldw	r2,-20(fp)
  8106b0:	10800017 	ldw	r2,0(r2)
  8106b4:	10800617 	ldw	r2,24(r2)
  8106b8:	10001426 	beq	r2,zero,81070c <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
  8106bc:	e0bffb17 	ldw	r2,-20(fp)
  8106c0:	10800017 	ldw	r2,0(r2)
  8106c4:	10800617 	ldw	r2,24(r2)
  8106c8:	e0ffff17 	ldw	r3,-4(fp)
  8106cc:	180d883a 	mov	r6,r3
  8106d0:	e17ffe17 	ldw	r5,-8(fp)
  8106d4:	e13ffb17 	ldw	r4,-20(fp)
  8106d8:	103ee83a 	callr	r2
  8106dc:	e0bffc15 	stw	r2,-16(fp)
  8106e0:	e0bffc17 	ldw	r2,-16(fp)
  8106e4:	1000070e 	bge	r2,zero,810704 <write+0xb4>
      {
        ALT_ERRNO = -rval;
  8106e8:	08106140 	call	810614 <alt_get_errno>
  8106ec:	1007883a 	mov	r3,r2
  8106f0:	e0bffc17 	ldw	r2,-16(fp)
  8106f4:	0085c83a 	sub	r2,zero,r2
  8106f8:	18800015 	stw	r2,0(r3)
        return -1;
  8106fc:	00bfffc4 	movi	r2,-1
  810700:	00000c06 	br	810734 <write+0xe4>
      }
      return rval;
  810704:	e0bffc17 	ldw	r2,-16(fp)
  810708:	00000a06 	br	810734 <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
  81070c:	08106140 	call	810614 <alt_get_errno>
  810710:	1007883a 	mov	r3,r2
  810714:	00800344 	movi	r2,13
  810718:	18800015 	stw	r2,0(r3)
  81071c:	00000406 	br	810730 <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
  810720:	08106140 	call	810614 <alt_get_errno>
  810724:	1007883a 	mov	r3,r2
  810728:	00801444 	movi	r2,81
  81072c:	18800015 	stw	r2,0(r3)
  }
  return -1;
  810730:	00bfffc4 	movi	r2,-1
}
  810734:	e037883a 	mov	sp,fp
  810738:	dfc00117 	ldw	ra,4(sp)
  81073c:	df000017 	ldw	fp,0(sp)
  810740:	dec00204 	addi	sp,sp,8
  810744:	f800283a 	ret

00810748 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
  810748:	defffd04 	addi	sp,sp,-12
  81074c:	dfc00215 	stw	ra,8(sp)
  810750:	df000115 	stw	fp,4(sp)
  810754:	df000104 	addi	fp,sp,4
  810758:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
  81075c:	d1600804 	addi	r5,gp,-32736
  810760:	e13fff17 	ldw	r4,-4(fp)
  810764:	08115240 	call	811524 <alt_dev_llist_insert>
}
  810768:	e037883a 	mov	sp,fp
  81076c:	dfc00117 	ldw	ra,4(sp)
  810770:	df000017 	ldw	fp,0(sp)
  810774:	dec00204 	addi	sp,sp,8
  810778:	f800283a 	ret

0081077c <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
  81077c:	defffd04 	addi	sp,sp,-12
  810780:	dfc00215 	stw	ra,8(sp)
  810784:	df000115 	stw	fp,4(sp)
  810788:	df000104 	addi	fp,sp,4
  81078c:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( CPU, cpu);
  810790:	0811e940 	call	811e94 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
  810794:	00800044 	movi	r2,1
  810798:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
  81079c:	0001883a 	nop
  8107a0:	e037883a 	mov	sp,fp
  8107a4:	dfc00117 	ldw	ra,4(sp)
  8107a8:	df000017 	ldw	fp,0(sp)
  8107ac:	dec00204 	addi	sp,sp,8
  8107b0:	f800283a 	ret

008107b4 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
  8107b4:	defffe04 	addi	sp,sp,-8
  8107b8:	dfc00115 	stw	ra,4(sp)
  8107bc:	df000015 	stw	fp,0(sp)
  8107c0:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( SYS_CLK_TIMER, sys_clk_timer);
  8107c4:	01c0fa04 	movi	r7,1000
  8107c8:	01800044 	movi	r6,1
  8107cc:	000b883a 	mov	r5,zero
  8107d0:	01004034 	movhi	r4,256
  8107d4:	21040004 	addi	r4,r4,4096
  8107d8:	08112f80 	call	8112f8 <alt_avalon_timer_sc_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, jtag_uart);
  8107dc:	01800404 	movi	r6,16
  8107e0:	000b883a 	mov	r5,zero
  8107e4:	01002074 	movhi	r4,129
  8107e8:	210d4a04 	addi	r4,r4,13608
  8107ec:	081097c0 	call	81097c <altera_avalon_jtag_uart_init>
  8107f0:	01002074 	movhi	r4,129
  8107f4:	210d4004 	addi	r4,r4,13568
  8107f8:	08107480 	call	810748 <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID, sysid);
  8107fc:	0001883a 	nop
}
  810800:	0001883a 	nop
  810804:	e037883a 	mov	sp,fp
  810808:	dfc00117 	ldw	ra,4(sp)
  81080c:	df000017 	ldw	fp,0(sp)
  810810:	dec00204 	addi	sp,sp,8
  810814:	f800283a 	ret

00810818 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
  810818:	defffa04 	addi	sp,sp,-24
  81081c:	dfc00515 	stw	ra,20(sp)
  810820:	df000415 	stw	fp,16(sp)
  810824:	df000404 	addi	fp,sp,16
  810828:	e13ffd15 	stw	r4,-12(fp)
  81082c:	e17ffe15 	stw	r5,-8(fp)
  810830:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  810834:	e0bffd17 	ldw	r2,-12(fp)
  810838:	10800017 	ldw	r2,0(r2)
  81083c:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
  810840:	e0bffc17 	ldw	r2,-16(fp)
  810844:	10c00a04 	addi	r3,r2,40
  810848:	e0bffd17 	ldw	r2,-12(fp)
  81084c:	10800217 	ldw	r2,8(r2)
  810850:	100f883a 	mov	r7,r2
  810854:	e1bfff17 	ldw	r6,-4(fp)
  810858:	e17ffe17 	ldw	r5,-8(fp)
  81085c:	1809883a 	mov	r4,r3
  810860:	0810e400 	call	810e40 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
  810864:	e037883a 	mov	sp,fp
  810868:	dfc00117 	ldw	ra,4(sp)
  81086c:	df000017 	ldw	fp,0(sp)
  810870:	dec00204 	addi	sp,sp,8
  810874:	f800283a 	ret

00810878 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
  810878:	defffa04 	addi	sp,sp,-24
  81087c:	dfc00515 	stw	ra,20(sp)
  810880:	df000415 	stw	fp,16(sp)
  810884:	df000404 	addi	fp,sp,16
  810888:	e13ffd15 	stw	r4,-12(fp)
  81088c:	e17ffe15 	stw	r5,-8(fp)
  810890:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  810894:	e0bffd17 	ldw	r2,-12(fp)
  810898:	10800017 	ldw	r2,0(r2)
  81089c:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
  8108a0:	e0bffc17 	ldw	r2,-16(fp)
  8108a4:	10c00a04 	addi	r3,r2,40
  8108a8:	e0bffd17 	ldw	r2,-12(fp)
  8108ac:	10800217 	ldw	r2,8(r2)
  8108b0:	100f883a 	mov	r7,r2
  8108b4:	e1bfff17 	ldw	r6,-4(fp)
  8108b8:	e17ffe17 	ldw	r5,-8(fp)
  8108bc:	1809883a 	mov	r4,r3
  8108c0:	081105c0 	call	81105c <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
  8108c4:	e037883a 	mov	sp,fp
  8108c8:	dfc00117 	ldw	ra,4(sp)
  8108cc:	df000017 	ldw	fp,0(sp)
  8108d0:	dec00204 	addi	sp,sp,8
  8108d4:	f800283a 	ret

008108d8 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
  8108d8:	defffc04 	addi	sp,sp,-16
  8108dc:	dfc00315 	stw	ra,12(sp)
  8108e0:	df000215 	stw	fp,8(sp)
  8108e4:	df000204 	addi	fp,sp,8
  8108e8:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  8108ec:	e0bfff17 	ldw	r2,-4(fp)
  8108f0:	10800017 	ldw	r2,0(r2)
  8108f4:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
  8108f8:	e0bffe17 	ldw	r2,-8(fp)
  8108fc:	10c00a04 	addi	r3,r2,40
  810900:	e0bfff17 	ldw	r2,-4(fp)
  810904:	10800217 	ldw	r2,8(r2)
  810908:	100b883a 	mov	r5,r2
  81090c:	1809883a 	mov	r4,r3
  810910:	0810ce80 	call	810ce8 <altera_avalon_jtag_uart_close>
}
  810914:	e037883a 	mov	sp,fp
  810918:	dfc00117 	ldw	ra,4(sp)
  81091c:	df000017 	ldw	fp,0(sp)
  810920:	dec00204 	addi	sp,sp,8
  810924:	f800283a 	ret

00810928 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
  810928:	defffa04 	addi	sp,sp,-24
  81092c:	dfc00515 	stw	ra,20(sp)
  810930:	df000415 	stw	fp,16(sp)
  810934:	df000404 	addi	fp,sp,16
  810938:	e13ffd15 	stw	r4,-12(fp)
  81093c:	e17ffe15 	stw	r5,-8(fp)
  810940:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
  810944:	e0bffd17 	ldw	r2,-12(fp)
  810948:	10800017 	ldw	r2,0(r2)
  81094c:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
  810950:	e0bffc17 	ldw	r2,-16(fp)
  810954:	10800a04 	addi	r2,r2,40
  810958:	e1bfff17 	ldw	r6,-4(fp)
  81095c:	e17ffe17 	ldw	r5,-8(fp)
  810960:	1009883a 	mov	r4,r2
  810964:	0810d500 	call	810d50 <altera_avalon_jtag_uart_ioctl>
}
  810968:	e037883a 	mov	sp,fp
  81096c:	dfc00117 	ldw	ra,4(sp)
  810970:	df000017 	ldw	fp,0(sp)
  810974:	dec00204 	addi	sp,sp,8
  810978:	f800283a 	ret

0081097c <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
  81097c:	defffa04 	addi	sp,sp,-24
  810980:	dfc00515 	stw	ra,20(sp)
  810984:	df000415 	stw	fp,16(sp)
  810988:	df000404 	addi	fp,sp,16
  81098c:	e13ffd15 	stw	r4,-12(fp)
  810990:	e17ffe15 	stw	r5,-8(fp)
  810994:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  810998:	e0bffd17 	ldw	r2,-12(fp)
  81099c:	00c00044 	movi	r3,1
  8109a0:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
  8109a4:	e0bffd17 	ldw	r2,-12(fp)
  8109a8:	10800017 	ldw	r2,0(r2)
  8109ac:	10800104 	addi	r2,r2,4
  8109b0:	1007883a 	mov	r3,r2
  8109b4:	e0bffd17 	ldw	r2,-12(fp)
  8109b8:	10800817 	ldw	r2,32(r2)
  8109bc:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
  8109c0:	e0bffe17 	ldw	r2,-8(fp)
  8109c4:	e0ffff17 	ldw	r3,-4(fp)
  8109c8:	d8000015 	stw	zero,0(sp)
  8109cc:	e1fffd17 	ldw	r7,-12(fp)
  8109d0:	01802074 	movhi	r6,129
  8109d4:	31828f04 	addi	r6,r6,2620
  8109d8:	180b883a 	mov	r5,r3
  8109dc:	1009883a 	mov	r4,r2
  8109e0:	08116bc0 	call	8116bc <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
  8109e4:	e0bffd17 	ldw	r2,-12(fp)
  8109e8:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
  8109ec:	e0bffd17 	ldw	r2,-12(fp)
  8109f0:	10800204 	addi	r2,r2,8
  8109f4:	d0e6d617 	ldw	r3,-25768(gp)
  8109f8:	e1fffd17 	ldw	r7,-12(fp)
  8109fc:	01802074 	movhi	r6,129
  810a00:	31831204 	addi	r6,r6,3144
  810a04:	180b883a 	mov	r5,r3
  810a08:	1009883a 	mov	r4,r2
  810a0c:	08113740 	call	811374 <alt_alarm_start>
  810a10:	1000040e 	bge	r2,zero,810a24 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
  810a14:	e0fffd17 	ldw	r3,-12(fp)
  810a18:	00a00034 	movhi	r2,32768
  810a1c:	10bfffc4 	addi	r2,r2,-1
  810a20:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
  810a24:	0001883a 	nop
  810a28:	e037883a 	mov	sp,fp
  810a2c:	dfc00117 	ldw	ra,4(sp)
  810a30:	df000017 	ldw	fp,0(sp)
  810a34:	dec00204 	addi	sp,sp,8
  810a38:	f800283a 	ret

00810a3c <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
  810a3c:	defff804 	addi	sp,sp,-32
  810a40:	df000715 	stw	fp,28(sp)
  810a44:	df000704 	addi	fp,sp,28
  810a48:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
  810a4c:	e0bfff17 	ldw	r2,-4(fp)
  810a50:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
  810a54:	e0bffb17 	ldw	r2,-20(fp)
  810a58:	10800017 	ldw	r2,0(r2)
  810a5c:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  810a60:	e0bffc17 	ldw	r2,-16(fp)
  810a64:	10800104 	addi	r2,r2,4
  810a68:	10800037 	ldwio	r2,0(r2)
  810a6c:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
  810a70:	e0bffd17 	ldw	r2,-12(fp)
  810a74:	1080c00c 	andi	r2,r2,768
  810a78:	10006d26 	beq	r2,zero,810c30 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
  810a7c:	e0bffd17 	ldw	r2,-12(fp)
  810a80:	1080400c 	andi	r2,r2,256
  810a84:	10003526 	beq	r2,zero,810b5c <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
  810a88:	00800074 	movhi	r2,1
  810a8c:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  810a90:	e0bffb17 	ldw	r2,-20(fp)
  810a94:	10800a17 	ldw	r2,40(r2)
  810a98:	10800044 	addi	r2,r2,1
  810a9c:	1081ffcc 	andi	r2,r2,2047
  810aa0:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
  810aa4:	e0bffb17 	ldw	r2,-20(fp)
  810aa8:	10c00b17 	ldw	r3,44(r2)
  810aac:	e0bffe17 	ldw	r2,-8(fp)
  810ab0:	18801526 	beq	r3,r2,810b08 <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
  810ab4:	e0bffc17 	ldw	r2,-16(fp)
  810ab8:	10800037 	ldwio	r2,0(r2)
  810abc:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
  810ac0:	e0bff917 	ldw	r2,-28(fp)
  810ac4:	10a0000c 	andi	r2,r2,32768
  810ac8:	10001126 	beq	r2,zero,810b10 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
  810acc:	e0bffb17 	ldw	r2,-20(fp)
  810ad0:	10800a17 	ldw	r2,40(r2)
  810ad4:	e0fff917 	ldw	r3,-28(fp)
  810ad8:	1809883a 	mov	r4,r3
  810adc:	e0fffb17 	ldw	r3,-20(fp)
  810ae0:	1885883a 	add	r2,r3,r2
  810ae4:	10800e04 	addi	r2,r2,56
  810ae8:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  810aec:	e0bffb17 	ldw	r2,-20(fp)
  810af0:	10800a17 	ldw	r2,40(r2)
  810af4:	10800044 	addi	r2,r2,1
  810af8:	10c1ffcc 	andi	r3,r2,2047
  810afc:	e0bffb17 	ldw	r2,-20(fp)
  810b00:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
  810b04:	003fe206 	br	810a90 <__alt_data_end+0xff810a90>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
  810b08:	0001883a 	nop
  810b0c:	00000106 	br	810b14 <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
  810b10:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
  810b14:	e0bff917 	ldw	r2,-28(fp)
  810b18:	10bfffec 	andhi	r2,r2,65535
  810b1c:	10000f26 	beq	r2,zero,810b5c <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  810b20:	e0bffb17 	ldw	r2,-20(fp)
  810b24:	10c00817 	ldw	r3,32(r2)
  810b28:	00bfff84 	movi	r2,-2
  810b2c:	1886703a 	and	r3,r3,r2
  810b30:	e0bffb17 	ldw	r2,-20(fp)
  810b34:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
  810b38:	e0bffc17 	ldw	r2,-16(fp)
  810b3c:	10800104 	addi	r2,r2,4
  810b40:	1007883a 	mov	r3,r2
  810b44:	e0bffb17 	ldw	r2,-20(fp)
  810b48:	10800817 	ldw	r2,32(r2)
  810b4c:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  810b50:	e0bffc17 	ldw	r2,-16(fp)
  810b54:	10800104 	addi	r2,r2,4
  810b58:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
  810b5c:	e0bffd17 	ldw	r2,-12(fp)
  810b60:	1080800c 	andi	r2,r2,512
  810b64:	103fbe26 	beq	r2,zero,810a60 <__alt_data_end+0xff810a60>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
  810b68:	e0bffd17 	ldw	r2,-12(fp)
  810b6c:	1004d43a 	srli	r2,r2,16
  810b70:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
  810b74:	00001406 	br	810bc8 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
  810b78:	e0bffc17 	ldw	r2,-16(fp)
  810b7c:	e0fffb17 	ldw	r3,-20(fp)
  810b80:	18c00d17 	ldw	r3,52(r3)
  810b84:	e13ffb17 	ldw	r4,-20(fp)
  810b88:	20c7883a 	add	r3,r4,r3
  810b8c:	18c20e04 	addi	r3,r3,2104
  810b90:	18c00003 	ldbu	r3,0(r3)
  810b94:	18c03fcc 	andi	r3,r3,255
  810b98:	18c0201c 	xori	r3,r3,128
  810b9c:	18ffe004 	addi	r3,r3,-128
  810ba0:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  810ba4:	e0bffb17 	ldw	r2,-20(fp)
  810ba8:	10800d17 	ldw	r2,52(r2)
  810bac:	10800044 	addi	r2,r2,1
  810bb0:	10c1ffcc 	andi	r3,r2,2047
  810bb4:	e0bffb17 	ldw	r2,-20(fp)
  810bb8:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
  810bbc:	e0bffa17 	ldw	r2,-24(fp)
  810bc0:	10bfffc4 	addi	r2,r2,-1
  810bc4:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
  810bc8:	e0bffa17 	ldw	r2,-24(fp)
  810bcc:	10000526 	beq	r2,zero,810be4 <altera_avalon_jtag_uart_irq+0x1a8>
  810bd0:	e0bffb17 	ldw	r2,-20(fp)
  810bd4:	10c00d17 	ldw	r3,52(r2)
  810bd8:	e0bffb17 	ldw	r2,-20(fp)
  810bdc:	10800c17 	ldw	r2,48(r2)
  810be0:	18bfe51e 	bne	r3,r2,810b78 <__alt_data_end+0xff810b78>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
  810be4:	e0bffa17 	ldw	r2,-24(fp)
  810be8:	103f9d26 	beq	r2,zero,810a60 <__alt_data_end+0xff810a60>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
  810bec:	e0bffb17 	ldw	r2,-20(fp)
  810bf0:	10c00817 	ldw	r3,32(r2)
  810bf4:	00bfff44 	movi	r2,-3
  810bf8:	1886703a 	and	r3,r3,r2
  810bfc:	e0bffb17 	ldw	r2,-20(fp)
  810c00:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  810c04:	e0bffb17 	ldw	r2,-20(fp)
  810c08:	10800017 	ldw	r2,0(r2)
  810c0c:	10800104 	addi	r2,r2,4
  810c10:	1007883a 	mov	r3,r2
  810c14:	e0bffb17 	ldw	r2,-20(fp)
  810c18:	10800817 	ldw	r2,32(r2)
  810c1c:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  810c20:	e0bffc17 	ldw	r2,-16(fp)
  810c24:	10800104 	addi	r2,r2,4
  810c28:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
  810c2c:	003f8c06 	br	810a60 <__alt_data_end+0xff810a60>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
  810c30:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
  810c34:	0001883a 	nop
  810c38:	e037883a 	mov	sp,fp
  810c3c:	df000017 	ldw	fp,0(sp)
  810c40:	dec00104 	addi	sp,sp,4
  810c44:	f800283a 	ret

00810c48 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
  810c48:	defff804 	addi	sp,sp,-32
  810c4c:	df000715 	stw	fp,28(sp)
  810c50:	df000704 	addi	fp,sp,28
  810c54:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
  810c58:	e0bffb17 	ldw	r2,-20(fp)
  810c5c:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
  810c60:	e0bff917 	ldw	r2,-28(fp)
  810c64:	10800017 	ldw	r2,0(r2)
  810c68:	10800104 	addi	r2,r2,4
  810c6c:	10800037 	ldwio	r2,0(r2)
  810c70:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
  810c74:	e0bffa17 	ldw	r2,-24(fp)
  810c78:	1081000c 	andi	r2,r2,1024
  810c7c:	10000b26 	beq	r2,zero,810cac <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
  810c80:	e0bff917 	ldw	r2,-28(fp)
  810c84:	10800017 	ldw	r2,0(r2)
  810c88:	10800104 	addi	r2,r2,4
  810c8c:	1007883a 	mov	r3,r2
  810c90:	e0bff917 	ldw	r2,-28(fp)
  810c94:	10800817 	ldw	r2,32(r2)
  810c98:	10810014 	ori	r2,r2,1024
  810c9c:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
  810ca0:	e0bff917 	ldw	r2,-28(fp)
  810ca4:	10000915 	stw	zero,36(r2)
  810ca8:	00000a06 	br	810cd4 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
  810cac:	e0bff917 	ldw	r2,-28(fp)
  810cb0:	10c00917 	ldw	r3,36(r2)
  810cb4:	00a00034 	movhi	r2,32768
  810cb8:	10bfff04 	addi	r2,r2,-4
  810cbc:	10c00536 	bltu	r2,r3,810cd4 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
  810cc0:	e0bff917 	ldw	r2,-28(fp)
  810cc4:	10800917 	ldw	r2,36(r2)
  810cc8:	10c00044 	addi	r3,r2,1
  810ccc:	e0bff917 	ldw	r2,-28(fp)
  810cd0:	10c00915 	stw	r3,36(r2)
  810cd4:	d0a6d617 	ldw	r2,-25768(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
  810cd8:	e037883a 	mov	sp,fp
  810cdc:	df000017 	ldw	fp,0(sp)
  810ce0:	dec00104 	addi	sp,sp,4
  810ce4:	f800283a 	ret

00810ce8 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
  810ce8:	defffd04 	addi	sp,sp,-12
  810cec:	df000215 	stw	fp,8(sp)
  810cf0:	df000204 	addi	fp,sp,8
  810cf4:	e13ffe15 	stw	r4,-8(fp)
  810cf8:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
  810cfc:	00000506 	br	810d14 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
  810d00:	e0bfff17 	ldw	r2,-4(fp)
  810d04:	1090000c 	andi	r2,r2,16384
  810d08:	10000226 	beq	r2,zero,810d14 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
  810d0c:	00bffd44 	movi	r2,-11
  810d10:	00000b06 	br	810d40 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
  810d14:	e0bffe17 	ldw	r2,-8(fp)
  810d18:	10c00d17 	ldw	r3,52(r2)
  810d1c:	e0bffe17 	ldw	r2,-8(fp)
  810d20:	10800c17 	ldw	r2,48(r2)
  810d24:	18800526 	beq	r3,r2,810d3c <altera_avalon_jtag_uart_close+0x54>
  810d28:	e0bffe17 	ldw	r2,-8(fp)
  810d2c:	10c00917 	ldw	r3,36(r2)
  810d30:	e0bffe17 	ldw	r2,-8(fp)
  810d34:	10800117 	ldw	r2,4(r2)
  810d38:	18bff136 	bltu	r3,r2,810d00 <__alt_data_end+0xff810d00>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
  810d3c:	0005883a 	mov	r2,zero
}
  810d40:	e037883a 	mov	sp,fp
  810d44:	df000017 	ldw	fp,0(sp)
  810d48:	dec00104 	addi	sp,sp,4
  810d4c:	f800283a 	ret

00810d50 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
  810d50:	defffa04 	addi	sp,sp,-24
  810d54:	df000515 	stw	fp,20(sp)
  810d58:	df000504 	addi	fp,sp,20
  810d5c:	e13ffd15 	stw	r4,-12(fp)
  810d60:	e17ffe15 	stw	r5,-8(fp)
  810d64:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
  810d68:	00bff9c4 	movi	r2,-25
  810d6c:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
  810d70:	e0bffe17 	ldw	r2,-8(fp)
  810d74:	10da8060 	cmpeqi	r3,r2,27137
  810d78:	1800031e 	bne	r3,zero,810d88 <altera_avalon_jtag_uart_ioctl+0x38>
  810d7c:	109a80a0 	cmpeqi	r2,r2,27138
  810d80:	1000181e 	bne	r2,zero,810de4 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
  810d84:	00002906 	br	810e2c <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
  810d88:	e0bffd17 	ldw	r2,-12(fp)
  810d8c:	10c00117 	ldw	r3,4(r2)
  810d90:	00a00034 	movhi	r2,32768
  810d94:	10bfffc4 	addi	r2,r2,-1
  810d98:	18802126 	beq	r3,r2,810e20 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
  810d9c:	e0bfff17 	ldw	r2,-4(fp)
  810da0:	10800017 	ldw	r2,0(r2)
  810da4:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
  810da8:	e0bffc17 	ldw	r2,-16(fp)
  810dac:	10800090 	cmplti	r2,r2,2
  810db0:	1000061e 	bne	r2,zero,810dcc <altera_avalon_jtag_uart_ioctl+0x7c>
  810db4:	e0fffc17 	ldw	r3,-16(fp)
  810db8:	00a00034 	movhi	r2,32768
  810dbc:	10bfffc4 	addi	r2,r2,-1
  810dc0:	18800226 	beq	r3,r2,810dcc <altera_avalon_jtag_uart_ioctl+0x7c>
  810dc4:	e0bffc17 	ldw	r2,-16(fp)
  810dc8:	00000206 	br	810dd4 <altera_avalon_jtag_uart_ioctl+0x84>
  810dcc:	00a00034 	movhi	r2,32768
  810dd0:	10bfff84 	addi	r2,r2,-2
  810dd4:	e0fffd17 	ldw	r3,-12(fp)
  810dd8:	18800115 	stw	r2,4(r3)
      rc = 0;
  810ddc:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
  810de0:	00000f06 	br	810e20 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
  810de4:	e0bffd17 	ldw	r2,-12(fp)
  810de8:	10c00117 	ldw	r3,4(r2)
  810dec:	00a00034 	movhi	r2,32768
  810df0:	10bfffc4 	addi	r2,r2,-1
  810df4:	18800c26 	beq	r3,r2,810e28 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
  810df8:	e0bffd17 	ldw	r2,-12(fp)
  810dfc:	10c00917 	ldw	r3,36(r2)
  810e00:	e0bffd17 	ldw	r2,-12(fp)
  810e04:	10800117 	ldw	r2,4(r2)
  810e08:	1885803a 	cmpltu	r2,r3,r2
  810e0c:	10c03fcc 	andi	r3,r2,255
  810e10:	e0bfff17 	ldw	r2,-4(fp)
  810e14:	10c00015 	stw	r3,0(r2)
      rc = 0;
  810e18:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
  810e1c:	00000206 	br	810e28 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
  810e20:	0001883a 	nop
  810e24:	00000106 	br	810e2c <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
  810e28:	0001883a 	nop

  default:
    break;
  }

  return rc;
  810e2c:	e0bffb17 	ldw	r2,-20(fp)
}
  810e30:	e037883a 	mov	sp,fp
  810e34:	df000017 	ldw	fp,0(sp)
  810e38:	dec00104 	addi	sp,sp,4
  810e3c:	f800283a 	ret

00810e40 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
  810e40:	defff304 	addi	sp,sp,-52
  810e44:	dfc00c15 	stw	ra,48(sp)
  810e48:	df000b15 	stw	fp,44(sp)
  810e4c:	df000b04 	addi	fp,sp,44
  810e50:	e13ffc15 	stw	r4,-16(fp)
  810e54:	e17ffd15 	stw	r5,-12(fp)
  810e58:	e1bffe15 	stw	r6,-8(fp)
  810e5c:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
  810e60:	e0bffd17 	ldw	r2,-12(fp)
  810e64:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
  810e68:	00004706 	br	810f88 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
  810e6c:	e0bffc17 	ldw	r2,-16(fp)
  810e70:	10800a17 	ldw	r2,40(r2)
  810e74:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
  810e78:	e0bffc17 	ldw	r2,-16(fp)
  810e7c:	10800b17 	ldw	r2,44(r2)
  810e80:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
  810e84:	e0fff717 	ldw	r3,-36(fp)
  810e88:	e0bff817 	ldw	r2,-32(fp)
  810e8c:	18800536 	bltu	r3,r2,810ea4 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
  810e90:	e0fff717 	ldw	r3,-36(fp)
  810e94:	e0bff817 	ldw	r2,-32(fp)
  810e98:	1885c83a 	sub	r2,r3,r2
  810e9c:	e0bff615 	stw	r2,-40(fp)
  810ea0:	00000406 	br	810eb4 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
  810ea4:	00c20004 	movi	r3,2048
  810ea8:	e0bff817 	ldw	r2,-32(fp)
  810eac:	1885c83a 	sub	r2,r3,r2
  810eb0:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
  810eb4:	e0bff617 	ldw	r2,-40(fp)
  810eb8:	10001e26 	beq	r2,zero,810f34 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
  810ebc:	e0fffe17 	ldw	r3,-8(fp)
  810ec0:	e0bff617 	ldw	r2,-40(fp)
  810ec4:	1880022e 	bgeu	r3,r2,810ed0 <altera_avalon_jtag_uart_read+0x90>
        n = space;
  810ec8:	e0bffe17 	ldw	r2,-8(fp)
  810ecc:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
  810ed0:	e0bffc17 	ldw	r2,-16(fp)
  810ed4:	10c00e04 	addi	r3,r2,56
  810ed8:	e0bff817 	ldw	r2,-32(fp)
  810edc:	1885883a 	add	r2,r3,r2
  810ee0:	e1bff617 	ldw	r6,-40(fp)
  810ee4:	100b883a 	mov	r5,r2
  810ee8:	e13ff517 	ldw	r4,-44(fp)
  810eec:	080b57c0 	call	80b57c <memcpy>
      ptr   += n;
  810ef0:	e0fff517 	ldw	r3,-44(fp)
  810ef4:	e0bff617 	ldw	r2,-40(fp)
  810ef8:	1885883a 	add	r2,r3,r2
  810efc:	e0bff515 	stw	r2,-44(fp)
      space -= n;
  810f00:	e0fffe17 	ldw	r3,-8(fp)
  810f04:	e0bff617 	ldw	r2,-40(fp)
  810f08:	1885c83a 	sub	r2,r3,r2
  810f0c:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  810f10:	e0fff817 	ldw	r3,-32(fp)
  810f14:	e0bff617 	ldw	r2,-40(fp)
  810f18:	1885883a 	add	r2,r3,r2
  810f1c:	10c1ffcc 	andi	r3,r2,2047
  810f20:	e0bffc17 	ldw	r2,-16(fp)
  810f24:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
  810f28:	e0bffe17 	ldw	r2,-8(fp)
  810f2c:	00bfcf16 	blt	zero,r2,810e6c <__alt_data_end+0xff810e6c>
  810f30:	00000106 	br	810f38 <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
  810f34:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
  810f38:	e0fff517 	ldw	r3,-44(fp)
  810f3c:	e0bffd17 	ldw	r2,-12(fp)
  810f40:	1880141e 	bne	r3,r2,810f94 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
  810f44:	e0bfff17 	ldw	r2,-4(fp)
  810f48:	1090000c 	andi	r2,r2,16384
  810f4c:	1000131e 	bne	r2,zero,810f9c <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
  810f50:	0001883a 	nop
  810f54:	e0bffc17 	ldw	r2,-16(fp)
  810f58:	10c00a17 	ldw	r3,40(r2)
  810f5c:	e0bff717 	ldw	r2,-36(fp)
  810f60:	1880051e 	bne	r3,r2,810f78 <altera_avalon_jtag_uart_read+0x138>
  810f64:	e0bffc17 	ldw	r2,-16(fp)
  810f68:	10c00917 	ldw	r3,36(r2)
  810f6c:	e0bffc17 	ldw	r2,-16(fp)
  810f70:	10800117 	ldw	r2,4(r2)
  810f74:	18bff736 	bltu	r3,r2,810f54 <__alt_data_end+0xff810f54>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
  810f78:	e0bffc17 	ldw	r2,-16(fp)
  810f7c:	10c00a17 	ldw	r3,40(r2)
  810f80:	e0bff717 	ldw	r2,-36(fp)
  810f84:	18800726 	beq	r3,r2,810fa4 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
  810f88:	e0bffe17 	ldw	r2,-8(fp)
  810f8c:	00bfb716 	blt	zero,r2,810e6c <__alt_data_end+0xff810e6c>
  810f90:	00000506 	br	810fa8 <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
  810f94:	0001883a 	nop
  810f98:	00000306 	br	810fa8 <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
  810f9c:	0001883a 	nop
  810fa0:	00000106 	br	810fa8 <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
  810fa4:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
  810fa8:	e0fff517 	ldw	r3,-44(fp)
  810fac:	e0bffd17 	ldw	r2,-12(fp)
  810fb0:	18801826 	beq	r3,r2,811014 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  810fb4:	0005303a 	rdctl	r2,status
  810fb8:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  810fbc:	e0fffb17 	ldw	r3,-20(fp)
  810fc0:	00bfff84 	movi	r2,-2
  810fc4:	1884703a 	and	r2,r3,r2
  810fc8:	1001703a 	wrctl	status,r2
  
  return context;
  810fcc:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
  810fd0:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  810fd4:	e0bffc17 	ldw	r2,-16(fp)
  810fd8:	10800817 	ldw	r2,32(r2)
  810fdc:	10c00054 	ori	r3,r2,1
  810fe0:	e0bffc17 	ldw	r2,-16(fp)
  810fe4:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  810fe8:	e0bffc17 	ldw	r2,-16(fp)
  810fec:	10800017 	ldw	r2,0(r2)
  810ff0:	10800104 	addi	r2,r2,4
  810ff4:	1007883a 	mov	r3,r2
  810ff8:	e0bffc17 	ldw	r2,-16(fp)
  810ffc:	10800817 	ldw	r2,32(r2)
  811000:	18800035 	stwio	r2,0(r3)
  811004:	e0bffa17 	ldw	r2,-24(fp)
  811008:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  81100c:	e0bff917 	ldw	r2,-28(fp)
  811010:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
  811014:	e0fff517 	ldw	r3,-44(fp)
  811018:	e0bffd17 	ldw	r2,-12(fp)
  81101c:	18800426 	beq	r3,r2,811030 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
  811020:	e0fff517 	ldw	r3,-44(fp)
  811024:	e0bffd17 	ldw	r2,-12(fp)
  811028:	1885c83a 	sub	r2,r3,r2
  81102c:	00000606 	br	811048 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
  811030:	e0bfff17 	ldw	r2,-4(fp)
  811034:	1090000c 	andi	r2,r2,16384
  811038:	10000226 	beq	r2,zero,811044 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
  81103c:	00bffd44 	movi	r2,-11
  811040:	00000106 	br	811048 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
  811044:	00bffec4 	movi	r2,-5
}
  811048:	e037883a 	mov	sp,fp
  81104c:	dfc00117 	ldw	ra,4(sp)
  811050:	df000017 	ldw	fp,0(sp)
  811054:	dec00204 	addi	sp,sp,8
  811058:	f800283a 	ret

0081105c <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
  81105c:	defff304 	addi	sp,sp,-52
  811060:	dfc00c15 	stw	ra,48(sp)
  811064:	df000b15 	stw	fp,44(sp)
  811068:	df000b04 	addi	fp,sp,44
  81106c:	e13ffc15 	stw	r4,-16(fp)
  811070:	e17ffd15 	stw	r5,-12(fp)
  811074:	e1bffe15 	stw	r6,-8(fp)
  811078:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
  81107c:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
  811080:	e0bffd17 	ldw	r2,-12(fp)
  811084:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
  811088:	00003706 	br	811168 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
  81108c:	e0bffc17 	ldw	r2,-16(fp)
  811090:	10800c17 	ldw	r2,48(r2)
  811094:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
  811098:	e0bffc17 	ldw	r2,-16(fp)
  81109c:	10800d17 	ldw	r2,52(r2)
  8110a0:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
  8110a4:	e0fff917 	ldw	r3,-28(fp)
  8110a8:	e0bff517 	ldw	r2,-44(fp)
  8110ac:	1880062e 	bgeu	r3,r2,8110c8 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
  8110b0:	e0fff517 	ldw	r3,-44(fp)
  8110b4:	e0bff917 	ldw	r2,-28(fp)
  8110b8:	1885c83a 	sub	r2,r3,r2
  8110bc:	10bfffc4 	addi	r2,r2,-1
  8110c0:	e0bff615 	stw	r2,-40(fp)
  8110c4:	00000b06 	br	8110f4 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
  8110c8:	e0bff517 	ldw	r2,-44(fp)
  8110cc:	10000526 	beq	r2,zero,8110e4 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
  8110d0:	00c20004 	movi	r3,2048
  8110d4:	e0bff917 	ldw	r2,-28(fp)
  8110d8:	1885c83a 	sub	r2,r3,r2
  8110dc:	e0bff615 	stw	r2,-40(fp)
  8110e0:	00000406 	br	8110f4 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
  8110e4:	00c1ffc4 	movi	r3,2047
  8110e8:	e0bff917 	ldw	r2,-28(fp)
  8110ec:	1885c83a 	sub	r2,r3,r2
  8110f0:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
  8110f4:	e0bff617 	ldw	r2,-40(fp)
  8110f8:	10001e26 	beq	r2,zero,811174 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
  8110fc:	e0fffe17 	ldw	r3,-8(fp)
  811100:	e0bff617 	ldw	r2,-40(fp)
  811104:	1880022e 	bgeu	r3,r2,811110 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
  811108:	e0bffe17 	ldw	r2,-8(fp)
  81110c:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
  811110:	e0bffc17 	ldw	r2,-16(fp)
  811114:	10c20e04 	addi	r3,r2,2104
  811118:	e0bff917 	ldw	r2,-28(fp)
  81111c:	1885883a 	add	r2,r3,r2
  811120:	e1bff617 	ldw	r6,-40(fp)
  811124:	e17ffd17 	ldw	r5,-12(fp)
  811128:	1009883a 	mov	r4,r2
  81112c:	080b57c0 	call	80b57c <memcpy>
      ptr   += n;
  811130:	e0fffd17 	ldw	r3,-12(fp)
  811134:	e0bff617 	ldw	r2,-40(fp)
  811138:	1885883a 	add	r2,r3,r2
  81113c:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
  811140:	e0fffe17 	ldw	r3,-8(fp)
  811144:	e0bff617 	ldw	r2,-40(fp)
  811148:	1885c83a 	sub	r2,r3,r2
  81114c:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  811150:	e0fff917 	ldw	r3,-28(fp)
  811154:	e0bff617 	ldw	r2,-40(fp)
  811158:	1885883a 	add	r2,r3,r2
  81115c:	10c1ffcc 	andi	r3,r2,2047
  811160:	e0bffc17 	ldw	r2,-16(fp)
  811164:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
  811168:	e0bffe17 	ldw	r2,-8(fp)
  81116c:	00bfc716 	blt	zero,r2,81108c <__alt_data_end+0xff81108c>
  811170:	00000106 	br	811178 <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
  811174:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  811178:	0005303a 	rdctl	r2,status
  81117c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  811180:	e0fffb17 	ldw	r3,-20(fp)
  811184:	00bfff84 	movi	r2,-2
  811188:	1884703a 	and	r2,r3,r2
  81118c:	1001703a 	wrctl	status,r2
  
  return context;
  811190:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
  811194:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
  811198:	e0bffc17 	ldw	r2,-16(fp)
  81119c:	10800817 	ldw	r2,32(r2)
  8111a0:	10c00094 	ori	r3,r2,2
  8111a4:	e0bffc17 	ldw	r2,-16(fp)
  8111a8:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  8111ac:	e0bffc17 	ldw	r2,-16(fp)
  8111b0:	10800017 	ldw	r2,0(r2)
  8111b4:	10800104 	addi	r2,r2,4
  8111b8:	1007883a 	mov	r3,r2
  8111bc:	e0bffc17 	ldw	r2,-16(fp)
  8111c0:	10800817 	ldw	r2,32(r2)
  8111c4:	18800035 	stwio	r2,0(r3)
  8111c8:	e0bffa17 	ldw	r2,-24(fp)
  8111cc:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  8111d0:	e0bff817 	ldw	r2,-32(fp)
  8111d4:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
  8111d8:	e0bffe17 	ldw	r2,-8(fp)
  8111dc:	0080100e 	bge	zero,r2,811220 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
  8111e0:	e0bfff17 	ldw	r2,-4(fp)
  8111e4:	1090000c 	andi	r2,r2,16384
  8111e8:	1000101e 	bne	r2,zero,81122c <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
  8111ec:	0001883a 	nop
  8111f0:	e0bffc17 	ldw	r2,-16(fp)
  8111f4:	10c00d17 	ldw	r3,52(r2)
  8111f8:	e0bff517 	ldw	r2,-44(fp)
  8111fc:	1880051e 	bne	r3,r2,811214 <altera_avalon_jtag_uart_write+0x1b8>
  811200:	e0bffc17 	ldw	r2,-16(fp)
  811204:	10c00917 	ldw	r3,36(r2)
  811208:	e0bffc17 	ldw	r2,-16(fp)
  81120c:	10800117 	ldw	r2,4(r2)
  811210:	18bff736 	bltu	r3,r2,8111f0 <__alt_data_end+0xff8111f0>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
  811214:	e0bffc17 	ldw	r2,-16(fp)
  811218:	10800917 	ldw	r2,36(r2)
  81121c:	1000051e 	bne	r2,zero,811234 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
  811220:	e0bffe17 	ldw	r2,-8(fp)
  811224:	00bfd016 	blt	zero,r2,811168 <__alt_data_end+0xff811168>
  811228:	00000306 	br	811238 <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
  81122c:	0001883a 	nop
  811230:	00000106 	br	811238 <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
  811234:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
  811238:	e0fffd17 	ldw	r3,-12(fp)
  81123c:	e0bff717 	ldw	r2,-36(fp)
  811240:	18800426 	beq	r3,r2,811254 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
  811244:	e0fffd17 	ldw	r3,-12(fp)
  811248:	e0bff717 	ldw	r2,-36(fp)
  81124c:	1885c83a 	sub	r2,r3,r2
  811250:	00000606 	br	81126c <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
  811254:	e0bfff17 	ldw	r2,-4(fp)
  811258:	1090000c 	andi	r2,r2,16384
  81125c:	10000226 	beq	r2,zero,811268 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
  811260:	00bffd44 	movi	r2,-11
  811264:	00000106 	br	81126c <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
  811268:	00bffec4 	movi	r2,-5
}
  81126c:	e037883a 	mov	sp,fp
  811270:	dfc00117 	ldw	ra,4(sp)
  811274:	df000017 	ldw	fp,0(sp)
  811278:	dec00204 	addi	sp,sp,8
  81127c:	f800283a 	ret

00811280 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
  811280:	defffa04 	addi	sp,sp,-24
  811284:	dfc00515 	stw	ra,20(sp)
  811288:	df000415 	stw	fp,16(sp)
  81128c:	df000404 	addi	fp,sp,16
  811290:	e13fff15 	stw	r4,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
  811294:	0007883a 	mov	r3,zero
  811298:	e0bfff17 	ldw	r2,-4(fp)
  81129c:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
  8112a0:	e0bfff17 	ldw	r2,-4(fp)
  8112a4:	10800104 	addi	r2,r2,4
  8112a8:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  8112ac:	0005303a 	rdctl	r2,status
  8112b0:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  8112b4:	e0fffd17 	ldw	r3,-12(fp)
  8112b8:	00bfff84 	movi	r2,-2
  8112bc:	1884703a 	and	r2,r3,r2
  8112c0:	1001703a 	wrctl	status,r2
  
  return context;
  8112c4:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
  8112c8:	e0bffc15 	stw	r2,-16(fp)
  alt_tick ();
  8112cc:	0811d8c0 	call	811d8c <alt_tick>
  8112d0:	e0bffc17 	ldw	r2,-16(fp)
  8112d4:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  8112d8:	e0bffe17 	ldw	r2,-8(fp)
  8112dc:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
  8112e0:	0001883a 	nop
  8112e4:	e037883a 	mov	sp,fp
  8112e8:	dfc00117 	ldw	ra,4(sp)
  8112ec:	df000017 	ldw	fp,0(sp)
  8112f0:	dec00204 	addi	sp,sp,8
  8112f4:	f800283a 	ret

008112f8 <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
  8112f8:	defff804 	addi	sp,sp,-32
  8112fc:	dfc00715 	stw	ra,28(sp)
  811300:	df000615 	stw	fp,24(sp)
  811304:	df000604 	addi	fp,sp,24
  811308:	e13ffc15 	stw	r4,-16(fp)
  81130c:	e17ffd15 	stw	r5,-12(fp)
  811310:	e1bffe15 	stw	r6,-8(fp)
  811314:	e1ffff15 	stw	r7,-4(fp)
  811318:	e0bfff17 	ldw	r2,-4(fp)
  81131c:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
  811320:	d0a6d617 	ldw	r2,-25768(gp)
  811324:	1000021e 	bne	r2,zero,811330 <alt_avalon_timer_sc_init+0x38>
  {
    _alt_tick_rate = nticks;
  811328:	e0bffb17 	ldw	r2,-20(fp)
  81132c:	d0a6d615 	stw	r2,-25768(gp)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
  811330:	e0bffc17 	ldw	r2,-16(fp)
  811334:	10800104 	addi	r2,r2,4
  811338:	00c001c4 	movi	r3,7
  81133c:	10c00035 	stwio	r3,0(r2)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
  811340:	d8000015 	stw	zero,0(sp)
  811344:	e1fffc17 	ldw	r7,-16(fp)
  811348:	01802074 	movhi	r6,129
  81134c:	3184a004 	addi	r6,r6,4736
  811350:	e17ffe17 	ldw	r5,-8(fp)
  811354:	e13ffd17 	ldw	r4,-12(fp)
  811358:	08116bc0 	call	8116bc <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
  81135c:	0001883a 	nop
  811360:	e037883a 	mov	sp,fp
  811364:	dfc00117 	ldw	ra,4(sp)
  811368:	df000017 	ldw	fp,0(sp)
  81136c:	dec00204 	addi	sp,sp,8
  811370:	f800283a 	ret

00811374 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
  811374:	defff504 	addi	sp,sp,-44
  811378:	df000a15 	stw	fp,40(sp)
  81137c:	df000a04 	addi	fp,sp,40
  811380:	e13ffc15 	stw	r4,-16(fp)
  811384:	e17ffd15 	stw	r5,-12(fp)
  811388:	e1bffe15 	stw	r6,-8(fp)
  81138c:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
  811390:	e03ff615 	stw	zero,-40(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
  811394:	d0a6d617 	ldw	r2,-25768(gp)
  
  if (alt_ticks_per_second ())
  811398:	10003c26 	beq	r2,zero,81148c <alt_alarm_start+0x118>
  {
    if (alarm)
  81139c:	e0bffc17 	ldw	r2,-16(fp)
  8113a0:	10003826 	beq	r2,zero,811484 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
  8113a4:	e0bffc17 	ldw	r2,-16(fp)
  8113a8:	e0fffe17 	ldw	r3,-8(fp)
  8113ac:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
  8113b0:	e0bffc17 	ldw	r2,-16(fp)
  8113b4:	e0ffff17 	ldw	r3,-4(fp)
  8113b8:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  8113bc:	0005303a 	rdctl	r2,status
  8113c0:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  8113c4:	e0fff917 	ldw	r3,-28(fp)
  8113c8:	00bfff84 	movi	r2,-2
  8113cc:	1884703a 	and	r2,r3,r2
  8113d0:	1001703a 	wrctl	status,r2
  
  return context;
  8113d4:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
  8113d8:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
  8113dc:	d0a6d717 	ldw	r2,-25764(gp)
      
      current_nticks = alt_nticks();
  8113e0:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
  8113e4:	e0fffd17 	ldw	r3,-12(fp)
  8113e8:	e0bff617 	ldw	r2,-40(fp)
  8113ec:	1885883a 	add	r2,r3,r2
  8113f0:	10c00044 	addi	r3,r2,1
  8113f4:	e0bffc17 	ldw	r2,-16(fp)
  8113f8:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
  8113fc:	e0bffc17 	ldw	r2,-16(fp)
  811400:	10c00217 	ldw	r3,8(r2)
  811404:	e0bff617 	ldw	r2,-40(fp)
  811408:	1880042e 	bgeu	r3,r2,81141c <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
  81140c:	e0bffc17 	ldw	r2,-16(fp)
  811410:	00c00044 	movi	r3,1
  811414:	10c00405 	stb	r3,16(r2)
  811418:	00000206 	br	811424 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
  81141c:	e0bffc17 	ldw	r2,-16(fp)
  811420:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
  811424:	e0bffc17 	ldw	r2,-16(fp)
  811428:	d0e00e04 	addi	r3,gp,-32712
  81142c:	e0fffa15 	stw	r3,-24(fp)
  811430:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
  811434:	e0bffb17 	ldw	r2,-20(fp)
  811438:	e0fffa17 	ldw	r3,-24(fp)
  81143c:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
  811440:	e0bffa17 	ldw	r2,-24(fp)
  811444:	10c00017 	ldw	r3,0(r2)
  811448:	e0bffb17 	ldw	r2,-20(fp)
  81144c:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
  811450:	e0bffa17 	ldw	r2,-24(fp)
  811454:	10800017 	ldw	r2,0(r2)
  811458:	e0fffb17 	ldw	r3,-20(fp)
  81145c:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
  811460:	e0bffa17 	ldw	r2,-24(fp)
  811464:	e0fffb17 	ldw	r3,-20(fp)
  811468:	10c00015 	stw	r3,0(r2)
  81146c:	e0bff817 	ldw	r2,-32(fp)
  811470:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  811474:	e0bff717 	ldw	r2,-36(fp)
  811478:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
  81147c:	0005883a 	mov	r2,zero
  811480:	00000306 	br	811490 <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
  811484:	00bffa84 	movi	r2,-22
  811488:	00000106 	br	811490 <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
  81148c:	00bfde84 	movi	r2,-134
  }
}
  811490:	e037883a 	mov	sp,fp
  811494:	df000017 	ldw	fp,0(sp)
  811498:	dec00104 	addi	sp,sp,4
  81149c:	f800283a 	ret

008114a0 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
  8114a0:	defffe04 	addi	sp,sp,-8
  8114a4:	df000115 	stw	fp,4(sp)
  8114a8:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  8114ac:	e03fff15 	stw	zero,-4(fp)
  8114b0:	00000506 	br	8114c8 <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  8114b4:	e0bfff17 	ldw	r2,-4(fp)
  8114b8:	1000003b 	flushd	0(r2)
void alt_dcache_flush_all (void)
{
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  8114bc:	e0bfff17 	ldw	r2,-4(fp)
  8114c0:	10800804 	addi	r2,r2,32
  8114c4:	e0bfff15 	stw	r2,-4(fp)
  8114c8:	e0bfff17 	ldw	r2,-4(fp)
  8114cc:	10840030 	cmpltui	r2,r2,4096
  8114d0:	103ff81e 	bne	r2,zero,8114b4 <__alt_data_end+0xff8114b4>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
  8114d4:	0001883a 	nop
  8114d8:	e037883a 	mov	sp,fp
  8114dc:	df000017 	ldw	fp,0(sp)
  8114e0:	dec00104 	addi	sp,sp,4
  8114e4:	f800283a 	ret

008114e8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  8114e8:	defffe04 	addi	sp,sp,-8
  8114ec:	dfc00115 	stw	ra,4(sp)
  8114f0:	df000015 	stw	fp,0(sp)
  8114f4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  8114f8:	d0a00b17 	ldw	r2,-32724(gp)
  8114fc:	10000326 	beq	r2,zero,81150c <alt_get_errno+0x24>
  811500:	d0a00b17 	ldw	r2,-32724(gp)
  811504:	103ee83a 	callr	r2
  811508:	00000106 	br	811510 <alt_get_errno+0x28>
  81150c:	d0a6d104 	addi	r2,gp,-25788
}
  811510:	e037883a 	mov	sp,fp
  811514:	dfc00117 	ldw	ra,4(sp)
  811518:	df000017 	ldw	fp,0(sp)
  81151c:	dec00204 	addi	sp,sp,8
  811520:	f800283a 	ret

00811524 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
  811524:	defffa04 	addi	sp,sp,-24
  811528:	dfc00515 	stw	ra,20(sp)
  81152c:	df000415 	stw	fp,16(sp)
  811530:	df000404 	addi	fp,sp,16
  811534:	e13ffe15 	stw	r4,-8(fp)
  811538:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
  81153c:	e0bffe17 	ldw	r2,-8(fp)
  811540:	10000326 	beq	r2,zero,811550 <alt_dev_llist_insert+0x2c>
  811544:	e0bffe17 	ldw	r2,-8(fp)
  811548:	10800217 	ldw	r2,8(r2)
  81154c:	1000061e 	bne	r2,zero,811568 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
  811550:	08114e80 	call	8114e8 <alt_get_errno>
  811554:	1007883a 	mov	r3,r2
  811558:	00800584 	movi	r2,22
  81155c:	18800015 	stw	r2,0(r3)
    return -EINVAL;
  811560:	00bffa84 	movi	r2,-22
  811564:	00001306 	br	8115b4 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
  811568:	e0bffe17 	ldw	r2,-8(fp)
  81156c:	e0ffff17 	ldw	r3,-4(fp)
  811570:	e0fffc15 	stw	r3,-16(fp)
  811574:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
  811578:	e0bffd17 	ldw	r2,-12(fp)
  81157c:	e0fffc17 	ldw	r3,-16(fp)
  811580:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
  811584:	e0bffc17 	ldw	r2,-16(fp)
  811588:	10c00017 	ldw	r3,0(r2)
  81158c:	e0bffd17 	ldw	r2,-12(fp)
  811590:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
  811594:	e0bffc17 	ldw	r2,-16(fp)
  811598:	10800017 	ldw	r2,0(r2)
  81159c:	e0fffd17 	ldw	r3,-12(fp)
  8115a0:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
  8115a4:	e0bffc17 	ldw	r2,-16(fp)
  8115a8:	e0fffd17 	ldw	r3,-12(fp)
  8115ac:	10c00015 	stw	r3,0(r2)

  return 0;  
  8115b0:	0005883a 	mov	r2,zero
}
  8115b4:	e037883a 	mov	sp,fp
  8115b8:	dfc00117 	ldw	ra,4(sp)
  8115bc:	df000017 	ldw	fp,0(sp)
  8115c0:	dec00204 	addi	sp,sp,8
  8115c4:	f800283a 	ret

008115c8 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
  8115c8:	defffd04 	addi	sp,sp,-12
  8115cc:	dfc00215 	stw	ra,8(sp)
  8115d0:	df000115 	stw	fp,4(sp)
  8115d4:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
  8115d8:	00802074 	movhi	r2,129
  8115dc:	10896c04 	addi	r2,r2,9648
  8115e0:	e0bfff15 	stw	r2,-4(fp)
  8115e4:	00000606 	br	811600 <_do_ctors+0x38>
        (*ctor) (); 
  8115e8:	e0bfff17 	ldw	r2,-4(fp)
  8115ec:	10800017 	ldw	r2,0(r2)
  8115f0:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
  8115f4:	e0bfff17 	ldw	r2,-4(fp)
  8115f8:	10bfff04 	addi	r2,r2,-4
  8115fc:	e0bfff15 	stw	r2,-4(fp)
  811600:	e0ffff17 	ldw	r3,-4(fp)
  811604:	00802074 	movhi	r2,129
  811608:	10896d04 	addi	r2,r2,9652
  81160c:	18bff62e 	bgeu	r3,r2,8115e8 <__alt_data_end+0xff8115e8>
        (*ctor) (); 
}
  811610:	0001883a 	nop
  811614:	e037883a 	mov	sp,fp
  811618:	dfc00117 	ldw	ra,4(sp)
  81161c:	df000017 	ldw	fp,0(sp)
  811620:	dec00204 	addi	sp,sp,8
  811624:	f800283a 	ret

00811628 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
  811628:	defffd04 	addi	sp,sp,-12
  81162c:	dfc00215 	stw	ra,8(sp)
  811630:	df000115 	stw	fp,4(sp)
  811634:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
  811638:	00802074 	movhi	r2,129
  81163c:	10896c04 	addi	r2,r2,9648
  811640:	e0bfff15 	stw	r2,-4(fp)
  811644:	00000606 	br	811660 <_do_dtors+0x38>
        (*dtor) (); 
  811648:	e0bfff17 	ldw	r2,-4(fp)
  81164c:	10800017 	ldw	r2,0(r2)
  811650:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
  811654:	e0bfff17 	ldw	r2,-4(fp)
  811658:	10bfff04 	addi	r2,r2,-4
  81165c:	e0bfff15 	stw	r2,-4(fp)
  811660:	e0ffff17 	ldw	r3,-4(fp)
  811664:	00802074 	movhi	r2,129
  811668:	10896d04 	addi	r2,r2,9652
  81166c:	18bff62e 	bgeu	r3,r2,811648 <__alt_data_end+0xff811648>
        (*dtor) (); 
}
  811670:	0001883a 	nop
  811674:	e037883a 	mov	sp,fp
  811678:	dfc00117 	ldw	ra,4(sp)
  81167c:	df000017 	ldw	fp,0(sp)
  811680:	dec00204 	addi	sp,sp,8
  811684:	f800283a 	ret

00811688 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
  811688:	defffe04 	addi	sp,sp,-8
  81168c:	dfc00115 	stw	ra,4(sp)
  811690:	df000015 	stw	fp,0(sp)
  811694:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
  811698:	01440004 	movi	r5,4096
  81169c:	0009883a 	mov	r4,zero
  8116a0:	08120f40 	call	8120f4 <alt_icache_flush>
#endif
}
  8116a4:	0001883a 	nop
  8116a8:	e037883a 	mov	sp,fp
  8116ac:	dfc00117 	ldw	ra,4(sp)
  8116b0:	df000017 	ldw	fp,0(sp)
  8116b4:	dec00204 	addi	sp,sp,8
  8116b8:	f800283a 	ret

008116bc <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
  8116bc:	defff904 	addi	sp,sp,-28
  8116c0:	dfc00615 	stw	ra,24(sp)
  8116c4:	df000515 	stw	fp,20(sp)
  8116c8:	df000504 	addi	fp,sp,20
  8116cc:	e13ffc15 	stw	r4,-16(fp)
  8116d0:	e17ffd15 	stw	r5,-12(fp)
  8116d4:	e1bffe15 	stw	r6,-8(fp)
  8116d8:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
  8116dc:	e0800217 	ldw	r2,8(fp)
  8116e0:	d8800015 	stw	r2,0(sp)
  8116e4:	e1ffff17 	ldw	r7,-4(fp)
  8116e8:	e1bffe17 	ldw	r6,-8(fp)
  8116ec:	e17ffd17 	ldw	r5,-12(fp)
  8116f0:	e13ffc17 	ldw	r4,-16(fp)
  8116f4:	081186c0 	call	81186c <alt_iic_isr_register>
}  
  8116f8:	e037883a 	mov	sp,fp
  8116fc:	dfc00117 	ldw	ra,4(sp)
  811700:	df000017 	ldw	fp,0(sp)
  811704:	dec00204 	addi	sp,sp,8
  811708:	f800283a 	ret

0081170c <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
  81170c:	defff904 	addi	sp,sp,-28
  811710:	df000615 	stw	fp,24(sp)
  811714:	df000604 	addi	fp,sp,24
  811718:	e13ffe15 	stw	r4,-8(fp)
  81171c:	e17fff15 	stw	r5,-4(fp)
  811720:	e0bfff17 	ldw	r2,-4(fp)
  811724:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  811728:	0005303a 	rdctl	r2,status
  81172c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  811730:	e0fffb17 	ldw	r3,-20(fp)
  811734:	00bfff84 	movi	r2,-2
  811738:	1884703a 	and	r2,r3,r2
  81173c:	1001703a 	wrctl	status,r2
  
  return context;
  811740:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
  811744:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
  811748:	00c00044 	movi	r3,1
  81174c:	e0bffa17 	ldw	r2,-24(fp)
  811750:	1884983a 	sll	r2,r3,r2
  811754:	1007883a 	mov	r3,r2
  811758:	d0a6d517 	ldw	r2,-25772(gp)
  81175c:	1884b03a 	or	r2,r3,r2
  811760:	d0a6d515 	stw	r2,-25772(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
  811764:	d0a6d517 	ldw	r2,-25772(gp)
  811768:	100170fa 	wrctl	ienable,r2
  81176c:	e0bffc17 	ldw	r2,-16(fp)
  811770:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  811774:	e0bffd17 	ldw	r2,-12(fp)
  811778:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
  81177c:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
  811780:	0001883a 	nop
}
  811784:	e037883a 	mov	sp,fp
  811788:	df000017 	ldw	fp,0(sp)
  81178c:	dec00104 	addi	sp,sp,4
  811790:	f800283a 	ret

00811794 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
  811794:	defff904 	addi	sp,sp,-28
  811798:	df000615 	stw	fp,24(sp)
  81179c:	df000604 	addi	fp,sp,24
  8117a0:	e13ffe15 	stw	r4,-8(fp)
  8117a4:	e17fff15 	stw	r5,-4(fp)
  8117a8:	e0bfff17 	ldw	r2,-4(fp)
  8117ac:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  8117b0:	0005303a 	rdctl	r2,status
  8117b4:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  8117b8:	e0fffb17 	ldw	r3,-20(fp)
  8117bc:	00bfff84 	movi	r2,-2
  8117c0:	1884703a 	and	r2,r3,r2
  8117c4:	1001703a 	wrctl	status,r2
  
  return context;
  8117c8:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
  8117cc:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
  8117d0:	00c00044 	movi	r3,1
  8117d4:	e0bffa17 	ldw	r2,-24(fp)
  8117d8:	1884983a 	sll	r2,r3,r2
  8117dc:	0084303a 	nor	r2,zero,r2
  8117e0:	1007883a 	mov	r3,r2
  8117e4:	d0a6d517 	ldw	r2,-25772(gp)
  8117e8:	1884703a 	and	r2,r3,r2
  8117ec:	d0a6d515 	stw	r2,-25772(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
  8117f0:	d0a6d517 	ldw	r2,-25772(gp)
  8117f4:	100170fa 	wrctl	ienable,r2
  8117f8:	e0bffc17 	ldw	r2,-16(fp)
  8117fc:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  811800:	e0bffd17 	ldw	r2,-12(fp)
  811804:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
  811808:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
  81180c:	0001883a 	nop
}
  811810:	e037883a 	mov	sp,fp
  811814:	df000017 	ldw	fp,0(sp)
  811818:	dec00104 	addi	sp,sp,4
  81181c:	f800283a 	ret

00811820 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
  811820:	defffc04 	addi	sp,sp,-16
  811824:	df000315 	stw	fp,12(sp)
  811828:	df000304 	addi	fp,sp,12
  81182c:	e13ffe15 	stw	r4,-8(fp)
  811830:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
  811834:	000530fa 	rdctl	r2,ienable
  811838:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
  81183c:	00c00044 	movi	r3,1
  811840:	e0bfff17 	ldw	r2,-4(fp)
  811844:	1884983a 	sll	r2,r3,r2
  811848:	1007883a 	mov	r3,r2
  81184c:	e0bffd17 	ldw	r2,-12(fp)
  811850:	1884703a 	and	r2,r3,r2
  811854:	1004c03a 	cmpne	r2,r2,zero
  811858:	10803fcc 	andi	r2,r2,255
}
  81185c:	e037883a 	mov	sp,fp
  811860:	df000017 	ldw	fp,0(sp)
  811864:	dec00104 	addi	sp,sp,4
  811868:	f800283a 	ret

0081186c <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
  81186c:	defff504 	addi	sp,sp,-44
  811870:	dfc00a15 	stw	ra,40(sp)
  811874:	df000915 	stw	fp,36(sp)
  811878:	df000904 	addi	fp,sp,36
  81187c:	e13ffc15 	stw	r4,-16(fp)
  811880:	e17ffd15 	stw	r5,-12(fp)
  811884:	e1bffe15 	stw	r6,-8(fp)
  811888:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
  81188c:	00bffa84 	movi	r2,-22
  811890:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
  811894:	e0bffd17 	ldw	r2,-12(fp)
  811898:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
  81189c:	e0bff817 	ldw	r2,-32(fp)
  8118a0:	10800808 	cmpgei	r2,r2,32
  8118a4:	1000271e 	bne	r2,zero,811944 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  8118a8:	0005303a 	rdctl	r2,status
  8118ac:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  8118b0:	e0fffb17 	ldw	r3,-20(fp)
  8118b4:	00bfff84 	movi	r2,-2
  8118b8:	1884703a 	and	r2,r3,r2
  8118bc:	1001703a 	wrctl	status,r2
  
  return context;
  8118c0:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
  8118c4:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
  8118c8:	00802074 	movhi	r2,129
  8118cc:	10983b04 	addi	r2,r2,24812
  8118d0:	e0fff817 	ldw	r3,-32(fp)
  8118d4:	180690fa 	slli	r3,r3,3
  8118d8:	10c5883a 	add	r2,r2,r3
  8118dc:	e0fffe17 	ldw	r3,-8(fp)
  8118e0:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
  8118e4:	00802074 	movhi	r2,129
  8118e8:	10983b04 	addi	r2,r2,24812
  8118ec:	e0fff817 	ldw	r3,-32(fp)
  8118f0:	180690fa 	slli	r3,r3,3
  8118f4:	10c5883a 	add	r2,r2,r3
  8118f8:	10800104 	addi	r2,r2,4
  8118fc:	e0ffff17 	ldw	r3,-4(fp)
  811900:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
  811904:	e0bffe17 	ldw	r2,-8(fp)
  811908:	10000526 	beq	r2,zero,811920 <alt_iic_isr_register+0xb4>
  81190c:	e0bff817 	ldw	r2,-32(fp)
  811910:	100b883a 	mov	r5,r2
  811914:	e13ffc17 	ldw	r4,-16(fp)
  811918:	081170c0 	call	81170c <alt_ic_irq_enable>
  81191c:	00000406 	br	811930 <alt_iic_isr_register+0xc4>
  811920:	e0bff817 	ldw	r2,-32(fp)
  811924:	100b883a 	mov	r5,r2
  811928:	e13ffc17 	ldw	r4,-16(fp)
  81192c:	08117940 	call	811794 <alt_ic_irq_disable>
  811930:	e0bff715 	stw	r2,-36(fp)
  811934:	e0bffa17 	ldw	r2,-24(fp)
  811938:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  81193c:	e0bff917 	ldw	r2,-28(fp)
  811940:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
  811944:	e0bff717 	ldw	r2,-36(fp)
}
  811948:	e037883a 	mov	sp,fp
  81194c:	dfc00117 	ldw	ra,4(sp)
  811950:	df000017 	ldw	fp,0(sp)
  811954:	dec00204 	addi	sp,sp,8
  811958:	f800283a 	ret

0081195c <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
  81195c:	defff904 	addi	sp,sp,-28
  811960:	dfc00615 	stw	ra,24(sp)
  811964:	df000515 	stw	fp,20(sp)
  811968:	df000504 	addi	fp,sp,20
  81196c:	e13ffc15 	stw	r4,-16(fp)
  811970:	e17ffd15 	stw	r5,-12(fp)
  811974:	e1bffe15 	stw	r6,-8(fp)
  811978:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
  81197c:	e1bfff17 	ldw	r6,-4(fp)
  811980:	e17ffe17 	ldw	r5,-8(fp)
  811984:	e13ffd17 	ldw	r4,-12(fp)
  811988:	0811b9c0 	call	811b9c <open>
  81198c:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
  811990:	e0bffb17 	ldw	r2,-20(fp)
  811994:	10001c16 	blt	r2,zero,811a08 <alt_open_fd+0xac>
  {
    fd->dev      = alt_fd_list[old].dev;
  811998:	00802074 	movhi	r2,129
  81199c:	108ce004 	addi	r2,r2,13184
  8119a0:	e0fffb17 	ldw	r3,-20(fp)
  8119a4:	18c00324 	muli	r3,r3,12
  8119a8:	10c5883a 	add	r2,r2,r3
  8119ac:	10c00017 	ldw	r3,0(r2)
  8119b0:	e0bffc17 	ldw	r2,-16(fp)
  8119b4:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
  8119b8:	00802074 	movhi	r2,129
  8119bc:	108ce004 	addi	r2,r2,13184
  8119c0:	e0fffb17 	ldw	r3,-20(fp)
  8119c4:	18c00324 	muli	r3,r3,12
  8119c8:	10c5883a 	add	r2,r2,r3
  8119cc:	10800104 	addi	r2,r2,4
  8119d0:	10c00017 	ldw	r3,0(r2)
  8119d4:	e0bffc17 	ldw	r2,-16(fp)
  8119d8:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
  8119dc:	00802074 	movhi	r2,129
  8119e0:	108ce004 	addi	r2,r2,13184
  8119e4:	e0fffb17 	ldw	r3,-20(fp)
  8119e8:	18c00324 	muli	r3,r3,12
  8119ec:	10c5883a 	add	r2,r2,r3
  8119f0:	10800204 	addi	r2,r2,8
  8119f4:	10c00017 	ldw	r3,0(r2)
  8119f8:	e0bffc17 	ldw	r2,-16(fp)
  8119fc:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
  811a00:	e13ffb17 	ldw	r4,-20(fp)
  811a04:	081044c0 	call	81044c <alt_release_fd>
  }
} 
  811a08:	0001883a 	nop
  811a0c:	e037883a 	mov	sp,fp
  811a10:	dfc00117 	ldw	ra,4(sp)
  811a14:	df000017 	ldw	fp,0(sp)
  811a18:	dec00204 	addi	sp,sp,8
  811a1c:	f800283a 	ret

00811a20 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
  811a20:	defffb04 	addi	sp,sp,-20
  811a24:	dfc00415 	stw	ra,16(sp)
  811a28:	df000315 	stw	fp,12(sp)
  811a2c:	df000304 	addi	fp,sp,12
  811a30:	e13ffd15 	stw	r4,-12(fp)
  811a34:	e17ffe15 	stw	r5,-8(fp)
  811a38:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
  811a3c:	01c07fc4 	movi	r7,511
  811a40:	01800044 	movi	r6,1
  811a44:	e17ffd17 	ldw	r5,-12(fp)
  811a48:	01002074 	movhi	r4,129
  811a4c:	210ce304 	addi	r4,r4,13196
  811a50:	081195c0 	call	81195c <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
  811a54:	01c07fc4 	movi	r7,511
  811a58:	000d883a 	mov	r6,zero
  811a5c:	e17ffe17 	ldw	r5,-8(fp)
  811a60:	01002074 	movhi	r4,129
  811a64:	210ce004 	addi	r4,r4,13184
  811a68:	081195c0 	call	81195c <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
  811a6c:	01c07fc4 	movi	r7,511
  811a70:	01800044 	movi	r6,1
  811a74:	e17fff17 	ldw	r5,-4(fp)
  811a78:	01002074 	movhi	r4,129
  811a7c:	210ce604 	addi	r4,r4,13208
  811a80:	081195c0 	call	81195c <alt_open_fd>
}  
  811a84:	0001883a 	nop
  811a88:	e037883a 	mov	sp,fp
  811a8c:	dfc00117 	ldw	ra,4(sp)
  811a90:	df000017 	ldw	fp,0(sp)
  811a94:	dec00204 	addi	sp,sp,8
  811a98:	f800283a 	ret

00811a9c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  811a9c:	defffe04 	addi	sp,sp,-8
  811aa0:	dfc00115 	stw	ra,4(sp)
  811aa4:	df000015 	stw	fp,0(sp)
  811aa8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  811aac:	d0a00b17 	ldw	r2,-32724(gp)
  811ab0:	10000326 	beq	r2,zero,811ac0 <alt_get_errno+0x24>
  811ab4:	d0a00b17 	ldw	r2,-32724(gp)
  811ab8:	103ee83a 	callr	r2
  811abc:	00000106 	br	811ac4 <alt_get_errno+0x28>
  811ac0:	d0a6d104 	addi	r2,gp,-25788
}
  811ac4:	e037883a 	mov	sp,fp
  811ac8:	dfc00117 	ldw	ra,4(sp)
  811acc:	df000017 	ldw	fp,0(sp)
  811ad0:	dec00204 	addi	sp,sp,8
  811ad4:	f800283a 	ret

00811ad8 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
  811ad8:	defffd04 	addi	sp,sp,-12
  811adc:	df000215 	stw	fp,8(sp)
  811ae0:	df000204 	addi	fp,sp,8
  811ae4:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
  811ae8:	e0bfff17 	ldw	r2,-4(fp)
  811aec:	10800217 	ldw	r2,8(r2)
  811af0:	10d00034 	orhi	r3,r2,16384
  811af4:	e0bfff17 	ldw	r2,-4(fp)
  811af8:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  811afc:	e03ffe15 	stw	zero,-8(fp)
  811b00:	00001d06 	br	811b78 <alt_file_locked+0xa0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
  811b04:	00802074 	movhi	r2,129
  811b08:	108ce004 	addi	r2,r2,13184
  811b0c:	e0fffe17 	ldw	r3,-8(fp)
  811b10:	18c00324 	muli	r3,r3,12
  811b14:	10c5883a 	add	r2,r2,r3
  811b18:	10c00017 	ldw	r3,0(r2)
  811b1c:	e0bfff17 	ldw	r2,-4(fp)
  811b20:	10800017 	ldw	r2,0(r2)
  811b24:	1880111e 	bne	r3,r2,811b6c <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
  811b28:	00802074 	movhi	r2,129
  811b2c:	108ce004 	addi	r2,r2,13184
  811b30:	e0fffe17 	ldw	r3,-8(fp)
  811b34:	18c00324 	muli	r3,r3,12
  811b38:	10c5883a 	add	r2,r2,r3
  811b3c:	10800204 	addi	r2,r2,8
  811b40:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
  811b44:	1000090e 	bge	r2,zero,811b6c <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
  811b48:	e0bffe17 	ldw	r2,-8(fp)
  811b4c:	10c00324 	muli	r3,r2,12
  811b50:	00802074 	movhi	r2,129
  811b54:	108ce004 	addi	r2,r2,13184
  811b58:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
  811b5c:	e0bfff17 	ldw	r2,-4(fp)
  811b60:	18800226 	beq	r3,r2,811b6c <alt_file_locked+0x94>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
  811b64:	00bffcc4 	movi	r2,-13
  811b68:	00000806 	br	811b8c <alt_file_locked+0xb4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  811b6c:	e0bffe17 	ldw	r2,-8(fp)
  811b70:	10800044 	addi	r2,r2,1
  811b74:	e0bffe15 	stw	r2,-8(fp)
  811b78:	d0a00a17 	ldw	r2,-32728(gp)
  811b7c:	1007883a 	mov	r3,r2
  811b80:	e0bffe17 	ldw	r2,-8(fp)
  811b84:	18bfdf2e 	bgeu	r3,r2,811b04 <__alt_data_end+0xff811b04>
    }
  }
  
  /* The device is not locked */
 
  return 0;
  811b88:	0005883a 	mov	r2,zero
}
  811b8c:	e037883a 	mov	sp,fp
  811b90:	df000017 	ldw	fp,0(sp)
  811b94:	dec00104 	addi	sp,sp,4
  811b98:	f800283a 	ret

00811b9c <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
  811b9c:	defff604 	addi	sp,sp,-40
  811ba0:	dfc00915 	stw	ra,36(sp)
  811ba4:	df000815 	stw	fp,32(sp)
  811ba8:	df000804 	addi	fp,sp,32
  811bac:	e13ffd15 	stw	r4,-12(fp)
  811bb0:	e17ffe15 	stw	r5,-8(fp)
  811bb4:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
  811bb8:	00bfffc4 	movi	r2,-1
  811bbc:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
  811bc0:	00bffb44 	movi	r2,-19
  811bc4:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
  811bc8:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
  811bcc:	d1600804 	addi	r5,gp,-32736
  811bd0:	e13ffd17 	ldw	r4,-12(fp)
  811bd4:	0811eb80 	call	811eb8 <alt_find_dev>
  811bd8:	e0bff815 	stw	r2,-32(fp)
  811bdc:	e0bff817 	ldw	r2,-32(fp)
  811be0:	1000051e 	bne	r2,zero,811bf8 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
  811be4:	e13ffd17 	ldw	r4,-12(fp)
  811be8:	0811f480 	call	811f48 <alt_find_file>
  811bec:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
  811bf0:	00800044 	movi	r2,1
  811bf4:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
  811bf8:	e0bff817 	ldw	r2,-32(fp)
  811bfc:	10002926 	beq	r2,zero,811ca4 <open+0x108>
  {
    if ((index = alt_get_fd (dev)) < 0)
  811c00:	e13ff817 	ldw	r4,-32(fp)
  811c04:	08120500 	call	812050 <alt_get_fd>
  811c08:	e0bff915 	stw	r2,-28(fp)
  811c0c:	e0bff917 	ldw	r2,-28(fp)
  811c10:	1000030e 	bge	r2,zero,811c20 <open+0x84>
    {
      status = index;
  811c14:	e0bff917 	ldw	r2,-28(fp)
  811c18:	e0bffa15 	stw	r2,-24(fp)
  811c1c:	00002306 	br	811cac <open+0x110>
    }
    else
    {
      fd = &alt_fd_list[index];
  811c20:	e0bff917 	ldw	r2,-28(fp)
  811c24:	10c00324 	muli	r3,r2,12
  811c28:	00802074 	movhi	r2,129
  811c2c:	108ce004 	addi	r2,r2,13184
  811c30:	1885883a 	add	r2,r3,r2
  811c34:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
  811c38:	e0fffe17 	ldw	r3,-8(fp)
  811c3c:	00900034 	movhi	r2,16384
  811c40:	10bfffc4 	addi	r2,r2,-1
  811c44:	1886703a 	and	r3,r3,r2
  811c48:	e0bffc17 	ldw	r2,-16(fp)
  811c4c:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
  811c50:	e0bffb17 	ldw	r2,-20(fp)
  811c54:	1000051e 	bne	r2,zero,811c6c <open+0xd0>
  811c58:	e13ffc17 	ldw	r4,-16(fp)
  811c5c:	0811ad80 	call	811ad8 <alt_file_locked>
  811c60:	e0bffa15 	stw	r2,-24(fp)
  811c64:	e0bffa17 	ldw	r2,-24(fp)
  811c68:	10001016 	blt	r2,zero,811cac <open+0x110>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
  811c6c:	e0bff817 	ldw	r2,-32(fp)
  811c70:	10800317 	ldw	r2,12(r2)
  811c74:	10000826 	beq	r2,zero,811c98 <open+0xfc>
  811c78:	e0bff817 	ldw	r2,-32(fp)
  811c7c:	10800317 	ldw	r2,12(r2)
  811c80:	e1ffff17 	ldw	r7,-4(fp)
  811c84:	e1bffe17 	ldw	r6,-8(fp)
  811c88:	e17ffd17 	ldw	r5,-12(fp)
  811c8c:	e13ffc17 	ldw	r4,-16(fp)
  811c90:	103ee83a 	callr	r2
  811c94:	00000106 	br	811c9c <open+0x100>
  811c98:	0005883a 	mov	r2,zero
  811c9c:	e0bffa15 	stw	r2,-24(fp)
  811ca0:	00000206 	br	811cac <open+0x110>
      }
    }
  }
  else
  {
    status = -ENODEV;
  811ca4:	00bffb44 	movi	r2,-19
  811ca8:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
  811cac:	e0bffa17 	ldw	r2,-24(fp)
  811cb0:	1000090e 	bge	r2,zero,811cd8 <open+0x13c>
  {
    alt_release_fd (index);  
  811cb4:	e13ff917 	ldw	r4,-28(fp)
  811cb8:	081044c0 	call	81044c <alt_release_fd>
    ALT_ERRNO = -status;
  811cbc:	0811a9c0 	call	811a9c <alt_get_errno>
  811cc0:	1007883a 	mov	r3,r2
  811cc4:	e0bffa17 	ldw	r2,-24(fp)
  811cc8:	0085c83a 	sub	r2,zero,r2
  811ccc:	18800015 	stw	r2,0(r3)
    return -1;
  811cd0:	00bfffc4 	movi	r2,-1
  811cd4:	00000106 	br	811cdc <open+0x140>
  }
  
  /* return the reference upon success */

  return index;
  811cd8:	e0bff917 	ldw	r2,-28(fp)
}
  811cdc:	e037883a 	mov	sp,fp
  811ce0:	dfc00117 	ldw	ra,4(sp)
  811ce4:	df000017 	ldw	fp,0(sp)
  811ce8:	dec00204 	addi	sp,sp,8
  811cec:	f800283a 	ret

00811cf0 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
  811cf0:	defffa04 	addi	sp,sp,-24
  811cf4:	df000515 	stw	fp,20(sp)
  811cf8:	df000504 	addi	fp,sp,20
  811cfc:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  811d00:	0005303a 	rdctl	r2,status
  811d04:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  811d08:	e0fffc17 	ldw	r3,-16(fp)
  811d0c:	00bfff84 	movi	r2,-2
  811d10:	1884703a 	and	r2,r3,r2
  811d14:	1001703a 	wrctl	status,r2
  
  return context;
  811d18:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
  811d1c:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
  811d20:	e0bfff17 	ldw	r2,-4(fp)
  811d24:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
  811d28:	e0bffd17 	ldw	r2,-12(fp)
  811d2c:	10800017 	ldw	r2,0(r2)
  811d30:	e0fffd17 	ldw	r3,-12(fp)
  811d34:	18c00117 	ldw	r3,4(r3)
  811d38:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
  811d3c:	e0bffd17 	ldw	r2,-12(fp)
  811d40:	10800117 	ldw	r2,4(r2)
  811d44:	e0fffd17 	ldw	r3,-12(fp)
  811d48:	18c00017 	ldw	r3,0(r3)
  811d4c:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
  811d50:	e0bffd17 	ldw	r2,-12(fp)
  811d54:	e0fffd17 	ldw	r3,-12(fp)
  811d58:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
  811d5c:	e0bffd17 	ldw	r2,-12(fp)
  811d60:	e0fffd17 	ldw	r3,-12(fp)
  811d64:	10c00015 	stw	r3,0(r2)
  811d68:	e0bffb17 	ldw	r2,-20(fp)
  811d6c:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  811d70:	e0bffe17 	ldw	r2,-8(fp)
  811d74:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
  811d78:	0001883a 	nop
  811d7c:	e037883a 	mov	sp,fp
  811d80:	df000017 	ldw	fp,0(sp)
  811d84:	dec00104 	addi	sp,sp,4
  811d88:	f800283a 	ret

00811d8c <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
  811d8c:	defffb04 	addi	sp,sp,-20
  811d90:	dfc00415 	stw	ra,16(sp)
  811d94:	df000315 	stw	fp,12(sp)
  811d98:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
  811d9c:	d0a00e17 	ldw	r2,-32712(gp)
  811da0:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
  811da4:	d0a6d717 	ldw	r2,-25764(gp)
  811da8:	10800044 	addi	r2,r2,1
  811dac:	d0a6d715 	stw	r2,-25764(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
  811db0:	00002e06 	br	811e6c <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
  811db4:	e0bffd17 	ldw	r2,-12(fp)
  811db8:	10800017 	ldw	r2,0(r2)
  811dbc:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
  811dc0:	e0bffd17 	ldw	r2,-12(fp)
  811dc4:	10800403 	ldbu	r2,16(r2)
  811dc8:	10803fcc 	andi	r2,r2,255
  811dcc:	10000426 	beq	r2,zero,811de0 <alt_tick+0x54>
  811dd0:	d0a6d717 	ldw	r2,-25764(gp)
  811dd4:	1000021e 	bne	r2,zero,811de0 <alt_tick+0x54>
    {
      alarm->rollover = 0;
  811dd8:	e0bffd17 	ldw	r2,-12(fp)
  811ddc:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
  811de0:	e0bffd17 	ldw	r2,-12(fp)
  811de4:	10800217 	ldw	r2,8(r2)
  811de8:	d0e6d717 	ldw	r3,-25764(gp)
  811dec:	18801d36 	bltu	r3,r2,811e64 <alt_tick+0xd8>
  811df0:	e0bffd17 	ldw	r2,-12(fp)
  811df4:	10800403 	ldbu	r2,16(r2)
  811df8:	10803fcc 	andi	r2,r2,255
  811dfc:	1000191e 	bne	r2,zero,811e64 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
  811e00:	e0bffd17 	ldw	r2,-12(fp)
  811e04:	10800317 	ldw	r2,12(r2)
  811e08:	e0fffd17 	ldw	r3,-12(fp)
  811e0c:	18c00517 	ldw	r3,20(r3)
  811e10:	1809883a 	mov	r4,r3
  811e14:	103ee83a 	callr	r2
  811e18:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
  811e1c:	e0bfff17 	ldw	r2,-4(fp)
  811e20:	1000031e 	bne	r2,zero,811e30 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
  811e24:	e13ffd17 	ldw	r4,-12(fp)
  811e28:	0811cf00 	call	811cf0 <alt_alarm_stop>
  811e2c:	00000d06 	br	811e64 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
  811e30:	e0bffd17 	ldw	r2,-12(fp)
  811e34:	10c00217 	ldw	r3,8(r2)
  811e38:	e0bfff17 	ldw	r2,-4(fp)
  811e3c:	1887883a 	add	r3,r3,r2
  811e40:	e0bffd17 	ldw	r2,-12(fp)
  811e44:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
  811e48:	e0bffd17 	ldw	r2,-12(fp)
  811e4c:	10c00217 	ldw	r3,8(r2)
  811e50:	d0a6d717 	ldw	r2,-25764(gp)
  811e54:	1880032e 	bgeu	r3,r2,811e64 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
  811e58:	e0bffd17 	ldw	r2,-12(fp)
  811e5c:	00c00044 	movi	r3,1
  811e60:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
  811e64:	e0bffe17 	ldw	r2,-8(fp)
  811e68:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
  811e6c:	e0fffd17 	ldw	r3,-12(fp)
  811e70:	d0a00e04 	addi	r2,gp,-32712
  811e74:	18bfcf1e 	bne	r3,r2,811db4 <__alt_data_end+0xff811db4>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
  811e78:	0001883a 	nop
}
  811e7c:	0001883a 	nop
  811e80:	e037883a 	mov	sp,fp
  811e84:	dfc00117 	ldw	ra,4(sp)
  811e88:	df000017 	ldw	fp,0(sp)
  811e8c:	dec00204 	addi	sp,sp,8
  811e90:	f800283a 	ret

00811e94 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
  811e94:	deffff04 	addi	sp,sp,-4
  811e98:	df000015 	stw	fp,0(sp)
  811e9c:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
  811ea0:	000170fa 	wrctl	ienable,zero
}
  811ea4:	0001883a 	nop
  811ea8:	e037883a 	mov	sp,fp
  811eac:	df000017 	ldw	fp,0(sp)
  811eb0:	dec00104 	addi	sp,sp,4
  811eb4:	f800283a 	ret

00811eb8 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
  811eb8:	defffa04 	addi	sp,sp,-24
  811ebc:	dfc00515 	stw	ra,20(sp)
  811ec0:	df000415 	stw	fp,16(sp)
  811ec4:	df000404 	addi	fp,sp,16
  811ec8:	e13ffe15 	stw	r4,-8(fp)
  811ecc:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
  811ed0:	e0bfff17 	ldw	r2,-4(fp)
  811ed4:	10800017 	ldw	r2,0(r2)
  811ed8:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
  811edc:	e13ffe17 	ldw	r4,-8(fp)
  811ee0:	0805bf00 	call	805bf0 <strlen>
  811ee4:	10800044 	addi	r2,r2,1
  811ee8:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
  811eec:	00000d06 	br	811f24 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
  811ef0:	e0bffc17 	ldw	r2,-16(fp)
  811ef4:	10800217 	ldw	r2,8(r2)
  811ef8:	e0fffd17 	ldw	r3,-12(fp)
  811efc:	180d883a 	mov	r6,r3
  811f00:	e17ffe17 	ldw	r5,-8(fp)
  811f04:	1009883a 	mov	r4,r2
  811f08:	081226c0 	call	81226c <memcmp>
  811f0c:	1000021e 	bne	r2,zero,811f18 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
  811f10:	e0bffc17 	ldw	r2,-16(fp)
  811f14:	00000706 	br	811f34 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
  811f18:	e0bffc17 	ldw	r2,-16(fp)
  811f1c:	10800017 	ldw	r2,0(r2)
  811f20:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
  811f24:	e0fffc17 	ldw	r3,-16(fp)
  811f28:	e0bfff17 	ldw	r2,-4(fp)
  811f2c:	18bff01e 	bne	r3,r2,811ef0 <__alt_data_end+0xff811ef0>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
  811f30:	0005883a 	mov	r2,zero
}
  811f34:	e037883a 	mov	sp,fp
  811f38:	dfc00117 	ldw	ra,4(sp)
  811f3c:	df000017 	ldw	fp,0(sp)
  811f40:	dec00204 	addi	sp,sp,8
  811f44:	f800283a 	ret

00811f48 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
  811f48:	defffb04 	addi	sp,sp,-20
  811f4c:	dfc00415 	stw	ra,16(sp)
  811f50:	df000315 	stw	fp,12(sp)
  811f54:	df000304 	addi	fp,sp,12
  811f58:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
  811f5c:	d0a00617 	ldw	r2,-32744(gp)
  811f60:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
  811f64:	00003106 	br	81202c <alt_find_file+0xe4>
  {
    len = strlen(next->name);
  811f68:	e0bffd17 	ldw	r2,-12(fp)
  811f6c:	10800217 	ldw	r2,8(r2)
  811f70:	1009883a 	mov	r4,r2
  811f74:	0805bf00 	call	805bf0 <strlen>
  811f78:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
  811f7c:	e0bffd17 	ldw	r2,-12(fp)
  811f80:	10c00217 	ldw	r3,8(r2)
  811f84:	e0bffe17 	ldw	r2,-8(fp)
  811f88:	10bfffc4 	addi	r2,r2,-1
  811f8c:	1885883a 	add	r2,r3,r2
  811f90:	10800003 	ldbu	r2,0(r2)
  811f94:	10803fcc 	andi	r2,r2,255
  811f98:	1080201c 	xori	r2,r2,128
  811f9c:	10bfe004 	addi	r2,r2,-128
  811fa0:	10800bd8 	cmpnei	r2,r2,47
  811fa4:	1000031e 	bne	r2,zero,811fb4 <alt_find_file+0x6c>
    {
      len -= 1;
  811fa8:	e0bffe17 	ldw	r2,-8(fp)
  811fac:	10bfffc4 	addi	r2,r2,-1
  811fb0:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
  811fb4:	e0bffe17 	ldw	r2,-8(fp)
  811fb8:	e0ffff17 	ldw	r3,-4(fp)
  811fbc:	1885883a 	add	r2,r3,r2
  811fc0:	10800003 	ldbu	r2,0(r2)
  811fc4:	10803fcc 	andi	r2,r2,255
  811fc8:	1080201c 	xori	r2,r2,128
  811fcc:	10bfe004 	addi	r2,r2,-128
  811fd0:	10800be0 	cmpeqi	r2,r2,47
  811fd4:	1000081e 	bne	r2,zero,811ff8 <alt_find_file+0xb0>
  811fd8:	e0bffe17 	ldw	r2,-8(fp)
  811fdc:	e0ffff17 	ldw	r3,-4(fp)
  811fe0:	1885883a 	add	r2,r3,r2
  811fe4:	10800003 	ldbu	r2,0(r2)
  811fe8:	10803fcc 	andi	r2,r2,255
  811fec:	1080201c 	xori	r2,r2,128
  811ff0:	10bfe004 	addi	r2,r2,-128
  811ff4:	10000a1e 	bne	r2,zero,812020 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
  811ff8:	e0bffd17 	ldw	r2,-12(fp)
  811ffc:	10800217 	ldw	r2,8(r2)
  812000:	e0fffe17 	ldw	r3,-8(fp)
  812004:	180d883a 	mov	r6,r3
  812008:	e17fff17 	ldw	r5,-4(fp)
  81200c:	1009883a 	mov	r4,r2
  812010:	081226c0 	call	81226c <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
  812014:	1000021e 	bne	r2,zero,812020 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
  812018:	e0bffd17 	ldw	r2,-12(fp)
  81201c:	00000706 	br	81203c <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
  812020:	e0bffd17 	ldw	r2,-12(fp)
  812024:	10800017 	ldw	r2,0(r2)
  812028:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
  81202c:	e0fffd17 	ldw	r3,-12(fp)
  812030:	d0a00604 	addi	r2,gp,-32744
  812034:	18bfcc1e 	bne	r3,r2,811f68 <__alt_data_end+0xff811f68>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
  812038:	0005883a 	mov	r2,zero
}
  81203c:	e037883a 	mov	sp,fp
  812040:	dfc00117 	ldw	ra,4(sp)
  812044:	df000017 	ldw	fp,0(sp)
  812048:	dec00204 	addi	sp,sp,8
  81204c:	f800283a 	ret

00812050 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
  812050:	defffc04 	addi	sp,sp,-16
  812054:	df000315 	stw	fp,12(sp)
  812058:	df000304 	addi	fp,sp,12
  81205c:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
  812060:	00bffa04 	movi	r2,-24
  812064:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
  812068:	e03ffd15 	stw	zero,-12(fp)
  81206c:	00001906 	br	8120d4 <alt_get_fd+0x84>
  {
    if (!alt_fd_list[i].dev)
  812070:	00802074 	movhi	r2,129
  812074:	108ce004 	addi	r2,r2,13184
  812078:	e0fffd17 	ldw	r3,-12(fp)
  81207c:	18c00324 	muli	r3,r3,12
  812080:	10c5883a 	add	r2,r2,r3
  812084:	10800017 	ldw	r2,0(r2)
  812088:	10000f1e 	bne	r2,zero,8120c8 <alt_get_fd+0x78>
    {
      alt_fd_list[i].dev = dev;
  81208c:	00802074 	movhi	r2,129
  812090:	108ce004 	addi	r2,r2,13184
  812094:	e0fffd17 	ldw	r3,-12(fp)
  812098:	18c00324 	muli	r3,r3,12
  81209c:	10c5883a 	add	r2,r2,r3
  8120a0:	e0ffff17 	ldw	r3,-4(fp)
  8120a4:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
  8120a8:	d0e00a17 	ldw	r3,-32728(gp)
  8120ac:	e0bffd17 	ldw	r2,-12(fp)
  8120b0:	1880020e 	bge	r3,r2,8120bc <alt_get_fd+0x6c>
      {
        alt_max_fd = i;
  8120b4:	e0bffd17 	ldw	r2,-12(fp)
  8120b8:	d0a00a15 	stw	r2,-32728(gp)
      }
      rc = i;
  8120bc:	e0bffd17 	ldw	r2,-12(fp)
  8120c0:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
  8120c4:	00000606 	br	8120e0 <alt_get_fd+0x90>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
  8120c8:	e0bffd17 	ldw	r2,-12(fp)
  8120cc:	10800044 	addi	r2,r2,1
  8120d0:	e0bffd15 	stw	r2,-12(fp)
  8120d4:	e0bffd17 	ldw	r2,-12(fp)
  8120d8:	10800810 	cmplti	r2,r2,32
  8120dc:	103fe41e 	bne	r2,zero,812070 <__alt_data_end+0xff812070>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
  8120e0:	e0bffe17 	ldw	r2,-8(fp)
}
  8120e4:	e037883a 	mov	sp,fp
  8120e8:	df000017 	ldw	fp,0(sp)
  8120ec:	dec00104 	addi	sp,sp,4
  8120f0:	f800283a 	ret

008120f4 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
  8120f4:	defffb04 	addi	sp,sp,-20
  8120f8:	df000415 	stw	fp,16(sp)
  8120fc:	df000404 	addi	fp,sp,16
  812100:	e13ffe15 	stw	r4,-8(fp)
  812104:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
  812108:	e0bfff17 	ldw	r2,-4(fp)
  81210c:	10840070 	cmpltui	r2,r2,4097
  812110:	1000021e 	bne	r2,zero,81211c <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
  812114:	00840004 	movi	r2,4096
  812118:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
  81211c:	e0fffe17 	ldw	r3,-8(fp)
  812120:	e0bfff17 	ldw	r2,-4(fp)
  812124:	1885883a 	add	r2,r3,r2
  812128:	e0bffd15 	stw	r2,-12(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
  81212c:	e0bffe17 	ldw	r2,-8(fp)
  812130:	e0bffc15 	stw	r2,-16(fp)
  812134:	00000506 	br	81214c <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
  812138:	e0bffc17 	ldw	r2,-16(fp)
  81213c:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
  812140:	e0bffc17 	ldw	r2,-16(fp)
  812144:	10800804 	addi	r2,r2,32
  812148:	e0bffc15 	stw	r2,-16(fp)
  81214c:	e0fffc17 	ldw	r3,-16(fp)
  812150:	e0bffd17 	ldw	r2,-12(fp)
  812154:	18bff836 	bltu	r3,r2,812138 <__alt_data_end+0xff812138>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
  812158:	e0bffe17 	ldw	r2,-8(fp)
  81215c:	108007cc 	andi	r2,r2,31
  812160:	10000226 	beq	r2,zero,81216c <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
  812164:	e0bffc17 	ldw	r2,-16(fp)
  812168:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
  81216c:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
  812170:	0001883a 	nop
  812174:	e037883a 	mov	sp,fp
  812178:	df000017 	ldw	fp,0(sp)
  81217c:	dec00104 	addi	sp,sp,4
  812180:	f800283a 	ret

00812184 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
  812184:	defffe04 	addi	sp,sp,-8
  812188:	df000115 	stw	fp,4(sp)
  81218c:	df000104 	addi	fp,sp,4
  812190:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
  812194:	e0bfff17 	ldw	r2,-4(fp)
  812198:	10bffe84 	addi	r2,r2,-6
  81219c:	10c00428 	cmpgeui	r3,r2,16
  8121a0:	18001a1e 	bne	r3,zero,81220c <alt_exception_cause_generated_bad_addr+0x88>
  8121a4:	100690ba 	slli	r3,r2,2
  8121a8:	00802074 	movhi	r2,129
  8121ac:	10886f04 	addi	r2,r2,8636
  8121b0:	1885883a 	add	r2,r3,r2
  8121b4:	10800017 	ldw	r2,0(r2)
  8121b8:	1000683a 	jmp	r2
  8121bc:	008121fc 	xorhi	r2,zero,1159
  8121c0:	008121fc 	xorhi	r2,zero,1159
  8121c4:	0081220c 	andi	r2,zero,1160
  8121c8:	0081220c 	andi	r2,zero,1160
  8121cc:	0081220c 	andi	r2,zero,1160
  8121d0:	008121fc 	xorhi	r2,zero,1159
  8121d4:	00812204 	movi	r2,1160
  8121d8:	0081220c 	andi	r2,zero,1160
  8121dc:	008121fc 	xorhi	r2,zero,1159
  8121e0:	008121fc 	xorhi	r2,zero,1159
  8121e4:	0081220c 	andi	r2,zero,1160
  8121e8:	008121fc 	xorhi	r2,zero,1159
  8121ec:	00812204 	movi	r2,1160
  8121f0:	0081220c 	andi	r2,zero,1160
  8121f4:	0081220c 	andi	r2,zero,1160
  8121f8:	008121fc 	xorhi	r2,zero,1159
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
  8121fc:	00800044 	movi	r2,1
  812200:	00000306 	br	812210 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
  812204:	0005883a 	mov	r2,zero
  812208:	00000106 	br	812210 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
  81220c:	0005883a 	mov	r2,zero
  }
}
  812210:	e037883a 	mov	sp,fp
  812214:	df000017 	ldw	fp,0(sp)
  812218:	dec00104 	addi	sp,sp,4
  81221c:	f800283a 	ret

00812220 <atexit>:
  812220:	200b883a 	mov	r5,r4
  812224:	000f883a 	mov	r7,zero
  812228:	000d883a 	mov	r6,zero
  81222c:	0009883a 	mov	r4,zero
  812230:	08122e81 	jmpi	8122e8 <__register_exitproc>

00812234 <exit>:
  812234:	defffe04 	addi	sp,sp,-8
  812238:	000b883a 	mov	r5,zero
  81223c:	dc000015 	stw	r16,0(sp)
  812240:	dfc00115 	stw	ra,4(sp)
  812244:	2021883a 	mov	r16,r4
  812248:	08124000 	call	812400 <__call_exitprocs>
  81224c:	00802074 	movhi	r2,129
  812250:	10915804 	addi	r2,r2,17760
  812254:	11000017 	ldw	r4,0(r2)
  812258:	20800f17 	ldw	r2,60(r4)
  81225c:	10000126 	beq	r2,zero,812264 <exit+0x30>
  812260:	103ee83a 	callr	r2
  812264:	8009883a 	mov	r4,r16
  812268:	08125800 	call	812580 <_exit>

0081226c <memcmp>:
  81226c:	01c000c4 	movi	r7,3
  812270:	3980192e 	bgeu	r7,r6,8122d8 <memcmp+0x6c>
  812274:	2144b03a 	or	r2,r4,r5
  812278:	11c4703a 	and	r2,r2,r7
  81227c:	10000f26 	beq	r2,zero,8122bc <memcmp+0x50>
  812280:	20800003 	ldbu	r2,0(r4)
  812284:	28c00003 	ldbu	r3,0(r5)
  812288:	10c0151e 	bne	r2,r3,8122e0 <memcmp+0x74>
  81228c:	31bfff84 	addi	r6,r6,-2
  812290:	01ffffc4 	movi	r7,-1
  812294:	00000406 	br	8122a8 <memcmp+0x3c>
  812298:	20800003 	ldbu	r2,0(r4)
  81229c:	28c00003 	ldbu	r3,0(r5)
  8122a0:	31bfffc4 	addi	r6,r6,-1
  8122a4:	10c00e1e 	bne	r2,r3,8122e0 <memcmp+0x74>
  8122a8:	21000044 	addi	r4,r4,1
  8122ac:	29400044 	addi	r5,r5,1
  8122b0:	31fff91e 	bne	r6,r7,812298 <__alt_data_end+0xff812298>
  8122b4:	0005883a 	mov	r2,zero
  8122b8:	f800283a 	ret
  8122bc:	20c00017 	ldw	r3,0(r4)
  8122c0:	28800017 	ldw	r2,0(r5)
  8122c4:	18bfee1e 	bne	r3,r2,812280 <__alt_data_end+0xff812280>
  8122c8:	31bfff04 	addi	r6,r6,-4
  8122cc:	21000104 	addi	r4,r4,4
  8122d0:	29400104 	addi	r5,r5,4
  8122d4:	39bff936 	bltu	r7,r6,8122bc <__alt_data_end+0xff8122bc>
  8122d8:	303fe91e 	bne	r6,zero,812280 <__alt_data_end+0xff812280>
  8122dc:	003ff506 	br	8122b4 <__alt_data_end+0xff8122b4>
  8122e0:	10c5c83a 	sub	r2,r2,r3
  8122e4:	f800283a 	ret

008122e8 <__register_exitproc>:
  8122e8:	defffa04 	addi	sp,sp,-24
  8122ec:	dc000315 	stw	r16,12(sp)
  8122f0:	04002074 	movhi	r16,129
  8122f4:	84115804 	addi	r16,r16,17760
  8122f8:	80c00017 	ldw	r3,0(r16)
  8122fc:	dc400415 	stw	r17,16(sp)
  812300:	dfc00515 	stw	ra,20(sp)
  812304:	18805217 	ldw	r2,328(r3)
  812308:	2023883a 	mov	r17,r4
  81230c:	10003726 	beq	r2,zero,8123ec <__register_exitproc+0x104>
  812310:	10c00117 	ldw	r3,4(r2)
  812314:	010007c4 	movi	r4,31
  812318:	20c00e16 	blt	r4,r3,812354 <__register_exitproc+0x6c>
  81231c:	1a000044 	addi	r8,r3,1
  812320:	8800221e 	bne	r17,zero,8123ac <__register_exitproc+0xc4>
  812324:	18c00084 	addi	r3,r3,2
  812328:	18c7883a 	add	r3,r3,r3
  81232c:	18c7883a 	add	r3,r3,r3
  812330:	12000115 	stw	r8,4(r2)
  812334:	10c7883a 	add	r3,r2,r3
  812338:	19400015 	stw	r5,0(r3)
  81233c:	0005883a 	mov	r2,zero
  812340:	dfc00517 	ldw	ra,20(sp)
  812344:	dc400417 	ldw	r17,16(sp)
  812348:	dc000317 	ldw	r16,12(sp)
  81234c:	dec00604 	addi	sp,sp,24
  812350:	f800283a 	ret
  812354:	00800034 	movhi	r2,0
  812358:	10800004 	addi	r2,r2,0
  81235c:	10002626 	beq	r2,zero,8123f8 <__register_exitproc+0x110>
  812360:	01006404 	movi	r4,400
  812364:	d9400015 	stw	r5,0(sp)
  812368:	d9800115 	stw	r6,4(sp)
  81236c:	d9c00215 	stw	r7,8(sp)
  812370:	00000000 	call	0 <__alt_mem_sdram-0x800000>
  812374:	d9400017 	ldw	r5,0(sp)
  812378:	d9800117 	ldw	r6,4(sp)
  81237c:	d9c00217 	ldw	r7,8(sp)
  812380:	10001d26 	beq	r2,zero,8123f8 <__register_exitproc+0x110>
  812384:	81000017 	ldw	r4,0(r16)
  812388:	10000115 	stw	zero,4(r2)
  81238c:	02000044 	movi	r8,1
  812390:	22405217 	ldw	r9,328(r4)
  812394:	0007883a 	mov	r3,zero
  812398:	12400015 	stw	r9,0(r2)
  81239c:	20805215 	stw	r2,328(r4)
  8123a0:	10006215 	stw	zero,392(r2)
  8123a4:	10006315 	stw	zero,396(r2)
  8123a8:	883fde26 	beq	r17,zero,812324 <__alt_data_end+0xff812324>
  8123ac:	18c9883a 	add	r4,r3,r3
  8123b0:	2109883a 	add	r4,r4,r4
  8123b4:	1109883a 	add	r4,r2,r4
  8123b8:	21802215 	stw	r6,136(r4)
  8123bc:	01800044 	movi	r6,1
  8123c0:	12406217 	ldw	r9,392(r2)
  8123c4:	30cc983a 	sll	r6,r6,r3
  8123c8:	4992b03a 	or	r9,r9,r6
  8123cc:	12406215 	stw	r9,392(r2)
  8123d0:	21c04215 	stw	r7,264(r4)
  8123d4:	01000084 	movi	r4,2
  8123d8:	893fd21e 	bne	r17,r4,812324 <__alt_data_end+0xff812324>
  8123dc:	11006317 	ldw	r4,396(r2)
  8123e0:	218cb03a 	or	r6,r4,r6
  8123e4:	11806315 	stw	r6,396(r2)
  8123e8:	003fce06 	br	812324 <__alt_data_end+0xff812324>
  8123ec:	18805304 	addi	r2,r3,332
  8123f0:	18805215 	stw	r2,328(r3)
  8123f4:	003fc606 	br	812310 <__alt_data_end+0xff812310>
  8123f8:	00bfffc4 	movi	r2,-1
  8123fc:	003fd006 	br	812340 <__alt_data_end+0xff812340>

00812400 <__call_exitprocs>:
  812400:	defff504 	addi	sp,sp,-44
  812404:	df000915 	stw	fp,36(sp)
  812408:	dd400615 	stw	r21,24(sp)
  81240c:	dc800315 	stw	r18,12(sp)
  812410:	dfc00a15 	stw	ra,40(sp)
  812414:	ddc00815 	stw	r23,32(sp)
  812418:	dd800715 	stw	r22,28(sp)
  81241c:	dd000515 	stw	r20,20(sp)
  812420:	dcc00415 	stw	r19,16(sp)
  812424:	dc400215 	stw	r17,8(sp)
  812428:	dc000115 	stw	r16,4(sp)
  81242c:	d9000015 	stw	r4,0(sp)
  812430:	2839883a 	mov	fp,r5
  812434:	04800044 	movi	r18,1
  812438:	057fffc4 	movi	r21,-1
  81243c:	00802074 	movhi	r2,129
  812440:	10915804 	addi	r2,r2,17760
  812444:	12000017 	ldw	r8,0(r2)
  812448:	45005217 	ldw	r20,328(r8)
  81244c:	44c05204 	addi	r19,r8,328
  812450:	a0001c26 	beq	r20,zero,8124c4 <__call_exitprocs+0xc4>
  812454:	a0800117 	ldw	r2,4(r20)
  812458:	15ffffc4 	addi	r23,r2,-1
  81245c:	b8000d16 	blt	r23,zero,812494 <__call_exitprocs+0x94>
  812460:	14000044 	addi	r16,r2,1
  812464:	8421883a 	add	r16,r16,r16
  812468:	8421883a 	add	r16,r16,r16
  81246c:	84402004 	addi	r17,r16,128
  812470:	a463883a 	add	r17,r20,r17
  812474:	a421883a 	add	r16,r20,r16
  812478:	e0001e26 	beq	fp,zero,8124f4 <__call_exitprocs+0xf4>
  81247c:	80804017 	ldw	r2,256(r16)
  812480:	e0801c26 	beq	fp,r2,8124f4 <__call_exitprocs+0xf4>
  812484:	bdffffc4 	addi	r23,r23,-1
  812488:	843fff04 	addi	r16,r16,-4
  81248c:	8c7fff04 	addi	r17,r17,-4
  812490:	bd7ff91e 	bne	r23,r21,812478 <__alt_data_end+0xff812478>
  812494:	00800034 	movhi	r2,0
  812498:	10800004 	addi	r2,r2,0
  81249c:	10000926 	beq	r2,zero,8124c4 <__call_exitprocs+0xc4>
  8124a0:	a0800117 	ldw	r2,4(r20)
  8124a4:	1000301e 	bne	r2,zero,812568 <__call_exitprocs+0x168>
  8124a8:	a0800017 	ldw	r2,0(r20)
  8124ac:	10003226 	beq	r2,zero,812578 <__call_exitprocs+0x178>
  8124b0:	a009883a 	mov	r4,r20
  8124b4:	98800015 	stw	r2,0(r19)
  8124b8:	00000000 	call	0 <__alt_mem_sdram-0x800000>
  8124bc:	9d000017 	ldw	r20,0(r19)
  8124c0:	a03fe41e 	bne	r20,zero,812454 <__alt_data_end+0xff812454>
  8124c4:	dfc00a17 	ldw	ra,40(sp)
  8124c8:	df000917 	ldw	fp,36(sp)
  8124cc:	ddc00817 	ldw	r23,32(sp)
  8124d0:	dd800717 	ldw	r22,28(sp)
  8124d4:	dd400617 	ldw	r21,24(sp)
  8124d8:	dd000517 	ldw	r20,20(sp)
  8124dc:	dcc00417 	ldw	r19,16(sp)
  8124e0:	dc800317 	ldw	r18,12(sp)
  8124e4:	dc400217 	ldw	r17,8(sp)
  8124e8:	dc000117 	ldw	r16,4(sp)
  8124ec:	dec00b04 	addi	sp,sp,44
  8124f0:	f800283a 	ret
  8124f4:	a0800117 	ldw	r2,4(r20)
  8124f8:	80c00017 	ldw	r3,0(r16)
  8124fc:	10bfffc4 	addi	r2,r2,-1
  812500:	15c01426 	beq	r2,r23,812554 <__call_exitprocs+0x154>
  812504:	80000015 	stw	zero,0(r16)
  812508:	183fde26 	beq	r3,zero,812484 <__alt_data_end+0xff812484>
  81250c:	95c8983a 	sll	r4,r18,r23
  812510:	a0806217 	ldw	r2,392(r20)
  812514:	a5800117 	ldw	r22,4(r20)
  812518:	2084703a 	and	r2,r4,r2
  81251c:	10000b26 	beq	r2,zero,81254c <__call_exitprocs+0x14c>
  812520:	a0806317 	ldw	r2,396(r20)
  812524:	2088703a 	and	r4,r4,r2
  812528:	20000c1e 	bne	r4,zero,81255c <__call_exitprocs+0x15c>
  81252c:	89400017 	ldw	r5,0(r17)
  812530:	d9000017 	ldw	r4,0(sp)
  812534:	183ee83a 	callr	r3
  812538:	a0800117 	ldw	r2,4(r20)
  81253c:	15bfbf1e 	bne	r2,r22,81243c <__alt_data_end+0xff81243c>
  812540:	98800017 	ldw	r2,0(r19)
  812544:	153fcf26 	beq	r2,r20,812484 <__alt_data_end+0xff812484>
  812548:	003fbc06 	br	81243c <__alt_data_end+0xff81243c>
  81254c:	183ee83a 	callr	r3
  812550:	003ff906 	br	812538 <__alt_data_end+0xff812538>
  812554:	a5c00115 	stw	r23,4(r20)
  812558:	003feb06 	br	812508 <__alt_data_end+0xff812508>
  81255c:	89000017 	ldw	r4,0(r17)
  812560:	183ee83a 	callr	r3
  812564:	003ff406 	br	812538 <__alt_data_end+0xff812538>
  812568:	a0800017 	ldw	r2,0(r20)
  81256c:	a027883a 	mov	r19,r20
  812570:	1029883a 	mov	r20,r2
  812574:	003fb606 	br	812450 <__alt_data_end+0xff812450>
  812578:	0005883a 	mov	r2,zero
  81257c:	003ffb06 	br	81256c <__alt_data_end+0xff81256c>

00812580 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
  812580:	defffd04 	addi	sp,sp,-12
  812584:	df000215 	stw	fp,8(sp)
  812588:	df000204 	addi	fp,sp,8
  81258c:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
  812590:	0001883a 	nop
  812594:	e0bfff17 	ldw	r2,-4(fp)
  812598:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
  81259c:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
  8125a0:	10000226 	beq	r2,zero,8125ac <_exit+0x2c>
    ALT_SIM_FAIL();
  8125a4:	002af070 	cmpltui	zero,zero,43969
  8125a8:	00000106 	br	8125b0 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
  8125ac:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
  8125b0:	003fff06 	br	8125b0 <__alt_data_end+0xff8125b0>
