
task65.elf:     file format elf32-littlenios2
task65.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00800244

Program Header:
    LOAD off    0x00001000 vaddr 0x00800000 paddr 0x00800000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00800020 paddr 0x00800020 align 2**12
         filesz 0x00015d04 memsz 0x00015d04 flags r-x
    LOAD off    0x00016d24 vaddr 0x00815d24 paddr 0x00817818 align 2**12
         filesz 0x00001af4 memsz 0x00001af4 flags rw-
    LOAD off    0x0001930c vaddr 0x0081930c paddr 0x0081930c align 2**12
         filesz 0x00000000 memsz 0x00000700 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00800000  00800000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000224  00800020  00800020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         000155b4  00800244  00800244  00001244  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       0000052c  008157f8  008157f8  000167f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001af4  00815d24  00817818  00016d24  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000700  0081930c  0081930c  0001930c  2**2
                  ALLOC, SMALL_DATA
  6 .sdram        00000000  00819a0c  00819a0c  00018818  2**0
                  CONTENTS
  7 .comment      00000023  00000000  00000000  00018818  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00001340  00000000  00000000  00018840  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   00029c39  00000000  00000000  00019b80  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 0000b75d  00000000  00000000  000437b9  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0000f0c1  00000000  00000000  0004ef16  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  00002bbc  00000000  00000000  0005dfd8  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    000046d7  00000000  00000000  00060b94  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    0001f1b2  00000000  00000000  0006526b  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000030  00000000  00000000  00084420  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 000022b8  00000000  00000000  00084450  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  0008a1fa  2**0
                  CONTENTS, READONLY
 18 .cpu          00000003  00000000  00000000  0008a1fd  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  0008a200  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  0008a201  2**0
                  CONTENTS, READONLY
 21 .sysid_hash   00000004  00000000  00000000  0008a202  2**0
                  CONTENTS, READONLY
 22 .sysid_base   00000004  00000000  00000000  0008a206  2**0
                  CONTENTS, READONLY
 23 .sysid_time   00000004  00000000  00000000  0008a20a  2**0
                  CONTENTS, READONLY
 24 .stderr_dev   00000009  00000000  00000000  0008a20e  2**0
                  CONTENTS, READONLY
 25 .stdin_dev    00000009  00000000  00000000  0008a217  2**0
                  CONTENTS, READONLY
 26 .stdout_dev   00000009  00000000  00000000  0008a220  2**0
                  CONTENTS, READONLY
 27 .sopc_system_name 00000012  00000000  00000000  0008a229  2**0
                  CONTENTS, READONLY
 28 .quartus_project_dir 00000037  00000000  00000000  0008a23b  2**0
                  CONTENTS, READONLY
 29 .jdi          000058e3  00000000  00000000  0008a272  2**0
                  CONTENTS, READONLY
 30 .sopcinfo     0003e372  00000000  00000000  0008fb55  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00800000 l    d  .entry	00000000 .entry
00800020 l    d  .exceptions	00000000 .exceptions
00800244 l    d  .text	00000000 .text
008157f8 l    d  .rodata	00000000 .rodata
00815d24 l    d  .rwdata	00000000 .rwdata
0081930c l    d  .bss	00000000 .bss
00819a0c l    d  .sdram	00000000 .sdram
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../task65_bsp//obj/HAL/src/crt0.o
0080028c l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 hello_world.c
00000000 l    df *ABS*	00000000 s_cos.c
00000000 l    df *ABS*	00000000 wf_pow.c
00000000 l    df *ABS*	00000000 e_rem_pio2.c
008158c4 l     O .rodata	00000108 two_over_pi
00815844 l     O .rodata	00000080 npio2_hw
00000000 l    df *ABS*	00000000 ef_pow.c
00000000 l    df *ABS*	00000000 ef_sqrt.c
00000000 l    df *ABS*	00000000 k_cos.c
00000000 l    df *ABS*	00000000 k_rem_pio2.c
00815a0c l     O .rodata	00000010 init_jk
008159cc l     O .rodata	00000040 PIo2
00000000 l    df *ABS*	00000000 k_sin.c
00000000 l    df *ABS*	00000000 s_fabs.c
00000000 l    df *ABS*	00000000 s_floor.c
00000000 l    df *ABS*	00000000 s_lib_ver.c
00000000 l    df *ABS*	00000000 s_matherr.c
00000000 l    df *ABS*	00000000 s_rint.c
00815a1c l     O .rodata	00000010 TWO52
00000000 l    df *ABS*	00000000 s_scalbn.c
00000000 l    df *ABS*	00000000 sf_fabs.c
00000000 l    df *ABS*	00000000 sf_finite.c
00000000 l    df *ABS*	00000000 sf_fpclassify.c
00000000 l    df *ABS*	00000000 sf_nan.c
00000000 l    df *ABS*	00000000 sf_scalbn.c
00000000 l    df *ABS*	00000000 s_copysign.c
00000000 l    df *ABS*	00000000 sf_copysign.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 addsf3.c
00000000 l    df *ABS*	00000000 divsf3.c
00000000 l    df *ABS*	00000000 eqsf2.c
00000000 l    df *ABS*	00000000 gesf2.c
00000000 l    df *ABS*	00000000 lesf2.c
00000000 l    df *ABS*	00000000 mulsf3.c
00000000 l    df *ABS*	00000000 subsf3.c
00000000 l    df *ABS*	00000000 fixsfsi.c
00000000 l    df *ABS*	00000000 floatsisf.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 extendsfdf2.c
00000000 l    df *ABS*	00000000 truncdfsf2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 impure.c
00815d24 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
00815b76 l     O .rodata	00000010 zeroes.4404
0080aff0 l     F .text	000000bc __sbprintf
00815b86 l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
0080b200 l     F .text	00000200 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
0080cd30 l     F .text	00000008 __fp_unlock
0080cd44 l     F .text	0000019c __sinit.part.1
0080cee0 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 locale.c
00816168 l     O .rwdata	00000020 lc_ctype_charset
00816148 l     O .rwdata	00000020 lc_message_charset
00816188 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
00815bb4 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
008102dc l     F .text	000000fc __sprint_r.part.0
00815ce8 l     O .rodata	00000010 blanks.4348
00815cd8 l     O .rodata	00000010 zeroes.4349
00811868 l     F .text	000000bc __sbprintf
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 alt_close.c
00812ea4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
00812fb0 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
00812fdc l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
008130c8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
008131a8 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
00813294 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_putstr.c
00000000 l    df *ABS*	00000000 alt_read.c
008134a4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
00817808 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_times.c
008136f0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_write.c
008137a4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
008138d8 l     F .text	00000034 alt_dev_reg
00816770 l     O .rwdata	00001060 jtag_uart
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
00813bcc l     F .text	0000020c altera_avalon_jtag_uart_irq
00813dd8 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
00814410 l     F .text	00000078 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
00814678 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
00814aec l     F .text	000000c4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
00814c2c l     F .text	0000003c alt_get_errno
00814c68 l     F .text	000000c4 alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 fputs.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
00819340 g     O .bss	00000004 alt_instruction_exception_handler
0080f920 g     F .text	00000074 _mprec_log10
0080fa0c g     F .text	0000008c __any_on
00811e04 g     F .text	00000054 _isatty_r
00815bc0 g     O .rodata	00000028 __mprec_tinytens
008133a4 g     F .text	0000007c alt_main
00808c70 g     F .text	000000c0 _puts_r
0081990c g     O .bss	00000100 alt_irq
008045b4 g     F .text	00000014 fabs
00811e58 g     F .text	00000060 _lseek_r
00817818 g       *ABS*	00000000 __flash_rwdata_start
00807604 g     F .text	00000088 .hidden __eqdf2
00819a0c g       *ABS*	00000000 __alt_heap_start
00808c34 g     F .text	0000003c printf
00812070 g     F .text	0000009c _wcrtomb_r
008008e8 g     F .text	0000012c cos_taylor
00800e40 g     F .text	000003a0 TaylorCustomSumVector
0081019c g     F .text	0000005c __sseek
0080d080 g     F .text	00000010 __sinit
00811f18 g     F .text	00000140 __swbuf_r
0080db48 g     F .text	0000007c _setlocale_r
0080cee8 g     F .text	00000068 __sfmoreglue
00813444 g     F .text	00000024 __malloc_unlock
008053c0 g     F .text	00000440 .hidden __divsf3
0080e818 g     F .text	0000015c memmove
0080d068 g     F .text	00000018 _cleanup
0080182c g     F .text	000004a4 powf
0080ea9c g     F .text	000000a8 _Balloc
008062dc g     F .text	00000070 .hidden __fixsfsi
00813468 g     F .text	0000003c alt_putstr
0080768c g     F .text	000000dc .hidden __gtdf2
00815024 g     F .text	00000024 altera_nios2_gen2_irq_init
00808bf4 g     F .text	00000010 __errno
00800000 g     F .entry	0000001c __reset
0081372c g     F .text	00000078 times
00800020 g       *ABS*	00000000 __flash_exceptions_start
00811da8 g     F .text	0000005c _fstat_r
00819324 g     O .bss	00000004 errno
008045c8 g     F .text	000001ec floor
00810118 g     F .text	00000008 __seofread
0081932c g     O .bss	00000004 alt_argv
0081f7d0 g       *ABS*	00000000 _gp
00805df8 g     F .text	000004e4 .hidden __subsf3
008165f0 g     O .rwdata	00000180 alt_fd_list
00801cd0 g     F .text	0000076c __ieee754_rem_pio2
00815048 g     F .text	00000090 alt_find_dev
0080e6d0 g     F .text	00000148 memcpy
0080cd38 g     F .text	0000000c _cleanup_r
008087fc g     F .text	000000dc .hidden __floatsidf
00814bb0 g     F .text	0000007c alt_io_redirect
00812d08 g     F .text	000000f4 .hidden __ltdf2
008157f8 g       *ABS*	00000000 __DTOR_END__
00808d30 g     F .text	00000014 puts
00815314 g     F .text	0000009c alt_exception_cause_generated_bad_addr
0080033c g     F .text	000000f4 radToDeg
00800290 g     F .text	000000ac buildCosTable
0080fffc g     F .text	00000074 __fpclassifyd
0080f87c g     F .text	000000a4 __ratio
0081184c g     F .text	0000001c __vfiprintf_internal
00813fd0 g     F .text	0000021c altera_avalon_jtag_uart_read
00808c04 g     F .text	00000030 _printf_r
00804e3c g     F .text	00000064 .hidden __udivsi3
00813104 g     F .text	000000a4 isatty
00815c10 g     O .rodata	000000c8 __mprec_tens
0080dbc4 g     F .text	0000000c __locale_charset
008030b4 g     F .text	000004a4 __kernel_cos
00805934 g     F .text	000000c8 .hidden __lesf2
00815284 g     F .text	00000090 alt_icache_flush
00819320 g     O .bss	00000004 __malloc_top_pad
00804b6c g     F .text	00000058 __fpclassifyf
008177e0 g     O .rwdata	00000004 __mb_cur_max
0080dbf4 g     F .text	0000000c _localeconv_r
0080eea8 g     F .text	0000003c __i2b
0080d504 g     F .text	000004bc __sfvwrite_r
00804b54 g     F .text	00000018 finitef
00810070 g     F .text	00000054 _sbrk_r
00804b44 g     F .text	00000010 fabsf
00811eb8 g     F .text	00000060 _read_r
00817800 g     O .rwdata	00000004 alt_max_fd
00811a9c g     F .text	000000f0 _fclose_r
0080cd00 g     F .text	00000030 fflush
0081931c g     O .bss	00000004 __malloc_max_sbrked_mem
008042e8 g     F .text	000002cc __kernel_sin
008088d8 g     F .text	00000110 .hidden __extendsfdf2
00806470 g     F .text	000008ac .hidden __adddf3
00805800 g     F .text	00000078 .hidden __nesf2
008008c4 g     F .text	00000024 custom_powf
0080f624 g     F .text	0000010c __b2d
008127d0 g     F .text	00000538 .hidden __umoddi3
008011e0 g     F .text	00000228 OneCustomSumVector
008132d0 g     F .text	000000d4 lseek
008177d4 g     O .rwdata	00000004 __fdlib_version
008177d8 g     O .rwdata	00000004 _global_impure_ptr
0080fa98 g     F .text	00000564 _realloc_r
00819a0c g       *ABS*	00000000 __bss_end
008149fc g     F .text	000000f0 alt_iic_isr_register
00814f1c g     F .text	00000108 alt_tick
00812258 g     F .text	00000578 .hidden __udivdi3
00811d04 g     F .text	00000024 _fputwc_r
00815be8 g     O .rodata	00000028 __mprec_bigtens
0080ec8c g     F .text	00000104 __s2b
00812dfc g     F .text	000000a8 .hidden __floatunsidf
008007f8 g     F .text	0000006c factorial
0080f364 g     F .text	00000060 __mcmp
00801408 g     F .text	00000208 LUTCustomSumVector
0080d0a0 g     F .text	00000018 __fp_lock_all
008149b0 g     F .text	0000004c alt_ic_irq_enabled
00814e80 g     F .text	0000009c alt_alarm_stop
00819334 g     O .bss	00000004 alt_irq_active
008000fc g     F .exceptions	000000d4 alt_irq_handler
008165c8 g     O .rwdata	00000028 alt_dev_null
00800430 g     F .text	00000188 lookupCos
00803558 g     F .text	00000d90 __kernel_rem_pio2
008047bc g     F .text	000001ec rint
00800a14 g     F .text	000000fc custom_cos_taylor
00814630 g     F .text	00000048 alt_dcache_flush_all
0080ed90 g     F .text	00000068 __hi0bits
0080877c g     F .text	00000080 .hidden __fixdfsi
00817818 g       *ABS*	00000000 __ram_rwdata_end
008177f8 g     O .rwdata	00000008 alt_dev_list
008137e0 g     F .text	000000f8 write
00805878 g     F .text	000000bc .hidden __gtsf2
00815d24 g       *ABS*	00000000 __ram_rodata_end
00813018 g     F .text	000000b0 fstat
00812d08 g     F .text	000000f4 .hidden __ledf2
0080f0dc g     F .text	00000140 __pow5mult
008103f0 g     F .text	0000145c ___vfiprintf_internal_r
00819314 g     O .bss	00000004 __nlocale_changed
00804ea0 g     F .text	00000058 .hidden __umodsi3
00800640 g     F .text	00000130 cos_horner
00800770 g     F .text	00000088 custom_cos_horner
00819a0c g       *ABS*	00000000 end
00813b0c g     F .text	000000c0 altera_avalon_jtag_uart_init
008001d0 g     F .exceptions	00000074 alt_instruction_exception_entry
008157f8 g       *ABS*	00000000 __CTOR_LIST__
01000000 g       *ABS*	00000000 __alt_stack_pointer
00814488 g     F .text	0000007c alt_avalon_timer_sc_init
00808b90 g     F .text	00000064 .hidden __clzsi2
008141ec g     F .text	00000224 altera_avalon_jtag_uart_write
00801740 g     F .text	000000ec cos
0080d090 g     F .text	00000004 __sfp_lock_acquire
0080e5ec g     F .text	000000e4 memchr
00808ddc g     F .text	000021f8 ___vfprintf_internal_r
0080d1f4 g     F .text	00000310 _free_r
0080dbd0 g     F .text	00000010 __locale_mb_cur_max
00815644 g     F .text	00000180 __call_exitprocs
00819310 g     O .bss	00000004 __mlocale_changed
008177e4 g     O .rwdata	00000004 __malloc_sbrk_base
00800244 g     F .text	0000004c _start
00819338 g     O .bss	00000004 _alt_tick_rate
0080f21c g     F .text	00000148 __lshift
0081933c g     O .bss	00000004 _alt_nticks
008134e0 g     F .text	000000fc read
00813944 g     F .text	00000064 alt_sys_init
0080634c g     F .text	00000124 .hidden __floatsisf
0081552c g     F .text	00000118 __register_exitproc
0080eee4 g     F .text	000001f8 __multiply
00813e78 g     F .text	00000068 altera_avalon_jtag_uart_close
00815d24 g       *ABS*	00000000 __ram_rwdata_start
008157f8 g       *ABS*	00000000 __ram_rodata_start
00819344 g     O .bss	00000028 __malloc_current_mallinfo
00805800 g     F .text	00000078 .hidden __eqsf2
0080f730 g     F .text	0000014c __d2b
0081936c g     O .bss	000005a0 cosTable
008139a8 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
008151e0 g     F .text	000000a4 alt_get_fd
00811984 g     F .text	00000054 _close_r
00800b10 g     F .text	0000004c generateVector
008154b0 g     F .text	0000007c memcmp
00813a68 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
00819a0c g       *ABS*	00000000 __alt_stack_base
00813ab8 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
0080b0ac g     F .text	00000154 __swsetup_r
00806d1c g     F .text	000008e8 .hidden __divdf3
0080cf50 g     F .text	00000118 __sfp
0080f994 g     F .text	00000078 __copybits
008161c0 g     O .rwdata	00000408 __malloc_av_
0080d09c g     F .text	00000004 __sinit_lock_release
00807768 g     F .text	00000718 .hidden __muldf3
0080243c g     F .text	00000b24 __ieee754_powf
008100c4 g     F .text	00000054 __sread
008150d8 g     F .text	00000108 alt_find_file
00800864 g     F .text	00000060 custom_factorial
008146b4 g     F .text	000000a4 alt_dev_llist_insert
00813420 g     F .text	00000024 __malloc_lock
00813640 g     F .text	000000b0 sbrk
00804bcc g     F .text	00000144 scalbnf
0080cca4 g     F .text	0000005c _fflush_r
008119d8 g     F .text	000000c4 _calloc_r
0081930c g       *ABS*	00000000 __bss_start
0080e974 g     F .text	00000128 memset
00802f60 g     F .text	00000154 __ieee754_sqrtf
00801610 g     F .text	00000130 main
00819330 g     O .bss	00000004 alt_envp
00819318 g     O .bss	00000004 __malloc_max_total_mem
00813a08 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
00812058 g     F .text	00000018 __swbuf
00805934 g     F .text	000000c8 .hidden __ltsf2
008101f8 g     F .text	00000008 __sclose
008047b4 g     F .text	00000008 matherr
01000000 g       *ABS*	00000000 __alt_heap_limit
00811b8c g     F .text	00000014 fclose
008089e8 g     F .text	000001a8 .hidden __truncdfsf2
0080b400 g     F .text	00001688 _dtoa_r
0080dde0 g     F .text	0000080c _malloc_r
008121cc g     F .text	00000030 __ascii_wctomb
00817804 g     O .rwdata	00000004 alt_errno
0080d9c0 g     F .text	000000c4 _fwalk
00804d44 g     F .text	00000084 .hidden __divsi3
0080d0d0 g     F .text	00000124 _malloc_trim_r
008157f8 g       *ABS*	00000000 __CTOR_END__
008059fc g     F .text	000003fc .hidden __mulsf3
00810200 g     F .text	000000dc strcmp
008157f8 g       *ABS*	00000000 __flash_rodata_start
008157f8 g       *ABS*	00000000 __DTOR_LIST__
00804d10 g     F .text	0000001c copysign
00807604 g     F .text	00000088 .hidden __nedf2
0081390c g     F .text	00000038 alt_irq_init
008135dc g     F .text	00000064 alt_release_fd
00804d2c g     F .text	00000018 copysignf
00815a2c g     O .rodata	00000100 .hidden __clz_tab
0081930c g     O .bss	00000004 _PathLocale
008153b0 g     F .text	00000014 atexit
00805878 g     F .text	000000bc .hidden __gesf2
00800b5c g     F .text	0000022c sumVector
00811924 g     F .text	00000060 _write_r
0080dc00 g     F .text	00000018 setlocale
00804bc4 g     F .text	00000008 nanf
008177dc g     O .rwdata	00000004 _impure_ptr
00800d88 g     F .text	000000b8 CustomSumVector
00819328 g     O .bss	00000004 alt_argc
0080ca88 g     F .text	0000021c __sflush_r
008049a8 g     F .text	0000019c scalbn
008147b8 g     F .text	00000060 _do_dtors
0080dbec g     F .text	00000008 __locale_cjk_lang
00800020 g       .exceptions	00000000 alt_irq_entry
0080f5c0 g     F .text	00000064 __ulp
0080d0b8 g     F .text	00000018 __fp_unlock_all
008005b8 g     F .text	00000088 customLookupCos
008177f0 g     O .rwdata	00000008 alt_fs_list
00800020 g       *ABS*	00000000 __ram_exceptions_start
0080dc18 g     F .text	0000000c localeconv
0081484c g     F .text	00000050 alt_ic_isr_register
00817818 g       *ABS*	00000000 _edata
00819a0c g       *ABS*	00000000 _end
00811ba0 g     F .text	00000164 __fputwc
00800244 g       *ABS*	00000000 __ram_exceptions_end
00813ee0 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
008153fc g     F .text	0000009c _fputs_r
00814924 g     F .text	0000008c alt_ic_irq_disable
00810120 g     F .text	0000007c __swrite
008177e8 g     O .rwdata	00000004 __malloc_trim_threshold
0080dbe0 g     F .text	0000000c __locale_msgcharset
008153c4 g     F .text	00000038 exit
008177d0 g     O .rwdata	00000004 degree
0080da84 g     F .text	000000c4 _fwalk_reent
0080f3c4 g     F .text	000001fc __mdiff
00804dc8 g     F .text	00000074 .hidden __modsi3
01000000 g       *ABS*	00000000 __alt_data_end
00800020 g     F .exceptions	00000000 alt_exception
0080d094 g     F .text	00000004 __sfp_lock_release
00800000 g       *ABS*	00000000 __alt_mem_sdram
008157c4 g     F .text	00000034 _exit
00814504 g     F .text	0000012c alt_alarm_start
0080dc24 g     F .text	000001bc __smakebuf_r
00808d44 g     F .text	00000098 strlen
00814d2c g     F .text	00000154 open
0080768c g     F .text	000000dc .hidden __gedf2
008177ec g     O .rwdata	00000004 __wctomb
008103d8 g     F .text	00000018 __sprint_r
00814818 g     F .text	00000034 alt_icache_flush_all
00815498 g     F .text	00000018 fputs
0081780c g     O .rwdata	00000004 alt_priority_mask
0081489c g     F .text	00000088 alt_ic_irq_enable
0080afd4 g     F .text	0000001c __vfprintf_internal
008121fc g     F .text	0000005c _wctomb_r
00807e80 g     F .text	000008fc .hidden __subdf3
0080edf8 g     F .text	000000b0 __lo0bits
00817810 g     O .rwdata	00000008 alt_alarm_list
00814758 g     F .text	00000060 _do_ctors
0081210c g     F .text	000000c0 wcrtomb
00812ee0 g     F .text	000000d0 close
00804ef8 g     F .text	000004c8 .hidden __addsf3
00813210 g     F .text	00000084 alt_load
00811d28 g     F .text	00000080 fputwc
0080d098 g     F .text	00000004 __sinit_lock_acquire
0080eb6c g     F .text	00000120 __multadd
0080eb44 g     F .text	00000028 _Bfree



Disassembly of section .entry:

00800000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
  800000:	00880014 	movui	r2,8192
#endif

0:
    initi r2
  800004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
  800008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
  80000c:	00bffd16 	blt	zero,r2,800004 <__alt_data_end+0xff800004>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
  800010:	00402034 	movhi	at,128
    ori r1, r1, %lo(_start)
  800014:	08409114 	ori	at,at,580
    jmp r1
  800018:	0800683a 	jmp	at
  80001c:	00000000 	call	0 <__alt_mem_sdram-0x800000>

Disassembly of section .exceptions:

00800020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
  800020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
  800024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
  800028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
  80002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
  800030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
  800034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
  800038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
  80003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
  800040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
  800044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
  800048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
  80004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
  800050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
  800054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
  800058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
  80005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
  800060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
  800064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
  800068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
  80006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  800070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
  800074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
  800078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
  80007c:	10000326 	beq	r2,zero,80008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
  800080:	20000226 	beq	r4,zero,80008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
  800084:	08000fc0 	call	8000fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
  800088:	00000706 	br	8000a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
  80008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
  800090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
  800094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
  800098:	08001d00 	call	8001d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
  80009c:	1000021e 	bne	r2,zero,8000a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
  8000a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  8000a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
  8000a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
  8000ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
  8000b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
  8000b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
  8000b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
  8000bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
  8000c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
  8000c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
  8000c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
  8000cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
  8000d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
  8000d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
  8000d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
  8000dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
  8000e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
  8000e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
  8000e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
  8000ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
  8000f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
  8000f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
  8000f8:	ef80083a 	eret

008000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
  8000fc:	defff904 	addi	sp,sp,-28
  800100:	dfc00615 	stw	ra,24(sp)
  800104:	df000515 	stw	fp,20(sp)
  800108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
  80010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
  800110:	0005313a 	rdctl	r2,ipending
  800114:	e0bffe15 	stw	r2,-8(fp)

  return active;
  800118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
  80011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
  800120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
  800124:	00800044 	movi	r2,1
  800128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
  80012c:	e0fffb17 	ldw	r3,-20(fp)
  800130:	e0bffc17 	ldw	r2,-16(fp)
  800134:	1884703a 	and	r2,r3,r2
  800138:	10001426 	beq	r2,zero,80018c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
  80013c:	008020b4 	movhi	r2,130
  800140:	10a64304 	addi	r2,r2,-26356
  800144:	e0fffd17 	ldw	r3,-12(fp)
  800148:	180690fa 	slli	r3,r3,3
  80014c:	10c5883a 	add	r2,r2,r3
  800150:	10c00017 	ldw	r3,0(r2)
  800154:	008020b4 	movhi	r2,130
  800158:	10a64304 	addi	r2,r2,-26356
  80015c:	e13ffd17 	ldw	r4,-12(fp)
  800160:	200890fa 	slli	r4,r4,3
  800164:	1105883a 	add	r2,r2,r4
  800168:	10800104 	addi	r2,r2,4
  80016c:	10800017 	ldw	r2,0(r2)
  800170:	1009883a 	mov	r4,r2
  800174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
  800178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
  80017c:	0005313a 	rdctl	r2,ipending
  800180:	e0bfff15 	stw	r2,-4(fp)

  return active;
  800184:	e0bfff17 	ldw	r2,-4(fp)
  800188:	00000706 	br	8001a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
  80018c:	e0bffc17 	ldw	r2,-16(fp)
  800190:	1085883a 	add	r2,r2,r2
  800194:	e0bffc15 	stw	r2,-16(fp)
      i++;
  800198:	e0bffd17 	ldw	r2,-12(fp)
  80019c:	10800044 	addi	r2,r2,1
  8001a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
  8001a4:	003fe106 	br	80012c <__alt_data_end+0xff80012c>

    active = alt_irq_pending ();
  8001a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
  8001ac:	e0bffb17 	ldw	r2,-20(fp)
  8001b0:	103fdb1e 	bne	r2,zero,800120 <__alt_data_end+0xff800120>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
  8001b4:	0001883a 	nop
}
  8001b8:	0001883a 	nop
  8001bc:	e037883a 	mov	sp,fp
  8001c0:	dfc00117 	ldw	ra,4(sp)
  8001c4:	df000017 	ldw	fp,0(sp)
  8001c8:	dec00204 	addi	sp,sp,8
  8001cc:	f800283a 	ret

008001d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
  8001d0:	defffb04 	addi	sp,sp,-20
  8001d4:	dfc00415 	stw	ra,16(sp)
  8001d8:	df000315 	stw	fp,12(sp)
  8001dc:	df000304 	addi	fp,sp,12
  8001e0:	e13fff15 	stw	r4,-4(fp)
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
  8001e4:	000531fa 	rdctl	r2,exception
  8001e8:	e0bffd15 	stw	r2,-12(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
  8001ec:	e0bffd17 	ldw	r2,-12(fp)
  8001f0:	10801f0c 	andi	r2,r2,124
  8001f4:	1004d0ba 	srli	r2,r2,2
  8001f8:	e0bffd15 	stw	r2,-12(fp)
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
  8001fc:	0005333a 	rdctl	r2,badaddr
  800200:	e0bffe15 	stw	r2,-8(fp)
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
  800204:	d0a6dc17 	ldw	r2,-25744(gp)
  800208:	10000726 	beq	r2,zero,800228 <alt_instruction_exception_entry+0x58>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
  80020c:	d0a6dc17 	ldw	r2,-25744(gp)
  800210:	e0fffd17 	ldw	r3,-12(fp)
  800214:	e1bffe17 	ldw	r6,-8(fp)
  800218:	e17fff17 	ldw	r5,-4(fp)
  80021c:	1809883a 	mov	r4,r3
  800220:	103ee83a 	callr	r2
  800224:	00000206 	br	800230 <alt_instruction_exception_entry+0x60>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
  800228:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
  80022c:	0005883a 	mov	r2,zero
}
  800230:	e037883a 	mov	sp,fp
  800234:	dfc00117 	ldw	ra,4(sp)
  800238:	df000017 	ldw	fp,0(sp)
  80023c:	dec00204 	addi	sp,sp,8
  800240:	f800283a 	ret

Disassembly of section .text:

00800244 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
  800244:	00810014 	movui	r2,1024
#endif

0:
    initd 0(r2)
  800248:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
  80024c:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
  800250:	00bffd16 	blt	zero,r2,800248 <__alt_data_end+0xff800248>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
  800254:	06c04034 	movhi	sp,256
    ori sp, sp, %lo(__alt_stack_pointer)
  800258:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
  80025c:	06802074 	movhi	gp,129
    ori gp, gp, %lo(_gp)
  800260:	d6bdf414 	ori	gp,gp,63440
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
  800264:	00802074 	movhi	r2,129
    ori r2, r2, %lo(__bss_start)
  800268:	10a4c314 	ori	r2,r2,37644

    movhi r3, %hi(__bss_end)
  80026c:	00c02074 	movhi	r3,129
    ori r3, r3, %lo(__bss_end)
  800270:	18e68314 	ori	r3,r3,39436

    beq r2, r3, 1f
  800274:	10c00326 	beq	r2,r3,800284 <_start+0x40>

0:
    stw zero, (r2)
  800278:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
  80027c:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
  800280:	10fffd36 	bltu	r2,r3,800278 <__alt_data_end+0xff800278>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
  800284:	08132100 	call	813210 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
  800288:	08133a40 	call	8133a4 <alt_main>

0080028c <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
  80028c:	003fff06 	br	80028c <__alt_data_end+0xff80028c>

00800290 <buildCosTable>:





void buildCosTable() {
  800290:	defffc04 	addi	sp,sp,-16
  800294:	dc400115 	stw	r17,4(sp)
  800298:	044020b4 	movhi	r17,130
  80029c:	dc800215 	stw	r18,8(sp)
  8002a0:	dc000015 	stw	r16,0(sp)
  8002a4:	dfc00315 	stw	ra,12(sp)
  8002a8:	8c64db04 	addi	r17,r17,-27796
  8002ac:	0009883a 	mov	r4,zero
  8002b0:	014ffc34 	movhi	r5,16368
  for(int i=0; i < TABLE_SIZE; i++) {
  8002b4:	0021883a 	mov	r16,zero
  8002b8:	04805a04 	movi	r18,360
  8002bc:	00001306 	br	80030c <buildCosTable+0x7c>
  8002c0:	08087fc0 	call	8087fc <__floatsidf>
  8002c4:	01951134 	movhi	r6,21572
  8002c8:	01d00274 	movhi	r7,16393
  8002cc:	318b4604 	addi	r6,r6,11544
  8002d0:	39c87ec4 	addi	r7,r7,8699
  8002d4:	1009883a 	mov	r4,r2
  8002d8:	180b883a 	mov	r5,r3
  8002dc:	08077680 	call	807768 <__muldf3>
  8002e0:	01d019f4 	movhi	r7,16487
  8002e4:	39e00004 	addi	r7,r7,-32768
  8002e8:	000d883a 	mov	r6,zero
  8002ec:	1009883a 	mov	r4,r2
  8002f0:	180b883a 	mov	r5,r3
  8002f4:	0806d1c0 	call	806d1c <__divdf3>
  8002f8:	1009883a 	mov	r4,r2
  8002fc:	180b883a 	mov	r5,r3
  800300:	08017400 	call	801740 <cos>
  800304:	1009883a 	mov	r4,r2
  800308:	180b883a 	mov	r5,r3
    cosTable[i] = cos(i * M_PI / 180.0);
  80030c:	08089e80 	call	8089e8 <__truncdfsf2>
  800310:	88800015 	stw	r2,0(r17)




void buildCosTable() {
  for(int i=0; i < TABLE_SIZE; i++) {
  800314:	84000044 	addi	r16,r16,1
  800318:	8009883a 	mov	r4,r16
  80031c:	8c400104 	addi	r17,r17,4
  800320:	84bfe71e 	bne	r16,r18,8002c0 <__alt_data_end+0xff8002c0>
    cosTable[i] = cos(i * M_PI / 180.0);
  }
}
  800324:	dfc00317 	ldw	ra,12(sp)
  800328:	dc800217 	ldw	r18,8(sp)
  80032c:	dc400117 	ldw	r17,4(sp)
  800330:	dc000017 	ldw	r16,0(sp)
  800334:	dec00404 	addi	sp,sp,16
  800338:	f800283a 	ret

0080033c <radToDeg>:
float radToDeg(float rad) {
  80033c:	defffc04 	addi	sp,sp,-16

  // Shift and scale to 0 to 2*PI
  angle = (rad + 1.0f) * M_PI;

  // Convert to degrees
  angle = angle * 180.0f / M_PI;
  800340:	014fe034 	movhi	r5,16256
void buildCosTable() {
  for(int i=0; i < TABLE_SIZE; i++) {
    cosTable[i] = cos(i * M_PI / 180.0);
  }
}
float radToDeg(float rad) {
  800344:	dfc00315 	stw	ra,12(sp)
  800348:	dc400115 	stw	r17,4(sp)
  80034c:	dc000015 	stw	r16,0(sp)
  800350:	dc800215 	stw	r18,8(sp)

  // Shift and scale to 0 to 2*PI
  angle = (rad + 1.0f) * M_PI;

  // Convert to degrees
  angle = angle * 180.0f / M_PI;
  800354:	0804ef80 	call	804ef8 <__addsf3>
  800358:	1009883a 	mov	r4,r2
  80035c:	08088d80 	call	8088d8 <__extendsfdf2>
  800360:	01951134 	movhi	r6,21572
  800364:	01d00274 	movhi	r7,16393
  800368:	318b4604 	addi	r6,r6,11544
  80036c:	39c87ec4 	addi	r7,r7,8699
  800370:	1009883a 	mov	r4,r2
  800374:	180b883a 	mov	r5,r3
  800378:	08077680 	call	807768 <__muldf3>
  80037c:	180b883a 	mov	r5,r3
  800380:	1009883a 	mov	r4,r2
  800384:	08089e80 	call	8089e8 <__truncdfsf2>
  800388:	0150cd34 	movhi	r5,17204
  80038c:	1009883a 	mov	r4,r2
  800390:	08059fc0 	call	8059fc <__mulsf3>
  800394:	1009883a 	mov	r4,r2
  800398:	08088d80 	call	8088d8 <__extendsfdf2>
  80039c:	01951134 	movhi	r6,21572
  8003a0:	01d00274 	movhi	r7,16393
  8003a4:	318b4604 	addi	r6,r6,11544
  8003a8:	39c87ec4 	addi	r7,r7,8699
  8003ac:	1009883a 	mov	r4,r2
  8003b0:	180b883a 	mov	r5,r3
  8003b4:	0806d1c0 	call	806d1c <__divdf3>
  8003b8:	1009883a 	mov	r4,r2
  8003bc:	180b883a 	mov	r5,r3
  8003c0:	08089e80 	call	8089e8 <__truncdfsf2>

  // Wrap into 0 to 360 range
  if(angle < 0) {
  8003c4:	000b883a 	mov	r5,zero
  8003c8:	1009883a 	mov	r4,r2

  // Shift and scale to 0 to 2*PI
  angle = (rad + 1.0f) * M_PI;

  // Convert to degrees
  angle = angle * 180.0f / M_PI;
  8003cc:	1021883a 	mov	r16,r2
  8003d0:	1023883a 	mov	r17,r2

  // Wrap into 0 to 360 range
  if(angle < 0) {
  8003d4:	08059340 	call	805934 <__lesf2>
  8003d8:	10001016 	blt	r2,zero,80041c <radToDeg+0xe0>
    angle += 360.0f;
  }
  else if (angle >= 360) {
  8003dc:	0490ed34 	movhi	r18,17332
  8003e0:	900b883a 	mov	r5,r18
  8003e4:	8009883a 	mov	r4,r16
  8003e8:	08058780 	call	805878 <__gesf2>
  8003ec:	10000416 	blt	r2,zero,800400 <radToDeg+0xc4>
    angle -= 360.0f;
  8003f0:	900b883a 	mov	r5,r18
  8003f4:	8009883a 	mov	r4,r16
  8003f8:	0805df80 	call	805df8 <__subsf3>
  8003fc:	1023883a 	mov	r17,r2
  }

  return angle;
}
  800400:	8805883a 	mov	r2,r17
  800404:	dfc00317 	ldw	ra,12(sp)
  800408:	dc800217 	ldw	r18,8(sp)
  80040c:	dc400117 	ldw	r17,4(sp)
  800410:	dc000017 	ldw	r16,0(sp)
  800414:	dec00404 	addi	sp,sp,16
  800418:	f800283a 	ret
  // Convert to degrees
  angle = angle * 180.0f / M_PI;

  // Wrap into 0 to 360 range
  if(angle < 0) {
    angle += 360.0f;
  80041c:	0150ed34 	movhi	r5,17332
  800420:	8009883a 	mov	r4,r16
  800424:	0804ef80 	call	804ef8 <__addsf3>
  800428:	1023883a 	mov	r17,r2
  80042c:	003ff406 	br	800400 <__alt_data_end+0xff800400>

00800430 <lookupCos>:
    angle -= 360.0f;
  }

  return angle;
}
float lookupCos(float x) {
  800430:	defffb04 	addi	sp,sp,-20

  // Shift and scale to 0 to 2*PI
  angle = (rad + 1.0f) * M_PI;

  // Convert to degrees
  angle = angle * 180.0f / M_PI;
  800434:	014fe034 	movhi	r5,16256
    angle -= 360.0f;
  }

  return angle;
}
float lookupCos(float x) {
  800438:	dfc00415 	stw	ra,16(sp)
  80043c:	dc400115 	stw	r17,4(sp)
  800440:	dc000015 	stw	r16,0(sp)
  800444:	dcc00315 	stw	r19,12(sp)
  800448:	dc800215 	stw	r18,8(sp)

  // Shift and scale to 0 to 2*PI
  angle = (rad + 1.0f) * M_PI;

  // Convert to degrees
  angle = angle * 180.0f / M_PI;
  80044c:	0804ef80 	call	804ef8 <__addsf3>
  800450:	1009883a 	mov	r4,r2
  800454:	08088d80 	call	8088d8 <__extendsfdf2>
  800458:	01951134 	movhi	r6,21572
  80045c:	01d00274 	movhi	r7,16393
  800460:	318b4604 	addi	r6,r6,11544
  800464:	39c87ec4 	addi	r7,r7,8699
  800468:	1009883a 	mov	r4,r2
  80046c:	180b883a 	mov	r5,r3
  800470:	08077680 	call	807768 <__muldf3>
  800474:	180b883a 	mov	r5,r3
  800478:	1009883a 	mov	r4,r2
  80047c:	08089e80 	call	8089e8 <__truncdfsf2>
  800480:	0150cd34 	movhi	r5,17204
  800484:	1009883a 	mov	r4,r2
  800488:	08059fc0 	call	8059fc <__mulsf3>
  80048c:	1009883a 	mov	r4,r2
  800490:	08088d80 	call	8088d8 <__extendsfdf2>
  800494:	01951134 	movhi	r6,21572
  800498:	01d00274 	movhi	r7,16393
  80049c:	318b4604 	addi	r6,r6,11544
  8004a0:	39c87ec4 	addi	r7,r7,8699
  8004a4:	1009883a 	mov	r4,r2
  8004a8:	180b883a 	mov	r5,r3
  8004ac:	0806d1c0 	call	806d1c <__divdf3>
  8004b0:	1009883a 	mov	r4,r2
  8004b4:	180b883a 	mov	r5,r3
  8004b8:	08089e80 	call	8089e8 <__truncdfsf2>

  // Wrap into 0 to 360 range
  if(angle < 0) {
  8004bc:	000b883a 	mov	r5,zero
  8004c0:	1009883a 	mov	r4,r2

  // Shift and scale to 0 to 2*PI
  angle = (rad + 1.0f) * M_PI;

  // Convert to degrees
  angle = angle * 180.0f / M_PI;
  8004c4:	1021883a 	mov	r16,r2
  8004c8:	1023883a 	mov	r17,r2

  // Wrap into 0 to 360 range
  if(angle < 0) {
  8004cc:	08059340 	call	805934 <__lesf2>
  8004d0:	10003416 	blt	r2,zero,8005a4 <lookupCos+0x174>
    angle += 360.0f;
  }
  else if (angle >= 360) {
  8004d4:	0490ed34 	movhi	r18,17332
  8004d8:	900b883a 	mov	r5,r18
  8004dc:	8009883a 	mov	r4,r16
  8004e0:	08058780 	call	805878 <__gesf2>
  8004e4:	10000416 	blt	r2,zero,8004f8 <lookupCos+0xc8>
    angle -= 360.0f;
  8004e8:	900b883a 	mov	r5,r18
  8004ec:	8009883a 	mov	r4,r16
  8004f0:	0805df80 	call	805df8 <__subsf3>
  8004f4:	1023883a 	mov	r17,r2

  return angle;
}
float lookupCos(float x) {
	float y=radToDeg(x);
	 int index = y * (TABLE_SIZE-1) / 360.0f;
  8004f8:	0150ed34 	movhi	r5,17332
  8004fc:	8809883a 	mov	r4,r17
  800500:	29600004 	addi	r5,r5,-32768
  800504:	08059fc0 	call	8059fc <__mulsf3>
  800508:	0150ed34 	movhi	r5,17332
  80050c:	1009883a 	mov	r4,r2
  800510:	08053c00 	call	8053c0 <__divsf3>
  800514:	1009883a 	mov	r4,r2
  800518:	1025883a 	mov	r18,r2
  80051c:	08062dc0 	call	8062dc <__fixsfsi>
  800520:	1021883a 	mov	r16,r2
	  float frac = (y * (TABLE_SIZE-1) / 360.0f) - index;

	  float y1 = cosTable[index];
  800524:	1087883a 	add	r3,r2,r2
  800528:	010020b4 	movhi	r4,130
	  float y2 = cosTable[index+1];
  80052c:	10800044 	addi	r2,r2,1
float lookupCos(float x) {
	float y=radToDeg(x);
	 int index = y * (TABLE_SIZE-1) / 360.0f;
	  float frac = (y * (TABLE_SIZE-1) / 360.0f) - index;

	  float y1 = cosTable[index];
  800530:	2124db04 	addi	r4,r4,-27796
  800534:	18c7883a 	add	r3,r3,r3
	  float y2 = cosTable[index+1];
  800538:	1085883a 	add	r2,r2,r2
float lookupCos(float x) {
	float y=radToDeg(x);
	 int index = y * (TABLE_SIZE-1) / 360.0f;
	  float frac = (y * (TABLE_SIZE-1) / 360.0f) - index;

	  float y1 = cosTable[index];
  80053c:	20c7883a 	add	r3,r4,r3
	  float y2 = cosTable[index+1];
  800540:	1085883a 	add	r2,r2,r2
float lookupCos(float x) {
	float y=radToDeg(x);
	 int index = y * (TABLE_SIZE-1) / 360.0f;
	  float frac = (y * (TABLE_SIZE-1) / 360.0f) - index;

	  float y1 = cosTable[index];
  800544:	1c400017 	ldw	r17,0(r3)
	  float y2 = cosTable[index+1];
  800548:	2085883a 	add	r2,r4,r2

	  return y1 + frac * (y2 - y1);
  80054c:	11000017 	ldw	r4,0(r2)
  800550:	880b883a 	mov	r5,r17
  800554:	0805df80 	call	805df8 <__subsf3>
  800558:	8009883a 	mov	r4,r16
  80055c:	1027883a 	mov	r19,r2
  800560:	080634c0 	call	80634c <__floatsisf>
  800564:	9009883a 	mov	r4,r18
  800568:	100b883a 	mov	r5,r2
  80056c:	0805df80 	call	805df8 <__subsf3>
  800570:	9809883a 	mov	r4,r19
  800574:	100b883a 	mov	r5,r2
  800578:	08059fc0 	call	8059fc <__mulsf3>
  80057c:	880b883a 	mov	r5,r17
  800580:	1009883a 	mov	r4,r2
  800584:	0804ef80 	call	804ef8 <__addsf3>
}
  800588:	dfc00417 	ldw	ra,16(sp)
  80058c:	dcc00317 	ldw	r19,12(sp)
  800590:	dc800217 	ldw	r18,8(sp)
  800594:	dc400117 	ldw	r17,4(sp)
  800598:	dc000017 	ldw	r16,0(sp)
  80059c:	dec00504 	addi	sp,sp,20
  8005a0:	f800283a 	ret
  // Convert to degrees
  angle = angle * 180.0f / M_PI;

  // Wrap into 0 to 360 range
  if(angle < 0) {
    angle += 360.0f;
  8005a4:	0150ed34 	movhi	r5,17332
  8005a8:	8009883a 	mov	r4,r16
  8005ac:	0804ef80 	call	804ef8 <__addsf3>
  8005b0:	1023883a 	mov	r17,r2
  8005b4:	003fd006 	br	8004f8 <__alt_data_end+0xff8004f8>

008005b8 <customLookupCos>:
	  float y1 = cosTable[index];
	  float y2 = cosTable[index+1];

	  return y1 + frac * (y2 - y1);
}
float customLookupCos(float x) {
  8005b8:	defffd04 	addi	sp,sp,-12
  8005bc:	dc400115 	stw	r17,4(sp)

//  int index = x * (TABLE_SIZE-1) / 360.0f;
	float tmp=ALT_CI_FP_MULT_0(x, ALT_CI_FP_MULT_0((TABLE_SIZE-1) , degree));
  8005c0:	d4600017 	ldw	r17,-32768(gp)
  8005c4:	0090ed34 	movhi	r2,17332
  8005c8:	10a00004 	addi	r2,r2,-32768
	  float y1 = cosTable[index];
	  float y2 = cosTable[index+1];

	  return y1 + frac * (y2 - y1);
}
float customLookupCos(float x) {
  8005cc:	dfc00215 	stw	ra,8(sp)
  8005d0:	dc000015 	stw	r16,0(sp)

//  int index = x * (TABLE_SIZE-1) / 360.0f;
	float tmp=ALT_CI_FP_MULT_0(x, ALT_CI_FP_MULT_0((TABLE_SIZE-1) , degree));
  8005d4:	1445c0f2 	custom	3,r2,r2,r17
  8005d8:	20a3c0f2 	custom	3,r17,r4,r2
	int index= (int) tmp;
  8005dc:	8809883a 	mov	r4,r17
  8005e0:	08062dc0 	call	8062dc <__fixsfsi>
	float frac= ALT_CI_FP_SUB_0(tmp,(float)index);
  8005e4:	1009883a 	mov	r4,r2
}
float customLookupCos(float x) {

//  int index = x * (TABLE_SIZE-1) / 360.0f;
	float tmp=ALT_CI_FP_MULT_0(x, ALT_CI_FP_MULT_0((TABLE_SIZE-1) , degree));
	int index= (int) tmp;
  8005e8:	1021883a 	mov	r16,r2
	float frac= ALT_CI_FP_SUB_0(tmp,(float)index);
  8005ec:	080634c0 	call	80634c <__floatsisf>
  8005f0:	88a3c0b2 	custom	2,r17,r17,r2
//	float frac=tmp-index;
//  int index=ALT_CI_FP_MULT_0(x, ALT_CI_FP_MULT_0((TABLE_SIZE-1) , degree));
//  float frac = (x * (TABLE_SIZE-1) / 360.0f) - index;
//  ALT_CI_FP_MULT_0(x, ALT_CI_FP_MULT_0((TABLE_SIZE-1) , degree));
  float y1 = cosTable[index];
  float y2 = cosTable[index+1];
  8005f4:	80c00044 	addi	r3,r16,1
//	printf( " index is %d, frac is %f", index, frac);
//	float frac=tmp-index;
//  int index=ALT_CI_FP_MULT_0(x, ALT_CI_FP_MULT_0((TABLE_SIZE-1) , degree));
//  float frac = (x * (TABLE_SIZE-1) / 360.0f) - index;
//  ALT_CI_FP_MULT_0(x, ALT_CI_FP_MULT_0((TABLE_SIZE-1) , degree));
  float y1 = cosTable[index];
  8005f8:	008020b4 	movhi	r2,130
  8005fc:	8421883a 	add	r16,r16,r16
  float y2 = cosTable[index+1];
  800600:	18c7883a 	add	r3,r3,r3
//	printf( " index is %d, frac is %f", index, frac);
//	float frac=tmp-index;
//  int index=ALT_CI_FP_MULT_0(x, ALT_CI_FP_MULT_0((TABLE_SIZE-1) , degree));
//  float frac = (x * (TABLE_SIZE-1) / 360.0f) - index;
//  ALT_CI_FP_MULT_0(x, ALT_CI_FP_MULT_0((TABLE_SIZE-1) , degree));
  float y1 = cosTable[index];
  800604:	10a4db04 	addi	r2,r2,-27796
  800608:	8421883a 	add	r16,r16,r16
  float y2 = cosTable[index+1];
  80060c:	18c7883a 	add	r3,r3,r3
//	printf( " index is %d, frac is %f", index, frac);
//	float frac=tmp-index;
//  int index=ALT_CI_FP_MULT_0(x, ALT_CI_FP_MULT_0((TABLE_SIZE-1) , degree));
//  float frac = (x * (TABLE_SIZE-1) / 360.0f) - index;
//  ALT_CI_FP_MULT_0(x, ALT_CI_FP_MULT_0((TABLE_SIZE-1) , degree));
  float y1 = cosTable[index];
  800610:	1421883a 	add	r16,r2,r16
  float y2 = cosTable[index+1];
  800614:	10c7883a 	add	r3,r2,r3
//	printf( " index is %d, frac is %f", index, frac);
//	float frac=tmp-index;
//  int index=ALT_CI_FP_MULT_0(x, ALT_CI_FP_MULT_0((TABLE_SIZE-1) , degree));
//  float frac = (x * (TABLE_SIZE-1) / 360.0f) - index;
//  ALT_CI_FP_MULT_0(x, ALT_CI_FP_MULT_0((TABLE_SIZE-1) , degree));
  float y1 = cosTable[index];
  800618:	81000017 	ldw	r4,0(r16)
  float y2 = cosTable[index+1];

  float res=ALT_CI_FP_ADD_0(y1, ALT_CI_FP_MULT_0(frac, ALT_CI_FP_SUB_0(y2,y1)));
  80061c:	18800017 	ldw	r2,0(r3)
  800620:	1105c0b2 	custom	2,r2,r2,r4
  800624:	8885c0f2 	custom	3,r2,r17,r2
//  return y1 + frac * (y2 - y1);
  return res;
}
  800628:	2085c072 	custom	1,r2,r4,r2
  80062c:	dfc00217 	ldw	ra,8(sp)
  800630:	dc400117 	ldw	r17,4(sp)
  800634:	dc000017 	ldw	r16,0(sp)
  800638:	dec00304 	addi	sp,sp,12
  80063c:	f800283a 	ret

00800640 <cos_horner>:

float cos_horner(float x) {
  800640:	defffc04 	addi	sp,sp,-16
  float term;

  term = 1.0f;
  result = term;

  term *= x*x/2.0f;
  800644:	200b883a 	mov	r5,r4
  float res=ALT_CI_FP_ADD_0(y1, ALT_CI_FP_MULT_0(frac, ALT_CI_FP_SUB_0(y2,y1)));
//  return y1 + frac * (y2 - y1);
  return res;
}

float cos_horner(float x) {
  800648:	dfc00315 	stw	ra,12(sp)
  80064c:	dc800215 	stw	r18,8(sp)
  800650:	dc400115 	stw	r17,4(sp)
  800654:	dc000015 	stw	r16,0(sp)
  float term;

  term = 1.0f;
  result = term;

  term *= x*x/2.0f;
  800658:	08059fc0 	call	8059fc <__mulsf3>
  80065c:	1009883a 	mov	r4,r2
  800660:	014fc034 	movhi	r5,16128
  800664:	1021883a 	mov	r16,r2
  800668:	08059fc0 	call	8059fc <__mulsf3>
  result += -term;
  80066c:	100b883a 	mov	r5,r2
  800670:	010fe034 	movhi	r4,16256
  float term;

  term = 1.0f;
  result = term;

  term *= x*x/2.0f;
  800674:	1023883a 	mov	r17,r2
  result += -term;
  800678:	0805df80 	call	805df8 <__subsf3>

  term *= x*x/3.0f*4.0f;
  80067c:	8009883a 	mov	r4,r16
  800680:	01501034 	movhi	r5,16448

  term = 1.0f;
  result = term;

  term *= x*x/2.0f;
  result += -term;
  800684:	1025883a 	mov	r18,r2

  term *= x*x/3.0f*4.0f;
  800688:	08053c00 	call	8053c0 <__divsf3>
  80068c:	01502034 	movhi	r5,16512
  800690:	1009883a 	mov	r4,r2
  800694:	08059fc0 	call	8059fc <__mulsf3>
  800698:	880b883a 	mov	r5,r17
  80069c:	1009883a 	mov	r4,r2
  8006a0:	08059fc0 	call	8059fc <__mulsf3>
  result += term;
  8006a4:	9009883a 	mov	r4,r18
  8006a8:	100b883a 	mov	r5,r2
  result = term;

  term *= x*x/2.0f;
  result += -term;

  term *= x*x/3.0f*4.0f;
  8006ac:	1023883a 	mov	r17,r2
  result += term;
  8006b0:	0804ef80 	call	804ef8 <__addsf3>

  term *= x*x/5.0f*6.0f;
  8006b4:	8009883a 	mov	r4,r16
  8006b8:	01502834 	movhi	r5,16544

  term *= x*x/2.0f;
  result += -term;

  term *= x*x/3.0f*4.0f;
  result += term;
  8006bc:	1025883a 	mov	r18,r2

  term *= x*x/5.0f*6.0f;
  8006c0:	08053c00 	call	8053c0 <__divsf3>
  8006c4:	01503034 	movhi	r5,16576
  8006c8:	1009883a 	mov	r4,r2
  8006cc:	08059fc0 	call	8059fc <__mulsf3>
  8006d0:	880b883a 	mov	r5,r17
  8006d4:	1009883a 	mov	r4,r2
  8006d8:	08059fc0 	call	8059fc <__mulsf3>
  result += -term;
  8006dc:	9009883a 	mov	r4,r18
  8006e0:	100b883a 	mov	r5,r2
  result += -term;

  term *= x*x/3.0f*4.0f;
  result += term;

  term *= x*x/5.0f*6.0f;
  8006e4:	1023883a 	mov	r17,r2
  result += -term;
  8006e8:	0805df80 	call	805df8 <__subsf3>

  term *= x*x/7.0f*8.0f;
  8006ec:	8009883a 	mov	r4,r16
  8006f0:	01503834 	movhi	r5,16608

  term *= x*x/3.0f*4.0f;
  result += term;

  term *= x*x/5.0f*6.0f;
  result += -term;
  8006f4:	1025883a 	mov	r18,r2

  term *= x*x/7.0f*8.0f;
  8006f8:	08053c00 	call	8053c0 <__divsf3>
  8006fc:	01504034 	movhi	r5,16640
  800700:	1009883a 	mov	r4,r2
  800704:	08059fc0 	call	8059fc <__mulsf3>
  800708:	880b883a 	mov	r5,r17
  80070c:	1009883a 	mov	r4,r2
  800710:	08059fc0 	call	8059fc <__mulsf3>
  result += term;
  800714:	9009883a 	mov	r4,r18
  800718:	100b883a 	mov	r5,r2
  result += term;

  term *= x*x/5.0f*6.0f;
  result += -term;

  term *= x*x/7.0f*8.0f;
  80071c:	1023883a 	mov	r17,r2
  result += term;
  800720:	0804ef80 	call	804ef8 <__addsf3>

  term *= x*x/9.0f*10.0f;
  result += -term;

  return result;
  800724:	8009883a 	mov	r4,r16
  800728:	01504434 	movhi	r5,16656

  term *= x*x/5.0f*6.0f;
  result += -term;

  term *= x*x/7.0f*8.0f;
  result += term;
  80072c:	1025883a 	mov	r18,r2

  term *= x*x/9.0f*10.0f;
  result += -term;

  return result;
  800730:	08053c00 	call	8053c0 <__divsf3>
  800734:	01504834 	movhi	r5,16672
  800738:	1009883a 	mov	r4,r2
  80073c:	08059fc0 	call	8059fc <__mulsf3>
  800740:	880b883a 	mov	r5,r17
  800744:	1009883a 	mov	r4,r2
  800748:	08059fc0 	call	8059fc <__mulsf3>
  80074c:	100b883a 	mov	r5,r2
  800750:	9009883a 	mov	r4,r18
  800754:	0805df80 	call	805df8 <__subsf3>
}
  800758:	dfc00317 	ldw	ra,12(sp)
  80075c:	dc800217 	ldw	r18,8(sp)
  800760:	dc400117 	ldw	r17,4(sp)
  800764:	dc000017 	ldw	r16,0(sp)
  800768:	dec00404 	addi	sp,sp,16
  80076c:	f800283a 	ret

00800770 <custom_cos_horner>:
  float term;

  term = 1.0f;
  result = term;

  term = ALT_CI_FP_MULT_0(term, ALT_CI_FP_MULT_0(x, ALT_CI_FP_MULT_0(x,1/2.0f)));
  800770:	018fc034 	movhi	r6,16128
  800774:	218dc0f2 	custom	3,r6,r4,r6
  800778:	218dc0f2 	custom	3,r6,r4,r6
  80077c:	008fe034 	movhi	r2,16256
  800780:	118fc0f2 	custom	3,r7,r2,r6
  result = ALT_CI_FP_ADD_0(result,-term);
  800784:	38e0003c 	xorhi	r3,r7,32768
  800788:	10c5c072 	custom	1,r2,r2,r3

  term = ALT_CI_FP_MULT_0(term,ALT_CI_FP_MULT_0(x,ALT_CI_FP_MULT_0(x, 1.0/(12.0f))));
  80078c:	014f6af4 	movhi	r5,15787
  800790:	296aaac4 	addi	r5,r5,-21845
  800794:	214bc0f2 	custom	3,r5,r4,r5
  800798:	214bc0f2 	custom	3,r5,r4,r5
  80079c:	394dc0f2 	custom	3,r6,r7,r5
  result = ALT_CI_FP_ADD_0(result,term);
  8007a0:	1185c072 	custom	1,r2,r2,r6

  term = ALT_CI_FP_MULT_0(term,ALT_CI_FP_MULT_0(x,ALT_CI_FP_MULT_0(x, 1.0/(30.0f))));
  8007a4:	00cf4274 	movhi	r3,15625
  8007a8:	18e22244 	addi	r3,r3,-30583
  8007ac:	20c7c0f2 	custom	3,r3,r4,r3
  8007b0:	20c7c0f2 	custom	3,r3,r4,r3
  8007b4:	30cbc0f2 	custom	3,r5,r6,r3
  result = ALT_CI_FP_ADD_0(result,-term);
  8007b8:	28e0003c 	xorhi	r3,r5,32768
  8007bc:	10c5c072 	custom	1,r2,r2,r3

  term = ALT_CI_FP_MULT_0(term,ALT_CI_FP_MULT_0(x,ALT_CI_FP_MULT_0(x, 1.0/(56.0f))));
  8007c0:	00cf24b4 	movhi	r3,15506
  8007c4:	18d24944 	addi	r3,r3,18725
  8007c8:	20c7c0f2 	custom	3,r3,r4,r3
  8007cc:	20c7c0f2 	custom	3,r3,r4,r3
  8007d0:	28c7c0f2 	custom	3,r3,r5,r3
  result = ALT_CI_FP_ADD_0(result,term);
  8007d4:	10c5c072 	custom	1,r2,r2,r3

  term = ALT_CI_FP_MULT_0(term,ALT_CI_FP_MULT_0(x,ALT_CI_FP_MULT_0(x, 1.0/(90.0f))));
  8007d8:	014f0db4 	movhi	r5,15414
  8007dc:	2942d844 	addi	r5,r5,2913
  8007e0:	214bc0f2 	custom	3,r5,r4,r5
  8007e4:	2149c0f2 	custom	3,r4,r4,r5
  8007e8:	1907c0f2 	custom	3,r3,r3,r4
  result = ALT_CI_FP_ADD_0(result,-term);
  8007ec:	18e0003c 	xorhi	r3,r3,32768

  return result;
}
  8007f0:	10c5c072 	custom	1,r2,r2,r3
  8007f4:	f800283a 	ret

008007f8 <factorial>:
float factorial(int n) {
  8007f8:	defffc04 	addi	sp,sp,-16
  8007fc:	dfc00315 	stw	ra,12(sp)
  800800:	dc800215 	stw	r18,8(sp)
  800804:	dc400115 	stw	r17,4(sp)
  800808:	dc000015 	stw	r16,0(sp)
  float result = 1.0f;
  int i;

  for(i=2; i<=n; i++)
  80080c:	00800044 	movi	r2,1
  800810:	1100120e 	bge	r2,r4,80085c <factorial+0x64>
  800814:	20a5883a 	add	r18,r4,r2
  800818:	04000084 	movi	r16,2
  80081c:	044fe034 	movhi	r17,16256
    result *= i;
  800820:	8009883a 	mov	r4,r16
  800824:	080634c0 	call	80634c <__floatsisf>
  800828:	8809883a 	mov	r4,r17
  80082c:	100b883a 	mov	r5,r2
  800830:	08059fc0 	call	8059fc <__mulsf3>
}
float factorial(int n) {
  float result = 1.0f;
  int i;

  for(i=2; i<=n; i++)
  800834:	84000044 	addi	r16,r16,1
    result *= i;
  800838:	1023883a 	mov	r17,r2
}
float factorial(int n) {
  float result = 1.0f;
  int i;

  for(i=2; i<=n; i++)
  80083c:	84bff81e 	bne	r16,r18,800820 <__alt_data_end+0xff800820>
    result *= i;

  return (float)result;
}
  800840:	8805883a 	mov	r2,r17
  800844:	dfc00317 	ldw	ra,12(sp)
  800848:	dc800217 	ldw	r18,8(sp)
  80084c:	dc400117 	ldw	r17,4(sp)
  800850:	dc000017 	ldw	r16,0(sp)
  800854:	dec00404 	addi	sp,sp,16
  800858:	f800283a 	ret
  result = ALT_CI_FP_ADD_0(result,-term);

  return result;
}
float factorial(int n) {
  float result = 1.0f;
  80085c:	044fe034 	movhi	r17,16256
  800860:	003ff706 	br	800840 <__alt_data_end+0xff800840>

00800864 <custom_factorial>:
  for(i=2; i<=n; i++)
    result *= i;

  return (float)result;
}
float custom_factorial(int n) {
  800864:	defffc04 	addi	sp,sp,-16
  800868:	dfc00315 	stw	ra,12(sp)
  80086c:	dc800215 	stw	r18,8(sp)
  800870:	dc400115 	stw	r17,4(sp)
  800874:	dc000015 	stw	r16,0(sp)
  float result = 1.0f;
  int i;

  for(i=2; i<=n; i++)
  800878:	00800044 	movi	r2,1
  80087c:	11000f0e 	bge	r2,r4,8008bc <custom_factorial+0x58>
  800880:	2025883a 	mov	r18,r4
  800884:	04000084 	movi	r16,2
  800888:	044fe034 	movhi	r17,16256
    result = ALT_CI_FP_MULT_0(result,i);
  80088c:	8009883a 	mov	r4,r16
  800890:	080634c0 	call	80634c <__floatsisf>
  800894:	88a3c0f2 	custom	3,r17,r17,r2
}
float custom_factorial(int n) {
  float result = 1.0f;
  int i;

  for(i=2; i<=n; i++)
  800898:	84000044 	addi	r16,r16,1
  80089c:	943ffb0e 	bge	r18,r16,80088c <__alt_data_end+0xff80088c>
    result = ALT_CI_FP_MULT_0(result,i);

  return (float)result;
}
  8008a0:	8805883a 	mov	r2,r17
  8008a4:	dfc00317 	ldw	ra,12(sp)
  8008a8:	dc800217 	ldw	r18,8(sp)
  8008ac:	dc400117 	ldw	r17,4(sp)
  8008b0:	dc000017 	ldw	r16,0(sp)
  8008b4:	dec00404 	addi	sp,sp,16
  8008b8:	f800283a 	ret
    result *= i;

  return (float)result;
}
float custom_factorial(int n) {
  float result = 1.0f;
  8008bc:	044fe034 	movhi	r17,16256
  8008c0:	003ff706 	br	8008a0 <__alt_data_end+0xff8008a0>

008008c4 <custom_powf>:

  return (float)result;
}
float custom_powf(float x, int n){
	float result = 1.0f;
	for (int i=0; i<n; i++){
  8008c4:	0140060e 	bge	zero,r5,8008e0 <custom_powf+0x1c>
  8008c8:	0007883a 	mov	r3,zero
  8008cc:	008fe034 	movhi	r2,16256
		result=ALT_CI_FP_MULT_0(result, x);
  8008d0:	1105c0f2 	custom	3,r2,r2,r4

  return (float)result;
}
float custom_powf(float x, int n){
	float result = 1.0f;
	for (int i=0; i<n; i++){
  8008d4:	18c00044 	addi	r3,r3,1
  8008d8:	28fffd1e 	bne	r5,r3,8008d0 <__alt_data_end+0xff8008d0>
  8008dc:	f800283a 	ret
    result = ALT_CI_FP_MULT_0(result,i);

  return (float)result;
}
float custom_powf(float x, int n){
	float result = 1.0f;
  8008e0:	008fe034 	movhi	r2,16256
	for (int i=0; i<n; i++){
		result=ALT_CI_FP_MULT_0(result, x);
	}
	return (float)result;
}
  8008e4:	f800283a 	ret

008008e8 <cos_taylor>:


float cos_taylor(float x, int n) {
  8008e8:	defff604 	addi	sp,sp,-40
  8008ec:	dfc00915 	stw	ra,36(sp)
  8008f0:	df000815 	stw	fp,32(sp)
  8008f4:	ddc00715 	stw	r23,28(sp)
  8008f8:	dd800615 	stw	r22,24(sp)
  8008fc:	dd400515 	stw	r21,20(sp)
  800900:	dd000415 	stw	r20,16(sp)
  800904:	dcc00315 	stw	r19,12(sp)
  800908:	dc800215 	stw	r18,8(sp)
  80090c:	dc400115 	stw	r17,4(sp)
  800910:	dc000015 	stw	r16,0(sp)
  float result = 0.0f;
  float term = 1.0f;
  int i;

  for(i=0; i<n; i++) {
  800914:	01402f0e 	bge	zero,r5,8009d4 <cos_taylor+0xec>
  800918:	282d883a 	mov	r22,r5
  80091c:	200b883a 	mov	r5,r4
  800920:	04cfe034 	movhi	r19,16256
  800924:	08059fc0 	call	8059fc <__mulsf3>
  800928:	102f883a 	mov	r23,r2
  80092c:	0025883a 	mov	r18,zero
  800930:	0029883a 	mov	r20,zero
    result += term * powf(-1, i) / factorial(2*i);
  800934:	982b883a 	mov	r21,r19
  result = ALT_CI_FP_ADD_0(result,-term);

  return result;
}
float factorial(int n) {
  float result = 1.0f;
  800938:	9839883a 	mov	fp,r19
  float result = 0.0f;
  float term = 1.0f;
  int i;

  for(i=0; i<n; i++) {
    result += term * powf(-1, i) / factorial(2*i);
  80093c:	e00b883a 	mov	r5,fp
  800940:	a809883a 	mov	r4,r21
  800944:	08053c00 	call	8053c0 <__divsf3>
  800948:	a009883a 	mov	r4,r20
  80094c:	100b883a 	mov	r5,r2
  800950:	0804ef80 	call	804ef8 <__addsf3>
    term *= x * x;
  800954:	9809883a 	mov	r4,r19
  800958:	b80b883a 	mov	r5,r23
  float result = 0.0f;
  float term = 1.0f;
  int i;

  for(i=0; i<n; i++) {
    result += term * powf(-1, i) / factorial(2*i);
  80095c:	1029883a 	mov	r20,r2
float cos_taylor(float x, int n) {
  float result = 0.0f;
  float term = 1.0f;
  int i;

  for(i=0; i<n; i++) {
  800960:	94800044 	addi	r18,r18,1
    result += term * powf(-1, i) / factorial(2*i);
    term *= x * x;
  800964:	08059fc0 	call	8059fc <__mulsf3>
  800968:	1021883a 	mov	r16,r2
  80096c:	1027883a 	mov	r19,r2
float cos_taylor(float x, int n) {
  float result = 0.0f;
  float term = 1.0f;
  int i;

  for(i=0; i<n; i++) {
  800970:	b4801926 	beq	r22,r18,8009d8 <cos_taylor+0xf0>
    result += term * powf(-1, i) / factorial(2*i);
  800974:	9009883a 	mov	r4,r18
  800978:	080634c0 	call	80634c <__floatsisf>
  80097c:	100b883a 	mov	r5,r2
  800980:	012fe034 	movhi	r4,49024
  800984:	080182c0 	call	80182c <powf>
  800988:	800b883a 	mov	r5,r16
  80098c:	1009883a 	mov	r4,r2
  800990:	08059fc0 	call	8059fc <__mulsf3>
  800994:	102b883a 	mov	r21,r2
  800998:	94a3883a 	add	r17,r18,r18
}
float factorial(int n) {
  float result = 1.0f;
  int i;

  for(i=2; i<=n; i++)
  80099c:	00800044 	movi	r2,1
  8009a0:	14401a0e 	bge	r2,r17,800a0c <cos_taylor+0x124>
  8009a4:	88a3883a 	add	r17,r17,r2
  8009a8:	070fe034 	movhi	fp,16256
  8009ac:	04000084 	movi	r16,2
    result *= i;
  8009b0:	8009883a 	mov	r4,r16
  8009b4:	080634c0 	call	80634c <__floatsisf>
  8009b8:	e009883a 	mov	r4,fp
  8009bc:	100b883a 	mov	r5,r2
  8009c0:	08059fc0 	call	8059fc <__mulsf3>
}
float factorial(int n) {
  float result = 1.0f;
  int i;

  for(i=2; i<=n; i++)
  8009c4:	84000044 	addi	r16,r16,1
    result *= i;
  8009c8:	1039883a 	mov	fp,r2
}
float factorial(int n) {
  float result = 1.0f;
  int i;

  for(i=2; i<=n; i++)
  8009cc:	847ff81e 	bne	r16,r17,8009b0 <__alt_data_end+0xff8009b0>
  8009d0:	003fda06 	br	80093c <__alt_data_end+0xff80093c>
	return (float)result;
}


float cos_taylor(float x, int n) {
  float result = 0.0f;
  8009d4:	0029883a 	mov	r20,zero
    result += term * powf(-1, i) / factorial(2*i);
    term *= x * x;
  }

  return result;
}
  8009d8:	a005883a 	mov	r2,r20
  8009dc:	dfc00917 	ldw	ra,36(sp)
  8009e0:	df000817 	ldw	fp,32(sp)
  8009e4:	ddc00717 	ldw	r23,28(sp)
  8009e8:	dd800617 	ldw	r22,24(sp)
  8009ec:	dd400517 	ldw	r21,20(sp)
  8009f0:	dd000417 	ldw	r20,16(sp)
  8009f4:	dcc00317 	ldw	r19,12(sp)
  8009f8:	dc800217 	ldw	r18,8(sp)
  8009fc:	dc400117 	ldw	r17,4(sp)
  800a00:	dc000017 	ldw	r16,0(sp)
  800a04:	dec00a04 	addi	sp,sp,40
  800a08:	f800283a 	ret
  result = ALT_CI_FP_ADD_0(result,-term);

  return result;
}
float factorial(int n) {
  float result = 1.0f;
  800a0c:	070fe034 	movhi	fp,16256
  800a10:	003fca06 	br	80093c <__alt_data_end+0xff80093c>

00800a14 <custom_cos_taylor>:
    term *= x * x;
  }

  return result;
}
float custom_cos_taylor(float x, int n) {
  800a14:	defff504 	addi	sp,sp,-44
  800a18:	dfc00a15 	stw	ra,40(sp)
  800a1c:	df000915 	stw	fp,36(sp)
  800a20:	ddc00815 	stw	r23,32(sp)
  800a24:	dd800715 	stw	r22,28(sp)
  800a28:	dd400615 	stw	r21,24(sp)
  800a2c:	dd000515 	stw	r20,20(sp)
  800a30:	dcc00415 	stw	r19,16(sp)
  800a34:	dc800315 	stw	r18,12(sp)
  800a38:	dc400215 	stw	r17,8(sp)
  800a3c:	dc000115 	stw	r16,4(sp)
  float result = 0.0f;
  float term = 1.0f;
  int i;

  for(i=0; i<n; i++) {
  800a40:	0140230e 	bge	zero,r5,800ad0 <custom_cos_taylor+0xbc>
  800a44:	04cfe034 	movhi	r19,16256
  800a48:	202b883a 	mov	r21,r4
  800a4c:	d9400015 	stw	r5,0(sp)
  800a50:	0025883a 	mov	r18,zero
  800a54:	0023883a 	mov	r17,zero
  800a58:	0029883a 	mov	r20,zero
  800a5c:	9809883a 	mov	r4,r19
}
float custom_factorial(int n) {
  float result = 1.0f;
  int i;

  for(i=2; i<=n; i++)
  800a60:	05c00044 	movi	r23,1
  float result = 0.0f;
  float term = 1.0f;
  int i;

  for(i=0; i<n; i++) {
    result = ALT_CI_FP_ADD_0(result, ALT_CI_FP_MULT_0(term , custom_powf(-1, i)) / custom_factorial(2*i));
  800a64:	9939c0f2 	custom	3,fp,r19,r4
}
float custom_factorial(int n) {
  float result = 1.0f;
  int i;

  for(i=2; i<=n; i++)
  800a68:	058fe034 	movhi	r22,16256
  800a6c:	bc80060e 	bge	r23,r18,800a88 <custom_cos_taylor+0x74>
  800a70:	04000084 	movi	r16,2
    result = ALT_CI_FP_MULT_0(result,i);
  800a74:	8009883a 	mov	r4,r16
  800a78:	080634c0 	call	80634c <__floatsisf>
  800a7c:	b0adc0f2 	custom	3,r22,r22,r2
}
float custom_factorial(int n) {
  float result = 1.0f;
  int i;

  for(i=2; i<=n; i++)
  800a80:	84000044 	addi	r16,r16,1
  800a84:	943ffb0e 	bge	r18,r16,800a74 <__alt_data_end+0xff800a74>
  float result = 0.0f;
  float term = 1.0f;
  int i;

  for(i=0; i<n; i++) {
    result = ALT_CI_FP_ADD_0(result, ALT_CI_FP_MULT_0(term , custom_powf(-1, i)) / custom_factorial(2*i));
  800a88:	b00b883a 	mov	r5,r22
  800a8c:	e009883a 	mov	r4,fp
  800a90:	08053c00 	call	8053c0 <__divsf3>
  800a94:	a0a9c072 	custom	1,r20,r20,r2
    term = ALT_CI_FP_MULT_0(term,ALT_CI_FP_MULT_0(x , x));
  800a98:	ad45c0f2 	custom	3,r2,r21,r21
  800a9c:	98a7c0f2 	custom	3,r19,r19,r2
float custom_cos_taylor(float x, int n) {
  float result = 0.0f;
  float term = 1.0f;
  int i;

  for(i=0; i<n; i++) {
  800aa0:	d8800017 	ldw	r2,0(sp)
  800aa4:	8c400044 	addi	r17,r17,1
  800aa8:	14400a26 	beq	r2,r17,800ad4 <custom_cos_taylor+0xc0>

  return (float)result;
}
float custom_powf(float x, int n){
	float result = 1.0f;
	for (int i=0; i<n; i++){
  800aac:	0440160e 	bge	zero,r17,800b08 <custom_cos_taylor+0xf4>
  800ab0:	0005883a 	mov	r2,zero
  800ab4:	010fe034 	movhi	r4,16256
		result=ALT_CI_FP_MULT_0(result, x);
  800ab8:	00efe034 	movhi	r3,49024
  800abc:	20c9c0f2 	custom	3,r4,r4,r3

  return (float)result;
}
float custom_powf(float x, int n){
	float result = 1.0f;
	for (int i=0; i<n; i++){
  800ac0:	10800044 	addi	r2,r2,1
  800ac4:	88bffc1e 	bne	r17,r2,800ab8 <__alt_data_end+0xff800ab8>
  800ac8:	94800084 	addi	r18,r18,2
  800acc:	003fe506 	br	800a64 <__alt_data_end+0xff800a64>
  }

  return result;
}
float custom_cos_taylor(float x, int n) {
  float result = 0.0f;
  800ad0:	0029883a 	mov	r20,zero
    result = ALT_CI_FP_ADD_0(result, ALT_CI_FP_MULT_0(term , custom_powf(-1, i)) / custom_factorial(2*i));
    term = ALT_CI_FP_MULT_0(term,ALT_CI_FP_MULT_0(x , x));
  }

  return result;
}
  800ad4:	a005883a 	mov	r2,r20
  800ad8:	dfc00a17 	ldw	ra,40(sp)
  800adc:	df000917 	ldw	fp,36(sp)
  800ae0:	ddc00817 	ldw	r23,32(sp)
  800ae4:	dd800717 	ldw	r22,28(sp)
  800ae8:	dd400617 	ldw	r21,24(sp)
  800aec:	dd000517 	ldw	r20,20(sp)
  800af0:	dcc00417 	ldw	r19,16(sp)
  800af4:	dc800317 	ldw	r18,12(sp)
  800af8:	dc400217 	ldw	r17,8(sp)
  800afc:	dc000117 	ldw	r16,4(sp)
  800b00:	dec00b04 	addi	sp,sp,44
  800b04:	f800283a 	ret

  return (float)result;
}
float custom_powf(float x, int n){
	float result = 1.0f;
	for (int i=0; i<n; i++){
  800b08:	010fe034 	movhi	r4,16256
  800b0c:	003fee06 	br	800ac8 <__alt_data_end+0xff800ac8>

00800b10 <generateVector>:
}



void generateVector(float x[N])
{
  800b10:	defffd04 	addi	sp,sp,-12
  800b14:	dc400115 	stw	r17,4(sp)
  800b18:	dc000015 	stw	r16,0(sp)
  800b1c:	dfc00215 	stw	ra,8(sp)
	int i;
	x[0] = 0;
  800b20:	20000015 	stw	zero,0(r4)
  800b24:	24000104 	addi	r16,r4,4
  800b28:	24403404 	addi	r17,r4,208
  800b2c:	0009883a 	mov	r4,zero
	for (i=1; i<N; i++)
	x[i] = x[i-1] + step;
  800b30:	01502834 	movhi	r5,16544
  800b34:	0804ef80 	call	804ef8 <__addsf3>
  800b38:	80800015 	stw	r2,0(r16)
  800b3c:	84000104 	addi	r16,r16,4
  800b40:	1009883a 	mov	r4,r2

void generateVector(float x[N])
{
	int i;
	x[0] = 0;
	for (i=1; i<N; i++)
  800b44:	8c3ffa1e 	bne	r17,r16,800b30 <__alt_data_end+0xff800b30>
	x[i] = x[i-1] + step;
}
  800b48:	dfc00217 	ldw	ra,8(sp)
  800b4c:	dc400117 	ldw	r17,4(sp)
  800b50:	dc000017 	ldw	r16,0(sp)
  800b54:	dec00304 	addi	sp,sp,12
  800b58:	f800283a 	ret

00800b5c <sumVector>:
float sumVector(float x[], int M)
{
  800b5c:	defff804 	addi	sp,sp,-32
  800b60:	dfc00715 	stw	ra,28(sp)
  800b64:	dd800615 	stw	r22,24(sp)
  800b68:	dd400515 	stw	r21,20(sp)
  800b6c:	dd000415 	stw	r20,16(sp)
  800b70:	dcc00315 	stw	r19,12(sp)
  800b74:	dc800215 	stw	r18,8(sp)
  800b78:	dc400115 	stw	r17,4(sp)
  800b7c:	dc000015 	stw	r16,0(sp)
	float sum=0;

	for (int i=0;i<M;i++){
  800b80:	01407f0e 	bge	zero,r5,800d80 <sumVector+0x224>
  800b84:	294b883a 	add	r5,r5,r5
  800b88:	294b883a 	add	r5,r5,r5
  800b8c:	2025883a 	mov	r18,r4
  800b90:	2169883a 	add	r20,r4,r5
  800b94:	002b883a 	mov	r21,zero
		sum+= 0.5*x[i]+x[i]*x[i]*(cos_horner((x[i]-128)/128));
  800b98:	94400017 	ldw	r17,0(r18)
  800b9c:	0150c034 	movhi	r5,17152
  800ba0:	94800104 	addi	r18,r18,4
  800ba4:	8809883a 	mov	r4,r17
  800ba8:	0805df80 	call	805df8 <__subsf3>
  800bac:	014f0034 	movhi	r5,15360
  800bb0:	1009883a 	mov	r4,r2
  800bb4:	08059fc0 	call	8059fc <__mulsf3>
  float term;

  term = 1.0f;
  result = term;

  term *= x*x/2.0f;
  800bb8:	100b883a 	mov	r5,r2
  800bbc:	1009883a 	mov	r4,r2
  800bc0:	08059fc0 	call	8059fc <__mulsf3>
  800bc4:	1009883a 	mov	r4,r2
  800bc8:	014fc034 	movhi	r5,16128
  800bcc:	1021883a 	mov	r16,r2
  800bd0:	08059fc0 	call	8059fc <__mulsf3>
  result += -term;
  800bd4:	100b883a 	mov	r5,r2
  800bd8:	010fe034 	movhi	r4,16256
  float term;

  term = 1.0f;
  result = term;

  term *= x*x/2.0f;
  800bdc:	1027883a 	mov	r19,r2
  result += -term;
  800be0:	0805df80 	call	805df8 <__subsf3>

  term *= x*x/3.0f*4.0f;
  800be4:	8009883a 	mov	r4,r16
  800be8:	01501034 	movhi	r5,16448

  term = 1.0f;
  result = term;

  term *= x*x/2.0f;
  result += -term;
  800bec:	102d883a 	mov	r22,r2

  term *= x*x/3.0f*4.0f;
  800bf0:	08053c00 	call	8053c0 <__divsf3>
  800bf4:	01502034 	movhi	r5,16512
  800bf8:	1009883a 	mov	r4,r2
  800bfc:	08059fc0 	call	8059fc <__mulsf3>
  800c00:	980b883a 	mov	r5,r19
  800c04:	1009883a 	mov	r4,r2
  800c08:	08059fc0 	call	8059fc <__mulsf3>
  result += term;
  800c0c:	b009883a 	mov	r4,r22
  800c10:	100b883a 	mov	r5,r2
  result = term;

  term *= x*x/2.0f;
  result += -term;

  term *= x*x/3.0f*4.0f;
  800c14:	1027883a 	mov	r19,r2
  result += term;
  800c18:	0804ef80 	call	804ef8 <__addsf3>

  term *= x*x/5.0f*6.0f;
  800c1c:	8009883a 	mov	r4,r16
  800c20:	01502834 	movhi	r5,16544

  term *= x*x/2.0f;
  result += -term;

  term *= x*x/3.0f*4.0f;
  result += term;
  800c24:	102d883a 	mov	r22,r2

  term *= x*x/5.0f*6.0f;
  800c28:	08053c00 	call	8053c0 <__divsf3>
  800c2c:	01503034 	movhi	r5,16576
  800c30:	1009883a 	mov	r4,r2
  800c34:	08059fc0 	call	8059fc <__mulsf3>
  800c38:	980b883a 	mov	r5,r19
  800c3c:	1009883a 	mov	r4,r2
  800c40:	08059fc0 	call	8059fc <__mulsf3>
  result += -term;
  800c44:	b009883a 	mov	r4,r22
  800c48:	100b883a 	mov	r5,r2
  result += -term;

  term *= x*x/3.0f*4.0f;
  result += term;

  term *= x*x/5.0f*6.0f;
  800c4c:	1027883a 	mov	r19,r2
  result += -term;
  800c50:	0805df80 	call	805df8 <__subsf3>

  term *= x*x/7.0f*8.0f;
  800c54:	8009883a 	mov	r4,r16
  800c58:	01503834 	movhi	r5,16608

  term *= x*x/3.0f*4.0f;
  result += term;

  term *= x*x/5.0f*6.0f;
  result += -term;
  800c5c:	102d883a 	mov	r22,r2

  term *= x*x/7.0f*8.0f;
  800c60:	08053c00 	call	8053c0 <__divsf3>
  800c64:	01504034 	movhi	r5,16640
  800c68:	1009883a 	mov	r4,r2
  800c6c:	08059fc0 	call	8059fc <__mulsf3>
  800c70:	980b883a 	mov	r5,r19
  800c74:	1009883a 	mov	r4,r2
  800c78:	08059fc0 	call	8059fc <__mulsf3>
  result += term;
  800c7c:	b009883a 	mov	r4,r22
  800c80:	100b883a 	mov	r5,r2
  result += term;

  term *= x*x/5.0f*6.0f;
  result += -term;

  term *= x*x/7.0f*8.0f;
  800c84:	1027883a 	mov	r19,r2
  result += term;
  800c88:	0804ef80 	call	804ef8 <__addsf3>
float sumVector(float x[], int M)
{
	float sum=0;

	for (int i=0;i<M;i++){
		sum+= 0.5*x[i]+x[i]*x[i]*(cos_horner((x[i]-128)/128));
  800c8c:	8009883a 	mov	r4,r16
  800c90:	01504434 	movhi	r5,16656

  term *= x*x/5.0f*6.0f;
  result += -term;

  term *= x*x/7.0f*8.0f;
  result += term;
  800c94:	102d883a 	mov	r22,r2
float sumVector(float x[], int M)
{
	float sum=0;

	for (int i=0;i<M;i++){
		sum+= 0.5*x[i]+x[i]*x[i]*(cos_horner((x[i]-128)/128));
  800c98:	08053c00 	call	8053c0 <__divsf3>
  800c9c:	01504834 	movhi	r5,16672
  800ca0:	1009883a 	mov	r4,r2
  800ca4:	08059fc0 	call	8059fc <__mulsf3>
  800ca8:	980b883a 	mov	r5,r19
  800cac:	1009883a 	mov	r4,r2
  800cb0:	08059fc0 	call	8059fc <__mulsf3>
  800cb4:	100b883a 	mov	r5,r2
  800cb8:	b009883a 	mov	r4,r22
  800cbc:	0805df80 	call	805df8 <__subsf3>
  800cc0:	880b883a 	mov	r5,r17
  800cc4:	8809883a 	mov	r4,r17
  800cc8:	1021883a 	mov	r16,r2
  800ccc:	08059fc0 	call	8059fc <__mulsf3>
  800cd0:	100b883a 	mov	r5,r2
  800cd4:	8009883a 	mov	r4,r16
  800cd8:	08059fc0 	call	8059fc <__mulsf3>
  800cdc:	1009883a 	mov	r4,r2
  800ce0:	08088d80 	call	8088d8 <__extendsfdf2>
  800ce4:	8809883a 	mov	r4,r17
  800ce8:	1821883a 	mov	r16,r3
  800cec:	1027883a 	mov	r19,r2
  800cf0:	08088d80 	call	8088d8 <__extendsfdf2>
  800cf4:	000d883a 	mov	r6,zero
  800cf8:	01cff834 	movhi	r7,16352
  800cfc:	1009883a 	mov	r4,r2
  800d00:	180b883a 	mov	r5,r3
  800d04:	08077680 	call	807768 <__muldf3>
  800d08:	800b883a 	mov	r5,r16
  800d0c:	100d883a 	mov	r6,r2
  800d10:	180f883a 	mov	r7,r3
  800d14:	9809883a 	mov	r4,r19
  800d18:	08064700 	call	806470 <__adddf3>
  800d1c:	a809883a 	mov	r4,r21
  800d20:	1023883a 	mov	r17,r2
  800d24:	1821883a 	mov	r16,r3
  800d28:	08088d80 	call	8088d8 <__extendsfdf2>
  800d2c:	100d883a 	mov	r6,r2
  800d30:	180f883a 	mov	r7,r3
  800d34:	8809883a 	mov	r4,r17
  800d38:	800b883a 	mov	r5,r16
  800d3c:	08064700 	call	806470 <__adddf3>
  800d40:	1009883a 	mov	r4,r2
  800d44:	180b883a 	mov	r5,r3
  800d48:	08089e80 	call	8089e8 <__truncdfsf2>
  800d4c:	102b883a 	mov	r21,r2
}
float sumVector(float x[], int M)
{
	float sum=0;

	for (int i=0;i<M;i++){
  800d50:	a4bf911e 	bne	r20,r18,800b98 <__alt_data_end+0xff800b98>
		sum+= 0.5*x[i]+x[i]*x[i]*(cos_horner((x[i]-128)/128));
	}
//		printf("the current sum is %f, current xi is %f \n", sum,x[i]);}
	return sum;
// YOUR CODE GOES HERE
}
  800d54:	a805883a 	mov	r2,r21
  800d58:	dfc00717 	ldw	ra,28(sp)
  800d5c:	dd800617 	ldw	r22,24(sp)
  800d60:	dd400517 	ldw	r21,20(sp)
  800d64:	dd000417 	ldw	r20,16(sp)
  800d68:	dcc00317 	ldw	r19,12(sp)
  800d6c:	dc800217 	ldw	r18,8(sp)
  800d70:	dc400117 	ldw	r17,4(sp)
  800d74:	dc000017 	ldw	r16,0(sp)
  800d78:	dec00804 	addi	sp,sp,32
  800d7c:	f800283a 	ret
	for (i=1; i<N; i++)
	x[i] = x[i-1] + step;
}
float sumVector(float x[], int M)
{
	float sum=0;
  800d80:	002b883a 	mov	r21,zero
  800d84:	003ff306 	br	800d54 <__alt_data_end+0xff800d54>

00800d88 <CustomSumVector>:
//		printf("the current sum is %f, current xi is %f \n", sum,x[i]);}
	return sum;
// YOUR CODE GOES HERE
}
float CustomSumVector(float x[], int M)
{
  800d88:	defff904 	addi	sp,sp,-28
  800d8c:	dfc00615 	stw	ra,24(sp)
  800d90:	dd400515 	stw	r21,20(sp)
  800d94:	dd000415 	stw	r20,16(sp)
  800d98:	dcc00315 	stw	r19,12(sp)
  800d9c:	dc800215 	stw	r18,8(sp)
  800da0:	dc400115 	stw	r17,4(sp)
  800da4:	dc000015 	stw	r16,0(sp)
	float sum=0;
	float ff=1.0/128;
//	printf("ff= %f", ff);
	for (int i=0;i<M;i++){
  800da8:	0140230e 	bge	zero,r5,800e38 <CustomSumVector+0xb0>
  800dac:	2825883a 	mov	r18,r5
  800db0:	2027883a 	mov	r19,r4
  800db4:	0029883a 	mov	r20,zero
  800db8:	002b883a 	mov	r21,zero
//		float c=ALT_CI_FP_MULT_0(x[i],b );
//		float d=ALT_CI_FP_MULT_0(x[i],c);
//		sum+= 0.5*x[i]+x[i]*x[i]*(cos((x[i]-128)/128));
		//ALT_CI_FP_MULT_0(x[i], ALT_CI_FP_MULT_0(x[i], cos(ALT_CI_FP_MULT_0(ALT_CI_FP_SUB_0(x[i], 128),1/128)))) cos(ALT_CI_FP_MULT_0(ALT_CI_FP_SUB_0(x[i], 128) ,1/128)) ))
//		sum= ALT_CI_FP_ADD_0(sum,  ALT_CI_FP_ADD_0(ALT_CI_FP_MULT_0(0.5,x[i]),ALT_CI_FP_MULT_0(x[i],ALT_CI_FP_MULT_0(x[i],custom_cos_taylor(ALT_CI_FP_MULT_0((ALT_CI_FP_SUB_0(x[i], 128)),1/128),3) )) ));
		sum= ALT_CI_FP_ADD_0(sum,  ALT_CI_FP_ADD_0(ALT_CI_FP_MULT_0(0.5,x[i]),ALT_CI_FP_MULT_0(x[i],ALT_CI_FP_MULT_0(x[i],cos(ALT_CI_FP_MULT_0((ALT_CI_FP_SUB_0(x[i], 128)),ff)) )) ));
  800dbc:	9c000017 	ldw	r16,0(r19)
  800dc0:	044fc034 	movhi	r17,16128
  800dc4:	8c23c0f2 	custom	3,r17,r17,r16
  800dc8:	0090c034 	movhi	r2,17152
  800dcc:	8085c0b2 	custom	2,r2,r16,r2
  800dd0:	010f0034 	movhi	r4,15360
  800dd4:	1109c0f2 	custom	3,r4,r2,r4
  800dd8:	08088d80 	call	8088d8 <__extendsfdf2>
  800ddc:	1009883a 	mov	r4,r2
  800de0:	180b883a 	mov	r5,r3
  800de4:	08017400 	call	801740 <cos>
  800de8:	1009883a 	mov	r4,r2
  800dec:	180b883a 	mov	r5,r3
  800df0:	08089e80 	call	8089e8 <__truncdfsf2>
  800df4:	8085c0f2 	custom	3,r2,r16,r2
  800df8:	80a1c0f2 	custom	3,r16,r16,r2
  800dfc:	8c21c072 	custom	1,r16,r17,r16
  800e00:	ac2bc072 	custom	1,r21,r21,r16
float CustomSumVector(float x[], int M)
{
	float sum=0;
	float ff=1.0/128;
//	printf("ff= %f", ff);
	for (int i=0;i<M;i++){
  800e04:	a5000044 	addi	r20,r20,1
  800e08:	9cc00104 	addi	r19,r19,4
  800e0c:	953feb1e 	bne	r18,r20,800dbc <__alt_data_end+0xff800dbc>

	}
//		printf("the current sum is %f, current xi is %f \n", sum,x[i]);}
	return sum;
// YOUR CODE GOES HERE
}
  800e10:	a805883a 	mov	r2,r21
  800e14:	dfc00617 	ldw	ra,24(sp)
  800e18:	dd400517 	ldw	r21,20(sp)
  800e1c:	dd000417 	ldw	r20,16(sp)
  800e20:	dcc00317 	ldw	r19,12(sp)
  800e24:	dc800217 	ldw	r18,8(sp)
  800e28:	dc400117 	ldw	r17,4(sp)
  800e2c:	dc000017 	ldw	r16,0(sp)
  800e30:	dec00704 	addi	sp,sp,28
  800e34:	f800283a 	ret
	return sum;
// YOUR CODE GOES HERE
}
float CustomSumVector(float x[], int M)
{
	float sum=0;
  800e38:	002b883a 	mov	r21,zero
  800e3c:	003ff406 	br	800e10 <__alt_data_end+0xff800e10>

00800e40 <TaylorCustomSumVector>:
//		printf("the current sum is %f, current xi is %f \n", sum,x[i]);}
	return sum;
// YOUR CODE GOES HERE
}
float TaylorCustomSumVector(float x[], int M)
{
  800e40:	defff604 	addi	sp,sp,-40
  800e44:	dc400115 	stw	r17,4(sp)
  800e48:	dfc00915 	stw	ra,36(sp)
  800e4c:	df000815 	stw	fp,32(sp)
  800e50:	ddc00715 	stw	r23,28(sp)
  800e54:	dd800615 	stw	r22,24(sp)
  800e58:	dd400515 	stw	r21,20(sp)
  800e5c:	dd000415 	stw	r20,16(sp)
  800e60:	dcc00315 	stw	r19,12(sp)
  800e64:	dc800215 	stw	r18,8(sp)
  800e68:	dc000015 	stw	r16,0(sp)
	float sum=0;
	float ff=1.0/128;
	int i=0;
//	printf("ff= %f", ff);
	for (;i<M-4;i+=4){
  800e6c:	2c7fff04 	addi	r17,r5,-4
  800e70:	0440d80e 	bge	zero,r17,8011d4 <TaylorCustomSumVector+0x394>
  800e74:	2021883a 	mov	r16,r4
  800e78:	27c00104 	addi	ra,r4,4
  800e7c:	23c00204 	addi	r15,r4,8
  800e80:	23800304 	addi	r14,r4,12
  800e84:	001b883a 	mov	r13,zero
  800e88:	0015883a 	mov	r10,zero
//		float c=ALT_CI_FP_MULT_0(x[i],b );
//		float d=ALT_CI_FP_MULT_0(x[i],c);
//		sum+= 0.5*x[i]+x[i]*x[i]*(cos((x[i]-128)/128));
		//ALT_CI_FP_MULT_0(x[i], ALT_CI_FP_MULT_0(x[i], cos(ALT_CI_FP_MULT_0(ALT_CI_FP_SUB_0(x[i], 128),1/128)))) cos(ALT_CI_FP_MULT_0(ALT_CI_FP_SUB_0(x[i], 128) ,1/128)) ))
//		sum= ALT_CI_FP_ADD_0(sum,  ALT_CI_FP_ADD_0(ALT_CI_FP_MULT_0(0.5,x[i]),ALT_CI_FP_MULT_0(x[i],ALT_CI_FP_MULT_0(x[i],custom_cos_taylor(ALT_CI_FP_MULT_0((ALT_CI_FP_SUB_0(x[i], 128)),ff),3) )) ));
		sum= ALT_CI_FP_ADD_0(sum,  ALT_CI_FP_ADD_0(ALT_CI_FP_MULT_0(0.5,x[i]),ALT_CI_FP_MULT_0(x[i],ALT_CI_FP_MULT_0(x[i],custom_cos_horner(ALT_CI_FP_MULT_0((ALT_CI_FP_SUB_0(x[i], 128)),ff)) )) ));
  800e8c:	80800017 	ldw	r2,0(r16)
  800e90:	00cfc034 	movhi	r3,16128
  800e94:	1899c0f2 	custom	3,r12,r3,r2
  800e98:	0550c034 	movhi	r21,17152
  800e9c:	154fc0b2 	custom	2,r7,r2,r21
  800ea0:	058f0034 	movhi	r22,15360
  800ea4:	3d8fc0f2 	custom	3,r7,r7,r22
  float term;

  term = 1.0f;
  result = term;

  term = ALT_CI_FP_MULT_0(term, ALT_CI_FP_MULT_0(x, ALT_CI_FP_MULT_0(x,1/2.0f)));
  800ea8:	38e5c0f2 	custom	3,r18,r7,r3
  800eac:	3ca5c0f2 	custom	3,r18,r7,r18
  800eb0:	024fe034 	movhi	r9,16256
  800eb4:	4ca7c0f2 	custom	3,r19,r9,r18
  result = ALT_CI_FP_ADD_0(result,-term);
  800eb8:	9d20003c 	xorhi	r20,r19,32768
  800ebc:	4d29c072 	custom	1,r20,r9,r20

  term = ALT_CI_FP_MULT_0(term,ALT_CI_FP_MULT_0(x,ALT_CI_FP_MULT_0(x, 1.0/(12.0f))));
  800ec0:	018f6af4 	movhi	r6,15787
  800ec4:	31aaaac4 	addi	r6,r6,-21845
  800ec8:	3997c0f2 	custom	3,r11,r7,r6
  800ecc:	3ad7c0f2 	custom	3,r11,r7,r11
  800ed0:	9ae5c0f2 	custom	3,r18,r19,r11
  result = ALT_CI_FP_ADD_0(result,term);
  800ed4:	a4a7c072 	custom	1,r19,r20,r18

  term = ALT_CI_FP_MULT_0(term,ALT_CI_FP_MULT_0(x,ALT_CI_FP_MULT_0(x, 1.0/(30.0f))));
  800ed8:	050f4274 	movhi	r20,15625
  800edc:	a5222244 	addi	r20,r20,-30583
  800ee0:	3d11c0f2 	custom	3,r8,r7,r20
  800ee4:	3a11c0f2 	custom	3,r8,r7,r8
  800ee8:	9217c0f2 	custom	3,r11,r18,r8
  result = ALT_CI_FP_ADD_0(result,-term);
  800eec:	5ca0003c 	xorhi	r18,r11,32768
  800ef0:	9ca5c072 	custom	1,r18,r19,r18

  term = ALT_CI_FP_MULT_0(term,ALT_CI_FP_MULT_0(x,ALT_CI_FP_MULT_0(x, 1.0/(56.0f))));
  800ef4:	04cf24b4 	movhi	r19,15506
  800ef8:	9cd24944 	addi	r19,r19,18725
  800efc:	3cd1c0f2 	custom	3,r8,r7,r19
  800f00:	3a11c0f2 	custom	3,r8,r7,r8
  800f04:	5a11c0f2 	custom	3,r8,r11,r8
  result = ALT_CI_FP_ADD_0(result,term);
  800f08:	9217c072 	custom	1,r11,r18,r8

  term = ALT_CI_FP_MULT_0(term,ALT_CI_FP_MULT_0(x,ALT_CI_FP_MULT_0(x, 1.0/(90.0f))));
  800f0c:	048f0db4 	movhi	r18,15414
  800f10:	9482d844 	addi	r18,r18,2913
  800f14:	3cafc0f2 	custom	3,r23,r7,r18
  800f18:	3dcfc0f2 	custom	3,r7,r7,r23
  800f1c:	41d1c0f2 	custom	3,r8,r8,r7
  result = ALT_CI_FP_ADD_0(result,-term);
  800f20:	4220003c 	xorhi	r8,r8,32768
  800f24:	5a11c072 	custom	1,r8,r11,r8
//		float c=ALT_CI_FP_MULT_0(x[i],b );
//		float d=ALT_CI_FP_MULT_0(x[i],c);
//		sum+= 0.5*x[i]+x[i]*x[i]*(cos((x[i]-128)/128));
		//ALT_CI_FP_MULT_0(x[i], ALT_CI_FP_MULT_0(x[i], cos(ALT_CI_FP_MULT_0(ALT_CI_FP_SUB_0(x[i], 128),1/128)))) cos(ALT_CI_FP_MULT_0(ALT_CI_FP_SUB_0(x[i], 128) ,1/128)) ))
//		sum= ALT_CI_FP_ADD_0(sum,  ALT_CI_FP_ADD_0(ALT_CI_FP_MULT_0(0.5,x[i]),ALT_CI_FP_MULT_0(x[i],ALT_CI_FP_MULT_0(x[i],custom_cos_taylor(ALT_CI_FP_MULT_0((ALT_CI_FP_SUB_0(x[i], 128)),ff),3) )) ));
		sum= ALT_CI_FP_ADD_0(sum,  ALT_CI_FP_ADD_0(ALT_CI_FP_MULT_0(0.5,x[i]),ALT_CI_FP_MULT_0(x[i],ALT_CI_FP_MULT_0(x[i],custom_cos_horner(ALT_CI_FP_MULT_0((ALT_CI_FP_SUB_0(x[i], 128)),ff)) )) ));
  800f28:	1211c0f2 	custom	3,r8,r2,r8
  800f2c:	1205c0f2 	custom	3,r2,r2,r8
  800f30:	6099c072 	custom	1,r12,r12,r2
  800f34:	5315c072 	custom	1,r10,r10,r12
		sum= ALT_CI_FP_ADD_0(sum,  ALT_CI_FP_ADD_0(ALT_CI_FP_MULT_0(0.5,x[i+1]),ALT_CI_FP_MULT_0(x[i+1],ALT_CI_FP_MULT_0(x[i+1],custom_cos_horner(ALT_CI_FP_MULT_0((ALT_CI_FP_SUB_0(x[i+1], 128)),ff)) )) ));
  800f38:	ff000017 	ldw	fp,0(ra)
  800f3c:	1f05c0f2 	custom	3,r2,r3,fp
  800f40:	e54fc0b2 	custom	2,r7,fp,r21
  800f44:	3d91c0f2 	custom	3,r8,r7,r22
  float term;

  term = 1.0f;
  result = term;

  term = ALT_CI_FP_MULT_0(term, ALT_CI_FP_MULT_0(x, ALT_CI_FP_MULT_0(x,1/2.0f)));
  800f48:	40d9c0f2 	custom	3,r12,r8,r3
  800f4c:	4319c0f2 	custom	3,r12,r8,r12
  800f50:	4b19c0f2 	custom	3,r12,r9,r12
  result = ALT_CI_FP_ADD_0(result,-term);
  800f54:	65e0003c 	xorhi	r23,r12,32768
  800f58:	4defc072 	custom	1,r23,r9,r23

  term = ALT_CI_FP_MULT_0(term,ALT_CI_FP_MULT_0(x,ALT_CI_FP_MULT_0(x, 1.0/(12.0f))));
  800f5c:	4197c0f2 	custom	3,r11,r8,r6
  800f60:	42d7c0f2 	custom	3,r11,r8,r11
  800f64:	62d9c0f2 	custom	3,r12,r12,r11
  result = ALT_CI_FP_ADD_0(result,term);
  800f68:	bb2fc072 	custom	1,r23,r23,r12

  term = ALT_CI_FP_MULT_0(term,ALT_CI_FP_MULT_0(x,ALT_CI_FP_MULT_0(x, 1.0/(30.0f))));
  800f6c:	4517c0f2 	custom	3,r11,r8,r20
  800f70:	42d7c0f2 	custom	3,r11,r8,r11
  800f74:	62d7c0f2 	custom	3,r11,r12,r11
  result = ALT_CI_FP_ADD_0(result,-term);
  800f78:	59e0003c 	xorhi	r7,r11,32768
  800f7c:	b9efc072 	custom	1,r23,r23,r7

  term = ALT_CI_FP_MULT_0(term,ALT_CI_FP_MULT_0(x,ALT_CI_FP_MULT_0(x, 1.0/(56.0f))));
  800f80:	44cfc0f2 	custom	3,r7,r8,r19
  800f84:	41cfc0f2 	custom	3,r7,r8,r7
  800f88:	59d7c0f2 	custom	3,r11,r11,r7
  result = ALT_CI_FP_ADD_0(result,term);
  800f8c:	baefc072 	custom	1,r23,r23,r11

  term = ALT_CI_FP_MULT_0(term,ALT_CI_FP_MULT_0(x,ALT_CI_FP_MULT_0(x, 1.0/(90.0f))));
  800f90:	448fc0f2 	custom	3,r7,r8,r18
  800f94:	41cfc0f2 	custom	3,r7,r8,r7
  800f98:	59cfc0f2 	custom	3,r7,r11,r7
  result = ALT_CI_FP_ADD_0(result,-term);
  800f9c:	39e0003c 	xorhi	r7,r7,32768
  800fa0:	b9cfc072 	custom	1,r7,r23,r7
//		float d=ALT_CI_FP_MULT_0(x[i],c);
//		sum+= 0.5*x[i]+x[i]*x[i]*(cos((x[i]-128)/128));
		//ALT_CI_FP_MULT_0(x[i], ALT_CI_FP_MULT_0(x[i], cos(ALT_CI_FP_MULT_0(ALT_CI_FP_SUB_0(x[i], 128),1/128)))) cos(ALT_CI_FP_MULT_0(ALT_CI_FP_SUB_0(x[i], 128) ,1/128)) ))
//		sum= ALT_CI_FP_ADD_0(sum,  ALT_CI_FP_ADD_0(ALT_CI_FP_MULT_0(0.5,x[i]),ALT_CI_FP_MULT_0(x[i],ALT_CI_FP_MULT_0(x[i],custom_cos_taylor(ALT_CI_FP_MULT_0((ALT_CI_FP_SUB_0(x[i], 128)),ff),3) )) ));
		sum= ALT_CI_FP_ADD_0(sum,  ALT_CI_FP_ADD_0(ALT_CI_FP_MULT_0(0.5,x[i]),ALT_CI_FP_MULT_0(x[i],ALT_CI_FP_MULT_0(x[i],custom_cos_horner(ALT_CI_FP_MULT_0((ALT_CI_FP_SUB_0(x[i], 128)),ff)) )) ));
		sum= ALT_CI_FP_ADD_0(sum,  ALT_CI_FP_ADD_0(ALT_CI_FP_MULT_0(0.5,x[i+1]),ALT_CI_FP_MULT_0(x[i+1],ALT_CI_FP_MULT_0(x[i+1],custom_cos_horner(ALT_CI_FP_MULT_0((ALT_CI_FP_SUB_0(x[i+1], 128)),ff)) )) ));
  800fa4:	e1cfc0f2 	custom	3,r7,fp,r7
  800fa8:	e1f9c0f2 	custom	3,fp,fp,r7
  800fac:	1739c072 	custom	1,fp,r2,fp
  800fb0:	5719c072 	custom	1,r12,r10,fp
		sum= ALT_CI_FP_ADD_0(sum,  ALT_CI_FP_ADD_0(ALT_CI_FP_MULT_0(0.5,x[i+2]),ALT_CI_FP_MULT_0(x[i+2],ALT_CI_FP_MULT_0(x[i+2],custom_cos_horner(ALT_CI_FP_MULT_0((ALT_CI_FP_SUB_0(x[i+2], 128)),ff)) )) ));
  800fb4:	7dc00017 	ldw	r23,0(r15)
  800fb8:	1dc5c0f2 	custom	3,r2,r3,r23
  800fbc:	bd4fc0b2 	custom	2,r7,r23,r21
  800fc0:	3d91c0f2 	custom	3,r8,r7,r22
  float term;

  term = 1.0f;
  result = term;

  term = ALT_CI_FP_MULT_0(term, ALT_CI_FP_MULT_0(x, ALT_CI_FP_MULT_0(x,1/2.0f)));
  800fc4:	40d5c0f2 	custom	3,r10,r8,r3
  800fc8:	4295c0f2 	custom	3,r10,r8,r10
  800fcc:	4a8fc0f2 	custom	3,r7,r9,r10
  result = ALT_CI_FP_ADD_0(result,-term);
  800fd0:	3ae0003c 	xorhi	r11,r7,32768
  800fd4:	4ad7c072 	custom	1,r11,r9,r11

  term = ALT_CI_FP_MULT_0(term,ALT_CI_FP_MULT_0(x,ALT_CI_FP_MULT_0(x, 1.0/(12.0f))));
  800fd8:	4195c0f2 	custom	3,r10,r8,r6
  800fdc:	4295c0f2 	custom	3,r10,r8,r10
  800fe0:	3a8fc0f2 	custom	3,r7,r7,r10
  result = ALT_CI_FP_ADD_0(result,term);
  800fe4:	59d7c072 	custom	1,r11,r11,r7

  term = ALT_CI_FP_MULT_0(term,ALT_CI_FP_MULT_0(x,ALT_CI_FP_MULT_0(x, 1.0/(30.0f))));
  800fe8:	4515c0f2 	custom	3,r10,r8,r20
  800fec:	4295c0f2 	custom	3,r10,r8,r10
  800ff0:	3a95c0f2 	custom	3,r10,r7,r10
  result = ALT_CI_FP_ADD_0(result,-term);
  800ff4:	51e0003c 	xorhi	r7,r10,32768
  800ff8:	59d7c072 	custom	1,r11,r11,r7

  term = ALT_CI_FP_MULT_0(term,ALT_CI_FP_MULT_0(x,ALT_CI_FP_MULT_0(x, 1.0/(56.0f))));
  800ffc:	44cfc0f2 	custom	3,r7,r8,r19
  801000:	41cfc0f2 	custom	3,r7,r8,r7
  801004:	51d5c0f2 	custom	3,r10,r10,r7
  result = ALT_CI_FP_ADD_0(result,term);
  801008:	5a97c072 	custom	1,r11,r11,r10

  term = ALT_CI_FP_MULT_0(term,ALT_CI_FP_MULT_0(x,ALT_CI_FP_MULT_0(x, 1.0/(90.0f))));
  80100c:	448fc0f2 	custom	3,r7,r8,r18
  801010:	41cfc0f2 	custom	3,r7,r8,r7
  801014:	51cfc0f2 	custom	3,r7,r10,r7
  result = ALT_CI_FP_ADD_0(result,-term);
  801018:	39e0003c 	xorhi	r7,r7,32768
  80101c:	59cfc072 	custom	1,r7,r11,r7
//		sum+= 0.5*x[i]+x[i]*x[i]*(cos((x[i]-128)/128));
		//ALT_CI_FP_MULT_0(x[i], ALT_CI_FP_MULT_0(x[i], cos(ALT_CI_FP_MULT_0(ALT_CI_FP_SUB_0(x[i], 128),1/128)))) cos(ALT_CI_FP_MULT_0(ALT_CI_FP_SUB_0(x[i], 128) ,1/128)) ))
//		sum= ALT_CI_FP_ADD_0(sum,  ALT_CI_FP_ADD_0(ALT_CI_FP_MULT_0(0.5,x[i]),ALT_CI_FP_MULT_0(x[i],ALT_CI_FP_MULT_0(x[i],custom_cos_taylor(ALT_CI_FP_MULT_0((ALT_CI_FP_SUB_0(x[i], 128)),ff),3) )) ));
		sum= ALT_CI_FP_ADD_0(sum,  ALT_CI_FP_ADD_0(ALT_CI_FP_MULT_0(0.5,x[i]),ALT_CI_FP_MULT_0(x[i],ALT_CI_FP_MULT_0(x[i],custom_cos_horner(ALT_CI_FP_MULT_0((ALT_CI_FP_SUB_0(x[i], 128)),ff)) )) ));
		sum= ALT_CI_FP_ADD_0(sum,  ALT_CI_FP_ADD_0(ALT_CI_FP_MULT_0(0.5,x[i+1]),ALT_CI_FP_MULT_0(x[i+1],ALT_CI_FP_MULT_0(x[i+1],custom_cos_horner(ALT_CI_FP_MULT_0((ALT_CI_FP_SUB_0(x[i+1], 128)),ff)) )) ));
		sum= ALT_CI_FP_ADD_0(sum,  ALT_CI_FP_ADD_0(ALT_CI_FP_MULT_0(0.5,x[i+2]),ALT_CI_FP_MULT_0(x[i+2],ALT_CI_FP_MULT_0(x[i+2],custom_cos_horner(ALT_CI_FP_MULT_0((ALT_CI_FP_SUB_0(x[i+2], 128)),ff)) )) ));
  801020:	b9cfc0f2 	custom	3,r7,r23,r7
  801024:	b9efc0f2 	custom	3,r23,r23,r7
  801028:	15efc072 	custom	1,r23,r2,r23
  80102c:	65d5c072 	custom	1,r10,r12,r23
		sum= ALT_CI_FP_ADD_0(sum,  ALT_CI_FP_ADD_0(ALT_CI_FP_MULT_0(0.5,x[i+3]),ALT_CI_FP_MULT_0(x[i+3],ALT_CI_FP_MULT_0(x[i+3],custom_cos_horner(ALT_CI_FP_MULT_0((ALT_CI_FP_SUB_0(x[i+3], 128)),ff)) )) ));
  801030:	72c00017 	ldw	r11,0(r14)
  801034:	1ad9c0f2 	custom	3,r12,r3,r11
  801038:	5d45c0b2 	custom	2,r2,r11,r21
  80103c:	1585c0f2 	custom	3,r2,r2,r22
  float term;

  term = 1.0f;
  result = term;

  term = ALT_CI_FP_MULT_0(term, ALT_CI_FP_MULT_0(x, ALT_CI_FP_MULT_0(x,1/2.0f)));
  801040:	10cfc0f2 	custom	3,r7,r2,r3
  801044:	11cfc0f2 	custom	3,r7,r2,r7
  801048:	49d1c0f2 	custom	3,r8,r9,r7
  result = ALT_CI_FP_ADD_0(result,-term);
  80104c:	40e0003c 	xorhi	r3,r8,32768
  801050:	48d3c072 	custom	1,r9,r9,r3

  term = ALT_CI_FP_MULT_0(term,ALT_CI_FP_MULT_0(x,ALT_CI_FP_MULT_0(x, 1.0/(12.0f))));
  801054:	118dc0f2 	custom	3,r6,r2,r6
  801058:	118dc0f2 	custom	3,r6,r2,r6
  80105c:	418fc0f2 	custom	3,r7,r8,r6
  result = ALT_CI_FP_ADD_0(result,term);
  801060:	49d3c072 	custom	1,r9,r9,r7

  term = ALT_CI_FP_MULT_0(term,ALT_CI_FP_MULT_0(x,ALT_CI_FP_MULT_0(x, 1.0/(30.0f))));
  801064:	1507c0f2 	custom	3,r3,r2,r20
  801068:	10c7c0f2 	custom	3,r3,r2,r3
  80106c:	38cdc0f2 	custom	3,r6,r7,r3
  result = ALT_CI_FP_ADD_0(result,-term);
  801070:	30e0003c 	xorhi	r3,r6,32768
  801074:	48d3c072 	custom	1,r9,r9,r3

  term = ALT_CI_FP_MULT_0(term,ALT_CI_FP_MULT_0(x,ALT_CI_FP_MULT_0(x, 1.0/(56.0f))));
  801078:	14c7c0f2 	custom	3,r3,r2,r19
  80107c:	10c7c0f2 	custom	3,r3,r2,r3
  801080:	30c7c0f2 	custom	3,r3,r6,r3
  result = ALT_CI_FP_ADD_0(result,term);
  801084:	48d3c072 	custom	1,r9,r9,r3

  term = ALT_CI_FP_MULT_0(term,ALT_CI_FP_MULT_0(x,ALT_CI_FP_MULT_0(x, 1.0/(90.0f))));
  801088:	14a5c0f2 	custom	3,r18,r2,r18
  80108c:	1485c0f2 	custom	3,r2,r2,r18
  801090:	1887c0f2 	custom	3,r3,r3,r2
  result = ALT_CI_FP_ADD_0(result,-term);
  801094:	18e0003c 	xorhi	r3,r3,32768
  801098:	48c7c072 	custom	1,r3,r9,r3
		//ALT_CI_FP_MULT_0(x[i], ALT_CI_FP_MULT_0(x[i], cos(ALT_CI_FP_MULT_0(ALT_CI_FP_SUB_0(x[i], 128),1/128)))) cos(ALT_CI_FP_MULT_0(ALT_CI_FP_SUB_0(x[i], 128) ,1/128)) ))
//		sum= ALT_CI_FP_ADD_0(sum,  ALT_CI_FP_ADD_0(ALT_CI_FP_MULT_0(0.5,x[i]),ALT_CI_FP_MULT_0(x[i],ALT_CI_FP_MULT_0(x[i],custom_cos_taylor(ALT_CI_FP_MULT_0((ALT_CI_FP_SUB_0(x[i], 128)),ff),3) )) ));
		sum= ALT_CI_FP_ADD_0(sum,  ALT_CI_FP_ADD_0(ALT_CI_FP_MULT_0(0.5,x[i]),ALT_CI_FP_MULT_0(x[i],ALT_CI_FP_MULT_0(x[i],custom_cos_horner(ALT_CI_FP_MULT_0((ALT_CI_FP_SUB_0(x[i], 128)),ff)) )) ));
		sum= ALT_CI_FP_ADD_0(sum,  ALT_CI_FP_ADD_0(ALT_CI_FP_MULT_0(0.5,x[i+1]),ALT_CI_FP_MULT_0(x[i+1],ALT_CI_FP_MULT_0(x[i+1],custom_cos_horner(ALT_CI_FP_MULT_0((ALT_CI_FP_SUB_0(x[i+1], 128)),ff)) )) ));
		sum= ALT_CI_FP_ADD_0(sum,  ALT_CI_FP_ADD_0(ALT_CI_FP_MULT_0(0.5,x[i+2]),ALT_CI_FP_MULT_0(x[i+2],ALT_CI_FP_MULT_0(x[i+2],custom_cos_horner(ALT_CI_FP_MULT_0((ALT_CI_FP_SUB_0(x[i+2], 128)),ff)) )) ));
		sum= ALT_CI_FP_ADD_0(sum,  ALT_CI_FP_ADD_0(ALT_CI_FP_MULT_0(0.5,x[i+3]),ALT_CI_FP_MULT_0(x[i+3],ALT_CI_FP_MULT_0(x[i+3],custom_cos_horner(ALT_CI_FP_MULT_0((ALT_CI_FP_SUB_0(x[i+3], 128)),ff)) )) ));
  80109c:	58c7c0f2 	custom	3,r3,r11,r3
  8010a0:	58c7c0f2 	custom	3,r3,r11,r3
  8010a4:	60c7c072 	custom	1,r3,r12,r3
  8010a8:	50d5c072 	custom	1,r10,r10,r3
{
	float sum=0;
	float ff=1.0/128;
	int i=0;
//	printf("ff= %f", ff);
	for (;i<M-4;i+=4){
  8010ac:	6b400104 	addi	r13,r13,4
  8010b0:	84000404 	addi	r16,r16,16
  8010b4:	ffc00404 	addi	ra,ra,16
  8010b8:	7bc00404 	addi	r15,r15,16
  8010bc:	73800404 	addi	r14,r14,16
  8010c0:	6c7f7216 	blt	r13,r17,800e8c <__alt_data_end+0xff800e8c>
  8010c4:	2b3ffec4 	addi	r12,r5,-5
  8010c8:	6018d0ba 	srli	r12,r12,2
  8010cc:	63000044 	addi	r12,r12,1
  8010d0:	6319883a 	add	r12,r12,r12
  8010d4:	6319883a 	add	r12,r12,r12
//		sum= ALT_CI_FP_ADD_0(sum,  ALT_CI_FP_ADD_0(ALT_CI_FP_MULT_0(0.5,x[i+5]),ALT_CI_FP_MULT_0(x[i+5],ALT_CI_FP_MULT_0(x[i+5],custom_cos_horner(ALT_CI_FP_MULT_0((ALT_CI_FP_SUB_0(x[i+5], 128)),ff)) )) ));
//		sum= ALT_CI_FP_ADD_0(sum,  ALT_CI_FP_ADD_0(ALT_CI_FP_MULT_0(0.5,x[i+6]),ALT_CI_FP_MULT_0(x[i+4],ALT_CI_FP_MULT_0(x[i+6],custom_cos_horner(ALT_CI_FP_MULT_0((ALT_CI_FP_SUB_0(x[i+6], 128)),ff)) )) ));
//		sum= ALT_CI_FP_ADD_0(sum,  ALT_CI_FP_ADD_0(ALT_CI_FP_MULT_0(0.5,x[i+7]),ALT_CI_FP_MULT_0(x[i+4],ALT_CI_FP_MULT_0(x[i+7],custom_cos_horner(ALT_CI_FP_MULT_0((ALT_CI_FP_SUB_0(x[i+7], 128)),ff)) )) ));
		//		sum= ALT_CI_FP_ADD_0(sum,  ALT_CI_FP_ADD_0(ALT_CI_FP_MULT_0(0.5,x[i]),ALT_CI_FP_MULT_0(x[i],ALT_CI_FP_MULT_0(x[i],cos(ALT_CI_FP_MULT_0((ALT_CI_FP_SUB_0(x[i], 128)),ff)) )) ));
	}
	for (; i < M; i++){
  8010d8:	6140310e 	bge	r12,r5,8011a0 <TaylorCustomSumVector+0x360>
  8010dc:	6305883a 	add	r2,r12,r12
  8010e0:	1085883a 	add	r2,r2,r2
  8010e4:	2089883a 	add	r4,r4,r2
		sum= ALT_CI_FP_ADD_0(sum,  ALT_CI_FP_ADD_0(ALT_CI_FP_MULT_0(0.5,x[i]),ALT_CI_FP_MULT_0(x[i],ALT_CI_FP_MULT_0(x[i],custom_cos_horner(ALT_CI_FP_MULT_0((ALT_CI_FP_SUB_0(x[i], 128)),ff)) )) ));
  8010e8:	22c00017 	ldw	r11,0(r4)
  8010ec:	01cfc034 	movhi	r7,16128
  8010f0:	3adbc0f2 	custom	3,r13,r7,r11
  8010f4:	0190c034 	movhi	r6,17152
  8010f8:	598dc0b2 	custom	2,r6,r11,r6
  8010fc:	024f0034 	movhi	r9,15360
  801100:	3253c0f2 	custom	3,r9,r6,r9
  float term;

  term = 1.0f;
  result = term;

  term = ALT_CI_FP_MULT_0(term, ALT_CI_FP_MULT_0(x, ALT_CI_FP_MULT_0(x,1/2.0f)));
  801104:	49cfc0f2 	custom	3,r7,r9,r7
  801108:	49cfc0f2 	custom	3,r7,r9,r7
  80110c:	008fe034 	movhi	r2,16256
  801110:	11d1c0f2 	custom	3,r8,r2,r7
  result = ALT_CI_FP_ADD_0(result,-term);
  801114:	40e0003c 	xorhi	r3,r8,32768
  801118:	10c5c072 	custom	1,r2,r2,r3

  term = ALT_CI_FP_MULT_0(term,ALT_CI_FP_MULT_0(x,ALT_CI_FP_MULT_0(x, 1.0/(12.0f))));
  80111c:	018f6af4 	movhi	r6,15787
  801120:	31aaaac4 	addi	r6,r6,-21845
  801124:	498dc0f2 	custom	3,r6,r9,r6
  801128:	498dc0f2 	custom	3,r6,r9,r6
  80112c:	418fc0f2 	custom	3,r7,r8,r6
  result = ALT_CI_FP_ADD_0(result,term);
  801130:	11c5c072 	custom	1,r2,r2,r7

  term = ALT_CI_FP_MULT_0(term,ALT_CI_FP_MULT_0(x,ALT_CI_FP_MULT_0(x, 1.0/(30.0f))));
  801134:	00cf4274 	movhi	r3,15625
  801138:	18e22244 	addi	r3,r3,-30583
  80113c:	48c7c0f2 	custom	3,r3,r9,r3
  801140:	48c7c0f2 	custom	3,r3,r9,r3
  801144:	38cdc0f2 	custom	3,r6,r7,r3
  result = ALT_CI_FP_ADD_0(result,-term);
  801148:	30e0003c 	xorhi	r3,r6,32768
  80114c:	10c5c072 	custom	1,r2,r2,r3

  term = ALT_CI_FP_MULT_0(term,ALT_CI_FP_MULT_0(x,ALT_CI_FP_MULT_0(x, 1.0/(56.0f))));
  801150:	00cf24b4 	movhi	r3,15506
  801154:	18d24944 	addi	r3,r3,18725
  801158:	48c7c0f2 	custom	3,r3,r9,r3
  80115c:	48c7c0f2 	custom	3,r3,r9,r3
  801160:	30c7c0f2 	custom	3,r3,r6,r3
  result = ALT_CI_FP_ADD_0(result,term);
  801164:	10c5c072 	custom	1,r2,r2,r3

  term = ALT_CI_FP_MULT_0(term,ALT_CI_FP_MULT_0(x,ALT_CI_FP_MULT_0(x, 1.0/(90.0f))));
  801168:	018f0db4 	movhi	r6,15414
  80116c:	3182d844 	addi	r6,r6,2913
  801170:	498dc0f2 	custom	3,r6,r9,r6
  801174:	498dc0f2 	custom	3,r6,r9,r6
  801178:	1987c0f2 	custom	3,r3,r3,r6
  result = ALT_CI_FP_ADD_0(result,-term);
  80117c:	18e0003c 	xorhi	r3,r3,32768
  801180:	10c7c072 	custom	1,r3,r2,r3
//		sum= ALT_CI_FP_ADD_0(sum,  ALT_CI_FP_ADD_0(ALT_CI_FP_MULT_0(0.5,x[i+6]),ALT_CI_FP_MULT_0(x[i+4],ALT_CI_FP_MULT_0(x[i+6],custom_cos_horner(ALT_CI_FP_MULT_0((ALT_CI_FP_SUB_0(x[i+6], 128)),ff)) )) ));
//		sum= ALT_CI_FP_ADD_0(sum,  ALT_CI_FP_ADD_0(ALT_CI_FP_MULT_0(0.5,x[i+7]),ALT_CI_FP_MULT_0(x[i+4],ALT_CI_FP_MULT_0(x[i+7],custom_cos_horner(ALT_CI_FP_MULT_0((ALT_CI_FP_SUB_0(x[i+7], 128)),ff)) )) ));
		//		sum= ALT_CI_FP_ADD_0(sum,  ALT_CI_FP_ADD_0(ALT_CI_FP_MULT_0(0.5,x[i]),ALT_CI_FP_MULT_0(x[i],ALT_CI_FP_MULT_0(x[i],cos(ALT_CI_FP_MULT_0((ALT_CI_FP_SUB_0(x[i], 128)),ff)) )) ));
	}
	for (; i < M; i++){
		sum= ALT_CI_FP_ADD_0(sum,  ALT_CI_FP_ADD_0(ALT_CI_FP_MULT_0(0.5,x[i]),ALT_CI_FP_MULT_0(x[i],ALT_CI_FP_MULT_0(x[i],custom_cos_horner(ALT_CI_FP_MULT_0((ALT_CI_FP_SUB_0(x[i], 128)),ff)) )) ));
  801184:	58c7c0f2 	custom	3,r3,r11,r3
  801188:	58c7c0f2 	custom	3,r3,r11,r3
  80118c:	68c7c072 	custom	1,r3,r13,r3
  801190:	50d5c072 	custom	1,r10,r10,r3
//		sum= ALT_CI_FP_ADD_0(sum,  ALT_CI_FP_ADD_0(ALT_CI_FP_MULT_0(0.5,x[i+5]),ALT_CI_FP_MULT_0(x[i+5],ALT_CI_FP_MULT_0(x[i+5],custom_cos_horner(ALT_CI_FP_MULT_0((ALT_CI_FP_SUB_0(x[i+5], 128)),ff)) )) ));
//		sum= ALT_CI_FP_ADD_0(sum,  ALT_CI_FP_ADD_0(ALT_CI_FP_MULT_0(0.5,x[i+6]),ALT_CI_FP_MULT_0(x[i+4],ALT_CI_FP_MULT_0(x[i+6],custom_cos_horner(ALT_CI_FP_MULT_0((ALT_CI_FP_SUB_0(x[i+6], 128)),ff)) )) ));
//		sum= ALT_CI_FP_ADD_0(sum,  ALT_CI_FP_ADD_0(ALT_CI_FP_MULT_0(0.5,x[i+7]),ALT_CI_FP_MULT_0(x[i+4],ALT_CI_FP_MULT_0(x[i+7],custom_cos_horner(ALT_CI_FP_MULT_0((ALT_CI_FP_SUB_0(x[i+7], 128)),ff)) )) ));
		//		sum= ALT_CI_FP_ADD_0(sum,  ALT_CI_FP_ADD_0(ALT_CI_FP_MULT_0(0.5,x[i]),ALT_CI_FP_MULT_0(x[i],ALT_CI_FP_MULT_0(x[i],cos(ALT_CI_FP_MULT_0((ALT_CI_FP_SUB_0(x[i], 128)),ff)) )) ));
	}
	for (; i < M; i++){
  801194:	63000044 	addi	r12,r12,1
  801198:	21000104 	addi	r4,r4,4
  80119c:	2b3fd21e 	bne	r5,r12,8010e8 <__alt_data_end+0xff8010e8>
	}

//		printf("the current sum is %f, current xi is %f \n", sum,x[i]);}
	return sum;
// YOUR CODE GOES HERE
}
  8011a0:	5005883a 	mov	r2,r10
  8011a4:	dfc00917 	ldw	ra,36(sp)
  8011a8:	df000817 	ldw	fp,32(sp)
  8011ac:	ddc00717 	ldw	r23,28(sp)
  8011b0:	dd800617 	ldw	r22,24(sp)
  8011b4:	dd400517 	ldw	r21,20(sp)
  8011b8:	dd000417 	ldw	r20,16(sp)
  8011bc:	dcc00317 	ldw	r19,12(sp)
  8011c0:	dc800217 	ldw	r18,8(sp)
  8011c4:	dc400117 	ldw	r17,4(sp)
  8011c8:	dc000017 	ldw	r16,0(sp)
  8011cc:	dec00a04 	addi	sp,sp,40
  8011d0:	f800283a 	ret
}
float TaylorCustomSumVector(float x[], int M)
{
	float sum=0;
	float ff=1.0/128;
	int i=0;
  8011d4:	0019883a 	mov	r12,zero
	return sum;
// YOUR CODE GOES HERE
}
float TaylorCustomSumVector(float x[], int M)
{
	float sum=0;
  8011d8:	0015883a 	mov	r10,zero
  8011dc:	003fbe06 	br	8010d8 <__alt_data_end+0xff8010d8>

008011e0 <OneCustomSumVector>:
//		printf("the current sum is %f, current xi is %f \n", sum,x[i]);}
	return sum;
// YOUR CODE GOES HERE
}
float OneCustomSumVector(float x[], int M)
{
  8011e0:	defff704 	addi	sp,sp,-36
  8011e4:	dfc00815 	stw	ra,32(sp)
  8011e8:	ddc00715 	stw	r23,28(sp)
  8011ec:	dd800615 	stw	r22,24(sp)
  8011f0:	dd400515 	stw	r21,20(sp)
  8011f4:	dd000415 	stw	r20,16(sp)
  8011f8:	dcc00315 	stw	r19,12(sp)
  8011fc:	dc800215 	stw	r18,8(sp)
  801200:	dc400115 	stw	r17,4(sp)
  801204:	dc000015 	stw	r16,0(sp)
	float sum=0;

	for (int i=0;i<M;i++){
  801208:	01407d0e 	bge	zero,r5,801400 <OneCustomSumVector+0x220>
  80120c:	282b883a 	mov	r21,r5
  801210:	2025883a 	mov	r18,r4
  801214:	0027883a 	mov	r19,zero
  801218:	002d883a 	mov	r22,zero
//		float a=ALT_CI_FP_SUB_0(x[i], 128);
//		float b=cos(ALT_CI_FP_MULT_0(a ,1/128));
//		float c=ALT_CI_FP_MULT_0(x[i],b );
//		float d=ALT_CI_FP_MULT_0(x[i],c);

		sum+=  0.5*x[i]+ALT_CI_FP_MULT_0(x[i], x[i]*(cos_horner((x[i]-128)/128)));
  80121c:	94400017 	ldw	r17,0(r18)
  801220:	0150c034 	movhi	r5,17152
  801224:	8809883a 	mov	r4,r17
  801228:	0805df80 	call	805df8 <__subsf3>
  80122c:	014f0034 	movhi	r5,15360
  801230:	1009883a 	mov	r4,r2
  801234:	08059fc0 	call	8059fc <__mulsf3>
  float term;

  term = 1.0f;
  result = term;

  term *= x*x/2.0f;
  801238:	100b883a 	mov	r5,r2
  80123c:	1009883a 	mov	r4,r2
  801240:	08059fc0 	call	8059fc <__mulsf3>
  801244:	1009883a 	mov	r4,r2
  801248:	014fc034 	movhi	r5,16128
  80124c:	1021883a 	mov	r16,r2
  801250:	08059fc0 	call	8059fc <__mulsf3>
  result += -term;
  801254:	100b883a 	mov	r5,r2
  801258:	010fe034 	movhi	r4,16256
  float term;

  term = 1.0f;
  result = term;

  term *= x*x/2.0f;
  80125c:	1029883a 	mov	r20,r2
  result += -term;
  801260:	0805df80 	call	805df8 <__subsf3>

  term *= x*x/3.0f*4.0f;
  801264:	8009883a 	mov	r4,r16
  801268:	01501034 	movhi	r5,16448

  term = 1.0f;
  result = term;

  term *= x*x/2.0f;
  result += -term;
  80126c:	102f883a 	mov	r23,r2

  term *= x*x/3.0f*4.0f;
  801270:	08053c00 	call	8053c0 <__divsf3>
  801274:	01502034 	movhi	r5,16512
  801278:	1009883a 	mov	r4,r2
  80127c:	08059fc0 	call	8059fc <__mulsf3>
  801280:	a00b883a 	mov	r5,r20
  801284:	1009883a 	mov	r4,r2
  801288:	08059fc0 	call	8059fc <__mulsf3>
  result += term;
  80128c:	b809883a 	mov	r4,r23
  801290:	100b883a 	mov	r5,r2
  result = term;

  term *= x*x/2.0f;
  result += -term;

  term *= x*x/3.0f*4.0f;
  801294:	1029883a 	mov	r20,r2
  result += term;
  801298:	0804ef80 	call	804ef8 <__addsf3>

  term *= x*x/5.0f*6.0f;
  80129c:	8009883a 	mov	r4,r16
  8012a0:	01502834 	movhi	r5,16544

  term *= x*x/2.0f;
  result += -term;

  term *= x*x/3.0f*4.0f;
  result += term;
  8012a4:	102f883a 	mov	r23,r2

  term *= x*x/5.0f*6.0f;
  8012a8:	08053c00 	call	8053c0 <__divsf3>
  8012ac:	01503034 	movhi	r5,16576
  8012b0:	1009883a 	mov	r4,r2
  8012b4:	08059fc0 	call	8059fc <__mulsf3>
  8012b8:	a00b883a 	mov	r5,r20
  8012bc:	1009883a 	mov	r4,r2
  8012c0:	08059fc0 	call	8059fc <__mulsf3>
  result += -term;
  8012c4:	b809883a 	mov	r4,r23
  8012c8:	100b883a 	mov	r5,r2
  result += -term;

  term *= x*x/3.0f*4.0f;
  result += term;

  term *= x*x/5.0f*6.0f;
  8012cc:	1029883a 	mov	r20,r2
  result += -term;
  8012d0:	0805df80 	call	805df8 <__subsf3>

  term *= x*x/7.0f*8.0f;
  8012d4:	8009883a 	mov	r4,r16
  8012d8:	01503834 	movhi	r5,16608

  term *= x*x/3.0f*4.0f;
  result += term;

  term *= x*x/5.0f*6.0f;
  result += -term;
  8012dc:	102f883a 	mov	r23,r2

  term *= x*x/7.0f*8.0f;
  8012e0:	08053c00 	call	8053c0 <__divsf3>
  8012e4:	01504034 	movhi	r5,16640
  8012e8:	1009883a 	mov	r4,r2
  8012ec:	08059fc0 	call	8059fc <__mulsf3>
  8012f0:	a00b883a 	mov	r5,r20
  8012f4:	1009883a 	mov	r4,r2
  8012f8:	08059fc0 	call	8059fc <__mulsf3>
  result += term;
  8012fc:	b809883a 	mov	r4,r23
  801300:	100b883a 	mov	r5,r2
  result += term;

  term *= x*x/5.0f*6.0f;
  result += -term;

  term *= x*x/7.0f*8.0f;
  801304:	1029883a 	mov	r20,r2
  result += term;
  801308:	0804ef80 	call	804ef8 <__addsf3>
//		float a=ALT_CI_FP_SUB_0(x[i], 128);
//		float b=cos(ALT_CI_FP_MULT_0(a ,1/128));
//		float c=ALT_CI_FP_MULT_0(x[i],b );
//		float d=ALT_CI_FP_MULT_0(x[i],c);

		sum+=  0.5*x[i]+ALT_CI_FP_MULT_0(x[i], x[i]*(cos_horner((x[i]-128)/128)));
  80130c:	8009883a 	mov	r4,r16
  801310:	01504434 	movhi	r5,16656

  term *= x*x/5.0f*6.0f;
  result += -term;

  term *= x*x/7.0f*8.0f;
  result += term;
  801314:	102f883a 	mov	r23,r2
//		float a=ALT_CI_FP_SUB_0(x[i], 128);
//		float b=cos(ALT_CI_FP_MULT_0(a ,1/128));
//		float c=ALT_CI_FP_MULT_0(x[i],b );
//		float d=ALT_CI_FP_MULT_0(x[i],c);

		sum+=  0.5*x[i]+ALT_CI_FP_MULT_0(x[i], x[i]*(cos_horner((x[i]-128)/128)));
  801318:	08053c00 	call	8053c0 <__divsf3>
  80131c:	01504834 	movhi	r5,16672
  801320:	1009883a 	mov	r4,r2
  801324:	08059fc0 	call	8059fc <__mulsf3>
  801328:	a00b883a 	mov	r5,r20
  80132c:	1009883a 	mov	r4,r2
  801330:	08059fc0 	call	8059fc <__mulsf3>
  801334:	b809883a 	mov	r4,r23
  801338:	100b883a 	mov	r5,r2
  80133c:	0805df80 	call	805df8 <__subsf3>
  801340:	880b883a 	mov	r5,r17
  801344:	1009883a 	mov	r4,r2
  801348:	08059fc0 	call	8059fc <__mulsf3>
  80134c:	88a9c0f2 	custom	3,r20,r17,r2
  801350:	8809883a 	mov	r4,r17
  801354:	08088d80 	call	8088d8 <__extendsfdf2>
  801358:	000d883a 	mov	r6,zero
  80135c:	01cff834 	movhi	r7,16352
  801360:	180b883a 	mov	r5,r3
  801364:	1009883a 	mov	r4,r2
  801368:	08077680 	call	807768 <__muldf3>
  80136c:	a009883a 	mov	r4,r20
  801370:	1023883a 	mov	r17,r2
  801374:	1821883a 	mov	r16,r3
  801378:	08088d80 	call	8088d8 <__extendsfdf2>
  80137c:	800b883a 	mov	r5,r16
  801380:	100d883a 	mov	r6,r2
  801384:	180f883a 	mov	r7,r3
  801388:	8809883a 	mov	r4,r17
  80138c:	08064700 	call	806470 <__adddf3>
  801390:	b009883a 	mov	r4,r22
  801394:	1023883a 	mov	r17,r2
  801398:	1821883a 	mov	r16,r3
  80139c:	08088d80 	call	8088d8 <__extendsfdf2>
  8013a0:	100d883a 	mov	r6,r2
  8013a4:	180f883a 	mov	r7,r3
  8013a8:	8809883a 	mov	r4,r17
  8013ac:	800b883a 	mov	r5,r16
  8013b0:	08064700 	call	806470 <__adddf3>
  8013b4:	1009883a 	mov	r4,r2
  8013b8:	180b883a 	mov	r5,r3
  8013bc:	08089e80 	call	8089e8 <__truncdfsf2>
}
float OneCustomSumVector(float x[], int M)
{
	float sum=0;

	for (int i=0;i<M;i++){
  8013c0:	9cc00044 	addi	r19,r19,1
//		float a=ALT_CI_FP_SUB_0(x[i], 128);
//		float b=cos(ALT_CI_FP_MULT_0(a ,1/128));
//		float c=ALT_CI_FP_MULT_0(x[i],b );
//		float d=ALT_CI_FP_MULT_0(x[i],c);

		sum+=  0.5*x[i]+ALT_CI_FP_MULT_0(x[i], x[i]*(cos_horner((x[i]-128)/128)));
  8013c4:	102d883a 	mov	r22,r2
  8013c8:	94800104 	addi	r18,r18,4
}
float OneCustomSumVector(float x[], int M)
{
	float sum=0;

	for (int i=0;i<M;i++){
  8013cc:	acff931e 	bne	r21,r19,80121c <__alt_data_end+0xff80121c>
//		sum= ALT_CI_FP_ADD_0(sum,  ALT_CI_FP_ADD_0(ALT_CI_FP_MULT_0(0.5,x[i]),ALT_CI_FP_MULT_0(x[i],ALT_CI_FP_MULT_0(x[i],cos(ALT_CI_FP_MULT_0(ALT_CI_FP_ADD_0(x[i], -128) ,1/128)) )) ));
	}
//		printf("the current sum is %f, current xi is %f \n", sum,x[i]);}
	return sum;
// YOUR CODE GOES HERE
}
  8013d0:	b005883a 	mov	r2,r22
  8013d4:	dfc00817 	ldw	ra,32(sp)
  8013d8:	ddc00717 	ldw	r23,28(sp)
  8013dc:	dd800617 	ldw	r22,24(sp)
  8013e0:	dd400517 	ldw	r21,20(sp)
  8013e4:	dd000417 	ldw	r20,16(sp)
  8013e8:	dcc00317 	ldw	r19,12(sp)
  8013ec:	dc800217 	ldw	r18,8(sp)
  8013f0:	dc400117 	ldw	r17,4(sp)
  8013f4:	dc000017 	ldw	r16,0(sp)
  8013f8:	dec00904 	addi	sp,sp,36
  8013fc:	f800283a 	ret
	return sum;
// YOUR CODE GOES HERE
}
float OneCustomSumVector(float x[], int M)
{
	float sum=0;
  801400:	002d883a 	mov	r22,zero
  801404:	003ff206 	br	8013d0 <__alt_data_end+0xff8013d0>

00801408 <LUTCustomSumVector>:
//		printf("the current sum is %f, current xi is %f \n", sum,x[i]);}
	return sum;
// YOUR CODE GOES HERE
}
float LUTCustomSumVector(float x[], int M)
{
  801408:	defff404 	addi	sp,sp,-48
  80140c:	dfc00b15 	stw	ra,44(sp)
  801410:	df000a15 	stw	fp,40(sp)
  801414:	ddc00915 	stw	r23,36(sp)
  801418:	dd800815 	stw	r22,32(sp)
  80141c:	dd400715 	stw	r21,28(sp)
  801420:	dd000615 	stw	r20,24(sp)
  801424:	dcc00515 	stw	r19,20(sp)
  801428:	dc800415 	stw	r18,16(sp)
  80142c:	dc400315 	stw	r17,12(sp)
  801430:	dc000215 	stw	r16,8(sp)
	float sum=0;
	float ff=1.0/128.0f;
//	printf("ff= %f", ff);
	for (int i=0;i<M;i++){
  801434:	0140680e 	bge	zero,r5,8015d8 <LUTCustomSumVector+0x1d0>
  801438:	054020b4 	movhi	r21,130
  80143c:	d9400015 	stw	r5,0(sp)
  801440:	ad64db04 	addi	r21,r21,-27796
  801444:	2025883a 	mov	r18,r4
  801448:	0027883a 	mov	r19,zero
  80144c:	0029883a 	mov	r20,zero
  801450:	00003106 	br	801518 <LUTCustomSumVector+0x110>

  // Wrap into 0 to 360 range
  if(angle < 0) {
    angle += 360.0f;
  }
  else if (angle >= 360) {
  801454:	08058780 	call	805878 <__gesf2>
    angle -= 360.0f;
  801458:	b80b883a 	mov	r5,r23
  80145c:	b009883a 	mov	r4,r22

  // Wrap into 0 to 360 range
  if(angle < 0) {
    angle += 360.0f;
  }
  else if (angle >= 360) {
  801460:	10000216 	blt	r2,zero,80146c <LUTCustomSumVector+0x64>
    angle -= 360.0f;
  801464:	0805df80 	call	805df8 <__subsf3>
  801468:	1039883a 	mov	fp,r2

  return angle;
}
float lookupCos(float x) {
	float y=radToDeg(x);
	 int index = y * (TABLE_SIZE-1) / 360.0f;
  80146c:	0150ed34 	movhi	r5,17332
  801470:	e009883a 	mov	r4,fp
  801474:	29600004 	addi	r5,r5,-32768
  801478:	08059fc0 	call	8059fc <__mulsf3>
  80147c:	0150ed34 	movhi	r5,17332
  801480:	1009883a 	mov	r4,r2
  801484:	08053c00 	call	8053c0 <__divsf3>
  801488:	1009883a 	mov	r4,r2
  80148c:	d8800115 	stw	r2,4(sp)
  801490:	08062dc0 	call	8062dc <__fixsfsi>
  801494:	102f883a 	mov	r23,r2
	  float frac = (y * (TABLE_SIZE-1) / 360.0f) - index;

	  float y1 = cosTable[index];
	  float y2 = cosTable[index+1];
  801498:	b8c00044 	addi	r3,r23,1
float lookupCos(float x) {
	float y=radToDeg(x);
	 int index = y * (TABLE_SIZE-1) / 360.0f;
	  float frac = (y * (TABLE_SIZE-1) / 360.0f) - index;

	  float y1 = cosTable[index];
  80149c:	1085883a 	add	r2,r2,r2
  8014a0:	1085883a 	add	r2,r2,r2
	  float y2 = cosTable[index+1];
  8014a4:	18c7883a 	add	r3,r3,r3
float lookupCos(float x) {
	float y=radToDeg(x);
	 int index = y * (TABLE_SIZE-1) / 360.0f;
	  float frac = (y * (TABLE_SIZE-1) / 360.0f) - index;

	  float y1 = cosTable[index];
  8014a8:	a885883a 	add	r2,r21,r2
	  float y2 = cosTable[index+1];
  8014ac:	18c7883a 	add	r3,r3,r3
  8014b0:	a8c7883a 	add	r3,r21,r3
float lookupCos(float x) {
	float y=radToDeg(x);
	 int index = y * (TABLE_SIZE-1) / 360.0f;
	  float frac = (y * (TABLE_SIZE-1) / 360.0f) - index;

	  float y1 = cosTable[index];
  8014b4:	17000017 	ldw	fp,0(r2)
//		float c=ALT_CI_FP_MULT_0(x[i],b );
//		float d=ALT_CI_FP_MULT_0(x[i],c);
//		sum+= 0.5*x[i]+x[i]*x[i]*(cos((x[i]-128)/128));
		//ALT_CI_FP_MULT_0(x[i], ALT_CI_FP_MULT_0(x[i], cos(ALT_CI_FP_MULT_0(ALT_CI_FP_SUB_0(x[i], 128),1/128)))) cos(ALT_CI_FP_MULT_0(ALT_CI_FP_SUB_0(x[i], 128) ,1/128)) ))
//		sum= ALT_CI_FP_ADD_0(sum,  ALT_CI_FP_ADD_0(ALT_CI_FP_MULT_0(0.5,x[i]),ALT_CI_FP_MULT_0(x[i],ALT_CI_FP_MULT_0(x[i],custom_cos_taylor(ALT_CI_FP_MULT_0((ALT_CI_FP_SUB_0(x[i], 128)),ff),3) )) ));
		sum= ALT_CI_FP_ADD_0(sum,  ALT_CI_FP_ADD_0(ALT_CI_FP_MULT_0(0.5,x[i]),ALT_CI_FP_MULT_0(x[i],ALT_CI_FP_MULT_0(x[i],lookupCos(ALT_CI_FP_MULT_0((ALT_CI_FP_SUB_0(x[i], 128.0)),ff)) )) ));
  8014b8:	19000017 	ldw	r4,0(r3)
  8014bc:	e00b883a 	mov	r5,fp
  8014c0:	0805df80 	call	805df8 <__subsf3>
  8014c4:	b809883a 	mov	r4,r23
  8014c8:	102d883a 	mov	r22,r2
  8014cc:	080634c0 	call	80634c <__floatsisf>
  8014d0:	d9800117 	ldw	r6,4(sp)
  8014d4:	100b883a 	mov	r5,r2
  8014d8:	3009883a 	mov	r4,r6
  8014dc:	0805df80 	call	805df8 <__subsf3>
  8014e0:	b009883a 	mov	r4,r22
  8014e4:	100b883a 	mov	r5,r2
  8014e8:	08059fc0 	call	8059fc <__mulsf3>
  8014ec:	e00b883a 	mov	r5,fp
  8014f0:	1009883a 	mov	r4,r2
  8014f4:	0804ef80 	call	804ef8 <__addsf3>
  8014f8:	8085c0f2 	custom	3,r2,r16,r2
  8014fc:	80a1c0f2 	custom	3,r16,r16,r2
  801500:	8c21c072 	custom	1,r16,r17,r16
  801504:	a429c072 	custom	1,r20,r20,r16
float LUTCustomSumVector(float x[], int M)
{
	float sum=0;
	float ff=1.0/128.0f;
//	printf("ff= %f", ff);
	for (int i=0;i<M;i++){
  801508:	d8800017 	ldw	r2,0(sp)
  80150c:	9cc00044 	addi	r19,r19,1
  801510:	94800104 	addi	r18,r18,4
  801514:	14c03126 	beq	r2,r19,8015dc <LUTCustomSumVector+0x1d4>
//		float c=ALT_CI_FP_MULT_0(x[i],b );
//		float d=ALT_CI_FP_MULT_0(x[i],c);
//		sum+= 0.5*x[i]+x[i]*x[i]*(cos((x[i]-128)/128));
		//ALT_CI_FP_MULT_0(x[i], ALT_CI_FP_MULT_0(x[i], cos(ALT_CI_FP_MULT_0(ALT_CI_FP_SUB_0(x[i], 128),1/128)))) cos(ALT_CI_FP_MULT_0(ALT_CI_FP_SUB_0(x[i], 128) ,1/128)) ))
//		sum= ALT_CI_FP_ADD_0(sum,  ALT_CI_FP_ADD_0(ALT_CI_FP_MULT_0(0.5,x[i]),ALT_CI_FP_MULT_0(x[i],ALT_CI_FP_MULT_0(x[i],custom_cos_taylor(ALT_CI_FP_MULT_0((ALT_CI_FP_SUB_0(x[i], 128)),ff),3) )) ));
		sum= ALT_CI_FP_ADD_0(sum,  ALT_CI_FP_ADD_0(ALT_CI_FP_MULT_0(0.5,x[i]),ALT_CI_FP_MULT_0(x[i],ALT_CI_FP_MULT_0(x[i],lookupCos(ALT_CI_FP_MULT_0((ALT_CI_FP_SUB_0(x[i], 128.0)),ff)) )) ));
  801518:	94000017 	ldw	r16,0(r18)
  80151c:	044fc034 	movhi	r17,16128
  801520:	8c23c0f2 	custom	3,r17,r17,r16
  801524:	0110c034 	movhi	r4,17152
  801528:	8109c0b2 	custom	2,r4,r16,r4
  80152c:	008f0034 	movhi	r2,15360
  801530:	2089c0f2 	custom	3,r4,r4,r2

  // Shift and scale to 0 to 2*PI
  angle = (rad + 1.0f) * M_PI;

  // Convert to degrees
  angle = angle * 180.0f / M_PI;
  801534:	014fe034 	movhi	r5,16256
  801538:	0804ef80 	call	804ef8 <__addsf3>
  80153c:	1009883a 	mov	r4,r2
  801540:	08088d80 	call	8088d8 <__extendsfdf2>
  801544:	01951134 	movhi	r6,21572
  801548:	01d00274 	movhi	r7,16393
  80154c:	318b4604 	addi	r6,r6,11544
  801550:	39c87ec4 	addi	r7,r7,8699
  801554:	1009883a 	mov	r4,r2
  801558:	180b883a 	mov	r5,r3
  80155c:	08077680 	call	807768 <__muldf3>
  801560:	180b883a 	mov	r5,r3
  801564:	1009883a 	mov	r4,r2
  801568:	08089e80 	call	8089e8 <__truncdfsf2>
  80156c:	0150cd34 	movhi	r5,17204
  801570:	1009883a 	mov	r4,r2
  801574:	08059fc0 	call	8059fc <__mulsf3>
  801578:	1009883a 	mov	r4,r2
  80157c:	08088d80 	call	8088d8 <__extendsfdf2>
  801580:	01951134 	movhi	r6,21572
  801584:	01d00274 	movhi	r7,16393
  801588:	318b4604 	addi	r6,r6,11544
  80158c:	39c87ec4 	addi	r7,r7,8699
  801590:	1009883a 	mov	r4,r2
  801594:	180b883a 	mov	r5,r3
  801598:	0806d1c0 	call	806d1c <__divdf3>
  80159c:	180b883a 	mov	r5,r3
  8015a0:	1009883a 	mov	r4,r2
  8015a4:	08089e80 	call	8089e8 <__truncdfsf2>

  // Wrap into 0 to 360 range
  if(angle < 0) {
  8015a8:	1009883a 	mov	r4,r2
  8015ac:	000b883a 	mov	r5,zero

  // Shift and scale to 0 to 2*PI
  angle = (rad + 1.0f) * M_PI;

  // Convert to degrees
  angle = angle * 180.0f / M_PI;
  8015b0:	102d883a 	mov	r22,r2

  // Wrap into 0 to 360 range
  if(angle < 0) {
    angle += 360.0f;
  }
  else if (angle >= 360) {
  8015b4:	05d0ed34 	movhi	r23,17332

  // Shift and scale to 0 to 2*PI
  angle = (rad + 1.0f) * M_PI;

  // Convert to degrees
  angle = angle * 180.0f / M_PI;
  8015b8:	1039883a 	mov	fp,r2

  // Wrap into 0 to 360 range
  if(angle < 0) {
  8015bc:	08059340 	call	805934 <__lesf2>
    angle += 360.0f;
  }
  else if (angle >= 360) {
  8015c0:	b80b883a 	mov	r5,r23
  8015c4:	b009883a 	mov	r4,r22

  // Convert to degrees
  angle = angle * 180.0f / M_PI;

  // Wrap into 0 to 360 range
  if(angle < 0) {
  8015c8:	103fa20e 	bge	r2,zero,801454 <__alt_data_end+0xff801454>
    angle += 360.0f;
  8015cc:	0804ef80 	call	804ef8 <__addsf3>
  8015d0:	1039883a 	mov	fp,r2
  8015d4:	003fa506 	br	80146c <__alt_data_end+0xff80146c>
	return sum;
// YOUR CODE GOES HERE
}
float LUTCustomSumVector(float x[], int M)
{
	float sum=0;
  8015d8:	0029883a 	mov	r20,zero

	}
//		printf("the current sum is %f, current xi is %f \n", sum,x[i]);}
	return sum;
// YOUR CODE GOES HERE
}
  8015dc:	a005883a 	mov	r2,r20
  8015e0:	dfc00b17 	ldw	ra,44(sp)
  8015e4:	df000a17 	ldw	fp,40(sp)
  8015e8:	ddc00917 	ldw	r23,36(sp)
  8015ec:	dd800817 	ldw	r22,32(sp)
  8015f0:	dd400717 	ldw	r21,28(sp)
  8015f4:	dd000617 	ldw	r20,24(sp)
  8015f8:	dcc00517 	ldw	r19,20(sp)
  8015fc:	dc800417 	ldw	r18,16(sp)
  801600:	dc400317 	ldw	r17,12(sp)
  801604:	dc000217 	ldw	r16,8(sp)
  801608:	dec00c04 	addi	sp,sp,48
  80160c:	f800283a 	ret

00801610 <main>:
{
//	buildCosTable();
//	for(int i=0; i<90; i+=10) {
//	    printf("cos(%d) = %lf\n", i, lookupCos(i));
//	  }
	alt_putstr("hello");
  801610:	01002074 	movhi	r4,129
// YOUR CODE GOES HERE
}


int main()
{
  801614:	deffc904 	addi	sp,sp,-220
//	buildCosTable();
//	for(int i=0; i<90; i+=10) {
//	    printf("cos(%d) = %lf\n", i, lookupCos(i));
//	  }
	alt_putstr("hello");
  801618:	2115fe04 	addi	r4,r4,22520
// YOUR CODE GOES HERE
}


int main()
{
  80161c:	dfc03615 	stw	ra,216(sp)
  801620:	dc403515 	stw	r17,212(sp)
  801624:	dc003415 	stw	r16,208(sp)
//	buildCosTable();
//	for(int i=0; i<90; i+=10) {
//	    printf("cos(%d) = %lf\n", i, lookupCos(i));
//	  }
	alt_putstr("hello");
  801628:	08134680 	call	813468 <alt_putstr>
	printf("Task 4!\n");
  80162c:	01002074 	movhi	r4,129
  801630:	21160004 	addi	r4,r4,22528
  801634:	0808d300 	call	808d30 <puts>
  801638:	dc000104 	addi	r16,sp,4
  80163c:	dc403404 	addi	r17,sp,208


void generateVector(float x[N])
{
	int i;
	x[0] = 0;
  801640:	d8000015 	stw	zero,0(sp)
  801644:	0009883a 	mov	r4,zero
	for (i=1; i<N; i++)
	x[i] = x[i-1] + step;
  801648:	01502834 	movhi	r5,16544
  80164c:	0804ef80 	call	804ef8 <__addsf3>
  801650:	80800015 	stw	r2,0(r16)
  801654:	84000104 	addi	r16,r16,4
  801658:	1009883a 	mov	r4,r2

void generateVector(float x[N])
{
	int i;
	x[0] = 0;
	for (i=1; i<N; i++)
  80165c:	847ffa1e 	bne	r16,r17,801648 <__alt_data_end+0xff801648>
// 	 for (i=0; i<10; i++){
// 		 y = y/2.0;}
// 	 printf("Result: %f \n", (float) y);
//

 	 exec_t1 = times(NULL); // get system time before starting the process
  801660:	0009883a 	mov	r4,zero
  801664:	081372c0 	call	81372c <times>
	 y = TaylorCustomSumVector(x, N);
  801668:	01400d04 	movi	r5,52
  80166c:	d809883a 	mov	r4,sp
// 	 for (i=0; i<10; i++){
// 		 y = y/2.0;}
// 	 printf("Result: %f \n", (float) y);
//

 	 exec_t1 = times(NULL); // get system time before starting the process
  801670:	1023883a 	mov	r17,r2
	 y = TaylorCustomSumVector(x, N);
  801674:	0800e400 	call	800e40 <TaylorCustomSumVector>
 // till here
	 exec_t2 = times(NULL); // get system time after finishing the process
  801678:	0009883a 	mov	r4,zero
// 		 y = y/2.0;}
// 	 printf("Result: %f \n", (float) y);
//

 	 exec_t1 = times(NULL); // get system time before starting the process
	 y = TaylorCustomSumVector(x, N);
  80167c:	1021883a 	mov	r16,r2
 // till here
	 exec_t2 = times(NULL); // get system time after finishing the process
  801680:	081372c0 	call	81372c <times>
	 printf(" custom proc time = %d ticks \n", (unsigned int) (exec_t2-exec_t1));
  801684:	01002074 	movhi	r4,129
  801688:	144bc83a 	sub	r5,r2,r17
  80168c:	21160204 	addi	r4,r4,22536
  801690:	0808c340 	call	808c34 <printf>
	 int j;
	 for (j=0; j<10; j++){
		 y = y/2.0;}
  801694:	8009883a 	mov	r4,r16
  801698:	014fc034 	movhi	r5,16128
  80169c:	08059fc0 	call	8059fc <__mulsf3>
  8016a0:	014fc034 	movhi	r5,16128
  8016a4:	1009883a 	mov	r4,r2
  8016a8:	08059fc0 	call	8059fc <__mulsf3>
  8016ac:	014fc034 	movhi	r5,16128
  8016b0:	1009883a 	mov	r4,r2
  8016b4:	08059fc0 	call	8059fc <__mulsf3>
  8016b8:	014fc034 	movhi	r5,16128
  8016bc:	1009883a 	mov	r4,r2
  8016c0:	08059fc0 	call	8059fc <__mulsf3>
  8016c4:	014fc034 	movhi	r5,16128
  8016c8:	1009883a 	mov	r4,r2
  8016cc:	08059fc0 	call	8059fc <__mulsf3>
  8016d0:	014fc034 	movhi	r5,16128
  8016d4:	1009883a 	mov	r4,r2
  8016d8:	08059fc0 	call	8059fc <__mulsf3>
  8016dc:	014fc034 	movhi	r5,16128
  8016e0:	1009883a 	mov	r4,r2
  8016e4:	08059fc0 	call	8059fc <__mulsf3>
  8016e8:	014fc034 	movhi	r5,16128
  8016ec:	1009883a 	mov	r4,r2
  8016f0:	08059fc0 	call	8059fc <__mulsf3>
  8016f4:	014fc034 	movhi	r5,16128
  8016f8:	1009883a 	mov	r4,r2
  8016fc:	08059fc0 	call	8059fc <__mulsf3>
	 printf("Custom Result: %f \n", (float) y);
  801700:	014fc034 	movhi	r5,16128
  801704:	1009883a 	mov	r4,r2
  801708:	08059fc0 	call	8059fc <__mulsf3>
  80170c:	1009883a 	mov	r4,r2
  801710:	08088d80 	call	8088d8 <__extendsfdf2>
  801714:	01002074 	movhi	r4,129
  801718:	100b883a 	mov	r5,r2
  80171c:	180d883a 	mov	r6,r3
  801720:	21160a04 	addi	r4,r4,22568
  801724:	0808c340 	call	808c34 <printf>
//	 for (j=0; j<10; j++){
//		 y = y/2.0;}
//	 printf("LUT Custom Result: %f \n", (float) y);

 	 return 0;
}
  801728:	0005883a 	mov	r2,zero
  80172c:	dfc03617 	ldw	ra,216(sp)
  801730:	dc403517 	ldw	r17,212(sp)
  801734:	dc003417 	ldw	r16,208(sp)
  801738:	dec03704 	addi	sp,sp,220
  80173c:	f800283a 	ret

00801740 <cos>:
  801740:	00a00034 	movhi	r2,32768
  801744:	defffa04 	addi	sp,sp,-24
  801748:	10bfffc4 	addi	r2,r2,-1
  80174c:	00cffa74 	movhi	r3,16361
  801750:	dfc00515 	stw	ra,20(sp)
  801754:	2884703a 	and	r2,r5,r2
  801758:	18c87ec4 	addi	r3,r3,8699
  80175c:	1880180e 	bge	r3,r2,8017c0 <cos+0x80>
  801760:	00dffc34 	movhi	r3,32752
  801764:	18ffffc4 	addi	r3,r3,-1
  801768:	1880060e 	bge	r3,r2,801784 <cos+0x44>
  80176c:	280f883a 	mov	r7,r5
  801770:	200d883a 	mov	r6,r4
  801774:	0807e800 	call	807e80 <__subdf3>
  801778:	dfc00517 	ldw	ra,20(sp)
  80177c:	dec00604 	addi	sp,sp,24
  801780:	f800283a 	ret
  801784:	d9800104 	addi	r6,sp,4
  801788:	0801cd00 	call	801cd0 <__ieee754_rem_pio2>
  80178c:	108000cc 	andi	r2,r2,3
  801790:	00c00044 	movi	r3,1
  801794:	10c01726 	beq	r2,r3,8017f4 <cos+0xb4>
  801798:	01000084 	movi	r4,2
  80179c:	11000e26 	beq	r2,r4,8017d8 <cos+0x98>
  8017a0:	10001c26 	beq	r2,zero,801814 <cos+0xd4>
  8017a4:	d9800317 	ldw	r6,12(sp)
  8017a8:	d9c00417 	ldw	r7,16(sp)
  8017ac:	d9000117 	ldw	r4,4(sp)
  8017b0:	d9400217 	ldw	r5,8(sp)
  8017b4:	d8c00015 	stw	r3,0(sp)
  8017b8:	08042e80 	call	8042e8 <__kernel_sin>
  8017bc:	003fee06 	br	801778 <__alt_data_end+0xff801778>
  8017c0:	000d883a 	mov	r6,zero
  8017c4:	000f883a 	mov	r7,zero
  8017c8:	08030b40 	call	8030b4 <__kernel_cos>
  8017cc:	dfc00517 	ldw	ra,20(sp)
  8017d0:	dec00604 	addi	sp,sp,24
  8017d4:	f800283a 	ret
  8017d8:	d9800317 	ldw	r6,12(sp)
  8017dc:	d9c00417 	ldw	r7,16(sp)
  8017e0:	d9000117 	ldw	r4,4(sp)
  8017e4:	d9400217 	ldw	r5,8(sp)
  8017e8:	08030b40 	call	8030b4 <__kernel_cos>
  8017ec:	18e0003c 	xorhi	r3,r3,32768
  8017f0:	003fe106 	br	801778 <__alt_data_end+0xff801778>
  8017f4:	d9800317 	ldw	r6,12(sp)
  8017f8:	d9c00417 	ldw	r7,16(sp)
  8017fc:	d9000117 	ldw	r4,4(sp)
  801800:	d9400217 	ldw	r5,8(sp)
  801804:	d8800015 	stw	r2,0(sp)
  801808:	08042e80 	call	8042e8 <__kernel_sin>
  80180c:	18e0003c 	xorhi	r3,r3,32768
  801810:	003fd906 	br	801778 <__alt_data_end+0xff801778>
  801814:	d9800317 	ldw	r6,12(sp)
  801818:	d9c00417 	ldw	r7,16(sp)
  80181c:	d9000117 	ldw	r4,4(sp)
  801820:	d9400217 	ldw	r5,8(sp)
  801824:	08030b40 	call	8030b4 <__kernel_cos>
  801828:	003fd306 	br	801778 <__alt_data_end+0xff801778>

0080182c <powf>:
  80182c:	defff104 	addi	sp,sp,-60
  801830:	dc400a15 	stw	r17,40(sp)
  801834:	04402074 	movhi	r17,129
  801838:	dd000d15 	stw	r20,52(sp)
  80183c:	dcc00c15 	stw	r19,48(sp)
  801840:	dc800b15 	stw	r18,44(sp)
  801844:	dc000915 	stw	r16,36(sp)
  801848:	dfc00e15 	stw	ra,56(sp)
  80184c:	8c5df504 	addi	r17,r17,30676
  801850:	2029883a 	mov	r20,r4
  801854:	2827883a 	mov	r19,r5
  801858:	080243c0 	call	80243c <__ieee754_powf>
  80185c:	1021883a 	mov	r16,r2
  801860:	88800017 	ldw	r2,0(r17)
  801864:	04bfffc4 	movi	r18,-1
  801868:	14800326 	beq	r2,r18,801878 <powf+0x4c>
  80186c:	9809883a 	mov	r4,r19
  801870:	0804b6c0 	call	804b6c <__fpclassifyf>
  801874:	1000091e 	bne	r2,zero,80189c <powf+0x70>
  801878:	8005883a 	mov	r2,r16
  80187c:	dfc00e17 	ldw	ra,56(sp)
  801880:	dd000d17 	ldw	r20,52(sp)
  801884:	dcc00c17 	ldw	r19,48(sp)
  801888:	dc800b17 	ldw	r18,44(sp)
  80188c:	dc400a17 	ldw	r17,40(sp)
  801890:	dc000917 	ldw	r16,36(sp)
  801894:	dec00f04 	addi	sp,sp,60
  801898:	f800283a 	ret
  80189c:	a009883a 	mov	r4,r20
  8018a0:	0804b6c0 	call	804b6c <__fpclassifyf>
  8018a4:	000b883a 	mov	r5,zero
  8018a8:	1000241e 	bne	r2,zero,80193c <powf+0x110>
  8018ac:	9809883a 	mov	r4,r19
  8018b0:	08058000 	call	805800 <__eqsf2>
  8018b4:	103ff01e 	bne	r2,zero,801878 <__alt_data_end+0xff801878>
  8018b8:	00800044 	movi	r2,1
  8018bc:	d8800015 	stw	r2,0(sp)
  8018c0:	00802074 	movhi	r2,129
  8018c4:	a009883a 	mov	r4,r20
  8018c8:	10960f04 	addi	r2,r2,22588
  8018cc:	d8800115 	stw	r2,4(sp)
  8018d0:	d8000815 	stw	zero,32(sp)
  8018d4:	08088d80 	call	8088d8 <__extendsfdf2>
  8018d8:	9809883a 	mov	r4,r19
  8018dc:	d8800215 	stw	r2,8(sp)
  8018e0:	d8c00315 	stw	r3,12(sp)
  8018e4:	08088d80 	call	8088d8 <__extendsfdf2>
  8018e8:	89000017 	ldw	r4,0(r17)
  8018ec:	d8800415 	stw	r2,16(sp)
  8018f0:	008ffc34 	movhi	r2,16368
  8018f4:	d8c00515 	stw	r3,20(sp)
  8018f8:	d8000615 	stw	zero,24(sp)
  8018fc:	d8800715 	stw	r2,28(sp)
  801900:	24802726 	beq	r4,r18,8019a0 <powf+0x174>
  801904:	00800084 	movi	r2,2
  801908:	20802526 	beq	r4,r2,8019a0 <powf+0x174>
  80190c:	d809883a 	mov	r4,sp
  801910:	08047b40 	call	8047b4 <matherr>
  801914:	10006a26 	beq	r2,zero,801ac0 <powf+0x294>
  801918:	d8800817 	ldw	r2,32(sp)
  80191c:	10000326 	beq	r2,zero,80192c <powf+0x100>
  801920:	0808bf40 	call	808bf4 <__errno>
  801924:	d8c00817 	ldw	r3,32(sp)
  801928:	10c00015 	stw	r3,0(r2)
  80192c:	d9000617 	ldw	r4,24(sp)
  801930:	d9400717 	ldw	r5,28(sp)
  801934:	08089e80 	call	8089e8 <__truncdfsf2>
  801938:	003fd006 	br	80187c <__alt_data_end+0xff80187c>
  80193c:	a009883a 	mov	r4,r20
  801940:	08058000 	call	805800 <__eqsf2>
  801944:	1000181e 	bne	r2,zero,8019a8 <powf+0x17c>
  801948:	000b883a 	mov	r5,zero
  80194c:	9809883a 	mov	r4,r19
  801950:	08058000 	call	805800 <__eqsf2>
  801954:	10003a1e 	bne	r2,zero,801a40 <powf+0x214>
  801958:	00800044 	movi	r2,1
  80195c:	d8800015 	stw	r2,0(sp)
  801960:	00802074 	movhi	r2,129
  801964:	a009883a 	mov	r4,r20
  801968:	10960f04 	addi	r2,r2,22588
  80196c:	d8800115 	stw	r2,4(sp)
  801970:	d8000815 	stw	zero,32(sp)
  801974:	08088d80 	call	8088d8 <__extendsfdf2>
  801978:	9809883a 	mov	r4,r19
  80197c:	d8800215 	stw	r2,8(sp)
  801980:	d8c00315 	stw	r3,12(sp)
  801984:	08088d80 	call	8088d8 <__extendsfdf2>
  801988:	89000017 	ldw	r4,0(r17)
  80198c:	d8800415 	stw	r2,16(sp)
  801990:	d8c00515 	stw	r3,20(sp)
  801994:	d8000615 	stw	zero,24(sp)
  801998:	d8000715 	stw	zero,28(sp)
  80199c:	203fdb26 	beq	r4,zero,80190c <__alt_data_end+0xff80190c>
  8019a0:	008fe034 	movhi	r2,16256
  8019a4:	003fb506 	br	80187c <__alt_data_end+0xff80187c>
  8019a8:	8009883a 	mov	r4,r16
  8019ac:	0804b540 	call	804b54 <finitef>
  8019b0:	10004726 	beq	r2,zero,801ad0 <powf+0x2a4>
  8019b4:	000b883a 	mov	r5,zero
  8019b8:	8009883a 	mov	r4,r16
  8019bc:	08058000 	call	805800 <__eqsf2>
  8019c0:	103fad1e 	bne	r2,zero,801878 <__alt_data_end+0xff801878>
  8019c4:	a009883a 	mov	r4,r20
  8019c8:	0804b540 	call	804b54 <finitef>
  8019cc:	103faa26 	beq	r2,zero,801878 <__alt_data_end+0xff801878>
  8019d0:	9809883a 	mov	r4,r19
  8019d4:	0804b540 	call	804b54 <finitef>
  8019d8:	103fa726 	beq	r2,zero,801878 <__alt_data_end+0xff801878>
  8019dc:	00800104 	movi	r2,4
  8019e0:	d8800015 	stw	r2,0(sp)
  8019e4:	00802074 	movhi	r2,129
  8019e8:	a009883a 	mov	r4,r20
  8019ec:	10960f04 	addi	r2,r2,22588
  8019f0:	d8800115 	stw	r2,4(sp)
  8019f4:	d8000815 	stw	zero,32(sp)
  8019f8:	08088d80 	call	8088d8 <__extendsfdf2>
  8019fc:	9809883a 	mov	r4,r19
  801a00:	d8800215 	stw	r2,8(sp)
  801a04:	d8c00315 	stw	r3,12(sp)
  801a08:	08088d80 	call	8088d8 <__extendsfdf2>
  801a0c:	89000017 	ldw	r4,0(r17)
  801a10:	d8800415 	stw	r2,16(sp)
  801a14:	d8c00515 	stw	r3,20(sp)
  801a18:	d8000615 	stw	zero,24(sp)
  801a1c:	d8000715 	stw	zero,28(sp)
  801a20:	00800084 	movi	r2,2
  801a24:	20804926 	beq	r4,r2,801b4c <powf+0x320>
  801a28:	d809883a 	mov	r4,sp
  801a2c:	08047b40 	call	8047b4 <matherr>
  801a30:	10004626 	beq	r2,zero,801b4c <powf+0x320>
  801a34:	d8800817 	ldw	r2,32(sp)
  801a38:	103fbc26 	beq	r2,zero,80192c <__alt_data_end+0xff80192c>
  801a3c:	003fb806 	br	801920 <__alt_data_end+0xff801920>
  801a40:	9809883a 	mov	r4,r19
  801a44:	0804b540 	call	804b54 <finitef>
  801a48:	103f8b26 	beq	r2,zero,801878 <__alt_data_end+0xff801878>
  801a4c:	000b883a 	mov	r5,zero
  801a50:	9809883a 	mov	r4,r19
  801a54:	08059340 	call	805934 <__lesf2>
  801a58:	103f870e 	bge	r2,zero,801878 <__alt_data_end+0xff801878>
  801a5c:	00800044 	movi	r2,1
  801a60:	d8800015 	stw	r2,0(sp)
  801a64:	00802074 	movhi	r2,129
  801a68:	a009883a 	mov	r4,r20
  801a6c:	10960f04 	addi	r2,r2,22588
  801a70:	d8800115 	stw	r2,4(sp)
  801a74:	d8000815 	stw	zero,32(sp)
  801a78:	08088d80 	call	8088d8 <__extendsfdf2>
  801a7c:	9809883a 	mov	r4,r19
  801a80:	d8800215 	stw	r2,8(sp)
  801a84:	d8c00315 	stw	r3,12(sp)
  801a88:	08088d80 	call	8088d8 <__extendsfdf2>
  801a8c:	89000017 	ldw	r4,0(r17)
  801a90:	d8800415 	stw	r2,16(sp)
  801a94:	d8c00515 	stw	r3,20(sp)
  801a98:	d8000615 	stw	zero,24(sp)
  801a9c:	20002626 	beq	r4,zero,801b38 <powf+0x30c>
  801aa0:	00bffc34 	movhi	r2,65520
  801aa4:	d8800715 	stw	r2,28(sp)
  801aa8:	00800084 	movi	r2,2
  801aac:	2080231e 	bne	r4,r2,801b3c <powf+0x310>
  801ab0:	0808bf40 	call	808bf4 <__errno>
  801ab4:	00c00844 	movi	r3,33
  801ab8:	10c00015 	stw	r3,0(r2)
  801abc:	003fdd06 	br	801a34 <__alt_data_end+0xff801a34>
  801ac0:	0808bf40 	call	808bf4 <__errno>
  801ac4:	00c00844 	movi	r3,33
  801ac8:	10c00015 	stw	r3,0(r2)
  801acc:	003f9206 	br	801918 <__alt_data_end+0xff801918>
  801ad0:	a009883a 	mov	r4,r20
  801ad4:	0804b540 	call	804b54 <finitef>
  801ad8:	103fb626 	beq	r2,zero,8019b4 <__alt_data_end+0xff8019b4>
  801adc:	9809883a 	mov	r4,r19
  801ae0:	0804b540 	call	804b54 <finitef>
  801ae4:	103fb326 	beq	r2,zero,8019b4 <__alt_data_end+0xff8019b4>
  801ae8:	8009883a 	mov	r4,r16
  801aec:	0804b6c0 	call	804b6c <__fpclassifyf>
  801af0:	a009883a 	mov	r4,r20
  801af4:	1000191e 	bne	r2,zero,801b5c <powf+0x330>
  801af8:	00800044 	movi	r2,1
  801afc:	d8800015 	stw	r2,0(sp)
  801b00:	00802074 	movhi	r2,129
  801b04:	10960f04 	addi	r2,r2,22588
  801b08:	d8800115 	stw	r2,4(sp)
  801b0c:	d8000815 	stw	zero,32(sp)
  801b10:	08088d80 	call	8088d8 <__extendsfdf2>
  801b14:	9809883a 	mov	r4,r19
  801b18:	d8800215 	stw	r2,8(sp)
  801b1c:	d8c00315 	stw	r3,12(sp)
  801b20:	08088d80 	call	8088d8 <__extendsfdf2>
  801b24:	8c000017 	ldw	r16,0(r17)
  801b28:	d8800415 	stw	r2,16(sp)
  801b2c:	d8c00515 	stw	r3,20(sp)
  801b30:	8000291e 	bne	r16,zero,801bd8 <powf+0x3ac>
  801b34:	d8000615 	stw	zero,24(sp)
  801b38:	d8000715 	stw	zero,28(sp)
  801b3c:	d809883a 	mov	r4,sp
  801b40:	08047b40 	call	8047b4 <matherr>
  801b44:	103fbb1e 	bne	r2,zero,801a34 <__alt_data_end+0xff801a34>
  801b48:	003fd906 	br	801ab0 <__alt_data_end+0xff801ab0>
  801b4c:	0808bf40 	call	808bf4 <__errno>
  801b50:	00c00884 	movi	r3,34
  801b54:	10c00015 	stw	r3,0(r2)
  801b58:	003fb606 	br	801a34 <__alt_data_end+0xff801a34>
  801b5c:	008000c4 	movi	r2,3
  801b60:	d8800015 	stw	r2,0(sp)
  801b64:	00802074 	movhi	r2,129
  801b68:	10960f04 	addi	r2,r2,22588
  801b6c:	d8800115 	stw	r2,4(sp)
  801b70:	d8000815 	stw	zero,32(sp)
  801b74:	08088d80 	call	8088d8 <__extendsfdf2>
  801b78:	9809883a 	mov	r4,r19
  801b7c:	d8800215 	stw	r2,8(sp)
  801b80:	d8c00315 	stw	r3,12(sp)
  801b84:	08088d80 	call	8088d8 <__extendsfdf2>
  801b88:	89000017 	ldw	r4,0(r17)
  801b8c:	d8800415 	stw	r2,16(sp)
  801b90:	d8c00515 	stw	r3,20(sp)
  801b94:	000b883a 	mov	r5,zero
  801b98:	2000191e 	bne	r4,zero,801c00 <powf+0x3d4>
  801b9c:	00b80034 	movhi	r2,57344
  801ba0:	d8800615 	stw	r2,24(sp)
  801ba4:	0091fc34 	movhi	r2,18416
  801ba8:	10bfffc4 	addi	r2,r2,-1
  801bac:	a009883a 	mov	r4,r20
  801bb0:	d8800715 	stw	r2,28(sp)
  801bb4:	08059340 	call	805934 <__lesf2>
  801bb8:	10001b16 	blt	r2,zero,801c28 <powf+0x3fc>
  801bbc:	d809883a 	mov	r4,sp
  801bc0:	08047b40 	call	8047b4 <matherr>
  801bc4:	103f541e 	bne	r2,zero,801918 <__alt_data_end+0xff801918>
  801bc8:	0808bf40 	call	808bf4 <__errno>
  801bcc:	00c00884 	movi	r3,34
  801bd0:	10c00015 	stw	r3,0(r2)
  801bd4:	003f5006 	br	801918 <__alt_data_end+0xff801918>
  801bd8:	000d883a 	mov	r6,zero
  801bdc:	000f883a 	mov	r7,zero
  801be0:	0009883a 	mov	r4,zero
  801be4:	000b883a 	mov	r5,zero
  801be8:	0806d1c0 	call	806d1c <__divdf3>
  801bec:	d8800615 	stw	r2,24(sp)
  801bf0:	d8c00715 	stw	r3,28(sp)
  801bf4:	00800084 	movi	r2,2
  801bf8:	80bfad26 	beq	r16,r2,801ab0 <__alt_data_end+0xff801ab0>
  801bfc:	003fcf06 	br	801b3c <__alt_data_end+0xff801b3c>
  801c00:	009ffc34 	movhi	r2,32752
  801c04:	a009883a 	mov	r4,r20
  801c08:	d8000615 	stw	zero,24(sp)
  801c0c:	d8800715 	stw	r2,28(sp)
  801c10:	08059340 	call	805934 <__lesf2>
  801c14:	10001a16 	blt	r2,zero,801c80 <powf+0x454>
  801c18:	88c00017 	ldw	r3,0(r17)
  801c1c:	00800084 	movi	r2,2
  801c20:	18bfe61e 	bne	r3,r2,801bbc <__alt_data_end+0xff801bbc>
  801c24:	003fe806 	br	801bc8 <__alt_data_end+0xff801bc8>
  801c28:	014fc034 	movhi	r5,16128
  801c2c:	9809883a 	mov	r4,r19
  801c30:	08059fc0 	call	8059fc <__mulsf3>
  801c34:	1009883a 	mov	r4,r2
  801c38:	08088d80 	call	8088d8 <__extendsfdf2>
  801c3c:	1009883a 	mov	r4,r2
  801c40:	180b883a 	mov	r5,r3
  801c44:	1025883a 	mov	r18,r2
  801c48:	1821883a 	mov	r16,r3
  801c4c:	08047bc0 	call	8047bc <rint>
  801c50:	100d883a 	mov	r6,r2
  801c54:	180f883a 	mov	r7,r3
  801c58:	9009883a 	mov	r4,r18
  801c5c:	800b883a 	mov	r5,r16
  801c60:	08076040 	call	807604 <__eqdf2>
  801c64:	103fec26 	beq	r2,zero,801c18 <__alt_data_end+0xff801c18>
  801c68:	00b80034 	movhi	r2,57344
  801c6c:	d8800615 	stw	r2,24(sp)
  801c70:	00b1fc34 	movhi	r2,51184
  801c74:	10bfffc4 	addi	r2,r2,-1
  801c78:	d8800715 	stw	r2,28(sp)
  801c7c:	003fe606 	br	801c18 <__alt_data_end+0xff801c18>
  801c80:	014fc034 	movhi	r5,16128
  801c84:	9809883a 	mov	r4,r19
  801c88:	08059fc0 	call	8059fc <__mulsf3>
  801c8c:	1009883a 	mov	r4,r2
  801c90:	08088d80 	call	8088d8 <__extendsfdf2>
  801c94:	1009883a 	mov	r4,r2
  801c98:	180b883a 	mov	r5,r3
  801c9c:	1025883a 	mov	r18,r2
  801ca0:	1821883a 	mov	r16,r3
  801ca4:	08047bc0 	call	8047bc <rint>
  801ca8:	100d883a 	mov	r6,r2
  801cac:	180f883a 	mov	r7,r3
  801cb0:	9009883a 	mov	r4,r18
  801cb4:	800b883a 	mov	r5,r16
  801cb8:	08076040 	call	807604 <__eqdf2>
  801cbc:	103fd626 	beq	r2,zero,801c18 <__alt_data_end+0xff801c18>
  801cc0:	00bffc34 	movhi	r2,65520
  801cc4:	d8000615 	stw	zero,24(sp)
  801cc8:	d8800715 	stw	r2,28(sp)
  801ccc:	003fd206 	br	801c18 <__alt_data_end+0xff801c18>

00801cd0 <__ieee754_rem_pio2>:
  801cd0:	02200034 	movhi	r8,32768
  801cd4:	deffea04 	addi	sp,sp,-88
  801cd8:	423fffc4 	addi	r8,r8,-1
  801cdc:	00cffa74 	movhi	r3,16361
  801ce0:	ddc01315 	stw	r23,76(sp)
  801ce4:	dc400d15 	stw	r17,52(sp)
  801ce8:	dfc01515 	stw	ra,84(sp)
  801cec:	df001415 	stw	fp,80(sp)
  801cf0:	dd801215 	stw	r22,72(sp)
  801cf4:	dd401115 	stw	r21,68(sp)
  801cf8:	dd001015 	stw	r20,64(sp)
  801cfc:	dcc00f15 	stw	r19,60(sp)
  801d00:	dc800e15 	stw	r18,56(sp)
  801d04:	dc000c15 	stw	r16,48(sp)
  801d08:	2a2e703a 	and	r23,r5,r8
  801d0c:	18c87ec4 	addi	r3,r3,8699
  801d10:	2823883a 	mov	r17,r5
  801d14:	1dc0790e 	bge	r3,r23,801efc <__ieee754_rem_pio2+0x22c>
  801d18:	009000f4 	movhi	r2,16387
  801d1c:	10b65ec4 	addi	r2,r2,-9861
  801d20:	3021883a 	mov	r16,r6
  801d24:	2027883a 	mov	r19,r4
  801d28:	15c02316 	blt	r2,r23,801db8 <__ieee754_rem_pio2+0xe8>
  801d2c:	01cffe74 	movhi	r7,16377
  801d30:	39c87ec4 	addi	r7,r7,8699
  801d34:	01951034 	movhi	r6,21568
  801d38:	01417a0e 	bge	zero,r5,802324 <__ieee754_rem_pio2+0x654>
  801d3c:	0807e800 	call	807e80 <__subdf3>
  801d40:	1025883a 	mov	r18,r2
  801d44:	008ffe74 	movhi	r2,16377
  801d48:	10887ec4 	addi	r2,r2,8699
  801d4c:	1823883a 	mov	r17,r3
  801d50:	b8808426 	beq	r23,r2,801f64 <__ieee754_rem_pio2+0x294>
  801d54:	018698b4 	movhi	r6,6754
  801d58:	01cf7474 	movhi	r7,15825
  801d5c:	3198cc44 	addi	r6,r6,25393
  801d60:	39ed1844 	addi	r7,r7,-19359
  801d64:	9009883a 	mov	r4,r18
  801d68:	180b883a 	mov	r5,r3
  801d6c:	0807e800 	call	807e80 <__subdf3>
  801d70:	100d883a 	mov	r6,r2
  801d74:	180f883a 	mov	r7,r3
  801d78:	9009883a 	mov	r4,r18
  801d7c:	880b883a 	mov	r5,r17
  801d80:	80800015 	stw	r2,0(r16)
  801d84:	80c00115 	stw	r3,4(r16)
  801d88:	0807e800 	call	807e80 <__subdf3>
  801d8c:	018698b4 	movhi	r6,6754
  801d90:	01cf7474 	movhi	r7,15825
  801d94:	3198cc44 	addi	r6,r6,25393
  801d98:	39ed1844 	addi	r7,r7,-19359
  801d9c:	1009883a 	mov	r4,r2
  801da0:	180b883a 	mov	r5,r3
  801da4:	0807e800 	call	807e80 <__subdf3>
  801da8:	80800215 	stw	r2,8(r16)
  801dac:	80c00315 	stw	r3,12(r16)
  801db0:	00800044 	movi	r2,1
  801db4:	00005606 	br	801f10 <__ieee754_rem_pio2+0x240>
  801db8:	00904e74 	movhi	r2,16697
  801dbc:	10887ec4 	addi	r2,r2,8699
  801dc0:	15c0830e 	bge	r2,r23,801fd0 <__ieee754_rem_pio2+0x300>
  801dc4:	009ffc34 	movhi	r2,32752
  801dc8:	10bfffc4 	addi	r2,r2,-1
  801dcc:	15c05c16 	blt	r2,r23,801f40 <__ieee754_rem_pio2+0x270>
  801dd0:	b829d53a 	srai	r20,r23,20
  801dd4:	a53efa84 	addi	r20,r20,-1046
  801dd8:	a024953a 	slli	r18,r20,20
  801ddc:	bca5c83a 	sub	r18,r23,r18
  801de0:	900b883a 	mov	r5,r18
  801de4:	080877c0 	call	80877c <__fixdfsi>
  801de8:	1009883a 	mov	r4,r2
  801dec:	08087fc0 	call	8087fc <__floatsidf>
  801df0:	9809883a 	mov	r4,r19
  801df4:	900b883a 	mov	r5,r18
  801df8:	100d883a 	mov	r6,r2
  801dfc:	180f883a 	mov	r7,r3
  801e00:	d8800215 	stw	r2,8(sp)
  801e04:	d8c00315 	stw	r3,12(sp)
  801e08:	0807e800 	call	807e80 <__subdf3>
  801e0c:	000d883a 	mov	r6,zero
  801e10:	01d05c34 	movhi	r7,16752
  801e14:	1009883a 	mov	r4,r2
  801e18:	180b883a 	mov	r5,r3
  801e1c:	08077680 	call	807768 <__muldf3>
  801e20:	180b883a 	mov	r5,r3
  801e24:	1009883a 	mov	r4,r2
  801e28:	182b883a 	mov	r21,r3
  801e2c:	102d883a 	mov	r22,r2
  801e30:	080877c0 	call	80877c <__fixdfsi>
  801e34:	1009883a 	mov	r4,r2
  801e38:	08087fc0 	call	8087fc <__floatsidf>
  801e3c:	100d883a 	mov	r6,r2
  801e40:	180f883a 	mov	r7,r3
  801e44:	b009883a 	mov	r4,r22
  801e48:	a80b883a 	mov	r5,r21
  801e4c:	1027883a 	mov	r19,r2
  801e50:	1825883a 	mov	r18,r3
  801e54:	d8800415 	stw	r2,16(sp)
  801e58:	d8c00515 	stw	r3,20(sp)
  801e5c:	0807e800 	call	807e80 <__subdf3>
  801e60:	000d883a 	mov	r6,zero
  801e64:	01d05c34 	movhi	r7,16752
  801e68:	1009883a 	mov	r4,r2
  801e6c:	180b883a 	mov	r5,r3
  801e70:	08077680 	call	807768 <__muldf3>
  801e74:	000d883a 	mov	r6,zero
  801e78:	000f883a 	mov	r7,zero
  801e7c:	1009883a 	mov	r4,r2
  801e80:	180b883a 	mov	r5,r3
  801e84:	d8800615 	stw	r2,24(sp)
  801e88:	d8c00715 	stw	r3,28(sp)
  801e8c:	08076040 	call	807604 <__eqdf2>
  801e90:	1001431e 	bne	r2,zero,8023a0 <__ieee754_rem_pio2+0x6d0>
  801e94:	000f883a 	mov	r7,zero
  801e98:	000d883a 	mov	r6,zero
  801e9c:	9809883a 	mov	r4,r19
  801ea0:	900b883a 	mov	r5,r18
  801ea4:	08076040 	call	807604 <__eqdf2>
  801ea8:	100f003a 	cmpeq	r7,r2,zero
  801eac:	00800084 	movi	r2,2
  801eb0:	11cfc83a 	sub	r7,r2,r7
  801eb4:	00800084 	movi	r2,2
  801eb8:	d8800015 	stw	r2,0(sp)
  801ebc:	00802074 	movhi	r2,129
  801ec0:	10963104 	addi	r2,r2,22724
  801ec4:	d8800115 	stw	r2,4(sp)
  801ec8:	a00d883a 	mov	r6,r20
  801ecc:	800b883a 	mov	r5,r16
  801ed0:	d9000204 	addi	r4,sp,8
  801ed4:	08035580 	call	803558 <__kernel_rem_pio2>
  801ed8:	88000d0e 	bge	r17,zero,801f10 <__ieee754_rem_pio2+0x240>
  801edc:	81000117 	ldw	r4,4(r16)
  801ee0:	80c00317 	ldw	r3,12(r16)
  801ee4:	0085c83a 	sub	r2,zero,r2
  801ee8:	2120003c 	xorhi	r4,r4,32768
  801eec:	18e0003c 	xorhi	r3,r3,32768
  801ef0:	81000115 	stw	r4,4(r16)
  801ef4:	80c00315 	stw	r3,12(r16)
  801ef8:	00000506 	br	801f10 <__ieee754_rem_pio2+0x240>
  801efc:	31000015 	stw	r4,0(r6)
  801f00:	31400115 	stw	r5,4(r6)
  801f04:	30000215 	stw	zero,8(r6)
  801f08:	30000315 	stw	zero,12(r6)
  801f0c:	0005883a 	mov	r2,zero
  801f10:	dfc01517 	ldw	ra,84(sp)
  801f14:	df001417 	ldw	fp,80(sp)
  801f18:	ddc01317 	ldw	r23,76(sp)
  801f1c:	dd801217 	ldw	r22,72(sp)
  801f20:	dd401117 	ldw	r21,68(sp)
  801f24:	dd001017 	ldw	r20,64(sp)
  801f28:	dcc00f17 	ldw	r19,60(sp)
  801f2c:	dc800e17 	ldw	r18,56(sp)
  801f30:	dc400d17 	ldw	r17,52(sp)
  801f34:	dc000c17 	ldw	r16,48(sp)
  801f38:	dec01604 	addi	sp,sp,88
  801f3c:	f800283a 	ret
  801f40:	200d883a 	mov	r6,r4
  801f44:	280f883a 	mov	r7,r5
  801f48:	0807e800 	call	807e80 <__subdf3>
  801f4c:	80800215 	stw	r2,8(r16)
  801f50:	80800015 	stw	r2,0(r16)
  801f54:	80c00315 	stw	r3,12(r16)
  801f58:	80c00115 	stw	r3,4(r16)
  801f5c:	0005883a 	mov	r2,zero
  801f60:	003feb06 	br	801f10 <__alt_data_end+0xff801f10>
  801f64:	01cf7474 	movhi	r7,15825
  801f68:	9009883a 	mov	r4,r18
  801f6c:	39ed1844 	addi	r7,r7,-19359
  801f70:	01869834 	movhi	r6,6752
  801f74:	180b883a 	mov	r5,r3
  801f78:	0807e800 	call	807e80 <__subdf3>
  801f7c:	018b80f4 	movhi	r6,11779
  801f80:	01cee8f4 	movhi	r7,15267
  801f84:	319c1cc4 	addi	r6,r6,28787
  801f88:	39c66284 	addi	r7,r7,6538
  801f8c:	1009883a 	mov	r4,r2
  801f90:	180b883a 	mov	r5,r3
  801f94:	1025883a 	mov	r18,r2
  801f98:	1823883a 	mov	r17,r3
  801f9c:	0807e800 	call	807e80 <__subdf3>
  801fa0:	100d883a 	mov	r6,r2
  801fa4:	180f883a 	mov	r7,r3
  801fa8:	9009883a 	mov	r4,r18
  801fac:	880b883a 	mov	r5,r17
  801fb0:	80800015 	stw	r2,0(r16)
  801fb4:	80c00115 	stw	r3,4(r16)
  801fb8:	0807e800 	call	807e80 <__subdf3>
  801fbc:	018b80f4 	movhi	r6,11779
  801fc0:	01cee8f4 	movhi	r7,15267
  801fc4:	319c1cc4 	addi	r6,r6,28787
  801fc8:	39c66284 	addi	r7,r7,6538
  801fcc:	003f7306 	br	801d9c <__alt_data_end+0xff801d9c>
  801fd0:	08045b40 	call	8045b4 <fabs>
  801fd4:	019b72b4 	movhi	r6,28106
  801fd8:	01cff934 	movhi	r7,16356
  801fdc:	31b220c4 	addi	r6,r6,-14205
  801fe0:	39d7cc04 	addi	r7,r7,24368
  801fe4:	1009883a 	mov	r4,r2
  801fe8:	180b883a 	mov	r5,r3
  801fec:	102d883a 	mov	r22,r2
  801ff0:	182b883a 	mov	r21,r3
  801ff4:	08077680 	call	807768 <__muldf3>
  801ff8:	000d883a 	mov	r6,zero
  801ffc:	01cff834 	movhi	r7,16352
  802000:	1009883a 	mov	r4,r2
  802004:	180b883a 	mov	r5,r3
  802008:	08064700 	call	806470 <__adddf3>
  80200c:	180b883a 	mov	r5,r3
  802010:	1009883a 	mov	r4,r2
  802014:	080877c0 	call	80877c <__fixdfsi>
  802018:	1009883a 	mov	r4,r2
  80201c:	1025883a 	mov	r18,r2
  802020:	08087fc0 	call	8087fc <__floatsidf>
  802024:	01cffe74 	movhi	r7,16377
  802028:	39c87ec4 	addi	r7,r7,8699
  80202c:	01951034 	movhi	r6,21568
  802030:	1009883a 	mov	r4,r2
  802034:	180b883a 	mov	r5,r3
  802038:	1029883a 	mov	r20,r2
  80203c:	1827883a 	mov	r19,r3
  802040:	08077680 	call	807768 <__muldf3>
  802044:	b009883a 	mov	r4,r22
  802048:	a80b883a 	mov	r5,r21
  80204c:	100d883a 	mov	r6,r2
  802050:	180f883a 	mov	r7,r3
  802054:	0807e800 	call	807e80 <__subdf3>
  802058:	018698b4 	movhi	r6,6754
  80205c:	01cf7474 	movhi	r7,15825
  802060:	a009883a 	mov	r4,r20
  802064:	3198cc44 	addi	r6,r6,25393
  802068:	39ed1844 	addi	r7,r7,-19359
  80206c:	980b883a 	mov	r5,r19
  802070:	1039883a 	mov	fp,r2
  802074:	d8c00815 	stw	r3,32(sp)
  802078:	08077680 	call	807768 <__muldf3>
  80207c:	010007c4 	movi	r4,31
  802080:	e017883a 	mov	r11,fp
  802084:	da800817 	ldw	r10,32(sp)
  802088:	102d883a 	mov	r22,r2
  80208c:	182b883a 	mov	r21,r3
  802090:	24802816 	blt	r4,r18,802134 <__ieee754_rem_pio2+0x464>
  802094:	913fffc4 	addi	r4,r18,-1
  802098:	2109883a 	add	r4,r4,r4
  80209c:	01402074 	movhi	r5,129
  8020a0:	2109883a 	add	r4,r4,r4
  8020a4:	29561104 	addi	r5,r5,22596
  8020a8:	2909883a 	add	r4,r5,r4
  8020ac:	21000017 	ldw	r4,0(r4)
  8020b0:	b9002026 	beq	r23,r4,802134 <__ieee754_rem_pio2+0x464>
  8020b4:	100d883a 	mov	r6,r2
  8020b8:	180f883a 	mov	r7,r3
  8020bc:	e009883a 	mov	r4,fp
  8020c0:	500b883a 	mov	r5,r10
  8020c4:	da800b15 	stw	r10,44(sp)
  8020c8:	df000a15 	stw	fp,40(sp)
  8020cc:	0807e800 	call	807e80 <__subdf3>
  8020d0:	da800b17 	ldw	r10,44(sp)
  8020d4:	dac00a17 	ldw	r11,40(sp)
  8020d8:	1019883a 	mov	r12,r2
  8020dc:	1813883a 	mov	r9,r3
  8020e0:	80800015 	stw	r2,0(r16)
  8020e4:	80c00115 	stw	r3,4(r16)
  8020e8:	600d883a 	mov	r6,r12
  8020ec:	480f883a 	mov	r7,r9
  8020f0:	5809883a 	mov	r4,r11
  8020f4:	500b883a 	mov	r5,r10
  8020f8:	da400b15 	stw	r9,44(sp)
  8020fc:	db000a15 	stw	r12,40(sp)
  802100:	0807e800 	call	807e80 <__subdf3>
  802104:	b00d883a 	mov	r6,r22
  802108:	a80f883a 	mov	r7,r21
  80210c:	1009883a 	mov	r4,r2
  802110:	180b883a 	mov	r5,r3
  802114:	0807e800 	call	807e80 <__subdf3>
  802118:	80800215 	stw	r2,8(r16)
  80211c:	80c00315 	stw	r3,12(r16)
  802120:	da400b17 	ldw	r9,44(sp)
  802124:	db000a17 	ldw	r12,40(sp)
  802128:	88009f16 	blt	r17,zero,8023a8 <__ieee754_rem_pio2+0x6d8>
  80212c:	9005883a 	mov	r2,r18
  802130:	003f7706 	br	801f10 <__alt_data_end+0xff801f10>
  802134:	d9400817 	ldw	r5,32(sp)
  802138:	100d883a 	mov	r6,r2
  80213c:	180f883a 	mov	r7,r3
  802140:	e009883a 	mov	r4,fp
  802144:	da800b15 	stw	r10,44(sp)
  802148:	dac00a15 	stw	r11,40(sp)
  80214c:	0807e800 	call	807e80 <__subdf3>
  802150:	1019883a 	mov	r12,r2
  802154:	1804d53a 	srli	r2,r3,20
  802158:	b811d53a 	srai	r8,r23,20
  80215c:	1813883a 	mov	r9,r3
  802160:	1081ffcc 	andi	r2,r2,2047
  802164:	80c00115 	stw	r3,4(r16)
  802168:	83000015 	stw	r12,0(r16)
  80216c:	4085c83a 	sub	r2,r8,r2
  802170:	00c00404 	movi	r3,16
  802174:	da800b17 	ldw	r10,44(sp)
  802178:	dac00a17 	ldw	r11,40(sp)
  80217c:	18bfda0e 	bge	r3,r2,8020e8 <__alt_data_end+0xff8020e8>
  802180:	01cf7474 	movhi	r7,15825
  802184:	39ed1844 	addi	r7,r7,-19359
  802188:	01869834 	movhi	r6,6752
  80218c:	a009883a 	mov	r4,r20
  802190:	980b883a 	mov	r5,r19
  802194:	da000a15 	stw	r8,40(sp)
  802198:	08077680 	call	807768 <__muldf3>
  80219c:	d9400817 	ldw	r5,32(sp)
  8021a0:	100d883a 	mov	r6,r2
  8021a4:	180f883a 	mov	r7,r3
  8021a8:	e009883a 	mov	r4,fp
  8021ac:	102d883a 	mov	r22,r2
  8021b0:	182b883a 	mov	r21,r3
  8021b4:	0807e800 	call	807e80 <__subdf3>
  8021b8:	d9400817 	ldw	r5,32(sp)
  8021bc:	100d883a 	mov	r6,r2
  8021c0:	180f883a 	mov	r7,r3
  8021c4:	e009883a 	mov	r4,fp
  8021c8:	182f883a 	mov	r23,r3
  8021cc:	d8800915 	stw	r2,36(sp)
  8021d0:	0807e800 	call	807e80 <__subdf3>
  8021d4:	b00d883a 	mov	r6,r22
  8021d8:	a80f883a 	mov	r7,r21
  8021dc:	1009883a 	mov	r4,r2
  8021e0:	180b883a 	mov	r5,r3
  8021e4:	0807e800 	call	807e80 <__subdf3>
  8021e8:	018b80f4 	movhi	r6,11779
  8021ec:	01cee8f4 	movhi	r7,15267
  8021f0:	319c1cc4 	addi	r6,r6,28787
  8021f4:	39c66284 	addi	r7,r7,6538
  8021f8:	a009883a 	mov	r4,r20
  8021fc:	980b883a 	mov	r5,r19
  802200:	102d883a 	mov	r22,r2
  802204:	182b883a 	mov	r21,r3
  802208:	08077680 	call	807768 <__muldf3>
  80220c:	b00d883a 	mov	r6,r22
  802210:	a80f883a 	mov	r7,r21
  802214:	1009883a 	mov	r4,r2
  802218:	180b883a 	mov	r5,r3
  80221c:	0807e800 	call	807e80 <__subdf3>
  802220:	d9000917 	ldw	r4,36(sp)
  802224:	100d883a 	mov	r6,r2
  802228:	180f883a 	mov	r7,r3
  80222c:	b80b883a 	mov	r5,r23
  802230:	102d883a 	mov	r22,r2
  802234:	182b883a 	mov	r21,r3
  802238:	0807e800 	call	807e80 <__subdf3>
  80223c:	1019883a 	mov	r12,r2
  802240:	1804d53a 	srli	r2,r3,20
  802244:	da000a17 	ldw	r8,40(sp)
  802248:	83000015 	stw	r12,0(r16)
  80224c:	1081ffcc 	andi	r2,r2,2047
  802250:	4091c83a 	sub	r8,r8,r2
  802254:	80c00115 	stw	r3,4(r16)
  802258:	00800c44 	movi	r2,49
  80225c:	1813883a 	mov	r9,r3
  802260:	1200730e 	bge	r2,r8,802430 <__ieee754_rem_pio2+0x760>
  802264:	01cee8f4 	movhi	r7,15267
  802268:	39c66284 	addi	r7,r7,6538
  80226c:	018b8034 	movhi	r6,11776
  802270:	a009883a 	mov	r4,r20
  802274:	980b883a 	mov	r5,r19
  802278:	08077680 	call	807768 <__muldf3>
  80227c:	d9000917 	ldw	r4,36(sp)
  802280:	100d883a 	mov	r6,r2
  802284:	180f883a 	mov	r7,r3
  802288:	b80b883a 	mov	r5,r23
  80228c:	102d883a 	mov	r22,r2
  802290:	182b883a 	mov	r21,r3
  802294:	0807e800 	call	807e80 <__subdf3>
  802298:	d9000917 	ldw	r4,36(sp)
  80229c:	100d883a 	mov	r6,r2
  8022a0:	180f883a 	mov	r7,r3
  8022a4:	b80b883a 	mov	r5,r23
  8022a8:	d8c00b15 	stw	r3,44(sp)
  8022ac:	d8800a15 	stw	r2,40(sp)
  8022b0:	0807e800 	call	807e80 <__subdf3>
  8022b4:	b00d883a 	mov	r6,r22
  8022b8:	a80f883a 	mov	r7,r21
  8022bc:	1009883a 	mov	r4,r2
  8022c0:	180b883a 	mov	r5,r3
  8022c4:	0807e800 	call	807e80 <__subdf3>
  8022c8:	01894834 	movhi	r6,9504
  8022cc:	01ce5f34 	movhi	r7,14716
  8022d0:	31927044 	addi	r6,r6,18881
  8022d4:	39e0e684 	addi	r7,r7,-31846
  8022d8:	a009883a 	mov	r4,r20
  8022dc:	980b883a 	mov	r5,r19
  8022e0:	102d883a 	mov	r22,r2
  8022e4:	182b883a 	mov	r21,r3
  8022e8:	08077680 	call	807768 <__muldf3>
  8022ec:	b00d883a 	mov	r6,r22
  8022f0:	a80f883a 	mov	r7,r21
  8022f4:	1009883a 	mov	r4,r2
  8022f8:	180b883a 	mov	r5,r3
  8022fc:	0807e800 	call	807e80 <__subdf3>
  802300:	dac00a17 	ldw	r11,40(sp)
  802304:	da800b17 	ldw	r10,44(sp)
  802308:	102d883a 	mov	r22,r2
  80230c:	182b883a 	mov	r21,r3
  802310:	100d883a 	mov	r6,r2
  802314:	180f883a 	mov	r7,r3
  802318:	5809883a 	mov	r4,r11
  80231c:	500b883a 	mov	r5,r10
  802320:	003f6a06 	br	8020cc <__alt_data_end+0xff8020cc>
  802324:	08064700 	call	806470 <__adddf3>
  802328:	1025883a 	mov	r18,r2
  80232c:	008ffe74 	movhi	r2,16377
  802330:	10887ec4 	addi	r2,r2,8699
  802334:	1823883a 	mov	r17,r3
  802338:	b8802226 	beq	r23,r2,8023c4 <__ieee754_rem_pio2+0x6f4>
  80233c:	018698b4 	movhi	r6,6754
  802340:	01cf7474 	movhi	r7,15825
  802344:	3198cc44 	addi	r6,r6,25393
  802348:	39ed1844 	addi	r7,r7,-19359
  80234c:	9009883a 	mov	r4,r18
  802350:	180b883a 	mov	r5,r3
  802354:	08064700 	call	806470 <__adddf3>
  802358:	100d883a 	mov	r6,r2
  80235c:	180f883a 	mov	r7,r3
  802360:	9009883a 	mov	r4,r18
  802364:	880b883a 	mov	r5,r17
  802368:	80800015 	stw	r2,0(r16)
  80236c:	80c00115 	stw	r3,4(r16)
  802370:	0807e800 	call	807e80 <__subdf3>
  802374:	018698b4 	movhi	r6,6754
  802378:	01cf7474 	movhi	r7,15825
  80237c:	3198cc44 	addi	r6,r6,25393
  802380:	39ed1844 	addi	r7,r7,-19359
  802384:	1009883a 	mov	r4,r2
  802388:	180b883a 	mov	r5,r3
  80238c:	08064700 	call	806470 <__adddf3>
  802390:	80800215 	stw	r2,8(r16)
  802394:	80c00315 	stw	r3,12(r16)
  802398:	00bfffc4 	movi	r2,-1
  80239c:	003edc06 	br	801f10 <__alt_data_end+0xff801f10>
  8023a0:	01c000c4 	movi	r7,3
  8023a4:	003ec306 	br	801eb4 <__alt_data_end+0xff801eb4>
  8023a8:	4a60003c 	xorhi	r9,r9,32768
  8023ac:	18e0003c 	xorhi	r3,r3,32768
  8023b0:	83000015 	stw	r12,0(r16)
  8023b4:	82400115 	stw	r9,4(r16)
  8023b8:	80c00315 	stw	r3,12(r16)
  8023bc:	0485c83a 	sub	r2,zero,r18
  8023c0:	003ed306 	br	801f10 <__alt_data_end+0xff801f10>
  8023c4:	01cf7474 	movhi	r7,15825
  8023c8:	9009883a 	mov	r4,r18
  8023cc:	39ed1844 	addi	r7,r7,-19359
  8023d0:	01869834 	movhi	r6,6752
  8023d4:	180b883a 	mov	r5,r3
  8023d8:	08064700 	call	806470 <__adddf3>
  8023dc:	018b80f4 	movhi	r6,11779
  8023e0:	01cee8f4 	movhi	r7,15267
  8023e4:	319c1cc4 	addi	r6,r6,28787
  8023e8:	39c66284 	addi	r7,r7,6538
  8023ec:	1009883a 	mov	r4,r2
  8023f0:	180b883a 	mov	r5,r3
  8023f4:	1025883a 	mov	r18,r2
  8023f8:	1823883a 	mov	r17,r3
  8023fc:	08064700 	call	806470 <__adddf3>
  802400:	100d883a 	mov	r6,r2
  802404:	180f883a 	mov	r7,r3
  802408:	9009883a 	mov	r4,r18
  80240c:	880b883a 	mov	r5,r17
  802410:	80800015 	stw	r2,0(r16)
  802414:	80c00115 	stw	r3,4(r16)
  802418:	0807e800 	call	807e80 <__subdf3>
  80241c:	018b80f4 	movhi	r6,11779
  802420:	01cee8f4 	movhi	r7,15267
  802424:	319c1cc4 	addi	r6,r6,28787
  802428:	39c66284 	addi	r7,r7,6538
  80242c:	003fd506 	br	802384 <__alt_data_end+0xff802384>
  802430:	dac00917 	ldw	r11,36(sp)
  802434:	b815883a 	mov	r10,r23
  802438:	003f2b06 	br	8020e8 <__alt_data_end+0xff8020e8>

0080243c <__ieee754_powf>:
  80243c:	00a00034 	movhi	r2,32768
  802440:	defff104 	addi	sp,sp,-60
  802444:	10bfffc4 	addi	r2,r2,-1
  802448:	dc800715 	stw	r18,28(sp)
  80244c:	dfc00e15 	stw	ra,56(sp)
  802450:	df000d15 	stw	fp,52(sp)
  802454:	ddc00c15 	stw	r23,48(sp)
  802458:	dd800b15 	stw	r22,44(sp)
  80245c:	dd400a15 	stw	r21,40(sp)
  802460:	dd000915 	stw	r20,36(sp)
  802464:	dcc00815 	stw	r19,32(sp)
  802468:	dc400615 	stw	r17,24(sp)
  80246c:	dc000515 	stw	r16,20(sp)
  802470:	1164703a 	and	r18,r2,r5
  802474:	90003426 	beq	r18,zero,802548 <__ieee754_powf+0x10c>
  802478:	1126703a 	and	r19,r2,r4
  80247c:	009fe034 	movhi	r2,32640
  802480:	2021883a 	mov	r16,r4
  802484:	202b883a 	mov	r21,r4
  802488:	14c00e0e 	bge	r2,r19,8024c4 <__ieee754_powf+0x88>
  80248c:	01002074 	movhi	r4,129
  802490:	2116d504 	addi	r4,r4,23380
  802494:	dfc00e17 	ldw	ra,56(sp)
  802498:	df000d17 	ldw	fp,52(sp)
  80249c:	ddc00c17 	ldw	r23,48(sp)
  8024a0:	dd800b17 	ldw	r22,44(sp)
  8024a4:	dd400a17 	ldw	r21,40(sp)
  8024a8:	dd000917 	ldw	r20,36(sp)
  8024ac:	dcc00817 	ldw	r19,32(sp)
  8024b0:	dc800717 	ldw	r18,28(sp)
  8024b4:	dc400617 	ldw	r17,24(sp)
  8024b8:	dc000517 	ldw	r16,20(sp)
  8024bc:	dec00f04 	addi	sp,sp,60
  8024c0:	0804bc41 	jmpi	804bc4 <nanf>
  8024c4:	14802d16 	blt	r2,r18,80257c <__ieee754_powf+0x140>
  8024c8:	2823883a 	mov	r17,r5
  8024cc:	2829883a 	mov	r20,r5
  8024d0:	20004216 	blt	r4,zero,8025dc <__ieee754_powf+0x1a0>
  8024d4:	002d883a 	mov	r22,zero
  8024d8:	009fe034 	movhi	r2,32640
  8024dc:	90803926 	beq	r18,r2,8025c4 <__ieee754_powf+0x188>
  8024e0:	008fe034 	movhi	r2,16256
  8024e4:	90804b26 	beq	r18,r2,802614 <__ieee754_powf+0x1d8>
  8024e8:	00900034 	movhi	r2,16384
  8024ec:	a0805926 	beq	r20,r2,802654 <__ieee754_powf+0x218>
  8024f0:	008fc034 	movhi	r2,16128
  8024f4:	8009883a 	mov	r4,r16
  8024f8:	a0802426 	beq	r20,r2,80258c <__ieee754_powf+0x150>
  8024fc:	0804b440 	call	804b44 <fabsf>
  802500:	1009883a 	mov	r4,r2
  802504:	009fe034 	movhi	r2,32640
  802508:	98804526 	beq	r19,r2,802620 <__ieee754_powf+0x1e4>
  80250c:	98004426 	beq	r19,zero,802620 <__ieee754_powf+0x1e4>
  802510:	014fe034 	movhi	r5,16256
  802514:	99404226 	beq	r19,r5,802620 <__ieee754_powf+0x1e4>
  802518:	802ad7fa 	srli	r21,r16,31
  80251c:	ad7fffc4 	addi	r21,r21,-1
  802520:	b544b03a 	or	r2,r22,r21
  802524:	10006726 	beq	r2,zero,8026c4 <__ieee754_powf+0x288>
  802528:	00934034 	movhi	r2,19712
  80252c:	14806c0e 	bge	r2,r18,8026e0 <__ieee754_powf+0x2a4>
  802530:	008fe034 	movhi	r2,16256
  802534:	10bffdc4 	addi	r2,r2,-9
  802538:	14c1f816 	blt	r2,r19,802d1c <__ieee754_powf+0x8e0>
  80253c:	a001fb16 	blt	r20,zero,802d2c <__ieee754_powf+0x8f0>
  802540:	0005883a 	mov	r2,zero
  802544:	00000106 	br	80254c <__ieee754_powf+0x110>
  802548:	008fe034 	movhi	r2,16256
  80254c:	dfc00e17 	ldw	ra,56(sp)
  802550:	df000d17 	ldw	fp,52(sp)
  802554:	ddc00c17 	ldw	r23,48(sp)
  802558:	dd800b17 	ldw	r22,44(sp)
  80255c:	dd400a17 	ldw	r21,40(sp)
  802560:	dd000917 	ldw	r20,36(sp)
  802564:	dcc00817 	ldw	r19,32(sp)
  802568:	dc800717 	ldw	r18,28(sp)
  80256c:	dc400617 	ldw	r17,24(sp)
  802570:	dc000517 	ldw	r16,20(sp)
  802574:	dec00f04 	addi	sp,sp,60
  802578:	f800283a 	ret
  80257c:	00cfe034 	movhi	r3,16256
  802580:	9805883a 	mov	r2,r19
  802584:	98fff126 	beq	r19,r3,80254c <__alt_data_end+0xff80254c>
  802588:	003fc006 	br	80248c <__alt_data_end+0xff80248c>
  80258c:	a800350e 	bge	r21,zero,802664 <__ieee754_powf+0x228>
  802590:	0804b440 	call	804b44 <fabsf>
  802594:	1009883a 	mov	r4,r2
  802598:	009fe034 	movhi	r2,32640
  80259c:	98800126 	beq	r19,r2,8025a4 <__ieee754_powf+0x168>
  8025a0:	983fdb1e 	bne	r19,zero,802510 <__alt_data_end+0xff802510>
  8025a4:	00b02034 	movhi	r2,49280
  8025a8:	9885883a 	add	r2,r19,r2
  8025ac:	1584b03a 	or	r2,r2,r22
  8025b0:	10003e26 	beq	r2,zero,8026ac <__ieee754_powf+0x270>
  8025b4:	00800044 	movi	r2,1
  8025b8:	b081cf26 	beq	r22,r2,802cf8 <__ieee754_powf+0x8bc>
  8025bc:	2005883a 	mov	r2,r4
  8025c0:	003fe206 	br	80254c <__alt_data_end+0xff80254c>
  8025c4:	008fe034 	movhi	r2,16256
  8025c8:	98803226 	beq	r19,r2,802694 <__ieee754_powf+0x258>
  8025cc:	14c01e0e 	bge	r2,r19,802648 <__ieee754_powf+0x20c>
  8025d0:	a03fdb16 	blt	r20,zero,802540 <__alt_data_end+0xff802540>
  8025d4:	8805883a 	mov	r2,r17
  8025d8:	003fdc06 	br	80254c <__alt_data_end+0xff80254c>
  8025dc:	0092e034 	movhi	r2,19328
  8025e0:	10bfffc4 	addi	r2,r2,-1
  8025e4:	14801616 	blt	r2,r18,802640 <__ieee754_powf+0x204>
  8025e8:	008fe034 	movhi	r2,16256
  8025ec:	10bfffc4 	addi	r2,r2,-1
  8025f0:	1480060e 	bge	r2,r18,80260c <__ieee754_powf+0x1d0>
  8025f4:	9005d5fa 	srai	r2,r18,23
  8025f8:	00c02584 	movi	r3,150
  8025fc:	1885c83a 	sub	r2,r3,r2
  802600:	9087d83a 	sra	r3,r18,r2
  802604:	1884983a 	sll	r2,r3,r2
  802608:	9081b526 	beq	r18,r2,802ce0 <__ieee754_powf+0x8a4>
  80260c:	002d883a 	mov	r22,zero
  802610:	003fb306 	br	8024e0 <__alt_data_end+0xff8024e0>
  802614:	a0002116 	blt	r20,zero,80269c <__ieee754_powf+0x260>
  802618:	8005883a 	mov	r2,r16
  80261c:	003fcb06 	br	80254c <__alt_data_end+0xff80254c>
  802620:	a000040e 	bge	r20,zero,802634 <__ieee754_powf+0x1f8>
  802624:	200b883a 	mov	r5,r4
  802628:	010fe034 	movhi	r4,16256
  80262c:	08053c00 	call	8053c0 <__divsf3>
  802630:	1009883a 	mov	r4,r2
  802634:	2005883a 	mov	r2,r4
  802638:	a83fc40e 	bge	r21,zero,80254c <__alt_data_end+0xff80254c>
  80263c:	003fd906 	br	8025a4 <__alt_data_end+0xff8025a4>
  802640:	05800084 	movi	r22,2
  802644:	003fa406 	br	8024d8 <__alt_data_end+0xff8024d8>
  802648:	a03fbd0e 	bge	r20,zero,802540 <__alt_data_end+0xff802540>
  80264c:	88a0003c 	xorhi	r2,r17,32768
  802650:	003fbe06 	br	80254c <__alt_data_end+0xff80254c>
  802654:	800b883a 	mov	r5,r16
  802658:	8009883a 	mov	r4,r16
  80265c:	08059fc0 	call	8059fc <__mulsf3>
  802660:	003fba06 	br	80254c <__alt_data_end+0xff80254c>
  802664:	dfc00e17 	ldw	ra,56(sp)
  802668:	df000d17 	ldw	fp,52(sp)
  80266c:	ddc00c17 	ldw	r23,48(sp)
  802670:	dd800b17 	ldw	r22,44(sp)
  802674:	dd400a17 	ldw	r21,40(sp)
  802678:	dd000917 	ldw	r20,36(sp)
  80267c:	dcc00817 	ldw	r19,32(sp)
  802680:	dc800717 	ldw	r18,28(sp)
  802684:	dc400617 	ldw	r17,24(sp)
  802688:	dc000517 	ldw	r16,20(sp)
  80268c:	dec00f04 	addi	sp,sp,60
  802690:	0802f601 	jmpi	802f60 <__ieee754_sqrtf>
  802694:	9805883a 	mov	r2,r19
  802698:	003fac06 	br	80254c <__alt_data_end+0xff80254c>
  80269c:	800b883a 	mov	r5,r16
  8026a0:	9009883a 	mov	r4,r18
  8026a4:	08053c00 	call	8053c0 <__divsf3>
  8026a8:	003fa806 	br	80254c <__alt_data_end+0xff80254c>
  8026ac:	200b883a 	mov	r5,r4
  8026b0:	0805df80 	call	805df8 <__subsf3>
  8026b4:	100b883a 	mov	r5,r2
  8026b8:	1009883a 	mov	r4,r2
  8026bc:	08053c00 	call	8053c0 <__divsf3>
  8026c0:	003fa206 	br	80254c <__alt_data_end+0xff80254c>
  8026c4:	800b883a 	mov	r5,r16
  8026c8:	8009883a 	mov	r4,r16
  8026cc:	0805df80 	call	805df8 <__subsf3>
  8026d0:	100b883a 	mov	r5,r2
  8026d4:	1009883a 	mov	r4,r2
  8026d8:	08053c00 	call	8053c0 <__divsf3>
  8026dc:	003f9b06 	br	80254c <__alt_data_end+0xff80254c>
  8026e0:	00802034 	movhi	r2,128
  8026e4:	10bfffc4 	addi	r2,r2,-1
  8026e8:	14c18a16 	blt	r2,r19,802d14 <__ieee754_powf+0x8d8>
  8026ec:	0152e034 	movhi	r5,19328
  8026f0:	08059fc0 	call	8059fc <__mulsf3>
  8026f4:	1027883a 	mov	r19,r2
  8026f8:	01bffa04 	movi	r6,-24
  8026fc:	9807d5fa 	srai	r3,r19,23
  802700:	00802034 	movhi	r2,128
  802704:	10bfffc4 	addi	r2,r2,-1
  802708:	18ffe044 	addi	r3,r3,-127
  80270c:	198d883a 	add	r6,r3,r6
  802710:	00c00774 	movhi	r3,29
  802714:	9884703a 	and	r2,r19,r2
  802718:	18f11c44 	addi	r3,r3,-15247
  80271c:	140fe034 	orhi	r16,r2,16256
  802720:	1881770e 	bge	r3,r2,802d00 <__ieee754_powf+0x8c4>
  802724:	00c017b4 	movhi	r3,94
  802728:	18ecf584 	addi	r3,r3,-19498
  80272c:	1881fc0e 	bge	r3,r2,802f20 <__ieee754_powf+0xae4>
  802730:	00bfe034 	movhi	r2,65408
  802734:	31800044 	addi	r6,r6,1
  802738:	80a1883a 	add	r16,r16,r2
  80273c:	d8000015 	stw	zero,0(sp)
  802740:	0011883a 	mov	r8,zero
  802744:	0007883a 	mov	r3,zero
  802748:	050fe034 	movhi	r20,16256
  80274c:	a00b883a 	mov	r5,r20
  802750:	8009883a 	mov	r4,r16
  802754:	d9800415 	stw	r6,16(sp)
  802758:	da000315 	stw	r8,12(sp)
  80275c:	d8c00115 	stw	r3,4(sp)
  802760:	0805df80 	call	805df8 <__subsf3>
  802764:	a00b883a 	mov	r5,r20
  802768:	8009883a 	mov	r4,r16
  80276c:	1039883a 	mov	fp,r2
  802770:	0804ef80 	call	804ef8 <__addsf3>
  802774:	100b883a 	mov	r5,r2
  802778:	010fe034 	movhi	r4,16256
  80277c:	08053c00 	call	8053c0 <__divsf3>
  802780:	e009883a 	mov	r4,fp
  802784:	100b883a 	mov	r5,r2
  802788:	d8800215 	stw	r2,8(sp)
  80278c:	08059fc0 	call	8059fc <__mulsf3>
  802790:	102f883a 	mov	r23,r2
  802794:	8005d07a 	srai	r2,r16,1
  802798:	d8c00117 	ldw	r3,4(sp)
  80279c:	04bc0004 	movi	r18,-4096
  8027a0:	11080034 	orhi	r4,r2,8192
  8027a4:	00800134 	movhi	r2,4
  8027a8:	2085883a 	add	r2,r4,r2
  8027ac:	95e6703a 	and	r19,r18,r23
  8027b0:	10c7883a 	add	r3,r2,r3
  8027b4:	180b883a 	mov	r5,r3
  8027b8:	9809883a 	mov	r4,r19
  8027bc:	d8c00115 	stw	r3,4(sp)
  8027c0:	08059fc0 	call	8059fc <__mulsf3>
  8027c4:	e009883a 	mov	r4,fp
  8027c8:	100b883a 	mov	r5,r2
  8027cc:	0805df80 	call	805df8 <__subsf3>
  8027d0:	d8c00117 	ldw	r3,4(sp)
  8027d4:	a00b883a 	mov	r5,r20
  8027d8:	1039883a 	mov	fp,r2
  8027dc:	1809883a 	mov	r4,r3
  8027e0:	0805df80 	call	805df8 <__subsf3>
  8027e4:	8009883a 	mov	r4,r16
  8027e8:	100b883a 	mov	r5,r2
  8027ec:	0805df80 	call	805df8 <__subsf3>
  8027f0:	980b883a 	mov	r5,r19
  8027f4:	1009883a 	mov	r4,r2
  8027f8:	08059fc0 	call	8059fc <__mulsf3>
  8027fc:	e009883a 	mov	r4,fp
  802800:	100b883a 	mov	r5,r2
  802804:	0805df80 	call	805df8 <__subsf3>
  802808:	da400217 	ldw	r9,8(sp)
  80280c:	1009883a 	mov	r4,r2
  802810:	480b883a 	mov	r5,r9
  802814:	08059fc0 	call	8059fc <__mulsf3>
  802818:	b80b883a 	mov	r5,r23
  80281c:	b809883a 	mov	r4,r23
  802820:	1029883a 	mov	r20,r2
  802824:	08059fc0 	call	8059fc <__mulsf3>
  802828:	014f9534 	movhi	r5,15956
  80282c:	297c5084 	addi	r5,r5,-3774
  802830:	1009883a 	mov	r4,r2
  802834:	1021883a 	mov	r16,r2
  802838:	08059fc0 	call	8059fc <__mulsf3>
  80283c:	014f9b34 	movhi	r5,15980
  802840:	294c9544 	addi	r5,r5,12885
  802844:	1009883a 	mov	r4,r2
  802848:	0804ef80 	call	804ef8 <__addsf3>
  80284c:	800b883a 	mov	r5,r16
  802850:	1009883a 	mov	r4,r2
  802854:	08059fc0 	call	8059fc <__mulsf3>
  802858:	014fa334 	movhi	r5,16012
  80285c:	2968c144 	addi	r5,r5,-23803
  802860:	1009883a 	mov	r4,r2
  802864:	0804ef80 	call	804ef8 <__addsf3>
  802868:	800b883a 	mov	r5,r16
  80286c:	1009883a 	mov	r4,r2
  802870:	08059fc0 	call	8059fc <__mulsf3>
  802874:	014faaf4 	movhi	r5,16043
  802878:	296aaac4 	addi	r5,r5,-21845
  80287c:	1009883a 	mov	r4,r2
  802880:	0804ef80 	call	804ef8 <__addsf3>
  802884:	800b883a 	mov	r5,r16
  802888:	1009883a 	mov	r4,r2
  80288c:	08059fc0 	call	8059fc <__mulsf3>
  802890:	014fb6f4 	movhi	r5,16091
  802894:	295b6dc4 	addi	r5,r5,28087
  802898:	1009883a 	mov	r4,r2
  80289c:	0804ef80 	call	804ef8 <__addsf3>
  8028a0:	800b883a 	mov	r5,r16
  8028a4:	1009883a 	mov	r4,r2
  8028a8:	08059fc0 	call	8059fc <__mulsf3>
  8028ac:	014fc6b4 	movhi	r5,16154
  8028b0:	29666684 	addi	r5,r5,-26214
  8028b4:	1009883a 	mov	r4,r2
  8028b8:	0804ef80 	call	804ef8 <__addsf3>
  8028bc:	800b883a 	mov	r5,r16
  8028c0:	8009883a 	mov	r4,r16
  8028c4:	1039883a 	mov	fp,r2
  8028c8:	08059fc0 	call	8059fc <__mulsf3>
  8028cc:	e009883a 	mov	r4,fp
  8028d0:	100b883a 	mov	r5,r2
  8028d4:	08059fc0 	call	8059fc <__mulsf3>
  8028d8:	980b883a 	mov	r5,r19
  8028dc:	b809883a 	mov	r4,r23
  8028e0:	1021883a 	mov	r16,r2
  8028e4:	0804ef80 	call	804ef8 <__addsf3>
  8028e8:	a00b883a 	mov	r5,r20
  8028ec:	1009883a 	mov	r4,r2
  8028f0:	08059fc0 	call	8059fc <__mulsf3>
  8028f4:	800b883a 	mov	r5,r16
  8028f8:	1009883a 	mov	r4,r2
  8028fc:	0804ef80 	call	804ef8 <__addsf3>
  802900:	980b883a 	mov	r5,r19
  802904:	9809883a 	mov	r4,r19
  802908:	1021883a 	mov	r16,r2
  80290c:	08059fc0 	call	8059fc <__mulsf3>
  802910:	01501034 	movhi	r5,16448
  802914:	1009883a 	mov	r4,r2
  802918:	d8800115 	stw	r2,4(sp)
  80291c:	0804ef80 	call	804ef8 <__addsf3>
  802920:	800b883a 	mov	r5,r16
  802924:	1009883a 	mov	r4,r2
  802928:	0804ef80 	call	804ef8 <__addsf3>
  80292c:	14b8703a 	and	fp,r2,r18
  802930:	e00b883a 	mov	r5,fp
  802934:	9809883a 	mov	r4,r19
  802938:	08059fc0 	call	8059fc <__mulsf3>
  80293c:	e009883a 	mov	r4,fp
  802940:	01501034 	movhi	r5,16448
  802944:	1027883a 	mov	r19,r2
  802948:	0805df80 	call	805df8 <__subsf3>
  80294c:	d9c00117 	ldw	r7,4(sp)
  802950:	1009883a 	mov	r4,r2
  802954:	380b883a 	mov	r5,r7
  802958:	0805df80 	call	805df8 <__subsf3>
  80295c:	8009883a 	mov	r4,r16
  802960:	100b883a 	mov	r5,r2
  802964:	0805df80 	call	805df8 <__subsf3>
  802968:	b80b883a 	mov	r5,r23
  80296c:	1009883a 	mov	r4,r2
  802970:	08059fc0 	call	8059fc <__mulsf3>
  802974:	e00b883a 	mov	r5,fp
  802978:	a009883a 	mov	r4,r20
  80297c:	1021883a 	mov	r16,r2
  802980:	08059fc0 	call	8059fc <__mulsf3>
  802984:	8009883a 	mov	r4,r16
  802988:	100b883a 	mov	r5,r2
  80298c:	0804ef80 	call	804ef8 <__addsf3>
  802990:	9809883a 	mov	r4,r19
  802994:	100b883a 	mov	r5,r2
  802998:	1039883a 	mov	fp,r2
  80299c:	0804ef80 	call	804ef8 <__addsf3>
  8029a0:	14a0703a 	and	r16,r2,r18
  8029a4:	014fddb4 	movhi	r5,16246
  8029a8:	8009883a 	mov	r4,r16
  8029ac:	294e0004 	addi	r5,r5,14336
  8029b0:	08059fc0 	call	8059fc <__mulsf3>
  8029b4:	980b883a 	mov	r5,r19
  8029b8:	8009883a 	mov	r4,r16
  8029bc:	102f883a 	mov	r23,r2
  8029c0:	0805df80 	call	805df8 <__subsf3>
  8029c4:	100b883a 	mov	r5,r2
  8029c8:	e009883a 	mov	r4,fp
  8029cc:	0805df80 	call	805df8 <__subsf3>
  8029d0:	014fddb4 	movhi	r5,16246
  8029d4:	294e13c4 	addi	r5,r5,14415
  8029d8:	1009883a 	mov	r4,r2
  8029dc:	08059fc0 	call	8059fc <__mulsf3>
  8029e0:	014da7b4 	movhi	r5,13982
  8029e4:	8009883a 	mov	r4,r16
  8029e8:	2970e804 	addi	r5,r5,-15456
  8029ec:	1027883a 	mov	r19,r2
  8029f0:	08059fc0 	call	8059fc <__mulsf3>
  8029f4:	9809883a 	mov	r4,r19
  8029f8:	100b883a 	mov	r5,r2
  8029fc:	0804ef80 	call	804ef8 <__addsf3>
  802a00:	da000317 	ldw	r8,12(sp)
  802a04:	1009883a 	mov	r4,r2
  802a08:	400b883a 	mov	r5,r8
  802a0c:	0804ef80 	call	804ef8 <__addsf3>
  802a10:	d9800417 	ldw	r6,16(sp)
  802a14:	1027883a 	mov	r19,r2
  802a18:	3009883a 	mov	r4,r6
  802a1c:	080634c0 	call	80634c <__floatsisf>
  802a20:	b809883a 	mov	r4,r23
  802a24:	980b883a 	mov	r5,r19
  802a28:	1021883a 	mov	r16,r2
  802a2c:	0804ef80 	call	804ef8 <__addsf3>
  802a30:	d9400017 	ldw	r5,0(sp)
  802a34:	1009883a 	mov	r4,r2
  802a38:	0804ef80 	call	804ef8 <__addsf3>
  802a3c:	800b883a 	mov	r5,r16
  802a40:	1009883a 	mov	r4,r2
  802a44:	0804ef80 	call	804ef8 <__addsf3>
  802a48:	1484703a 	and	r2,r2,r18
  802a4c:	800b883a 	mov	r5,r16
  802a50:	1009883a 	mov	r4,r2
  802a54:	1021883a 	mov	r16,r2
  802a58:	0805df80 	call	805df8 <__subsf3>
  802a5c:	d9400017 	ldw	r5,0(sp)
  802a60:	1009883a 	mov	r4,r2
  802a64:	0805df80 	call	805df8 <__subsf3>
  802a68:	b80b883a 	mov	r5,r23
  802a6c:	1009883a 	mov	r4,r2
  802a70:	0805df80 	call	805df8 <__subsf3>
  802a74:	100b883a 	mov	r5,r2
  802a78:	9809883a 	mov	r4,r19
  802a7c:	0805df80 	call	805df8 <__subsf3>
  802a80:	102f883a 	mov	r23,r2
  802a84:	b5bfffc4 	addi	r22,r22,-1
  802a88:	b56ab03a 	or	r21,r22,r21
  802a8c:	a8009826 	beq	r21,zero,802cf0 <__ieee754_powf+0x8b4>
  802a90:	048fe034 	movhi	r18,16256
  802a94:	053c0004 	movi	r20,-4096
  802a98:	a468703a 	and	r20,r20,r17
  802a9c:	a00b883a 	mov	r5,r20
  802aa0:	8809883a 	mov	r4,r17
  802aa4:	0805df80 	call	805df8 <__subsf3>
  802aa8:	800b883a 	mov	r5,r16
  802aac:	1009883a 	mov	r4,r2
  802ab0:	08059fc0 	call	8059fc <__mulsf3>
  802ab4:	880b883a 	mov	r5,r17
  802ab8:	b809883a 	mov	r4,r23
  802abc:	1027883a 	mov	r19,r2
  802ac0:	08059fc0 	call	8059fc <__mulsf3>
  802ac4:	9809883a 	mov	r4,r19
  802ac8:	100b883a 	mov	r5,r2
  802acc:	0804ef80 	call	804ef8 <__addsf3>
  802ad0:	a00b883a 	mov	r5,r20
  802ad4:	8009883a 	mov	r4,r16
  802ad8:	1027883a 	mov	r19,r2
  802adc:	08059fc0 	call	8059fc <__mulsf3>
  802ae0:	100b883a 	mov	r5,r2
  802ae4:	9809883a 	mov	r4,r19
  802ae8:	04200034 	movhi	r16,32768
  802aec:	1029883a 	mov	r20,r2
  802af0:	843fffc4 	addi	r16,r16,-1
  802af4:	0804ef80 	call	804ef8 <__addsf3>
  802af8:	1023883a 	mov	r17,r2
  802afc:	a02d883a 	mov	r22,r20
  802b00:	102f883a 	mov	r23,r2
  802b04:	80a0703a 	and	r16,r16,r2
  802b08:	0080bc0e 	bge	zero,r2,802dfc <__ieee754_powf+0x9c0>
  802b0c:	00d0c034 	movhi	r3,17152
  802b10:	1c009716 	blt	r3,r16,802d70 <__ieee754_powf+0x934>
  802b14:	80c08a26 	beq	r16,r3,802d40 <__ieee754_powf+0x904>
  802b18:	00cfc034 	movhi	r3,16128
  802b1c:	1c009d16 	blt	r3,r16,802d94 <__ieee754_powf+0x958>
  802b20:	0023883a 	mov	r17,zero
  802b24:	002b883a 	mov	r21,zero
  802b28:	043c0004 	movi	r16,-4096
  802b2c:	1420703a 	and	r16,r2,r16
  802b30:	014fcc74 	movhi	r5,16177
  802b34:	8009883a 	mov	r4,r16
  802b38:	295c8004 	addi	r5,r5,29184
  802b3c:	08059fc0 	call	8059fc <__mulsf3>
  802b40:	b00b883a 	mov	r5,r22
  802b44:	8009883a 	mov	r4,r16
  802b48:	1029883a 	mov	r20,r2
  802b4c:	0805df80 	call	805df8 <__subsf3>
  802b50:	9809883a 	mov	r4,r19
  802b54:	100b883a 	mov	r5,r2
  802b58:	0805df80 	call	805df8 <__subsf3>
  802b5c:	014fcc74 	movhi	r5,16177
  802b60:	295c8604 	addi	r5,r5,29208
  802b64:	1009883a 	mov	r4,r2
  802b68:	08059fc0 	call	8059fc <__mulsf3>
  802b6c:	014d7034 	movhi	r5,13760
  802b70:	8009883a 	mov	r4,r16
  802b74:	296fa304 	addi	r5,r5,-16756
  802b78:	1027883a 	mov	r19,r2
  802b7c:	08059fc0 	call	8059fc <__mulsf3>
  802b80:	9809883a 	mov	r4,r19
  802b84:	100b883a 	mov	r5,r2
  802b88:	0804ef80 	call	804ef8 <__addsf3>
  802b8c:	a009883a 	mov	r4,r20
  802b90:	100b883a 	mov	r5,r2
  802b94:	1027883a 	mov	r19,r2
  802b98:	0804ef80 	call	804ef8 <__addsf3>
  802b9c:	a00b883a 	mov	r5,r20
  802ba0:	1009883a 	mov	r4,r2
  802ba4:	1021883a 	mov	r16,r2
  802ba8:	0805df80 	call	805df8 <__subsf3>
  802bac:	9809883a 	mov	r4,r19
  802bb0:	100b883a 	mov	r5,r2
  802bb4:	0805df80 	call	805df8 <__subsf3>
  802bb8:	800b883a 	mov	r5,r16
  802bbc:	8009883a 	mov	r4,r16
  802bc0:	1029883a 	mov	r20,r2
  802bc4:	08059fc0 	call	8059fc <__mulsf3>
  802bc8:	014cccb4 	movhi	r5,13106
  802bcc:	296ed304 	addi	r5,r5,-17588
  802bd0:	1009883a 	mov	r4,r2
  802bd4:	1027883a 	mov	r19,r2
  802bd8:	08059fc0 	call	8059fc <__mulsf3>
  802bdc:	014d77b4 	movhi	r5,13790
  802be0:	297a8384 	addi	r5,r5,-5618
  802be4:	1009883a 	mov	r4,r2
  802be8:	0805df80 	call	805df8 <__subsf3>
  802bec:	980b883a 	mov	r5,r19
  802bf0:	1009883a 	mov	r4,r2
  802bf4:	08059fc0 	call	8059fc <__mulsf3>
  802bf8:	014e22f4 	movhi	r5,14475
  802bfc:	296cd544 	addi	r5,r5,-19627
  802c00:	1009883a 	mov	r4,r2
  802c04:	0804ef80 	call	804ef8 <__addsf3>
  802c08:	980b883a 	mov	r5,r19
  802c0c:	1009883a 	mov	r4,r2
  802c10:	08059fc0 	call	8059fc <__mulsf3>
  802c14:	014ecdb4 	movhi	r5,15158
  802c18:	2942d844 	addi	r5,r5,2913
  802c1c:	1009883a 	mov	r4,r2
  802c20:	0805df80 	call	805df8 <__subsf3>
  802c24:	980b883a 	mov	r5,r19
  802c28:	1009883a 	mov	r4,r2
  802c2c:	08059fc0 	call	8059fc <__mulsf3>
  802c30:	014f8af4 	movhi	r5,15915
  802c34:	296aaac4 	addi	r5,r5,-21845
  802c38:	1009883a 	mov	r4,r2
  802c3c:	0804ef80 	call	804ef8 <__addsf3>
  802c40:	980b883a 	mov	r5,r19
  802c44:	1009883a 	mov	r4,r2
  802c48:	08059fc0 	call	8059fc <__mulsf3>
  802c4c:	100b883a 	mov	r5,r2
  802c50:	8009883a 	mov	r4,r16
  802c54:	0805df80 	call	805df8 <__subsf3>
  802c58:	100b883a 	mov	r5,r2
  802c5c:	8009883a 	mov	r4,r16
  802c60:	1027883a 	mov	r19,r2
  802c64:	08059fc0 	call	8059fc <__mulsf3>
  802c68:	9809883a 	mov	r4,r19
  802c6c:	01500034 	movhi	r5,16384
  802c70:	102d883a 	mov	r22,r2
  802c74:	0805df80 	call	805df8 <__subsf3>
  802c78:	100b883a 	mov	r5,r2
  802c7c:	b009883a 	mov	r4,r22
  802c80:	08053c00 	call	8053c0 <__divsf3>
  802c84:	a00b883a 	mov	r5,r20
  802c88:	8009883a 	mov	r4,r16
  802c8c:	1027883a 	mov	r19,r2
  802c90:	08059fc0 	call	8059fc <__mulsf3>
  802c94:	a00b883a 	mov	r5,r20
  802c98:	1009883a 	mov	r4,r2
  802c9c:	0804ef80 	call	804ef8 <__addsf3>
  802ca0:	100b883a 	mov	r5,r2
  802ca4:	9809883a 	mov	r4,r19
  802ca8:	0805df80 	call	805df8 <__subsf3>
  802cac:	800b883a 	mov	r5,r16
  802cb0:	1009883a 	mov	r4,r2
  802cb4:	0805df80 	call	805df8 <__subsf3>
  802cb8:	010fe034 	movhi	r4,16256
  802cbc:	100b883a 	mov	r5,r2
  802cc0:	0805df80 	call	805df8 <__subsf3>
  802cc4:	8887883a 	add	r3,r17,r2
  802cc8:	1809d5fa 	srai	r4,r3,23
  802ccc:	01009f0e 	bge	zero,r4,802f4c <__ieee754_powf+0xb10>
  802cd0:	1809883a 	mov	r4,r3
  802cd4:	900b883a 	mov	r5,r18
  802cd8:	08059fc0 	call	8059fc <__mulsf3>
  802cdc:	003e1b06 	br	80254c <__alt_data_end+0xff80254c>
  802ce0:	18c0004c 	andi	r3,r3,1
  802ce4:	05800084 	movi	r22,2
  802ce8:	b0edc83a 	sub	r22,r22,r3
  802cec:	003dfc06 	br	8024e0 <__alt_data_end+0xff8024e0>
  802cf0:	04afe034 	movhi	r18,49024
  802cf4:	003f6706 	br	802a94 <__alt_data_end+0xff802a94>
  802cf8:	20a0003c 	xorhi	r2,r4,32768
  802cfc:	003e1306 	br	80254c <__alt_data_end+0xff80254c>
  802d00:	0011883a 	mov	r8,zero
  802d04:	d8000015 	stw	zero,0(sp)
  802d08:	0007883a 	mov	r3,zero
  802d0c:	050fe034 	movhi	r20,16256
  802d10:	003e8e06 	br	80274c <__alt_data_end+0xff80274c>
  802d14:	000d883a 	mov	r6,zero
  802d18:	003e7806 	br	8026fc <__alt_data_end+0xff8026fc>
  802d1c:	008fe034 	movhi	r2,16256
  802d20:	108001c4 	addi	r2,r2,7
  802d24:	14c0480e 	bge	r2,r19,802e48 <__ieee754_powf+0xa0c>
  802d28:	053e050e 	bge	zero,r20,802540 <__alt_data_end+0xff802540>
  802d2c:	015c52b4 	movhi	r5,29002
  802d30:	297cb284 	addi	r5,r5,-3382
  802d34:	2809883a 	mov	r4,r5
  802d38:	08059fc0 	call	8059fc <__mulsf3>
  802d3c:	003e0306 	br	80254c <__alt_data_end+0xff80254c>
  802d40:	014cce74 	movhi	r5,13113
  802d44:	296a8f04 	addi	r5,r5,-21956
  802d48:	9809883a 	mov	r4,r19
  802d4c:	0804ef80 	call	804ef8 <__addsf3>
  802d50:	a00b883a 	mov	r5,r20
  802d54:	8809883a 	mov	r4,r17
  802d58:	102b883a 	mov	r21,r2
  802d5c:	0805df80 	call	805df8 <__subsf3>
  802d60:	100b883a 	mov	r5,r2
  802d64:	a809883a 	mov	r4,r21
  802d68:	08058780 	call	805878 <__gesf2>
  802d6c:	0080090e 	bge	zero,r2,802d94 <__ieee754_powf+0x958>
  802d70:	015c52b4 	movhi	r5,29002
  802d74:	9009883a 	mov	r4,r18
  802d78:	297cb284 	addi	r5,r5,-3382
  802d7c:	08059fc0 	call	8059fc <__mulsf3>
  802d80:	015c52b4 	movhi	r5,29002
  802d84:	297cb284 	addi	r5,r5,-3382
  802d88:	1009883a 	mov	r4,r2
  802d8c:	08059fc0 	call	8059fc <__mulsf3>
  802d90:	003dee06 	br	80254c <__alt_data_end+0xff80254c>
  802d94:	8021d5fa 	srai	r16,r16,23
  802d98:	00802034 	movhi	r2,128
  802d9c:	843fe084 	addi	r16,r16,-126
  802da0:	1421d83a 	sra	r16,r2,r16
  802da4:	10bfffc4 	addi	r2,r2,-1
  802da8:	8463883a 	add	r17,r16,r17
  802dac:	8806d5fa 	srli	r3,r17,23
  802db0:	88aa703a 	and	r21,r17,r2
  802db4:	ad402034 	orhi	r21,r21,128
  802db8:	18c03fcc 	andi	r3,r3,255
  802dbc:	18ffe044 	addi	r3,r3,-127
  802dc0:	10cbd83a 	sra	r5,r2,r3
  802dc4:	008005c4 	movi	r2,23
  802dc8:	10c7c83a 	sub	r3,r2,r3
  802dcc:	014a303a 	nor	r5,zero,r5
  802dd0:	a8ebd83a 	sra	r21,r21,r3
  802dd4:	2c4a703a 	and	r5,r5,r17
  802dd8:	b8005a16 	blt	r23,zero,802f44 <__ieee754_powf+0xb08>
  802ddc:	a009883a 	mov	r4,r20
  802de0:	0805df80 	call	805df8 <__subsf3>
  802de4:	100b883a 	mov	r5,r2
  802de8:	9809883a 	mov	r4,r19
  802dec:	102d883a 	mov	r22,r2
  802df0:	a82295fa 	slli	r17,r21,23
  802df4:	0804ef80 	call	804ef8 <__addsf3>
  802df8:	003f4b06 	br	802b28 <__alt_data_end+0xff802b28>
  802dfc:	00d0c5b4 	movhi	r3,17174
  802e00:	1c000816 	blt	r3,r16,802e24 <__ieee754_powf+0x9e8>
  802e04:	80ff441e 	bne	r16,r3,802b18 <__alt_data_end+0xff802b18>
  802e08:	a00b883a 	mov	r5,r20
  802e0c:	1009883a 	mov	r4,r2
  802e10:	0805df80 	call	805df8 <__subsf3>
  802e14:	100b883a 	mov	r5,r2
  802e18:	9809883a 	mov	r4,r19
  802e1c:	08059340 	call	805934 <__lesf2>
  802e20:	00bfdc16 	blt	zero,r2,802d94 <__alt_data_end+0xff802d94>
  802e24:	014368b4 	movhi	r5,3490
  802e28:	9009883a 	mov	r4,r18
  802e2c:	29509804 	addi	r5,r5,16992
  802e30:	08059fc0 	call	8059fc <__mulsf3>
  802e34:	014368b4 	movhi	r5,3490
  802e38:	29509804 	addi	r5,r5,16992
  802e3c:	1009883a 	mov	r4,r2
  802e40:	08059fc0 	call	8059fc <__mulsf3>
  802e44:	003dc106 	br	80254c <__alt_data_end+0xff80254c>
  802e48:	0805df80 	call	805df8 <__subsf3>
  802e4c:	014fee74 	movhi	r5,16313
  802e50:	296a8004 	addi	r5,r5,-22016
  802e54:	1009883a 	mov	r4,r2
  802e58:	1021883a 	mov	r16,r2
  802e5c:	08059fc0 	call	8059fc <__mulsf3>
  802e60:	014dbb74 	movhi	r5,14061
  802e64:	8009883a 	mov	r4,r16
  802e68:	29695c04 	addi	r5,r5,-23184
  802e6c:	1027883a 	mov	r19,r2
  802e70:	08059fc0 	call	8059fc <__mulsf3>
  802e74:	8009883a 	mov	r4,r16
  802e78:	014fa034 	movhi	r5,16000
  802e7c:	1025883a 	mov	r18,r2
  802e80:	08059fc0 	call	8059fc <__mulsf3>
  802e84:	010faaf4 	movhi	r4,16043
  802e88:	100b883a 	mov	r5,r2
  802e8c:	212aaac4 	addi	r4,r4,-21845
  802e90:	0805df80 	call	805df8 <__subsf3>
  802e94:	800b883a 	mov	r5,r16
  802e98:	1009883a 	mov	r4,r2
  802e9c:	08059fc0 	call	8059fc <__mulsf3>
  802ea0:	100b883a 	mov	r5,r2
  802ea4:	010fc034 	movhi	r4,16128
  802ea8:	0805df80 	call	805df8 <__subsf3>
  802eac:	800b883a 	mov	r5,r16
  802eb0:	8009883a 	mov	r4,r16
  802eb4:	1029883a 	mov	r20,r2
  802eb8:	08059fc0 	call	8059fc <__mulsf3>
  802ebc:	100b883a 	mov	r5,r2
  802ec0:	a009883a 	mov	r4,r20
  802ec4:	08059fc0 	call	8059fc <__mulsf3>
  802ec8:	014fee74 	movhi	r5,16313
  802ecc:	296a8ec4 	addi	r5,r5,-21957
  802ed0:	1009883a 	mov	r4,r2
  802ed4:	08059fc0 	call	8059fc <__mulsf3>
  802ed8:	9009883a 	mov	r4,r18
  802edc:	100b883a 	mov	r5,r2
  802ee0:	0805df80 	call	805df8 <__subsf3>
  802ee4:	100b883a 	mov	r5,r2
  802ee8:	9809883a 	mov	r4,r19
  802eec:	1025883a 	mov	r18,r2
  802ef0:	043c0004 	movi	r16,-4096
  802ef4:	0804ef80 	call	804ef8 <__addsf3>
  802ef8:	1404703a 	and	r2,r2,r16
  802efc:	980b883a 	mov	r5,r19
  802f00:	1009883a 	mov	r4,r2
  802f04:	1021883a 	mov	r16,r2
  802f08:	0805df80 	call	805df8 <__subsf3>
  802f0c:	100b883a 	mov	r5,r2
  802f10:	9009883a 	mov	r4,r18
  802f14:	0805df80 	call	805df8 <__subsf3>
  802f18:	102f883a 	mov	r23,r2
  802f1c:	003ed906 	br	802a84 <__alt_data_end+0xff802a84>
  802f20:	008fc5b4 	movhi	r2,16150
  802f24:	020d74b4 	movhi	r8,13778
  802f28:	d8800015 	stw	r2,0(sp)
  802f2c:	10b00004 	addi	r2,r2,-16384
  802f30:	4233f704 	addi	r8,r8,-12324
  802f34:	d8800015 	stw	r2,0(sp)
  802f38:	00c00834 	movhi	r3,32
  802f3c:	050ff034 	movhi	r20,16320
  802f40:	003e0206 	br	80274c <__alt_data_end+0xff80274c>
  802f44:	056bc83a 	sub	r21,zero,r21
  802f48:	003fa406 	br	802ddc <__alt_data_end+0xff802ddc>
  802f4c:	1009883a 	mov	r4,r2
  802f50:	a80b883a 	mov	r5,r21
  802f54:	0804bcc0 	call	804bcc <scalbnf>
  802f58:	1009883a 	mov	r4,r2
  802f5c:	003f5d06 	br	802cd4 <__alt_data_end+0xff802cd4>

00802f60 <__ieee754_sqrtf>:
  802f60:	00a00034 	movhi	r2,32768
  802f64:	defffe04 	addi	sp,sp,-8
  802f68:	10bfffc4 	addi	r2,r2,-1
  802f6c:	00dfe034 	movhi	r3,32640
  802f70:	dc000015 	stw	r16,0(sp)
  802f74:	dfc00115 	stw	ra,4(sp)
  802f78:	1104703a 	and	r2,r2,r4
  802f7c:	18ffffc4 	addi	r3,r3,-1
  802f80:	2021883a 	mov	r16,r4
  802f84:	200b883a 	mov	r5,r4
  802f88:	18803836 	bltu	r3,r2,80306c <__ieee754_sqrtf+0x10c>
  802f8c:	10003226 	beq	r2,zero,803058 <__ieee754_sqrtf+0xf8>
  802f90:	2007883a 	mov	r3,r4
  802f94:	20003f16 	blt	r4,zero,803094 <__ieee754_sqrtf+0x134>
  802f98:	200bd5fa 	srai	r5,r4,23
  802f9c:	01002034 	movhi	r4,128
  802fa0:	213fffc4 	addi	r4,r4,-1
  802fa4:	20800a36 	bltu	r4,r2,802fd0 <__ieee754_sqrtf+0x70>
  802fa8:	8400202c 	andhi	r16,r16,128
  802fac:	80003f1e 	bne	r16,zero,8030ac <__ieee754_sqrtf+0x14c>
  802fb0:	0005883a 	mov	r2,zero
  802fb4:	00000106 	br	802fbc <__ieee754_sqrtf+0x5c>
  802fb8:	3005883a 	mov	r2,r6
  802fbc:	18c7883a 	add	r3,r3,r3
  802fc0:	1900202c 	andhi	r4,r3,128
  802fc4:	11800044 	addi	r6,r2,1
  802fc8:	203ffb26 	beq	r4,zero,802fb8 <__alt_data_end+0xff802fb8>
  802fcc:	288bc83a 	sub	r5,r5,r2
  802fd0:	00802034 	movhi	r2,128
  802fd4:	293fe044 	addi	r4,r5,-127
  802fd8:	10bfffc4 	addi	r2,r2,-1
  802fdc:	1884703a 	and	r2,r3,r2
  802fe0:	2140004c 	andi	r5,r4,1
  802fe4:	10802034 	orhi	r2,r2,128
  802fe8:	2800281e 	bne	r5,zero,80308c <__ieee754_sqrtf+0x12c>
  802fec:	2021d07a 	srai	r16,r4,1
  802ff0:	1085883a 	add	r2,r2,r2
  802ff4:	01000644 	movi	r4,25
  802ff8:	000f883a 	mov	r7,zero
  802ffc:	000d883a 	mov	r6,zero
  803000:	00c04034 	movhi	r3,256
  803004:	30cb883a 	add	r5,r6,r3
  803008:	213fffc4 	addi	r4,r4,-1
  80300c:	11400316 	blt	r2,r5,80301c <__ieee754_sqrtf+0xbc>
  803010:	28cd883a 	add	r6,r5,r3
  803014:	1145c83a 	sub	r2,r2,r5
  803018:	38cf883a 	add	r7,r7,r3
  80301c:	1085883a 	add	r2,r2,r2
  803020:	1806d07a 	srli	r3,r3,1
  803024:	203ff71e 	bne	r4,zero,803004 <__alt_data_end+0xff803004>
  803028:	10000226 	beq	r2,zero,803034 <__ieee754_sqrtf+0xd4>
  80302c:	3880004c 	andi	r2,r7,1
  803030:	388f883a 	add	r7,r7,r2
  803034:	380fd07a 	srai	r7,r7,1
  803038:	802095fa 	slli	r16,r16,23
  80303c:	008fc034 	movhi	r2,16128
  803040:	388f883a 	add	r7,r7,r2
  803044:	81c5883a 	add	r2,r16,r7
  803048:	dfc00117 	ldw	ra,4(sp)
  80304c:	dc000017 	ldw	r16,0(sp)
  803050:	dec00204 	addi	sp,sp,8
  803054:	f800283a 	ret
  803058:	2005883a 	mov	r2,r4
  80305c:	dfc00117 	ldw	ra,4(sp)
  803060:	dc000017 	ldw	r16,0(sp)
  803064:	dec00204 	addi	sp,sp,8
  803068:	f800283a 	ret
  80306c:	08059fc0 	call	8059fc <__mulsf3>
  803070:	800b883a 	mov	r5,r16
  803074:	1009883a 	mov	r4,r2
  803078:	0804ef80 	call	804ef8 <__addsf3>
  80307c:	dfc00117 	ldw	ra,4(sp)
  803080:	dc000017 	ldw	r16,0(sp)
  803084:	dec00204 	addi	sp,sp,8
  803088:	f800283a 	ret
  80308c:	1085883a 	add	r2,r2,r2
  803090:	003fd606 	br	802fec <__alt_data_end+0xff802fec>
  803094:	200b883a 	mov	r5,r4
  803098:	0805df80 	call	805df8 <__subsf3>
  80309c:	100b883a 	mov	r5,r2
  8030a0:	1009883a 	mov	r4,r2
  8030a4:	08053c00 	call	8053c0 <__divsf3>
  8030a8:	003fec06 	br	80305c <__alt_data_end+0xff80305c>
  8030ac:	00bfffc4 	movi	r2,-1
  8030b0:	003fc606 	br	802fcc <__alt_data_end+0xff802fcc>

008030b4 <__kernel_cos>:
  8030b4:	defff304 	addi	sp,sp,-52
  8030b8:	dc000315 	stw	r16,12(sp)
  8030bc:	04200034 	movhi	r16,32768
  8030c0:	843fffc4 	addi	r16,r16,-1
  8030c4:	008f9034 	movhi	r2,15936
  8030c8:	df000b15 	stw	fp,44(sp)
  8030cc:	ddc00a15 	stw	r23,40(sp)
  8030d0:	dd800915 	stw	r22,36(sp)
  8030d4:	dcc00615 	stw	r19,24(sp)
  8030d8:	dfc00c15 	stw	ra,48(sp)
  8030dc:	dd400815 	stw	r21,32(sp)
  8030e0:	dd000715 	stw	r20,28(sp)
  8030e4:	dc800515 	stw	r18,20(sp)
  8030e8:	dc400415 	stw	r17,16(sp)
  8030ec:	2c20703a 	and	r16,r5,r16
  8030f0:	10bfffc4 	addi	r2,r2,-1
  8030f4:	2827883a 	mov	r19,r5
  8030f8:	202d883a 	mov	r22,r4
  8030fc:	302f883a 	mov	r23,r6
  803100:	3839883a 	mov	fp,r7
  803104:	14007516 	blt	r2,r16,8032dc <__kernel_cos+0x228>
  803108:	080877c0 	call	80877c <__fixdfsi>
  80310c:	10010f26 	beq	r2,zero,80354c <__kernel_cos+0x498>
  803110:	b00d883a 	mov	r6,r22
  803114:	980f883a 	mov	r7,r19
  803118:	b009883a 	mov	r4,r22
  80311c:	980b883a 	mov	r5,r19
  803120:	08077680 	call	807768 <__muldf3>
  803124:	01afa234 	movhi	r6,48776
  803128:	01ef6a74 	movhi	r7,48553
  80312c:	318e3504 	addi	r6,r6,14548
  803130:	39feba44 	addi	r7,r7,-1303
  803134:	1009883a 	mov	r4,r2
  803138:	180b883a 	mov	r5,r3
  80313c:	102b883a 	mov	r21,r2
  803140:	1829883a 	mov	r20,r3
  803144:	08077680 	call	807768 <__muldf3>
  803148:	01af6d74 	movhi	r6,48565
  80314c:	01cf88b4 	movhi	r7,15906
  803150:	31ac7104 	addi	r6,r6,-20028
  803154:	39fba784 	addi	r7,r7,-4450
  803158:	1009883a 	mov	r4,r2
  80315c:	180b883a 	mov	r5,r3
  803160:	08064700 	call	806470 <__adddf3>
  803164:	a80d883a 	mov	r6,r21
  803168:	a00f883a 	mov	r7,r20
  80316c:	1009883a 	mov	r4,r2
  803170:	180b883a 	mov	r5,r3
  803174:	08077680 	call	807768 <__muldf3>
  803178:	01a02734 	movhi	r6,32924
  80317c:	01cfa4b4 	movhi	r7,16018
  803180:	3194ab44 	addi	r6,r6,21165
  803184:	39df93c4 	addi	r7,r7,32335
  803188:	1009883a 	mov	r4,r2
  80318c:	180b883a 	mov	r5,r3
  803190:	0807e800 	call	807e80 <__subdf3>
  803194:	a80d883a 	mov	r6,r21
  803198:	a00f883a 	mov	r7,r20
  80319c:	1009883a 	mov	r4,r2
  8031a0:	180b883a 	mov	r5,r3
  8031a4:	08077680 	call	807768 <__muldf3>
  8031a8:	018672f4 	movhi	r6,6603
  8031ac:	01cfbeb4 	movhi	r7,16122
  8031b0:	31856404 	addi	r6,r6,5520
  8031b4:	39c06804 	addi	r7,r7,416
  8031b8:	1009883a 	mov	r4,r2
  8031bc:	180b883a 	mov	r5,r3
  8031c0:	08064700 	call	806470 <__adddf3>
  8031c4:	a80d883a 	mov	r6,r21
  8031c8:	a00f883a 	mov	r7,r20
  8031cc:	1009883a 	mov	r4,r2
  8031d0:	180b883a 	mov	r5,r3
  8031d4:	08077680 	call	807768 <__muldf3>
  8031d8:	0185b074 	movhi	r6,5825
  8031dc:	01cfd5f4 	movhi	r7,16215
  8031e0:	31945dc4 	addi	r6,r6,20855
  8031e4:	39f05b04 	addi	r7,r7,-16020
  8031e8:	1009883a 	mov	r4,r2
  8031ec:	180b883a 	mov	r5,r3
  8031f0:	0807e800 	call	807e80 <__subdf3>
  8031f4:	a80d883a 	mov	r6,r21
  8031f8:	a00f883a 	mov	r7,r20
  8031fc:	1009883a 	mov	r4,r2
  803200:	180b883a 	mov	r5,r3
  803204:	08077680 	call	807768 <__muldf3>
  803208:	01955574 	movhi	r6,21845
  80320c:	01cfe974 	movhi	r7,16293
  803210:	31955304 	addi	r6,r6,21836
  803214:	39d55544 	addi	r7,r7,21845
  803218:	1009883a 	mov	r4,r2
  80321c:	180b883a 	mov	r5,r3
  803220:	08064700 	call	806470 <__adddf3>
  803224:	a80d883a 	mov	r6,r21
  803228:	a00f883a 	mov	r7,r20
  80322c:	1009883a 	mov	r4,r2
  803230:	180b883a 	mov	r5,r3
  803234:	08077680 	call	807768 <__muldf3>
  803238:	1017883a 	mov	r11,r2
  80323c:	1815883a 	mov	r10,r3
  803240:	a809883a 	mov	r4,r21
  803244:	a00b883a 	mov	r5,r20
  803248:	000d883a 	mov	r6,zero
  80324c:	01cff834 	movhi	r7,16352
  803250:	da800215 	stw	r10,8(sp)
  803254:	dac00115 	stw	r11,4(sp)
  803258:	08077680 	call	807768 <__muldf3>
  80325c:	dac00117 	ldw	r11,4(sp)
  803260:	da800217 	ldw	r10,8(sp)
  803264:	a809883a 	mov	r4,r21
  803268:	580d883a 	mov	r6,r11
  80326c:	500f883a 	mov	r7,r10
  803270:	a00b883a 	mov	r5,r20
  803274:	1023883a 	mov	r17,r2
  803278:	1821883a 	mov	r16,r3
  80327c:	08077680 	call	807768 <__muldf3>
  803280:	b80d883a 	mov	r6,r23
  803284:	e00f883a 	mov	r7,fp
  803288:	b009883a 	mov	r4,r22
  80328c:	980b883a 	mov	r5,r19
  803290:	1029883a 	mov	r20,r2
  803294:	1825883a 	mov	r18,r3
  803298:	08077680 	call	807768 <__muldf3>
  80329c:	a009883a 	mov	r4,r20
  8032a0:	900b883a 	mov	r5,r18
  8032a4:	100d883a 	mov	r6,r2
  8032a8:	180f883a 	mov	r7,r3
  8032ac:	0807e800 	call	807e80 <__subdf3>
  8032b0:	8809883a 	mov	r4,r17
  8032b4:	800b883a 	mov	r5,r16
  8032b8:	100d883a 	mov	r6,r2
  8032bc:	180f883a 	mov	r7,r3
  8032c0:	0807e800 	call	807e80 <__subdf3>
  8032c4:	100d883a 	mov	r6,r2
  8032c8:	180f883a 	mov	r7,r3
  8032cc:	0009883a 	mov	r4,zero
  8032d0:	014ffc34 	movhi	r5,16368
  8032d4:	0807e800 	call	807e80 <__subdf3>
  8032d8:	00008b06 	br	803508 <__kernel_cos+0x454>
  8032dc:	200d883a 	mov	r6,r4
  8032e0:	280f883a 	mov	r7,r5
  8032e4:	08077680 	call	807768 <__muldf3>
  8032e8:	01afa234 	movhi	r6,48776
  8032ec:	01ef6a74 	movhi	r7,48553
  8032f0:	318e3504 	addi	r6,r6,14548
  8032f4:	39feba44 	addi	r7,r7,-1303
  8032f8:	1009883a 	mov	r4,r2
  8032fc:	180b883a 	mov	r5,r3
  803300:	1025883a 	mov	r18,r2
  803304:	1823883a 	mov	r17,r3
  803308:	08077680 	call	807768 <__muldf3>
  80330c:	01af6d74 	movhi	r6,48565
  803310:	01cf88b4 	movhi	r7,15906
  803314:	31ac7104 	addi	r6,r6,-20028
  803318:	39fba784 	addi	r7,r7,-4450
  80331c:	1009883a 	mov	r4,r2
  803320:	180b883a 	mov	r5,r3
  803324:	08064700 	call	806470 <__adddf3>
  803328:	900d883a 	mov	r6,r18
  80332c:	880f883a 	mov	r7,r17
  803330:	1009883a 	mov	r4,r2
  803334:	180b883a 	mov	r5,r3
  803338:	08077680 	call	807768 <__muldf3>
  80333c:	01a02734 	movhi	r6,32924
  803340:	01cfa4b4 	movhi	r7,16018
  803344:	3194ab44 	addi	r6,r6,21165
  803348:	39df93c4 	addi	r7,r7,32335
  80334c:	1009883a 	mov	r4,r2
  803350:	180b883a 	mov	r5,r3
  803354:	0807e800 	call	807e80 <__subdf3>
  803358:	900d883a 	mov	r6,r18
  80335c:	880f883a 	mov	r7,r17
  803360:	1009883a 	mov	r4,r2
  803364:	180b883a 	mov	r5,r3
  803368:	08077680 	call	807768 <__muldf3>
  80336c:	018672f4 	movhi	r6,6603
  803370:	01cfbeb4 	movhi	r7,16122
  803374:	31856404 	addi	r6,r6,5520
  803378:	39c06804 	addi	r7,r7,416
  80337c:	1009883a 	mov	r4,r2
  803380:	180b883a 	mov	r5,r3
  803384:	08064700 	call	806470 <__adddf3>
  803388:	900d883a 	mov	r6,r18
  80338c:	880f883a 	mov	r7,r17
  803390:	1009883a 	mov	r4,r2
  803394:	180b883a 	mov	r5,r3
  803398:	08077680 	call	807768 <__muldf3>
  80339c:	0185b074 	movhi	r6,5825
  8033a0:	01cfd5f4 	movhi	r7,16215
  8033a4:	31945dc4 	addi	r6,r6,20855
  8033a8:	39f05b04 	addi	r7,r7,-16020
  8033ac:	1009883a 	mov	r4,r2
  8033b0:	180b883a 	mov	r5,r3
  8033b4:	0807e800 	call	807e80 <__subdf3>
  8033b8:	900d883a 	mov	r6,r18
  8033bc:	880f883a 	mov	r7,r17
  8033c0:	1009883a 	mov	r4,r2
  8033c4:	180b883a 	mov	r5,r3
  8033c8:	08077680 	call	807768 <__muldf3>
  8033cc:	01955574 	movhi	r6,21845
  8033d0:	01cfe974 	movhi	r7,16293
  8033d4:	31955304 	addi	r6,r6,21836
  8033d8:	39d55544 	addi	r7,r7,21845
  8033dc:	1009883a 	mov	r4,r2
  8033e0:	180b883a 	mov	r5,r3
  8033e4:	08064700 	call	806470 <__adddf3>
  8033e8:	900d883a 	mov	r6,r18
  8033ec:	880f883a 	mov	r7,r17
  8033f0:	1009883a 	mov	r4,r2
  8033f4:	180b883a 	mov	r5,r3
  8033f8:	08077680 	call	807768 <__muldf3>
  8033fc:	1013883a 	mov	r9,r2
  803400:	1017883a 	mov	r11,r2
  803404:	008ff4f4 	movhi	r2,16339
  803408:	108ccc84 	addi	r2,r2,13106
  80340c:	1811883a 	mov	r8,r3
  803410:	902b883a 	mov	r21,r18
  803414:	8829883a 	mov	r20,r17
  803418:	1815883a 	mov	r10,r3
  80341c:	143f880e 	bge	r2,r16,803240 <__alt_data_end+0xff803240>
  803420:	008ffa74 	movhi	r2,16361
  803424:	14004416 	blt	r2,r16,803538 <__kernel_cos+0x484>
  803428:	00bff834 	movhi	r2,65504
  80342c:	80a1883a 	add	r16,r16,r2
  803430:	000d883a 	mov	r6,zero
  803434:	800f883a 	mov	r7,r16
  803438:	0009883a 	mov	r4,zero
  80343c:	014ffc34 	movhi	r5,16368
  803440:	da400115 	stw	r9,4(sp)
  803444:	d8c00215 	stw	r3,8(sp)
  803448:	0807e800 	call	807e80 <__subdf3>
  80344c:	da000217 	ldw	r8,8(sp)
  803450:	da400117 	ldw	r9,4(sp)
  803454:	102b883a 	mov	r21,r2
  803458:	d8c00015 	stw	r3,0(sp)
  80345c:	9009883a 	mov	r4,r18
  803460:	880b883a 	mov	r5,r17
  803464:	000d883a 	mov	r6,zero
  803468:	01cff834 	movhi	r7,16352
  80346c:	da000215 	stw	r8,8(sp)
  803470:	da400115 	stw	r9,4(sp)
  803474:	08077680 	call	807768 <__muldf3>
  803478:	800f883a 	mov	r7,r16
  80347c:	000d883a 	mov	r6,zero
  803480:	1009883a 	mov	r4,r2
  803484:	180b883a 	mov	r5,r3
  803488:	0807e800 	call	807e80 <__subdf3>
  80348c:	da400117 	ldw	r9,4(sp)
  803490:	da000217 	ldw	r8,8(sp)
  803494:	9009883a 	mov	r4,r18
  803498:	480d883a 	mov	r6,r9
  80349c:	400f883a 	mov	r7,r8
  8034a0:	880b883a 	mov	r5,r17
  8034a4:	1029883a 	mov	r20,r2
  8034a8:	1821883a 	mov	r16,r3
  8034ac:	08077680 	call	807768 <__muldf3>
  8034b0:	b80d883a 	mov	r6,r23
  8034b4:	e00f883a 	mov	r7,fp
  8034b8:	b009883a 	mov	r4,r22
  8034bc:	980b883a 	mov	r5,r19
  8034c0:	1025883a 	mov	r18,r2
  8034c4:	1823883a 	mov	r17,r3
  8034c8:	08077680 	call	807768 <__muldf3>
  8034cc:	100d883a 	mov	r6,r2
  8034d0:	180f883a 	mov	r7,r3
  8034d4:	9009883a 	mov	r4,r18
  8034d8:	880b883a 	mov	r5,r17
  8034dc:	0807e800 	call	807e80 <__subdf3>
  8034e0:	100d883a 	mov	r6,r2
  8034e4:	180f883a 	mov	r7,r3
  8034e8:	a009883a 	mov	r4,r20
  8034ec:	800b883a 	mov	r5,r16
  8034f0:	0807e800 	call	807e80 <__subdf3>
  8034f4:	d9400017 	ldw	r5,0(sp)
  8034f8:	100d883a 	mov	r6,r2
  8034fc:	180f883a 	mov	r7,r3
  803500:	a809883a 	mov	r4,r21
  803504:	0807e800 	call	807e80 <__subdf3>
  803508:	dfc00c17 	ldw	ra,48(sp)
  80350c:	df000b17 	ldw	fp,44(sp)
  803510:	ddc00a17 	ldw	r23,40(sp)
  803514:	dd800917 	ldw	r22,36(sp)
  803518:	dd400817 	ldw	r21,32(sp)
  80351c:	dd000717 	ldw	r20,28(sp)
  803520:	dcc00617 	ldw	r19,24(sp)
  803524:	dc800517 	ldw	r18,20(sp)
  803528:	dc400417 	ldw	r17,16(sp)
  80352c:	dc000317 	ldw	r16,12(sp)
  803530:	dec00d04 	addi	sp,sp,52
  803534:	f800283a 	ret
  803538:	008ff9f4 	movhi	r2,16359
  80353c:	002b883a 	mov	r21,zero
  803540:	d8800015 	stw	r2,0(sp)
  803544:	040ff4b4 	movhi	r16,16338
  803548:	003fc406 	br	80345c <__alt_data_end+0xff80345c>
  80354c:	0005883a 	mov	r2,zero
  803550:	00cffc34 	movhi	r3,16368
  803554:	003fec06 	br	803508 <__alt_data_end+0xff803508>

00803558 <__kernel_rem_pio2>:
  803558:	deff5a04 	addi	sp,sp,-664
  80355c:	da00a617 	ldw	r8,664(sp)
  803560:	00c02074 	movhi	r3,129
  803564:	18d68304 	addi	r3,r3,23052
  803568:	4205883a 	add	r2,r8,r8
  80356c:	1085883a 	add	r2,r2,r2
  803570:	1885883a 	add	r2,r3,r2
  803574:	d9008e15 	stw	r4,568(sp)
  803578:	d9408f15 	stw	r5,572(sp)
  80357c:	313fff44 	addi	r4,r6,-3
  803580:	01400604 	movi	r5,24
  803584:	dd80a215 	stw	r22,648(sp)
  803588:	dc009c15 	stw	r16,624(sp)
  80358c:	dfc0a515 	stw	ra,660(sp)
  803590:	df00a415 	stw	fp,656(sp)
  803594:	ddc0a315 	stw	r23,652(sp)
  803598:	dd40a115 	stw	r21,644(sp)
  80359c:	dd00a015 	stw	r20,640(sp)
  8035a0:	dcc09f15 	stw	r19,636(sp)
  8035a4:	dc809e15 	stw	r18,632(sp)
  8035a8:	dc409d15 	stw	r17,628(sp)
  8035ac:	3021883a 	mov	r16,r6
  8035b0:	d9c09315 	stw	r7,588(sp)
  8035b4:	15800017 	ldw	r22,0(r2)
  8035b8:	0804d440 	call	804d44 <__divsi3>
  8035bc:	da009317 	ldw	r8,588(sp)
  8035c0:	d8809215 	stw	r2,584(sp)
  8035c4:	423fffc4 	addi	r8,r8,-1
  8035c8:	da008d15 	stw	r8,564(sp)
  8035cc:	10033b16 	blt	r2,zero,8042bc <__kernel_rem_pio2+0xd64>
  8035d0:	da009217 	ldw	r8,584(sp)
  8035d4:	d9009217 	ldw	r4,584(sp)
  8035d8:	42000044 	addi	r8,r8,1
  8035dc:	40fffa24 	muli	r3,r8,-24
  8035e0:	da009515 	stw	r8,596(sp)
  8035e4:	da008d17 	ldw	r8,564(sp)
  8035e8:	1c07883a 	add	r3,r3,r16
  8035ec:	d8c09015 	stw	r3,576(sp)
  8035f0:	b205883a 	add	r2,r22,r8
  8035f4:	2223c83a 	sub	r17,r4,r8
  8035f8:	10001016 	blt	r2,zero,80363c <__kernel_rem_pio2+0xe4>
  8035fc:	da00a717 	ldw	r8,668(sp)
  803600:	8c65883a 	add	r18,r17,r17
  803604:	94a5883a 	add	r18,r18,r18
  803608:	1445883a 	add	r2,r2,r17
  80360c:	dcc05004 	addi	r19,sp,320
  803610:	44a5883a 	add	r18,r8,r18
  803614:	14000044 	addi	r16,r2,1
  803618:	88015316 	blt	r17,zero,803b68 <__kernel_rem_pio2+0x610>
  80361c:	91000017 	ldw	r4,0(r18)
  803620:	08087fc0 	call	8087fc <__floatsidf>
  803624:	98800015 	stw	r2,0(r19)
  803628:	98c00115 	stw	r3,4(r19)
  80362c:	8c400044 	addi	r17,r17,1
  803630:	9cc00204 	addi	r19,r19,8
  803634:	94800104 	addi	r18,r18,4
  803638:	8c3ff71e 	bne	r17,r16,803618 <__alt_data_end+0xff803618>
  80363c:	b0002816 	blt	r22,zero,8036e0 <__kernel_rem_pio2+0x188>
  803640:	da008d17 	ldw	r8,564(sp)
  803644:	b4c00044 	addi	r19,r22,1
  803648:	982690fa 	slli	r19,r19,3
  80364c:	402490fa 	slli	r18,r8,3
  803650:	da008e17 	ldw	r8,568(sp)
  803654:	d8805004 	addi	r2,sp,320
  803658:	94000204 	addi	r16,r18,8
  80365c:	d823883a 	mov	r17,sp
  803660:	14a5883a 	add	r18,r2,r18
  803664:	dcef883a 	add	r23,sp,r19
  803668:	4421883a 	add	r16,r8,r16
  80366c:	dd809115 	stw	r22,580(sp)
  803670:	4039883a 	mov	fp,r8
  803674:	da008d17 	ldw	r8,564(sp)
  803678:	40016016 	blt	r8,zero,803bfc <__kernel_rem_pio2+0x6a4>
  80367c:	e027883a 	mov	r19,fp
  803680:	9029883a 	mov	r20,r18
  803684:	002d883a 	mov	r22,zero
  803688:	002b883a 	mov	r21,zero
  80368c:	a1800017 	ldw	r6,0(r20)
  803690:	a1c00117 	ldw	r7,4(r20)
  803694:	99000017 	ldw	r4,0(r19)
  803698:	99400117 	ldw	r5,4(r19)
  80369c:	9cc00204 	addi	r19,r19,8
  8036a0:	a53ffe04 	addi	r20,r20,-8
  8036a4:	08077680 	call	807768 <__muldf3>
  8036a8:	b009883a 	mov	r4,r22
  8036ac:	a80b883a 	mov	r5,r21
  8036b0:	100d883a 	mov	r6,r2
  8036b4:	180f883a 	mov	r7,r3
  8036b8:	08064700 	call	806470 <__adddf3>
  8036bc:	102d883a 	mov	r22,r2
  8036c0:	182b883a 	mov	r21,r3
  8036c4:	9c3ff11e 	bne	r19,r16,80368c <__alt_data_end+0xff80368c>
  8036c8:	8d800015 	stw	r22,0(r17)
  8036cc:	8d400115 	stw	r21,4(r17)
  8036d0:	8c400204 	addi	r17,r17,8
  8036d4:	94800204 	addi	r18,r18,8
  8036d8:	8dffe61e 	bne	r17,r23,803674 <__alt_data_end+0xff803674>
  8036dc:	dd809117 	ldw	r22,580(sp)
  8036e0:	00d00034 	movhi	r3,16384
  8036e4:	da009317 	ldw	r8,588(sp)
  8036e8:	18ffff84 	addi	r3,r3,-2
  8036ec:	b0c7883a 	add	r3,r22,r3
  8036f0:	18c7883a 	add	r3,r3,r3
  8036f4:	402090fa 	slli	r16,r8,3
  8036f8:	18c7883a 	add	r3,r3,r3
  8036fc:	da007804 	addi	r8,sp,480
  803700:	40d1883a 	add	r8,r8,r3
  803704:	b0bfffc4 	addi	r2,r22,-1
  803708:	da009615 	stw	r8,600(sp)
  80370c:	da008e17 	ldw	r8,568(sp)
  803710:	1085883a 	add	r2,r2,r2
  803714:	1085883a 	add	r2,r2,r2
  803718:	19000104 	addi	r4,r3,4
  80371c:	d885883a 	add	r2,sp,r2
  803720:	4421883a 	add	r16,r8,r16
  803724:	da007804 	addi	r8,sp,480
  803728:	4111883a 	add	r8,r8,r4
  80372c:	10807804 	addi	r2,r2,480
  803730:	da009715 	stw	r8,604(sp)
  803734:	b025883a 	mov	r18,r22
  803738:	d8809815 	stw	r2,608(sp)
  80373c:	dd809415 	stw	r22,592(sp)
  803740:	900490fa 	slli	r2,r18,3
  803744:	d885883a 	add	r2,sp,r2
  803748:	17000017 	ldw	fp,0(r2)
  80374c:	15400117 	ldw	r21,4(r2)
  803750:	04802b0e 	bge	zero,r18,803800 <__kernel_rem_pio2+0x2a8>
  803754:	00880034 	movhi	r2,8192
  803758:	10bfffc4 	addi	r2,r2,-1
  80375c:	90a9883a 	add	r20,r18,r2
  803760:	a02890fa 	slli	r20,r20,3
  803764:	dc407804 	addi	r17,sp,480
  803768:	dcfffe04 	addi	r19,sp,-8
  80376c:	dd29883a 	add	r20,sp,r20
  803770:	000d883a 	mov	r6,zero
  803774:	01cf9c34 	movhi	r7,15984
  803778:	e009883a 	mov	r4,fp
  80377c:	a80b883a 	mov	r5,r21
  803780:	08077680 	call	807768 <__muldf3>
  803784:	180b883a 	mov	r5,r3
  803788:	1009883a 	mov	r4,r2
  80378c:	080877c0 	call	80877c <__fixdfsi>
  803790:	1009883a 	mov	r4,r2
  803794:	08087fc0 	call	8087fc <__floatsidf>
  803798:	000d883a 	mov	r6,zero
  80379c:	01d05c34 	movhi	r7,16752
  8037a0:	1009883a 	mov	r4,r2
  8037a4:	180b883a 	mov	r5,r3
  8037a8:	102f883a 	mov	r23,r2
  8037ac:	182d883a 	mov	r22,r3
  8037b0:	08077680 	call	807768 <__muldf3>
  8037b4:	100d883a 	mov	r6,r2
  8037b8:	180f883a 	mov	r7,r3
  8037bc:	e009883a 	mov	r4,fp
  8037c0:	a80b883a 	mov	r5,r21
  8037c4:	0807e800 	call	807e80 <__subdf3>
  8037c8:	180b883a 	mov	r5,r3
  8037cc:	1009883a 	mov	r4,r2
  8037d0:	080877c0 	call	80877c <__fixdfsi>
  8037d4:	a1800017 	ldw	r6,0(r20)
  8037d8:	a1c00117 	ldw	r7,4(r20)
  8037dc:	88800015 	stw	r2,0(r17)
  8037e0:	b809883a 	mov	r4,r23
  8037e4:	b00b883a 	mov	r5,r22
  8037e8:	08064700 	call	806470 <__adddf3>
  8037ec:	a53ffe04 	addi	r20,r20,-8
  8037f0:	1039883a 	mov	fp,r2
  8037f4:	182b883a 	mov	r21,r3
  8037f8:	8c400104 	addi	r17,r17,4
  8037fc:	a4ffdc1e 	bne	r20,r19,803770 <__alt_data_end+0xff803770>
  803800:	d9809017 	ldw	r6,576(sp)
  803804:	a80b883a 	mov	r5,r21
  803808:	e009883a 	mov	r4,fp
  80380c:	08049a80 	call	8049a8 <scalbn>
  803810:	000d883a 	mov	r6,zero
  803814:	01cff034 	movhi	r7,16320
  803818:	1009883a 	mov	r4,r2
  80381c:	180b883a 	mov	r5,r3
  803820:	1027883a 	mov	r19,r2
  803824:	1823883a 	mov	r17,r3
  803828:	08077680 	call	807768 <__muldf3>
  80382c:	1009883a 	mov	r4,r2
  803830:	180b883a 	mov	r5,r3
  803834:	08045c80 	call	8045c8 <floor>
  803838:	000d883a 	mov	r6,zero
  80383c:	01d00834 	movhi	r7,16416
  803840:	1009883a 	mov	r4,r2
  803844:	180b883a 	mov	r5,r3
  803848:	08077680 	call	807768 <__muldf3>
  80384c:	100d883a 	mov	r6,r2
  803850:	180f883a 	mov	r7,r3
  803854:	9809883a 	mov	r4,r19
  803858:	880b883a 	mov	r5,r17
  80385c:	0807e800 	call	807e80 <__subdf3>
  803860:	180b883a 	mov	r5,r3
  803864:	1009883a 	mov	r4,r2
  803868:	1827883a 	mov	r19,r3
  80386c:	1029883a 	mov	r20,r2
  803870:	080877c0 	call	80877c <__fixdfsi>
  803874:	1009883a 	mov	r4,r2
  803878:	1023883a 	mov	r17,r2
  80387c:	08087fc0 	call	8087fc <__floatsidf>
  803880:	a009883a 	mov	r4,r20
  803884:	100d883a 	mov	r6,r2
  803888:	180f883a 	mov	r7,r3
  80388c:	980b883a 	mov	r5,r19
  803890:	0807e800 	call	807e80 <__subdf3>
  803894:	d9009017 	ldw	r4,576(sp)
  803898:	1013883a 	mov	r9,r2
  80389c:	102b883a 	mov	r21,r2
  8038a0:	1811883a 	mov	r8,r3
  8038a4:	0100b30e 	bge	zero,r4,803b74 <__kernel_rem_pio2+0x61c>
  8038a8:	90bfffc4 	addi	r2,r18,-1
  8038ac:	1085883a 	add	r2,r2,r2
  8038b0:	1085883a 	add	r2,r2,r2
  8038b4:	d885883a 	add	r2,sp,r2
  8038b8:	10807804 	addi	r2,r2,480
  8038bc:	d9809017 	ldw	r6,576(sp)
  8038c0:	11400017 	ldw	r5,0(r2)
  8038c4:	01000604 	movi	r4,24
  8038c8:	2189c83a 	sub	r4,r4,r6
  8038cc:	290dd83a 	sra	r6,r5,r4
  8038d0:	d9c09017 	ldw	r7,576(sp)
  8038d4:	04c005c4 	movi	r19,23
  8038d8:	3108983a 	sll	r4,r6,r4
  8038dc:	99e7c83a 	sub	r19,r19,r7
  8038e0:	89a3883a 	add	r17,r17,r6
  8038e4:	2909c83a 	sub	r4,r5,r4
  8038e8:	24e7d83a 	sra	r19,r4,r19
  8038ec:	11000015 	stw	r4,0(r2)
  8038f0:	04c02a0e 	bge	zero,r19,80399c <__kernel_rem_pio2+0x444>
  8038f4:	8c400044 	addi	r17,r17,1
  8038f8:	0481570e 	bge	zero,r18,803e58 <__kernel_rem_pio2+0x900>
  8038fc:	02804034 	movhi	r10,256
  803900:	52bfffc4 	addi	r10,r10,-1
  803904:	d8807804 	addi	r2,sp,480
  803908:	000b883a 	mov	r5,zero
  80390c:	0029883a 	mov	r20,zero
  803910:	01c04034 	movhi	r7,256
  803914:	00000706 	br	803934 <__kernel_rem_pio2+0x3dc>
  803918:	390dc83a 	sub	r6,r7,r4
  80391c:	20000226 	beq	r4,zero,803928 <__kernel_rem_pio2+0x3d0>
  803920:	11800015 	stw	r6,0(r2)
  803924:	05000044 	movi	r20,1
  803928:	29400044 	addi	r5,r5,1
  80392c:	10800104 	addi	r2,r2,4
  803930:	2c80080e 	bge	r5,r18,803954 <__kernel_rem_pio2+0x3fc>
  803934:	11000017 	ldw	r4,0(r2)
  803938:	a03ff726 	beq	r20,zero,803918 <__alt_data_end+0xff803918>
  80393c:	5109c83a 	sub	r4,r10,r4
  803940:	11000015 	stw	r4,0(r2)
  803944:	29400044 	addi	r5,r5,1
  803948:	05000044 	movi	r20,1
  80394c:	10800104 	addi	r2,r2,4
  803950:	2cbff816 	blt	r5,r18,803934 <__alt_data_end+0xff803934>
  803954:	d9009017 	ldw	r4,576(sp)
  803958:	01000e0e 	bge	zero,r4,803994 <__kernel_rem_pio2+0x43c>
  80395c:	00800044 	movi	r2,1
  803960:	20808d26 	beq	r4,r2,803b98 <__kernel_rem_pio2+0x640>
  803964:	00800084 	movi	r2,2
  803968:	20800a1e 	bne	r4,r2,803994 <__kernel_rem_pio2+0x43c>
  80396c:	90bfffc4 	addi	r2,r18,-1
  803970:	1085883a 	add	r2,r2,r2
  803974:	1085883a 	add	r2,r2,r2
  803978:	d885883a 	add	r2,sp,r2
  80397c:	10807804 	addi	r2,r2,480
  803980:	11400017 	ldw	r5,0(r2)
  803984:	01001034 	movhi	r4,64
  803988:	213fffc4 	addi	r4,r4,-1
  80398c:	2908703a 	and	r4,r5,r4
  803990:	11000015 	stw	r4,0(r2)
  803994:	00800084 	movi	r2,2
  803998:	98805d26 	beq	r19,r2,803b10 <__kernel_rem_pio2+0x5b8>
  80399c:	400b883a 	mov	r5,r8
  8039a0:	000d883a 	mov	r6,zero
  8039a4:	000f883a 	mov	r7,zero
  8039a8:	a809883a 	mov	r4,r21
  8039ac:	da009b15 	stw	r8,620(sp)
  8039b0:	08076040 	call	807604 <__eqdf2>
  8039b4:	da009b17 	ldw	r8,620(sp)
  8039b8:	10012b1e 	bne	r2,zero,803e68 <__kernel_rem_pio2+0x910>
  8039bc:	da009417 	ldw	r8,592(sp)
  8039c0:	917fffc4 	addi	r5,r18,-1
  8039c4:	2a000e16 	blt	r5,r8,803a00 <__kernel_rem_pio2+0x4a8>
  8039c8:	00900034 	movhi	r2,16384
  8039cc:	10bfffc4 	addi	r2,r2,-1
  8039d0:	9085883a 	add	r2,r18,r2
  8039d4:	1085883a 	add	r2,r2,r2
  8039d8:	d9809717 	ldw	r6,604(sp)
  8039dc:	1085883a 	add	r2,r2,r2
  8039e0:	d9007804 	addi	r4,sp,480
  8039e4:	0007883a 	mov	r3,zero
  8039e8:	2085883a 	add	r2,r4,r2
  8039ec:	11000017 	ldw	r4,0(r2)
  8039f0:	10bfff04 	addi	r2,r2,-4
  8039f4:	1906b03a 	or	r3,r3,r4
  8039f8:	11bffc1e 	bne	r2,r6,8039ec <__alt_data_end+0xff8039ec>
  8039fc:	1800821e 	bne	r3,zero,803c08 <__kernel_rem_pio2+0x6b0>
  803a00:	da009817 	ldw	r8,608(sp)
  803a04:	40800017 	ldw	r2,0(r8)
  803a08:	1001151e 	bne	r2,zero,803e60 <__kernel_rem_pio2+0x908>
  803a0c:	d8809617 	ldw	r2,600(sp)
  803a10:	05000044 	movi	r20,1
  803a14:	10bfff04 	addi	r2,r2,-4
  803a18:	10c00117 	ldw	r3,4(r2)
  803a1c:	a5000044 	addi	r20,r20,1
  803a20:	183ffc26 	beq	r3,zero,803a14 <__alt_data_end+0xff803a14>
  803a24:	9529883a 	add	r20,r18,r20
  803a28:	90800044 	addi	r2,r18,1
  803a2c:	dd009115 	stw	r20,580(sp)
  803a30:	a0803216 	blt	r20,r2,803afc <__kernel_rem_pio2+0x5a4>
  803a34:	da009317 	ldw	r8,588(sp)
  803a38:	d8c09117 	ldw	r3,580(sp)
  803a3c:	44a3883a 	add	r17,r8,r18
  803a40:	da009217 	ldw	r8,584(sp)
  803a44:	882290fa 	slli	r17,r17,3
  803a48:	40a5883a 	add	r18,r8,r2
  803a4c:	da009517 	ldw	r8,596(sp)
  803a50:	100490fa 	slli	r2,r2,3
  803a54:	94a5883a 	add	r18,r18,r18
  803a58:	40eb883a 	add	r21,r8,r3
  803a5c:	da00a717 	ldw	r8,668(sp)
  803a60:	ad6b883a 	add	r21,r21,r21
  803a64:	94a5883a 	add	r18,r18,r18
  803a68:	ad6b883a 	add	r21,r21,r21
  803a6c:	d8c05004 	addi	r3,sp,320
  803a70:	44a5883a 	add	r18,r8,r18
  803a74:	1c63883a 	add	r17,r3,r17
  803a78:	d8a7883a 	add	r19,sp,r2
  803a7c:	456b883a 	add	r21,r8,r21
  803a80:	91000017 	ldw	r4,0(r18)
  803a84:	08087fc0 	call	8087fc <__floatsidf>
  803a88:	da008d17 	ldw	r8,564(sp)
  803a8c:	88800015 	stw	r2,0(r17)
  803a90:	88c00115 	stw	r3,4(r17)
  803a94:	40001b16 	blt	r8,zero,803b04 <__kernel_rem_pio2+0x5ac>
  803a98:	dd008e17 	ldw	r20,568(sp)
  803a9c:	882d883a 	mov	r22,r17
  803aa0:	002f883a 	mov	r23,zero
  803aa4:	0039883a 	mov	fp,zero
  803aa8:	b1800017 	ldw	r6,0(r22)
  803aac:	b1c00117 	ldw	r7,4(r22)
  803ab0:	a1000017 	ldw	r4,0(r20)
  803ab4:	a1400117 	ldw	r5,4(r20)
  803ab8:	a5000204 	addi	r20,r20,8
  803abc:	b5bffe04 	addi	r22,r22,-8
  803ac0:	08077680 	call	807768 <__muldf3>
  803ac4:	b809883a 	mov	r4,r23
  803ac8:	e00b883a 	mov	r5,fp
  803acc:	100d883a 	mov	r6,r2
  803ad0:	180f883a 	mov	r7,r3
  803ad4:	08064700 	call	806470 <__adddf3>
  803ad8:	102f883a 	mov	r23,r2
  803adc:	1839883a 	mov	fp,r3
  803ae0:	a43ff11e 	bne	r20,r16,803aa8 <__alt_data_end+0xff803aa8>
  803ae4:	9dc00015 	stw	r23,0(r19)
  803ae8:	9f000115 	stw	fp,4(r19)
  803aec:	94800104 	addi	r18,r18,4
  803af0:	8c400204 	addi	r17,r17,8
  803af4:	9cc00204 	addi	r19,r19,8
  803af8:	957fe11e 	bne	r18,r21,803a80 <__alt_data_end+0xff803a80>
  803afc:	dc809117 	ldw	r18,580(sp)
  803b00:	003f0f06 	br	803740 <__alt_data_end+0xff803740>
  803b04:	002f883a 	mov	r23,zero
  803b08:	0039883a 	mov	fp,zero
  803b0c:	003ff506 	br	803ae4 <__alt_data_end+0xff803ae4>
  803b10:	480d883a 	mov	r6,r9
  803b14:	180f883a 	mov	r7,r3
  803b18:	0009883a 	mov	r4,zero
  803b1c:	014ffc34 	movhi	r5,16368
  803b20:	0807e800 	call	807e80 <__subdf3>
  803b24:	102b883a 	mov	r21,r2
  803b28:	1811883a 	mov	r8,r3
  803b2c:	a03f9b26 	beq	r20,zero,80399c <__alt_data_end+0xff80399c>
  803b30:	d9809017 	ldw	r6,576(sp)
  803b34:	0009883a 	mov	r4,zero
  803b38:	014ffc34 	movhi	r5,16368
  803b3c:	d8c09b15 	stw	r3,620(sp)
  803b40:	08049a80 	call	8049a8 <scalbn>
  803b44:	da009b17 	ldw	r8,620(sp)
  803b48:	a809883a 	mov	r4,r21
  803b4c:	100d883a 	mov	r6,r2
  803b50:	400b883a 	mov	r5,r8
  803b54:	180f883a 	mov	r7,r3
  803b58:	0807e800 	call	807e80 <__subdf3>
  803b5c:	102b883a 	mov	r21,r2
  803b60:	1811883a 	mov	r8,r3
  803b64:	003f8d06 	br	80399c <__alt_data_end+0xff80399c>
  803b68:	0005883a 	mov	r2,zero
  803b6c:	0007883a 	mov	r3,zero
  803b70:	003eac06 	br	803624 <__alt_data_end+0xff803624>
  803b74:	d8809017 	ldw	r2,576(sp)
  803b78:	1000121e 	bne	r2,zero,803bc4 <__kernel_rem_pio2+0x66c>
  803b7c:	90bfffc4 	addi	r2,r18,-1
  803b80:	1085883a 	add	r2,r2,r2
  803b84:	1085883a 	add	r2,r2,r2
  803b88:	d885883a 	add	r2,sp,r2
  803b8c:	14c07817 	ldw	r19,480(r2)
  803b90:	9827d5fa 	srai	r19,r19,23
  803b94:	003f5606 	br	8038f0 <__alt_data_end+0xff8038f0>
  803b98:	90bfffc4 	addi	r2,r18,-1
  803b9c:	1085883a 	add	r2,r2,r2
  803ba0:	1085883a 	add	r2,r2,r2
  803ba4:	d885883a 	add	r2,sp,r2
  803ba8:	10807804 	addi	r2,r2,480
  803bac:	11000017 	ldw	r4,0(r2)
  803bb0:	01402034 	movhi	r5,128
  803bb4:	297fffc4 	addi	r5,r5,-1
  803bb8:	2148703a 	and	r4,r4,r5
  803bbc:	11000015 	stw	r4,0(r2)
  803bc0:	003f7406 	br	803994 <__alt_data_end+0xff803994>
  803bc4:	4809883a 	mov	r4,r9
  803bc8:	180b883a 	mov	r5,r3
  803bcc:	000d883a 	mov	r6,zero
  803bd0:	01cff834 	movhi	r7,16352
  803bd4:	d8c09a15 	stw	r3,616(sp)
  803bd8:	d8c09b15 	stw	r3,620(sp)
  803bdc:	da409915 	stw	r9,612(sp)
  803be0:	080768c0 	call	80768c <__gedf2>
  803be4:	d8c09a17 	ldw	r3,616(sp)
  803be8:	da009b17 	ldw	r8,620(sp)
  803bec:	da409917 	ldw	r9,612(sp)
  803bf0:	1000920e 	bge	r2,zero,803e3c <__kernel_rem_pio2+0x8e4>
  803bf4:	0027883a 	mov	r19,zero
  803bf8:	003f6806 	br	80399c <__alt_data_end+0xff80399c>
  803bfc:	002d883a 	mov	r22,zero
  803c00:	002b883a 	mov	r21,zero
  803c04:	003eb006 	br	8036c8 <__alt_data_end+0xff8036c8>
  803c08:	2945883a 	add	r2,r5,r5
  803c0c:	da009017 	ldw	r8,576(sp)
  803c10:	1085883a 	add	r2,r2,r2
  803c14:	d885883a 	add	r2,sp,r2
  803c18:	10807817 	ldw	r2,480(r2)
  803c1c:	423ffa04 	addi	r8,r8,-24
  803c20:	dc409115 	stw	r17,580(sp)
  803c24:	dcc08d15 	stw	r19,564(sp)
  803c28:	da009015 	stw	r8,576(sp)
  803c2c:	dd809417 	ldw	r22,592(sp)
  803c30:	2823883a 	mov	r17,r5
  803c34:	10000e1e 	bne	r2,zero,803c70 <__kernel_rem_pio2+0x718>
  803c38:	00900034 	movhi	r2,16384
  803c3c:	10bfffc4 	addi	r2,r2,-1
  803c40:	2885883a 	add	r2,r5,r2
  803c44:	1085883a 	add	r2,r2,r2
  803c48:	d8c07804 	addi	r3,sp,480
  803c4c:	1085883a 	add	r2,r2,r2
  803c50:	1885883a 	add	r2,r3,r2
  803c54:	4007883a 	mov	r3,r8
  803c58:	10bfff04 	addi	r2,r2,-4
  803c5c:	11000117 	ldw	r4,4(r2)
  803c60:	8c7fffc4 	addi	r17,r17,-1
  803c64:	18fffa04 	addi	r3,r3,-24
  803c68:	203ffb26 	beq	r4,zero,803c58 <__alt_data_end+0xff803c58>
  803c6c:	d8c09015 	stw	r3,576(sp)
  803c70:	d9809017 	ldw	r6,576(sp)
  803c74:	0009883a 	mov	r4,zero
  803c78:	014ffc34 	movhi	r5,16368
  803c7c:	08049a80 	call	8049a8 <scalbn>
  803c80:	1029883a 	mov	r20,r2
  803c84:	182b883a 	mov	r21,r3
  803c88:	88018416 	blt	r17,zero,80429c <__kernel_rem_pio2+0xd44>
  803c8c:	881090fa 	slli	r8,r17,3
  803c90:	d8c07804 	addi	r3,sp,480
  803c94:	da008e15 	stw	r8,568(sp)
  803c98:	d8808e17 	ldw	r2,568(sp)
  803c9c:	8c51883a 	add	r8,r17,r17
  803ca0:	4211883a 	add	r8,r8,r8
  803ca4:	d8a1883a 	add	r16,sp,r2
  803ca8:	1a25883a 	add	r18,r3,r8
  803cac:	da3ffe04 	addi	r8,sp,-8
  803cb0:	da008c15 	stw	r8,560(sp)
  803cb4:	8039883a 	mov	fp,r16
  803cb8:	91000017 	ldw	r4,0(r18)
  803cbc:	e73ffe04 	addi	fp,fp,-8
  803cc0:	94bfff04 	addi	r18,r18,-4
  803cc4:	08087fc0 	call	8087fc <__floatsidf>
  803cc8:	a00d883a 	mov	r6,r20
  803ccc:	a80f883a 	mov	r7,r21
  803cd0:	1009883a 	mov	r4,r2
  803cd4:	180b883a 	mov	r5,r3
  803cd8:	08077680 	call	807768 <__muldf3>
  803cdc:	a009883a 	mov	r4,r20
  803ce0:	a80b883a 	mov	r5,r21
  803ce4:	e0800215 	stw	r2,8(fp)
  803ce8:	e0c00315 	stw	r3,12(fp)
  803cec:	000d883a 	mov	r6,zero
  803cf0:	01cf9c34 	movhi	r7,15984
  803cf4:	08077680 	call	807768 <__muldf3>
  803cf8:	da008c17 	ldw	r8,560(sp)
  803cfc:	1029883a 	mov	r20,r2
  803d00:	182b883a 	mov	r21,r3
  803d04:	e23fec1e 	bne	fp,r8,803cb8 <__alt_data_end+0xff803cb8>
  803d08:	0029883a 	mov	r20,zero
  803d0c:	b0004f16 	blt	r22,zero,803e4c <__kernel_rem_pio2+0x8f4>
  803d10:	05402074 	movhi	r21,129
  803d14:	014ffe74 	movhi	r5,16377
  803d18:	ad567504 	addi	r21,r21,22996
  803d1c:	8027883a 	mov	r19,r16
  803d20:	01100034 	movhi	r4,16384
  803d24:	29487ec4 	addi	r5,r5,8699
  803d28:	0039883a 	mov	fp,zero
  803d2c:	002f883a 	mov	r23,zero
  803d30:	0025883a 	mov	r18,zero
  803d34:	00000506 	br	803d4c <__kernel_rem_pio2+0x7f4>
  803d38:	9cc00204 	addi	r19,r19,8
  803d3c:	a4800f16 	blt	r20,r18,803d7c <__kernel_rem_pio2+0x824>
  803d40:	a9000017 	ldw	r4,0(r21)
  803d44:	a9400117 	ldw	r5,4(r21)
  803d48:	ad400204 	addi	r21,r21,8
  803d4c:	99800017 	ldw	r6,0(r19)
  803d50:	99c00117 	ldw	r7,4(r19)
  803d54:	94800044 	addi	r18,r18,1
  803d58:	08077680 	call	807768 <__muldf3>
  803d5c:	e009883a 	mov	r4,fp
  803d60:	b80b883a 	mov	r5,r23
  803d64:	100d883a 	mov	r6,r2
  803d68:	180f883a 	mov	r7,r3
  803d6c:	08064700 	call	806470 <__adddf3>
  803d70:	1039883a 	mov	fp,r2
  803d74:	182f883a 	mov	r23,r3
  803d78:	b4bfef0e 	bge	r22,r18,803d38 <__alt_data_end+0xff803d38>
  803d7c:	a00490fa 	slli	r2,r20,3
  803d80:	da008c17 	ldw	r8,560(sp)
  803d84:	843ffe04 	addi	r16,r16,-8
  803d88:	d885883a 	add	r2,sp,r2
  803d8c:	10802804 	addi	r2,r2,160
  803d90:	17000015 	stw	fp,0(r2)
  803d94:	15c00115 	stw	r23,4(r2)
  803d98:	a5000044 	addi	r20,r20,1
  803d9c:	823fdb1e 	bne	r16,r8,803d0c <__alt_data_end+0xff803d0c>
  803da0:	da00a617 	ldw	r8,664(sp)
  803da4:	00800084 	movi	r2,2
  803da8:	12006616 	blt	r2,r8,803f44 <__kernel_rem_pio2+0x9ec>
  803dac:	0200de16 	blt	zero,r8,804128 <__kernel_rem_pio2+0xbd0>
  803db0:	4000141e 	bne	r8,zero,803e04 <__kernel_rem_pio2+0x8ac>
  803db4:	da008e17 	ldw	r8,568(sp)
  803db8:	d8802804 	addi	r2,sp,160
  803dbc:	0007883a 	mov	r3,zero
  803dc0:	1225883a 	add	r18,r2,r8
  803dc4:	043fffc4 	movi	r16,-1
  803dc8:	0005883a 	mov	r2,zero
  803dcc:	91800017 	ldw	r6,0(r18)
  803dd0:	91c00117 	ldw	r7,4(r18)
  803dd4:	1009883a 	mov	r4,r2
  803dd8:	180b883a 	mov	r5,r3
  803ddc:	8c7fffc4 	addi	r17,r17,-1
  803de0:	08064700 	call	806470 <__adddf3>
  803de4:	94bffe04 	addi	r18,r18,-8
  803de8:	8c3ff81e 	bne	r17,r16,803dcc <__alt_data_end+0xff803dcc>
  803dec:	da008d17 	ldw	r8,564(sp)
  803df0:	40000126 	beq	r8,zero,803df8 <__kernel_rem_pio2+0x8a0>
  803df4:	18e0003c 	xorhi	r3,r3,32768
  803df8:	da008f17 	ldw	r8,572(sp)
  803dfc:	40800015 	stw	r2,0(r8)
  803e00:	40c00115 	stw	r3,4(r8)
  803e04:	da009117 	ldw	r8,580(sp)
  803e08:	408001cc 	andi	r2,r8,7
  803e0c:	dfc0a517 	ldw	ra,660(sp)
  803e10:	df00a417 	ldw	fp,656(sp)
  803e14:	ddc0a317 	ldw	r23,652(sp)
  803e18:	dd80a217 	ldw	r22,648(sp)
  803e1c:	dd40a117 	ldw	r21,644(sp)
  803e20:	dd00a017 	ldw	r20,640(sp)
  803e24:	dcc09f17 	ldw	r19,636(sp)
  803e28:	dc809e17 	ldw	r18,632(sp)
  803e2c:	dc409d17 	ldw	r17,628(sp)
  803e30:	dc009c17 	ldw	r16,624(sp)
  803e34:	dec0a604 	addi	sp,sp,664
  803e38:	f800283a 	ret
  803e3c:	8c400044 	addi	r17,r17,1
  803e40:	04810d0e 	bge	zero,r18,804278 <__kernel_rem_pio2+0xd20>
  803e44:	04c00084 	movi	r19,2
  803e48:	003eac06 	br	8038fc <__alt_data_end+0xff8038fc>
  803e4c:	0039883a 	mov	fp,zero
  803e50:	002f883a 	mov	r23,zero
  803e54:	003fc906 	br	803d7c <__alt_data_end+0xff803d7c>
  803e58:	0029883a 	mov	r20,zero
  803e5c:	003ebd06 	br	803954 <__alt_data_end+0xff803954>
  803e60:	05000044 	movi	r20,1
  803e64:	003eef06 	br	803a24 <__alt_data_end+0xff803a24>
  803e68:	4029883a 	mov	r20,r8
  803e6c:	da009017 	ldw	r8,576(sp)
  803e70:	a809883a 	mov	r4,r21
  803e74:	a00b883a 	mov	r5,r20
  803e78:	020dc83a 	sub	r6,zero,r8
  803e7c:	dc409115 	stw	r17,580(sp)
  803e80:	dd809417 	ldw	r22,592(sp)
  803e84:	dcc08d15 	stw	r19,564(sp)
  803e88:	08049a80 	call	8049a8 <scalbn>
  803e8c:	000d883a 	mov	r6,zero
  803e90:	01d05c34 	movhi	r7,16752
  803e94:	1009883a 	mov	r4,r2
  803e98:	180b883a 	mov	r5,r3
  803e9c:	102b883a 	mov	r21,r2
  803ea0:	1823883a 	mov	r17,r3
  803ea4:	080768c0 	call	80768c <__gedf2>
  803ea8:	1000e916 	blt	r2,zero,804250 <__kernel_rem_pio2+0xcf8>
  803eac:	000d883a 	mov	r6,zero
  803eb0:	01cf9c34 	movhi	r7,15984
  803eb4:	880b883a 	mov	r5,r17
  803eb8:	a809883a 	mov	r4,r21
  803ebc:	08077680 	call	807768 <__muldf3>
  803ec0:	180b883a 	mov	r5,r3
  803ec4:	1009883a 	mov	r4,r2
  803ec8:	080877c0 	call	80877c <__fixdfsi>
  803ecc:	1029883a 	mov	r20,r2
  803ed0:	9485883a 	add	r2,r18,r18
  803ed4:	1085883a 	add	r2,r2,r2
  803ed8:	a009883a 	mov	r4,r20
  803edc:	d8a1883a 	add	r16,sp,r2
  803ee0:	08087fc0 	call	8087fc <__floatsidf>
  803ee4:	000d883a 	mov	r6,zero
  803ee8:	01d05c34 	movhi	r7,16752
  803eec:	1009883a 	mov	r4,r2
  803ef0:	180b883a 	mov	r5,r3
  803ef4:	08077680 	call	807768 <__muldf3>
  803ef8:	880b883a 	mov	r5,r17
  803efc:	100d883a 	mov	r6,r2
  803f00:	180f883a 	mov	r7,r3
  803f04:	a809883a 	mov	r4,r21
  803f08:	0807e800 	call	807e80 <__subdf3>
  803f0c:	180b883a 	mov	r5,r3
  803f10:	1009883a 	mov	r4,r2
  803f14:	080877c0 	call	80877c <__fixdfsi>
  803f18:	da009017 	ldw	r8,576(sp)
  803f1c:	94400044 	addi	r17,r18,1
  803f20:	8c47883a 	add	r3,r17,r17
  803f24:	84007804 	addi	r16,r16,480
  803f28:	18c7883a 	add	r3,r3,r3
  803f2c:	80800015 	stw	r2,0(r16)
  803f30:	d8c7883a 	add	r3,sp,r3
  803f34:	42000604 	addi	r8,r8,24
  803f38:	da009015 	stw	r8,576(sp)
  803f3c:	1d007815 	stw	r20,480(r3)
  803f40:	003f4b06 	br	803c70 <__alt_data_end+0xff803c70>
  803f44:	da00a617 	ldw	r8,664(sp)
  803f48:	008000c4 	movi	r2,3
  803f4c:	40bfad1e 	bne	r8,r2,803e04 <__alt_data_end+0xff803e04>
  803f50:	0440bc0e 	bge	zero,r17,804244 <__kernel_rem_pio2+0xcec>
  803f54:	da008e17 	ldw	r8,568(sp)
  803f58:	882090fa 	slli	r16,r17,3
  803f5c:	dd402804 	addi	r21,sp,160
  803f60:	da05883a 	add	r2,sp,r8
  803f64:	10802804 	addi	r2,r2,160
  803f68:	15c00017 	ldw	r23,0(r2)
  803f6c:	15800117 	ldw	r22,4(r2)
  803f70:	8029883a 	mov	r20,r16
  803f74:	843ffe04 	addi	r16,r16,-8
  803f78:	ac21883a 	add	r16,r21,r16
  803f7c:	ad29883a 	add	r20,r21,r20
  803f80:	dac02604 	addi	r11,sp,152
  803f84:	8811883a 	mov	r8,r17
  803f88:	84400017 	ldw	r17,0(r16)
  803f8c:	87000117 	ldw	fp,4(r16)
  803f90:	b80d883a 	mov	r6,r23
  803f94:	b00f883a 	mov	r7,r22
  803f98:	8809883a 	mov	r4,r17
  803f9c:	e00b883a 	mov	r5,fp
  803fa0:	da009b15 	stw	r8,620(sp)
  803fa4:	dac09915 	stw	r11,612(sp)
  803fa8:	08064700 	call	806470 <__adddf3>
  803fac:	100d883a 	mov	r6,r2
  803fb0:	180f883a 	mov	r7,r3
  803fb4:	8809883a 	mov	r4,r17
  803fb8:	e00b883a 	mov	r5,fp
  803fbc:	1027883a 	mov	r19,r2
  803fc0:	1825883a 	mov	r18,r3
  803fc4:	0807e800 	call	807e80 <__subdf3>
  803fc8:	b80d883a 	mov	r6,r23
  803fcc:	b00f883a 	mov	r7,r22
  803fd0:	1009883a 	mov	r4,r2
  803fd4:	180b883a 	mov	r5,r3
  803fd8:	08064700 	call	806470 <__adddf3>
  803fdc:	dac09917 	ldw	r11,612(sp)
  803fe0:	a0800015 	stw	r2,0(r20)
  803fe4:	a0c00115 	stw	r3,4(r20)
  803fe8:	84c00015 	stw	r19,0(r16)
  803fec:	84800115 	stw	r18,4(r16)
  803ff0:	843ffe04 	addi	r16,r16,-8
  803ff4:	a53ffe04 	addi	r20,r20,-8
  803ff8:	982f883a 	mov	r23,r19
  803ffc:	902d883a 	mov	r22,r18
  804000:	da009b17 	ldw	r8,620(sp)
  804004:	5c3fe01e 	bne	r11,r16,803f88 <__alt_data_end+0xff803f88>
  804008:	00800044 	movi	r2,1
  80400c:	12008d0e 	bge	r2,r8,804244 <__kernel_rem_pio2+0xcec>
  804010:	402090fa 	slli	r16,r8,3
  804014:	da008e17 	ldw	r8,568(sp)
  804018:	8023883a 	mov	r17,r16
  80401c:	da05883a 	add	r2,sp,r8
  804020:	10802804 	addi	r2,r2,160
  804024:	15800017 	ldw	r22,0(r2)
  804028:	15000117 	ldw	r20,4(r2)
  80402c:	ac63883a 	add	r17,r21,r17
  804030:	843ffe04 	addi	r16,r16,-8
  804034:	ac21883a 	add	r16,r21,r16
  804038:	8825883a 	mov	r18,r17
  80403c:	8811883a 	mov	r8,r17
  804040:	84400017 	ldw	r17,0(r16)
  804044:	87000117 	ldw	fp,4(r16)
  804048:	b009883a 	mov	r4,r22
  80404c:	a00b883a 	mov	r5,r20
  804050:	880d883a 	mov	r6,r17
  804054:	e00f883a 	mov	r7,fp
  804058:	da009b15 	stw	r8,620(sp)
  80405c:	08064700 	call	806470 <__adddf3>
  804060:	100d883a 	mov	r6,r2
  804064:	180f883a 	mov	r7,r3
  804068:	8809883a 	mov	r4,r17
  80406c:	e00b883a 	mov	r5,fp
  804070:	102f883a 	mov	r23,r2
  804074:	1827883a 	mov	r19,r3
  804078:	0807e800 	call	807e80 <__subdf3>
  80407c:	b00d883a 	mov	r6,r22
  804080:	a00f883a 	mov	r7,r20
  804084:	1009883a 	mov	r4,r2
  804088:	180b883a 	mov	r5,r3
  80408c:	08064700 	call	806470 <__adddf3>
  804090:	90800015 	stw	r2,0(r18)
  804094:	90c00115 	stw	r3,4(r18)
  804098:	85c00015 	stw	r23,0(r16)
  80409c:	84c00115 	stw	r19,4(r16)
  8040a0:	843ffe04 	addi	r16,r16,-8
  8040a4:	94bffe04 	addi	r18,r18,-8
  8040a8:	b82d883a 	mov	r22,r23
  8040ac:	9829883a 	mov	r20,r19
  8040b0:	da009b17 	ldw	r8,620(sp)
  8040b4:	ac3fe21e 	bne	r21,r16,804040 <__alt_data_end+0xff804040>
  8040b8:	4023883a 	mov	r17,r8
  8040bc:	dc002a04 	addi	r16,sp,168
  8040c0:	0005883a 	mov	r2,zero
  8040c4:	0007883a 	mov	r3,zero
  8040c8:	89800017 	ldw	r6,0(r17)
  8040cc:	89c00117 	ldw	r7,4(r17)
  8040d0:	1009883a 	mov	r4,r2
  8040d4:	8c7ffe04 	addi	r17,r17,-8
  8040d8:	180b883a 	mov	r5,r3
  8040dc:	08064700 	call	806470 <__adddf3>
  8040e0:	847ff91e 	bne	r16,r17,8040c8 <__alt_data_end+0xff8040c8>
  8040e4:	da008d17 	ldw	r8,564(sp)
  8040e8:	40004726 	beq	r8,zero,804208 <__kernel_rem_pio2+0xcb0>
  8040ec:	d9002b17 	ldw	r4,172(sp)
  8040f0:	d9402917 	ldw	r5,164(sp)
  8040f4:	d9802a17 	ldw	r6,168(sp)
  8040f8:	da008f17 	ldw	r8,572(sp)
  8040fc:	d9c02817 	ldw	r7,160(sp)
  804100:	2960003c 	xorhi	r5,r5,32768
  804104:	2120003c 	xorhi	r4,r4,32768
  804108:	18e0003c 	xorhi	r3,r3,32768
  80410c:	41c00015 	stw	r7,0(r8)
  804110:	41400115 	stw	r5,4(r8)
  804114:	41800215 	stw	r6,8(r8)
  804118:	41000315 	stw	r4,12(r8)
  80411c:	40800415 	stw	r2,16(r8)
  804120:	40c00515 	stw	r3,20(r8)
  804124:	003f3706 	br	803e04 <__alt_data_end+0xff803e04>
  804128:	da008e17 	ldw	r8,568(sp)
  80412c:	d8802804 	addi	r2,sp,160
  804130:	dc002604 	addi	r16,sp,152
  804134:	1225883a 	add	r18,r2,r8
  804138:	0007883a 	mov	r3,zero
  80413c:	0005883a 	mov	r2,zero
  804140:	91800017 	ldw	r6,0(r18)
  804144:	91c00117 	ldw	r7,4(r18)
  804148:	1009883a 	mov	r4,r2
  80414c:	94bffe04 	addi	r18,r18,-8
  804150:	180b883a 	mov	r5,r3
  804154:	08064700 	call	806470 <__adddf3>
  804158:	943ff91e 	bne	r18,r16,804140 <__alt_data_end+0xff804140>
  80415c:	da008d17 	ldw	r8,564(sp)
  804160:	d9002817 	ldw	r4,160(sp)
  804164:	d9402917 	ldw	r5,164(sp)
  804168:	40001a26 	beq	r8,zero,8041d4 <__kernel_rem_pio2+0xc7c>
  80416c:	da008f17 	ldw	r8,572(sp)
  804170:	19a0003c 	xorhi	r6,r3,32768
  804174:	180f883a 	mov	r7,r3
  804178:	41800115 	stw	r6,4(r8)
  80417c:	40800015 	stw	r2,0(r8)
  804180:	100d883a 	mov	r6,r2
  804184:	0807e800 	call	807e80 <__subdf3>
  804188:	04400c0e 	bge	zero,r17,8041bc <__kernel_rem_pio2+0xc64>
  80418c:	dc002a04 	addi	r16,sp,168
  804190:	04800044 	movi	r18,1
  804194:	81800017 	ldw	r6,0(r16)
  804198:	81c00117 	ldw	r7,4(r16)
  80419c:	1009883a 	mov	r4,r2
  8041a0:	180b883a 	mov	r5,r3
  8041a4:	94800044 	addi	r18,r18,1
  8041a8:	08064700 	call	806470 <__adddf3>
  8041ac:	84000204 	addi	r16,r16,8
  8041b0:	8cbff80e 	bge	r17,r18,804194 <__alt_data_end+0xff804194>
  8041b4:	da008d17 	ldw	r8,564(sp)
  8041b8:	40004226 	beq	r8,zero,8042c4 <__kernel_rem_pio2+0xd6c>
  8041bc:	da008f17 	ldw	r8,572(sp)
  8041c0:	1009883a 	mov	r4,r2
  8041c4:	18a0003c 	xorhi	r2,r3,32768
  8041c8:	41000215 	stw	r4,8(r8)
  8041cc:	40800315 	stw	r2,12(r8)
  8041d0:	003f0c06 	br	803e04 <__alt_data_end+0xff803e04>
  8041d4:	da008f17 	ldw	r8,572(sp)
  8041d8:	100d883a 	mov	r6,r2
  8041dc:	180f883a 	mov	r7,r3
  8041e0:	40800015 	stw	r2,0(r8)
  8041e4:	40c00115 	stw	r3,4(r8)
  8041e8:	0807e800 	call	807e80 <__subdf3>
  8041ec:	047fe716 	blt	zero,r17,80418c <__alt_data_end+0xff80418c>
  8041f0:	da008f17 	ldw	r8,572(sp)
  8041f4:	1009883a 	mov	r4,r2
  8041f8:	1805883a 	mov	r2,r3
  8041fc:	41000215 	stw	r4,8(r8)
  804200:	40800315 	stw	r2,12(r8)
  804204:	003eff06 	br	803e04 <__alt_data_end+0xff803e04>
  804208:	da008f17 	ldw	r8,572(sp)
  80420c:	d9802817 	ldw	r6,160(sp)
  804210:	d9402a17 	ldw	r5,168(sp)
  804214:	d9002b17 	ldw	r4,172(sp)
  804218:	41800015 	stw	r6,0(r8)
  80421c:	d9802917 	ldw	r6,164(sp)
  804220:	41400215 	stw	r5,8(r8)
  804224:	41000315 	stw	r4,12(r8)
  804228:	41800115 	stw	r6,4(r8)
  80422c:	40800415 	stw	r2,16(r8)
  804230:	40c00515 	stw	r3,20(r8)
  804234:	003ef306 	br	803e04 <__alt_data_end+0xff803e04>
  804238:	da00a617 	ldw	r8,664(sp)
  80423c:	008000c4 	movi	r2,3
  804240:	40bef01e 	bne	r8,r2,803e04 <__alt_data_end+0xff803e04>
  804244:	0005883a 	mov	r2,zero
  804248:	0007883a 	mov	r3,zero
  80424c:	003fa506 	br	8040e4 <__alt_data_end+0xff8040e4>
  804250:	9485883a 	add	r2,r18,r18
  804254:	1085883a 	add	r2,r2,r2
  804258:	d8a1883a 	add	r16,sp,r2
  80425c:	880b883a 	mov	r5,r17
  804260:	a809883a 	mov	r4,r21
  804264:	84007804 	addi	r16,r16,480
  804268:	080877c0 	call	80877c <__fixdfsi>
  80426c:	80800015 	stw	r2,0(r16)
  804270:	9023883a 	mov	r17,r18
  804274:	003e7e06 	br	803c70 <__alt_data_end+0xff803c70>
  804278:	a80d883a 	mov	r6,r21
  80427c:	400f883a 	mov	r7,r8
  804280:	0009883a 	mov	r4,zero
  804284:	014ffc34 	movhi	r5,16368
  804288:	0807e800 	call	807e80 <__subdf3>
  80428c:	102b883a 	mov	r21,r2
  804290:	1811883a 	mov	r8,r3
  804294:	04c00084 	movi	r19,2
  804298:	003dc006 	br	80399c <__alt_data_end+0xff80399c>
  80429c:	da00a617 	ldw	r8,664(sp)
  8042a0:	00800084 	movi	r2,2
  8042a4:	123fe416 	blt	r2,r8,804238 <__alt_data_end+0xff804238>
  8042a8:	02000c16 	blt	zero,r8,8042dc <__kernel_rem_pio2+0xd84>
  8042ac:	403ed51e 	bne	r8,zero,803e04 <__alt_data_end+0xff803e04>
  8042b0:	0005883a 	mov	r2,zero
  8042b4:	0007883a 	mov	r3,zero
  8042b8:	003ecc06 	br	803dec <__alt_data_end+0xff803dec>
  8042bc:	d8009215 	stw	zero,584(sp)
  8042c0:	003cc306 	br	8035d0 <__alt_data_end+0xff8035d0>
  8042c4:	da008f17 	ldw	r8,572(sp)
  8042c8:	1009883a 	mov	r4,r2
  8042cc:	1805883a 	mov	r2,r3
  8042d0:	41000215 	stw	r4,8(r8)
  8042d4:	40800315 	stw	r2,12(r8)
  8042d8:	003eca06 	br	803e04 <__alt_data_end+0xff803e04>
  8042dc:	0005883a 	mov	r2,zero
  8042e0:	0007883a 	mov	r3,zero
  8042e4:	003f9d06 	br	80415c <__alt_data_end+0xff80415c>

008042e8 <__kernel_sin>:
  8042e8:	00a00034 	movhi	r2,32768
  8042ec:	defff404 	addi	sp,sp,-48
  8042f0:	10bfffc4 	addi	r2,r2,-1
  8042f4:	00cf9034 	movhi	r3,15936
  8042f8:	ddc00915 	stw	r23,36(sp)
  8042fc:	dd800815 	stw	r22,32(sp)
  804300:	dc400315 	stw	r17,12(sp)
  804304:	dc000215 	stw	r16,8(sp)
  804308:	dfc00b15 	stw	ra,44(sp)
  80430c:	df000a15 	stw	fp,40(sp)
  804310:	dd400715 	stw	r21,28(sp)
  804314:	dd000615 	stw	r20,24(sp)
  804318:	dcc00515 	stw	r19,20(sp)
  80431c:	dc800415 	stw	r18,16(sp)
  804320:	2884703a 	and	r2,r5,r2
  804324:	18ffffc4 	addi	r3,r3,-1
  804328:	2821883a 	mov	r16,r5
  80432c:	2023883a 	mov	r17,r4
  804330:	302f883a 	mov	r23,r6
  804334:	382d883a 	mov	r22,r7
  804338:	18800216 	blt	r3,r2,804344 <__kernel_sin+0x5c>
  80433c:	080877c0 	call	80877c <__fixdfsi>
  804340:	10009926 	beq	r2,zero,8045a8 <__kernel_sin+0x2c0>
  804344:	880d883a 	mov	r6,r17
  804348:	800f883a 	mov	r7,r16
  80434c:	8809883a 	mov	r4,r17
  804350:	800b883a 	mov	r5,r16
  804354:	08077680 	call	807768 <__muldf3>
  804358:	100d883a 	mov	r6,r2
  80435c:	180f883a 	mov	r7,r3
  804360:	8809883a 	mov	r4,r17
  804364:	800b883a 	mov	r5,r16
  804368:	1027883a 	mov	r19,r2
  80436c:	1825883a 	mov	r18,r3
  804370:	08077680 	call	807768 <__muldf3>
  804374:	0196b434 	movhi	r6,23248
  804378:	01cf79b4 	movhi	r7,15846
  80437c:	31b55f04 	addi	r6,r6,-10884
  804380:	39f64e84 	addi	r7,r7,-9926
  804384:	9809883a 	mov	r4,r19
  804388:	900b883a 	mov	r5,r18
  80438c:	102b883a 	mov	r21,r2
  804390:	1829883a 	mov	r20,r3
  804394:	08077680 	call	807768 <__muldf3>
  804398:	01a28b34 	movhi	r6,35372
  80439c:	01cf96f4 	movhi	r7,15963
  8043a0:	31a73ac4 	addi	r6,r6,-25365
  8043a4:	39f97984 	addi	r7,r7,-6682
  8043a8:	1009883a 	mov	r4,r2
  8043ac:	180b883a 	mov	r5,r3
  8043b0:	0807e800 	call	807e80 <__subdf3>
  8043b4:	980d883a 	mov	r6,r19
  8043b8:	900f883a 	mov	r7,r18
  8043bc:	1009883a 	mov	r4,r2
  8043c0:	180b883a 	mov	r5,r3
  8043c4:	08077680 	call	807768 <__muldf3>
  8043c8:	0195ecb4 	movhi	r6,22450
  8043cc:	01cfb1f4 	movhi	r7,16071
  8043d0:	31bf9f44 	addi	r6,r6,-387
  8043d4:	39c778c4 	addi	r7,r7,7651
  8043d8:	1009883a 	mov	r4,r2
  8043dc:	180b883a 	mov	r5,r3
  8043e0:	08064700 	call	806470 <__adddf3>
  8043e4:	980d883a 	mov	r6,r19
  8043e8:	900f883a 	mov	r7,r18
  8043ec:	1009883a 	mov	r4,r2
  8043f0:	180b883a 	mov	r5,r3
  8043f4:	08077680 	call	807768 <__muldf3>
  8043f8:	01867074 	movhi	r6,6593
  8043fc:	01cfcab4 	movhi	r7,16170
  804400:	31987544 	addi	r6,r6,25045
  804404:	39c06804 	addi	r7,r7,416
  804408:	1009883a 	mov	r4,r2
  80440c:	180b883a 	mov	r5,r3
  804410:	0807e800 	call	807e80 <__subdf3>
  804414:	980d883a 	mov	r6,r19
  804418:	900f883a 	mov	r7,r18
  80441c:	1009883a 	mov	r4,r2
  804420:	180b883a 	mov	r5,r3
  804424:	08077680 	call	807768 <__muldf3>
  804428:	01844474 	movhi	r6,4369
  80442c:	01cfe074 	movhi	r7,16257
  804430:	31be2984 	addi	r6,r6,-1882
  804434:	39c44444 	addi	r7,r7,4369
  804438:	1009883a 	mov	r4,r2
  80443c:	180b883a 	mov	r5,r3
  804440:	08064700 	call	806470 <__adddf3>
  804444:	1011883a 	mov	r8,r2
  804448:	d8800c17 	ldw	r2,48(sp)
  80444c:	1839883a 	mov	fp,r3
  804450:	10003e26 	beq	r2,zero,80454c <__kernel_sin+0x264>
  804454:	000d883a 	mov	r6,zero
  804458:	01cff834 	movhi	r7,16352
  80445c:	b809883a 	mov	r4,r23
  804460:	b00b883a 	mov	r5,r22
  804464:	da000015 	stw	r8,0(sp)
  804468:	08077680 	call	807768 <__muldf3>
  80446c:	da000017 	ldw	r8,0(sp)
  804470:	e00f883a 	mov	r7,fp
  804474:	a809883a 	mov	r4,r21
  804478:	400d883a 	mov	r6,r8
  80447c:	a00b883a 	mov	r5,r20
  804480:	d8c00115 	stw	r3,4(sp)
  804484:	d8800015 	stw	r2,0(sp)
  804488:	08077680 	call	807768 <__muldf3>
  80448c:	da800017 	ldw	r10,0(sp)
  804490:	da400117 	ldw	r9,4(sp)
  804494:	100d883a 	mov	r6,r2
  804498:	5009883a 	mov	r4,r10
  80449c:	480b883a 	mov	r5,r9
  8044a0:	180f883a 	mov	r7,r3
  8044a4:	0807e800 	call	807e80 <__subdf3>
  8044a8:	980d883a 	mov	r6,r19
  8044ac:	900f883a 	mov	r7,r18
  8044b0:	1009883a 	mov	r4,r2
  8044b4:	180b883a 	mov	r5,r3
  8044b8:	08077680 	call	807768 <__muldf3>
  8044bc:	b80d883a 	mov	r6,r23
  8044c0:	b00f883a 	mov	r7,r22
  8044c4:	1009883a 	mov	r4,r2
  8044c8:	180b883a 	mov	r5,r3
  8044cc:	0807e800 	call	807e80 <__subdf3>
  8044d0:	01955574 	movhi	r6,21845
  8044d4:	01cff174 	movhi	r7,16325
  8044d8:	31955244 	addi	r6,r6,21833
  8044dc:	39d55544 	addi	r7,r7,21845
  8044e0:	a809883a 	mov	r4,r21
  8044e4:	a00b883a 	mov	r5,r20
  8044e8:	1027883a 	mov	r19,r2
  8044ec:	1825883a 	mov	r18,r3
  8044f0:	08077680 	call	807768 <__muldf3>
  8044f4:	100d883a 	mov	r6,r2
  8044f8:	180f883a 	mov	r7,r3
  8044fc:	9809883a 	mov	r4,r19
  804500:	900b883a 	mov	r5,r18
  804504:	08064700 	call	806470 <__adddf3>
  804508:	100d883a 	mov	r6,r2
  80450c:	180f883a 	mov	r7,r3
  804510:	8809883a 	mov	r4,r17
  804514:	800b883a 	mov	r5,r16
  804518:	0807e800 	call	807e80 <__subdf3>
  80451c:	dfc00b17 	ldw	ra,44(sp)
  804520:	df000a17 	ldw	fp,40(sp)
  804524:	ddc00917 	ldw	r23,36(sp)
  804528:	dd800817 	ldw	r22,32(sp)
  80452c:	dd400717 	ldw	r21,28(sp)
  804530:	dd000617 	ldw	r20,24(sp)
  804534:	dcc00517 	ldw	r19,20(sp)
  804538:	dc800417 	ldw	r18,16(sp)
  80453c:	dc400317 	ldw	r17,12(sp)
  804540:	dc000217 	ldw	r16,8(sp)
  804544:	dec00c04 	addi	sp,sp,48
  804548:	f800283a 	ret
  80454c:	400d883a 	mov	r6,r8
  804550:	9809883a 	mov	r4,r19
  804554:	900b883a 	mov	r5,r18
  804558:	180f883a 	mov	r7,r3
  80455c:	08077680 	call	807768 <__muldf3>
  804560:	01955574 	movhi	r6,21845
  804564:	01cff174 	movhi	r7,16325
  804568:	31955244 	addi	r6,r6,21833
  80456c:	39d55544 	addi	r7,r7,21845
  804570:	1009883a 	mov	r4,r2
  804574:	180b883a 	mov	r5,r3
  804578:	0807e800 	call	807e80 <__subdf3>
  80457c:	a80d883a 	mov	r6,r21
  804580:	a00f883a 	mov	r7,r20
  804584:	1009883a 	mov	r4,r2
  804588:	180b883a 	mov	r5,r3
  80458c:	08077680 	call	807768 <__muldf3>
  804590:	880d883a 	mov	r6,r17
  804594:	800f883a 	mov	r7,r16
  804598:	1009883a 	mov	r4,r2
  80459c:	180b883a 	mov	r5,r3
  8045a0:	08064700 	call	806470 <__adddf3>
  8045a4:	003fdd06 	br	80451c <__alt_data_end+0xff80451c>
  8045a8:	8805883a 	mov	r2,r17
  8045ac:	8007883a 	mov	r3,r16
  8045b0:	003fda06 	br	80451c <__alt_data_end+0xff80451c>

008045b4 <fabs>:
  8045b4:	00e00034 	movhi	r3,32768
  8045b8:	18ffffc4 	addi	r3,r3,-1
  8045bc:	2005883a 	mov	r2,r4
  8045c0:	28c6703a 	and	r3,r5,r3
  8045c4:	f800283a 	ret

008045c8 <floor>:
  8045c8:	2811d53a 	srai	r8,r5,20
  8045cc:	defffa04 	addi	sp,sp,-24
  8045d0:	dcc00315 	stw	r19,12(sp)
  8045d4:	4201ffcc 	andi	r8,r8,2047
  8045d8:	dc800215 	stw	r18,8(sp)
  8045dc:	dc400115 	stw	r17,4(sp)
  8045e0:	dc000015 	stw	r16,0(sp)
  8045e4:	dfc00515 	stw	ra,20(sp)
  8045e8:	dd000415 	stw	r20,16(sp)
  8045ec:	44bf0044 	addi	r18,r8,-1023
  8045f0:	018004c4 	movi	r6,19
  8045f4:	2821883a 	mov	r16,r5
  8045f8:	2005883a 	mov	r2,r4
  8045fc:	280f883a 	mov	r7,r5
  804600:	2827883a 	mov	r19,r5
  804604:	2023883a 	mov	r17,r4
  804608:	34801916 	blt	r6,r18,804670 <floor+0xa8>
  80460c:	90003c16 	blt	r18,zero,804700 <floor+0x138>
  804610:	05000434 	movhi	r20,16
  804614:	a53fffc4 	addi	r20,r20,-1
  804618:	a4a9d83a 	sra	r20,r20,r18
  80461c:	2d0c703a 	and	r6,r5,r20
  804620:	310cb03a 	or	r6,r6,r4
  804624:	30001626 	beq	r6,zero,804680 <floor+0xb8>
  804628:	01a20034 	movhi	r6,34816
  80462c:	01df8e34 	movhi	r7,32312
  804630:	319d6704 	addi	r6,r6,30108
  804634:	39f90f04 	addi	r7,r7,-7108
  804638:	08064700 	call	806470 <__adddf3>
  80463c:	000d883a 	mov	r6,zero
  804640:	000f883a 	mov	r7,zero
  804644:	1009883a 	mov	r4,r2
  804648:	180b883a 	mov	r5,r3
  80464c:	080768c0 	call	80768c <__gedf2>
  804650:	0080040e 	bge	zero,r2,804664 <floor+0x9c>
  804654:	80003c16 	blt	r16,zero,804748 <floor+0x180>
  804658:	0520303a 	nor	r16,zero,r20
  80465c:	84e0703a 	and	r16,r16,r19
  804660:	0023883a 	mov	r17,zero
  804664:	8805883a 	mov	r2,r17
  804668:	8007883a 	mov	r3,r16
  80466c:	00000506 	br	804684 <floor+0xbc>
  804670:	01800cc4 	movi	r6,51
  804674:	34800b0e 	bge	r6,r18,8046a4 <floor+0xdc>
  804678:	01810004 	movi	r6,1024
  80467c:	91802f26 	beq	r18,r6,80473c <floor+0x174>
  804680:	3807883a 	mov	r3,r7
  804684:	dfc00517 	ldw	ra,20(sp)
  804688:	dd000417 	ldw	r20,16(sp)
  80468c:	dcc00317 	ldw	r19,12(sp)
  804690:	dc800217 	ldw	r18,8(sp)
  804694:	dc400117 	ldw	r17,4(sp)
  804698:	dc000017 	ldw	r16,0(sp)
  80469c:	dec00604 	addi	sp,sp,24
  8046a0:	f800283a 	ret
  8046a4:	423efb44 	addi	r8,r8,-1043
  8046a8:	053fffc4 	movi	r20,-1
  8046ac:	a228d83a 	srl	r20,r20,r8
  8046b0:	250c703a 	and	r6,r4,r20
  8046b4:	303ff226 	beq	r6,zero,804680 <__alt_data_end+0xff804680>
  8046b8:	01a20034 	movhi	r6,34816
  8046bc:	01df8e34 	movhi	r7,32312
  8046c0:	319d6704 	addi	r6,r6,30108
  8046c4:	39f90f04 	addi	r7,r7,-7108
  8046c8:	08064700 	call	806470 <__adddf3>
  8046cc:	000d883a 	mov	r6,zero
  8046d0:	000f883a 	mov	r7,zero
  8046d4:	1009883a 	mov	r4,r2
  8046d8:	180b883a 	mov	r5,r3
  8046dc:	080768c0 	call	80768c <__gedf2>
  8046e0:	00bfe00e 	bge	zero,r2,804664 <__alt_data_end+0xff804664>
  8046e4:	80001c16 	blt	r16,zero,804758 <floor+0x190>
  8046e8:	0510303a 	nor	r8,zero,r20
  8046ec:	9821883a 	mov	r16,r19
  8046f0:	8a22703a 	and	r17,r17,r8
  8046f4:	8805883a 	mov	r2,r17
  8046f8:	8007883a 	mov	r3,r16
  8046fc:	003fe106 	br	804684 <__alt_data_end+0xff804684>
  804700:	01a20034 	movhi	r6,34816
  804704:	01df8e34 	movhi	r7,32312
  804708:	319d6704 	addi	r6,r6,30108
  80470c:	39f90f04 	addi	r7,r7,-7108
  804710:	08064700 	call	806470 <__adddf3>
  804714:	000d883a 	mov	r6,zero
  804718:	000f883a 	mov	r7,zero
  80471c:	1009883a 	mov	r4,r2
  804720:	180b883a 	mov	r5,r3
  804724:	080768c0 	call	80768c <__gedf2>
  804728:	00bfce0e 	bge	zero,r2,804664 <__alt_data_end+0xff804664>
  80472c:	80001516 	blt	r16,zero,804784 <floor+0x1bc>
  804730:	0023883a 	mov	r17,zero
  804734:	0021883a 	mov	r16,zero
  804738:	003fca06 	br	804664 <__alt_data_end+0xff804664>
  80473c:	200d883a 	mov	r6,r4
  804740:	08064700 	call	806470 <__adddf3>
  804744:	003fcf06 	br	804684 <__alt_data_end+0xff804684>
  804748:	00800434 	movhi	r2,16
  80474c:	14a5d83a 	sra	r18,r2,r18
  804750:	84a7883a 	add	r19,r16,r18
  804754:	003fc006 	br	804658 <__alt_data_end+0xff804658>
  804758:	00800504 	movi	r2,20
  80475c:	90801326 	beq	r18,r2,8047ac <floor+0x1e4>
  804760:	00800d04 	movi	r2,52
  804764:	14a5c83a 	sub	r18,r2,r18
  804768:	00800044 	movi	r2,1
  80476c:	1484983a 	sll	r2,r2,r18
  804770:	1445883a 	add	r2,r2,r17
  804774:	14400b2e 	bgeu	r2,r17,8047a4 <floor+0x1dc>
  804778:	84c00044 	addi	r19,r16,1
  80477c:	1023883a 	mov	r17,r2
  804780:	003fd906 	br	8046e8 <__alt_data_end+0xff8046e8>
  804784:	00a00034 	movhi	r2,32768
  804788:	10bfffc4 	addi	r2,r2,-1
  80478c:	8084703a 	and	r2,r16,r2
  804790:	1462b03a 	or	r17,r2,r17
  804794:	883fb326 	beq	r17,zero,804664 <__alt_data_end+0xff804664>
  804798:	0023883a 	mov	r17,zero
  80479c:	042ffc34 	movhi	r16,49136
  8047a0:	003fb006 	br	804664 <__alt_data_end+0xff804664>
  8047a4:	1023883a 	mov	r17,r2
  8047a8:	003fcf06 	br	8046e8 <__alt_data_end+0xff8046e8>
  8047ac:	84c00044 	addi	r19,r16,1
  8047b0:	003fcd06 	br	8046e8 <__alt_data_end+0xff8046e8>

008047b4 <matherr>:
  8047b4:	0005883a 	mov	r2,zero
  8047b8:	f800283a 	ret

008047bc <rint>:
  8047bc:	2813d53a 	srai	r9,r5,20
  8047c0:	defff904 	addi	sp,sp,-28
  8047c4:	dc000215 	stw	r16,8(sp)
  8047c8:	4a41ffcc 	andi	r9,r9,2047
  8047cc:	dfc00615 	stw	ra,24(sp)
  8047d0:	dcc00515 	stw	r19,20(sp)
  8047d4:	dc800415 	stw	r18,16(sp)
  8047d8:	dc400315 	stw	r17,12(sp)
  8047dc:	01c004c4 	movi	r7,19
  8047e0:	49bf0044 	addi	r6,r9,-1023
  8047e4:	2811883a 	mov	r8,r5
  8047e8:	2005883a 	mov	r2,r4
  8047ec:	2807883a 	mov	r3,r5
  8047f0:	2015883a 	mov	r10,r4
  8047f4:	2820d7fa 	srli	r16,r5,31
  8047f8:	39801316 	blt	r7,r6,804848 <rint+0x8c>
  8047fc:	30003d16 	blt	r6,zero,8048f4 <rint+0x138>
  804800:	01000434 	movhi	r4,16
  804804:	213fffc4 	addi	r4,r4,-1
  804808:	2189d83a 	sra	r4,r4,r6
  80480c:	290a703a 	and	r5,r5,r4
  804810:	288ab03a 	or	r5,r5,r2
  804814:	28001026 	beq	r5,zero,804858 <rint+0x9c>
  804818:	2008d07a 	srli	r4,r4,1
  80481c:	4104703a 	and	r2,r8,r4
  804820:	1294b03a 	or	r10,r2,r10
  804824:	50005626 	beq	r10,zero,804980 <rint+0x1c4>
  804828:	31c05d26 	beq	r6,r7,8049a0 <rint+0x1e4>
  80482c:	0015883a 	mov	r10,zero
  804830:	00c00134 	movhi	r3,4
  804834:	1987d83a 	sra	r3,r3,r6
  804838:	0108303a 	nor	r4,zero,r4
  80483c:	2210703a 	and	r8,r4,r8
  804840:	40c6b03a 	or	r3,r8,r3
  804844:	00001806 	br	8048a8 <rint+0xec>
  804848:	01c00cc4 	movi	r7,51
  80484c:	3980090e 	bge	r7,r6,804874 <rint+0xb8>
  804850:	01c10004 	movi	r7,1024
  804854:	31c04e26 	beq	r6,r7,804990 <rint+0x1d4>
  804858:	dfc00617 	ldw	ra,24(sp)
  80485c:	dcc00517 	ldw	r19,20(sp)
  804860:	dc800417 	ldw	r18,16(sp)
  804864:	dc400317 	ldw	r17,12(sp)
  804868:	dc000217 	ldw	r16,8(sp)
  80486c:	dec00704 	addi	sp,sp,28
  804870:	f800283a 	ret
  804874:	4a7efb44 	addi	r9,r9,-1043
  804878:	013fffc4 	movi	r4,-1
  80487c:	2248d83a 	srl	r4,r4,r9
  804880:	110a703a 	and	r5,r2,r4
  804884:	28004026 	beq	r5,zero,804988 <rint+0x1cc>
  804888:	2008d07a 	srli	r4,r4,1
  80488c:	1104703a 	and	r2,r2,r4
  804890:	10000526 	beq	r2,zero,8048a8 <rint+0xec>
  804894:	00900034 	movhi	r2,16384
  804898:	1253d83a 	sra	r9,r2,r9
  80489c:	0108303a 	nor	r4,zero,r4
  8048a0:	2294703a 	and	r10,r4,r10
  8048a4:	4a94b03a 	or	r10,r9,r10
  8048a8:	802090fa 	slli	r16,r16,3
  8048ac:	180b883a 	mov	r5,r3
  8048b0:	00c02074 	movhi	r3,129
  8048b4:	18d68704 	addi	r3,r3,23068
  8048b8:	1c21883a 	add	r16,r3,r16
  8048bc:	84400017 	ldw	r17,0(r16)
  8048c0:	84000117 	ldw	r16,4(r16)
  8048c4:	5009883a 	mov	r4,r10
  8048c8:	880d883a 	mov	r6,r17
  8048cc:	800f883a 	mov	r7,r16
  8048d0:	08064700 	call	806470 <__adddf3>
  8048d4:	d8800015 	stw	r2,0(sp)
  8048d8:	d8c00115 	stw	r3,4(sp)
  8048dc:	d9000017 	ldw	r4,0(sp)
  8048e0:	d9400117 	ldw	r5,4(sp)
  8048e4:	880d883a 	mov	r6,r17
  8048e8:	800f883a 	mov	r7,r16
  8048ec:	0807e800 	call	807e80 <__subdf3>
  8048f0:	003fd906 	br	804858 <__alt_data_end+0xff804858>
  8048f4:	04600034 	movhi	r17,32768
  8048f8:	8c7fffc4 	addi	r17,r17,-1
  8048fc:	2c46703a 	and	r3,r5,r17
  804900:	1906b03a 	or	r3,r3,r4
  804904:	18002026 	beq	r3,zero,804988 <rint+0x1cc>
  804908:	01800434 	movhi	r6,16
  80490c:	31bfffc4 	addi	r6,r6,-1
  804910:	298c703a 	and	r6,r5,r6
  804914:	3104b03a 	or	r2,r6,r4
  804918:	008bc83a 	sub	r5,zero,r2
  80491c:	800690fa 	slli	r3,r16,3
  804920:	2884b03a 	or	r2,r5,r2
  804924:	01402074 	movhi	r5,129
  804928:	29568704 	addi	r5,r5,23068
  80492c:	28c7883a 	add	r3,r5,r3
  804930:	1004d33a 	srli	r2,r2,12
  804934:	1cc00017 	ldw	r19,0(r3)
  804938:	1c800117 	ldw	r18,4(r3)
  80493c:	417fffac 	andhi	r5,r8,65534
  804940:	1080022c 	andhi	r2,r2,8
  804944:	980d883a 	mov	r6,r19
  804948:	900f883a 	mov	r7,r18
  80494c:	114ab03a 	or	r5,r2,r5
  804950:	08064700 	call	806470 <__adddf3>
  804954:	d8800015 	stw	r2,0(sp)
  804958:	d8c00115 	stw	r3,4(sp)
  80495c:	d9000017 	ldw	r4,0(sp)
  804960:	d9400117 	ldw	r5,4(sp)
  804964:	980d883a 	mov	r6,r19
  804968:	900f883a 	mov	r7,r18
  80496c:	0807e800 	call	807e80 <__subdf3>
  804970:	800897fa 	slli	r4,r16,31
  804974:	1c46703a 	and	r3,r3,r17
  804978:	1906b03a 	or	r3,r3,r4
  80497c:	003fb606 	br	804858 <__alt_data_end+0xff804858>
  804980:	0015883a 	mov	r10,zero
  804984:	003fc806 	br	8048a8 <__alt_data_end+0xff8048a8>
  804988:	4007883a 	mov	r3,r8
  80498c:	003fb206 	br	804858 <__alt_data_end+0xff804858>
  804990:	200d883a 	mov	r6,r4
  804994:	280f883a 	mov	r7,r5
  804998:	08064700 	call	806470 <__adddf3>
  80499c:	003fae06 	br	804858 <__alt_data_end+0xff804858>
  8049a0:	02a00034 	movhi	r10,32768
  8049a4:	003fa206 	br	804830 <__alt_data_end+0xff804830>

008049a8 <scalbn>:
  8049a8:	2a1ffc2c 	andhi	r8,r5,32752
  8049ac:	4011d53a 	srai	r8,r8,20
  8049b0:	defffe04 	addi	sp,sp,-8
  8049b4:	dc000015 	stw	r16,0(sp)
  8049b8:	dfc00115 	stw	ra,4(sp)
  8049bc:	280f883a 	mov	r7,r5
  8049c0:	2015883a 	mov	r10,r4
  8049c4:	3021883a 	mov	r16,r6
  8049c8:	40001e1e 	bne	r8,zero,804a44 <scalbn+0x9c>
  8049cc:	00a00034 	movhi	r2,32768
  8049d0:	10bfffc4 	addi	r2,r2,-1
  8049d4:	2884703a 	and	r2,r5,r2
  8049d8:	1104b03a 	or	r2,r2,r4
  8049dc:	10002226 	beq	r2,zero,804a68 <scalbn+0xc0>
  8049e0:	01d0d434 	movhi	r7,17232
  8049e4:	000d883a 	mov	r6,zero
  8049e8:	08077680 	call	807768 <__muldf3>
  8049ec:	013ffff4 	movhi	r4,65535
  8049f0:	210f2c04 	addi	r4,r4,15536
  8049f4:	1015883a 	mov	r10,r2
  8049f8:	180f883a 	mov	r7,r3
  8049fc:	81002a16 	blt	r16,r4,804aa8 <scalbn+0x100>
  804a00:	191ffc2c 	andhi	r4,r3,32752
  804a04:	2009d53a 	srai	r4,r4,20
  804a08:	223ff284 	addi	r8,r4,-54
  804a0c:	8211883a 	add	r8,r16,r8
  804a10:	0081ff84 	movi	r2,2046
  804a14:	12002f16 	blt	r2,r8,804ad4 <scalbn+0x12c>
  804a18:	0200190e 	bge	zero,r8,804a80 <scalbn+0xd8>
  804a1c:	4010953a 	slli	r8,r8,20
  804a20:	01600434 	movhi	r5,32784
  804a24:	297fffc4 	addi	r5,r5,-1
  804a28:	194e703a 	and	r7,r3,r5
  804a2c:	5005883a 	mov	r2,r10
  804a30:	3a06b03a 	or	r3,r7,r8
  804a34:	dfc00117 	ldw	ra,4(sp)
  804a38:	dc000017 	ldw	r16,0(sp)
  804a3c:	dec00204 	addi	sp,sp,8
  804a40:	f800283a 	ret
  804a44:	0081ffc4 	movi	r2,2047
  804a48:	2807883a 	mov	r3,r5
  804a4c:	40bfef1e 	bne	r8,r2,804a0c <__alt_data_end+0xff804a0c>
  804a50:	200d883a 	mov	r6,r4
  804a54:	08064700 	call	806470 <__adddf3>
  804a58:	dfc00117 	ldw	ra,4(sp)
  804a5c:	dc000017 	ldw	r16,0(sp)
  804a60:	dec00204 	addi	sp,sp,8
  804a64:	f800283a 	ret
  804a68:	2005883a 	mov	r2,r4
  804a6c:	2807883a 	mov	r3,r5
  804a70:	dfc00117 	ldw	ra,4(sp)
  804a74:	dc000017 	ldw	r16,0(sp)
  804a78:	dec00204 	addi	sp,sp,8
  804a7c:	f800283a 	ret
  804a80:	00bff2c4 	movi	r2,-53
  804a84:	4080240e 	bge	r8,r2,804b18 <scalbn+0x170>
  804a88:	00b0d414 	movui	r2,50000
  804a8c:	14001116 	blt	r2,r16,804ad4 <scalbn+0x12c>
  804a90:	0130be74 	movhi	r4,49913
  804a94:	01406974 	movhi	r5,421
  804a98:	213cd644 	addi	r4,r4,-3239
  804a9c:	295b87c4 	addi	r5,r5,28191
  804aa0:	500d883a 	mov	r6,r10
  804aa4:	0804d100 	call	804d10 <copysign>
  804aa8:	01b0be74 	movhi	r6,49913
  804aac:	01c06974 	movhi	r7,421
  804ab0:	31bcd644 	addi	r6,r6,-3239
  804ab4:	39db87c4 	addi	r7,r7,28191
  804ab8:	1009883a 	mov	r4,r2
  804abc:	180b883a 	mov	r5,r3
  804ac0:	08077680 	call	807768 <__muldf3>
  804ac4:	dfc00117 	ldw	ra,4(sp)
  804ac8:	dc000017 	ldw	r16,0(sp)
  804acc:	dec00204 	addi	sp,sp,8
  804ad0:	f800283a 	ret
  804ad4:	01220034 	movhi	r4,34816
  804ad8:	015f8e34 	movhi	r5,32312
  804adc:	500d883a 	mov	r6,r10
  804ae0:	211d6704 	addi	r4,r4,30108
  804ae4:	29790f04 	addi	r5,r5,-7108
  804ae8:	0804d100 	call	804d10 <copysign>
  804aec:	01a20034 	movhi	r6,34816
  804af0:	01df8e34 	movhi	r7,32312
  804af4:	319d6704 	addi	r6,r6,30108
  804af8:	39f90f04 	addi	r7,r7,-7108
  804afc:	1009883a 	mov	r4,r2
  804b00:	180b883a 	mov	r5,r3
  804b04:	08077680 	call	807768 <__muldf3>
  804b08:	dfc00117 	ldw	ra,4(sp)
  804b0c:	dc000017 	ldw	r16,0(sp)
  804b10:	dec00204 	addi	sp,sp,8
  804b14:	f800283a 	ret
  804b18:	42000d84 	addi	r8,r8,54
  804b1c:	4012953a 	slli	r9,r8,20
  804b20:	01e00434 	movhi	r7,32784
  804b24:	39ffffc4 	addi	r7,r7,-1
  804b28:	19ca703a 	and	r5,r3,r7
  804b2c:	000d883a 	mov	r6,zero
  804b30:	01cf2434 	movhi	r7,15504
  804b34:	5009883a 	mov	r4,r10
  804b38:	494ab03a 	or	r5,r9,r5
  804b3c:	08077680 	call	807768 <__muldf3>
  804b40:	003fbc06 	br	804a34 <__alt_data_end+0xff804a34>

00804b44 <fabsf>:
  804b44:	00a00034 	movhi	r2,32768
  804b48:	10bfffc4 	addi	r2,r2,-1
  804b4c:	2084703a 	and	r2,r4,r2
  804b50:	f800283a 	ret

00804b54 <finitef>:
  804b54:	00a00034 	movhi	r2,32768
  804b58:	10bfffc4 	addi	r2,r2,-1
  804b5c:	1104703a 	and	r2,r2,r4
  804b60:	00dfe034 	movhi	r3,32640
  804b64:	10c4803a 	cmplt	r2,r2,r3
  804b68:	f800283a 	ret

00804b6c <__fpclassifyf>:
  804b6c:	00a00034 	movhi	r2,32768
  804b70:	10bfffc4 	addi	r2,r2,-1
  804b74:	2088703a 	and	r4,r4,r2
  804b78:	2000021e 	bne	r4,zero,804b84 <__fpclassifyf+0x18>
  804b7c:	00800084 	movi	r2,2
  804b80:	f800283a 	ret
  804b84:	00bfe034 	movhi	r2,65408
  804b88:	00dfc034 	movhi	r3,32512
  804b8c:	2085883a 	add	r2,r4,r2
  804b90:	18ffffc4 	addi	r3,r3,-1
  804b94:	18800236 	bltu	r3,r2,804ba0 <__fpclassifyf+0x34>
  804b98:	00800104 	movi	r2,4
  804b9c:	f800283a 	ret
  804ba0:	00c02034 	movhi	r3,128
  804ba4:	20bfffc4 	addi	r2,r4,-1
  804ba8:	18ffff84 	addi	r3,r3,-2
  804bac:	18800236 	bltu	r3,r2,804bb8 <__fpclassifyf+0x4c>
  804bb0:	008000c4 	movi	r2,3
  804bb4:	f800283a 	ret
  804bb8:	009fe034 	movhi	r2,32640
  804bbc:	2085003a 	cmpeq	r2,r4,r2
  804bc0:	f800283a 	ret

00804bc4 <nanf>:
  804bc4:	009ff034 	movhi	r2,32704
  804bc8:	f800283a 	ret

00804bcc <scalbnf>:
  804bcc:	00e00034 	movhi	r3,32768
  804bd0:	18ffffc4 	addi	r3,r3,-1
  804bd4:	1906703a 	and	r3,r3,r4
  804bd8:	200f883a 	mov	r7,r4
  804bdc:	18001f26 	beq	r3,zero,804c5c <scalbnf+0x90>
  804be0:	defffe04 	addi	sp,sp,-8
  804be4:	009fe034 	movhi	r2,32640
  804be8:	dc000015 	stw	r16,0(sp)
  804bec:	dfc00115 	stw	ra,4(sp)
  804bf0:	10bfffc4 	addi	r2,r2,-1
  804bf4:	2821883a 	mov	r16,r5
  804bf8:	10c01236 	bltu	r2,r3,804c44 <scalbnf+0x78>
  804bfc:	00802034 	movhi	r2,128
  804c00:	10bfffc4 	addi	r2,r2,-1
  804c04:	10c0172e 	bgeu	r2,r3,804c64 <scalbnf+0x98>
  804c08:	1806d5fa 	srli	r3,r3,23
  804c0c:	2005883a 	mov	r2,r4
  804c10:	1c07883a 	add	r3,r3,r16
  804c14:	01003f84 	movi	r4,254
  804c18:	20c02316 	blt	r4,r3,804ca8 <scalbnf+0xdc>
  804c1c:	00c01b0e 	bge	zero,r3,804c8c <scalbnf+0xc0>
  804c20:	180695fa 	slli	r3,r3,23
  804c24:	01602034 	movhi	r5,32896
  804c28:	297fffc4 	addi	r5,r5,-1
  804c2c:	1144703a 	and	r2,r2,r5
  804c30:	10c4b03a 	or	r2,r2,r3
  804c34:	dfc00117 	ldw	ra,4(sp)
  804c38:	dc000017 	ldw	r16,0(sp)
  804c3c:	dec00204 	addi	sp,sp,8
  804c40:	f800283a 	ret
  804c44:	200b883a 	mov	r5,r4
  804c48:	0804ef80 	call	804ef8 <__addsf3>
  804c4c:	dfc00117 	ldw	ra,4(sp)
  804c50:	dc000017 	ldw	r16,0(sp)
  804c54:	dec00204 	addi	sp,sp,8
  804c58:	f800283a 	ret
  804c5c:	2005883a 	mov	r2,r4
  804c60:	f800283a 	ret
  804c64:	01530034 	movhi	r5,19456
  804c68:	08059fc0 	call	8059fc <__mulsf3>
  804c6c:	00fffff4 	movhi	r3,65535
  804c70:	18cf2c04 	addi	r3,r3,15536
  804c74:	100f883a 	mov	r7,r2
  804c78:	80c01716 	blt	r16,r3,804cd8 <scalbnf+0x10c>
  804c7c:	119fe02c 	andhi	r6,r2,32640
  804c80:	300dd5fa 	srai	r6,r6,23
  804c84:	30fff9c4 	addi	r3,r6,-25
  804c88:	003fe106 	br	804c10 <__alt_data_end+0xff804c10>
  804c8c:	013ffa84 	movi	r4,-22
  804c90:	1900160e 	bge	r3,r4,804cec <scalbnf+0x120>
  804c94:	00b0d414 	movui	r2,50000
  804c98:	14000316 	blt	r2,r16,804ca8 <scalbnf+0xdc>
  804c9c:	040368b4 	movhi	r16,3490
  804ca0:	84109804 	addi	r16,r16,16992
  804ca4:	00000206 	br	804cb0 <scalbnf+0xe4>
  804ca8:	041c52b4 	movhi	r16,29002
  804cac:	843cb284 	addi	r16,r16,-3382
  804cb0:	380b883a 	mov	r5,r7
  804cb4:	8009883a 	mov	r4,r16
  804cb8:	0804d2c0 	call	804d2c <copysignf>
  804cbc:	800b883a 	mov	r5,r16
  804cc0:	1009883a 	mov	r4,r2
  804cc4:	08059fc0 	call	8059fc <__mulsf3>
  804cc8:	dfc00117 	ldw	ra,4(sp)
  804ccc:	dc000017 	ldw	r16,0(sp)
  804cd0:	dec00204 	addi	sp,sp,8
  804cd4:	f800283a 	ret
  804cd8:	014368b4 	movhi	r5,3490
  804cdc:	29509804 	addi	r5,r5,16992
  804ce0:	1009883a 	mov	r4,r2
  804ce4:	08059fc0 	call	8059fc <__mulsf3>
  804ce8:	003fd806 	br	804c4c <__alt_data_end+0xff804c4c>
  804cec:	18c00644 	addi	r3,r3,25
  804cf0:	180c95fa 	slli	r6,r3,23
  804cf4:	01202034 	movhi	r4,32896
  804cf8:	213fffc4 	addi	r4,r4,-1
  804cfc:	1108703a 	and	r4,r2,r4
  804d00:	014cc034 	movhi	r5,13056
  804d04:	3108b03a 	or	r4,r6,r4
  804d08:	08059fc0 	call	8059fc <__mulsf3>
  804d0c:	003fcf06 	br	804c4c <__alt_data_end+0xff804c4c>

00804d10 <copysign>:
  804d10:	2005883a 	mov	r2,r4
  804d14:	01200034 	movhi	r4,32768
  804d18:	213fffc4 	addi	r4,r4,-1
  804d1c:	38e0002c 	andhi	r3,r7,32768
  804d20:	290a703a 	and	r5,r5,r4
  804d24:	28c6b03a 	or	r3,r5,r3
  804d28:	f800283a 	ret

00804d2c <copysignf>:
  804d2c:	00e00034 	movhi	r3,32768
  804d30:	18ffffc4 	addi	r3,r3,-1
  804d34:	28a0002c 	andhi	r2,r5,32768
  804d38:	20c8703a 	and	r4,r4,r3
  804d3c:	2084b03a 	or	r2,r4,r2
  804d40:	f800283a 	ret

00804d44 <__divsi3>:
  804d44:	20001b16 	blt	r4,zero,804db4 <__divsi3+0x70>
  804d48:	000f883a 	mov	r7,zero
  804d4c:	28001616 	blt	r5,zero,804da8 <__divsi3+0x64>
  804d50:	200d883a 	mov	r6,r4
  804d54:	29001a2e 	bgeu	r5,r4,804dc0 <__divsi3+0x7c>
  804d58:	00800804 	movi	r2,32
  804d5c:	00c00044 	movi	r3,1
  804d60:	00000106 	br	804d68 <__divsi3+0x24>
  804d64:	10000d26 	beq	r2,zero,804d9c <__divsi3+0x58>
  804d68:	294b883a 	add	r5,r5,r5
  804d6c:	10bfffc4 	addi	r2,r2,-1
  804d70:	18c7883a 	add	r3,r3,r3
  804d74:	293ffb36 	bltu	r5,r4,804d64 <__alt_data_end+0xff804d64>
  804d78:	0005883a 	mov	r2,zero
  804d7c:	18000726 	beq	r3,zero,804d9c <__divsi3+0x58>
  804d80:	0005883a 	mov	r2,zero
  804d84:	31400236 	bltu	r6,r5,804d90 <__divsi3+0x4c>
  804d88:	314dc83a 	sub	r6,r6,r5
  804d8c:	10c4b03a 	or	r2,r2,r3
  804d90:	1806d07a 	srli	r3,r3,1
  804d94:	280ad07a 	srli	r5,r5,1
  804d98:	183ffa1e 	bne	r3,zero,804d84 <__alt_data_end+0xff804d84>
  804d9c:	38000126 	beq	r7,zero,804da4 <__divsi3+0x60>
  804da0:	0085c83a 	sub	r2,zero,r2
  804da4:	f800283a 	ret
  804da8:	014bc83a 	sub	r5,zero,r5
  804dac:	39c0005c 	xori	r7,r7,1
  804db0:	003fe706 	br	804d50 <__alt_data_end+0xff804d50>
  804db4:	0109c83a 	sub	r4,zero,r4
  804db8:	01c00044 	movi	r7,1
  804dbc:	003fe306 	br	804d4c <__alt_data_end+0xff804d4c>
  804dc0:	00c00044 	movi	r3,1
  804dc4:	003fee06 	br	804d80 <__alt_data_end+0xff804d80>

00804dc8 <__modsi3>:
  804dc8:	20001716 	blt	r4,zero,804e28 <__modsi3+0x60>
  804dcc:	000f883a 	mov	r7,zero
  804dd0:	2005883a 	mov	r2,r4
  804dd4:	28001216 	blt	r5,zero,804e20 <__modsi3+0x58>
  804dd8:	2900162e 	bgeu	r5,r4,804e34 <__modsi3+0x6c>
  804ddc:	01800804 	movi	r6,32
  804de0:	00c00044 	movi	r3,1
  804de4:	00000106 	br	804dec <__modsi3+0x24>
  804de8:	30000a26 	beq	r6,zero,804e14 <__modsi3+0x4c>
  804dec:	294b883a 	add	r5,r5,r5
  804df0:	31bfffc4 	addi	r6,r6,-1
  804df4:	18c7883a 	add	r3,r3,r3
  804df8:	293ffb36 	bltu	r5,r4,804de8 <__alt_data_end+0xff804de8>
  804dfc:	18000526 	beq	r3,zero,804e14 <__modsi3+0x4c>
  804e00:	1806d07a 	srli	r3,r3,1
  804e04:	11400136 	bltu	r2,r5,804e0c <__modsi3+0x44>
  804e08:	1145c83a 	sub	r2,r2,r5
  804e0c:	280ad07a 	srli	r5,r5,1
  804e10:	183ffb1e 	bne	r3,zero,804e00 <__alt_data_end+0xff804e00>
  804e14:	38000126 	beq	r7,zero,804e1c <__modsi3+0x54>
  804e18:	0085c83a 	sub	r2,zero,r2
  804e1c:	f800283a 	ret
  804e20:	014bc83a 	sub	r5,zero,r5
  804e24:	003fec06 	br	804dd8 <__alt_data_end+0xff804dd8>
  804e28:	0109c83a 	sub	r4,zero,r4
  804e2c:	01c00044 	movi	r7,1
  804e30:	003fe706 	br	804dd0 <__alt_data_end+0xff804dd0>
  804e34:	00c00044 	movi	r3,1
  804e38:	003ff106 	br	804e00 <__alt_data_end+0xff804e00>

00804e3c <__udivsi3>:
  804e3c:	200d883a 	mov	r6,r4
  804e40:	2900152e 	bgeu	r5,r4,804e98 <__udivsi3+0x5c>
  804e44:	28001416 	blt	r5,zero,804e98 <__udivsi3+0x5c>
  804e48:	00800804 	movi	r2,32
  804e4c:	00c00044 	movi	r3,1
  804e50:	00000206 	br	804e5c <__udivsi3+0x20>
  804e54:	10000e26 	beq	r2,zero,804e90 <__udivsi3+0x54>
  804e58:	28000516 	blt	r5,zero,804e70 <__udivsi3+0x34>
  804e5c:	294b883a 	add	r5,r5,r5
  804e60:	10bfffc4 	addi	r2,r2,-1
  804e64:	18c7883a 	add	r3,r3,r3
  804e68:	293ffa36 	bltu	r5,r4,804e54 <__alt_data_end+0xff804e54>
  804e6c:	18000826 	beq	r3,zero,804e90 <__udivsi3+0x54>
  804e70:	0005883a 	mov	r2,zero
  804e74:	31400236 	bltu	r6,r5,804e80 <__udivsi3+0x44>
  804e78:	314dc83a 	sub	r6,r6,r5
  804e7c:	10c4b03a 	or	r2,r2,r3
  804e80:	1806d07a 	srli	r3,r3,1
  804e84:	280ad07a 	srli	r5,r5,1
  804e88:	183ffa1e 	bne	r3,zero,804e74 <__alt_data_end+0xff804e74>
  804e8c:	f800283a 	ret
  804e90:	0005883a 	mov	r2,zero
  804e94:	f800283a 	ret
  804e98:	00c00044 	movi	r3,1
  804e9c:	003ff406 	br	804e70 <__alt_data_end+0xff804e70>

00804ea0 <__umodsi3>:
  804ea0:	2005883a 	mov	r2,r4
  804ea4:	2900122e 	bgeu	r5,r4,804ef0 <__umodsi3+0x50>
  804ea8:	28001116 	blt	r5,zero,804ef0 <__umodsi3+0x50>
  804eac:	01800804 	movi	r6,32
  804eb0:	00c00044 	movi	r3,1
  804eb4:	00000206 	br	804ec0 <__umodsi3+0x20>
  804eb8:	30000c26 	beq	r6,zero,804eec <__umodsi3+0x4c>
  804ebc:	28000516 	blt	r5,zero,804ed4 <__umodsi3+0x34>
  804ec0:	294b883a 	add	r5,r5,r5
  804ec4:	31bfffc4 	addi	r6,r6,-1
  804ec8:	18c7883a 	add	r3,r3,r3
  804ecc:	293ffa36 	bltu	r5,r4,804eb8 <__alt_data_end+0xff804eb8>
  804ed0:	18000626 	beq	r3,zero,804eec <__umodsi3+0x4c>
  804ed4:	1806d07a 	srli	r3,r3,1
  804ed8:	11400136 	bltu	r2,r5,804ee0 <__umodsi3+0x40>
  804edc:	1145c83a 	sub	r2,r2,r5
  804ee0:	280ad07a 	srli	r5,r5,1
  804ee4:	183ffb1e 	bne	r3,zero,804ed4 <__alt_data_end+0xff804ed4>
  804ee8:	f800283a 	ret
  804eec:	f800283a 	ret
  804ef0:	00c00044 	movi	r3,1
  804ef4:	003ff706 	br	804ed4 <__alt_data_end+0xff804ed4>

00804ef8 <__addsf3>:
  804ef8:	defffc04 	addi	sp,sp,-16
  804efc:	2004d7fa 	srli	r2,r4,31
  804f00:	280cd5fa 	srli	r6,r5,23
  804f04:	dc000015 	stw	r16,0(sp)
  804f08:	00c02034 	movhi	r3,128
  804f0c:	2020d5fa 	srli	r16,r4,23
  804f10:	280ed7fa 	srli	r7,r5,31
  804f14:	18ffffc4 	addi	r3,r3,-1
  804f18:	dc400115 	stw	r17,4(sp)
  804f1c:	1908703a 	and	r4,r3,r4
  804f20:	194a703a 	and	r5,r3,r5
  804f24:	dfc00315 	stw	ra,12(sp)
  804f28:	dc800215 	stw	r18,8(sp)
  804f2c:	14403fcc 	andi	r17,r2,255
  804f30:	84003fcc 	andi	r16,r16,255
  804f34:	200890fa 	slli	r4,r4,3
  804f38:	31803fcc 	andi	r6,r6,255
  804f3c:	280a90fa 	slli	r5,r5,3
  804f40:	89c05026 	beq	r17,r7,805084 <__addsf3+0x18c>
  804f44:	8185c83a 	sub	r2,r16,r6
  804f48:	00807a0e 	bge	zero,r2,805134 <__addsf3+0x23c>
  804f4c:	30001e1e 	bne	r6,zero,804fc8 <__addsf3+0xd0>
  804f50:	28006d1e 	bne	r5,zero,805108 <__addsf3+0x210>
  804f54:	208001cc 	andi	r2,r4,7
  804f58:	10000426 	beq	r2,zero,804f6c <__addsf3+0x74>
  804f5c:	208003cc 	andi	r2,r4,15
  804f60:	00c00104 	movi	r3,4
  804f64:	10c00126 	beq	r2,r3,804f6c <__addsf3+0x74>
  804f68:	20c9883a 	add	r4,r4,r3
  804f6c:	2081002c 	andhi	r2,r4,1024
  804f70:	10003926 	beq	r2,zero,805058 <__addsf3+0x160>
  804f74:	84000044 	addi	r16,r16,1
  804f78:	00803fc4 	movi	r2,255
  804f7c:	80807826 	beq	r16,r2,805160 <__addsf3+0x268>
  804f80:	200891ba 	slli	r4,r4,6
  804f84:	8805883a 	mov	r2,r17
  804f88:	2008d27a 	srli	r4,r4,9
  804f8c:	84003fcc 	andi	r16,r16,255
  804f90:	800695fa 	slli	r3,r16,23
  804f94:	10803fcc 	andi	r2,r2,255
  804f98:	04002034 	movhi	r16,128
  804f9c:	843fffc4 	addi	r16,r16,-1
  804fa0:	100497fa 	slli	r2,r2,31
  804fa4:	2408703a 	and	r4,r4,r16
  804fa8:	20e0b03a 	or	r16,r4,r3
  804fac:	8084b03a 	or	r2,r16,r2
  804fb0:	dfc00317 	ldw	ra,12(sp)
  804fb4:	dc800217 	ldw	r18,8(sp)
  804fb8:	dc400117 	ldw	r17,4(sp)
  804fbc:	dc000017 	ldw	r16,0(sp)
  804fc0:	dec00404 	addi	sp,sp,16
  804fc4:	f800283a 	ret
  804fc8:	00c03fc4 	movi	r3,255
  804fcc:	80ffe126 	beq	r16,r3,804f54 <__alt_data_end+0xff804f54>
  804fd0:	29410034 	orhi	r5,r5,1024
  804fd4:	00c006c4 	movi	r3,27
  804fd8:	18807516 	blt	r3,r2,8051b0 <__addsf3+0x2b8>
  804fdc:	00c00804 	movi	r3,32
  804fe0:	1887c83a 	sub	r3,r3,r2
  804fe4:	28c6983a 	sll	r3,r5,r3
  804fe8:	288ad83a 	srl	r5,r5,r2
  804fec:	1804c03a 	cmpne	r2,r3,zero
  804ff0:	288ab03a 	or	r5,r5,r2
  804ff4:	2149c83a 	sub	r4,r4,r5
  804ff8:	2081002c 	andhi	r2,r4,1024
  804ffc:	10001426 	beq	r2,zero,805050 <__addsf3+0x158>
  805000:	04810034 	movhi	r18,1024
  805004:	94bfffc4 	addi	r18,r18,-1
  805008:	24a4703a 	and	r18,r4,r18
  80500c:	9009883a 	mov	r4,r18
  805010:	0808b900 	call	808b90 <__clzsi2>
  805014:	10bffec4 	addi	r2,r2,-5
  805018:	90a4983a 	sll	r18,r18,r2
  80501c:	14005416 	blt	r2,r16,805170 <__addsf3+0x278>
  805020:	1405c83a 	sub	r2,r2,r16
  805024:	11000044 	addi	r4,r2,1
  805028:	00800804 	movi	r2,32
  80502c:	1105c83a 	sub	r2,r2,r4
  805030:	9084983a 	sll	r2,r18,r2
  805034:	9124d83a 	srl	r18,r18,r4
  805038:	0021883a 	mov	r16,zero
  80503c:	1008c03a 	cmpne	r4,r2,zero
  805040:	9108b03a 	or	r4,r18,r4
  805044:	003fc306 	br	804f54 <__alt_data_end+0xff804f54>
  805048:	1000db26 	beq	r2,zero,8053b8 <__addsf3+0x4c0>
  80504c:	1009883a 	mov	r4,r2
  805050:	208001cc 	andi	r2,r4,7
  805054:	103fc11e 	bne	r2,zero,804f5c <__alt_data_end+0xff804f5c>
  805058:	2006d0fa 	srli	r3,r4,3
  80505c:	01003fc4 	movi	r4,255
  805060:	8805883a 	mov	r2,r17
  805064:	8100241e 	bne	r16,r4,8050f8 <__addsf3+0x200>
  805068:	18006e26 	beq	r3,zero,805224 <__addsf3+0x32c>
  80506c:	19001034 	orhi	r4,r3,64
  805070:	00c02034 	movhi	r3,128
  805074:	18ffffc4 	addi	r3,r3,-1
  805078:	043fffc4 	movi	r16,-1
  80507c:	20c8703a 	and	r4,r4,r3
  805080:	003fc206 	br	804f8c <__alt_data_end+0xff804f8c>
  805084:	8187c83a 	sub	r3,r16,r6
  805088:	00c03e0e 	bge	zero,r3,805184 <__addsf3+0x28c>
  80508c:	30002326 	beq	r6,zero,80511c <__addsf3+0x224>
  805090:	01803fc4 	movi	r6,255
  805094:	81bfaf26 	beq	r16,r6,804f54 <__alt_data_end+0xff804f54>
  805098:	29410034 	orhi	r5,r5,1024
  80509c:	018006c4 	movi	r6,27
  8050a0:	30c07416 	blt	r6,r3,805274 <__addsf3+0x37c>
  8050a4:	01800804 	movi	r6,32
  8050a8:	30cdc83a 	sub	r6,r6,r3
  8050ac:	298c983a 	sll	r6,r5,r6
  8050b0:	28cad83a 	srl	r5,r5,r3
  8050b4:	3006c03a 	cmpne	r3,r6,zero
  8050b8:	28cab03a 	or	r5,r5,r3
  8050bc:	2149883a 	add	r4,r4,r5
  8050c0:	20c1002c 	andhi	r3,r4,1024
  8050c4:	183fe226 	beq	r3,zero,805050 <__alt_data_end+0xff805050>
  8050c8:	84000044 	addi	r16,r16,1
  8050cc:	00c03fc4 	movi	r3,255
  8050d0:	80c05426 	beq	r16,r3,805224 <__addsf3+0x32c>
  8050d4:	00bf0034 	movhi	r2,64512
  8050d8:	10bfffc4 	addi	r2,r2,-1
  8050dc:	20c0004c 	andi	r3,r4,1
  8050e0:	2088703a 	and	r4,r4,r2
  8050e4:	2008d07a 	srli	r4,r4,1
  8050e8:	20c8b03a 	or	r4,r4,r3
  8050ec:	003f9906 	br	804f54 <__alt_data_end+0xff804f54>
  8050f0:	0007883a 	mov	r3,zero
  8050f4:	0005883a 	mov	r2,zero
  8050f8:	01002034 	movhi	r4,128
  8050fc:	213fffc4 	addi	r4,r4,-1
  805100:	1908703a 	and	r4,r3,r4
  805104:	003fa106 	br	804f8c <__alt_data_end+0xff804f8c>
  805108:	10bfffc4 	addi	r2,r2,-1
  80510c:	103fb926 	beq	r2,zero,804ff4 <__alt_data_end+0xff804ff4>
  805110:	00c03fc4 	movi	r3,255
  805114:	80ffaf1e 	bne	r16,r3,804fd4 <__alt_data_end+0xff804fd4>
  805118:	003f8e06 	br	804f54 <__alt_data_end+0xff804f54>
  80511c:	283f8d26 	beq	r5,zero,804f54 <__alt_data_end+0xff804f54>
  805120:	18ffffc4 	addi	r3,r3,-1
  805124:	183fe526 	beq	r3,zero,8050bc <__alt_data_end+0xff8050bc>
  805128:	01803fc4 	movi	r6,255
  80512c:	81bfdb1e 	bne	r16,r6,80509c <__alt_data_end+0xff80509c>
  805130:	003f8806 	br	804f54 <__alt_data_end+0xff804f54>
  805134:	1000201e 	bne	r2,zero,8051b8 <__addsf3+0x2c0>
  805138:	80800044 	addi	r2,r16,1
  80513c:	10803fcc 	andi	r2,r2,255
  805140:	01800044 	movi	r6,1
  805144:	3080450e 	bge	r6,r2,80525c <__addsf3+0x364>
  805148:	2165c83a 	sub	r18,r4,r5
  80514c:	90c1002c 	andhi	r3,r18,1024
  805150:	18002b26 	beq	r3,zero,805200 <__addsf3+0x308>
  805154:	2925c83a 	sub	r18,r5,r4
  805158:	3823883a 	mov	r17,r7
  80515c:	003fab06 	br	80500c <__alt_data_end+0xff80500c>
  805160:	8805883a 	mov	r2,r17
  805164:	043fffc4 	movi	r16,-1
  805168:	0009883a 	mov	r4,zero
  80516c:	003f8706 	br	804f8c <__alt_data_end+0xff804f8c>
  805170:	013f0034 	movhi	r4,64512
  805174:	213fffc4 	addi	r4,r4,-1
  805178:	80a1c83a 	sub	r16,r16,r2
  80517c:	9108703a 	and	r4,r18,r4
  805180:	003f7406 	br	804f54 <__alt_data_end+0xff804f54>
  805184:	1800411e 	bne	r3,zero,80528c <__addsf3+0x394>
  805188:	80c00044 	addi	r3,r16,1
  80518c:	19c03fcc 	andi	r7,r3,255
  805190:	01800044 	movi	r6,1
  805194:	31c0260e 	bge	r6,r7,805230 <__addsf3+0x338>
  805198:	01803fc4 	movi	r6,255
  80519c:	19802126 	beq	r3,r6,805224 <__addsf3+0x32c>
  8051a0:	2149883a 	add	r4,r4,r5
  8051a4:	2008d07a 	srli	r4,r4,1
  8051a8:	1821883a 	mov	r16,r3
  8051ac:	003f6906 	br	804f54 <__alt_data_end+0xff804f54>
  8051b0:	01400044 	movi	r5,1
  8051b4:	003f8f06 	br	804ff4 <__alt_data_end+0xff804ff4>
  8051b8:	8000151e 	bne	r16,zero,805210 <__addsf3+0x318>
  8051bc:	20002f26 	beq	r4,zero,80527c <__addsf3+0x384>
  8051c0:	0084303a 	nor	r2,zero,r2
  8051c4:	10000a26 	beq	r2,zero,8051f0 <__addsf3+0x2f8>
  8051c8:	00c03fc4 	movi	r3,255
  8051cc:	30c02b26 	beq	r6,r3,80527c <__addsf3+0x384>
  8051d0:	00c006c4 	movi	r3,27
  8051d4:	18806d16 	blt	r3,r2,80538c <__addsf3+0x494>
  8051d8:	00c00804 	movi	r3,32
  8051dc:	1887c83a 	sub	r3,r3,r2
  8051e0:	20c6983a 	sll	r3,r4,r3
  8051e4:	2084d83a 	srl	r2,r4,r2
  8051e8:	1808c03a 	cmpne	r4,r3,zero
  8051ec:	1108b03a 	or	r4,r2,r4
  8051f0:	2909c83a 	sub	r4,r5,r4
  8051f4:	3021883a 	mov	r16,r6
  8051f8:	3823883a 	mov	r17,r7
  8051fc:	003f7e06 	br	804ff8 <__alt_data_end+0xff804ff8>
  805200:	903f821e 	bne	r18,zero,80500c <__alt_data_end+0xff80500c>
  805204:	0005883a 	mov	r2,zero
  805208:	0021883a 	mov	r16,zero
  80520c:	003fba06 	br	8050f8 <__alt_data_end+0xff8050f8>
  805210:	00c03fc4 	movi	r3,255
  805214:	30c01926 	beq	r6,r3,80527c <__addsf3+0x384>
  805218:	0085c83a 	sub	r2,zero,r2
  80521c:	21010034 	orhi	r4,r4,1024
  805220:	003feb06 	br	8051d0 <__alt_data_end+0xff8051d0>
  805224:	043fffc4 	movi	r16,-1
  805228:	0009883a 	mov	r4,zero
  80522c:	003f5706 	br	804f8c <__alt_data_end+0xff804f8c>
  805230:	80004a1e 	bne	r16,zero,80535c <__addsf3+0x464>
  805234:	20005926 	beq	r4,zero,80539c <__addsf3+0x4a4>
  805238:	283f4626 	beq	r5,zero,804f54 <__alt_data_end+0xff804f54>
  80523c:	2149883a 	add	r4,r4,r5
  805240:	2081002c 	andhi	r2,r4,1024
  805244:	103f8226 	beq	r2,zero,805050 <__alt_data_end+0xff805050>
  805248:	00bf0034 	movhi	r2,64512
  80524c:	10bfffc4 	addi	r2,r2,-1
  805250:	3021883a 	mov	r16,r6
  805254:	2088703a 	and	r4,r4,r2
  805258:	003f3e06 	br	804f54 <__alt_data_end+0xff804f54>
  80525c:	8000121e 	bne	r16,zero,8052a8 <__addsf3+0x3b0>
  805260:	2000261e 	bne	r4,zero,8052fc <__addsf3+0x404>
  805264:	283fa226 	beq	r5,zero,8050f0 <__alt_data_end+0xff8050f0>
  805268:	2809883a 	mov	r4,r5
  80526c:	3823883a 	mov	r17,r7
  805270:	003f3806 	br	804f54 <__alt_data_end+0xff804f54>
  805274:	01400044 	movi	r5,1
  805278:	003f9006 	br	8050bc <__alt_data_end+0xff8050bc>
  80527c:	2809883a 	mov	r4,r5
  805280:	3021883a 	mov	r16,r6
  805284:	3823883a 	mov	r17,r7
  805288:	003f3206 	br	804f54 <__alt_data_end+0xff804f54>
  80528c:	80000c1e 	bne	r16,zero,8052c0 <__addsf3+0x3c8>
  805290:	20002f26 	beq	r4,zero,805350 <__addsf3+0x458>
  805294:	00c6303a 	nor	r3,zero,r3
  805298:	18002b1e 	bne	r3,zero,805348 <__addsf3+0x450>
  80529c:	2149883a 	add	r4,r4,r5
  8052a0:	3021883a 	mov	r16,r6
  8052a4:	003f8606 	br	8050c0 <__alt_data_end+0xff8050c0>
  8052a8:	20001b1e 	bne	r4,zero,805318 <__addsf3+0x420>
  8052ac:	28003926 	beq	r5,zero,805394 <__addsf3+0x49c>
  8052b0:	2809883a 	mov	r4,r5
  8052b4:	3823883a 	mov	r17,r7
  8052b8:	04003fc4 	movi	r16,255
  8052bc:	003f2506 	br	804f54 <__alt_data_end+0xff804f54>
  8052c0:	01c03fc4 	movi	r7,255
  8052c4:	31c02226 	beq	r6,r7,805350 <__addsf3+0x458>
  8052c8:	00c7c83a 	sub	r3,zero,r3
  8052cc:	21010034 	orhi	r4,r4,1024
  8052d0:	01c006c4 	movi	r7,27
  8052d4:	38c03616 	blt	r7,r3,8053b0 <__addsf3+0x4b8>
  8052d8:	01c00804 	movi	r7,32
  8052dc:	38cfc83a 	sub	r7,r7,r3
  8052e0:	21ce983a 	sll	r7,r4,r7
  8052e4:	20c6d83a 	srl	r3,r4,r3
  8052e8:	3808c03a 	cmpne	r4,r7,zero
  8052ec:	1906b03a 	or	r3,r3,r4
  8052f0:	1949883a 	add	r4,r3,r5
  8052f4:	3021883a 	mov	r16,r6
  8052f8:	003f7106 	br	8050c0 <__alt_data_end+0xff8050c0>
  8052fc:	283f1526 	beq	r5,zero,804f54 <__alt_data_end+0xff804f54>
  805300:	2145c83a 	sub	r2,r4,r5
  805304:	10c1002c 	andhi	r3,r2,1024
  805308:	183f4f26 	beq	r3,zero,805048 <__alt_data_end+0xff805048>
  80530c:	2909c83a 	sub	r4,r5,r4
  805310:	3823883a 	mov	r17,r7
  805314:	003f0f06 	br	804f54 <__alt_data_end+0xff804f54>
  805318:	28001a26 	beq	r5,zero,805384 <__addsf3+0x48c>
  80531c:	2008d0fa 	srli	r4,r4,3
  805320:	2080102c 	andhi	r2,r4,64
  805324:	10000526 	beq	r2,zero,80533c <__addsf3+0x444>
  805328:	280ad0fa 	srli	r5,r5,3
  80532c:	2880102c 	andhi	r2,r5,64
  805330:	1000021e 	bne	r2,zero,80533c <__addsf3+0x444>
  805334:	2809883a 	mov	r4,r5
  805338:	3823883a 	mov	r17,r7
  80533c:	200890fa 	slli	r4,r4,3
  805340:	04003fc4 	movi	r16,255
  805344:	003f0306 	br	804f54 <__alt_data_end+0xff804f54>
  805348:	01c03fc4 	movi	r7,255
  80534c:	31ffe01e 	bne	r6,r7,8052d0 <__alt_data_end+0xff8052d0>
  805350:	2809883a 	mov	r4,r5
  805354:	3021883a 	mov	r16,r6
  805358:	003efe06 	br	804f54 <__alt_data_end+0xff804f54>
  80535c:	20001126 	beq	r4,zero,8053a4 <__addsf3+0x4ac>
  805360:	28000826 	beq	r5,zero,805384 <__addsf3+0x48c>
  805364:	2008d0fa 	srli	r4,r4,3
  805368:	2080102c 	andhi	r2,r4,64
  80536c:	103ff326 	beq	r2,zero,80533c <__alt_data_end+0xff80533c>
  805370:	280ad0fa 	srli	r5,r5,3
  805374:	2880102c 	andhi	r2,r5,64
  805378:	103ff01e 	bne	r2,zero,80533c <__alt_data_end+0xff80533c>
  80537c:	2809883a 	mov	r4,r5
  805380:	003fee06 	br	80533c <__alt_data_end+0xff80533c>
  805384:	04003fc4 	movi	r16,255
  805388:	003ef206 	br	804f54 <__alt_data_end+0xff804f54>
  80538c:	01000044 	movi	r4,1
  805390:	003f9706 	br	8051f0 <__alt_data_end+0xff8051f0>
  805394:	0005883a 	mov	r2,zero
  805398:	003f3406 	br	80506c <__alt_data_end+0xff80506c>
  80539c:	2809883a 	mov	r4,r5
  8053a0:	003eec06 	br	804f54 <__alt_data_end+0xff804f54>
  8053a4:	2809883a 	mov	r4,r5
  8053a8:	04003fc4 	movi	r16,255
  8053ac:	003ee906 	br	804f54 <__alt_data_end+0xff804f54>
  8053b0:	00c00044 	movi	r3,1
  8053b4:	003fce06 	br	8052f0 <__alt_data_end+0xff8052f0>
  8053b8:	0005883a 	mov	r2,zero
  8053bc:	003f4e06 	br	8050f8 <__alt_data_end+0xff8050f8>

008053c0 <__divsf3>:
  8053c0:	defff504 	addi	sp,sp,-44
  8053c4:	200cd5fa 	srli	r6,r4,23
  8053c8:	dcc00415 	stw	r19,16(sp)
  8053cc:	2026d7fa 	srli	r19,r4,31
  8053d0:	00c02034 	movhi	r3,128
  8053d4:	dd800715 	stw	r22,28(sp)
  8053d8:	dd000515 	stw	r20,20(sp)
  8053dc:	dc800315 	stw	r18,12(sp)
  8053e0:	18ffffc4 	addi	r3,r3,-1
  8053e4:	dfc00a15 	stw	ra,40(sp)
  8053e8:	df000915 	stw	fp,36(sp)
  8053ec:	ddc00815 	stw	r23,32(sp)
  8053f0:	dd400615 	stw	r21,24(sp)
  8053f4:	dc400215 	stw	r17,8(sp)
  8053f8:	dc000115 	stw	r16,4(sp)
  8053fc:	35003fcc 	andi	r20,r6,255
  805400:	1924703a 	and	r18,r3,r4
  805404:	9d803fcc 	andi	r22,r19,255
  805408:	a0005226 	beq	r20,zero,805554 <__divsf3+0x194>
  80540c:	00803fc4 	movi	r2,255
  805410:	a0802e26 	beq	r20,r2,8054cc <__divsf3+0x10c>
  805414:	91002034 	orhi	r4,r18,128
  805418:	202490fa 	slli	r18,r4,3
  80541c:	a53fe044 	addi	r20,r20,-127
  805420:	0021883a 	mov	r16,zero
  805424:	002f883a 	mov	r23,zero
  805428:	280cd5fa 	srli	r6,r5,23
  80542c:	282ad7fa 	srli	r21,r5,31
  805430:	00c02034 	movhi	r3,128
  805434:	18ffffc4 	addi	r3,r3,-1
  805438:	31803fcc 	andi	r6,r6,255
  80543c:	1962703a 	and	r17,r3,r5
  805440:	af003fcc 	andi	fp,r21,255
  805444:	30004a26 	beq	r6,zero,805570 <__divsf3+0x1b0>
  805448:	00803fc4 	movi	r2,255
  80544c:	30804526 	beq	r6,r2,805564 <__divsf3+0x1a4>
  805450:	89402034 	orhi	r5,r17,128
  805454:	282290fa 	slli	r17,r5,3
  805458:	31bfe044 	addi	r6,r6,-127
  80545c:	000b883a 	mov	r5,zero
  805460:	2c20b03a 	or	r16,r5,r16
  805464:	802090ba 	slli	r16,r16,2
  805468:	00802034 	movhi	r2,128
  80546c:	10952304 	addi	r2,r2,21644
  805470:	80a1883a 	add	r16,r16,r2
  805474:	81000017 	ldw	r4,0(r16)
  805478:	9d46f03a 	xor	r3,r19,r21
  80547c:	180f883a 	mov	r7,r3
  805480:	18803fcc 	andi	r2,r3,255
  805484:	a18dc83a 	sub	r6,r20,r6
  805488:	2000683a 	jmp	r4
  80548c:	00805670 	cmpltui	r2,zero,345
  805490:	008054f4 	movhi	r2,339
  805494:	00805664 	muli	r2,zero,345
  805498:	008054e0 	cmpeqi	r2,zero,339
  80549c:	00805664 	muli	r2,zero,345
  8054a0:	0080563c 	xorhi	r2,zero,344
  8054a4:	00805664 	muli	r2,zero,345
  8054a8:	008054e0 	cmpeqi	r2,zero,339
  8054ac:	008054f4 	movhi	r2,339
  8054b0:	008054f4 	movhi	r2,339
  8054b4:	0080563c 	xorhi	r2,zero,344
  8054b8:	008054e0 	cmpeqi	r2,zero,339
  8054bc:	00805750 	cmplti	r2,zero,349
  8054c0:	00805750 	cmplti	r2,zero,349
  8054c4:	00805750 	cmplti	r2,zero,349
  8054c8:	00805704 	movi	r2,348
  8054cc:	9000581e 	bne	r18,zero,805630 <__divsf3+0x270>
  8054d0:	04000204 	movi	r16,8
  8054d4:	05c00084 	movi	r23,2
  8054d8:	003fd306 	br	805428 <__alt_data_end+0xff805428>
  8054dc:	0023883a 	mov	r17,zero
  8054e0:	e02d883a 	mov	r22,fp
  8054e4:	282f883a 	mov	r23,r5
  8054e8:	00800084 	movi	r2,2
  8054ec:	b8808f1e 	bne	r23,r2,80572c <__divsf3+0x36c>
  8054f0:	b005883a 	mov	r2,r22
  8054f4:	11c0004c 	andi	r7,r2,1
  8054f8:	013fffc4 	movi	r4,-1
  8054fc:	000d883a 	mov	r6,zero
  805500:	21003fcc 	andi	r4,r4,255
  805504:	200895fa 	slli	r4,r4,23
  805508:	38803fcc 	andi	r2,r7,255
  80550c:	00c02034 	movhi	r3,128
  805510:	100497fa 	slli	r2,r2,31
  805514:	18ffffc4 	addi	r3,r3,-1
  805518:	30c6703a 	and	r3,r6,r3
  80551c:	1906b03a 	or	r3,r3,r4
  805520:	1884b03a 	or	r2,r3,r2
  805524:	dfc00a17 	ldw	ra,40(sp)
  805528:	df000917 	ldw	fp,36(sp)
  80552c:	ddc00817 	ldw	r23,32(sp)
  805530:	dd800717 	ldw	r22,28(sp)
  805534:	dd400617 	ldw	r21,24(sp)
  805538:	dd000517 	ldw	r20,20(sp)
  80553c:	dcc00417 	ldw	r19,16(sp)
  805540:	dc800317 	ldw	r18,12(sp)
  805544:	dc400217 	ldw	r17,8(sp)
  805548:	dc000117 	ldw	r16,4(sp)
  80554c:	dec00b04 	addi	sp,sp,44
  805550:	f800283a 	ret
  805554:	90002b1e 	bne	r18,zero,805604 <__divsf3+0x244>
  805558:	04000104 	movi	r16,4
  80555c:	05c00044 	movi	r23,1
  805560:	003fb106 	br	805428 <__alt_data_end+0xff805428>
  805564:	8800251e 	bne	r17,zero,8055fc <__divsf3+0x23c>
  805568:	01400084 	movi	r5,2
  80556c:	00000206 	br	805578 <__divsf3+0x1b8>
  805570:	88001a1e 	bne	r17,zero,8055dc <__divsf3+0x21c>
  805574:	01400044 	movi	r5,1
  805578:	8160b03a 	or	r16,r16,r5
  80557c:	802090ba 	slli	r16,r16,2
  805580:	00c02034 	movhi	r3,128
  805584:	18d56704 	addi	r3,r3,21916
  805588:	80e1883a 	add	r16,r16,r3
  80558c:	80c00017 	ldw	r3,0(r16)
  805590:	9d44f03a 	xor	r2,r19,r21
  805594:	a18dc83a 	sub	r6,r20,r6
  805598:	1800683a 	jmp	r3
  80559c:	008054f4 	movhi	r2,339
  8055a0:	008054f4 	movhi	r2,339
  8055a4:	00805740 	call	80574 <__alt_mem_sdram-0x77fa8c>
  8055a8:	008054dc 	xori	r2,zero,339
  8055ac:	00805740 	call	80574 <__alt_mem_sdram-0x77fa8c>
  8055b0:	0080563c 	xorhi	r2,zero,344
  8055b4:	00805740 	call	80574 <__alt_mem_sdram-0x77fa8c>
  8055b8:	008054dc 	xori	r2,zero,339
  8055bc:	008054f4 	movhi	r2,339
  8055c0:	008054f4 	movhi	r2,339
  8055c4:	0080563c 	xorhi	r2,zero,344
  8055c8:	008054dc 	xori	r2,zero,339
  8055cc:	00805750 	cmplti	r2,zero,349
  8055d0:	00805750 	cmplti	r2,zero,349
  8055d4:	00805750 	cmplti	r2,zero,349
  8055d8:	00805768 	cmpgeui	r2,zero,349
  8055dc:	8809883a 	mov	r4,r17
  8055e0:	0808b900 	call	808b90 <__clzsi2>
  8055e4:	10fffec4 	addi	r3,r2,-5
  8055e8:	10801d84 	addi	r2,r2,118
  8055ec:	88e2983a 	sll	r17,r17,r3
  8055f0:	008dc83a 	sub	r6,zero,r2
  8055f4:	000b883a 	mov	r5,zero
  8055f8:	003f9906 	br	805460 <__alt_data_end+0xff805460>
  8055fc:	014000c4 	movi	r5,3
  805600:	003f9706 	br	805460 <__alt_data_end+0xff805460>
  805604:	9009883a 	mov	r4,r18
  805608:	d9400015 	stw	r5,0(sp)
  80560c:	0808b900 	call	808b90 <__clzsi2>
  805610:	10fffec4 	addi	r3,r2,-5
  805614:	11801d84 	addi	r6,r2,118
  805618:	90e4983a 	sll	r18,r18,r3
  80561c:	01a9c83a 	sub	r20,zero,r6
  805620:	0021883a 	mov	r16,zero
  805624:	002f883a 	mov	r23,zero
  805628:	d9400017 	ldw	r5,0(sp)
  80562c:	003f7e06 	br	805428 <__alt_data_end+0xff805428>
  805630:	04000304 	movi	r16,12
  805634:	05c000c4 	movi	r23,3
  805638:	003f7b06 	br	805428 <__alt_data_end+0xff805428>
  80563c:	01802034 	movhi	r6,128
  805640:	000f883a 	mov	r7,zero
  805644:	31bfffc4 	addi	r6,r6,-1
  805648:	013fffc4 	movi	r4,-1
  80564c:	003fac06 	br	805500 <__alt_data_end+0xff805500>
  805650:	01400044 	movi	r5,1
  805654:	2909c83a 	sub	r4,r5,r4
  805658:	00c006c4 	movi	r3,27
  80565c:	19004b0e 	bge	r3,r4,80578c <__divsf3+0x3cc>
  805660:	114e703a 	and	r7,r2,r5
  805664:	0009883a 	mov	r4,zero
  805668:	000d883a 	mov	r6,zero
  80566c:	003fa406 	br	805500 <__alt_data_end+0xff805500>
  805670:	9006917a 	slli	r3,r18,5
  805674:	8822917a 	slli	r17,r17,5
  805678:	1c40372e 	bgeu	r3,r17,805758 <__divsf3+0x398>
  80567c:	31bfffc4 	addi	r6,r6,-1
  805680:	010006c4 	movi	r4,27
  805684:	000b883a 	mov	r5,zero
  805688:	180f883a 	mov	r7,r3
  80568c:	294b883a 	add	r5,r5,r5
  805690:	18c7883a 	add	r3,r3,r3
  805694:	38000116 	blt	r7,zero,80569c <__divsf3+0x2dc>
  805698:	1c400236 	bltu	r3,r17,8056a4 <__divsf3+0x2e4>
  80569c:	1c47c83a 	sub	r3,r3,r17
  8056a0:	29400054 	ori	r5,r5,1
  8056a4:	213fffc4 	addi	r4,r4,-1
  8056a8:	203ff71e 	bne	r4,zero,805688 <__alt_data_end+0xff805688>
  8056ac:	1806c03a 	cmpne	r3,r3,zero
  8056b0:	1962b03a 	or	r17,r3,r5
  8056b4:	31001fc4 	addi	r4,r6,127
  8056b8:	013fe50e 	bge	zero,r4,805650 <__alt_data_end+0xff805650>
  8056bc:	88c001cc 	andi	r3,r17,7
  8056c0:	18000426 	beq	r3,zero,8056d4 <__divsf3+0x314>
  8056c4:	88c003cc 	andi	r3,r17,15
  8056c8:	01400104 	movi	r5,4
  8056cc:	19400126 	beq	r3,r5,8056d4 <__divsf3+0x314>
  8056d0:	8963883a 	add	r17,r17,r5
  8056d4:	88c2002c 	andhi	r3,r17,2048
  8056d8:	18000426 	beq	r3,zero,8056ec <__divsf3+0x32c>
  8056dc:	00fe0034 	movhi	r3,63488
  8056e0:	18ffffc4 	addi	r3,r3,-1
  8056e4:	31002004 	addi	r4,r6,128
  8056e8:	88e2703a 	and	r17,r17,r3
  8056ec:	00c03f84 	movi	r3,254
  8056f0:	193f8016 	blt	r3,r4,8054f4 <__alt_data_end+0xff8054f4>
  8056f4:	880c91ba 	slli	r6,r17,6
  8056f8:	11c0004c 	andi	r7,r2,1
  8056fc:	300cd27a 	srli	r6,r6,9
  805700:	003f7f06 	br	805500 <__alt_data_end+0xff805500>
  805704:	9080102c 	andhi	r2,r18,64
  805708:	10000226 	beq	r2,zero,805714 <__divsf3+0x354>
  80570c:	8880102c 	andhi	r2,r17,64
  805710:	10001826 	beq	r2,zero,805774 <__divsf3+0x3b4>
  805714:	00802034 	movhi	r2,128
  805718:	91801034 	orhi	r6,r18,64
  80571c:	10bfffc4 	addi	r2,r2,-1
  805720:	980f883a 	mov	r7,r19
  805724:	308c703a 	and	r6,r6,r2
  805728:	003fc706 	br	805648 <__alt_data_end+0xff805648>
  80572c:	008000c4 	movi	r2,3
  805730:	b8802d26 	beq	r23,r2,8057e8 <__divsf3+0x428>
  805734:	00c00044 	movi	r3,1
  805738:	b005883a 	mov	r2,r22
  80573c:	b8ffdd1e 	bne	r23,r3,8056b4 <__alt_data_end+0xff8056b4>
  805740:	11c0004c 	andi	r7,r2,1
  805744:	0009883a 	mov	r4,zero
  805748:	000d883a 	mov	r6,zero
  80574c:	003f6c06 	br	805500 <__alt_data_end+0xff805500>
  805750:	9023883a 	mov	r17,r18
  805754:	003f6406 	br	8054e8 <__alt_data_end+0xff8054e8>
  805758:	1c47c83a 	sub	r3,r3,r17
  80575c:	01000684 	movi	r4,26
  805760:	01400044 	movi	r5,1
  805764:	003fc806 	br	805688 <__alt_data_end+0xff805688>
  805768:	9080102c 	andhi	r2,r18,64
  80576c:	103fe926 	beq	r2,zero,805714 <__alt_data_end+0xff805714>
  805770:	0023883a 	mov	r17,zero
  805774:	00802034 	movhi	r2,128
  805778:	89801034 	orhi	r6,r17,64
  80577c:	10bfffc4 	addi	r2,r2,-1
  805780:	a80f883a 	mov	r7,r21
  805784:	308c703a 	and	r6,r6,r2
  805788:	003faf06 	br	805648 <__alt_data_end+0xff805648>
  80578c:	01c00804 	movi	r7,32
  805790:	390fc83a 	sub	r7,r7,r4
  805794:	89ce983a 	sll	r7,r17,r7
  805798:	890ad83a 	srl	r5,r17,r4
  80579c:	380ec03a 	cmpne	r7,r7,zero
  8057a0:	29cab03a 	or	r5,r5,r7
  8057a4:	28c001cc 	andi	r3,r5,7
  8057a8:	18000426 	beq	r3,zero,8057bc <__divsf3+0x3fc>
  8057ac:	28c003cc 	andi	r3,r5,15
  8057b0:	01000104 	movi	r4,4
  8057b4:	19000126 	beq	r3,r4,8057bc <__divsf3+0x3fc>
  8057b8:	290b883a 	add	r5,r5,r4
  8057bc:	28c1002c 	andhi	r3,r5,1024
  8057c0:	18000426 	beq	r3,zero,8057d4 <__divsf3+0x414>
  8057c4:	11c0004c 	andi	r7,r2,1
  8057c8:	01000044 	movi	r4,1
  8057cc:	000d883a 	mov	r6,zero
  8057d0:	003f4b06 	br	805500 <__alt_data_end+0xff805500>
  8057d4:	280a91ba 	slli	r5,r5,6
  8057d8:	11c0004c 	andi	r7,r2,1
  8057dc:	0009883a 	mov	r4,zero
  8057e0:	280cd27a 	srli	r6,r5,9
  8057e4:	003f4606 	br	805500 <__alt_data_end+0xff805500>
  8057e8:	00802034 	movhi	r2,128
  8057ec:	89801034 	orhi	r6,r17,64
  8057f0:	10bfffc4 	addi	r2,r2,-1
  8057f4:	b00f883a 	mov	r7,r22
  8057f8:	308c703a 	and	r6,r6,r2
  8057fc:	003f9206 	br	805648 <__alt_data_end+0xff805648>

00805800 <__eqsf2>:
  805800:	2006d5fa 	srli	r3,r4,23
  805804:	280cd5fa 	srli	r6,r5,23
  805808:	01c02034 	movhi	r7,128
  80580c:	39ffffc4 	addi	r7,r7,-1
  805810:	18c03fcc 	andi	r3,r3,255
  805814:	02003fc4 	movi	r8,255
  805818:	3904703a 	and	r2,r7,r4
  80581c:	31803fcc 	andi	r6,r6,255
  805820:	394e703a 	and	r7,r7,r5
  805824:	2008d7fa 	srli	r4,r4,31
  805828:	280ad7fa 	srli	r5,r5,31
  80582c:	1a000d26 	beq	r3,r8,805864 <__eqsf2+0x64>
  805830:	02003fc4 	movi	r8,255
  805834:	32000826 	beq	r6,r8,805858 <__eqsf2+0x58>
  805838:	19800226 	beq	r3,r6,805844 <__eqsf2+0x44>
  80583c:	00800044 	movi	r2,1
  805840:	f800283a 	ret
  805844:	11fffd1e 	bne	r2,r7,80583c <__alt_data_end+0xff80583c>
  805848:	21400926 	beq	r4,r5,805870 <__eqsf2+0x70>
  80584c:	183ffb1e 	bne	r3,zero,80583c <__alt_data_end+0xff80583c>
  805850:	1004c03a 	cmpne	r2,r2,zero
  805854:	f800283a 	ret
  805858:	383ff726 	beq	r7,zero,805838 <__alt_data_end+0xff805838>
  80585c:	00800044 	movi	r2,1
  805860:	f800283a 	ret
  805864:	103ff226 	beq	r2,zero,805830 <__alt_data_end+0xff805830>
  805868:	00800044 	movi	r2,1
  80586c:	f800283a 	ret
  805870:	0005883a 	mov	r2,zero
  805874:	f800283a 	ret

00805878 <__gesf2>:
  805878:	2004d5fa 	srli	r2,r4,23
  80587c:	2806d5fa 	srli	r3,r5,23
  805880:	01802034 	movhi	r6,128
  805884:	31bfffc4 	addi	r6,r6,-1
  805888:	10803fcc 	andi	r2,r2,255
  80588c:	01c03fc4 	movi	r7,255
  805890:	3110703a 	and	r8,r6,r4
  805894:	18c03fcc 	andi	r3,r3,255
  805898:	314c703a 	and	r6,r6,r5
  80589c:	2008d7fa 	srli	r4,r4,31
  8058a0:	280ad7fa 	srli	r5,r5,31
  8058a4:	11c01926 	beq	r2,r7,80590c <__gesf2+0x94>
  8058a8:	01c03fc4 	movi	r7,255
  8058ac:	19c00f26 	beq	r3,r7,8058ec <__gesf2+0x74>
  8058b0:	1000061e 	bne	r2,zero,8058cc <__gesf2+0x54>
  8058b4:	400f003a 	cmpeq	r7,r8,zero
  8058b8:	1800071e 	bne	r3,zero,8058d8 <__gesf2+0x60>
  8058bc:	3000061e 	bne	r6,zero,8058d8 <__gesf2+0x60>
  8058c0:	0005883a 	mov	r2,zero
  8058c4:	40000e1e 	bne	r8,zero,805900 <__gesf2+0x88>
  8058c8:	f800283a 	ret
  8058cc:	18000a1e 	bne	r3,zero,8058f8 <__gesf2+0x80>
  8058d0:	30000b26 	beq	r6,zero,805900 <__gesf2+0x88>
  8058d4:	000f883a 	mov	r7,zero
  8058d8:	29403fcc 	andi	r5,r5,255
  8058dc:	38000726 	beq	r7,zero,8058fc <__gesf2+0x84>
  8058e0:	28000826 	beq	r5,zero,805904 <__gesf2+0x8c>
  8058e4:	00800044 	movi	r2,1
  8058e8:	f800283a 	ret
  8058ec:	303ff026 	beq	r6,zero,8058b0 <__alt_data_end+0xff8058b0>
  8058f0:	00bfff84 	movi	r2,-2
  8058f4:	f800283a 	ret
  8058f8:	29403fcc 	andi	r5,r5,255
  8058fc:	21400526 	beq	r4,r5,805914 <__gesf2+0x9c>
  805900:	203ff826 	beq	r4,zero,8058e4 <__alt_data_end+0xff8058e4>
  805904:	00bfffc4 	movi	r2,-1
  805908:	f800283a 	ret
  80590c:	403fe626 	beq	r8,zero,8058a8 <__alt_data_end+0xff8058a8>
  805910:	003ff706 	br	8058f0 <__alt_data_end+0xff8058f0>
  805914:	18bffa16 	blt	r3,r2,805900 <__alt_data_end+0xff805900>
  805918:	10c00216 	blt	r2,r3,805924 <__gesf2+0xac>
  80591c:	323ff836 	bltu	r6,r8,805900 <__alt_data_end+0xff805900>
  805920:	4180022e 	bgeu	r8,r6,80592c <__gesf2+0xb4>
  805924:	203fef1e 	bne	r4,zero,8058e4 <__alt_data_end+0xff8058e4>
  805928:	003ff606 	br	805904 <__alt_data_end+0xff805904>
  80592c:	0005883a 	mov	r2,zero
  805930:	f800283a 	ret

00805934 <__lesf2>:
  805934:	2004d5fa 	srli	r2,r4,23
  805938:	280cd5fa 	srli	r6,r5,23
  80593c:	00c02034 	movhi	r3,128
  805940:	18ffffc4 	addi	r3,r3,-1
  805944:	10803fcc 	andi	r2,r2,255
  805948:	01c03fc4 	movi	r7,255
  80594c:	1910703a 	and	r8,r3,r4
  805950:	31803fcc 	andi	r6,r6,255
  805954:	1946703a 	and	r3,r3,r5
  805958:	2008d7fa 	srli	r4,r4,31
  80595c:	280ad7fa 	srli	r5,r5,31
  805960:	11c01b26 	beq	r2,r7,8059d0 <__lesf2+0x9c>
  805964:	01c03fc4 	movi	r7,255
  805968:	31c01126 	beq	r6,r7,8059b0 <__lesf2+0x7c>
  80596c:	1000071e 	bne	r2,zero,80598c <__lesf2+0x58>
  805970:	400f003a 	cmpeq	r7,r8,zero
  805974:	21003fcc 	andi	r4,r4,255
  805978:	3000081e 	bne	r6,zero,80599c <__lesf2+0x68>
  80597c:	1800071e 	bne	r3,zero,80599c <__lesf2+0x68>
  805980:	0005883a 	mov	r2,zero
  805984:	40000f1e 	bne	r8,zero,8059c4 <__lesf2+0x90>
  805988:	f800283a 	ret
  80598c:	21003fcc 	andi	r4,r4,255
  805990:	30000a1e 	bne	r6,zero,8059bc <__lesf2+0x88>
  805994:	18000b26 	beq	r3,zero,8059c4 <__lesf2+0x90>
  805998:	000f883a 	mov	r7,zero
  80599c:	29403fcc 	andi	r5,r5,255
  8059a0:	38000726 	beq	r7,zero,8059c0 <__lesf2+0x8c>
  8059a4:	28000826 	beq	r5,zero,8059c8 <__lesf2+0x94>
  8059a8:	00800044 	movi	r2,1
  8059ac:	f800283a 	ret
  8059b0:	183fee26 	beq	r3,zero,80596c <__alt_data_end+0xff80596c>
  8059b4:	00800084 	movi	r2,2
  8059b8:	f800283a 	ret
  8059bc:	29403fcc 	andi	r5,r5,255
  8059c0:	21400626 	beq	r4,r5,8059dc <__lesf2+0xa8>
  8059c4:	203ff826 	beq	r4,zero,8059a8 <__alt_data_end+0xff8059a8>
  8059c8:	00bfffc4 	movi	r2,-1
  8059cc:	f800283a 	ret
  8059d0:	403fe426 	beq	r8,zero,805964 <__alt_data_end+0xff805964>
  8059d4:	00800084 	movi	r2,2
  8059d8:	f800283a 	ret
  8059dc:	30bff916 	blt	r6,r2,8059c4 <__alt_data_end+0xff8059c4>
  8059e0:	11800216 	blt	r2,r6,8059ec <__lesf2+0xb8>
  8059e4:	1a3ff736 	bltu	r3,r8,8059c4 <__alt_data_end+0xff8059c4>
  8059e8:	40c0022e 	bgeu	r8,r3,8059f4 <__lesf2+0xc0>
  8059ec:	203fee1e 	bne	r4,zero,8059a8 <__alt_data_end+0xff8059a8>
  8059f0:	003ff506 	br	8059c8 <__alt_data_end+0xff8059c8>
  8059f4:	0005883a 	mov	r2,zero
  8059f8:	f800283a 	ret

008059fc <__mulsf3>:
  8059fc:	defff504 	addi	sp,sp,-44
  805a00:	dc000115 	stw	r16,4(sp)
  805a04:	2020d5fa 	srli	r16,r4,23
  805a08:	dd400615 	stw	r21,24(sp)
  805a0c:	202ad7fa 	srli	r21,r4,31
  805a10:	dc800315 	stw	r18,12(sp)
  805a14:	04802034 	movhi	r18,128
  805a18:	df000915 	stw	fp,36(sp)
  805a1c:	dd000515 	stw	r20,20(sp)
  805a20:	94bfffc4 	addi	r18,r18,-1
  805a24:	dfc00a15 	stw	ra,40(sp)
  805a28:	ddc00815 	stw	r23,32(sp)
  805a2c:	dd800715 	stw	r22,28(sp)
  805a30:	dcc00415 	stw	r19,16(sp)
  805a34:	dc400215 	stw	r17,8(sp)
  805a38:	84003fcc 	andi	r16,r16,255
  805a3c:	9124703a 	and	r18,r18,r4
  805a40:	a829883a 	mov	r20,r21
  805a44:	af003fcc 	andi	fp,r21,255
  805a48:	80005426 	beq	r16,zero,805b9c <__mulsf3+0x1a0>
  805a4c:	00803fc4 	movi	r2,255
  805a50:	80802f26 	beq	r16,r2,805b10 <__mulsf3+0x114>
  805a54:	91002034 	orhi	r4,r18,128
  805a58:	202490fa 	slli	r18,r4,3
  805a5c:	843fe044 	addi	r16,r16,-127
  805a60:	0023883a 	mov	r17,zero
  805a64:	002f883a 	mov	r23,zero
  805a68:	2804d5fa 	srli	r2,r5,23
  805a6c:	282cd7fa 	srli	r22,r5,31
  805a70:	01002034 	movhi	r4,128
  805a74:	213fffc4 	addi	r4,r4,-1
  805a78:	10803fcc 	andi	r2,r2,255
  805a7c:	2166703a 	and	r19,r4,r5
  805a80:	b1803fcc 	andi	r6,r22,255
  805a84:	10004c26 	beq	r2,zero,805bb8 <__mulsf3+0x1bc>
  805a88:	00c03fc4 	movi	r3,255
  805a8c:	10c04726 	beq	r2,r3,805bac <__mulsf3+0x1b0>
  805a90:	99002034 	orhi	r4,r19,128
  805a94:	202690fa 	slli	r19,r4,3
  805a98:	10bfe044 	addi	r2,r2,-127
  805a9c:	0007883a 	mov	r3,zero
  805aa0:	80a1883a 	add	r16,r16,r2
  805aa4:	010003c4 	movi	r4,15
  805aa8:	1c44b03a 	or	r2,r3,r17
  805aac:	b56af03a 	xor	r21,r22,r21
  805ab0:	81c00044 	addi	r7,r16,1
  805ab4:	20806b36 	bltu	r4,r2,805c64 <__mulsf3+0x268>
  805ab8:	100490ba 	slli	r2,r2,2
  805abc:	01002034 	movhi	r4,128
  805ac0:	2116b404 	addi	r4,r4,23248
  805ac4:	1105883a 	add	r2,r2,r4
  805ac8:	10800017 	ldw	r2,0(r2)
  805acc:	1000683a 	jmp	r2
  805ad0:	00805c64 	muli	r2,zero,369
  805ad4:	00805b24 	muli	r2,zero,364
  805ad8:	00805b24 	muli	r2,zero,364
  805adc:	00805b20 	cmpeqi	r2,zero,364
  805ae0:	00805c48 	cmpgei	r2,zero,369
  805ae4:	00805c48 	cmpgei	r2,zero,369
  805ae8:	00805c34 	movhi	r2,368
  805aec:	00805b20 	cmpeqi	r2,zero,364
  805af0:	00805c48 	cmpgei	r2,zero,369
  805af4:	00805c34 	movhi	r2,368
  805af8:	00805c48 	cmpgei	r2,zero,369
  805afc:	00805b20 	cmpeqi	r2,zero,364
  805b00:	00805c54 	movui	r2,369
  805b04:	00805c54 	movui	r2,369
  805b08:	00805c54 	movui	r2,369
  805b0c:	00805d30 	cmpltui	r2,zero,372
  805b10:	90003b1e 	bne	r18,zero,805c00 <__mulsf3+0x204>
  805b14:	04400204 	movi	r17,8
  805b18:	05c00084 	movi	r23,2
  805b1c:	003fd206 	br	805a68 <__alt_data_end+0xff805a68>
  805b20:	302b883a 	mov	r21,r6
  805b24:	00800084 	movi	r2,2
  805b28:	18802626 	beq	r3,r2,805bc4 <__mulsf3+0x1c8>
  805b2c:	008000c4 	movi	r2,3
  805b30:	1880ab26 	beq	r3,r2,805de0 <__mulsf3+0x3e4>
  805b34:	00800044 	movi	r2,1
  805b38:	1880a21e 	bne	r3,r2,805dc4 <__mulsf3+0x3c8>
  805b3c:	a829883a 	mov	r20,r21
  805b40:	0007883a 	mov	r3,zero
  805b44:	0009883a 	mov	r4,zero
  805b48:	18803fcc 	andi	r2,r3,255
  805b4c:	100695fa 	slli	r3,r2,23
  805b50:	a0803fcc 	andi	r2,r20,255
  805b54:	100a97fa 	slli	r5,r2,31
  805b58:	00802034 	movhi	r2,128
  805b5c:	10bfffc4 	addi	r2,r2,-1
  805b60:	2084703a 	and	r2,r4,r2
  805b64:	10c4b03a 	or	r2,r2,r3
  805b68:	1144b03a 	or	r2,r2,r5
  805b6c:	dfc00a17 	ldw	ra,40(sp)
  805b70:	df000917 	ldw	fp,36(sp)
  805b74:	ddc00817 	ldw	r23,32(sp)
  805b78:	dd800717 	ldw	r22,28(sp)
  805b7c:	dd400617 	ldw	r21,24(sp)
  805b80:	dd000517 	ldw	r20,20(sp)
  805b84:	dcc00417 	ldw	r19,16(sp)
  805b88:	dc800317 	ldw	r18,12(sp)
  805b8c:	dc400217 	ldw	r17,8(sp)
  805b90:	dc000117 	ldw	r16,4(sp)
  805b94:	dec00b04 	addi	sp,sp,44
  805b98:	f800283a 	ret
  805b9c:	90000d1e 	bne	r18,zero,805bd4 <__mulsf3+0x1d8>
  805ba0:	04400104 	movi	r17,4
  805ba4:	05c00044 	movi	r23,1
  805ba8:	003faf06 	br	805a68 <__alt_data_end+0xff805a68>
  805bac:	9806c03a 	cmpne	r3,r19,zero
  805bb0:	18c00084 	addi	r3,r3,2
  805bb4:	003fba06 	br	805aa0 <__alt_data_end+0xff805aa0>
  805bb8:	9800141e 	bne	r19,zero,805c0c <__mulsf3+0x210>
  805bbc:	00c00044 	movi	r3,1
  805bc0:	003fb706 	br	805aa0 <__alt_data_end+0xff805aa0>
  805bc4:	a829883a 	mov	r20,r21
  805bc8:	00ffffc4 	movi	r3,-1
  805bcc:	0009883a 	mov	r4,zero
  805bd0:	003fdd06 	br	805b48 <__alt_data_end+0xff805b48>
  805bd4:	9009883a 	mov	r4,r18
  805bd8:	d9400015 	stw	r5,0(sp)
  805bdc:	0808b900 	call	808b90 <__clzsi2>
  805be0:	10fffec4 	addi	r3,r2,-5
  805be4:	10801d84 	addi	r2,r2,118
  805be8:	90e4983a 	sll	r18,r18,r3
  805bec:	00a1c83a 	sub	r16,zero,r2
  805bf0:	0023883a 	mov	r17,zero
  805bf4:	002f883a 	mov	r23,zero
  805bf8:	d9400017 	ldw	r5,0(sp)
  805bfc:	003f9a06 	br	805a68 <__alt_data_end+0xff805a68>
  805c00:	04400304 	movi	r17,12
  805c04:	05c000c4 	movi	r23,3
  805c08:	003f9706 	br	805a68 <__alt_data_end+0xff805a68>
  805c0c:	9809883a 	mov	r4,r19
  805c10:	d9800015 	stw	r6,0(sp)
  805c14:	0808b900 	call	808b90 <__clzsi2>
  805c18:	10fffec4 	addi	r3,r2,-5
  805c1c:	10801d84 	addi	r2,r2,118
  805c20:	98e6983a 	sll	r19,r19,r3
  805c24:	0085c83a 	sub	r2,zero,r2
  805c28:	0007883a 	mov	r3,zero
  805c2c:	d9800017 	ldw	r6,0(sp)
  805c30:	003f9b06 	br	805aa0 <__alt_data_end+0xff805aa0>
  805c34:	01002034 	movhi	r4,128
  805c38:	0029883a 	mov	r20,zero
  805c3c:	213fffc4 	addi	r4,r4,-1
  805c40:	00ffffc4 	movi	r3,-1
  805c44:	003fc006 	br	805b48 <__alt_data_end+0xff805b48>
  805c48:	9027883a 	mov	r19,r18
  805c4c:	b807883a 	mov	r3,r23
  805c50:	003fb406 	br	805b24 <__alt_data_end+0xff805b24>
  805c54:	9027883a 	mov	r19,r18
  805c58:	e02b883a 	mov	r21,fp
  805c5c:	b807883a 	mov	r3,r23
  805c60:	003fb006 	br	805b24 <__alt_data_end+0xff805b24>
  805c64:	9004d43a 	srli	r2,r18,16
  805c68:	9810d43a 	srli	r8,r19,16
  805c6c:	94bfffcc 	andi	r18,r18,65535
  805c70:	993fffcc 	andi	r4,r19,65535
  805c74:	910d383a 	mul	r6,r18,r4
  805c78:	20a7383a 	mul	r19,r4,r2
  805c7c:	9225383a 	mul	r18,r18,r8
  805c80:	3006d43a 	srli	r3,r6,16
  805c84:	1211383a 	mul	r8,r2,r8
  805c88:	94e5883a 	add	r18,r18,r19
  805c8c:	1c87883a 	add	r3,r3,r18
  805c90:	1cc0022e 	bgeu	r3,r19,805c9c <__mulsf3+0x2a0>
  805c94:	00800074 	movhi	r2,1
  805c98:	4091883a 	add	r8,r8,r2
  805c9c:	1804943a 	slli	r2,r3,16
  805ca0:	31bfffcc 	andi	r6,r6,65535
  805ca4:	1806d43a 	srli	r3,r3,16
  805ca8:	1185883a 	add	r2,r2,r6
  805cac:	102691ba 	slli	r19,r2,6
  805cb0:	1a07883a 	add	r3,r3,r8
  805cb4:	1004d6ba 	srli	r2,r2,26
  805cb8:	180891ba 	slli	r4,r3,6
  805cbc:	9826c03a 	cmpne	r19,r19,zero
  805cc0:	9884b03a 	or	r2,r19,r2
  805cc4:	1126b03a 	or	r19,r2,r4
  805cc8:	9882002c 	andhi	r2,r19,2048
  805ccc:	10000426 	beq	r2,zero,805ce0 <__mulsf3+0x2e4>
  805cd0:	9804d07a 	srli	r2,r19,1
  805cd4:	9900004c 	andi	r4,r19,1
  805cd8:	3821883a 	mov	r16,r7
  805cdc:	1126b03a 	or	r19,r2,r4
  805ce0:	80c01fc4 	addi	r3,r16,127
  805ce4:	00c0210e 	bge	zero,r3,805d6c <__mulsf3+0x370>
  805ce8:	988001cc 	andi	r2,r19,7
  805cec:	10000426 	beq	r2,zero,805d00 <__mulsf3+0x304>
  805cf0:	988003cc 	andi	r2,r19,15
  805cf4:	01000104 	movi	r4,4
  805cf8:	11000126 	beq	r2,r4,805d00 <__mulsf3+0x304>
  805cfc:	9927883a 	add	r19,r19,r4
  805d00:	9882002c 	andhi	r2,r19,2048
  805d04:	10000426 	beq	r2,zero,805d18 <__mulsf3+0x31c>
  805d08:	00be0034 	movhi	r2,63488
  805d0c:	10bfffc4 	addi	r2,r2,-1
  805d10:	80c02004 	addi	r3,r16,128
  805d14:	98a6703a 	and	r19,r19,r2
  805d18:	00803f84 	movi	r2,254
  805d1c:	10ffa916 	blt	r2,r3,805bc4 <__alt_data_end+0xff805bc4>
  805d20:	980891ba 	slli	r4,r19,6
  805d24:	a829883a 	mov	r20,r21
  805d28:	2008d27a 	srli	r4,r4,9
  805d2c:	003f8606 	br	805b48 <__alt_data_end+0xff805b48>
  805d30:	9080102c 	andhi	r2,r18,64
  805d34:	10000826 	beq	r2,zero,805d58 <__mulsf3+0x35c>
  805d38:	9880102c 	andhi	r2,r19,64
  805d3c:	1000061e 	bne	r2,zero,805d58 <__mulsf3+0x35c>
  805d40:	00802034 	movhi	r2,128
  805d44:	99001034 	orhi	r4,r19,64
  805d48:	10bfffc4 	addi	r2,r2,-1
  805d4c:	b029883a 	mov	r20,r22
  805d50:	2088703a 	and	r4,r4,r2
  805d54:	003fba06 	br	805c40 <__alt_data_end+0xff805c40>
  805d58:	00802034 	movhi	r2,128
  805d5c:	91001034 	orhi	r4,r18,64
  805d60:	10bfffc4 	addi	r2,r2,-1
  805d64:	2088703a 	and	r4,r4,r2
  805d68:	003fb506 	br	805c40 <__alt_data_end+0xff805c40>
  805d6c:	00800044 	movi	r2,1
  805d70:	10c7c83a 	sub	r3,r2,r3
  805d74:	008006c4 	movi	r2,27
  805d78:	10ff7016 	blt	r2,r3,805b3c <__alt_data_end+0xff805b3c>
  805d7c:	00800804 	movi	r2,32
  805d80:	10c5c83a 	sub	r2,r2,r3
  805d84:	9884983a 	sll	r2,r19,r2
  805d88:	98c6d83a 	srl	r3,r19,r3
  805d8c:	1004c03a 	cmpne	r2,r2,zero
  805d90:	1884b03a 	or	r2,r3,r2
  805d94:	10c001cc 	andi	r3,r2,7
  805d98:	18000426 	beq	r3,zero,805dac <__mulsf3+0x3b0>
  805d9c:	10c003cc 	andi	r3,r2,15
  805da0:	01000104 	movi	r4,4
  805da4:	19000126 	beq	r3,r4,805dac <__mulsf3+0x3b0>
  805da8:	1105883a 	add	r2,r2,r4
  805dac:	10c1002c 	andhi	r3,r2,1024
  805db0:	18000626 	beq	r3,zero,805dcc <__mulsf3+0x3d0>
  805db4:	a829883a 	mov	r20,r21
  805db8:	00c00044 	movi	r3,1
  805dbc:	0009883a 	mov	r4,zero
  805dc0:	003f6106 	br	805b48 <__alt_data_end+0xff805b48>
  805dc4:	3821883a 	mov	r16,r7
  805dc8:	003fc506 	br	805ce0 <__alt_data_end+0xff805ce0>
  805dcc:	100491ba 	slli	r2,r2,6
  805dd0:	a829883a 	mov	r20,r21
  805dd4:	0007883a 	mov	r3,zero
  805dd8:	1008d27a 	srli	r4,r2,9
  805ddc:	003f5a06 	br	805b48 <__alt_data_end+0xff805b48>
  805de0:	00802034 	movhi	r2,128
  805de4:	99001034 	orhi	r4,r19,64
  805de8:	10bfffc4 	addi	r2,r2,-1
  805dec:	a829883a 	mov	r20,r21
  805df0:	2088703a 	and	r4,r4,r2
  805df4:	003f9206 	br	805c40 <__alt_data_end+0xff805c40>

00805df8 <__subsf3>:
  805df8:	defffc04 	addi	sp,sp,-16
  805dfc:	280cd5fa 	srli	r6,r5,23
  805e00:	dc000015 	stw	r16,0(sp)
  805e04:	01c02034 	movhi	r7,128
  805e08:	2020d5fa 	srli	r16,r4,23
  805e0c:	39ffffc4 	addi	r7,r7,-1
  805e10:	3906703a 	and	r3,r7,r4
  805e14:	dc400115 	stw	r17,4(sp)
  805e18:	394e703a 	and	r7,r7,r5
  805e1c:	2022d7fa 	srli	r17,r4,31
  805e20:	dfc00315 	stw	ra,12(sp)
  805e24:	dc800215 	stw	r18,8(sp)
  805e28:	31803fcc 	andi	r6,r6,255
  805e2c:	01003fc4 	movi	r4,255
  805e30:	84003fcc 	andi	r16,r16,255
  805e34:	180690fa 	slli	r3,r3,3
  805e38:	2804d7fa 	srli	r2,r5,31
  805e3c:	380e90fa 	slli	r7,r7,3
  805e40:	31006d26 	beq	r6,r4,805ff8 <__subsf3+0x200>
  805e44:	1080005c 	xori	r2,r2,1
  805e48:	8189c83a 	sub	r4,r16,r6
  805e4c:	14404f26 	beq	r2,r17,805f8c <__subsf3+0x194>
  805e50:	0100770e 	bge	zero,r4,806030 <__subsf3+0x238>
  805e54:	30001e1e 	bne	r6,zero,805ed0 <__subsf3+0xd8>
  805e58:	38006a1e 	bne	r7,zero,806004 <__subsf3+0x20c>
  805e5c:	188001cc 	andi	r2,r3,7
  805e60:	10000426 	beq	r2,zero,805e74 <__subsf3+0x7c>
  805e64:	188003cc 	andi	r2,r3,15
  805e68:	01000104 	movi	r4,4
  805e6c:	11000126 	beq	r2,r4,805e74 <__subsf3+0x7c>
  805e70:	1907883a 	add	r3,r3,r4
  805e74:	1881002c 	andhi	r2,r3,1024
  805e78:	10003926 	beq	r2,zero,805f60 <__subsf3+0x168>
  805e7c:	84000044 	addi	r16,r16,1
  805e80:	00803fc4 	movi	r2,255
  805e84:	80807526 	beq	r16,r2,80605c <__subsf3+0x264>
  805e88:	180691ba 	slli	r3,r3,6
  805e8c:	8880004c 	andi	r2,r17,1
  805e90:	180ad27a 	srli	r5,r3,9
  805e94:	84003fcc 	andi	r16,r16,255
  805e98:	800695fa 	slli	r3,r16,23
  805e9c:	10803fcc 	andi	r2,r2,255
  805ea0:	01002034 	movhi	r4,128
  805ea4:	213fffc4 	addi	r4,r4,-1
  805ea8:	100497fa 	slli	r2,r2,31
  805eac:	2920703a 	and	r16,r5,r4
  805eb0:	80e0b03a 	or	r16,r16,r3
  805eb4:	8084b03a 	or	r2,r16,r2
  805eb8:	dfc00317 	ldw	ra,12(sp)
  805ebc:	dc800217 	ldw	r18,8(sp)
  805ec0:	dc400117 	ldw	r17,4(sp)
  805ec4:	dc000017 	ldw	r16,0(sp)
  805ec8:	dec00404 	addi	sp,sp,16
  805ecc:	f800283a 	ret
  805ed0:	00803fc4 	movi	r2,255
  805ed4:	80bfe126 	beq	r16,r2,805e5c <__alt_data_end+0xff805e5c>
  805ed8:	39c10034 	orhi	r7,r7,1024
  805edc:	008006c4 	movi	r2,27
  805ee0:	11007416 	blt	r2,r4,8060b4 <__subsf3+0x2bc>
  805ee4:	00800804 	movi	r2,32
  805ee8:	1105c83a 	sub	r2,r2,r4
  805eec:	3884983a 	sll	r2,r7,r2
  805ef0:	390ed83a 	srl	r7,r7,r4
  805ef4:	1008c03a 	cmpne	r4,r2,zero
  805ef8:	390eb03a 	or	r7,r7,r4
  805efc:	19c7c83a 	sub	r3,r3,r7
  805f00:	1881002c 	andhi	r2,r3,1024
  805f04:	10001426 	beq	r2,zero,805f58 <__subsf3+0x160>
  805f08:	04810034 	movhi	r18,1024
  805f0c:	94bfffc4 	addi	r18,r18,-1
  805f10:	1ca4703a 	and	r18,r3,r18
  805f14:	9009883a 	mov	r4,r18
  805f18:	0808b900 	call	808b90 <__clzsi2>
  805f1c:	10bffec4 	addi	r2,r2,-5
  805f20:	90a4983a 	sll	r18,r18,r2
  805f24:	14005116 	blt	r2,r16,80606c <__subsf3+0x274>
  805f28:	1405c83a 	sub	r2,r2,r16
  805f2c:	10c00044 	addi	r3,r2,1
  805f30:	00800804 	movi	r2,32
  805f34:	10c5c83a 	sub	r2,r2,r3
  805f38:	9084983a 	sll	r2,r18,r2
  805f3c:	90e4d83a 	srl	r18,r18,r3
  805f40:	0021883a 	mov	r16,zero
  805f44:	1006c03a 	cmpne	r3,r2,zero
  805f48:	90c6b03a 	or	r3,r18,r3
  805f4c:	003fc306 	br	805e5c <__alt_data_end+0xff805e5c>
  805f50:	2000e026 	beq	r4,zero,8062d4 <__subsf3+0x4dc>
  805f54:	2007883a 	mov	r3,r4
  805f58:	188001cc 	andi	r2,r3,7
  805f5c:	103fc11e 	bne	r2,zero,805e64 <__alt_data_end+0xff805e64>
  805f60:	180ad0fa 	srli	r5,r3,3
  805f64:	00c03fc4 	movi	r3,255
  805f68:	8880004c 	andi	r2,r17,1
  805f6c:	80c0031e 	bne	r16,r3,805f7c <__subsf3+0x184>
  805f70:	28006d26 	beq	r5,zero,806128 <__subsf3+0x330>
  805f74:	29401034 	orhi	r5,r5,64
  805f78:	043fffc4 	movi	r16,-1
  805f7c:	00c02034 	movhi	r3,128
  805f80:	18ffffc4 	addi	r3,r3,-1
  805f84:	28ca703a 	and	r5,r5,r3
  805f88:	003fc206 	br	805e94 <__alt_data_end+0xff805e94>
  805f8c:	01003c0e 	bge	zero,r4,806080 <__subsf3+0x288>
  805f90:	30002126 	beq	r6,zero,806018 <__subsf3+0x220>
  805f94:	01403fc4 	movi	r5,255
  805f98:	817fb026 	beq	r16,r5,805e5c <__alt_data_end+0xff805e5c>
  805f9c:	39c10034 	orhi	r7,r7,1024
  805fa0:	014006c4 	movi	r5,27
  805fa4:	29007416 	blt	r5,r4,806178 <__subsf3+0x380>
  805fa8:	01400804 	movi	r5,32
  805fac:	290bc83a 	sub	r5,r5,r4
  805fb0:	394a983a 	sll	r5,r7,r5
  805fb4:	390ed83a 	srl	r7,r7,r4
  805fb8:	2808c03a 	cmpne	r4,r5,zero
  805fbc:	390eb03a 	or	r7,r7,r4
  805fc0:	19c7883a 	add	r3,r3,r7
  805fc4:	1901002c 	andhi	r4,r3,1024
  805fc8:	20003826 	beq	r4,zero,8060ac <__subsf3+0x2b4>
  805fcc:	84000044 	addi	r16,r16,1
  805fd0:	01003fc4 	movi	r4,255
  805fd4:	81005426 	beq	r16,r4,806128 <__subsf3+0x330>
  805fd8:	1023883a 	mov	r17,r2
  805fdc:	00bf0034 	movhi	r2,64512
  805fe0:	10bfffc4 	addi	r2,r2,-1
  805fe4:	1900004c 	andi	r4,r3,1
  805fe8:	1886703a 	and	r3,r3,r2
  805fec:	1806d07a 	srli	r3,r3,1
  805ff0:	1906b03a 	or	r3,r3,r4
  805ff4:	003f9906 	br	805e5c <__alt_data_end+0xff805e5c>
  805ff8:	383f9226 	beq	r7,zero,805e44 <__alt_data_end+0xff805e44>
  805ffc:	10803fcc 	andi	r2,r2,255
  806000:	003f9106 	br	805e48 <__alt_data_end+0xff805e48>
  806004:	213fffc4 	addi	r4,r4,-1
  806008:	203fbc26 	beq	r4,zero,805efc <__alt_data_end+0xff805efc>
  80600c:	00803fc4 	movi	r2,255
  806010:	80bfb21e 	bne	r16,r2,805edc <__alt_data_end+0xff805edc>
  806014:	003f9106 	br	805e5c <__alt_data_end+0xff805e5c>
  806018:	383f9026 	beq	r7,zero,805e5c <__alt_data_end+0xff805e5c>
  80601c:	213fffc4 	addi	r4,r4,-1
  806020:	203fe726 	beq	r4,zero,805fc0 <__alt_data_end+0xff805fc0>
  806024:	01403fc4 	movi	r5,255
  806028:	817fdd1e 	bne	r16,r5,805fa0 <__alt_data_end+0xff805fa0>
  80602c:	003f8b06 	br	805e5c <__alt_data_end+0xff805e5c>
  806030:	2000221e 	bne	r4,zero,8060bc <__subsf3+0x2c4>
  806034:	81000044 	addi	r4,r16,1
  806038:	21003fcc 	andi	r4,r4,255
  80603c:	01400044 	movi	r5,1
  806040:	2900470e 	bge	r5,r4,806160 <__subsf3+0x368>
  806044:	19e5c83a 	sub	r18,r3,r7
  806048:	9141002c 	andhi	r5,r18,1024
  80604c:	28002d26 	beq	r5,zero,806104 <__subsf3+0x30c>
  806050:	38e5c83a 	sub	r18,r7,r3
  806054:	1023883a 	mov	r17,r2
  806058:	003fae06 	br	805f14 <__alt_data_end+0xff805f14>
  80605c:	8880004c 	andi	r2,r17,1
  806060:	043fffc4 	movi	r16,-1
  806064:	000b883a 	mov	r5,zero
  806068:	003f8a06 	br	805e94 <__alt_data_end+0xff805e94>
  80606c:	00ff0034 	movhi	r3,64512
  806070:	18ffffc4 	addi	r3,r3,-1
  806074:	80a1c83a 	sub	r16,r16,r2
  806078:	90c6703a 	and	r3,r18,r3
  80607c:	003f7706 	br	805e5c <__alt_data_end+0xff805e5c>
  806080:	2000431e 	bne	r4,zero,806190 <__subsf3+0x398>
  806084:	81000044 	addi	r4,r16,1
  806088:	21803fcc 	andi	r6,r4,255
  80608c:	01400044 	movi	r5,1
  806090:	2980280e 	bge	r5,r6,806134 <__subsf3+0x33c>
  806094:	01403fc4 	movi	r5,255
  806098:	21402326 	beq	r4,r5,806128 <__subsf3+0x330>
  80609c:	19c7883a 	add	r3,r3,r7
  8060a0:	1806d07a 	srli	r3,r3,1
  8060a4:	2021883a 	mov	r16,r4
  8060a8:	003f6c06 	br	805e5c <__alt_data_end+0xff805e5c>
  8060ac:	1023883a 	mov	r17,r2
  8060b0:	003fa906 	br	805f58 <__alt_data_end+0xff805f58>
  8060b4:	01c00044 	movi	r7,1
  8060b8:	003f9006 	br	805efc <__alt_data_end+0xff805efc>
  8060bc:	8000151e 	bne	r16,zero,806114 <__subsf3+0x31c>
  8060c0:	18002f26 	beq	r3,zero,806180 <__subsf3+0x388>
  8060c4:	0108303a 	nor	r4,zero,r4
  8060c8:	20000a26 	beq	r4,zero,8060f4 <__subsf3+0x2fc>
  8060cc:	01403fc4 	movi	r5,255
  8060d0:	31402b26 	beq	r6,r5,806180 <__subsf3+0x388>
  8060d4:	014006c4 	movi	r5,27
  8060d8:	29006e16 	blt	r5,r4,806294 <__subsf3+0x49c>
  8060dc:	01400804 	movi	r5,32
  8060e0:	290bc83a 	sub	r5,r5,r4
  8060e4:	194a983a 	sll	r5,r3,r5
  8060e8:	1908d83a 	srl	r4,r3,r4
  8060ec:	2806c03a 	cmpne	r3,r5,zero
  8060f0:	20c6b03a 	or	r3,r4,r3
  8060f4:	38c7c83a 	sub	r3,r7,r3
  8060f8:	3021883a 	mov	r16,r6
  8060fc:	1023883a 	mov	r17,r2
  806100:	003f7f06 	br	805f00 <__alt_data_end+0xff805f00>
  806104:	903f831e 	bne	r18,zero,805f14 <__alt_data_end+0xff805f14>
  806108:	0005883a 	mov	r2,zero
  80610c:	0021883a 	mov	r16,zero
  806110:	003f9a06 	br	805f7c <__alt_data_end+0xff805f7c>
  806114:	01403fc4 	movi	r5,255
  806118:	31401926 	beq	r6,r5,806180 <__subsf3+0x388>
  80611c:	0109c83a 	sub	r4,zero,r4
  806120:	18c10034 	orhi	r3,r3,1024
  806124:	003feb06 	br	8060d4 <__alt_data_end+0xff8060d4>
  806128:	043fffc4 	movi	r16,-1
  80612c:	000b883a 	mov	r5,zero
  806130:	003f5806 	br	805e94 <__alt_data_end+0xff805e94>
  806134:	8000481e 	bne	r16,zero,806258 <__subsf3+0x460>
  806138:	18006226 	beq	r3,zero,8062c4 <__subsf3+0x4cc>
  80613c:	383f4726 	beq	r7,zero,805e5c <__alt_data_end+0xff805e5c>
  806140:	19c7883a 	add	r3,r3,r7
  806144:	1881002c 	andhi	r2,r3,1024
  806148:	103f8326 	beq	r2,zero,805f58 <__alt_data_end+0xff805f58>
  80614c:	00bf0034 	movhi	r2,64512
  806150:	10bfffc4 	addi	r2,r2,-1
  806154:	2821883a 	mov	r16,r5
  806158:	1886703a 	and	r3,r3,r2
  80615c:	003f3f06 	br	805e5c <__alt_data_end+0xff805e5c>
  806160:	80001c1e 	bne	r16,zero,8061d4 <__subsf3+0x3dc>
  806164:	1800261e 	bne	r3,zero,806200 <__subsf3+0x408>
  806168:	38004c26 	beq	r7,zero,80629c <__subsf3+0x4a4>
  80616c:	3807883a 	mov	r3,r7
  806170:	1023883a 	mov	r17,r2
  806174:	003f3906 	br	805e5c <__alt_data_end+0xff805e5c>
  806178:	01c00044 	movi	r7,1
  80617c:	003f9006 	br	805fc0 <__alt_data_end+0xff805fc0>
  806180:	3807883a 	mov	r3,r7
  806184:	3021883a 	mov	r16,r6
  806188:	1023883a 	mov	r17,r2
  80618c:	003f3306 	br	805e5c <__alt_data_end+0xff805e5c>
  806190:	8000161e 	bne	r16,zero,8061ec <__subsf3+0x3f4>
  806194:	18002d26 	beq	r3,zero,80624c <__subsf3+0x454>
  806198:	0108303a 	nor	r4,zero,r4
  80619c:	20000a26 	beq	r4,zero,8061c8 <__subsf3+0x3d0>
  8061a0:	01403fc4 	movi	r5,255
  8061a4:	31402926 	beq	r6,r5,80624c <__subsf3+0x454>
  8061a8:	014006c4 	movi	r5,27
  8061ac:	29004716 	blt	r5,r4,8062cc <__subsf3+0x4d4>
  8061b0:	01400804 	movi	r5,32
  8061b4:	290bc83a 	sub	r5,r5,r4
  8061b8:	194a983a 	sll	r5,r3,r5
  8061bc:	1908d83a 	srl	r4,r3,r4
  8061c0:	2806c03a 	cmpne	r3,r5,zero
  8061c4:	20c6b03a 	or	r3,r4,r3
  8061c8:	19c7883a 	add	r3,r3,r7
  8061cc:	3021883a 	mov	r16,r6
  8061d0:	003f7c06 	br	805fc4 <__alt_data_end+0xff805fc4>
  8061d4:	1800111e 	bne	r3,zero,80621c <__subsf3+0x424>
  8061d8:	38003326 	beq	r7,zero,8062a8 <__subsf3+0x4b0>
  8061dc:	3807883a 	mov	r3,r7
  8061e0:	1023883a 	mov	r17,r2
  8061e4:	04003fc4 	movi	r16,255
  8061e8:	003f1c06 	br	805e5c <__alt_data_end+0xff805e5c>
  8061ec:	01403fc4 	movi	r5,255
  8061f0:	31401626 	beq	r6,r5,80624c <__subsf3+0x454>
  8061f4:	0109c83a 	sub	r4,zero,r4
  8061f8:	18c10034 	orhi	r3,r3,1024
  8061fc:	003fea06 	br	8061a8 <__alt_data_end+0xff8061a8>
  806200:	383f1626 	beq	r7,zero,805e5c <__alt_data_end+0xff805e5c>
  806204:	19c9c83a 	sub	r4,r3,r7
  806208:	2141002c 	andhi	r5,r4,1024
  80620c:	283f5026 	beq	r5,zero,805f50 <__alt_data_end+0xff805f50>
  806210:	38c7c83a 	sub	r3,r7,r3
  806214:	1023883a 	mov	r17,r2
  806218:	003f1006 	br	805e5c <__alt_data_end+0xff805e5c>
  80621c:	38001b26 	beq	r7,zero,80628c <__subsf3+0x494>
  806220:	1806d0fa 	srli	r3,r3,3
  806224:	1900102c 	andhi	r4,r3,64
  806228:	20000526 	beq	r4,zero,806240 <__subsf3+0x448>
  80622c:	380ed0fa 	srli	r7,r7,3
  806230:	3900102c 	andhi	r4,r7,64
  806234:	2000021e 	bne	r4,zero,806240 <__subsf3+0x448>
  806238:	3807883a 	mov	r3,r7
  80623c:	1023883a 	mov	r17,r2
  806240:	180690fa 	slli	r3,r3,3
  806244:	04003fc4 	movi	r16,255
  806248:	003f0406 	br	805e5c <__alt_data_end+0xff805e5c>
  80624c:	3807883a 	mov	r3,r7
  806250:	3021883a 	mov	r16,r6
  806254:	003f0106 	br	805e5c <__alt_data_end+0xff805e5c>
  806258:	18001726 	beq	r3,zero,8062b8 <__subsf3+0x4c0>
  80625c:	38000b26 	beq	r7,zero,80628c <__subsf3+0x494>
  806260:	1806d0fa 	srli	r3,r3,3
  806264:	1900102c 	andhi	r4,r3,64
  806268:	20000426 	beq	r4,zero,80627c <__subsf3+0x484>
  80626c:	380ed0fa 	srli	r7,r7,3
  806270:	3900102c 	andhi	r4,r7,64
  806274:	2000011e 	bne	r4,zero,80627c <__subsf3+0x484>
  806278:	3807883a 	mov	r3,r7
  80627c:	180690fa 	slli	r3,r3,3
  806280:	1023883a 	mov	r17,r2
  806284:	04003fc4 	movi	r16,255
  806288:	003ef406 	br	805e5c <__alt_data_end+0xff805e5c>
  80628c:	04003fc4 	movi	r16,255
  806290:	003ef206 	br	805e5c <__alt_data_end+0xff805e5c>
  806294:	00c00044 	movi	r3,1
  806298:	003f9606 	br	8060f4 <__alt_data_end+0xff8060f4>
  80629c:	000b883a 	mov	r5,zero
  8062a0:	0005883a 	mov	r2,zero
  8062a4:	003f3506 	br	805f7c <__alt_data_end+0xff805f7c>
  8062a8:	01402034 	movhi	r5,128
  8062ac:	297fffc4 	addi	r5,r5,-1
  8062b0:	0005883a 	mov	r2,zero
  8062b4:	003f2f06 	br	805f74 <__alt_data_end+0xff805f74>
  8062b8:	3807883a 	mov	r3,r7
  8062bc:	04003fc4 	movi	r16,255
  8062c0:	003ee606 	br	805e5c <__alt_data_end+0xff805e5c>
  8062c4:	3807883a 	mov	r3,r7
  8062c8:	003ee406 	br	805e5c <__alt_data_end+0xff805e5c>
  8062cc:	00c00044 	movi	r3,1
  8062d0:	003fbd06 	br	8061c8 <__alt_data_end+0xff8061c8>
  8062d4:	0005883a 	mov	r2,zero
  8062d8:	003f2806 	br	805f7c <__alt_data_end+0xff805f7c>

008062dc <__fixsfsi>:
  8062dc:	200ad5fa 	srli	r5,r4,23
  8062e0:	00c02034 	movhi	r3,128
  8062e4:	18ffffc4 	addi	r3,r3,-1
  8062e8:	29403fcc 	andi	r5,r5,255
  8062ec:	00801f84 	movi	r2,126
  8062f0:	1906703a 	and	r3,r3,r4
  8062f4:	2008d7fa 	srli	r4,r4,31
  8062f8:	11400e0e 	bge	r2,r5,806334 <__fixsfsi+0x58>
  8062fc:	00802744 	movi	r2,157
  806300:	11400816 	blt	r2,r5,806324 <__fixsfsi+0x48>
  806304:	00802544 	movi	r2,149
  806308:	18c02034 	orhi	r3,r3,128
  80630c:	11400b0e 	bge	r2,r5,80633c <__fixsfsi+0x60>
  806310:	28bfda84 	addi	r2,r5,-150
  806314:	1884983a 	sll	r2,r3,r2
  806318:	20000726 	beq	r4,zero,806338 <__fixsfsi+0x5c>
  80631c:	0085c83a 	sub	r2,zero,r2
  806320:	f800283a 	ret
  806324:	00a00034 	movhi	r2,32768
  806328:	10bfffc4 	addi	r2,r2,-1
  80632c:	2085883a 	add	r2,r4,r2
  806330:	f800283a 	ret
  806334:	0005883a 	mov	r2,zero
  806338:	f800283a 	ret
  80633c:	00802584 	movi	r2,150
  806340:	1145c83a 	sub	r2,r2,r5
  806344:	1884d83a 	srl	r2,r3,r2
  806348:	003ff306 	br	806318 <__alt_data_end+0xff806318>

0080634c <__floatsisf>:
  80634c:	defffd04 	addi	sp,sp,-12
  806350:	dfc00215 	stw	ra,8(sp)
  806354:	dc400115 	stw	r17,4(sp)
  806358:	dc000015 	stw	r16,0(sp)
  80635c:	20003526 	beq	r4,zero,806434 <__floatsisf+0xe8>
  806360:	2021883a 	mov	r16,r4
  806364:	2022d7fa 	srli	r17,r4,31
  806368:	20003616 	blt	r4,zero,806444 <__floatsisf+0xf8>
  80636c:	8009883a 	mov	r4,r16
  806370:	0808b900 	call	808b90 <__clzsi2>
  806374:	00c02784 	movi	r3,158
  806378:	1887c83a 	sub	r3,r3,r2
  80637c:	01002584 	movi	r4,150
  806380:	20c01416 	blt	r4,r3,8063d4 <__floatsisf+0x88>
  806384:	20c9c83a 	sub	r4,r4,r3
  806388:	8120983a 	sll	r16,r16,r4
  80638c:	00802034 	movhi	r2,128
  806390:	10bfffc4 	addi	r2,r2,-1
  806394:	8809883a 	mov	r4,r17
  806398:	80a0703a 	and	r16,r16,r2
  80639c:	18803fcc 	andi	r2,r3,255
  8063a0:	100695fa 	slli	r3,r2,23
  8063a4:	20803fcc 	andi	r2,r4,255
  8063a8:	100897fa 	slli	r4,r2,31
  8063ac:	00802034 	movhi	r2,128
  8063b0:	10bfffc4 	addi	r2,r2,-1
  8063b4:	8084703a 	and	r2,r16,r2
  8063b8:	10c4b03a 	or	r2,r2,r3
  8063bc:	1104b03a 	or	r2,r2,r4
  8063c0:	dfc00217 	ldw	ra,8(sp)
  8063c4:	dc400117 	ldw	r17,4(sp)
  8063c8:	dc000017 	ldw	r16,0(sp)
  8063cc:	dec00304 	addi	sp,sp,12
  8063d0:	f800283a 	ret
  8063d4:	01002644 	movi	r4,153
  8063d8:	20c01c16 	blt	r4,r3,80644c <__floatsisf+0x100>
  8063dc:	20c9c83a 	sub	r4,r4,r3
  8063e0:	8120983a 	sll	r16,r16,r4
  8063e4:	013f0034 	movhi	r4,64512
  8063e8:	213fffc4 	addi	r4,r4,-1
  8063ec:	814001cc 	andi	r5,r16,7
  8063f0:	8108703a 	and	r4,r16,r4
  8063f4:	28000426 	beq	r5,zero,806408 <__floatsisf+0xbc>
  8063f8:	840003cc 	andi	r16,r16,15
  8063fc:	01400104 	movi	r5,4
  806400:	81400126 	beq	r16,r5,806408 <__floatsisf+0xbc>
  806404:	2149883a 	add	r4,r4,r5
  806408:	2141002c 	andhi	r5,r4,1024
  80640c:	28000526 	beq	r5,zero,806424 <__floatsisf+0xd8>
  806410:	00c027c4 	movi	r3,159
  806414:	1887c83a 	sub	r3,r3,r2
  806418:	00bf0034 	movhi	r2,64512
  80641c:	10bfffc4 	addi	r2,r2,-1
  806420:	2088703a 	and	r4,r4,r2
  806424:	202091ba 	slli	r16,r4,6
  806428:	8809883a 	mov	r4,r17
  80642c:	8020d27a 	srli	r16,r16,9
  806430:	003fda06 	br	80639c <__alt_data_end+0xff80639c>
  806434:	0009883a 	mov	r4,zero
  806438:	0007883a 	mov	r3,zero
  80643c:	0021883a 	mov	r16,zero
  806440:	003fd606 	br	80639c <__alt_data_end+0xff80639c>
  806444:	0121c83a 	sub	r16,zero,r4
  806448:	003fc806 	br	80636c <__alt_data_end+0xff80636c>
  80644c:	01002e44 	movi	r4,185
  806450:	20c9c83a 	sub	r4,r4,r3
  806454:	01400144 	movi	r5,5
  806458:	8108983a 	sll	r4,r16,r4
  80645c:	288bc83a 	sub	r5,r5,r2
  806460:	8160d83a 	srl	r16,r16,r5
  806464:	2008c03a 	cmpne	r4,r4,zero
  806468:	8120b03a 	or	r16,r16,r4
  80646c:	003fdd06 	br	8063e4 <__alt_data_end+0xff8063e4>

00806470 <__adddf3>:
  806470:	02c00434 	movhi	r11,16
  806474:	5affffc4 	addi	r11,r11,-1
  806478:	2806d7fa 	srli	r3,r5,31
  80647c:	2ad4703a 	and	r10,r5,r11
  806480:	3ad2703a 	and	r9,r7,r11
  806484:	3804d53a 	srli	r2,r7,20
  806488:	3018d77a 	srli	r12,r6,29
  80648c:	280ad53a 	srli	r5,r5,20
  806490:	501490fa 	slli	r10,r10,3
  806494:	2010d77a 	srli	r8,r4,29
  806498:	481290fa 	slli	r9,r9,3
  80649c:	380ed7fa 	srli	r7,r7,31
  8064a0:	defffb04 	addi	sp,sp,-20
  8064a4:	dc800215 	stw	r18,8(sp)
  8064a8:	dc400115 	stw	r17,4(sp)
  8064ac:	dc000015 	stw	r16,0(sp)
  8064b0:	dfc00415 	stw	ra,16(sp)
  8064b4:	dcc00315 	stw	r19,12(sp)
  8064b8:	1c803fcc 	andi	r18,r3,255
  8064bc:	2c01ffcc 	andi	r16,r5,2047
  8064c0:	5210b03a 	or	r8,r10,r8
  8064c4:	202290fa 	slli	r17,r4,3
  8064c8:	1081ffcc 	andi	r2,r2,2047
  8064cc:	4b12b03a 	or	r9,r9,r12
  8064d0:	300c90fa 	slli	r6,r6,3
  8064d4:	91c07526 	beq	r18,r7,8066ac <__adddf3+0x23c>
  8064d8:	8087c83a 	sub	r3,r16,r2
  8064dc:	00c0ab0e 	bge	zero,r3,80678c <__adddf3+0x31c>
  8064e0:	10002a1e 	bne	r2,zero,80658c <__adddf3+0x11c>
  8064e4:	4984b03a 	or	r2,r9,r6
  8064e8:	1000961e 	bne	r2,zero,806744 <__adddf3+0x2d4>
  8064ec:	888001cc 	andi	r2,r17,7
  8064f0:	10000726 	beq	r2,zero,806510 <__adddf3+0xa0>
  8064f4:	888003cc 	andi	r2,r17,15
  8064f8:	00c00104 	movi	r3,4
  8064fc:	10c00426 	beq	r2,r3,806510 <__adddf3+0xa0>
  806500:	88c7883a 	add	r3,r17,r3
  806504:	1c63803a 	cmpltu	r17,r3,r17
  806508:	4451883a 	add	r8,r8,r17
  80650c:	1823883a 	mov	r17,r3
  806510:	4080202c 	andhi	r2,r8,128
  806514:	10005926 	beq	r2,zero,80667c <__adddf3+0x20c>
  806518:	84000044 	addi	r16,r16,1
  80651c:	0081ffc4 	movi	r2,2047
  806520:	8080ba26 	beq	r16,r2,80680c <__adddf3+0x39c>
  806524:	00bfe034 	movhi	r2,65408
  806528:	10bfffc4 	addi	r2,r2,-1
  80652c:	4090703a 	and	r8,r8,r2
  806530:	4004977a 	slli	r2,r8,29
  806534:	4010927a 	slli	r8,r8,9
  806538:	8822d0fa 	srli	r17,r17,3
  80653c:	8401ffcc 	andi	r16,r16,2047
  806540:	4010d33a 	srli	r8,r8,12
  806544:	9007883a 	mov	r3,r18
  806548:	1444b03a 	or	r2,r2,r17
  80654c:	8401ffcc 	andi	r16,r16,2047
  806550:	8020953a 	slli	r16,r16,20
  806554:	18c03fcc 	andi	r3,r3,255
  806558:	01000434 	movhi	r4,16
  80655c:	213fffc4 	addi	r4,r4,-1
  806560:	180697fa 	slli	r3,r3,31
  806564:	4110703a 	and	r8,r8,r4
  806568:	4410b03a 	or	r8,r8,r16
  80656c:	40c6b03a 	or	r3,r8,r3
  806570:	dfc00417 	ldw	ra,16(sp)
  806574:	dcc00317 	ldw	r19,12(sp)
  806578:	dc800217 	ldw	r18,8(sp)
  80657c:	dc400117 	ldw	r17,4(sp)
  806580:	dc000017 	ldw	r16,0(sp)
  806584:	dec00504 	addi	sp,sp,20
  806588:	f800283a 	ret
  80658c:	0081ffc4 	movi	r2,2047
  806590:	80bfd626 	beq	r16,r2,8064ec <__alt_data_end+0xff8064ec>
  806594:	4a402034 	orhi	r9,r9,128
  806598:	00800e04 	movi	r2,56
  80659c:	10c09f16 	blt	r2,r3,80681c <__adddf3+0x3ac>
  8065a0:	008007c4 	movi	r2,31
  8065a4:	10c0c216 	blt	r2,r3,8068b0 <__adddf3+0x440>
  8065a8:	00800804 	movi	r2,32
  8065ac:	10c5c83a 	sub	r2,r2,r3
  8065b0:	488a983a 	sll	r5,r9,r2
  8065b4:	30c8d83a 	srl	r4,r6,r3
  8065b8:	3084983a 	sll	r2,r6,r2
  8065bc:	48c6d83a 	srl	r3,r9,r3
  8065c0:	290cb03a 	or	r6,r5,r4
  8065c4:	1004c03a 	cmpne	r2,r2,zero
  8065c8:	308cb03a 	or	r6,r6,r2
  8065cc:	898dc83a 	sub	r6,r17,r6
  8065d0:	89a3803a 	cmpltu	r17,r17,r6
  8065d4:	40d1c83a 	sub	r8,r8,r3
  8065d8:	4451c83a 	sub	r8,r8,r17
  8065dc:	3023883a 	mov	r17,r6
  8065e0:	4080202c 	andhi	r2,r8,128
  8065e4:	10002326 	beq	r2,zero,806674 <__adddf3+0x204>
  8065e8:	04c02034 	movhi	r19,128
  8065ec:	9cffffc4 	addi	r19,r19,-1
  8065f0:	44e6703a 	and	r19,r8,r19
  8065f4:	98007626 	beq	r19,zero,8067d0 <__adddf3+0x360>
  8065f8:	9809883a 	mov	r4,r19
  8065fc:	0808b900 	call	808b90 <__clzsi2>
  806600:	10fffe04 	addi	r3,r2,-8
  806604:	010007c4 	movi	r4,31
  806608:	20c07716 	blt	r4,r3,8067e8 <__adddf3+0x378>
  80660c:	00800804 	movi	r2,32
  806610:	10c5c83a 	sub	r2,r2,r3
  806614:	8884d83a 	srl	r2,r17,r2
  806618:	98d0983a 	sll	r8,r19,r3
  80661c:	88e2983a 	sll	r17,r17,r3
  806620:	1204b03a 	or	r2,r2,r8
  806624:	1c007416 	blt	r3,r16,8067f8 <__adddf3+0x388>
  806628:	1c21c83a 	sub	r16,r3,r16
  80662c:	82000044 	addi	r8,r16,1
  806630:	00c007c4 	movi	r3,31
  806634:	1a009116 	blt	r3,r8,80687c <__adddf3+0x40c>
  806638:	00c00804 	movi	r3,32
  80663c:	1a07c83a 	sub	r3,r3,r8
  806640:	8a08d83a 	srl	r4,r17,r8
  806644:	88e2983a 	sll	r17,r17,r3
  806648:	10c6983a 	sll	r3,r2,r3
  80664c:	1210d83a 	srl	r8,r2,r8
  806650:	8804c03a 	cmpne	r2,r17,zero
  806654:	1906b03a 	or	r3,r3,r4
  806658:	18a2b03a 	or	r17,r3,r2
  80665c:	0021883a 	mov	r16,zero
  806660:	003fa206 	br	8064ec <__alt_data_end+0xff8064ec>
  806664:	1890b03a 	or	r8,r3,r2
  806668:	40017d26 	beq	r8,zero,806c60 <__adddf3+0x7f0>
  80666c:	1011883a 	mov	r8,r2
  806670:	1823883a 	mov	r17,r3
  806674:	888001cc 	andi	r2,r17,7
  806678:	103f9e1e 	bne	r2,zero,8064f4 <__alt_data_end+0xff8064f4>
  80667c:	4004977a 	slli	r2,r8,29
  806680:	8822d0fa 	srli	r17,r17,3
  806684:	4010d0fa 	srli	r8,r8,3
  806688:	9007883a 	mov	r3,r18
  80668c:	1444b03a 	or	r2,r2,r17
  806690:	0101ffc4 	movi	r4,2047
  806694:	81002426 	beq	r16,r4,806728 <__adddf3+0x2b8>
  806698:	8120703a 	and	r16,r16,r4
  80669c:	01000434 	movhi	r4,16
  8066a0:	213fffc4 	addi	r4,r4,-1
  8066a4:	4110703a 	and	r8,r8,r4
  8066a8:	003fa806 	br	80654c <__alt_data_end+0xff80654c>
  8066ac:	8089c83a 	sub	r4,r16,r2
  8066b0:	01005e0e 	bge	zero,r4,80682c <__adddf3+0x3bc>
  8066b4:	10002b26 	beq	r2,zero,806764 <__adddf3+0x2f4>
  8066b8:	0081ffc4 	movi	r2,2047
  8066bc:	80bf8b26 	beq	r16,r2,8064ec <__alt_data_end+0xff8064ec>
  8066c0:	4a402034 	orhi	r9,r9,128
  8066c4:	00800e04 	movi	r2,56
  8066c8:	1100a40e 	bge	r2,r4,80695c <__adddf3+0x4ec>
  8066cc:	498cb03a 	or	r6,r9,r6
  8066d0:	300ac03a 	cmpne	r5,r6,zero
  8066d4:	0013883a 	mov	r9,zero
  8066d8:	2c4b883a 	add	r5,r5,r17
  8066dc:	2c63803a 	cmpltu	r17,r5,r17
  8066e0:	4a11883a 	add	r8,r9,r8
  8066e4:	8a11883a 	add	r8,r17,r8
  8066e8:	2823883a 	mov	r17,r5
  8066ec:	4080202c 	andhi	r2,r8,128
  8066f0:	103fe026 	beq	r2,zero,806674 <__alt_data_end+0xff806674>
  8066f4:	84000044 	addi	r16,r16,1
  8066f8:	0081ffc4 	movi	r2,2047
  8066fc:	8080d226 	beq	r16,r2,806a48 <__adddf3+0x5d8>
  806700:	00bfe034 	movhi	r2,65408
  806704:	10bfffc4 	addi	r2,r2,-1
  806708:	4090703a 	and	r8,r8,r2
  80670c:	880ad07a 	srli	r5,r17,1
  806710:	400897fa 	slli	r4,r8,31
  806714:	88c0004c 	andi	r3,r17,1
  806718:	28e2b03a 	or	r17,r5,r3
  80671c:	4010d07a 	srli	r8,r8,1
  806720:	2462b03a 	or	r17,r4,r17
  806724:	003f7106 	br	8064ec <__alt_data_end+0xff8064ec>
  806728:	4088b03a 	or	r4,r8,r2
  80672c:	20014526 	beq	r4,zero,806c44 <__adddf3+0x7d4>
  806730:	01000434 	movhi	r4,16
  806734:	42000234 	orhi	r8,r8,8
  806738:	213fffc4 	addi	r4,r4,-1
  80673c:	4110703a 	and	r8,r8,r4
  806740:	003f8206 	br	80654c <__alt_data_end+0xff80654c>
  806744:	18ffffc4 	addi	r3,r3,-1
  806748:	1800491e 	bne	r3,zero,806870 <__adddf3+0x400>
  80674c:	898bc83a 	sub	r5,r17,r6
  806750:	8963803a 	cmpltu	r17,r17,r5
  806754:	4251c83a 	sub	r8,r8,r9
  806758:	4451c83a 	sub	r8,r8,r17
  80675c:	2823883a 	mov	r17,r5
  806760:	003f9f06 	br	8065e0 <__alt_data_end+0xff8065e0>
  806764:	4984b03a 	or	r2,r9,r6
  806768:	103f6026 	beq	r2,zero,8064ec <__alt_data_end+0xff8064ec>
  80676c:	213fffc4 	addi	r4,r4,-1
  806770:	2000931e 	bne	r4,zero,8069c0 <__adddf3+0x550>
  806774:	898d883a 	add	r6,r17,r6
  806778:	3463803a 	cmpltu	r17,r6,r17
  80677c:	4251883a 	add	r8,r8,r9
  806780:	8a11883a 	add	r8,r17,r8
  806784:	3023883a 	mov	r17,r6
  806788:	003fd806 	br	8066ec <__alt_data_end+0xff8066ec>
  80678c:	1800541e 	bne	r3,zero,8068e0 <__adddf3+0x470>
  806790:	80800044 	addi	r2,r16,1
  806794:	1081ffcc 	andi	r2,r2,2047
  806798:	00c00044 	movi	r3,1
  80679c:	1880a00e 	bge	r3,r2,806a20 <__adddf3+0x5b0>
  8067a0:	8989c83a 	sub	r4,r17,r6
  8067a4:	8905803a 	cmpltu	r2,r17,r4
  8067a8:	4267c83a 	sub	r19,r8,r9
  8067ac:	98a7c83a 	sub	r19,r19,r2
  8067b0:	9880202c 	andhi	r2,r19,128
  8067b4:	10006326 	beq	r2,zero,806944 <__adddf3+0x4d4>
  8067b8:	3463c83a 	sub	r17,r6,r17
  8067bc:	4a07c83a 	sub	r3,r9,r8
  8067c0:	344d803a 	cmpltu	r6,r6,r17
  8067c4:	19a7c83a 	sub	r19,r3,r6
  8067c8:	3825883a 	mov	r18,r7
  8067cc:	983f8a1e 	bne	r19,zero,8065f8 <__alt_data_end+0xff8065f8>
  8067d0:	8809883a 	mov	r4,r17
  8067d4:	0808b900 	call	808b90 <__clzsi2>
  8067d8:	10800804 	addi	r2,r2,32
  8067dc:	10fffe04 	addi	r3,r2,-8
  8067e0:	010007c4 	movi	r4,31
  8067e4:	20ff890e 	bge	r4,r3,80660c <__alt_data_end+0xff80660c>
  8067e8:	10bff604 	addi	r2,r2,-40
  8067ec:	8884983a 	sll	r2,r17,r2
  8067f0:	0023883a 	mov	r17,zero
  8067f4:	1c3f8c0e 	bge	r3,r16,806628 <__alt_data_end+0xff806628>
  8067f8:	023fe034 	movhi	r8,65408
  8067fc:	423fffc4 	addi	r8,r8,-1
  806800:	80e1c83a 	sub	r16,r16,r3
  806804:	1210703a 	and	r8,r2,r8
  806808:	003f3806 	br	8064ec <__alt_data_end+0xff8064ec>
  80680c:	9007883a 	mov	r3,r18
  806810:	0011883a 	mov	r8,zero
  806814:	0005883a 	mov	r2,zero
  806818:	003f4c06 	br	80654c <__alt_data_end+0xff80654c>
  80681c:	498cb03a 	or	r6,r9,r6
  806820:	300cc03a 	cmpne	r6,r6,zero
  806824:	0007883a 	mov	r3,zero
  806828:	003f6806 	br	8065cc <__alt_data_end+0xff8065cc>
  80682c:	20009c1e 	bne	r4,zero,806aa0 <__adddf3+0x630>
  806830:	80800044 	addi	r2,r16,1
  806834:	1141ffcc 	andi	r5,r2,2047
  806838:	01000044 	movi	r4,1
  80683c:	2140670e 	bge	r4,r5,8069dc <__adddf3+0x56c>
  806840:	0101ffc4 	movi	r4,2047
  806844:	11007f26 	beq	r2,r4,806a44 <__adddf3+0x5d4>
  806848:	898d883a 	add	r6,r17,r6
  80684c:	4247883a 	add	r3,r8,r9
  806850:	3451803a 	cmpltu	r8,r6,r17
  806854:	40d1883a 	add	r8,r8,r3
  806858:	402297fa 	slli	r17,r8,31
  80685c:	300cd07a 	srli	r6,r6,1
  806860:	4010d07a 	srli	r8,r8,1
  806864:	1021883a 	mov	r16,r2
  806868:	89a2b03a 	or	r17,r17,r6
  80686c:	003f1f06 	br	8064ec <__alt_data_end+0xff8064ec>
  806870:	0081ffc4 	movi	r2,2047
  806874:	80bf481e 	bne	r16,r2,806598 <__alt_data_end+0xff806598>
  806878:	003f1c06 	br	8064ec <__alt_data_end+0xff8064ec>
  80687c:	843ff844 	addi	r16,r16,-31
  806880:	01000804 	movi	r4,32
  806884:	1406d83a 	srl	r3,r2,r16
  806888:	41005026 	beq	r8,r4,8069cc <__adddf3+0x55c>
  80688c:	01001004 	movi	r4,64
  806890:	2211c83a 	sub	r8,r4,r8
  806894:	1204983a 	sll	r2,r2,r8
  806898:	88a2b03a 	or	r17,r17,r2
  80689c:	8822c03a 	cmpne	r17,r17,zero
  8068a0:	1c62b03a 	or	r17,r3,r17
  8068a4:	0011883a 	mov	r8,zero
  8068a8:	0021883a 	mov	r16,zero
  8068ac:	003f7106 	br	806674 <__alt_data_end+0xff806674>
  8068b0:	193ff804 	addi	r4,r3,-32
  8068b4:	00800804 	movi	r2,32
  8068b8:	4908d83a 	srl	r4,r9,r4
  8068bc:	18804526 	beq	r3,r2,8069d4 <__adddf3+0x564>
  8068c0:	00801004 	movi	r2,64
  8068c4:	10c5c83a 	sub	r2,r2,r3
  8068c8:	4886983a 	sll	r3,r9,r2
  8068cc:	198cb03a 	or	r6,r3,r6
  8068d0:	300cc03a 	cmpne	r6,r6,zero
  8068d4:	218cb03a 	or	r6,r4,r6
  8068d8:	0007883a 	mov	r3,zero
  8068dc:	003f3b06 	br	8065cc <__alt_data_end+0xff8065cc>
  8068e0:	80002a26 	beq	r16,zero,80698c <__adddf3+0x51c>
  8068e4:	0101ffc4 	movi	r4,2047
  8068e8:	11006826 	beq	r2,r4,806a8c <__adddf3+0x61c>
  8068ec:	00c7c83a 	sub	r3,zero,r3
  8068f0:	42002034 	orhi	r8,r8,128
  8068f4:	01000e04 	movi	r4,56
  8068f8:	20c07c16 	blt	r4,r3,806aec <__adddf3+0x67c>
  8068fc:	010007c4 	movi	r4,31
  806900:	20c0da16 	blt	r4,r3,806c6c <__adddf3+0x7fc>
  806904:	01000804 	movi	r4,32
  806908:	20c9c83a 	sub	r4,r4,r3
  80690c:	4114983a 	sll	r10,r8,r4
  806910:	88cad83a 	srl	r5,r17,r3
  806914:	8908983a 	sll	r4,r17,r4
  806918:	40c6d83a 	srl	r3,r8,r3
  80691c:	5162b03a 	or	r17,r10,r5
  806920:	2008c03a 	cmpne	r4,r4,zero
  806924:	8922b03a 	or	r17,r17,r4
  806928:	3463c83a 	sub	r17,r6,r17
  80692c:	48c7c83a 	sub	r3,r9,r3
  806930:	344d803a 	cmpltu	r6,r6,r17
  806934:	1991c83a 	sub	r8,r3,r6
  806938:	1021883a 	mov	r16,r2
  80693c:	3825883a 	mov	r18,r7
  806940:	003f2706 	br	8065e0 <__alt_data_end+0xff8065e0>
  806944:	24d0b03a 	or	r8,r4,r19
  806948:	40001b1e 	bne	r8,zero,8069b8 <__adddf3+0x548>
  80694c:	0005883a 	mov	r2,zero
  806950:	0007883a 	mov	r3,zero
  806954:	0021883a 	mov	r16,zero
  806958:	003f4d06 	br	806690 <__alt_data_end+0xff806690>
  80695c:	008007c4 	movi	r2,31
  806960:	11003c16 	blt	r2,r4,806a54 <__adddf3+0x5e4>
  806964:	00800804 	movi	r2,32
  806968:	1105c83a 	sub	r2,r2,r4
  80696c:	488e983a 	sll	r7,r9,r2
  806970:	310ad83a 	srl	r5,r6,r4
  806974:	3084983a 	sll	r2,r6,r2
  806978:	4912d83a 	srl	r9,r9,r4
  80697c:	394ab03a 	or	r5,r7,r5
  806980:	1004c03a 	cmpne	r2,r2,zero
  806984:	288ab03a 	or	r5,r5,r2
  806988:	003f5306 	br	8066d8 <__alt_data_end+0xff8066d8>
  80698c:	4448b03a 	or	r4,r8,r17
  806990:	20003e26 	beq	r4,zero,806a8c <__adddf3+0x61c>
  806994:	00c6303a 	nor	r3,zero,r3
  806998:	18003a1e 	bne	r3,zero,806a84 <__adddf3+0x614>
  80699c:	3463c83a 	sub	r17,r6,r17
  8069a0:	4a07c83a 	sub	r3,r9,r8
  8069a4:	344d803a 	cmpltu	r6,r6,r17
  8069a8:	1991c83a 	sub	r8,r3,r6
  8069ac:	1021883a 	mov	r16,r2
  8069b0:	3825883a 	mov	r18,r7
  8069b4:	003f0a06 	br	8065e0 <__alt_data_end+0xff8065e0>
  8069b8:	2023883a 	mov	r17,r4
  8069bc:	003f0d06 	br	8065f4 <__alt_data_end+0xff8065f4>
  8069c0:	0081ffc4 	movi	r2,2047
  8069c4:	80bf3f1e 	bne	r16,r2,8066c4 <__alt_data_end+0xff8066c4>
  8069c8:	003ec806 	br	8064ec <__alt_data_end+0xff8064ec>
  8069cc:	0005883a 	mov	r2,zero
  8069d0:	003fb106 	br	806898 <__alt_data_end+0xff806898>
  8069d4:	0007883a 	mov	r3,zero
  8069d8:	003fbc06 	br	8068cc <__alt_data_end+0xff8068cc>
  8069dc:	4444b03a 	or	r2,r8,r17
  8069e0:	8000871e 	bne	r16,zero,806c00 <__adddf3+0x790>
  8069e4:	1000ba26 	beq	r2,zero,806cd0 <__adddf3+0x860>
  8069e8:	4984b03a 	or	r2,r9,r6
  8069ec:	103ebf26 	beq	r2,zero,8064ec <__alt_data_end+0xff8064ec>
  8069f0:	8985883a 	add	r2,r17,r6
  8069f4:	4247883a 	add	r3,r8,r9
  8069f8:	1451803a 	cmpltu	r8,r2,r17
  8069fc:	40d1883a 	add	r8,r8,r3
  806a00:	40c0202c 	andhi	r3,r8,128
  806a04:	1023883a 	mov	r17,r2
  806a08:	183f1a26 	beq	r3,zero,806674 <__alt_data_end+0xff806674>
  806a0c:	00bfe034 	movhi	r2,65408
  806a10:	10bfffc4 	addi	r2,r2,-1
  806a14:	2021883a 	mov	r16,r4
  806a18:	4090703a 	and	r8,r8,r2
  806a1c:	003eb306 	br	8064ec <__alt_data_end+0xff8064ec>
  806a20:	4444b03a 	or	r2,r8,r17
  806a24:	8000291e 	bne	r16,zero,806acc <__adddf3+0x65c>
  806a28:	10004b1e 	bne	r2,zero,806b58 <__adddf3+0x6e8>
  806a2c:	4990b03a 	or	r8,r9,r6
  806a30:	40008b26 	beq	r8,zero,806c60 <__adddf3+0x7f0>
  806a34:	4811883a 	mov	r8,r9
  806a38:	3023883a 	mov	r17,r6
  806a3c:	3825883a 	mov	r18,r7
  806a40:	003eaa06 	br	8064ec <__alt_data_end+0xff8064ec>
  806a44:	1021883a 	mov	r16,r2
  806a48:	0011883a 	mov	r8,zero
  806a4c:	0005883a 	mov	r2,zero
  806a50:	003f0f06 	br	806690 <__alt_data_end+0xff806690>
  806a54:	217ff804 	addi	r5,r4,-32
  806a58:	00800804 	movi	r2,32
  806a5c:	494ad83a 	srl	r5,r9,r5
  806a60:	20807d26 	beq	r4,r2,806c58 <__adddf3+0x7e8>
  806a64:	00801004 	movi	r2,64
  806a68:	1109c83a 	sub	r4,r2,r4
  806a6c:	4912983a 	sll	r9,r9,r4
  806a70:	498cb03a 	or	r6,r9,r6
  806a74:	300cc03a 	cmpne	r6,r6,zero
  806a78:	298ab03a 	or	r5,r5,r6
  806a7c:	0013883a 	mov	r9,zero
  806a80:	003f1506 	br	8066d8 <__alt_data_end+0xff8066d8>
  806a84:	0101ffc4 	movi	r4,2047
  806a88:	113f9a1e 	bne	r2,r4,8068f4 <__alt_data_end+0xff8068f4>
  806a8c:	4811883a 	mov	r8,r9
  806a90:	3023883a 	mov	r17,r6
  806a94:	1021883a 	mov	r16,r2
  806a98:	3825883a 	mov	r18,r7
  806a9c:	003e9306 	br	8064ec <__alt_data_end+0xff8064ec>
  806aa0:	8000161e 	bne	r16,zero,806afc <__adddf3+0x68c>
  806aa4:	444ab03a 	or	r5,r8,r17
  806aa8:	28005126 	beq	r5,zero,806bf0 <__adddf3+0x780>
  806aac:	0108303a 	nor	r4,zero,r4
  806ab0:	20004d1e 	bne	r4,zero,806be8 <__adddf3+0x778>
  806ab4:	89a3883a 	add	r17,r17,r6
  806ab8:	4253883a 	add	r9,r8,r9
  806abc:	898d803a 	cmpltu	r6,r17,r6
  806ac0:	3251883a 	add	r8,r6,r9
  806ac4:	1021883a 	mov	r16,r2
  806ac8:	003f0806 	br	8066ec <__alt_data_end+0xff8066ec>
  806acc:	1000301e 	bne	r2,zero,806b90 <__adddf3+0x720>
  806ad0:	4984b03a 	or	r2,r9,r6
  806ad4:	10007126 	beq	r2,zero,806c9c <__adddf3+0x82c>
  806ad8:	4811883a 	mov	r8,r9
  806adc:	3023883a 	mov	r17,r6
  806ae0:	3825883a 	mov	r18,r7
  806ae4:	0401ffc4 	movi	r16,2047
  806ae8:	003e8006 	br	8064ec <__alt_data_end+0xff8064ec>
  806aec:	4462b03a 	or	r17,r8,r17
  806af0:	8822c03a 	cmpne	r17,r17,zero
  806af4:	0007883a 	mov	r3,zero
  806af8:	003f8b06 	br	806928 <__alt_data_end+0xff806928>
  806afc:	0141ffc4 	movi	r5,2047
  806b00:	11403b26 	beq	r2,r5,806bf0 <__adddf3+0x780>
  806b04:	0109c83a 	sub	r4,zero,r4
  806b08:	42002034 	orhi	r8,r8,128
  806b0c:	01400e04 	movi	r5,56
  806b10:	29006716 	blt	r5,r4,806cb0 <__adddf3+0x840>
  806b14:	014007c4 	movi	r5,31
  806b18:	29007016 	blt	r5,r4,806cdc <__adddf3+0x86c>
  806b1c:	01400804 	movi	r5,32
  806b20:	290bc83a 	sub	r5,r5,r4
  806b24:	4154983a 	sll	r10,r8,r5
  806b28:	890ed83a 	srl	r7,r17,r4
  806b2c:	894a983a 	sll	r5,r17,r5
  806b30:	4108d83a 	srl	r4,r8,r4
  806b34:	51e2b03a 	or	r17,r10,r7
  806b38:	280ac03a 	cmpne	r5,r5,zero
  806b3c:	8962b03a 	or	r17,r17,r5
  806b40:	89a3883a 	add	r17,r17,r6
  806b44:	2253883a 	add	r9,r4,r9
  806b48:	898d803a 	cmpltu	r6,r17,r6
  806b4c:	3251883a 	add	r8,r6,r9
  806b50:	1021883a 	mov	r16,r2
  806b54:	003ee506 	br	8066ec <__alt_data_end+0xff8066ec>
  806b58:	4984b03a 	or	r2,r9,r6
  806b5c:	103e6326 	beq	r2,zero,8064ec <__alt_data_end+0xff8064ec>
  806b60:	8987c83a 	sub	r3,r17,r6
  806b64:	88c9803a 	cmpltu	r4,r17,r3
  806b68:	4245c83a 	sub	r2,r8,r9
  806b6c:	1105c83a 	sub	r2,r2,r4
  806b70:	1100202c 	andhi	r4,r2,128
  806b74:	203ebb26 	beq	r4,zero,806664 <__alt_data_end+0xff806664>
  806b78:	3463c83a 	sub	r17,r6,r17
  806b7c:	4a07c83a 	sub	r3,r9,r8
  806b80:	344d803a 	cmpltu	r6,r6,r17
  806b84:	1991c83a 	sub	r8,r3,r6
  806b88:	3825883a 	mov	r18,r7
  806b8c:	003e5706 	br	8064ec <__alt_data_end+0xff8064ec>
  806b90:	4984b03a 	or	r2,r9,r6
  806b94:	10002e26 	beq	r2,zero,806c50 <__adddf3+0x7e0>
  806b98:	4004d0fa 	srli	r2,r8,3
  806b9c:	8822d0fa 	srli	r17,r17,3
  806ba0:	4010977a 	slli	r8,r8,29
  806ba4:	10c0022c 	andhi	r3,r2,8
  806ba8:	4462b03a 	or	r17,r8,r17
  806bac:	18000826 	beq	r3,zero,806bd0 <__adddf3+0x760>
  806bb0:	4808d0fa 	srli	r4,r9,3
  806bb4:	20c0022c 	andhi	r3,r4,8
  806bb8:	1800051e 	bne	r3,zero,806bd0 <__adddf3+0x760>
  806bbc:	300cd0fa 	srli	r6,r6,3
  806bc0:	4806977a 	slli	r3,r9,29
  806bc4:	2005883a 	mov	r2,r4
  806bc8:	3825883a 	mov	r18,r7
  806bcc:	19a2b03a 	or	r17,r3,r6
  806bd0:	8810d77a 	srli	r8,r17,29
  806bd4:	100490fa 	slli	r2,r2,3
  806bd8:	882290fa 	slli	r17,r17,3
  806bdc:	0401ffc4 	movi	r16,2047
  806be0:	4090b03a 	or	r8,r8,r2
  806be4:	003e4106 	br	8064ec <__alt_data_end+0xff8064ec>
  806be8:	0141ffc4 	movi	r5,2047
  806bec:	117fc71e 	bne	r2,r5,806b0c <__alt_data_end+0xff806b0c>
  806bf0:	4811883a 	mov	r8,r9
  806bf4:	3023883a 	mov	r17,r6
  806bf8:	1021883a 	mov	r16,r2
  806bfc:	003e3b06 	br	8064ec <__alt_data_end+0xff8064ec>
  806c00:	10002f26 	beq	r2,zero,806cc0 <__adddf3+0x850>
  806c04:	4984b03a 	or	r2,r9,r6
  806c08:	10001126 	beq	r2,zero,806c50 <__adddf3+0x7e0>
  806c0c:	4004d0fa 	srli	r2,r8,3
  806c10:	8822d0fa 	srli	r17,r17,3
  806c14:	4010977a 	slli	r8,r8,29
  806c18:	10c0022c 	andhi	r3,r2,8
  806c1c:	4462b03a 	or	r17,r8,r17
  806c20:	183feb26 	beq	r3,zero,806bd0 <__alt_data_end+0xff806bd0>
  806c24:	4808d0fa 	srli	r4,r9,3
  806c28:	20c0022c 	andhi	r3,r4,8
  806c2c:	183fe81e 	bne	r3,zero,806bd0 <__alt_data_end+0xff806bd0>
  806c30:	300cd0fa 	srli	r6,r6,3
  806c34:	4806977a 	slli	r3,r9,29
  806c38:	2005883a 	mov	r2,r4
  806c3c:	19a2b03a 	or	r17,r3,r6
  806c40:	003fe306 	br	806bd0 <__alt_data_end+0xff806bd0>
  806c44:	0011883a 	mov	r8,zero
  806c48:	0005883a 	mov	r2,zero
  806c4c:	003e3f06 	br	80654c <__alt_data_end+0xff80654c>
  806c50:	0401ffc4 	movi	r16,2047
  806c54:	003e2506 	br	8064ec <__alt_data_end+0xff8064ec>
  806c58:	0013883a 	mov	r9,zero
  806c5c:	003f8406 	br	806a70 <__alt_data_end+0xff806a70>
  806c60:	0005883a 	mov	r2,zero
  806c64:	0007883a 	mov	r3,zero
  806c68:	003e8906 	br	806690 <__alt_data_end+0xff806690>
  806c6c:	197ff804 	addi	r5,r3,-32
  806c70:	01000804 	movi	r4,32
  806c74:	414ad83a 	srl	r5,r8,r5
  806c78:	19002426 	beq	r3,r4,806d0c <__adddf3+0x89c>
  806c7c:	01001004 	movi	r4,64
  806c80:	20c7c83a 	sub	r3,r4,r3
  806c84:	40c6983a 	sll	r3,r8,r3
  806c88:	1c46b03a 	or	r3,r3,r17
  806c8c:	1806c03a 	cmpne	r3,r3,zero
  806c90:	28e2b03a 	or	r17,r5,r3
  806c94:	0007883a 	mov	r3,zero
  806c98:	003f2306 	br	806928 <__alt_data_end+0xff806928>
  806c9c:	0007883a 	mov	r3,zero
  806ca0:	5811883a 	mov	r8,r11
  806ca4:	00bfffc4 	movi	r2,-1
  806ca8:	0401ffc4 	movi	r16,2047
  806cac:	003e7806 	br	806690 <__alt_data_end+0xff806690>
  806cb0:	4462b03a 	or	r17,r8,r17
  806cb4:	8822c03a 	cmpne	r17,r17,zero
  806cb8:	0009883a 	mov	r4,zero
  806cbc:	003fa006 	br	806b40 <__alt_data_end+0xff806b40>
  806cc0:	4811883a 	mov	r8,r9
  806cc4:	3023883a 	mov	r17,r6
  806cc8:	0401ffc4 	movi	r16,2047
  806ccc:	003e0706 	br	8064ec <__alt_data_end+0xff8064ec>
  806cd0:	4811883a 	mov	r8,r9
  806cd4:	3023883a 	mov	r17,r6
  806cd8:	003e0406 	br	8064ec <__alt_data_end+0xff8064ec>
  806cdc:	21fff804 	addi	r7,r4,-32
  806ce0:	01400804 	movi	r5,32
  806ce4:	41ced83a 	srl	r7,r8,r7
  806ce8:	21400a26 	beq	r4,r5,806d14 <__adddf3+0x8a4>
  806cec:	01401004 	movi	r5,64
  806cf0:	2909c83a 	sub	r4,r5,r4
  806cf4:	4108983a 	sll	r4,r8,r4
  806cf8:	2448b03a 	or	r4,r4,r17
  806cfc:	2008c03a 	cmpne	r4,r4,zero
  806d00:	3922b03a 	or	r17,r7,r4
  806d04:	0009883a 	mov	r4,zero
  806d08:	003f8d06 	br	806b40 <__alt_data_end+0xff806b40>
  806d0c:	0007883a 	mov	r3,zero
  806d10:	003fdd06 	br	806c88 <__alt_data_end+0xff806c88>
  806d14:	0009883a 	mov	r4,zero
  806d18:	003ff706 	br	806cf8 <__alt_data_end+0xff806cf8>

00806d1c <__divdf3>:
  806d1c:	defff204 	addi	sp,sp,-56
  806d20:	dd400915 	stw	r21,36(sp)
  806d24:	282ad53a 	srli	r21,r5,20
  806d28:	dd000815 	stw	r20,32(sp)
  806d2c:	2828d7fa 	srli	r20,r5,31
  806d30:	dc000415 	stw	r16,16(sp)
  806d34:	04000434 	movhi	r16,16
  806d38:	df000c15 	stw	fp,48(sp)
  806d3c:	843fffc4 	addi	r16,r16,-1
  806d40:	dfc00d15 	stw	ra,52(sp)
  806d44:	ddc00b15 	stw	r23,44(sp)
  806d48:	dd800a15 	stw	r22,40(sp)
  806d4c:	dcc00715 	stw	r19,28(sp)
  806d50:	dc800615 	stw	r18,24(sp)
  806d54:	dc400515 	stw	r17,20(sp)
  806d58:	ad41ffcc 	andi	r21,r21,2047
  806d5c:	2c20703a 	and	r16,r5,r16
  806d60:	a7003fcc 	andi	fp,r20,255
  806d64:	a8006126 	beq	r21,zero,806eec <__divdf3+0x1d0>
  806d68:	0081ffc4 	movi	r2,2047
  806d6c:	2025883a 	mov	r18,r4
  806d70:	a8803726 	beq	r21,r2,806e50 <__divdf3+0x134>
  806d74:	80800434 	orhi	r2,r16,16
  806d78:	100490fa 	slli	r2,r2,3
  806d7c:	2020d77a 	srli	r16,r4,29
  806d80:	202490fa 	slli	r18,r4,3
  806d84:	ad7f0044 	addi	r21,r21,-1023
  806d88:	80a0b03a 	or	r16,r16,r2
  806d8c:	0027883a 	mov	r19,zero
  806d90:	0013883a 	mov	r9,zero
  806d94:	3804d53a 	srli	r2,r7,20
  806d98:	382cd7fa 	srli	r22,r7,31
  806d9c:	04400434 	movhi	r17,16
  806da0:	8c7fffc4 	addi	r17,r17,-1
  806da4:	1081ffcc 	andi	r2,r2,2047
  806da8:	3011883a 	mov	r8,r6
  806dac:	3c62703a 	and	r17,r7,r17
  806db0:	b5c03fcc 	andi	r23,r22,255
  806db4:	10006c26 	beq	r2,zero,806f68 <__divdf3+0x24c>
  806db8:	00c1ffc4 	movi	r3,2047
  806dbc:	10c06426 	beq	r2,r3,806f50 <__divdf3+0x234>
  806dc0:	88c00434 	orhi	r3,r17,16
  806dc4:	180690fa 	slli	r3,r3,3
  806dc8:	3022d77a 	srli	r17,r6,29
  806dcc:	301090fa 	slli	r8,r6,3
  806dd0:	10bf0044 	addi	r2,r2,-1023
  806dd4:	88e2b03a 	or	r17,r17,r3
  806dd8:	000f883a 	mov	r7,zero
  806ddc:	a58cf03a 	xor	r6,r20,r22
  806de0:	3cc8b03a 	or	r4,r7,r19
  806de4:	a8abc83a 	sub	r21,r21,r2
  806de8:	008003c4 	movi	r2,15
  806dec:	3007883a 	mov	r3,r6
  806df0:	34c03fcc 	andi	r19,r6,255
  806df4:	11009036 	bltu	r2,r4,807038 <__divdf3+0x31c>
  806df8:	200890ba 	slli	r4,r4,2
  806dfc:	00802034 	movhi	r2,128
  806e00:	109b8404 	addi	r2,r2,28176
  806e04:	2089883a 	add	r4,r4,r2
  806e08:	20800017 	ldw	r2,0(r4)
  806e0c:	1000683a 	jmp	r2
  806e10:	00807038 	rdprs	r2,zero,448
  806e14:	00806e88 	cmpgei	r2,zero,442
  806e18:	00807028 	cmpgeui	r2,zero,448
  806e1c:	00806e7c 	xorhi	r2,zero,441
  806e20:	00807028 	cmpgeui	r2,zero,448
  806e24:	00806ffc 	xorhi	r2,zero,447
  806e28:	00807028 	cmpgeui	r2,zero,448
  806e2c:	00806e7c 	xorhi	r2,zero,441
  806e30:	00806e88 	cmpgei	r2,zero,442
  806e34:	00806e88 	cmpgei	r2,zero,442
  806e38:	00806ffc 	xorhi	r2,zero,447
  806e3c:	00806e7c 	xorhi	r2,zero,441
  806e40:	00806e6c 	andhi	r2,zero,441
  806e44:	00806e6c 	andhi	r2,zero,441
  806e48:	00806e6c 	andhi	r2,zero,441
  806e4c:	0080731c 	xori	r2,zero,460
  806e50:	2404b03a 	or	r2,r4,r16
  806e54:	1000661e 	bne	r2,zero,806ff0 <__divdf3+0x2d4>
  806e58:	04c00204 	movi	r19,8
  806e5c:	0021883a 	mov	r16,zero
  806e60:	0025883a 	mov	r18,zero
  806e64:	02400084 	movi	r9,2
  806e68:	003fca06 	br	806d94 <__alt_data_end+0xff806d94>
  806e6c:	8023883a 	mov	r17,r16
  806e70:	9011883a 	mov	r8,r18
  806e74:	e02f883a 	mov	r23,fp
  806e78:	480f883a 	mov	r7,r9
  806e7c:	00800084 	movi	r2,2
  806e80:	3881311e 	bne	r7,r2,807348 <__divdf3+0x62c>
  806e84:	b827883a 	mov	r19,r23
  806e88:	98c0004c 	andi	r3,r19,1
  806e8c:	0081ffc4 	movi	r2,2047
  806e90:	000b883a 	mov	r5,zero
  806e94:	0025883a 	mov	r18,zero
  806e98:	1004953a 	slli	r2,r2,20
  806e9c:	18c03fcc 	andi	r3,r3,255
  806ea0:	04400434 	movhi	r17,16
  806ea4:	8c7fffc4 	addi	r17,r17,-1
  806ea8:	180697fa 	slli	r3,r3,31
  806eac:	2c4a703a 	and	r5,r5,r17
  806eb0:	288ab03a 	or	r5,r5,r2
  806eb4:	28c6b03a 	or	r3,r5,r3
  806eb8:	9005883a 	mov	r2,r18
  806ebc:	dfc00d17 	ldw	ra,52(sp)
  806ec0:	df000c17 	ldw	fp,48(sp)
  806ec4:	ddc00b17 	ldw	r23,44(sp)
  806ec8:	dd800a17 	ldw	r22,40(sp)
  806ecc:	dd400917 	ldw	r21,36(sp)
  806ed0:	dd000817 	ldw	r20,32(sp)
  806ed4:	dcc00717 	ldw	r19,28(sp)
  806ed8:	dc800617 	ldw	r18,24(sp)
  806edc:	dc400517 	ldw	r17,20(sp)
  806ee0:	dc000417 	ldw	r16,16(sp)
  806ee4:	dec00e04 	addi	sp,sp,56
  806ee8:	f800283a 	ret
  806eec:	2404b03a 	or	r2,r4,r16
  806ef0:	2027883a 	mov	r19,r4
  806ef4:	10003926 	beq	r2,zero,806fdc <__divdf3+0x2c0>
  806ef8:	80012e26 	beq	r16,zero,8073b4 <__divdf3+0x698>
  806efc:	8009883a 	mov	r4,r16
  806f00:	d9800315 	stw	r6,12(sp)
  806f04:	d9c00215 	stw	r7,8(sp)
  806f08:	0808b900 	call	808b90 <__clzsi2>
  806f0c:	d9800317 	ldw	r6,12(sp)
  806f10:	d9c00217 	ldw	r7,8(sp)
  806f14:	113ffd44 	addi	r4,r2,-11
  806f18:	00c00704 	movi	r3,28
  806f1c:	19012116 	blt	r3,r4,8073a4 <__divdf3+0x688>
  806f20:	00c00744 	movi	r3,29
  806f24:	147ffe04 	addi	r17,r2,-8
  806f28:	1907c83a 	sub	r3,r3,r4
  806f2c:	8460983a 	sll	r16,r16,r17
  806f30:	98c6d83a 	srl	r3,r19,r3
  806f34:	9c64983a 	sll	r18,r19,r17
  806f38:	1c20b03a 	or	r16,r3,r16
  806f3c:	1080fcc4 	addi	r2,r2,1011
  806f40:	00abc83a 	sub	r21,zero,r2
  806f44:	0027883a 	mov	r19,zero
  806f48:	0013883a 	mov	r9,zero
  806f4c:	003f9106 	br	806d94 <__alt_data_end+0xff806d94>
  806f50:	3446b03a 	or	r3,r6,r17
  806f54:	18001f1e 	bne	r3,zero,806fd4 <__divdf3+0x2b8>
  806f58:	0023883a 	mov	r17,zero
  806f5c:	0011883a 	mov	r8,zero
  806f60:	01c00084 	movi	r7,2
  806f64:	003f9d06 	br	806ddc <__alt_data_end+0xff806ddc>
  806f68:	3446b03a 	or	r3,r6,r17
  806f6c:	18001526 	beq	r3,zero,806fc4 <__divdf3+0x2a8>
  806f70:	88011b26 	beq	r17,zero,8073e0 <__divdf3+0x6c4>
  806f74:	8809883a 	mov	r4,r17
  806f78:	d9800315 	stw	r6,12(sp)
  806f7c:	da400115 	stw	r9,4(sp)
  806f80:	0808b900 	call	808b90 <__clzsi2>
  806f84:	d9800317 	ldw	r6,12(sp)
  806f88:	da400117 	ldw	r9,4(sp)
  806f8c:	113ffd44 	addi	r4,r2,-11
  806f90:	00c00704 	movi	r3,28
  806f94:	19010e16 	blt	r3,r4,8073d0 <__divdf3+0x6b4>
  806f98:	00c00744 	movi	r3,29
  806f9c:	123ffe04 	addi	r8,r2,-8
  806fa0:	1907c83a 	sub	r3,r3,r4
  806fa4:	8a22983a 	sll	r17,r17,r8
  806fa8:	30c6d83a 	srl	r3,r6,r3
  806fac:	3210983a 	sll	r8,r6,r8
  806fb0:	1c62b03a 	or	r17,r3,r17
  806fb4:	1080fcc4 	addi	r2,r2,1011
  806fb8:	0085c83a 	sub	r2,zero,r2
  806fbc:	000f883a 	mov	r7,zero
  806fc0:	003f8606 	br	806ddc <__alt_data_end+0xff806ddc>
  806fc4:	0023883a 	mov	r17,zero
  806fc8:	0011883a 	mov	r8,zero
  806fcc:	01c00044 	movi	r7,1
  806fd0:	003f8206 	br	806ddc <__alt_data_end+0xff806ddc>
  806fd4:	01c000c4 	movi	r7,3
  806fd8:	003f8006 	br	806ddc <__alt_data_end+0xff806ddc>
  806fdc:	04c00104 	movi	r19,4
  806fe0:	0021883a 	mov	r16,zero
  806fe4:	0025883a 	mov	r18,zero
  806fe8:	02400044 	movi	r9,1
  806fec:	003f6906 	br	806d94 <__alt_data_end+0xff806d94>
  806ff0:	04c00304 	movi	r19,12
  806ff4:	024000c4 	movi	r9,3
  806ff8:	003f6606 	br	806d94 <__alt_data_end+0xff806d94>
  806ffc:	01400434 	movhi	r5,16
  807000:	0007883a 	mov	r3,zero
  807004:	297fffc4 	addi	r5,r5,-1
  807008:	04bfffc4 	movi	r18,-1
  80700c:	0081ffc4 	movi	r2,2047
  807010:	003fa106 	br	806e98 <__alt_data_end+0xff806e98>
  807014:	00c00044 	movi	r3,1
  807018:	1887c83a 	sub	r3,r3,r2
  80701c:	01000e04 	movi	r4,56
  807020:	20c1210e 	bge	r4,r3,8074a8 <__divdf3+0x78c>
  807024:	98c0004c 	andi	r3,r19,1
  807028:	0005883a 	mov	r2,zero
  80702c:	000b883a 	mov	r5,zero
  807030:	0025883a 	mov	r18,zero
  807034:	003f9806 	br	806e98 <__alt_data_end+0xff806e98>
  807038:	8c00fd36 	bltu	r17,r16,807430 <__divdf3+0x714>
  80703c:	8440fb26 	beq	r16,r17,80742c <__divdf3+0x710>
  807040:	8007883a 	mov	r3,r16
  807044:	ad7fffc4 	addi	r21,r21,-1
  807048:	0021883a 	mov	r16,zero
  80704c:	4004d63a 	srli	r2,r8,24
  807050:	8822923a 	slli	r17,r17,8
  807054:	1809883a 	mov	r4,r3
  807058:	402c923a 	slli	r22,r8,8
  80705c:	88b8b03a 	or	fp,r17,r2
  807060:	e028d43a 	srli	r20,fp,16
  807064:	d8c00015 	stw	r3,0(sp)
  807068:	e5ffffcc 	andi	r23,fp,65535
  80706c:	a00b883a 	mov	r5,r20
  807070:	0804e3c0 	call	804e3c <__udivsi3>
  807074:	d8c00017 	ldw	r3,0(sp)
  807078:	a00b883a 	mov	r5,r20
  80707c:	d8800315 	stw	r2,12(sp)
  807080:	1809883a 	mov	r4,r3
  807084:	0804ea00 	call	804ea0 <__umodsi3>
  807088:	d9800317 	ldw	r6,12(sp)
  80708c:	1006943a 	slli	r3,r2,16
  807090:	9004d43a 	srli	r2,r18,16
  807094:	b9a3383a 	mul	r17,r23,r6
  807098:	10c4b03a 	or	r2,r2,r3
  80709c:	1440062e 	bgeu	r2,r17,8070b8 <__divdf3+0x39c>
  8070a0:	1705883a 	add	r2,r2,fp
  8070a4:	30ffffc4 	addi	r3,r6,-1
  8070a8:	1700ee36 	bltu	r2,fp,807464 <__divdf3+0x748>
  8070ac:	1440ed2e 	bgeu	r2,r17,807464 <__divdf3+0x748>
  8070b0:	31bfff84 	addi	r6,r6,-2
  8070b4:	1705883a 	add	r2,r2,fp
  8070b8:	1463c83a 	sub	r17,r2,r17
  8070bc:	a00b883a 	mov	r5,r20
  8070c0:	8809883a 	mov	r4,r17
  8070c4:	d9800315 	stw	r6,12(sp)
  8070c8:	0804e3c0 	call	804e3c <__udivsi3>
  8070cc:	a00b883a 	mov	r5,r20
  8070d0:	8809883a 	mov	r4,r17
  8070d4:	d8800215 	stw	r2,8(sp)
  8070d8:	0804ea00 	call	804ea0 <__umodsi3>
  8070dc:	d9c00217 	ldw	r7,8(sp)
  8070e0:	1004943a 	slli	r2,r2,16
  8070e4:	94bfffcc 	andi	r18,r18,65535
  8070e8:	b9d1383a 	mul	r8,r23,r7
  8070ec:	90a4b03a 	or	r18,r18,r2
  8070f0:	d9800317 	ldw	r6,12(sp)
  8070f4:	9200062e 	bgeu	r18,r8,807110 <__divdf3+0x3f4>
  8070f8:	9725883a 	add	r18,r18,fp
  8070fc:	38bfffc4 	addi	r2,r7,-1
  807100:	9700d636 	bltu	r18,fp,80745c <__divdf3+0x740>
  807104:	9200d52e 	bgeu	r18,r8,80745c <__divdf3+0x740>
  807108:	39ffff84 	addi	r7,r7,-2
  80710c:	9725883a 	add	r18,r18,fp
  807110:	3004943a 	slli	r2,r6,16
  807114:	b012d43a 	srli	r9,r22,16
  807118:	b1bfffcc 	andi	r6,r22,65535
  80711c:	11e2b03a 	or	r17,r2,r7
  807120:	8806d43a 	srli	r3,r17,16
  807124:	893fffcc 	andi	r4,r17,65535
  807128:	218b383a 	mul	r5,r4,r6
  80712c:	30c5383a 	mul	r2,r6,r3
  807130:	2249383a 	mul	r4,r4,r9
  807134:	280ed43a 	srli	r7,r5,16
  807138:	9225c83a 	sub	r18,r18,r8
  80713c:	2089883a 	add	r4,r4,r2
  807140:	3909883a 	add	r4,r7,r4
  807144:	1a47383a 	mul	r3,r3,r9
  807148:	2080022e 	bgeu	r4,r2,807154 <__divdf3+0x438>
  80714c:	00800074 	movhi	r2,1
  807150:	1887883a 	add	r3,r3,r2
  807154:	2004d43a 	srli	r2,r4,16
  807158:	2008943a 	slli	r4,r4,16
  80715c:	297fffcc 	andi	r5,r5,65535
  807160:	10c7883a 	add	r3,r2,r3
  807164:	2149883a 	add	r4,r4,r5
  807168:	90c0a536 	bltu	r18,r3,807400 <__divdf3+0x6e4>
  80716c:	90c0bf26 	beq	r18,r3,80746c <__divdf3+0x750>
  807170:	90c7c83a 	sub	r3,r18,r3
  807174:	810fc83a 	sub	r7,r16,r4
  807178:	81e5803a 	cmpltu	r18,r16,r7
  80717c:	1ca5c83a 	sub	r18,r3,r18
  807180:	e480c126 	beq	fp,r18,807488 <__divdf3+0x76c>
  807184:	a00b883a 	mov	r5,r20
  807188:	9009883a 	mov	r4,r18
  80718c:	d9800315 	stw	r6,12(sp)
  807190:	d9c00215 	stw	r7,8(sp)
  807194:	da400115 	stw	r9,4(sp)
  807198:	0804e3c0 	call	804e3c <__udivsi3>
  80719c:	a00b883a 	mov	r5,r20
  8071a0:	9009883a 	mov	r4,r18
  8071a4:	d8800015 	stw	r2,0(sp)
  8071a8:	0804ea00 	call	804ea0 <__umodsi3>
  8071ac:	d9c00217 	ldw	r7,8(sp)
  8071b0:	da000017 	ldw	r8,0(sp)
  8071b4:	1006943a 	slli	r3,r2,16
  8071b8:	3804d43a 	srli	r2,r7,16
  8071bc:	ba21383a 	mul	r16,r23,r8
  8071c0:	d9800317 	ldw	r6,12(sp)
  8071c4:	10c4b03a 	or	r2,r2,r3
  8071c8:	da400117 	ldw	r9,4(sp)
  8071cc:	1400062e 	bgeu	r2,r16,8071e8 <__divdf3+0x4cc>
  8071d0:	1705883a 	add	r2,r2,fp
  8071d4:	40ffffc4 	addi	r3,r8,-1
  8071d8:	1700ad36 	bltu	r2,fp,807490 <__divdf3+0x774>
  8071dc:	1400ac2e 	bgeu	r2,r16,807490 <__divdf3+0x774>
  8071e0:	423fff84 	addi	r8,r8,-2
  8071e4:	1705883a 	add	r2,r2,fp
  8071e8:	1421c83a 	sub	r16,r2,r16
  8071ec:	a00b883a 	mov	r5,r20
  8071f0:	8009883a 	mov	r4,r16
  8071f4:	d9800315 	stw	r6,12(sp)
  8071f8:	d9c00215 	stw	r7,8(sp)
  8071fc:	da000015 	stw	r8,0(sp)
  807200:	da400115 	stw	r9,4(sp)
  807204:	0804e3c0 	call	804e3c <__udivsi3>
  807208:	8009883a 	mov	r4,r16
  80720c:	a00b883a 	mov	r5,r20
  807210:	1025883a 	mov	r18,r2
  807214:	0804ea00 	call	804ea0 <__umodsi3>
  807218:	d9c00217 	ldw	r7,8(sp)
  80721c:	1004943a 	slli	r2,r2,16
  807220:	bcaf383a 	mul	r23,r23,r18
  807224:	393fffcc 	andi	r4,r7,65535
  807228:	2088b03a 	or	r4,r4,r2
  80722c:	d9800317 	ldw	r6,12(sp)
  807230:	da000017 	ldw	r8,0(sp)
  807234:	da400117 	ldw	r9,4(sp)
  807238:	25c0062e 	bgeu	r4,r23,807254 <__divdf3+0x538>
  80723c:	2709883a 	add	r4,r4,fp
  807240:	90bfffc4 	addi	r2,r18,-1
  807244:	27009436 	bltu	r4,fp,807498 <__divdf3+0x77c>
  807248:	25c0932e 	bgeu	r4,r23,807498 <__divdf3+0x77c>
  80724c:	94bfff84 	addi	r18,r18,-2
  807250:	2709883a 	add	r4,r4,fp
  807254:	4004943a 	slli	r2,r8,16
  807258:	25efc83a 	sub	r23,r4,r23
  80725c:	1490b03a 	or	r8,r2,r18
  807260:	4008d43a 	srli	r4,r8,16
  807264:	40ffffcc 	andi	r3,r8,65535
  807268:	30c5383a 	mul	r2,r6,r3
  80726c:	1a47383a 	mul	r3,r3,r9
  807270:	310d383a 	mul	r6,r6,r4
  807274:	100ad43a 	srli	r5,r2,16
  807278:	4913383a 	mul	r9,r9,r4
  80727c:	1987883a 	add	r3,r3,r6
  807280:	28c7883a 	add	r3,r5,r3
  807284:	1980022e 	bgeu	r3,r6,807290 <__divdf3+0x574>
  807288:	01000074 	movhi	r4,1
  80728c:	4913883a 	add	r9,r9,r4
  807290:	1808d43a 	srli	r4,r3,16
  807294:	1806943a 	slli	r3,r3,16
  807298:	10bfffcc 	andi	r2,r2,65535
  80729c:	2253883a 	add	r9,r4,r9
  8072a0:	1887883a 	add	r3,r3,r2
  8072a4:	ba403836 	bltu	r23,r9,807388 <__divdf3+0x66c>
  8072a8:	ba403626 	beq	r23,r9,807384 <__divdf3+0x668>
  8072ac:	42000054 	ori	r8,r8,1
  8072b0:	a880ffc4 	addi	r2,r21,1023
  8072b4:	00bf570e 	bge	zero,r2,807014 <__alt_data_end+0xff807014>
  8072b8:	40c001cc 	andi	r3,r8,7
  8072bc:	18000726 	beq	r3,zero,8072dc <__divdf3+0x5c0>
  8072c0:	40c003cc 	andi	r3,r8,15
  8072c4:	01000104 	movi	r4,4
  8072c8:	19000426 	beq	r3,r4,8072dc <__divdf3+0x5c0>
  8072cc:	4107883a 	add	r3,r8,r4
  8072d0:	1a11803a 	cmpltu	r8,r3,r8
  8072d4:	8a23883a 	add	r17,r17,r8
  8072d8:	1811883a 	mov	r8,r3
  8072dc:	88c0402c 	andhi	r3,r17,256
  8072e0:	18000426 	beq	r3,zero,8072f4 <__divdf3+0x5d8>
  8072e4:	00ffc034 	movhi	r3,65280
  8072e8:	18ffffc4 	addi	r3,r3,-1
  8072ec:	a8810004 	addi	r2,r21,1024
  8072f0:	88e2703a 	and	r17,r17,r3
  8072f4:	00c1ff84 	movi	r3,2046
  8072f8:	18bee316 	blt	r3,r2,806e88 <__alt_data_end+0xff806e88>
  8072fc:	8824977a 	slli	r18,r17,29
  807300:	4010d0fa 	srli	r8,r8,3
  807304:	8822927a 	slli	r17,r17,9
  807308:	1081ffcc 	andi	r2,r2,2047
  80730c:	9224b03a 	or	r18,r18,r8
  807310:	880ad33a 	srli	r5,r17,12
  807314:	98c0004c 	andi	r3,r19,1
  807318:	003edf06 	br	806e98 <__alt_data_end+0xff806e98>
  80731c:	8080022c 	andhi	r2,r16,8
  807320:	10001226 	beq	r2,zero,80736c <__divdf3+0x650>
  807324:	8880022c 	andhi	r2,r17,8
  807328:	1000101e 	bne	r2,zero,80736c <__divdf3+0x650>
  80732c:	00800434 	movhi	r2,16
  807330:	89400234 	orhi	r5,r17,8
  807334:	10bfffc4 	addi	r2,r2,-1
  807338:	b007883a 	mov	r3,r22
  80733c:	288a703a 	and	r5,r5,r2
  807340:	4025883a 	mov	r18,r8
  807344:	003f3106 	br	80700c <__alt_data_end+0xff80700c>
  807348:	008000c4 	movi	r2,3
  80734c:	3880a626 	beq	r7,r2,8075e8 <__divdf3+0x8cc>
  807350:	00800044 	movi	r2,1
  807354:	3880521e 	bne	r7,r2,8074a0 <__divdf3+0x784>
  807358:	b807883a 	mov	r3,r23
  80735c:	0005883a 	mov	r2,zero
  807360:	000b883a 	mov	r5,zero
  807364:	0025883a 	mov	r18,zero
  807368:	003ecb06 	br	806e98 <__alt_data_end+0xff806e98>
  80736c:	00800434 	movhi	r2,16
  807370:	81400234 	orhi	r5,r16,8
  807374:	10bfffc4 	addi	r2,r2,-1
  807378:	a007883a 	mov	r3,r20
  80737c:	288a703a 	and	r5,r5,r2
  807380:	003f2206 	br	80700c <__alt_data_end+0xff80700c>
  807384:	183fca26 	beq	r3,zero,8072b0 <__alt_data_end+0xff8072b0>
  807388:	e5ef883a 	add	r23,fp,r23
  80738c:	40bfffc4 	addi	r2,r8,-1
  807390:	bf00392e 	bgeu	r23,fp,807478 <__divdf3+0x75c>
  807394:	1011883a 	mov	r8,r2
  807398:	ba7fc41e 	bne	r23,r9,8072ac <__alt_data_end+0xff8072ac>
  80739c:	b0ffc31e 	bne	r22,r3,8072ac <__alt_data_end+0xff8072ac>
  8073a0:	003fc306 	br	8072b0 <__alt_data_end+0xff8072b0>
  8073a4:	143ff604 	addi	r16,r2,-40
  8073a8:	9c20983a 	sll	r16,r19,r16
  8073ac:	0025883a 	mov	r18,zero
  8073b0:	003ee206 	br	806f3c <__alt_data_end+0xff806f3c>
  8073b4:	d9800315 	stw	r6,12(sp)
  8073b8:	d9c00215 	stw	r7,8(sp)
  8073bc:	0808b900 	call	808b90 <__clzsi2>
  8073c0:	10800804 	addi	r2,r2,32
  8073c4:	d9c00217 	ldw	r7,8(sp)
  8073c8:	d9800317 	ldw	r6,12(sp)
  8073cc:	003ed106 	br	806f14 <__alt_data_end+0xff806f14>
  8073d0:	147ff604 	addi	r17,r2,-40
  8073d4:	3462983a 	sll	r17,r6,r17
  8073d8:	0011883a 	mov	r8,zero
  8073dc:	003ef506 	br	806fb4 <__alt_data_end+0xff806fb4>
  8073e0:	3009883a 	mov	r4,r6
  8073e4:	d9800315 	stw	r6,12(sp)
  8073e8:	da400115 	stw	r9,4(sp)
  8073ec:	0808b900 	call	808b90 <__clzsi2>
  8073f0:	10800804 	addi	r2,r2,32
  8073f4:	da400117 	ldw	r9,4(sp)
  8073f8:	d9800317 	ldw	r6,12(sp)
  8073fc:	003ee306 	br	806f8c <__alt_data_end+0xff806f8c>
  807400:	85a1883a 	add	r16,r16,r22
  807404:	8585803a 	cmpltu	r2,r16,r22
  807408:	1705883a 	add	r2,r2,fp
  80740c:	14a5883a 	add	r18,r2,r18
  807410:	88bfffc4 	addi	r2,r17,-1
  807414:	e4800c2e 	bgeu	fp,r18,807448 <__divdf3+0x72c>
  807418:	90c03e36 	bltu	r18,r3,807514 <__divdf3+0x7f8>
  80741c:	1c806926 	beq	r3,r18,8075c4 <__divdf3+0x8a8>
  807420:	90c7c83a 	sub	r3,r18,r3
  807424:	1023883a 	mov	r17,r2
  807428:	003f5206 	br	807174 <__alt_data_end+0xff807174>
  80742c:	923f0436 	bltu	r18,r8,807040 <__alt_data_end+0xff807040>
  807430:	800897fa 	slli	r4,r16,31
  807434:	9004d07a 	srli	r2,r18,1
  807438:	8006d07a 	srli	r3,r16,1
  80743c:	902097fa 	slli	r16,r18,31
  807440:	20a4b03a 	or	r18,r4,r2
  807444:	003f0106 	br	80704c <__alt_data_end+0xff80704c>
  807448:	e4bff51e 	bne	fp,r18,807420 <__alt_data_end+0xff807420>
  80744c:	85bff22e 	bgeu	r16,r22,807418 <__alt_data_end+0xff807418>
  807450:	e0c7c83a 	sub	r3,fp,r3
  807454:	1023883a 	mov	r17,r2
  807458:	003f4606 	br	807174 <__alt_data_end+0xff807174>
  80745c:	100f883a 	mov	r7,r2
  807460:	003f2b06 	br	807110 <__alt_data_end+0xff807110>
  807464:	180d883a 	mov	r6,r3
  807468:	003f1306 	br	8070b8 <__alt_data_end+0xff8070b8>
  80746c:	813fe436 	bltu	r16,r4,807400 <__alt_data_end+0xff807400>
  807470:	0007883a 	mov	r3,zero
  807474:	003f3f06 	br	807174 <__alt_data_end+0xff807174>
  807478:	ba402c36 	bltu	r23,r9,80752c <__divdf3+0x810>
  80747c:	4dc05426 	beq	r9,r23,8075d0 <__divdf3+0x8b4>
  807480:	1011883a 	mov	r8,r2
  807484:	003f8906 	br	8072ac <__alt_data_end+0xff8072ac>
  807488:	023fffc4 	movi	r8,-1
  80748c:	003f8806 	br	8072b0 <__alt_data_end+0xff8072b0>
  807490:	1811883a 	mov	r8,r3
  807494:	003f5406 	br	8071e8 <__alt_data_end+0xff8071e8>
  807498:	1025883a 	mov	r18,r2
  80749c:	003f6d06 	br	807254 <__alt_data_end+0xff807254>
  8074a0:	b827883a 	mov	r19,r23
  8074a4:	003f8206 	br	8072b0 <__alt_data_end+0xff8072b0>
  8074a8:	010007c4 	movi	r4,31
  8074ac:	20c02616 	blt	r4,r3,807548 <__divdf3+0x82c>
  8074b0:	00800804 	movi	r2,32
  8074b4:	10c5c83a 	sub	r2,r2,r3
  8074b8:	888a983a 	sll	r5,r17,r2
  8074bc:	40c8d83a 	srl	r4,r8,r3
  8074c0:	4084983a 	sll	r2,r8,r2
  8074c4:	88e2d83a 	srl	r17,r17,r3
  8074c8:	2906b03a 	or	r3,r5,r4
  8074cc:	1004c03a 	cmpne	r2,r2,zero
  8074d0:	1886b03a 	or	r3,r3,r2
  8074d4:	188001cc 	andi	r2,r3,7
  8074d8:	10000726 	beq	r2,zero,8074f8 <__divdf3+0x7dc>
  8074dc:	188003cc 	andi	r2,r3,15
  8074e0:	01000104 	movi	r4,4
  8074e4:	11000426 	beq	r2,r4,8074f8 <__divdf3+0x7dc>
  8074e8:	1805883a 	mov	r2,r3
  8074ec:	10c00104 	addi	r3,r2,4
  8074f0:	1885803a 	cmpltu	r2,r3,r2
  8074f4:	88a3883a 	add	r17,r17,r2
  8074f8:	8880202c 	andhi	r2,r17,128
  8074fc:	10002726 	beq	r2,zero,80759c <__divdf3+0x880>
  807500:	98c0004c 	andi	r3,r19,1
  807504:	00800044 	movi	r2,1
  807508:	000b883a 	mov	r5,zero
  80750c:	0025883a 	mov	r18,zero
  807510:	003e6106 	br	806e98 <__alt_data_end+0xff806e98>
  807514:	85a1883a 	add	r16,r16,r22
  807518:	8585803a 	cmpltu	r2,r16,r22
  80751c:	1705883a 	add	r2,r2,fp
  807520:	14a5883a 	add	r18,r2,r18
  807524:	8c7fff84 	addi	r17,r17,-2
  807528:	003f1106 	br	807170 <__alt_data_end+0xff807170>
  80752c:	b589883a 	add	r4,r22,r22
  807530:	25ad803a 	cmpltu	r22,r4,r22
  807534:	b739883a 	add	fp,r22,fp
  807538:	40bfff84 	addi	r2,r8,-2
  80753c:	bf2f883a 	add	r23,r23,fp
  807540:	202d883a 	mov	r22,r4
  807544:	003f9306 	br	807394 <__alt_data_end+0xff807394>
  807548:	013ff844 	movi	r4,-31
  80754c:	2085c83a 	sub	r2,r4,r2
  807550:	8888d83a 	srl	r4,r17,r2
  807554:	00800804 	movi	r2,32
  807558:	18802126 	beq	r3,r2,8075e0 <__divdf3+0x8c4>
  80755c:	00801004 	movi	r2,64
  807560:	10c5c83a 	sub	r2,r2,r3
  807564:	8884983a 	sll	r2,r17,r2
  807568:	1204b03a 	or	r2,r2,r8
  80756c:	1004c03a 	cmpne	r2,r2,zero
  807570:	2084b03a 	or	r2,r4,r2
  807574:	144001cc 	andi	r17,r2,7
  807578:	88000d1e 	bne	r17,zero,8075b0 <__divdf3+0x894>
  80757c:	000b883a 	mov	r5,zero
  807580:	1024d0fa 	srli	r18,r2,3
  807584:	98c0004c 	andi	r3,r19,1
  807588:	0005883a 	mov	r2,zero
  80758c:	9464b03a 	or	r18,r18,r17
  807590:	003e4106 	br	806e98 <__alt_data_end+0xff806e98>
  807594:	1007883a 	mov	r3,r2
  807598:	0023883a 	mov	r17,zero
  80759c:	880a927a 	slli	r5,r17,9
  8075a0:	1805883a 	mov	r2,r3
  8075a4:	8822977a 	slli	r17,r17,29
  8075a8:	280ad33a 	srli	r5,r5,12
  8075ac:	003ff406 	br	807580 <__alt_data_end+0xff807580>
  8075b0:	10c003cc 	andi	r3,r2,15
  8075b4:	01000104 	movi	r4,4
  8075b8:	193ff626 	beq	r3,r4,807594 <__alt_data_end+0xff807594>
  8075bc:	0023883a 	mov	r17,zero
  8075c0:	003fca06 	br	8074ec <__alt_data_end+0xff8074ec>
  8075c4:	813fd336 	bltu	r16,r4,807514 <__alt_data_end+0xff807514>
  8075c8:	1023883a 	mov	r17,r2
  8075cc:	003fa806 	br	807470 <__alt_data_end+0xff807470>
  8075d0:	b0ffd636 	bltu	r22,r3,80752c <__alt_data_end+0xff80752c>
  8075d4:	1011883a 	mov	r8,r2
  8075d8:	b0ff341e 	bne	r22,r3,8072ac <__alt_data_end+0xff8072ac>
  8075dc:	003f3406 	br	8072b0 <__alt_data_end+0xff8072b0>
  8075e0:	0005883a 	mov	r2,zero
  8075e4:	003fe006 	br	807568 <__alt_data_end+0xff807568>
  8075e8:	00800434 	movhi	r2,16
  8075ec:	89400234 	orhi	r5,r17,8
  8075f0:	10bfffc4 	addi	r2,r2,-1
  8075f4:	b807883a 	mov	r3,r23
  8075f8:	288a703a 	and	r5,r5,r2
  8075fc:	4025883a 	mov	r18,r8
  807600:	003e8206 	br	80700c <__alt_data_end+0xff80700c>

00807604 <__eqdf2>:
  807604:	2804d53a 	srli	r2,r5,20
  807608:	3806d53a 	srli	r3,r7,20
  80760c:	02000434 	movhi	r8,16
  807610:	423fffc4 	addi	r8,r8,-1
  807614:	1081ffcc 	andi	r2,r2,2047
  807618:	0281ffc4 	movi	r10,2047
  80761c:	2a12703a 	and	r9,r5,r8
  807620:	18c1ffcc 	andi	r3,r3,2047
  807624:	3a10703a 	and	r8,r7,r8
  807628:	280ad7fa 	srli	r5,r5,31
  80762c:	380ed7fa 	srli	r7,r7,31
  807630:	12801026 	beq	r2,r10,807674 <__eqdf2+0x70>
  807634:	0281ffc4 	movi	r10,2047
  807638:	1a800a26 	beq	r3,r10,807664 <__eqdf2+0x60>
  80763c:	10c00226 	beq	r2,r3,807648 <__eqdf2+0x44>
  807640:	00800044 	movi	r2,1
  807644:	f800283a 	ret
  807648:	4a3ffd1e 	bne	r9,r8,807640 <__alt_data_end+0xff807640>
  80764c:	21bffc1e 	bne	r4,r6,807640 <__alt_data_end+0xff807640>
  807650:	29c00c26 	beq	r5,r7,807684 <__eqdf2+0x80>
  807654:	103ffa1e 	bne	r2,zero,807640 <__alt_data_end+0xff807640>
  807658:	2244b03a 	or	r2,r4,r9
  80765c:	1004c03a 	cmpne	r2,r2,zero
  807660:	f800283a 	ret
  807664:	3214b03a 	or	r10,r6,r8
  807668:	503ff426 	beq	r10,zero,80763c <__alt_data_end+0xff80763c>
  80766c:	00800044 	movi	r2,1
  807670:	f800283a 	ret
  807674:	2254b03a 	or	r10,r4,r9
  807678:	503fee26 	beq	r10,zero,807634 <__alt_data_end+0xff807634>
  80767c:	00800044 	movi	r2,1
  807680:	f800283a 	ret
  807684:	0005883a 	mov	r2,zero
  807688:	f800283a 	ret

0080768c <__gedf2>:
  80768c:	2804d53a 	srli	r2,r5,20
  807690:	3806d53a 	srli	r3,r7,20
  807694:	02000434 	movhi	r8,16
  807698:	423fffc4 	addi	r8,r8,-1
  80769c:	1081ffcc 	andi	r2,r2,2047
  8076a0:	0241ffc4 	movi	r9,2047
  8076a4:	2a14703a 	and	r10,r5,r8
  8076a8:	18c1ffcc 	andi	r3,r3,2047
  8076ac:	3a10703a 	and	r8,r7,r8
  8076b0:	280ad7fa 	srli	r5,r5,31
  8076b4:	380ed7fa 	srli	r7,r7,31
  8076b8:	12401d26 	beq	r2,r9,807730 <__gedf2+0xa4>
  8076bc:	0241ffc4 	movi	r9,2047
  8076c0:	1a401226 	beq	r3,r9,80770c <__gedf2+0x80>
  8076c4:	1000081e 	bne	r2,zero,8076e8 <__gedf2+0x5c>
  8076c8:	2296b03a 	or	r11,r4,r10
  8076cc:	5813003a 	cmpeq	r9,r11,zero
  8076d0:	1800091e 	bne	r3,zero,8076f8 <__gedf2+0x6c>
  8076d4:	3218b03a 	or	r12,r6,r8
  8076d8:	6000071e 	bne	r12,zero,8076f8 <__gedf2+0x6c>
  8076dc:	0005883a 	mov	r2,zero
  8076e0:	5800101e 	bne	r11,zero,807724 <__gedf2+0x98>
  8076e4:	f800283a 	ret
  8076e8:	18000c1e 	bne	r3,zero,80771c <__gedf2+0x90>
  8076ec:	3212b03a 	or	r9,r6,r8
  8076f0:	48000c26 	beq	r9,zero,807724 <__gedf2+0x98>
  8076f4:	0013883a 	mov	r9,zero
  8076f8:	39c03fcc 	andi	r7,r7,255
  8076fc:	48000826 	beq	r9,zero,807720 <__gedf2+0x94>
  807700:	38000926 	beq	r7,zero,807728 <__gedf2+0x9c>
  807704:	00800044 	movi	r2,1
  807708:	f800283a 	ret
  80770c:	3212b03a 	or	r9,r6,r8
  807710:	483fec26 	beq	r9,zero,8076c4 <__alt_data_end+0xff8076c4>
  807714:	00bfff84 	movi	r2,-2
  807718:	f800283a 	ret
  80771c:	39c03fcc 	andi	r7,r7,255
  807720:	29c00626 	beq	r5,r7,80773c <__gedf2+0xb0>
  807724:	283ff726 	beq	r5,zero,807704 <__alt_data_end+0xff807704>
  807728:	00bfffc4 	movi	r2,-1
  80772c:	f800283a 	ret
  807730:	2292b03a 	or	r9,r4,r10
  807734:	483fe126 	beq	r9,zero,8076bc <__alt_data_end+0xff8076bc>
  807738:	003ff606 	br	807714 <__alt_data_end+0xff807714>
  80773c:	18bff916 	blt	r3,r2,807724 <__alt_data_end+0xff807724>
  807740:	10c00316 	blt	r2,r3,807750 <__gedf2+0xc4>
  807744:	42bff736 	bltu	r8,r10,807724 <__alt_data_end+0xff807724>
  807748:	52000326 	beq	r10,r8,807758 <__gedf2+0xcc>
  80774c:	5200042e 	bgeu	r10,r8,807760 <__gedf2+0xd4>
  807750:	283fec1e 	bne	r5,zero,807704 <__alt_data_end+0xff807704>
  807754:	003ff406 	br	807728 <__alt_data_end+0xff807728>
  807758:	313ff236 	bltu	r6,r4,807724 <__alt_data_end+0xff807724>
  80775c:	21bffc36 	bltu	r4,r6,807750 <__alt_data_end+0xff807750>
  807760:	0005883a 	mov	r2,zero
  807764:	f800283a 	ret

00807768 <__muldf3>:
  807768:	defff304 	addi	sp,sp,-52
  80776c:	2804d53a 	srli	r2,r5,20
  807770:	dd800915 	stw	r22,36(sp)
  807774:	282cd7fa 	srli	r22,r5,31
  807778:	dc000315 	stw	r16,12(sp)
  80777c:	04000434 	movhi	r16,16
  807780:	dd400815 	stw	r21,32(sp)
  807784:	dc800515 	stw	r18,20(sp)
  807788:	843fffc4 	addi	r16,r16,-1
  80778c:	dfc00c15 	stw	ra,48(sp)
  807790:	df000b15 	stw	fp,44(sp)
  807794:	ddc00a15 	stw	r23,40(sp)
  807798:	dd000715 	stw	r20,28(sp)
  80779c:	dcc00615 	stw	r19,24(sp)
  8077a0:	dc400415 	stw	r17,16(sp)
  8077a4:	1481ffcc 	andi	r18,r2,2047
  8077a8:	2c20703a 	and	r16,r5,r16
  8077ac:	b02b883a 	mov	r21,r22
  8077b0:	b2403fcc 	andi	r9,r22,255
  8077b4:	90006026 	beq	r18,zero,807938 <__muldf3+0x1d0>
  8077b8:	0081ffc4 	movi	r2,2047
  8077bc:	2029883a 	mov	r20,r4
  8077c0:	90803626 	beq	r18,r2,80789c <__muldf3+0x134>
  8077c4:	80800434 	orhi	r2,r16,16
  8077c8:	100490fa 	slli	r2,r2,3
  8077cc:	2020d77a 	srli	r16,r4,29
  8077d0:	202890fa 	slli	r20,r4,3
  8077d4:	94bf0044 	addi	r18,r18,-1023
  8077d8:	80a0b03a 	or	r16,r16,r2
  8077dc:	0027883a 	mov	r19,zero
  8077e0:	0039883a 	mov	fp,zero
  8077e4:	3804d53a 	srli	r2,r7,20
  8077e8:	382ed7fa 	srli	r23,r7,31
  8077ec:	04400434 	movhi	r17,16
  8077f0:	8c7fffc4 	addi	r17,r17,-1
  8077f4:	1081ffcc 	andi	r2,r2,2047
  8077f8:	3011883a 	mov	r8,r6
  8077fc:	3c62703a 	and	r17,r7,r17
  807800:	ba803fcc 	andi	r10,r23,255
  807804:	10006d26 	beq	r2,zero,8079bc <__muldf3+0x254>
  807808:	00c1ffc4 	movi	r3,2047
  80780c:	10c06526 	beq	r2,r3,8079a4 <__muldf3+0x23c>
  807810:	88c00434 	orhi	r3,r17,16
  807814:	180690fa 	slli	r3,r3,3
  807818:	3022d77a 	srli	r17,r6,29
  80781c:	301090fa 	slli	r8,r6,3
  807820:	10bf0044 	addi	r2,r2,-1023
  807824:	88e2b03a 	or	r17,r17,r3
  807828:	000b883a 	mov	r5,zero
  80782c:	9085883a 	add	r2,r18,r2
  807830:	2cc8b03a 	or	r4,r5,r19
  807834:	00c003c4 	movi	r3,15
  807838:	bdacf03a 	xor	r22,r23,r22
  80783c:	12c00044 	addi	r11,r2,1
  807840:	19009936 	bltu	r3,r4,807aa8 <__muldf3+0x340>
  807844:	200890ba 	slli	r4,r4,2
  807848:	00c02034 	movhi	r3,128
  80784c:	18de1704 	addi	r3,r3,30812
  807850:	20c9883a 	add	r4,r4,r3
  807854:	20c00017 	ldw	r3,0(r4)
  807858:	1800683a 	jmp	r3
  80785c:	00807aa8 	cmpgeui	r2,zero,490
  807860:	008078bc 	xorhi	r2,zero,482
  807864:	008078bc 	xorhi	r2,zero,482
  807868:	008078b8 	rdprs	r2,zero,482
  80786c:	00807a84 	movi	r2,490
  807870:	00807a84 	movi	r2,490
  807874:	00807a6c 	andhi	r2,zero,489
  807878:	008078b8 	rdprs	r2,zero,482
  80787c:	00807a84 	movi	r2,490
  807880:	00807a6c 	andhi	r2,zero,489
  807884:	00807a84 	movi	r2,490
  807888:	008078b8 	rdprs	r2,zero,482
  80788c:	00807a94 	movui	r2,490
  807890:	00807a94 	movui	r2,490
  807894:	00807a94 	movui	r2,490
  807898:	00807cb0 	cmpltui	r2,zero,498
  80789c:	2404b03a 	or	r2,r4,r16
  8078a0:	10006f1e 	bne	r2,zero,807a60 <__muldf3+0x2f8>
  8078a4:	04c00204 	movi	r19,8
  8078a8:	0021883a 	mov	r16,zero
  8078ac:	0029883a 	mov	r20,zero
  8078b0:	07000084 	movi	fp,2
  8078b4:	003fcb06 	br	8077e4 <__alt_data_end+0xff8077e4>
  8078b8:	502d883a 	mov	r22,r10
  8078bc:	00800084 	movi	r2,2
  8078c0:	28805726 	beq	r5,r2,807a20 <__muldf3+0x2b8>
  8078c4:	008000c4 	movi	r2,3
  8078c8:	28816626 	beq	r5,r2,807e64 <__muldf3+0x6fc>
  8078cc:	00800044 	movi	r2,1
  8078d0:	2881411e 	bne	r5,r2,807dd8 <__muldf3+0x670>
  8078d4:	b02b883a 	mov	r21,r22
  8078d8:	0005883a 	mov	r2,zero
  8078dc:	000b883a 	mov	r5,zero
  8078e0:	0029883a 	mov	r20,zero
  8078e4:	1004953a 	slli	r2,r2,20
  8078e8:	a8c03fcc 	andi	r3,r21,255
  8078ec:	04400434 	movhi	r17,16
  8078f0:	8c7fffc4 	addi	r17,r17,-1
  8078f4:	180697fa 	slli	r3,r3,31
  8078f8:	2c4a703a 	and	r5,r5,r17
  8078fc:	288ab03a 	or	r5,r5,r2
  807900:	28c6b03a 	or	r3,r5,r3
  807904:	a005883a 	mov	r2,r20
  807908:	dfc00c17 	ldw	ra,48(sp)
  80790c:	df000b17 	ldw	fp,44(sp)
  807910:	ddc00a17 	ldw	r23,40(sp)
  807914:	dd800917 	ldw	r22,36(sp)
  807918:	dd400817 	ldw	r21,32(sp)
  80791c:	dd000717 	ldw	r20,28(sp)
  807920:	dcc00617 	ldw	r19,24(sp)
  807924:	dc800517 	ldw	r18,20(sp)
  807928:	dc400417 	ldw	r17,16(sp)
  80792c:	dc000317 	ldw	r16,12(sp)
  807930:	dec00d04 	addi	sp,sp,52
  807934:	f800283a 	ret
  807938:	2404b03a 	or	r2,r4,r16
  80793c:	2027883a 	mov	r19,r4
  807940:	10004226 	beq	r2,zero,807a4c <__muldf3+0x2e4>
  807944:	8000fc26 	beq	r16,zero,807d38 <__muldf3+0x5d0>
  807948:	8009883a 	mov	r4,r16
  80794c:	d9800215 	stw	r6,8(sp)
  807950:	d9c00015 	stw	r7,0(sp)
  807954:	da400115 	stw	r9,4(sp)
  807958:	0808b900 	call	808b90 <__clzsi2>
  80795c:	d9800217 	ldw	r6,8(sp)
  807960:	d9c00017 	ldw	r7,0(sp)
  807964:	da400117 	ldw	r9,4(sp)
  807968:	113ffd44 	addi	r4,r2,-11
  80796c:	00c00704 	movi	r3,28
  807970:	1900ed16 	blt	r3,r4,807d28 <__muldf3+0x5c0>
  807974:	00c00744 	movi	r3,29
  807978:	147ffe04 	addi	r17,r2,-8
  80797c:	1907c83a 	sub	r3,r3,r4
  807980:	8460983a 	sll	r16,r16,r17
  807984:	98c6d83a 	srl	r3,r19,r3
  807988:	9c68983a 	sll	r20,r19,r17
  80798c:	1c20b03a 	or	r16,r3,r16
  807990:	1080fcc4 	addi	r2,r2,1011
  807994:	00a5c83a 	sub	r18,zero,r2
  807998:	0027883a 	mov	r19,zero
  80799c:	0039883a 	mov	fp,zero
  8079a0:	003f9006 	br	8077e4 <__alt_data_end+0xff8077e4>
  8079a4:	3446b03a 	or	r3,r6,r17
  8079a8:	1800261e 	bne	r3,zero,807a44 <__muldf3+0x2dc>
  8079ac:	0023883a 	mov	r17,zero
  8079b0:	0011883a 	mov	r8,zero
  8079b4:	01400084 	movi	r5,2
  8079b8:	003f9c06 	br	80782c <__alt_data_end+0xff80782c>
  8079bc:	3446b03a 	or	r3,r6,r17
  8079c0:	18001c26 	beq	r3,zero,807a34 <__muldf3+0x2cc>
  8079c4:	8800ce26 	beq	r17,zero,807d00 <__muldf3+0x598>
  8079c8:	8809883a 	mov	r4,r17
  8079cc:	d9800215 	stw	r6,8(sp)
  8079d0:	da400115 	stw	r9,4(sp)
  8079d4:	da800015 	stw	r10,0(sp)
  8079d8:	0808b900 	call	808b90 <__clzsi2>
  8079dc:	d9800217 	ldw	r6,8(sp)
  8079e0:	da400117 	ldw	r9,4(sp)
  8079e4:	da800017 	ldw	r10,0(sp)
  8079e8:	113ffd44 	addi	r4,r2,-11
  8079ec:	00c00704 	movi	r3,28
  8079f0:	1900bf16 	blt	r3,r4,807cf0 <__muldf3+0x588>
  8079f4:	00c00744 	movi	r3,29
  8079f8:	123ffe04 	addi	r8,r2,-8
  8079fc:	1907c83a 	sub	r3,r3,r4
  807a00:	8a22983a 	sll	r17,r17,r8
  807a04:	30c6d83a 	srl	r3,r6,r3
  807a08:	3210983a 	sll	r8,r6,r8
  807a0c:	1c62b03a 	or	r17,r3,r17
  807a10:	1080fcc4 	addi	r2,r2,1011
  807a14:	0085c83a 	sub	r2,zero,r2
  807a18:	000b883a 	mov	r5,zero
  807a1c:	003f8306 	br	80782c <__alt_data_end+0xff80782c>
  807a20:	b02b883a 	mov	r21,r22
  807a24:	0081ffc4 	movi	r2,2047
  807a28:	000b883a 	mov	r5,zero
  807a2c:	0029883a 	mov	r20,zero
  807a30:	003fac06 	br	8078e4 <__alt_data_end+0xff8078e4>
  807a34:	0023883a 	mov	r17,zero
  807a38:	0011883a 	mov	r8,zero
  807a3c:	01400044 	movi	r5,1
  807a40:	003f7a06 	br	80782c <__alt_data_end+0xff80782c>
  807a44:	014000c4 	movi	r5,3
  807a48:	003f7806 	br	80782c <__alt_data_end+0xff80782c>
  807a4c:	04c00104 	movi	r19,4
  807a50:	0021883a 	mov	r16,zero
  807a54:	0029883a 	mov	r20,zero
  807a58:	07000044 	movi	fp,1
  807a5c:	003f6106 	br	8077e4 <__alt_data_end+0xff8077e4>
  807a60:	04c00304 	movi	r19,12
  807a64:	070000c4 	movi	fp,3
  807a68:	003f5e06 	br	8077e4 <__alt_data_end+0xff8077e4>
  807a6c:	01400434 	movhi	r5,16
  807a70:	002b883a 	mov	r21,zero
  807a74:	297fffc4 	addi	r5,r5,-1
  807a78:	053fffc4 	movi	r20,-1
  807a7c:	0081ffc4 	movi	r2,2047
  807a80:	003f9806 	br	8078e4 <__alt_data_end+0xff8078e4>
  807a84:	8023883a 	mov	r17,r16
  807a88:	a011883a 	mov	r8,r20
  807a8c:	e00b883a 	mov	r5,fp
  807a90:	003f8a06 	br	8078bc <__alt_data_end+0xff8078bc>
  807a94:	8023883a 	mov	r17,r16
  807a98:	a011883a 	mov	r8,r20
  807a9c:	482d883a 	mov	r22,r9
  807aa0:	e00b883a 	mov	r5,fp
  807aa4:	003f8506 	br	8078bc <__alt_data_end+0xff8078bc>
  807aa8:	a00ad43a 	srli	r5,r20,16
  807aac:	401ad43a 	srli	r13,r8,16
  807ab0:	a53fffcc 	andi	r20,r20,65535
  807ab4:	423fffcc 	andi	r8,r8,65535
  807ab8:	4519383a 	mul	r12,r8,r20
  807abc:	4147383a 	mul	r3,r8,r5
  807ac0:	6d09383a 	mul	r4,r13,r20
  807ac4:	600cd43a 	srli	r6,r12,16
  807ac8:	2b5d383a 	mul	r14,r5,r13
  807acc:	20c9883a 	add	r4,r4,r3
  807ad0:	310d883a 	add	r6,r6,r4
  807ad4:	30c0022e 	bgeu	r6,r3,807ae0 <__muldf3+0x378>
  807ad8:	00c00074 	movhi	r3,1
  807adc:	70dd883a 	add	r14,r14,r3
  807ae0:	8826d43a 	srli	r19,r17,16
  807ae4:	8bffffcc 	andi	r15,r17,65535
  807ae8:	7d23383a 	mul	r17,r15,r20
  807aec:	7949383a 	mul	r4,r15,r5
  807af0:	9d29383a 	mul	r20,r19,r20
  807af4:	8814d43a 	srli	r10,r17,16
  807af8:	3012943a 	slli	r9,r6,16
  807afc:	a129883a 	add	r20,r20,r4
  807b00:	633fffcc 	andi	r12,r12,65535
  807b04:	5515883a 	add	r10,r10,r20
  807b08:	3006d43a 	srli	r3,r6,16
  807b0c:	4b13883a 	add	r9,r9,r12
  807b10:	2ccb383a 	mul	r5,r5,r19
  807b14:	5100022e 	bgeu	r10,r4,807b20 <__muldf3+0x3b8>
  807b18:	01000074 	movhi	r4,1
  807b1c:	290b883a 	add	r5,r5,r4
  807b20:	802ad43a 	srli	r21,r16,16
  807b24:	843fffcc 	andi	r16,r16,65535
  807b28:	440d383a 	mul	r6,r8,r16
  807b2c:	4565383a 	mul	r18,r8,r21
  807b30:	8349383a 	mul	r4,r16,r13
  807b34:	500e943a 	slli	r7,r10,16
  807b38:	3010d43a 	srli	r8,r6,16
  807b3c:	5028d43a 	srli	r20,r10,16
  807b40:	2489883a 	add	r4,r4,r18
  807b44:	8abfffcc 	andi	r10,r17,65535
  807b48:	3a95883a 	add	r10,r7,r10
  807b4c:	4119883a 	add	r12,r8,r4
  807b50:	a169883a 	add	r20,r20,r5
  807b54:	1a87883a 	add	r3,r3,r10
  807b58:	6d5b383a 	mul	r13,r13,r21
  807b5c:	6480022e 	bgeu	r12,r18,807b68 <__muldf3+0x400>
  807b60:	01000074 	movhi	r4,1
  807b64:	691b883a 	add	r13,r13,r4
  807b68:	7c25383a 	mul	r18,r15,r16
  807b6c:	7d4b383a 	mul	r5,r15,r21
  807b70:	84cf383a 	mul	r7,r16,r19
  807b74:	901ed43a 	srli	r15,r18,16
  807b78:	6008d43a 	srli	r4,r12,16
  807b7c:	6010943a 	slli	r8,r12,16
  807b80:	394f883a 	add	r7,r7,r5
  807b84:	333fffcc 	andi	r12,r6,65535
  807b88:	79df883a 	add	r15,r15,r7
  807b8c:	235b883a 	add	r13,r4,r13
  807b90:	9d63383a 	mul	r17,r19,r21
  807b94:	4309883a 	add	r4,r8,r12
  807b98:	7940022e 	bgeu	r15,r5,807ba4 <__muldf3+0x43c>
  807b9c:	01400074 	movhi	r5,1
  807ba0:	8963883a 	add	r17,r17,r5
  807ba4:	780a943a 	slli	r5,r15,16
  807ba8:	91bfffcc 	andi	r6,r18,65535
  807bac:	70c7883a 	add	r3,r14,r3
  807bb0:	298d883a 	add	r6,r5,r6
  807bb4:	1a8f803a 	cmpltu	r7,r3,r10
  807bb8:	350b883a 	add	r5,r6,r20
  807bbc:	20c7883a 	add	r3,r4,r3
  807bc0:	3955883a 	add	r10,r7,r5
  807bc4:	1909803a 	cmpltu	r4,r3,r4
  807bc8:	6a91883a 	add	r8,r13,r10
  807bcc:	780cd43a 	srli	r6,r15,16
  807bd0:	2219883a 	add	r12,r4,r8
  807bd4:	2d0b803a 	cmpltu	r5,r5,r20
  807bd8:	51cf803a 	cmpltu	r7,r10,r7
  807bdc:	29ceb03a 	or	r7,r5,r7
  807be0:	4351803a 	cmpltu	r8,r8,r13
  807be4:	610b803a 	cmpltu	r5,r12,r4
  807be8:	4148b03a 	or	r4,r8,r5
  807bec:	398f883a 	add	r7,r7,r6
  807bf0:	3909883a 	add	r4,r7,r4
  807bf4:	1810927a 	slli	r8,r3,9
  807bf8:	2449883a 	add	r4,r4,r17
  807bfc:	2008927a 	slli	r4,r4,9
  807c00:	6022d5fa 	srli	r17,r12,23
  807c04:	1806d5fa 	srli	r3,r3,23
  807c08:	4252b03a 	or	r9,r8,r9
  807c0c:	600a927a 	slli	r5,r12,9
  807c10:	4810c03a 	cmpne	r8,r9,zero
  807c14:	2462b03a 	or	r17,r4,r17
  807c18:	40c6b03a 	or	r3,r8,r3
  807c1c:	8900402c 	andhi	r4,r17,256
  807c20:	1950b03a 	or	r8,r3,r5
  807c24:	20000726 	beq	r4,zero,807c44 <__muldf3+0x4dc>
  807c28:	4006d07a 	srli	r3,r8,1
  807c2c:	880497fa 	slli	r2,r17,31
  807c30:	4200004c 	andi	r8,r8,1
  807c34:	8822d07a 	srli	r17,r17,1
  807c38:	1a10b03a 	or	r8,r3,r8
  807c3c:	1210b03a 	or	r8,r2,r8
  807c40:	5805883a 	mov	r2,r11
  807c44:	1140ffc4 	addi	r5,r2,1023
  807c48:	0140440e 	bge	zero,r5,807d5c <__muldf3+0x5f4>
  807c4c:	40c001cc 	andi	r3,r8,7
  807c50:	18000726 	beq	r3,zero,807c70 <__muldf3+0x508>
  807c54:	40c003cc 	andi	r3,r8,15
  807c58:	01000104 	movi	r4,4
  807c5c:	19000426 	beq	r3,r4,807c70 <__muldf3+0x508>
  807c60:	4107883a 	add	r3,r8,r4
  807c64:	1a11803a 	cmpltu	r8,r3,r8
  807c68:	8a23883a 	add	r17,r17,r8
  807c6c:	1811883a 	mov	r8,r3
  807c70:	88c0402c 	andhi	r3,r17,256
  807c74:	18000426 	beq	r3,zero,807c88 <__muldf3+0x520>
  807c78:	11410004 	addi	r5,r2,1024
  807c7c:	00bfc034 	movhi	r2,65280
  807c80:	10bfffc4 	addi	r2,r2,-1
  807c84:	88a2703a 	and	r17,r17,r2
  807c88:	0081ff84 	movi	r2,2046
  807c8c:	117f6416 	blt	r2,r5,807a20 <__alt_data_end+0xff807a20>
  807c90:	8828977a 	slli	r20,r17,29
  807c94:	4010d0fa 	srli	r8,r8,3
  807c98:	8822927a 	slli	r17,r17,9
  807c9c:	2881ffcc 	andi	r2,r5,2047
  807ca0:	a228b03a 	or	r20,r20,r8
  807ca4:	880ad33a 	srli	r5,r17,12
  807ca8:	b02b883a 	mov	r21,r22
  807cac:	003f0d06 	br	8078e4 <__alt_data_end+0xff8078e4>
  807cb0:	8080022c 	andhi	r2,r16,8
  807cb4:	10000926 	beq	r2,zero,807cdc <__muldf3+0x574>
  807cb8:	8880022c 	andhi	r2,r17,8
  807cbc:	1000071e 	bne	r2,zero,807cdc <__muldf3+0x574>
  807cc0:	00800434 	movhi	r2,16
  807cc4:	89400234 	orhi	r5,r17,8
  807cc8:	10bfffc4 	addi	r2,r2,-1
  807ccc:	b82b883a 	mov	r21,r23
  807cd0:	288a703a 	and	r5,r5,r2
  807cd4:	4029883a 	mov	r20,r8
  807cd8:	003f6806 	br	807a7c <__alt_data_end+0xff807a7c>
  807cdc:	00800434 	movhi	r2,16
  807ce0:	81400234 	orhi	r5,r16,8
  807ce4:	10bfffc4 	addi	r2,r2,-1
  807ce8:	288a703a 	and	r5,r5,r2
  807cec:	003f6306 	br	807a7c <__alt_data_end+0xff807a7c>
  807cf0:	147ff604 	addi	r17,r2,-40
  807cf4:	3462983a 	sll	r17,r6,r17
  807cf8:	0011883a 	mov	r8,zero
  807cfc:	003f4406 	br	807a10 <__alt_data_end+0xff807a10>
  807d00:	3009883a 	mov	r4,r6
  807d04:	d9800215 	stw	r6,8(sp)
  807d08:	da400115 	stw	r9,4(sp)
  807d0c:	da800015 	stw	r10,0(sp)
  807d10:	0808b900 	call	808b90 <__clzsi2>
  807d14:	10800804 	addi	r2,r2,32
  807d18:	da800017 	ldw	r10,0(sp)
  807d1c:	da400117 	ldw	r9,4(sp)
  807d20:	d9800217 	ldw	r6,8(sp)
  807d24:	003f3006 	br	8079e8 <__alt_data_end+0xff8079e8>
  807d28:	143ff604 	addi	r16,r2,-40
  807d2c:	9c20983a 	sll	r16,r19,r16
  807d30:	0029883a 	mov	r20,zero
  807d34:	003f1606 	br	807990 <__alt_data_end+0xff807990>
  807d38:	d9800215 	stw	r6,8(sp)
  807d3c:	d9c00015 	stw	r7,0(sp)
  807d40:	da400115 	stw	r9,4(sp)
  807d44:	0808b900 	call	808b90 <__clzsi2>
  807d48:	10800804 	addi	r2,r2,32
  807d4c:	da400117 	ldw	r9,4(sp)
  807d50:	d9c00017 	ldw	r7,0(sp)
  807d54:	d9800217 	ldw	r6,8(sp)
  807d58:	003f0306 	br	807968 <__alt_data_end+0xff807968>
  807d5c:	00c00044 	movi	r3,1
  807d60:	1947c83a 	sub	r3,r3,r5
  807d64:	00800e04 	movi	r2,56
  807d68:	10feda16 	blt	r2,r3,8078d4 <__alt_data_end+0xff8078d4>
  807d6c:	008007c4 	movi	r2,31
  807d70:	10c01b16 	blt	r2,r3,807de0 <__muldf3+0x678>
  807d74:	00800804 	movi	r2,32
  807d78:	10c5c83a 	sub	r2,r2,r3
  807d7c:	888a983a 	sll	r5,r17,r2
  807d80:	40c8d83a 	srl	r4,r8,r3
  807d84:	4084983a 	sll	r2,r8,r2
  807d88:	88e2d83a 	srl	r17,r17,r3
  807d8c:	2906b03a 	or	r3,r5,r4
  807d90:	1004c03a 	cmpne	r2,r2,zero
  807d94:	1886b03a 	or	r3,r3,r2
  807d98:	188001cc 	andi	r2,r3,7
  807d9c:	10000726 	beq	r2,zero,807dbc <__muldf3+0x654>
  807da0:	188003cc 	andi	r2,r3,15
  807da4:	01000104 	movi	r4,4
  807da8:	11000426 	beq	r2,r4,807dbc <__muldf3+0x654>
  807dac:	1805883a 	mov	r2,r3
  807db0:	10c00104 	addi	r3,r2,4
  807db4:	1885803a 	cmpltu	r2,r3,r2
  807db8:	88a3883a 	add	r17,r17,r2
  807dbc:	8880202c 	andhi	r2,r17,128
  807dc0:	10001c26 	beq	r2,zero,807e34 <__muldf3+0x6cc>
  807dc4:	b02b883a 	mov	r21,r22
  807dc8:	00800044 	movi	r2,1
  807dcc:	000b883a 	mov	r5,zero
  807dd0:	0029883a 	mov	r20,zero
  807dd4:	003ec306 	br	8078e4 <__alt_data_end+0xff8078e4>
  807dd8:	5805883a 	mov	r2,r11
  807ddc:	003f9906 	br	807c44 <__alt_data_end+0xff807c44>
  807de0:	00bff844 	movi	r2,-31
  807de4:	1145c83a 	sub	r2,r2,r5
  807de8:	8888d83a 	srl	r4,r17,r2
  807dec:	00800804 	movi	r2,32
  807df0:	18801a26 	beq	r3,r2,807e5c <__muldf3+0x6f4>
  807df4:	00801004 	movi	r2,64
  807df8:	10c5c83a 	sub	r2,r2,r3
  807dfc:	8884983a 	sll	r2,r17,r2
  807e00:	1204b03a 	or	r2,r2,r8
  807e04:	1004c03a 	cmpne	r2,r2,zero
  807e08:	2084b03a 	or	r2,r4,r2
  807e0c:	144001cc 	andi	r17,r2,7
  807e10:	88000d1e 	bne	r17,zero,807e48 <__muldf3+0x6e0>
  807e14:	000b883a 	mov	r5,zero
  807e18:	1028d0fa 	srli	r20,r2,3
  807e1c:	b02b883a 	mov	r21,r22
  807e20:	0005883a 	mov	r2,zero
  807e24:	a468b03a 	or	r20,r20,r17
  807e28:	003eae06 	br	8078e4 <__alt_data_end+0xff8078e4>
  807e2c:	1007883a 	mov	r3,r2
  807e30:	0023883a 	mov	r17,zero
  807e34:	880a927a 	slli	r5,r17,9
  807e38:	1805883a 	mov	r2,r3
  807e3c:	8822977a 	slli	r17,r17,29
  807e40:	280ad33a 	srli	r5,r5,12
  807e44:	003ff406 	br	807e18 <__alt_data_end+0xff807e18>
  807e48:	10c003cc 	andi	r3,r2,15
  807e4c:	01000104 	movi	r4,4
  807e50:	193ff626 	beq	r3,r4,807e2c <__alt_data_end+0xff807e2c>
  807e54:	0023883a 	mov	r17,zero
  807e58:	003fd506 	br	807db0 <__alt_data_end+0xff807db0>
  807e5c:	0005883a 	mov	r2,zero
  807e60:	003fe706 	br	807e00 <__alt_data_end+0xff807e00>
  807e64:	00800434 	movhi	r2,16
  807e68:	89400234 	orhi	r5,r17,8
  807e6c:	10bfffc4 	addi	r2,r2,-1
  807e70:	b02b883a 	mov	r21,r22
  807e74:	288a703a 	and	r5,r5,r2
  807e78:	4029883a 	mov	r20,r8
  807e7c:	003eff06 	br	807a7c <__alt_data_end+0xff807a7c>

00807e80 <__subdf3>:
  807e80:	02000434 	movhi	r8,16
  807e84:	423fffc4 	addi	r8,r8,-1
  807e88:	defffb04 	addi	sp,sp,-20
  807e8c:	2a14703a 	and	r10,r5,r8
  807e90:	3812d53a 	srli	r9,r7,20
  807e94:	3a10703a 	and	r8,r7,r8
  807e98:	2006d77a 	srli	r3,r4,29
  807e9c:	3004d77a 	srli	r2,r6,29
  807ea0:	dc000015 	stw	r16,0(sp)
  807ea4:	501490fa 	slli	r10,r10,3
  807ea8:	2820d53a 	srli	r16,r5,20
  807eac:	401090fa 	slli	r8,r8,3
  807eb0:	dc800215 	stw	r18,8(sp)
  807eb4:	dc400115 	stw	r17,4(sp)
  807eb8:	dfc00415 	stw	ra,16(sp)
  807ebc:	202290fa 	slli	r17,r4,3
  807ec0:	dcc00315 	stw	r19,12(sp)
  807ec4:	4a41ffcc 	andi	r9,r9,2047
  807ec8:	0101ffc4 	movi	r4,2047
  807ecc:	2824d7fa 	srli	r18,r5,31
  807ed0:	8401ffcc 	andi	r16,r16,2047
  807ed4:	50c6b03a 	or	r3,r10,r3
  807ed8:	380ed7fa 	srli	r7,r7,31
  807edc:	408ab03a 	or	r5,r8,r2
  807ee0:	300c90fa 	slli	r6,r6,3
  807ee4:	49009626 	beq	r9,r4,808140 <__subdf3+0x2c0>
  807ee8:	39c0005c 	xori	r7,r7,1
  807eec:	8245c83a 	sub	r2,r16,r9
  807ef0:	3c807426 	beq	r7,r18,8080c4 <__subdf3+0x244>
  807ef4:	0080af0e 	bge	zero,r2,8081b4 <__subdf3+0x334>
  807ef8:	48002a1e 	bne	r9,zero,807fa4 <__subdf3+0x124>
  807efc:	2988b03a 	or	r4,r5,r6
  807f00:	20009a1e 	bne	r4,zero,80816c <__subdf3+0x2ec>
  807f04:	888001cc 	andi	r2,r17,7
  807f08:	10000726 	beq	r2,zero,807f28 <__subdf3+0xa8>
  807f0c:	888003cc 	andi	r2,r17,15
  807f10:	01000104 	movi	r4,4
  807f14:	11000426 	beq	r2,r4,807f28 <__subdf3+0xa8>
  807f18:	890b883a 	add	r5,r17,r4
  807f1c:	2c63803a 	cmpltu	r17,r5,r17
  807f20:	1c47883a 	add	r3,r3,r17
  807f24:	2823883a 	mov	r17,r5
  807f28:	1880202c 	andhi	r2,r3,128
  807f2c:	10005926 	beq	r2,zero,808094 <__subdf3+0x214>
  807f30:	84000044 	addi	r16,r16,1
  807f34:	0081ffc4 	movi	r2,2047
  807f38:	8080be26 	beq	r16,r2,808234 <__subdf3+0x3b4>
  807f3c:	017fe034 	movhi	r5,65408
  807f40:	297fffc4 	addi	r5,r5,-1
  807f44:	1946703a 	and	r3,r3,r5
  807f48:	1804977a 	slli	r2,r3,29
  807f4c:	1806927a 	slli	r3,r3,9
  807f50:	8822d0fa 	srli	r17,r17,3
  807f54:	8401ffcc 	andi	r16,r16,2047
  807f58:	180ad33a 	srli	r5,r3,12
  807f5c:	9100004c 	andi	r4,r18,1
  807f60:	1444b03a 	or	r2,r2,r17
  807f64:	80c1ffcc 	andi	r3,r16,2047
  807f68:	1820953a 	slli	r16,r3,20
  807f6c:	20c03fcc 	andi	r3,r4,255
  807f70:	180897fa 	slli	r4,r3,31
  807f74:	00c00434 	movhi	r3,16
  807f78:	18ffffc4 	addi	r3,r3,-1
  807f7c:	28c6703a 	and	r3,r5,r3
  807f80:	1c06b03a 	or	r3,r3,r16
  807f84:	1906b03a 	or	r3,r3,r4
  807f88:	dfc00417 	ldw	ra,16(sp)
  807f8c:	dcc00317 	ldw	r19,12(sp)
  807f90:	dc800217 	ldw	r18,8(sp)
  807f94:	dc400117 	ldw	r17,4(sp)
  807f98:	dc000017 	ldw	r16,0(sp)
  807f9c:	dec00504 	addi	sp,sp,20
  807fa0:	f800283a 	ret
  807fa4:	0101ffc4 	movi	r4,2047
  807fa8:	813fd626 	beq	r16,r4,807f04 <__alt_data_end+0xff807f04>
  807fac:	29402034 	orhi	r5,r5,128
  807fb0:	01000e04 	movi	r4,56
  807fb4:	2080a316 	blt	r4,r2,808244 <__subdf3+0x3c4>
  807fb8:	010007c4 	movi	r4,31
  807fbc:	2080c616 	blt	r4,r2,8082d8 <__subdf3+0x458>
  807fc0:	01000804 	movi	r4,32
  807fc4:	2089c83a 	sub	r4,r4,r2
  807fc8:	2910983a 	sll	r8,r5,r4
  807fcc:	308ed83a 	srl	r7,r6,r2
  807fd0:	3108983a 	sll	r4,r6,r4
  807fd4:	2884d83a 	srl	r2,r5,r2
  807fd8:	41ccb03a 	or	r6,r8,r7
  807fdc:	2008c03a 	cmpne	r4,r4,zero
  807fe0:	310cb03a 	or	r6,r6,r4
  807fe4:	898dc83a 	sub	r6,r17,r6
  807fe8:	89a3803a 	cmpltu	r17,r17,r6
  807fec:	1887c83a 	sub	r3,r3,r2
  807ff0:	1c47c83a 	sub	r3,r3,r17
  807ff4:	3023883a 	mov	r17,r6
  807ff8:	1880202c 	andhi	r2,r3,128
  807ffc:	10002326 	beq	r2,zero,80808c <__subdf3+0x20c>
  808000:	04c02034 	movhi	r19,128
  808004:	9cffffc4 	addi	r19,r19,-1
  808008:	1ce6703a 	and	r19,r3,r19
  80800c:	98007a26 	beq	r19,zero,8081f8 <__subdf3+0x378>
  808010:	9809883a 	mov	r4,r19
  808014:	0808b900 	call	808b90 <__clzsi2>
  808018:	113ffe04 	addi	r4,r2,-8
  80801c:	00c007c4 	movi	r3,31
  808020:	19007b16 	blt	r3,r4,808210 <__subdf3+0x390>
  808024:	00800804 	movi	r2,32
  808028:	1105c83a 	sub	r2,r2,r4
  80802c:	8884d83a 	srl	r2,r17,r2
  808030:	9906983a 	sll	r3,r19,r4
  808034:	8922983a 	sll	r17,r17,r4
  808038:	10c4b03a 	or	r2,r2,r3
  80803c:	24007816 	blt	r4,r16,808220 <__subdf3+0x3a0>
  808040:	2421c83a 	sub	r16,r4,r16
  808044:	80c00044 	addi	r3,r16,1
  808048:	010007c4 	movi	r4,31
  80804c:	20c09516 	blt	r4,r3,8082a4 <__subdf3+0x424>
  808050:	01400804 	movi	r5,32
  808054:	28cbc83a 	sub	r5,r5,r3
  808058:	88c8d83a 	srl	r4,r17,r3
  80805c:	8962983a 	sll	r17,r17,r5
  808060:	114a983a 	sll	r5,r2,r5
  808064:	10c6d83a 	srl	r3,r2,r3
  808068:	8804c03a 	cmpne	r2,r17,zero
  80806c:	290ab03a 	or	r5,r5,r4
  808070:	28a2b03a 	or	r17,r5,r2
  808074:	0021883a 	mov	r16,zero
  808078:	003fa206 	br	807f04 <__alt_data_end+0xff807f04>
  80807c:	2090b03a 	or	r8,r4,r2
  808080:	40018e26 	beq	r8,zero,8086bc <__subdf3+0x83c>
  808084:	1007883a 	mov	r3,r2
  808088:	2023883a 	mov	r17,r4
  80808c:	888001cc 	andi	r2,r17,7
  808090:	103f9e1e 	bne	r2,zero,807f0c <__alt_data_end+0xff807f0c>
  808094:	1804977a 	slli	r2,r3,29
  808098:	8822d0fa 	srli	r17,r17,3
  80809c:	1810d0fa 	srli	r8,r3,3
  8080a0:	9100004c 	andi	r4,r18,1
  8080a4:	1444b03a 	or	r2,r2,r17
  8080a8:	00c1ffc4 	movi	r3,2047
  8080ac:	80c02826 	beq	r16,r3,808150 <__subdf3+0x2d0>
  8080b0:	01400434 	movhi	r5,16
  8080b4:	297fffc4 	addi	r5,r5,-1
  8080b8:	80e0703a 	and	r16,r16,r3
  8080bc:	414a703a 	and	r5,r8,r5
  8080c0:	003fa806 	br	807f64 <__alt_data_end+0xff807f64>
  8080c4:	0080630e 	bge	zero,r2,808254 <__subdf3+0x3d4>
  8080c8:	48003026 	beq	r9,zero,80818c <__subdf3+0x30c>
  8080cc:	0101ffc4 	movi	r4,2047
  8080d0:	813f8c26 	beq	r16,r4,807f04 <__alt_data_end+0xff807f04>
  8080d4:	29402034 	orhi	r5,r5,128
  8080d8:	01000e04 	movi	r4,56
  8080dc:	2080a90e 	bge	r4,r2,808384 <__subdf3+0x504>
  8080e0:	298cb03a 	or	r6,r5,r6
  8080e4:	3012c03a 	cmpne	r9,r6,zero
  8080e8:	0005883a 	mov	r2,zero
  8080ec:	4c53883a 	add	r9,r9,r17
  8080f0:	4c63803a 	cmpltu	r17,r9,r17
  8080f4:	10c7883a 	add	r3,r2,r3
  8080f8:	88c7883a 	add	r3,r17,r3
  8080fc:	4823883a 	mov	r17,r9
  808100:	1880202c 	andhi	r2,r3,128
  808104:	1000d026 	beq	r2,zero,808448 <__subdf3+0x5c8>
  808108:	84000044 	addi	r16,r16,1
  80810c:	0081ffc4 	movi	r2,2047
  808110:	8080fe26 	beq	r16,r2,80850c <__subdf3+0x68c>
  808114:	00bfe034 	movhi	r2,65408
  808118:	10bfffc4 	addi	r2,r2,-1
  80811c:	1886703a 	and	r3,r3,r2
  808120:	880ad07a 	srli	r5,r17,1
  808124:	180497fa 	slli	r2,r3,31
  808128:	8900004c 	andi	r4,r17,1
  80812c:	2922b03a 	or	r17,r5,r4
  808130:	1806d07a 	srli	r3,r3,1
  808134:	1462b03a 	or	r17,r2,r17
  808138:	3825883a 	mov	r18,r7
  80813c:	003f7106 	br	807f04 <__alt_data_end+0xff807f04>
  808140:	2984b03a 	or	r2,r5,r6
  808144:	103f6826 	beq	r2,zero,807ee8 <__alt_data_end+0xff807ee8>
  808148:	39c03fcc 	andi	r7,r7,255
  80814c:	003f6706 	br	807eec <__alt_data_end+0xff807eec>
  808150:	4086b03a 	or	r3,r8,r2
  808154:	18015226 	beq	r3,zero,8086a0 <__subdf3+0x820>
  808158:	00c00434 	movhi	r3,16
  80815c:	41400234 	orhi	r5,r8,8
  808160:	18ffffc4 	addi	r3,r3,-1
  808164:	28ca703a 	and	r5,r5,r3
  808168:	003f7e06 	br	807f64 <__alt_data_end+0xff807f64>
  80816c:	10bfffc4 	addi	r2,r2,-1
  808170:	1000491e 	bne	r2,zero,808298 <__subdf3+0x418>
  808174:	898fc83a 	sub	r7,r17,r6
  808178:	89e3803a 	cmpltu	r17,r17,r7
  80817c:	1947c83a 	sub	r3,r3,r5
  808180:	1c47c83a 	sub	r3,r3,r17
  808184:	3823883a 	mov	r17,r7
  808188:	003f9b06 	br	807ff8 <__alt_data_end+0xff807ff8>
  80818c:	2988b03a 	or	r4,r5,r6
  808190:	203f5c26 	beq	r4,zero,807f04 <__alt_data_end+0xff807f04>
  808194:	10bfffc4 	addi	r2,r2,-1
  808198:	1000931e 	bne	r2,zero,8083e8 <__subdf3+0x568>
  80819c:	898d883a 	add	r6,r17,r6
  8081a0:	3463803a 	cmpltu	r17,r6,r17
  8081a4:	1947883a 	add	r3,r3,r5
  8081a8:	88c7883a 	add	r3,r17,r3
  8081ac:	3023883a 	mov	r17,r6
  8081b0:	003fd306 	br	808100 <__alt_data_end+0xff808100>
  8081b4:	1000541e 	bne	r2,zero,808308 <__subdf3+0x488>
  8081b8:	80800044 	addi	r2,r16,1
  8081bc:	1081ffcc 	andi	r2,r2,2047
  8081c0:	01000044 	movi	r4,1
  8081c4:	2080a20e 	bge	r4,r2,808450 <__subdf3+0x5d0>
  8081c8:	8989c83a 	sub	r4,r17,r6
  8081cc:	8905803a 	cmpltu	r2,r17,r4
  8081d0:	1967c83a 	sub	r19,r3,r5
  8081d4:	98a7c83a 	sub	r19,r19,r2
  8081d8:	9880202c 	andhi	r2,r19,128
  8081dc:	10006326 	beq	r2,zero,80836c <__subdf3+0x4ec>
  8081e0:	3463c83a 	sub	r17,r6,r17
  8081e4:	28c7c83a 	sub	r3,r5,r3
  8081e8:	344d803a 	cmpltu	r6,r6,r17
  8081ec:	19a7c83a 	sub	r19,r3,r6
  8081f0:	3825883a 	mov	r18,r7
  8081f4:	983f861e 	bne	r19,zero,808010 <__alt_data_end+0xff808010>
  8081f8:	8809883a 	mov	r4,r17
  8081fc:	0808b900 	call	808b90 <__clzsi2>
  808200:	10800804 	addi	r2,r2,32
  808204:	113ffe04 	addi	r4,r2,-8
  808208:	00c007c4 	movi	r3,31
  80820c:	193f850e 	bge	r3,r4,808024 <__alt_data_end+0xff808024>
  808210:	10bff604 	addi	r2,r2,-40
  808214:	8884983a 	sll	r2,r17,r2
  808218:	0023883a 	mov	r17,zero
  80821c:	243f880e 	bge	r4,r16,808040 <__alt_data_end+0xff808040>
  808220:	00ffe034 	movhi	r3,65408
  808224:	18ffffc4 	addi	r3,r3,-1
  808228:	8121c83a 	sub	r16,r16,r4
  80822c:	10c6703a 	and	r3,r2,r3
  808230:	003f3406 	br	807f04 <__alt_data_end+0xff807f04>
  808234:	9100004c 	andi	r4,r18,1
  808238:	000b883a 	mov	r5,zero
  80823c:	0005883a 	mov	r2,zero
  808240:	003f4806 	br	807f64 <__alt_data_end+0xff807f64>
  808244:	298cb03a 	or	r6,r5,r6
  808248:	300cc03a 	cmpne	r6,r6,zero
  80824c:	0005883a 	mov	r2,zero
  808250:	003f6406 	br	807fe4 <__alt_data_end+0xff807fe4>
  808254:	10009a1e 	bne	r2,zero,8084c0 <__subdf3+0x640>
  808258:	82400044 	addi	r9,r16,1
  80825c:	4881ffcc 	andi	r2,r9,2047
  808260:	02800044 	movi	r10,1
  808264:	5080670e 	bge	r10,r2,808404 <__subdf3+0x584>
  808268:	0081ffc4 	movi	r2,2047
  80826c:	4880af26 	beq	r9,r2,80852c <__subdf3+0x6ac>
  808270:	898d883a 	add	r6,r17,r6
  808274:	1945883a 	add	r2,r3,r5
  808278:	3447803a 	cmpltu	r3,r6,r17
  80827c:	1887883a 	add	r3,r3,r2
  808280:	182297fa 	slli	r17,r3,31
  808284:	300cd07a 	srli	r6,r6,1
  808288:	1806d07a 	srli	r3,r3,1
  80828c:	4821883a 	mov	r16,r9
  808290:	89a2b03a 	or	r17,r17,r6
  808294:	003f1b06 	br	807f04 <__alt_data_end+0xff807f04>
  808298:	0101ffc4 	movi	r4,2047
  80829c:	813f441e 	bne	r16,r4,807fb0 <__alt_data_end+0xff807fb0>
  8082a0:	003f1806 	br	807f04 <__alt_data_end+0xff807f04>
  8082a4:	843ff844 	addi	r16,r16,-31
  8082a8:	01400804 	movi	r5,32
  8082ac:	1408d83a 	srl	r4,r2,r16
  8082b0:	19405026 	beq	r3,r5,8083f4 <__subdf3+0x574>
  8082b4:	01401004 	movi	r5,64
  8082b8:	28c7c83a 	sub	r3,r5,r3
  8082bc:	10c4983a 	sll	r2,r2,r3
  8082c0:	88a2b03a 	or	r17,r17,r2
  8082c4:	8822c03a 	cmpne	r17,r17,zero
  8082c8:	2462b03a 	or	r17,r4,r17
  8082cc:	0007883a 	mov	r3,zero
  8082d0:	0021883a 	mov	r16,zero
  8082d4:	003f6d06 	br	80808c <__alt_data_end+0xff80808c>
  8082d8:	11fff804 	addi	r7,r2,-32
  8082dc:	01000804 	movi	r4,32
  8082e0:	29ced83a 	srl	r7,r5,r7
  8082e4:	11004526 	beq	r2,r4,8083fc <__subdf3+0x57c>
  8082e8:	01001004 	movi	r4,64
  8082ec:	2089c83a 	sub	r4,r4,r2
  8082f0:	2904983a 	sll	r2,r5,r4
  8082f4:	118cb03a 	or	r6,r2,r6
  8082f8:	300cc03a 	cmpne	r6,r6,zero
  8082fc:	398cb03a 	or	r6,r7,r6
  808300:	0005883a 	mov	r2,zero
  808304:	003f3706 	br	807fe4 <__alt_data_end+0xff807fe4>
  808308:	80002a26 	beq	r16,zero,8083b4 <__subdf3+0x534>
  80830c:	0101ffc4 	movi	r4,2047
  808310:	49006626 	beq	r9,r4,8084ac <__subdf3+0x62c>
  808314:	0085c83a 	sub	r2,zero,r2
  808318:	18c02034 	orhi	r3,r3,128
  80831c:	01000e04 	movi	r4,56
  808320:	20807e16 	blt	r4,r2,80851c <__subdf3+0x69c>
  808324:	010007c4 	movi	r4,31
  808328:	2080e716 	blt	r4,r2,8086c8 <__subdf3+0x848>
  80832c:	01000804 	movi	r4,32
  808330:	2089c83a 	sub	r4,r4,r2
  808334:	1914983a 	sll	r10,r3,r4
  808338:	8890d83a 	srl	r8,r17,r2
  80833c:	8908983a 	sll	r4,r17,r4
  808340:	1884d83a 	srl	r2,r3,r2
  808344:	5222b03a 	or	r17,r10,r8
  808348:	2006c03a 	cmpne	r3,r4,zero
  80834c:	88e2b03a 	or	r17,r17,r3
  808350:	3463c83a 	sub	r17,r6,r17
  808354:	2885c83a 	sub	r2,r5,r2
  808358:	344d803a 	cmpltu	r6,r6,r17
  80835c:	1187c83a 	sub	r3,r2,r6
  808360:	4821883a 	mov	r16,r9
  808364:	3825883a 	mov	r18,r7
  808368:	003f2306 	br	807ff8 <__alt_data_end+0xff807ff8>
  80836c:	24d0b03a 	or	r8,r4,r19
  808370:	40001b1e 	bne	r8,zero,8083e0 <__subdf3+0x560>
  808374:	0005883a 	mov	r2,zero
  808378:	0009883a 	mov	r4,zero
  80837c:	0021883a 	mov	r16,zero
  808380:	003f4906 	br	8080a8 <__alt_data_end+0xff8080a8>
  808384:	010007c4 	movi	r4,31
  808388:	20803a16 	blt	r4,r2,808474 <__subdf3+0x5f4>
  80838c:	01000804 	movi	r4,32
  808390:	2089c83a 	sub	r4,r4,r2
  808394:	2912983a 	sll	r9,r5,r4
  808398:	3090d83a 	srl	r8,r6,r2
  80839c:	3108983a 	sll	r4,r6,r4
  8083a0:	2884d83a 	srl	r2,r5,r2
  8083a4:	4a12b03a 	or	r9,r9,r8
  8083a8:	2008c03a 	cmpne	r4,r4,zero
  8083ac:	4912b03a 	or	r9,r9,r4
  8083b0:	003f4e06 	br	8080ec <__alt_data_end+0xff8080ec>
  8083b4:	1c48b03a 	or	r4,r3,r17
  8083b8:	20003c26 	beq	r4,zero,8084ac <__subdf3+0x62c>
  8083bc:	0084303a 	nor	r2,zero,r2
  8083c0:	1000381e 	bne	r2,zero,8084a4 <__subdf3+0x624>
  8083c4:	3463c83a 	sub	r17,r6,r17
  8083c8:	28c5c83a 	sub	r2,r5,r3
  8083cc:	344d803a 	cmpltu	r6,r6,r17
  8083d0:	1187c83a 	sub	r3,r2,r6
  8083d4:	4821883a 	mov	r16,r9
  8083d8:	3825883a 	mov	r18,r7
  8083dc:	003f0606 	br	807ff8 <__alt_data_end+0xff807ff8>
  8083e0:	2023883a 	mov	r17,r4
  8083e4:	003f0906 	br	80800c <__alt_data_end+0xff80800c>
  8083e8:	0101ffc4 	movi	r4,2047
  8083ec:	813f3a1e 	bne	r16,r4,8080d8 <__alt_data_end+0xff8080d8>
  8083f0:	003ec406 	br	807f04 <__alt_data_end+0xff807f04>
  8083f4:	0005883a 	mov	r2,zero
  8083f8:	003fb106 	br	8082c0 <__alt_data_end+0xff8082c0>
  8083fc:	0005883a 	mov	r2,zero
  808400:	003fbc06 	br	8082f4 <__alt_data_end+0xff8082f4>
  808404:	1c44b03a 	or	r2,r3,r17
  808408:	80008e1e 	bne	r16,zero,808644 <__subdf3+0x7c4>
  80840c:	1000c826 	beq	r2,zero,808730 <__subdf3+0x8b0>
  808410:	2984b03a 	or	r2,r5,r6
  808414:	103ebb26 	beq	r2,zero,807f04 <__alt_data_end+0xff807f04>
  808418:	8989883a 	add	r4,r17,r6
  80841c:	1945883a 	add	r2,r3,r5
  808420:	2447803a 	cmpltu	r3,r4,r17
  808424:	1887883a 	add	r3,r3,r2
  808428:	1880202c 	andhi	r2,r3,128
  80842c:	2023883a 	mov	r17,r4
  808430:	103f1626 	beq	r2,zero,80808c <__alt_data_end+0xff80808c>
  808434:	00bfe034 	movhi	r2,65408
  808438:	10bfffc4 	addi	r2,r2,-1
  80843c:	5021883a 	mov	r16,r10
  808440:	1886703a 	and	r3,r3,r2
  808444:	003eaf06 	br	807f04 <__alt_data_end+0xff807f04>
  808448:	3825883a 	mov	r18,r7
  80844c:	003f0f06 	br	80808c <__alt_data_end+0xff80808c>
  808450:	1c44b03a 	or	r2,r3,r17
  808454:	8000251e 	bne	r16,zero,8084ec <__subdf3+0x66c>
  808458:	1000661e 	bne	r2,zero,8085f4 <__subdf3+0x774>
  80845c:	2990b03a 	or	r8,r5,r6
  808460:	40009626 	beq	r8,zero,8086bc <__subdf3+0x83c>
  808464:	2807883a 	mov	r3,r5
  808468:	3023883a 	mov	r17,r6
  80846c:	3825883a 	mov	r18,r7
  808470:	003ea406 	br	807f04 <__alt_data_end+0xff807f04>
  808474:	127ff804 	addi	r9,r2,-32
  808478:	01000804 	movi	r4,32
  80847c:	2a52d83a 	srl	r9,r5,r9
  808480:	11008c26 	beq	r2,r4,8086b4 <__subdf3+0x834>
  808484:	01001004 	movi	r4,64
  808488:	2085c83a 	sub	r2,r4,r2
  80848c:	2884983a 	sll	r2,r5,r2
  808490:	118cb03a 	or	r6,r2,r6
  808494:	300cc03a 	cmpne	r6,r6,zero
  808498:	4992b03a 	or	r9,r9,r6
  80849c:	0005883a 	mov	r2,zero
  8084a0:	003f1206 	br	8080ec <__alt_data_end+0xff8080ec>
  8084a4:	0101ffc4 	movi	r4,2047
  8084a8:	493f9c1e 	bne	r9,r4,80831c <__alt_data_end+0xff80831c>
  8084ac:	2807883a 	mov	r3,r5
  8084b0:	3023883a 	mov	r17,r6
  8084b4:	4821883a 	mov	r16,r9
  8084b8:	3825883a 	mov	r18,r7
  8084bc:	003e9106 	br	807f04 <__alt_data_end+0xff807f04>
  8084c0:	80001f1e 	bne	r16,zero,808540 <__subdf3+0x6c0>
  8084c4:	1c48b03a 	or	r4,r3,r17
  8084c8:	20005a26 	beq	r4,zero,808634 <__subdf3+0x7b4>
  8084cc:	0084303a 	nor	r2,zero,r2
  8084d0:	1000561e 	bne	r2,zero,80862c <__subdf3+0x7ac>
  8084d4:	89a3883a 	add	r17,r17,r6
  8084d8:	1945883a 	add	r2,r3,r5
  8084dc:	898d803a 	cmpltu	r6,r17,r6
  8084e0:	3087883a 	add	r3,r6,r2
  8084e4:	4821883a 	mov	r16,r9
  8084e8:	003f0506 	br	808100 <__alt_data_end+0xff808100>
  8084ec:	10002b1e 	bne	r2,zero,80859c <__subdf3+0x71c>
  8084f0:	2984b03a 	or	r2,r5,r6
  8084f4:	10008026 	beq	r2,zero,8086f8 <__subdf3+0x878>
  8084f8:	2807883a 	mov	r3,r5
  8084fc:	3023883a 	mov	r17,r6
  808500:	3825883a 	mov	r18,r7
  808504:	0401ffc4 	movi	r16,2047
  808508:	003e7e06 	br	807f04 <__alt_data_end+0xff807f04>
  80850c:	3809883a 	mov	r4,r7
  808510:	0011883a 	mov	r8,zero
  808514:	0005883a 	mov	r2,zero
  808518:	003ee306 	br	8080a8 <__alt_data_end+0xff8080a8>
  80851c:	1c62b03a 	or	r17,r3,r17
  808520:	8822c03a 	cmpne	r17,r17,zero
  808524:	0005883a 	mov	r2,zero
  808528:	003f8906 	br	808350 <__alt_data_end+0xff808350>
  80852c:	3809883a 	mov	r4,r7
  808530:	4821883a 	mov	r16,r9
  808534:	0011883a 	mov	r8,zero
  808538:	0005883a 	mov	r2,zero
  80853c:	003eda06 	br	8080a8 <__alt_data_end+0xff8080a8>
  808540:	0101ffc4 	movi	r4,2047
  808544:	49003b26 	beq	r9,r4,808634 <__subdf3+0x7b4>
  808548:	0085c83a 	sub	r2,zero,r2
  80854c:	18c02034 	orhi	r3,r3,128
  808550:	01000e04 	movi	r4,56
  808554:	20806e16 	blt	r4,r2,808710 <__subdf3+0x890>
  808558:	010007c4 	movi	r4,31
  80855c:	20807716 	blt	r4,r2,80873c <__subdf3+0x8bc>
  808560:	01000804 	movi	r4,32
  808564:	2089c83a 	sub	r4,r4,r2
  808568:	1914983a 	sll	r10,r3,r4
  80856c:	8890d83a 	srl	r8,r17,r2
  808570:	8908983a 	sll	r4,r17,r4
  808574:	1884d83a 	srl	r2,r3,r2
  808578:	5222b03a 	or	r17,r10,r8
  80857c:	2006c03a 	cmpne	r3,r4,zero
  808580:	88e2b03a 	or	r17,r17,r3
  808584:	89a3883a 	add	r17,r17,r6
  808588:	1145883a 	add	r2,r2,r5
  80858c:	898d803a 	cmpltu	r6,r17,r6
  808590:	3087883a 	add	r3,r6,r2
  808594:	4821883a 	mov	r16,r9
  808598:	003ed906 	br	808100 <__alt_data_end+0xff808100>
  80859c:	2984b03a 	or	r2,r5,r6
  8085a0:	10004226 	beq	r2,zero,8086ac <__subdf3+0x82c>
  8085a4:	1808d0fa 	srli	r4,r3,3
  8085a8:	8822d0fa 	srli	r17,r17,3
  8085ac:	1806977a 	slli	r3,r3,29
  8085b0:	2080022c 	andhi	r2,r4,8
  8085b4:	1c62b03a 	or	r17,r3,r17
  8085b8:	10000826 	beq	r2,zero,8085dc <__subdf3+0x75c>
  8085bc:	2812d0fa 	srli	r9,r5,3
  8085c0:	4880022c 	andhi	r2,r9,8
  8085c4:	1000051e 	bne	r2,zero,8085dc <__subdf3+0x75c>
  8085c8:	300cd0fa 	srli	r6,r6,3
  8085cc:	2804977a 	slli	r2,r5,29
  8085d0:	4809883a 	mov	r4,r9
  8085d4:	3825883a 	mov	r18,r7
  8085d8:	11a2b03a 	or	r17,r2,r6
  8085dc:	8806d77a 	srli	r3,r17,29
  8085e0:	200890fa 	slli	r4,r4,3
  8085e4:	882290fa 	slli	r17,r17,3
  8085e8:	0401ffc4 	movi	r16,2047
  8085ec:	1906b03a 	or	r3,r3,r4
  8085f0:	003e4406 	br	807f04 <__alt_data_end+0xff807f04>
  8085f4:	2984b03a 	or	r2,r5,r6
  8085f8:	103e4226 	beq	r2,zero,807f04 <__alt_data_end+0xff807f04>
  8085fc:	8989c83a 	sub	r4,r17,r6
  808600:	8911803a 	cmpltu	r8,r17,r4
  808604:	1945c83a 	sub	r2,r3,r5
  808608:	1205c83a 	sub	r2,r2,r8
  80860c:	1200202c 	andhi	r8,r2,128
  808610:	403e9a26 	beq	r8,zero,80807c <__alt_data_end+0xff80807c>
  808614:	3463c83a 	sub	r17,r6,r17
  808618:	28c5c83a 	sub	r2,r5,r3
  80861c:	344d803a 	cmpltu	r6,r6,r17
  808620:	1187c83a 	sub	r3,r2,r6
  808624:	3825883a 	mov	r18,r7
  808628:	003e3606 	br	807f04 <__alt_data_end+0xff807f04>
  80862c:	0101ffc4 	movi	r4,2047
  808630:	493fc71e 	bne	r9,r4,808550 <__alt_data_end+0xff808550>
  808634:	2807883a 	mov	r3,r5
  808638:	3023883a 	mov	r17,r6
  80863c:	4821883a 	mov	r16,r9
  808640:	003e3006 	br	807f04 <__alt_data_end+0xff807f04>
  808644:	10003626 	beq	r2,zero,808720 <__subdf3+0x8a0>
  808648:	2984b03a 	or	r2,r5,r6
  80864c:	10001726 	beq	r2,zero,8086ac <__subdf3+0x82c>
  808650:	1808d0fa 	srli	r4,r3,3
  808654:	8822d0fa 	srli	r17,r17,3
  808658:	1806977a 	slli	r3,r3,29
  80865c:	2080022c 	andhi	r2,r4,8
  808660:	1c62b03a 	or	r17,r3,r17
  808664:	10000726 	beq	r2,zero,808684 <__subdf3+0x804>
  808668:	2812d0fa 	srli	r9,r5,3
  80866c:	4880022c 	andhi	r2,r9,8
  808670:	1000041e 	bne	r2,zero,808684 <__subdf3+0x804>
  808674:	300cd0fa 	srli	r6,r6,3
  808678:	2804977a 	slli	r2,r5,29
  80867c:	4809883a 	mov	r4,r9
  808680:	11a2b03a 	or	r17,r2,r6
  808684:	8806d77a 	srli	r3,r17,29
  808688:	200890fa 	slli	r4,r4,3
  80868c:	882290fa 	slli	r17,r17,3
  808690:	3825883a 	mov	r18,r7
  808694:	1906b03a 	or	r3,r3,r4
  808698:	0401ffc4 	movi	r16,2047
  80869c:	003e1906 	br	807f04 <__alt_data_end+0xff807f04>
  8086a0:	000b883a 	mov	r5,zero
  8086a4:	0005883a 	mov	r2,zero
  8086a8:	003e2e06 	br	807f64 <__alt_data_end+0xff807f64>
  8086ac:	0401ffc4 	movi	r16,2047
  8086b0:	003e1406 	br	807f04 <__alt_data_end+0xff807f04>
  8086b4:	0005883a 	mov	r2,zero
  8086b8:	003f7506 	br	808490 <__alt_data_end+0xff808490>
  8086bc:	0005883a 	mov	r2,zero
  8086c0:	0009883a 	mov	r4,zero
  8086c4:	003e7806 	br	8080a8 <__alt_data_end+0xff8080a8>
  8086c8:	123ff804 	addi	r8,r2,-32
  8086cc:	01000804 	movi	r4,32
  8086d0:	1a10d83a 	srl	r8,r3,r8
  8086d4:	11002526 	beq	r2,r4,80876c <__subdf3+0x8ec>
  8086d8:	01001004 	movi	r4,64
  8086dc:	2085c83a 	sub	r2,r4,r2
  8086e0:	1884983a 	sll	r2,r3,r2
  8086e4:	1444b03a 	or	r2,r2,r17
  8086e8:	1004c03a 	cmpne	r2,r2,zero
  8086ec:	40a2b03a 	or	r17,r8,r2
  8086f0:	0005883a 	mov	r2,zero
  8086f4:	003f1606 	br	808350 <__alt_data_end+0xff808350>
  8086f8:	02000434 	movhi	r8,16
  8086fc:	0009883a 	mov	r4,zero
  808700:	423fffc4 	addi	r8,r8,-1
  808704:	00bfffc4 	movi	r2,-1
  808708:	0401ffc4 	movi	r16,2047
  80870c:	003e6606 	br	8080a8 <__alt_data_end+0xff8080a8>
  808710:	1c62b03a 	or	r17,r3,r17
  808714:	8822c03a 	cmpne	r17,r17,zero
  808718:	0005883a 	mov	r2,zero
  80871c:	003f9906 	br	808584 <__alt_data_end+0xff808584>
  808720:	2807883a 	mov	r3,r5
  808724:	3023883a 	mov	r17,r6
  808728:	0401ffc4 	movi	r16,2047
  80872c:	003df506 	br	807f04 <__alt_data_end+0xff807f04>
  808730:	2807883a 	mov	r3,r5
  808734:	3023883a 	mov	r17,r6
  808738:	003df206 	br	807f04 <__alt_data_end+0xff807f04>
  80873c:	123ff804 	addi	r8,r2,-32
  808740:	01000804 	movi	r4,32
  808744:	1a10d83a 	srl	r8,r3,r8
  808748:	11000a26 	beq	r2,r4,808774 <__subdf3+0x8f4>
  80874c:	01001004 	movi	r4,64
  808750:	2085c83a 	sub	r2,r4,r2
  808754:	1884983a 	sll	r2,r3,r2
  808758:	1444b03a 	or	r2,r2,r17
  80875c:	1004c03a 	cmpne	r2,r2,zero
  808760:	40a2b03a 	or	r17,r8,r2
  808764:	0005883a 	mov	r2,zero
  808768:	003f8606 	br	808584 <__alt_data_end+0xff808584>
  80876c:	0005883a 	mov	r2,zero
  808770:	003fdc06 	br	8086e4 <__alt_data_end+0xff8086e4>
  808774:	0005883a 	mov	r2,zero
  808778:	003ff706 	br	808758 <__alt_data_end+0xff808758>

0080877c <__fixdfsi>:
  80877c:	280cd53a 	srli	r6,r5,20
  808780:	00c00434 	movhi	r3,16
  808784:	18ffffc4 	addi	r3,r3,-1
  808788:	3181ffcc 	andi	r6,r6,2047
  80878c:	01c0ff84 	movi	r7,1022
  808790:	28c6703a 	and	r3,r5,r3
  808794:	280ad7fa 	srli	r5,r5,31
  808798:	3980120e 	bge	r7,r6,8087e4 <__fixdfsi+0x68>
  80879c:	00810744 	movi	r2,1053
  8087a0:	11800c16 	blt	r2,r6,8087d4 <__fixdfsi+0x58>
  8087a4:	00810cc4 	movi	r2,1075
  8087a8:	1185c83a 	sub	r2,r2,r6
  8087ac:	01c007c4 	movi	r7,31
  8087b0:	18c00434 	orhi	r3,r3,16
  8087b4:	38800d16 	blt	r7,r2,8087ec <__fixdfsi+0x70>
  8087b8:	31befb44 	addi	r6,r6,-1043
  8087bc:	2084d83a 	srl	r2,r4,r2
  8087c0:	1986983a 	sll	r3,r3,r6
  8087c4:	1884b03a 	or	r2,r3,r2
  8087c8:	28000726 	beq	r5,zero,8087e8 <__fixdfsi+0x6c>
  8087cc:	0085c83a 	sub	r2,zero,r2
  8087d0:	f800283a 	ret
  8087d4:	00a00034 	movhi	r2,32768
  8087d8:	10bfffc4 	addi	r2,r2,-1
  8087dc:	2885883a 	add	r2,r5,r2
  8087e0:	f800283a 	ret
  8087e4:	0005883a 	mov	r2,zero
  8087e8:	f800283a 	ret
  8087ec:	008104c4 	movi	r2,1043
  8087f0:	1185c83a 	sub	r2,r2,r6
  8087f4:	1884d83a 	srl	r2,r3,r2
  8087f8:	003ff306 	br	8087c8 <__alt_data_end+0xff8087c8>

008087fc <__floatsidf>:
  8087fc:	defffd04 	addi	sp,sp,-12
  808800:	dfc00215 	stw	ra,8(sp)
  808804:	dc400115 	stw	r17,4(sp)
  808808:	dc000015 	stw	r16,0(sp)
  80880c:	20002b26 	beq	r4,zero,8088bc <__floatsidf+0xc0>
  808810:	2023883a 	mov	r17,r4
  808814:	2020d7fa 	srli	r16,r4,31
  808818:	20002d16 	blt	r4,zero,8088d0 <__floatsidf+0xd4>
  80881c:	8809883a 	mov	r4,r17
  808820:	0808b900 	call	808b90 <__clzsi2>
  808824:	01410784 	movi	r5,1054
  808828:	288bc83a 	sub	r5,r5,r2
  80882c:	01010cc4 	movi	r4,1075
  808830:	2149c83a 	sub	r4,r4,r5
  808834:	00c007c4 	movi	r3,31
  808838:	1900160e 	bge	r3,r4,808894 <__floatsidf+0x98>
  80883c:	00c104c4 	movi	r3,1043
  808840:	1947c83a 	sub	r3,r3,r5
  808844:	88c6983a 	sll	r3,r17,r3
  808848:	00800434 	movhi	r2,16
  80884c:	10bfffc4 	addi	r2,r2,-1
  808850:	1886703a 	and	r3,r3,r2
  808854:	2941ffcc 	andi	r5,r5,2047
  808858:	800d883a 	mov	r6,r16
  80885c:	0005883a 	mov	r2,zero
  808860:	280a953a 	slli	r5,r5,20
  808864:	31803fcc 	andi	r6,r6,255
  808868:	01000434 	movhi	r4,16
  80886c:	300c97fa 	slli	r6,r6,31
  808870:	213fffc4 	addi	r4,r4,-1
  808874:	1906703a 	and	r3,r3,r4
  808878:	1946b03a 	or	r3,r3,r5
  80887c:	1986b03a 	or	r3,r3,r6
  808880:	dfc00217 	ldw	ra,8(sp)
  808884:	dc400117 	ldw	r17,4(sp)
  808888:	dc000017 	ldw	r16,0(sp)
  80888c:	dec00304 	addi	sp,sp,12
  808890:	f800283a 	ret
  808894:	00c002c4 	movi	r3,11
  808898:	1887c83a 	sub	r3,r3,r2
  80889c:	88c6d83a 	srl	r3,r17,r3
  8088a0:	8904983a 	sll	r2,r17,r4
  8088a4:	01000434 	movhi	r4,16
  8088a8:	213fffc4 	addi	r4,r4,-1
  8088ac:	2941ffcc 	andi	r5,r5,2047
  8088b0:	1906703a 	and	r3,r3,r4
  8088b4:	800d883a 	mov	r6,r16
  8088b8:	003fe906 	br	808860 <__alt_data_end+0xff808860>
  8088bc:	000d883a 	mov	r6,zero
  8088c0:	000b883a 	mov	r5,zero
  8088c4:	0007883a 	mov	r3,zero
  8088c8:	0005883a 	mov	r2,zero
  8088cc:	003fe406 	br	808860 <__alt_data_end+0xff808860>
  8088d0:	0123c83a 	sub	r17,zero,r4
  8088d4:	003fd106 	br	80881c <__alt_data_end+0xff80881c>

008088d8 <__extendsfdf2>:
  8088d8:	200ad5fa 	srli	r5,r4,23
  8088dc:	defffd04 	addi	sp,sp,-12
  8088e0:	dc400115 	stw	r17,4(sp)
  8088e4:	29403fcc 	andi	r5,r5,255
  8088e8:	29800044 	addi	r6,r5,1
  8088ec:	04402034 	movhi	r17,128
  8088f0:	dc000015 	stw	r16,0(sp)
  8088f4:	8c7fffc4 	addi	r17,r17,-1
  8088f8:	dfc00215 	stw	ra,8(sp)
  8088fc:	31803fcc 	andi	r6,r6,255
  808900:	00800044 	movi	r2,1
  808904:	8922703a 	and	r17,r17,r4
  808908:	2020d7fa 	srli	r16,r4,31
  80890c:	1180110e 	bge	r2,r6,808954 <__extendsfdf2+0x7c>
  808910:	880cd0fa 	srli	r6,r17,3
  808914:	8822977a 	slli	r17,r17,29
  808918:	2940e004 	addi	r5,r5,896
  80891c:	2941ffcc 	andi	r5,r5,2047
  808920:	2804953a 	slli	r2,r5,20
  808924:	01400434 	movhi	r5,16
  808928:	800697fa 	slli	r3,r16,31
  80892c:	297fffc4 	addi	r5,r5,-1
  808930:	314a703a 	and	r5,r6,r5
  808934:	288ab03a 	or	r5,r5,r2
  808938:	28c6b03a 	or	r3,r5,r3
  80893c:	8805883a 	mov	r2,r17
  808940:	dfc00217 	ldw	ra,8(sp)
  808944:	dc400117 	ldw	r17,4(sp)
  808948:	dc000017 	ldw	r16,0(sp)
  80894c:	dec00304 	addi	sp,sp,12
  808950:	f800283a 	ret
  808954:	2800111e 	bne	r5,zero,80899c <__extendsfdf2+0xc4>
  808958:	88001c26 	beq	r17,zero,8089cc <__extendsfdf2+0xf4>
  80895c:	8809883a 	mov	r4,r17
  808960:	0808b900 	call	808b90 <__clzsi2>
  808964:	00c00284 	movi	r3,10
  808968:	18801b16 	blt	r3,r2,8089d8 <__extendsfdf2+0x100>
  80896c:	018002c4 	movi	r6,11
  808970:	308dc83a 	sub	r6,r6,r2
  808974:	11000544 	addi	r4,r2,21
  808978:	8986d83a 	srl	r3,r17,r6
  80897c:	8922983a 	sll	r17,r17,r4
  808980:	0180e244 	movi	r6,905
  808984:	01400434 	movhi	r5,16
  808988:	3085c83a 	sub	r2,r6,r2
  80898c:	297fffc4 	addi	r5,r5,-1
  808990:	194c703a 	and	r6,r3,r5
  808994:	1141ffcc 	andi	r5,r2,2047
  808998:	003fe006 	br	80891c <__alt_data_end+0xff80891c>
  80899c:	88000826 	beq	r17,zero,8089c0 <__extendsfdf2+0xe8>
  8089a0:	880cd0fa 	srli	r6,r17,3
  8089a4:	00800434 	movhi	r2,16
  8089a8:	10bfffc4 	addi	r2,r2,-1
  8089ac:	31800234 	orhi	r6,r6,8
  8089b0:	8822977a 	slli	r17,r17,29
  8089b4:	308c703a 	and	r6,r6,r2
  8089b8:	0141ffc4 	movi	r5,2047
  8089bc:	003fd706 	br	80891c <__alt_data_end+0xff80891c>
  8089c0:	0141ffc4 	movi	r5,2047
  8089c4:	000d883a 	mov	r6,zero
  8089c8:	003fd406 	br	80891c <__alt_data_end+0xff80891c>
  8089cc:	000b883a 	mov	r5,zero
  8089d0:	000d883a 	mov	r6,zero
  8089d4:	003fd106 	br	80891c <__alt_data_end+0xff80891c>
  8089d8:	11bffd44 	addi	r6,r2,-11
  8089dc:	8986983a 	sll	r3,r17,r6
  8089e0:	0023883a 	mov	r17,zero
  8089e4:	003fe606 	br	808980 <__alt_data_end+0xff808980>

008089e8 <__truncdfsf2>:
  8089e8:	2810d53a 	srli	r8,r5,20
  8089ec:	01c00434 	movhi	r7,16
  8089f0:	39ffffc4 	addi	r7,r7,-1
  8089f4:	29ce703a 	and	r7,r5,r7
  8089f8:	4201ffcc 	andi	r8,r8,2047
  8089fc:	380e90fa 	slli	r7,r7,3
  808a00:	200cd77a 	srli	r6,r4,29
  808a04:	42400044 	addi	r9,r8,1
  808a08:	4a41ffcc 	andi	r9,r9,2047
  808a0c:	00c00044 	movi	r3,1
  808a10:	280ad7fa 	srli	r5,r5,31
  808a14:	31ceb03a 	or	r7,r6,r7
  808a18:	200490fa 	slli	r2,r4,3
  808a1c:	1a40230e 	bge	r3,r9,808aac <__truncdfsf2+0xc4>
  808a20:	40ff2004 	addi	r3,r8,-896
  808a24:	01803f84 	movi	r6,254
  808a28:	30c01516 	blt	r6,r3,808a80 <__truncdfsf2+0x98>
  808a2c:	00c0380e 	bge	zero,r3,808b10 <__truncdfsf2+0x128>
  808a30:	200c91ba 	slli	r6,r4,6
  808a34:	380e90fa 	slli	r7,r7,3
  808a38:	1004d77a 	srli	r2,r2,29
  808a3c:	300cc03a 	cmpne	r6,r6,zero
  808a40:	31ccb03a 	or	r6,r6,r7
  808a44:	308cb03a 	or	r6,r6,r2
  808a48:	308001cc 	andi	r2,r6,7
  808a4c:	10000426 	beq	r2,zero,808a60 <__truncdfsf2+0x78>
  808a50:	308003cc 	andi	r2,r6,15
  808a54:	01000104 	movi	r4,4
  808a58:	11000126 	beq	r2,r4,808a60 <__truncdfsf2+0x78>
  808a5c:	31800104 	addi	r6,r6,4
  808a60:	3081002c 	andhi	r2,r6,1024
  808a64:	10001626 	beq	r2,zero,808ac0 <__truncdfsf2+0xd8>
  808a68:	18c00044 	addi	r3,r3,1
  808a6c:	00803fc4 	movi	r2,255
  808a70:	18800326 	beq	r3,r2,808a80 <__truncdfsf2+0x98>
  808a74:	300c91ba 	slli	r6,r6,6
  808a78:	300cd27a 	srli	r6,r6,9
  808a7c:	00000206 	br	808a88 <__truncdfsf2+0xa0>
  808a80:	00ffffc4 	movi	r3,-1
  808a84:	000d883a 	mov	r6,zero
  808a88:	18c03fcc 	andi	r3,r3,255
  808a8c:	180895fa 	slli	r4,r3,23
  808a90:	00c02034 	movhi	r3,128
  808a94:	280a97fa 	slli	r5,r5,31
  808a98:	18ffffc4 	addi	r3,r3,-1
  808a9c:	30c6703a 	and	r3,r6,r3
  808aa0:	1906b03a 	or	r3,r3,r4
  808aa4:	1944b03a 	or	r2,r3,r5
  808aa8:	f800283a 	ret
  808aac:	40000b1e 	bne	r8,zero,808adc <__truncdfsf2+0xf4>
  808ab0:	388cb03a 	or	r6,r7,r2
  808ab4:	0007883a 	mov	r3,zero
  808ab8:	30000426 	beq	r6,zero,808acc <__truncdfsf2+0xe4>
  808abc:	01800144 	movi	r6,5
  808ac0:	00803fc4 	movi	r2,255
  808ac4:	300cd0fa 	srli	r6,r6,3
  808ac8:	18800a26 	beq	r3,r2,808af4 <__truncdfsf2+0x10c>
  808acc:	00802034 	movhi	r2,128
  808ad0:	10bfffc4 	addi	r2,r2,-1
  808ad4:	308c703a 	and	r6,r6,r2
  808ad8:	003feb06 	br	808a88 <__alt_data_end+0xff808a88>
  808adc:	3888b03a 	or	r4,r7,r2
  808ae0:	203fe726 	beq	r4,zero,808a80 <__alt_data_end+0xff808a80>
  808ae4:	380c90fa 	slli	r6,r7,3
  808ae8:	00c03fc4 	movi	r3,255
  808aec:	31808034 	orhi	r6,r6,512
  808af0:	003fd506 	br	808a48 <__alt_data_end+0xff808a48>
  808af4:	303fe226 	beq	r6,zero,808a80 <__alt_data_end+0xff808a80>
  808af8:	00802034 	movhi	r2,128
  808afc:	31801034 	orhi	r6,r6,64
  808b00:	10bfffc4 	addi	r2,r2,-1
  808b04:	00ffffc4 	movi	r3,-1
  808b08:	308c703a 	and	r6,r6,r2
  808b0c:	003fde06 	br	808a88 <__alt_data_end+0xff808a88>
  808b10:	013ffa44 	movi	r4,-23
  808b14:	19000e16 	blt	r3,r4,808b50 <__truncdfsf2+0x168>
  808b18:	01000784 	movi	r4,30
  808b1c:	20c9c83a 	sub	r4,r4,r3
  808b20:	018007c4 	movi	r6,31
  808b24:	39c02034 	orhi	r7,r7,128
  808b28:	31000b16 	blt	r6,r4,808b58 <__truncdfsf2+0x170>
  808b2c:	423f2084 	addi	r8,r8,-894
  808b30:	120c983a 	sll	r6,r2,r8
  808b34:	3a0e983a 	sll	r7,r7,r8
  808b38:	1104d83a 	srl	r2,r2,r4
  808b3c:	300cc03a 	cmpne	r6,r6,zero
  808b40:	31ceb03a 	or	r7,r6,r7
  808b44:	388cb03a 	or	r6,r7,r2
  808b48:	0007883a 	mov	r3,zero
  808b4c:	003fbe06 	br	808a48 <__alt_data_end+0xff808a48>
  808b50:	0007883a 	mov	r3,zero
  808b54:	003fd906 	br	808abc <__alt_data_end+0xff808abc>
  808b58:	01bfff84 	movi	r6,-2
  808b5c:	30cdc83a 	sub	r6,r6,r3
  808b60:	00c00804 	movi	r3,32
  808b64:	398cd83a 	srl	r6,r7,r6
  808b68:	20c00726 	beq	r4,r3,808b88 <__truncdfsf2+0x1a0>
  808b6c:	423f2884 	addi	r8,r8,-862
  808b70:	3a0e983a 	sll	r7,r7,r8
  808b74:	3884b03a 	or	r2,r7,r2
  808b78:	1004c03a 	cmpne	r2,r2,zero
  808b7c:	118cb03a 	or	r6,r2,r6
  808b80:	0007883a 	mov	r3,zero
  808b84:	003fb006 	br	808a48 <__alt_data_end+0xff808a48>
  808b88:	000f883a 	mov	r7,zero
  808b8c:	003ff906 	br	808b74 <__alt_data_end+0xff808b74>

00808b90 <__clzsi2>:
  808b90:	00bfffd4 	movui	r2,65535
  808b94:	11000536 	bltu	r2,r4,808bac <__clzsi2+0x1c>
  808b98:	00803fc4 	movi	r2,255
  808b9c:	11000f36 	bltu	r2,r4,808bdc <__clzsi2+0x4c>
  808ba0:	00800804 	movi	r2,32
  808ba4:	0007883a 	mov	r3,zero
  808ba8:	00000506 	br	808bc0 <__clzsi2+0x30>
  808bac:	00804034 	movhi	r2,256
  808bb0:	10bfffc4 	addi	r2,r2,-1
  808bb4:	11000c2e 	bgeu	r2,r4,808be8 <__clzsi2+0x58>
  808bb8:	00800204 	movi	r2,8
  808bbc:	00c00604 	movi	r3,24
  808bc0:	20c8d83a 	srl	r4,r4,r3
  808bc4:	00c02074 	movhi	r3,129
  808bc8:	18d68b04 	addi	r3,r3,23084
  808bcc:	1909883a 	add	r4,r3,r4
  808bd0:	20c00003 	ldbu	r3,0(r4)
  808bd4:	10c5c83a 	sub	r2,r2,r3
  808bd8:	f800283a 	ret
  808bdc:	00800604 	movi	r2,24
  808be0:	00c00204 	movi	r3,8
  808be4:	003ff606 	br	808bc0 <__alt_data_end+0xff808bc0>
  808be8:	00800404 	movi	r2,16
  808bec:	1007883a 	mov	r3,r2
  808bf0:	003ff306 	br	808bc0 <__alt_data_end+0xff808bc0>

00808bf4 <__errno>:
  808bf4:	00802074 	movhi	r2,129
  808bf8:	109df704 	addi	r2,r2,30684
  808bfc:	10800017 	ldw	r2,0(r2)
  808c00:	f800283a 	ret

00808c04 <_printf_r>:
  808c04:	defffd04 	addi	sp,sp,-12
  808c08:	2805883a 	mov	r2,r5
  808c0c:	dfc00015 	stw	ra,0(sp)
  808c10:	d9800115 	stw	r6,4(sp)
  808c14:	d9c00215 	stw	r7,8(sp)
  808c18:	21400217 	ldw	r5,8(r4)
  808c1c:	d9c00104 	addi	r7,sp,4
  808c20:	100d883a 	mov	r6,r2
  808c24:	0808ddc0 	call	808ddc <___vfprintf_internal_r>
  808c28:	dfc00017 	ldw	ra,0(sp)
  808c2c:	dec00304 	addi	sp,sp,12
  808c30:	f800283a 	ret

00808c34 <printf>:
  808c34:	defffc04 	addi	sp,sp,-16
  808c38:	dfc00015 	stw	ra,0(sp)
  808c3c:	d9400115 	stw	r5,4(sp)
  808c40:	d9800215 	stw	r6,8(sp)
  808c44:	d9c00315 	stw	r7,12(sp)
  808c48:	00802074 	movhi	r2,129
  808c4c:	109df704 	addi	r2,r2,30684
  808c50:	10800017 	ldw	r2,0(r2)
  808c54:	200b883a 	mov	r5,r4
  808c58:	d9800104 	addi	r6,sp,4
  808c5c:	11000217 	ldw	r4,8(r2)
  808c60:	080afd40 	call	80afd4 <__vfprintf_internal>
  808c64:	dfc00017 	ldw	ra,0(sp)
  808c68:	dec00404 	addi	sp,sp,16
  808c6c:	f800283a 	ret

00808c70 <_puts_r>:
  808c70:	defff604 	addi	sp,sp,-40
  808c74:	dc000715 	stw	r16,28(sp)
  808c78:	2021883a 	mov	r16,r4
  808c7c:	2809883a 	mov	r4,r5
  808c80:	dc400815 	stw	r17,32(sp)
  808c84:	dfc00915 	stw	ra,36(sp)
  808c88:	2823883a 	mov	r17,r5
  808c8c:	0808d440 	call	808d44 <strlen>
  808c90:	10c00044 	addi	r3,r2,1
  808c94:	d8800115 	stw	r2,4(sp)
  808c98:	00802074 	movhi	r2,129
  808c9c:	1096cc04 	addi	r2,r2,23344
  808ca0:	d8800215 	stw	r2,8(sp)
  808ca4:	00800044 	movi	r2,1
  808ca8:	d8800315 	stw	r2,12(sp)
  808cac:	00800084 	movi	r2,2
  808cb0:	dc400015 	stw	r17,0(sp)
  808cb4:	d8c00615 	stw	r3,24(sp)
  808cb8:	dec00415 	stw	sp,16(sp)
  808cbc:	d8800515 	stw	r2,20(sp)
  808cc0:	80000226 	beq	r16,zero,808ccc <_puts_r+0x5c>
  808cc4:	80800e17 	ldw	r2,56(r16)
  808cc8:	10001426 	beq	r2,zero,808d1c <_puts_r+0xac>
  808ccc:	81400217 	ldw	r5,8(r16)
  808cd0:	2880030b 	ldhu	r2,12(r5)
  808cd4:	10c8000c 	andi	r3,r2,8192
  808cd8:	1800061e 	bne	r3,zero,808cf4 <_puts_r+0x84>
  808cdc:	29001917 	ldw	r4,100(r5)
  808ce0:	00f7ffc4 	movi	r3,-8193
  808ce4:	10880014 	ori	r2,r2,8192
  808ce8:	20c6703a 	and	r3,r4,r3
  808cec:	2880030d 	sth	r2,12(r5)
  808cf0:	28c01915 	stw	r3,100(r5)
  808cf4:	d9800404 	addi	r6,sp,16
  808cf8:	8009883a 	mov	r4,r16
  808cfc:	080d5040 	call	80d504 <__sfvwrite_r>
  808d00:	1000091e 	bne	r2,zero,808d28 <_puts_r+0xb8>
  808d04:	00800284 	movi	r2,10
  808d08:	dfc00917 	ldw	ra,36(sp)
  808d0c:	dc400817 	ldw	r17,32(sp)
  808d10:	dc000717 	ldw	r16,28(sp)
  808d14:	dec00a04 	addi	sp,sp,40
  808d18:	f800283a 	ret
  808d1c:	8009883a 	mov	r4,r16
  808d20:	080d0800 	call	80d080 <__sinit>
  808d24:	003fe906 	br	808ccc <__alt_data_end+0xff808ccc>
  808d28:	00bfffc4 	movi	r2,-1
  808d2c:	003ff606 	br	808d08 <__alt_data_end+0xff808d08>

00808d30 <puts>:
  808d30:	00802074 	movhi	r2,129
  808d34:	109df704 	addi	r2,r2,30684
  808d38:	200b883a 	mov	r5,r4
  808d3c:	11000017 	ldw	r4,0(r2)
  808d40:	0808c701 	jmpi	808c70 <_puts_r>

00808d44 <strlen>:
  808d44:	208000cc 	andi	r2,r4,3
  808d48:	10002026 	beq	r2,zero,808dcc <strlen+0x88>
  808d4c:	20800007 	ldb	r2,0(r4)
  808d50:	10002026 	beq	r2,zero,808dd4 <strlen+0x90>
  808d54:	2005883a 	mov	r2,r4
  808d58:	00000206 	br	808d64 <strlen+0x20>
  808d5c:	10c00007 	ldb	r3,0(r2)
  808d60:	18001826 	beq	r3,zero,808dc4 <strlen+0x80>
  808d64:	10800044 	addi	r2,r2,1
  808d68:	10c000cc 	andi	r3,r2,3
  808d6c:	183ffb1e 	bne	r3,zero,808d5c <__alt_data_end+0xff808d5c>
  808d70:	10c00017 	ldw	r3,0(r2)
  808d74:	01ffbff4 	movhi	r7,65279
  808d78:	39ffbfc4 	addi	r7,r7,-257
  808d7c:	00ca303a 	nor	r5,zero,r3
  808d80:	01a02074 	movhi	r6,32897
  808d84:	19c7883a 	add	r3,r3,r7
  808d88:	31a02004 	addi	r6,r6,-32640
  808d8c:	1946703a 	and	r3,r3,r5
  808d90:	1986703a 	and	r3,r3,r6
  808d94:	1800091e 	bne	r3,zero,808dbc <strlen+0x78>
  808d98:	10800104 	addi	r2,r2,4
  808d9c:	10c00017 	ldw	r3,0(r2)
  808da0:	19cb883a 	add	r5,r3,r7
  808da4:	00c6303a 	nor	r3,zero,r3
  808da8:	28c6703a 	and	r3,r5,r3
  808dac:	1986703a 	and	r3,r3,r6
  808db0:	183ff926 	beq	r3,zero,808d98 <__alt_data_end+0xff808d98>
  808db4:	00000106 	br	808dbc <strlen+0x78>
  808db8:	10800044 	addi	r2,r2,1
  808dbc:	10c00007 	ldb	r3,0(r2)
  808dc0:	183ffd1e 	bne	r3,zero,808db8 <__alt_data_end+0xff808db8>
  808dc4:	1105c83a 	sub	r2,r2,r4
  808dc8:	f800283a 	ret
  808dcc:	2005883a 	mov	r2,r4
  808dd0:	003fe706 	br	808d70 <__alt_data_end+0xff808d70>
  808dd4:	0005883a 	mov	r2,zero
  808dd8:	f800283a 	ret

00808ddc <___vfprintf_internal_r>:
  808ddc:	deffb804 	addi	sp,sp,-288
  808de0:	dfc04715 	stw	ra,284(sp)
  808de4:	ddc04515 	stw	r23,276(sp)
  808de8:	dd404315 	stw	r21,268(sp)
  808dec:	d9002c15 	stw	r4,176(sp)
  808df0:	282f883a 	mov	r23,r5
  808df4:	302b883a 	mov	r21,r6
  808df8:	d9c02d15 	stw	r7,180(sp)
  808dfc:	df004615 	stw	fp,280(sp)
  808e00:	dd804415 	stw	r22,272(sp)
  808e04:	dd004215 	stw	r20,264(sp)
  808e08:	dcc04115 	stw	r19,260(sp)
  808e0c:	dc804015 	stw	r18,256(sp)
  808e10:	dc403f15 	stw	r17,252(sp)
  808e14:	dc003e15 	stw	r16,248(sp)
  808e18:	080dbf40 	call	80dbf4 <_localeconv_r>
  808e1c:	10800017 	ldw	r2,0(r2)
  808e20:	1009883a 	mov	r4,r2
  808e24:	d8803415 	stw	r2,208(sp)
  808e28:	0808d440 	call	808d44 <strlen>
  808e2c:	d8803715 	stw	r2,220(sp)
  808e30:	d8802c17 	ldw	r2,176(sp)
  808e34:	10000226 	beq	r2,zero,808e40 <___vfprintf_internal_r+0x64>
  808e38:	10800e17 	ldw	r2,56(r2)
  808e3c:	1000f926 	beq	r2,zero,809224 <___vfprintf_internal_r+0x448>
  808e40:	b880030b 	ldhu	r2,12(r23)
  808e44:	10c8000c 	andi	r3,r2,8192
  808e48:	1800061e 	bne	r3,zero,808e64 <___vfprintf_internal_r+0x88>
  808e4c:	b9001917 	ldw	r4,100(r23)
  808e50:	00f7ffc4 	movi	r3,-8193
  808e54:	10880014 	ori	r2,r2,8192
  808e58:	20c6703a 	and	r3,r4,r3
  808e5c:	b880030d 	sth	r2,12(r23)
  808e60:	b8c01915 	stw	r3,100(r23)
  808e64:	10c0020c 	andi	r3,r2,8
  808e68:	1800c126 	beq	r3,zero,809170 <___vfprintf_internal_r+0x394>
  808e6c:	b8c00417 	ldw	r3,16(r23)
  808e70:	1800bf26 	beq	r3,zero,809170 <___vfprintf_internal_r+0x394>
  808e74:	1080068c 	andi	r2,r2,26
  808e78:	00c00284 	movi	r3,10
  808e7c:	10c0c426 	beq	r2,r3,809190 <___vfprintf_internal_r+0x3b4>
  808e80:	d8c00404 	addi	r3,sp,16
  808e84:	05002074 	movhi	r20,129
  808e88:	d9001e04 	addi	r4,sp,120
  808e8c:	a516dd84 	addi	r20,r20,23414
  808e90:	d8c01e15 	stw	r3,120(sp)
  808e94:	d8002015 	stw	zero,128(sp)
  808e98:	d8001f15 	stw	zero,124(sp)
  808e9c:	d8003315 	stw	zero,204(sp)
  808ea0:	d8003615 	stw	zero,216(sp)
  808ea4:	d8003815 	stw	zero,224(sp)
  808ea8:	1811883a 	mov	r8,r3
  808eac:	d8003915 	stw	zero,228(sp)
  808eb0:	d8003a15 	stw	zero,232(sp)
  808eb4:	d8002f15 	stw	zero,188(sp)
  808eb8:	d9002815 	stw	r4,160(sp)
  808ebc:	a8800007 	ldb	r2,0(r21)
  808ec0:	10027b26 	beq	r2,zero,8098b0 <___vfprintf_internal_r+0xad4>
  808ec4:	00c00944 	movi	r3,37
  808ec8:	a821883a 	mov	r16,r21
  808ecc:	10c0021e 	bne	r2,r3,808ed8 <___vfprintf_internal_r+0xfc>
  808ed0:	00001406 	br	808f24 <___vfprintf_internal_r+0x148>
  808ed4:	10c00326 	beq	r2,r3,808ee4 <___vfprintf_internal_r+0x108>
  808ed8:	84000044 	addi	r16,r16,1
  808edc:	80800007 	ldb	r2,0(r16)
  808ee0:	103ffc1e 	bne	r2,zero,808ed4 <__alt_data_end+0xff808ed4>
  808ee4:	8563c83a 	sub	r17,r16,r21
  808ee8:	88000e26 	beq	r17,zero,808f24 <___vfprintf_internal_r+0x148>
  808eec:	d8c02017 	ldw	r3,128(sp)
  808ef0:	d8801f17 	ldw	r2,124(sp)
  808ef4:	45400015 	stw	r21,0(r8)
  808ef8:	1c47883a 	add	r3,r3,r17
  808efc:	10800044 	addi	r2,r2,1
  808f00:	d8c02015 	stw	r3,128(sp)
  808f04:	44400115 	stw	r17,4(r8)
  808f08:	d8801f15 	stw	r2,124(sp)
  808f0c:	00c001c4 	movi	r3,7
  808f10:	1880a716 	blt	r3,r2,8091b0 <___vfprintf_internal_r+0x3d4>
  808f14:	42000204 	addi	r8,r8,8
  808f18:	d9402f17 	ldw	r5,188(sp)
  808f1c:	2c4b883a 	add	r5,r5,r17
  808f20:	d9402f15 	stw	r5,188(sp)
  808f24:	80800007 	ldb	r2,0(r16)
  808f28:	1000a826 	beq	r2,zero,8091cc <___vfprintf_internal_r+0x3f0>
  808f2c:	84400047 	ldb	r17,1(r16)
  808f30:	00bfffc4 	movi	r2,-1
  808f34:	85400044 	addi	r21,r16,1
  808f38:	d8002785 	stb	zero,158(sp)
  808f3c:	0007883a 	mov	r3,zero
  808f40:	000f883a 	mov	r7,zero
  808f44:	d8802915 	stw	r2,164(sp)
  808f48:	d8003115 	stw	zero,196(sp)
  808f4c:	0025883a 	mov	r18,zero
  808f50:	01401604 	movi	r5,88
  808f54:	01800244 	movi	r6,9
  808f58:	02800a84 	movi	r10,42
  808f5c:	02401b04 	movi	r9,108
  808f60:	ad400044 	addi	r21,r21,1
  808f64:	88bff804 	addi	r2,r17,-32
  808f68:	28830436 	bltu	r5,r2,809b7c <___vfprintf_internal_r+0xda0>
  808f6c:	100490ba 	slli	r2,r2,2
  808f70:	01002074 	movhi	r4,129
  808f74:	2123e104 	addi	r4,r4,-28796
  808f78:	1105883a 	add	r2,r2,r4
  808f7c:	10800017 	ldw	r2,0(r2)
  808f80:	1000683a 	jmp	r2
  808f84:	00809a9c 	xori	r2,zero,618
  808f88:	00809b7c 	xorhi	r2,zero,621
  808f8c:	00809b7c 	xorhi	r2,zero,621
  808f90:	00809abc 	xorhi	r2,zero,618
  808f94:	00809b7c 	xorhi	r2,zero,621
  808f98:	00809b7c 	xorhi	r2,zero,621
  808f9c:	00809b7c 	xorhi	r2,zero,621
  808fa0:	00809b7c 	xorhi	r2,zero,621
  808fa4:	00809b7c 	xorhi	r2,zero,621
  808fa8:	00809b7c 	xorhi	r2,zero,621
  808fac:	00809230 	cmpltui	r2,zero,584
  808fb0:	008099d8 	cmpnei	r2,zero,615
  808fb4:	00809b7c 	xorhi	r2,zero,621
  808fb8:	008090f8 	rdprs	r2,zero,579
  808fbc:	00809258 	cmpnei	r2,zero,585
  808fc0:	00809b7c 	xorhi	r2,zero,621
  808fc4:	00809298 	cmpnei	r2,zero,586
  808fc8:	008092a4 	muli	r2,zero,586
  808fcc:	008092a4 	muli	r2,zero,586
  808fd0:	008092a4 	muli	r2,zero,586
  808fd4:	008092a4 	muli	r2,zero,586
  808fd8:	008092a4 	muli	r2,zero,586
  808fdc:	008092a4 	muli	r2,zero,586
  808fe0:	008092a4 	muli	r2,zero,586
  808fe4:	008092a4 	muli	r2,zero,586
  808fe8:	008092a4 	muli	r2,zero,586
  808fec:	00809b7c 	xorhi	r2,zero,621
  808ff0:	00809b7c 	xorhi	r2,zero,621
  808ff4:	00809b7c 	xorhi	r2,zero,621
  808ff8:	00809b7c 	xorhi	r2,zero,621
  808ffc:	00809b7c 	xorhi	r2,zero,621
  809000:	00809b7c 	xorhi	r2,zero,621
  809004:	00809b7c 	xorhi	r2,zero,621
  809008:	00809b7c 	xorhi	r2,zero,621
  80900c:	00809b7c 	xorhi	r2,zero,621
  809010:	00809b7c 	xorhi	r2,zero,621
  809014:	008092d8 	cmpnei	r2,zero,587
  809018:	00809394 	movui	r2,590
  80901c:	00809b7c 	xorhi	r2,zero,621
  809020:	00809394 	movui	r2,590
  809024:	00809b7c 	xorhi	r2,zero,621
  809028:	00809b7c 	xorhi	r2,zero,621
  80902c:	00809b7c 	xorhi	r2,zero,621
  809030:	00809b7c 	xorhi	r2,zero,621
  809034:	00809434 	movhi	r2,592
  809038:	00809b7c 	xorhi	r2,zero,621
  80903c:	00809b7c 	xorhi	r2,zero,621
  809040:	00809440 	call	80944 <__alt_mem_sdram-0x77f6bc>
  809044:	00809b7c 	xorhi	r2,zero,621
  809048:	00809b7c 	xorhi	r2,zero,621
  80904c:	00809b7c 	xorhi	r2,zero,621
  809050:	00809b7c 	xorhi	r2,zero,621
  809054:	00809b7c 	xorhi	r2,zero,621
  809058:	008098b8 	rdprs	r2,zero,610
  80905c:	00809b7c 	xorhi	r2,zero,621
  809060:	00809b7c 	xorhi	r2,zero,621
  809064:	00809918 	cmpnei	r2,zero,612
  809068:	00809b7c 	xorhi	r2,zero,621
  80906c:	00809b7c 	xorhi	r2,zero,621
  809070:	00809b7c 	xorhi	r2,zero,621
  809074:	00809b7c 	xorhi	r2,zero,621
  809078:	00809b7c 	xorhi	r2,zero,621
  80907c:	00809b7c 	xorhi	r2,zero,621
  809080:	00809b7c 	xorhi	r2,zero,621
  809084:	00809b7c 	xorhi	r2,zero,621
  809088:	00809b7c 	xorhi	r2,zero,621
  80908c:	00809b7c 	xorhi	r2,zero,621
  809090:	00809b28 	cmpgeui	r2,zero,620
  809094:	00809ac8 	cmpgei	r2,zero,619
  809098:	00809394 	movui	r2,590
  80909c:	00809394 	movui	r2,590
  8090a0:	00809394 	movui	r2,590
  8090a4:	00809ad8 	cmpnei	r2,zero,619
  8090a8:	00809ac8 	cmpgei	r2,zero,619
  8090ac:	00809b7c 	xorhi	r2,zero,621
  8090b0:	00809b7c 	xorhi	r2,zero,621
  8090b4:	00809ae4 	muli	r2,zero,619
  8090b8:	00809b7c 	xorhi	r2,zero,621
  8090bc:	00809af4 	movhi	r2,619
  8090c0:	008099c8 	cmpgei	r2,zero,615
  8090c4:	00809104 	movi	r2,580
  8090c8:	008099e8 	cmpgeui	r2,zero,615
  8090cc:	00809b7c 	xorhi	r2,zero,621
  8090d0:	008099f4 	movhi	r2,615
  8090d4:	00809b7c 	xorhi	r2,zero,621
  8090d8:	00809a50 	cmplti	r2,zero,617
  8090dc:	00809b7c 	xorhi	r2,zero,621
  8090e0:	00809b7c 	xorhi	r2,zero,621
  8090e4:	00809a60 	cmpeqi	r2,zero,617
  8090e8:	d9003117 	ldw	r4,196(sp)
  8090ec:	d8802d15 	stw	r2,180(sp)
  8090f0:	0109c83a 	sub	r4,zero,r4
  8090f4:	d9003115 	stw	r4,196(sp)
  8090f8:	94800114 	ori	r18,r18,4
  8090fc:	ac400007 	ldb	r17,0(r21)
  809100:	003f9706 	br	808f60 <__alt_data_end+0xff808f60>
  809104:	00800c04 	movi	r2,48
  809108:	d9002d17 	ldw	r4,180(sp)
  80910c:	d9402917 	ldw	r5,164(sp)
  809110:	d8802705 	stb	r2,156(sp)
  809114:	00801e04 	movi	r2,120
  809118:	d8802745 	stb	r2,157(sp)
  80911c:	d8002785 	stb	zero,158(sp)
  809120:	20c00104 	addi	r3,r4,4
  809124:	24c00017 	ldw	r19,0(r4)
  809128:	002d883a 	mov	r22,zero
  80912c:	90800094 	ori	r2,r18,2
  809130:	28029a16 	blt	r5,zero,809b9c <___vfprintf_internal_r+0xdc0>
  809134:	00bfdfc4 	movi	r2,-129
  809138:	90a4703a 	and	r18,r18,r2
  80913c:	d8c02d15 	stw	r3,180(sp)
  809140:	94800094 	ori	r18,r18,2
  809144:	9802871e 	bne	r19,zero,809b64 <___vfprintf_internal_r+0xd88>
  809148:	00802074 	movhi	r2,129
  80914c:	1096d604 	addi	r2,r2,23384
  809150:	d8803915 	stw	r2,228(sp)
  809154:	04401e04 	movi	r17,120
  809158:	d8802917 	ldw	r2,164(sp)
  80915c:	0039883a 	mov	fp,zero
  809160:	1001e926 	beq	r2,zero,809908 <___vfprintf_internal_r+0xb2c>
  809164:	0027883a 	mov	r19,zero
  809168:	002d883a 	mov	r22,zero
  80916c:	00020506 	br	809984 <___vfprintf_internal_r+0xba8>
  809170:	d9002c17 	ldw	r4,176(sp)
  809174:	b80b883a 	mov	r5,r23
  809178:	080b0ac0 	call	80b0ac <__swsetup_r>
  80917c:	1005ac1e 	bne	r2,zero,80a830 <___vfprintf_internal_r+0x1a54>
  809180:	b880030b 	ldhu	r2,12(r23)
  809184:	00c00284 	movi	r3,10
  809188:	1080068c 	andi	r2,r2,26
  80918c:	10ff3c1e 	bne	r2,r3,808e80 <__alt_data_end+0xff808e80>
  809190:	b880038f 	ldh	r2,14(r23)
  809194:	103f3a16 	blt	r2,zero,808e80 <__alt_data_end+0xff808e80>
  809198:	d9c02d17 	ldw	r7,180(sp)
  80919c:	d9002c17 	ldw	r4,176(sp)
  8091a0:	a80d883a 	mov	r6,r21
  8091a4:	b80b883a 	mov	r5,r23
  8091a8:	080aff00 	call	80aff0 <__sbprintf>
  8091ac:	00001106 	br	8091f4 <___vfprintf_internal_r+0x418>
  8091b0:	d9002c17 	ldw	r4,176(sp)
  8091b4:	d9801e04 	addi	r6,sp,120
  8091b8:	b80b883a 	mov	r5,r23
  8091bc:	08103d80 	call	8103d8 <__sprint_r>
  8091c0:	1000081e 	bne	r2,zero,8091e4 <___vfprintf_internal_r+0x408>
  8091c4:	da000404 	addi	r8,sp,16
  8091c8:	003f5306 	br	808f18 <__alt_data_end+0xff808f18>
  8091cc:	d8802017 	ldw	r2,128(sp)
  8091d0:	10000426 	beq	r2,zero,8091e4 <___vfprintf_internal_r+0x408>
  8091d4:	d9002c17 	ldw	r4,176(sp)
  8091d8:	d9801e04 	addi	r6,sp,120
  8091dc:	b80b883a 	mov	r5,r23
  8091e0:	08103d80 	call	8103d8 <__sprint_r>
  8091e4:	b880030b 	ldhu	r2,12(r23)
  8091e8:	1080100c 	andi	r2,r2,64
  8091ec:	1005901e 	bne	r2,zero,80a830 <___vfprintf_internal_r+0x1a54>
  8091f0:	d8802f17 	ldw	r2,188(sp)
  8091f4:	dfc04717 	ldw	ra,284(sp)
  8091f8:	df004617 	ldw	fp,280(sp)
  8091fc:	ddc04517 	ldw	r23,276(sp)
  809200:	dd804417 	ldw	r22,272(sp)
  809204:	dd404317 	ldw	r21,268(sp)
  809208:	dd004217 	ldw	r20,264(sp)
  80920c:	dcc04117 	ldw	r19,260(sp)
  809210:	dc804017 	ldw	r18,256(sp)
  809214:	dc403f17 	ldw	r17,252(sp)
  809218:	dc003e17 	ldw	r16,248(sp)
  80921c:	dec04804 	addi	sp,sp,288
  809220:	f800283a 	ret
  809224:	d9002c17 	ldw	r4,176(sp)
  809228:	080d0800 	call	80d080 <__sinit>
  80922c:	003f0406 	br	808e40 <__alt_data_end+0xff808e40>
  809230:	d8802d17 	ldw	r2,180(sp)
  809234:	d9002d17 	ldw	r4,180(sp)
  809238:	10800017 	ldw	r2,0(r2)
  80923c:	d8803115 	stw	r2,196(sp)
  809240:	20800104 	addi	r2,r4,4
  809244:	d9003117 	ldw	r4,196(sp)
  809248:	203fa716 	blt	r4,zero,8090e8 <__alt_data_end+0xff8090e8>
  80924c:	d8802d15 	stw	r2,180(sp)
  809250:	ac400007 	ldb	r17,0(r21)
  809254:	003f4206 	br	808f60 <__alt_data_end+0xff808f60>
  809258:	ac400007 	ldb	r17,0(r21)
  80925c:	aac00044 	addi	r11,r21,1
  809260:	8a872826 	beq	r17,r10,80af04 <___vfprintf_internal_r+0x2128>
  809264:	88bff404 	addi	r2,r17,-48
  809268:	0009883a 	mov	r4,zero
  80926c:	30867d36 	bltu	r6,r2,80ac64 <___vfprintf_internal_r+0x1e88>
  809270:	5c400007 	ldb	r17,0(r11)
  809274:	210002a4 	muli	r4,r4,10
  809278:	5d400044 	addi	r21,r11,1
  80927c:	a817883a 	mov	r11,r21
  809280:	2089883a 	add	r4,r4,r2
  809284:	88bff404 	addi	r2,r17,-48
  809288:	30bff92e 	bgeu	r6,r2,809270 <__alt_data_end+0xff809270>
  80928c:	2005c916 	blt	r4,zero,80a9b4 <___vfprintf_internal_r+0x1bd8>
  809290:	d9002915 	stw	r4,164(sp)
  809294:	003f3306 	br	808f64 <__alt_data_end+0xff808f64>
  809298:	94802014 	ori	r18,r18,128
  80929c:	ac400007 	ldb	r17,0(r21)
  8092a0:	003f2f06 	br	808f60 <__alt_data_end+0xff808f60>
  8092a4:	a809883a 	mov	r4,r21
  8092a8:	d8003115 	stw	zero,196(sp)
  8092ac:	88bff404 	addi	r2,r17,-48
  8092b0:	0017883a 	mov	r11,zero
  8092b4:	24400007 	ldb	r17,0(r4)
  8092b8:	5ac002a4 	muli	r11,r11,10
  8092bc:	ad400044 	addi	r21,r21,1
  8092c0:	a809883a 	mov	r4,r21
  8092c4:	12d7883a 	add	r11,r2,r11
  8092c8:	88bff404 	addi	r2,r17,-48
  8092cc:	30bff92e 	bgeu	r6,r2,8092b4 <__alt_data_end+0xff8092b4>
  8092d0:	dac03115 	stw	r11,196(sp)
  8092d4:	003f2306 	br	808f64 <__alt_data_end+0xff808f64>
  8092d8:	18c03fcc 	andi	r3,r3,255
  8092dc:	18072b1e 	bne	r3,zero,80af8c <___vfprintf_internal_r+0x21b0>
  8092e0:	94800414 	ori	r18,r18,16
  8092e4:	9080080c 	andi	r2,r18,32
  8092e8:	10037b26 	beq	r2,zero,80a0d8 <___vfprintf_internal_r+0x12fc>
  8092ec:	d9402d17 	ldw	r5,180(sp)
  8092f0:	28800117 	ldw	r2,4(r5)
  8092f4:	2cc00017 	ldw	r19,0(r5)
  8092f8:	29400204 	addi	r5,r5,8
  8092fc:	d9402d15 	stw	r5,180(sp)
  809300:	102d883a 	mov	r22,r2
  809304:	10044b16 	blt	r2,zero,80a434 <___vfprintf_internal_r+0x1658>
  809308:	d9402917 	ldw	r5,164(sp)
  80930c:	df002783 	ldbu	fp,158(sp)
  809310:	2803bc16 	blt	r5,zero,80a204 <___vfprintf_internal_r+0x1428>
  809314:	00ffdfc4 	movi	r3,-129
  809318:	9d84b03a 	or	r2,r19,r22
  80931c:	90e4703a 	and	r18,r18,r3
  809320:	10017726 	beq	r2,zero,809900 <___vfprintf_internal_r+0xb24>
  809324:	b0038326 	beq	r22,zero,80a134 <___vfprintf_internal_r+0x1358>
  809328:	dc402a15 	stw	r17,168(sp)
  80932c:	dc001e04 	addi	r16,sp,120
  809330:	b023883a 	mov	r17,r22
  809334:	402d883a 	mov	r22,r8
  809338:	9809883a 	mov	r4,r19
  80933c:	880b883a 	mov	r5,r17
  809340:	01800284 	movi	r6,10
  809344:	000f883a 	mov	r7,zero
  809348:	08127d00 	call	8127d0 <__umoddi3>
  80934c:	10800c04 	addi	r2,r2,48
  809350:	843fffc4 	addi	r16,r16,-1
  809354:	9809883a 	mov	r4,r19
  809358:	880b883a 	mov	r5,r17
  80935c:	80800005 	stb	r2,0(r16)
  809360:	01800284 	movi	r6,10
  809364:	000f883a 	mov	r7,zero
  809368:	08122580 	call	812258 <__udivdi3>
  80936c:	1027883a 	mov	r19,r2
  809370:	10c4b03a 	or	r2,r2,r3
  809374:	1823883a 	mov	r17,r3
  809378:	103fef1e 	bne	r2,zero,809338 <__alt_data_end+0xff809338>
  80937c:	d8c02817 	ldw	r3,160(sp)
  809380:	dc402a17 	ldw	r17,168(sp)
  809384:	b011883a 	mov	r8,r22
  809388:	1c07c83a 	sub	r3,r3,r16
  80938c:	d8c02e15 	stw	r3,184(sp)
  809390:	00005906 	br	8094f8 <___vfprintf_internal_r+0x71c>
  809394:	18c03fcc 	andi	r3,r3,255
  809398:	1806fa1e 	bne	r3,zero,80af84 <___vfprintf_internal_r+0x21a8>
  80939c:	9080020c 	andi	r2,r18,8
  8093a0:	10048a26 	beq	r2,zero,80a5cc <___vfprintf_internal_r+0x17f0>
  8093a4:	d8c02d17 	ldw	r3,180(sp)
  8093a8:	d9002d17 	ldw	r4,180(sp)
  8093ac:	d9402d17 	ldw	r5,180(sp)
  8093b0:	18c00017 	ldw	r3,0(r3)
  8093b4:	21000117 	ldw	r4,4(r4)
  8093b8:	29400204 	addi	r5,r5,8
  8093bc:	d8c03615 	stw	r3,216(sp)
  8093c0:	d9003815 	stw	r4,224(sp)
  8093c4:	d9402d15 	stw	r5,180(sp)
  8093c8:	d9003617 	ldw	r4,216(sp)
  8093cc:	d9403817 	ldw	r5,224(sp)
  8093d0:	da003d15 	stw	r8,244(sp)
  8093d4:	04000044 	movi	r16,1
  8093d8:	080fffc0 	call	80fffc <__fpclassifyd>
  8093dc:	da003d17 	ldw	r8,244(sp)
  8093e0:	14041f1e 	bne	r2,r16,80a460 <___vfprintf_internal_r+0x1684>
  8093e4:	d9003617 	ldw	r4,216(sp)
  8093e8:	d9403817 	ldw	r5,224(sp)
  8093ec:	000d883a 	mov	r6,zero
  8093f0:	000f883a 	mov	r7,zero
  8093f4:	0812d080 	call	812d08 <__ledf2>
  8093f8:	da003d17 	ldw	r8,244(sp)
  8093fc:	1005be16 	blt	r2,zero,80aaf8 <___vfprintf_internal_r+0x1d1c>
  809400:	df002783 	ldbu	fp,158(sp)
  809404:	008011c4 	movi	r2,71
  809408:	1445330e 	bge	r2,r17,80a8d8 <___vfprintf_internal_r+0x1afc>
  80940c:	04002074 	movhi	r16,129
  809410:	8416ce04 	addi	r16,r16,23352
  809414:	00c000c4 	movi	r3,3
  809418:	00bfdfc4 	movi	r2,-129
  80941c:	d8c02a15 	stw	r3,168(sp)
  809420:	90a4703a 	and	r18,r18,r2
  809424:	d8c02e15 	stw	r3,184(sp)
  809428:	d8002915 	stw	zero,164(sp)
  80942c:	d8003215 	stw	zero,200(sp)
  809430:	00003706 	br	809510 <___vfprintf_internal_r+0x734>
  809434:	94800214 	ori	r18,r18,8
  809438:	ac400007 	ldb	r17,0(r21)
  80943c:	003ec806 	br	808f60 <__alt_data_end+0xff808f60>
  809440:	18c03fcc 	andi	r3,r3,255
  809444:	1806db1e 	bne	r3,zero,80afb4 <___vfprintf_internal_r+0x21d8>
  809448:	94800414 	ori	r18,r18,16
  80944c:	9080080c 	andi	r2,r18,32
  809450:	1002d826 	beq	r2,zero,809fb4 <___vfprintf_internal_r+0x11d8>
  809454:	d9402d17 	ldw	r5,180(sp)
  809458:	d8c02917 	ldw	r3,164(sp)
  80945c:	d8002785 	stb	zero,158(sp)
  809460:	28800204 	addi	r2,r5,8
  809464:	2cc00017 	ldw	r19,0(r5)
  809468:	2d800117 	ldw	r22,4(r5)
  80946c:	18048f16 	blt	r3,zero,80a6ac <___vfprintf_internal_r+0x18d0>
  809470:	013fdfc4 	movi	r4,-129
  809474:	9d86b03a 	or	r3,r19,r22
  809478:	d8802d15 	stw	r2,180(sp)
  80947c:	9124703a 	and	r18,r18,r4
  809480:	1802d91e 	bne	r3,zero,809fe8 <___vfprintf_internal_r+0x120c>
  809484:	d8c02917 	ldw	r3,164(sp)
  809488:	0039883a 	mov	fp,zero
  80948c:	1805c326 	beq	r3,zero,80ab9c <___vfprintf_internal_r+0x1dc0>
  809490:	0027883a 	mov	r19,zero
  809494:	002d883a 	mov	r22,zero
  809498:	dc001e04 	addi	r16,sp,120
  80949c:	9806d0fa 	srli	r3,r19,3
  8094a0:	b008977a 	slli	r4,r22,29
  8094a4:	b02cd0fa 	srli	r22,r22,3
  8094a8:	9cc001cc 	andi	r19,r19,7
  8094ac:	98800c04 	addi	r2,r19,48
  8094b0:	843fffc4 	addi	r16,r16,-1
  8094b4:	20e6b03a 	or	r19,r4,r3
  8094b8:	80800005 	stb	r2,0(r16)
  8094bc:	9d86b03a 	or	r3,r19,r22
  8094c0:	183ff61e 	bne	r3,zero,80949c <__alt_data_end+0xff80949c>
  8094c4:	90c0004c 	andi	r3,r18,1
  8094c8:	18013b26 	beq	r3,zero,8099b8 <___vfprintf_internal_r+0xbdc>
  8094cc:	10803fcc 	andi	r2,r2,255
  8094d0:	1080201c 	xori	r2,r2,128
  8094d4:	10bfe004 	addi	r2,r2,-128
  8094d8:	00c00c04 	movi	r3,48
  8094dc:	10c13626 	beq	r2,r3,8099b8 <___vfprintf_internal_r+0xbdc>
  8094e0:	80ffffc5 	stb	r3,-1(r16)
  8094e4:	d8c02817 	ldw	r3,160(sp)
  8094e8:	80bfffc4 	addi	r2,r16,-1
  8094ec:	1021883a 	mov	r16,r2
  8094f0:	1887c83a 	sub	r3,r3,r2
  8094f4:	d8c02e15 	stw	r3,184(sp)
  8094f8:	d8802e17 	ldw	r2,184(sp)
  8094fc:	d9002917 	ldw	r4,164(sp)
  809500:	1100010e 	bge	r2,r4,809508 <___vfprintf_internal_r+0x72c>
  809504:	2005883a 	mov	r2,r4
  809508:	d8802a15 	stw	r2,168(sp)
  80950c:	d8003215 	stw	zero,200(sp)
  809510:	e7003fcc 	andi	fp,fp,255
  809514:	e700201c 	xori	fp,fp,128
  809518:	e73fe004 	addi	fp,fp,-128
  80951c:	e0000326 	beq	fp,zero,80952c <___vfprintf_internal_r+0x750>
  809520:	d8c02a17 	ldw	r3,168(sp)
  809524:	18c00044 	addi	r3,r3,1
  809528:	d8c02a15 	stw	r3,168(sp)
  80952c:	90c0008c 	andi	r3,r18,2
  809530:	d8c02b15 	stw	r3,172(sp)
  809534:	18000326 	beq	r3,zero,809544 <___vfprintf_internal_r+0x768>
  809538:	d8c02a17 	ldw	r3,168(sp)
  80953c:	18c00084 	addi	r3,r3,2
  809540:	d8c02a15 	stw	r3,168(sp)
  809544:	90c0210c 	andi	r3,r18,132
  809548:	d8c03015 	stw	r3,192(sp)
  80954c:	1801a31e 	bne	r3,zero,809bdc <___vfprintf_internal_r+0xe00>
  809550:	d9003117 	ldw	r4,196(sp)
  809554:	d8c02a17 	ldw	r3,168(sp)
  809558:	20e7c83a 	sub	r19,r4,r3
  80955c:	04c19f0e 	bge	zero,r19,809bdc <___vfprintf_internal_r+0xe00>
  809560:	02400404 	movi	r9,16
  809564:	d8c02017 	ldw	r3,128(sp)
  809568:	d8801f17 	ldw	r2,124(sp)
  80956c:	4cc50d0e 	bge	r9,r19,80a9a4 <___vfprintf_internal_r+0x1bc8>
  809570:	01402074 	movhi	r5,129
  809574:	2956e184 	addi	r5,r5,23430
  809578:	dc403b15 	stw	r17,236(sp)
  80957c:	d9403515 	stw	r5,212(sp)
  809580:	9823883a 	mov	r17,r19
  809584:	482d883a 	mov	r22,r9
  809588:	9027883a 	mov	r19,r18
  80958c:	070001c4 	movi	fp,7
  809590:	8025883a 	mov	r18,r16
  809594:	dc002c17 	ldw	r16,176(sp)
  809598:	00000306 	br	8095a8 <___vfprintf_internal_r+0x7cc>
  80959c:	8c7ffc04 	addi	r17,r17,-16
  8095a0:	42000204 	addi	r8,r8,8
  8095a4:	b440130e 	bge	r22,r17,8095f4 <___vfprintf_internal_r+0x818>
  8095a8:	01002074 	movhi	r4,129
  8095ac:	18c00404 	addi	r3,r3,16
  8095b0:	10800044 	addi	r2,r2,1
  8095b4:	2116e184 	addi	r4,r4,23430
  8095b8:	41000015 	stw	r4,0(r8)
  8095bc:	45800115 	stw	r22,4(r8)
  8095c0:	d8c02015 	stw	r3,128(sp)
  8095c4:	d8801f15 	stw	r2,124(sp)
  8095c8:	e0bff40e 	bge	fp,r2,80959c <__alt_data_end+0xff80959c>
  8095cc:	d9801e04 	addi	r6,sp,120
  8095d0:	b80b883a 	mov	r5,r23
  8095d4:	8009883a 	mov	r4,r16
  8095d8:	08103d80 	call	8103d8 <__sprint_r>
  8095dc:	103f011e 	bne	r2,zero,8091e4 <__alt_data_end+0xff8091e4>
  8095e0:	8c7ffc04 	addi	r17,r17,-16
  8095e4:	d8c02017 	ldw	r3,128(sp)
  8095e8:	d8801f17 	ldw	r2,124(sp)
  8095ec:	da000404 	addi	r8,sp,16
  8095f0:	b47fed16 	blt	r22,r17,8095a8 <__alt_data_end+0xff8095a8>
  8095f4:	9021883a 	mov	r16,r18
  8095f8:	9825883a 	mov	r18,r19
  8095fc:	8827883a 	mov	r19,r17
  809600:	dc403b17 	ldw	r17,236(sp)
  809604:	d9403517 	ldw	r5,212(sp)
  809608:	98c7883a 	add	r3,r19,r3
  80960c:	10800044 	addi	r2,r2,1
  809610:	41400015 	stw	r5,0(r8)
  809614:	44c00115 	stw	r19,4(r8)
  809618:	d8c02015 	stw	r3,128(sp)
  80961c:	d8801f15 	stw	r2,124(sp)
  809620:	010001c4 	movi	r4,7
  809624:	2082a316 	blt	r4,r2,80a0b4 <___vfprintf_internal_r+0x12d8>
  809628:	df002787 	ldb	fp,158(sp)
  80962c:	42000204 	addi	r8,r8,8
  809630:	e0000c26 	beq	fp,zero,809664 <___vfprintf_internal_r+0x888>
  809634:	d8801f17 	ldw	r2,124(sp)
  809638:	d9002784 	addi	r4,sp,158
  80963c:	18c00044 	addi	r3,r3,1
  809640:	10800044 	addi	r2,r2,1
  809644:	41000015 	stw	r4,0(r8)
  809648:	01000044 	movi	r4,1
  80964c:	41000115 	stw	r4,4(r8)
  809650:	d8c02015 	stw	r3,128(sp)
  809654:	d8801f15 	stw	r2,124(sp)
  809658:	010001c4 	movi	r4,7
  80965c:	20823c16 	blt	r4,r2,809f50 <___vfprintf_internal_r+0x1174>
  809660:	42000204 	addi	r8,r8,8
  809664:	d8802b17 	ldw	r2,172(sp)
  809668:	10000c26 	beq	r2,zero,80969c <___vfprintf_internal_r+0x8c0>
  80966c:	d8801f17 	ldw	r2,124(sp)
  809670:	d9002704 	addi	r4,sp,156
  809674:	18c00084 	addi	r3,r3,2
  809678:	10800044 	addi	r2,r2,1
  80967c:	41000015 	stw	r4,0(r8)
  809680:	01000084 	movi	r4,2
  809684:	41000115 	stw	r4,4(r8)
  809688:	d8c02015 	stw	r3,128(sp)
  80968c:	d8801f15 	stw	r2,124(sp)
  809690:	010001c4 	movi	r4,7
  809694:	20823616 	blt	r4,r2,809f70 <___vfprintf_internal_r+0x1194>
  809698:	42000204 	addi	r8,r8,8
  80969c:	d9003017 	ldw	r4,192(sp)
  8096a0:	00802004 	movi	r2,128
  8096a4:	20819926 	beq	r4,r2,809d0c <___vfprintf_internal_r+0xf30>
  8096a8:	d9402917 	ldw	r5,164(sp)
  8096ac:	d8802e17 	ldw	r2,184(sp)
  8096b0:	28adc83a 	sub	r22,r5,r2
  8096b4:	0580310e 	bge	zero,r22,80977c <___vfprintf_internal_r+0x9a0>
  8096b8:	07000404 	movi	fp,16
  8096bc:	d8801f17 	ldw	r2,124(sp)
  8096c0:	e584140e 	bge	fp,r22,80a714 <___vfprintf_internal_r+0x1938>
  8096c4:	01402074 	movhi	r5,129
  8096c8:	2956dd84 	addi	r5,r5,23414
  8096cc:	dc402915 	stw	r17,164(sp)
  8096d0:	d9402b15 	stw	r5,172(sp)
  8096d4:	b023883a 	mov	r17,r22
  8096d8:	04c001c4 	movi	r19,7
  8096dc:	a82d883a 	mov	r22,r21
  8096e0:	902b883a 	mov	r21,r18
  8096e4:	8025883a 	mov	r18,r16
  8096e8:	dc002c17 	ldw	r16,176(sp)
  8096ec:	00000306 	br	8096fc <___vfprintf_internal_r+0x920>
  8096f0:	8c7ffc04 	addi	r17,r17,-16
  8096f4:	42000204 	addi	r8,r8,8
  8096f8:	e440110e 	bge	fp,r17,809740 <___vfprintf_internal_r+0x964>
  8096fc:	18c00404 	addi	r3,r3,16
  809700:	10800044 	addi	r2,r2,1
  809704:	45000015 	stw	r20,0(r8)
  809708:	47000115 	stw	fp,4(r8)
  80970c:	d8c02015 	stw	r3,128(sp)
  809710:	d8801f15 	stw	r2,124(sp)
  809714:	98bff60e 	bge	r19,r2,8096f0 <__alt_data_end+0xff8096f0>
  809718:	d9801e04 	addi	r6,sp,120
  80971c:	b80b883a 	mov	r5,r23
  809720:	8009883a 	mov	r4,r16
  809724:	08103d80 	call	8103d8 <__sprint_r>
  809728:	103eae1e 	bne	r2,zero,8091e4 <__alt_data_end+0xff8091e4>
  80972c:	8c7ffc04 	addi	r17,r17,-16
  809730:	d8c02017 	ldw	r3,128(sp)
  809734:	d8801f17 	ldw	r2,124(sp)
  809738:	da000404 	addi	r8,sp,16
  80973c:	e47fef16 	blt	fp,r17,8096fc <__alt_data_end+0xff8096fc>
  809740:	9021883a 	mov	r16,r18
  809744:	a825883a 	mov	r18,r21
  809748:	b02b883a 	mov	r21,r22
  80974c:	882d883a 	mov	r22,r17
  809750:	dc402917 	ldw	r17,164(sp)
  809754:	d9002b17 	ldw	r4,172(sp)
  809758:	1d87883a 	add	r3,r3,r22
  80975c:	10800044 	addi	r2,r2,1
  809760:	41000015 	stw	r4,0(r8)
  809764:	45800115 	stw	r22,4(r8)
  809768:	d8c02015 	stw	r3,128(sp)
  80976c:	d8801f15 	stw	r2,124(sp)
  809770:	010001c4 	movi	r4,7
  809774:	2081ee16 	blt	r4,r2,809f30 <___vfprintf_internal_r+0x1154>
  809778:	42000204 	addi	r8,r8,8
  80977c:	9080400c 	andi	r2,r18,256
  809780:	1001181e 	bne	r2,zero,809be4 <___vfprintf_internal_r+0xe08>
  809784:	d9402e17 	ldw	r5,184(sp)
  809788:	d8801f17 	ldw	r2,124(sp)
  80978c:	44000015 	stw	r16,0(r8)
  809790:	1947883a 	add	r3,r3,r5
  809794:	10800044 	addi	r2,r2,1
  809798:	41400115 	stw	r5,4(r8)
  80979c:	d8c02015 	stw	r3,128(sp)
  8097a0:	d8801f15 	stw	r2,124(sp)
  8097a4:	010001c4 	movi	r4,7
  8097a8:	2081d316 	blt	r4,r2,809ef8 <___vfprintf_internal_r+0x111c>
  8097ac:	42000204 	addi	r8,r8,8
  8097b0:	9480010c 	andi	r18,r18,4
  8097b4:	90003226 	beq	r18,zero,809880 <___vfprintf_internal_r+0xaa4>
  8097b8:	d9403117 	ldw	r5,196(sp)
  8097bc:	d8802a17 	ldw	r2,168(sp)
  8097c0:	28a1c83a 	sub	r16,r5,r2
  8097c4:	04002e0e 	bge	zero,r16,809880 <___vfprintf_internal_r+0xaa4>
  8097c8:	04400404 	movi	r17,16
  8097cc:	d8801f17 	ldw	r2,124(sp)
  8097d0:	8c04a20e 	bge	r17,r16,80aa5c <___vfprintf_internal_r+0x1c80>
  8097d4:	01402074 	movhi	r5,129
  8097d8:	2956e184 	addi	r5,r5,23430
  8097dc:	d9403515 	stw	r5,212(sp)
  8097e0:	048001c4 	movi	r18,7
  8097e4:	dcc02c17 	ldw	r19,176(sp)
  8097e8:	00000306 	br	8097f8 <___vfprintf_internal_r+0xa1c>
  8097ec:	843ffc04 	addi	r16,r16,-16
  8097f0:	42000204 	addi	r8,r8,8
  8097f4:	8c00130e 	bge	r17,r16,809844 <___vfprintf_internal_r+0xa68>
  8097f8:	01002074 	movhi	r4,129
  8097fc:	18c00404 	addi	r3,r3,16
  809800:	10800044 	addi	r2,r2,1
  809804:	2116e184 	addi	r4,r4,23430
  809808:	41000015 	stw	r4,0(r8)
  80980c:	44400115 	stw	r17,4(r8)
  809810:	d8c02015 	stw	r3,128(sp)
  809814:	d8801f15 	stw	r2,124(sp)
  809818:	90bff40e 	bge	r18,r2,8097ec <__alt_data_end+0xff8097ec>
  80981c:	d9801e04 	addi	r6,sp,120
  809820:	b80b883a 	mov	r5,r23
  809824:	9809883a 	mov	r4,r19
  809828:	08103d80 	call	8103d8 <__sprint_r>
  80982c:	103e6d1e 	bne	r2,zero,8091e4 <__alt_data_end+0xff8091e4>
  809830:	843ffc04 	addi	r16,r16,-16
  809834:	d8c02017 	ldw	r3,128(sp)
  809838:	d8801f17 	ldw	r2,124(sp)
  80983c:	da000404 	addi	r8,sp,16
  809840:	8c3fed16 	blt	r17,r16,8097f8 <__alt_data_end+0xff8097f8>
  809844:	d9403517 	ldw	r5,212(sp)
  809848:	1c07883a 	add	r3,r3,r16
  80984c:	10800044 	addi	r2,r2,1
  809850:	41400015 	stw	r5,0(r8)
  809854:	44000115 	stw	r16,4(r8)
  809858:	d8c02015 	stw	r3,128(sp)
  80985c:	d8801f15 	stw	r2,124(sp)
  809860:	010001c4 	movi	r4,7
  809864:	2080060e 	bge	r4,r2,809880 <___vfprintf_internal_r+0xaa4>
  809868:	d9002c17 	ldw	r4,176(sp)
  80986c:	d9801e04 	addi	r6,sp,120
  809870:	b80b883a 	mov	r5,r23
  809874:	08103d80 	call	8103d8 <__sprint_r>
  809878:	103e5a1e 	bne	r2,zero,8091e4 <__alt_data_end+0xff8091e4>
  80987c:	d8c02017 	ldw	r3,128(sp)
  809880:	d8803117 	ldw	r2,196(sp)
  809884:	d9002a17 	ldw	r4,168(sp)
  809888:	1100010e 	bge	r2,r4,809890 <___vfprintf_internal_r+0xab4>
  80988c:	2005883a 	mov	r2,r4
  809890:	d9402f17 	ldw	r5,188(sp)
  809894:	288b883a 	add	r5,r5,r2
  809898:	d9402f15 	stw	r5,188(sp)
  80989c:	18019e1e 	bne	r3,zero,809f18 <___vfprintf_internal_r+0x113c>
  8098a0:	a8800007 	ldb	r2,0(r21)
  8098a4:	d8001f15 	stw	zero,124(sp)
  8098a8:	da000404 	addi	r8,sp,16
  8098ac:	103d851e 	bne	r2,zero,808ec4 <__alt_data_end+0xff808ec4>
  8098b0:	a821883a 	mov	r16,r21
  8098b4:	003d9b06 	br	808f24 <__alt_data_end+0xff808f24>
  8098b8:	18c03fcc 	andi	r3,r3,255
  8098bc:	1805c11e 	bne	r3,zero,80afc4 <___vfprintf_internal_r+0x21e8>
  8098c0:	94800414 	ori	r18,r18,16
  8098c4:	9080080c 	andi	r2,r18,32
  8098c8:	10020c26 	beq	r2,zero,80a0fc <___vfprintf_internal_r+0x1320>
  8098cc:	d8802d17 	ldw	r2,180(sp)
  8098d0:	d9002917 	ldw	r4,164(sp)
  8098d4:	d8002785 	stb	zero,158(sp)
  8098d8:	10c00204 	addi	r3,r2,8
  8098dc:	14c00017 	ldw	r19,0(r2)
  8098e0:	15800117 	ldw	r22,4(r2)
  8098e4:	20040f16 	blt	r4,zero,80a924 <___vfprintf_internal_r+0x1b48>
  8098e8:	013fdfc4 	movi	r4,-129
  8098ec:	9d84b03a 	or	r2,r19,r22
  8098f0:	d8c02d15 	stw	r3,180(sp)
  8098f4:	9124703a 	and	r18,r18,r4
  8098f8:	0039883a 	mov	fp,zero
  8098fc:	103e891e 	bne	r2,zero,809324 <__alt_data_end+0xff809324>
  809900:	d9002917 	ldw	r4,164(sp)
  809904:	2002c11e 	bne	r4,zero,80a40c <___vfprintf_internal_r+0x1630>
  809908:	d8002915 	stw	zero,164(sp)
  80990c:	d8002e15 	stw	zero,184(sp)
  809910:	dc001e04 	addi	r16,sp,120
  809914:	003ef806 	br	8094f8 <__alt_data_end+0xff8094f8>
  809918:	18c03fcc 	andi	r3,r3,255
  80991c:	18059d1e 	bne	r3,zero,80af94 <___vfprintf_internal_r+0x21b8>
  809920:	01402074 	movhi	r5,129
  809924:	2956d104 	addi	r5,r5,23364
  809928:	d9403915 	stw	r5,228(sp)
  80992c:	9080080c 	andi	r2,r18,32
  809930:	10005226 	beq	r2,zero,809a7c <___vfprintf_internal_r+0xca0>
  809934:	d8802d17 	ldw	r2,180(sp)
  809938:	14c00017 	ldw	r19,0(r2)
  80993c:	15800117 	ldw	r22,4(r2)
  809940:	10800204 	addi	r2,r2,8
  809944:	d8802d15 	stw	r2,180(sp)
  809948:	9080004c 	andi	r2,r18,1
  80994c:	10019026 	beq	r2,zero,809f90 <___vfprintf_internal_r+0x11b4>
  809950:	9d84b03a 	or	r2,r19,r22
  809954:	10036926 	beq	r2,zero,80a6fc <___vfprintf_internal_r+0x1920>
  809958:	d8c02917 	ldw	r3,164(sp)
  80995c:	00800c04 	movi	r2,48
  809960:	d8802705 	stb	r2,156(sp)
  809964:	dc402745 	stb	r17,157(sp)
  809968:	d8002785 	stb	zero,158(sp)
  80996c:	90800094 	ori	r2,r18,2
  809970:	18045d16 	blt	r3,zero,80aae8 <___vfprintf_internal_r+0x1d0c>
  809974:	00bfdfc4 	movi	r2,-129
  809978:	90a4703a 	and	r18,r18,r2
  80997c:	94800094 	ori	r18,r18,2
  809980:	0039883a 	mov	fp,zero
  809984:	d9003917 	ldw	r4,228(sp)
  809988:	dc001e04 	addi	r16,sp,120
  80998c:	988003cc 	andi	r2,r19,15
  809990:	b006973a 	slli	r3,r22,28
  809994:	2085883a 	add	r2,r4,r2
  809998:	9826d13a 	srli	r19,r19,4
  80999c:	10800003 	ldbu	r2,0(r2)
  8099a0:	b02cd13a 	srli	r22,r22,4
  8099a4:	843fffc4 	addi	r16,r16,-1
  8099a8:	1ce6b03a 	or	r19,r3,r19
  8099ac:	80800005 	stb	r2,0(r16)
  8099b0:	9d84b03a 	or	r2,r19,r22
  8099b4:	103ff51e 	bne	r2,zero,80998c <__alt_data_end+0xff80998c>
  8099b8:	d8c02817 	ldw	r3,160(sp)
  8099bc:	1c07c83a 	sub	r3,r3,r16
  8099c0:	d8c02e15 	stw	r3,184(sp)
  8099c4:	003ecc06 	br	8094f8 <__alt_data_end+0xff8094f8>
  8099c8:	18c03fcc 	andi	r3,r3,255
  8099cc:	183e9f26 	beq	r3,zero,80944c <__alt_data_end+0xff80944c>
  8099d0:	d9c02785 	stb	r7,158(sp)
  8099d4:	003e9d06 	br	80944c <__alt_data_end+0xff80944c>
  8099d8:	00c00044 	movi	r3,1
  8099dc:	01c00ac4 	movi	r7,43
  8099e0:	ac400007 	ldb	r17,0(r21)
  8099e4:	003d5e06 	br	808f60 <__alt_data_end+0xff808f60>
  8099e8:	94800814 	ori	r18,r18,32
  8099ec:	ac400007 	ldb	r17,0(r21)
  8099f0:	003d5b06 	br	808f60 <__alt_data_end+0xff808f60>
  8099f4:	d8c02d17 	ldw	r3,180(sp)
  8099f8:	d8002785 	stb	zero,158(sp)
  8099fc:	1c000017 	ldw	r16,0(r3)
  809a00:	1cc00104 	addi	r19,r3,4
  809a04:	80041926 	beq	r16,zero,80aa6c <___vfprintf_internal_r+0x1c90>
  809a08:	d9002917 	ldw	r4,164(sp)
  809a0c:	2003d016 	blt	r4,zero,80a950 <___vfprintf_internal_r+0x1b74>
  809a10:	200d883a 	mov	r6,r4
  809a14:	000b883a 	mov	r5,zero
  809a18:	8009883a 	mov	r4,r16
  809a1c:	da003d15 	stw	r8,244(sp)
  809a20:	080e5ec0 	call	80e5ec <memchr>
  809a24:	da003d17 	ldw	r8,244(sp)
  809a28:	10045426 	beq	r2,zero,80ab7c <___vfprintf_internal_r+0x1da0>
  809a2c:	1405c83a 	sub	r2,r2,r16
  809a30:	d8802e15 	stw	r2,184(sp)
  809a34:	1003cc16 	blt	r2,zero,80a968 <___vfprintf_internal_r+0x1b8c>
  809a38:	df002783 	ldbu	fp,158(sp)
  809a3c:	d8802a15 	stw	r2,168(sp)
  809a40:	dcc02d15 	stw	r19,180(sp)
  809a44:	d8002915 	stw	zero,164(sp)
  809a48:	d8003215 	stw	zero,200(sp)
  809a4c:	003eb006 	br	809510 <__alt_data_end+0xff809510>
  809a50:	18c03fcc 	andi	r3,r3,255
  809a54:	183f9b26 	beq	r3,zero,8098c4 <__alt_data_end+0xff8098c4>
  809a58:	d9c02785 	stb	r7,158(sp)
  809a5c:	003f9906 	br	8098c4 <__alt_data_end+0xff8098c4>
  809a60:	18c03fcc 	andi	r3,r3,255
  809a64:	1805551e 	bne	r3,zero,80afbc <___vfprintf_internal_r+0x21e0>
  809a68:	01402074 	movhi	r5,129
  809a6c:	2956d604 	addi	r5,r5,23384
  809a70:	d9403915 	stw	r5,228(sp)
  809a74:	9080080c 	andi	r2,r18,32
  809a78:	103fae1e 	bne	r2,zero,809934 <__alt_data_end+0xff809934>
  809a7c:	9080040c 	andi	r2,r18,16
  809a80:	1002de26 	beq	r2,zero,80a5fc <___vfprintf_internal_r+0x1820>
  809a84:	d8c02d17 	ldw	r3,180(sp)
  809a88:	002d883a 	mov	r22,zero
  809a8c:	1cc00017 	ldw	r19,0(r3)
  809a90:	18c00104 	addi	r3,r3,4
  809a94:	d8c02d15 	stw	r3,180(sp)
  809a98:	003fab06 	br	809948 <__alt_data_end+0xff809948>
  809a9c:	38803fcc 	andi	r2,r7,255
  809aa0:	1080201c 	xori	r2,r2,128
  809aa4:	10bfe004 	addi	r2,r2,-128
  809aa8:	1002d21e 	bne	r2,zero,80a5f4 <___vfprintf_internal_r+0x1818>
  809aac:	00c00044 	movi	r3,1
  809ab0:	01c00804 	movi	r7,32
  809ab4:	ac400007 	ldb	r17,0(r21)
  809ab8:	003d2906 	br	808f60 <__alt_data_end+0xff808f60>
  809abc:	94800054 	ori	r18,r18,1
  809ac0:	ac400007 	ldb	r17,0(r21)
  809ac4:	003d2606 	br	808f60 <__alt_data_end+0xff808f60>
  809ac8:	18c03fcc 	andi	r3,r3,255
  809acc:	183e0526 	beq	r3,zero,8092e4 <__alt_data_end+0xff8092e4>
  809ad0:	d9c02785 	stb	r7,158(sp)
  809ad4:	003e0306 	br	8092e4 <__alt_data_end+0xff8092e4>
  809ad8:	94801014 	ori	r18,r18,64
  809adc:	ac400007 	ldb	r17,0(r21)
  809ae0:	003d1f06 	br	808f60 <__alt_data_end+0xff808f60>
  809ae4:	ac400007 	ldb	r17,0(r21)
  809ae8:	8a438726 	beq	r17,r9,80a908 <___vfprintf_internal_r+0x1b2c>
  809aec:	94800414 	ori	r18,r18,16
  809af0:	003d1b06 	br	808f60 <__alt_data_end+0xff808f60>
  809af4:	18c03fcc 	andi	r3,r3,255
  809af8:	1805341e 	bne	r3,zero,80afcc <___vfprintf_internal_r+0x21f0>
  809afc:	9080080c 	andi	r2,r18,32
  809b00:	1002cd26 	beq	r2,zero,80a638 <___vfprintf_internal_r+0x185c>
  809b04:	d9402d17 	ldw	r5,180(sp)
  809b08:	d9002f17 	ldw	r4,188(sp)
  809b0c:	28800017 	ldw	r2,0(r5)
  809b10:	2007d7fa 	srai	r3,r4,31
  809b14:	29400104 	addi	r5,r5,4
  809b18:	d9402d15 	stw	r5,180(sp)
  809b1c:	11000015 	stw	r4,0(r2)
  809b20:	10c00115 	stw	r3,4(r2)
  809b24:	003ce506 	br	808ebc <__alt_data_end+0xff808ebc>
  809b28:	d8c02d17 	ldw	r3,180(sp)
  809b2c:	d9002d17 	ldw	r4,180(sp)
  809b30:	d8002785 	stb	zero,158(sp)
  809b34:	18800017 	ldw	r2,0(r3)
  809b38:	21000104 	addi	r4,r4,4
  809b3c:	00c00044 	movi	r3,1
  809b40:	d8c02a15 	stw	r3,168(sp)
  809b44:	d8801405 	stb	r2,80(sp)
  809b48:	d9002d15 	stw	r4,180(sp)
  809b4c:	d8c02e15 	stw	r3,184(sp)
  809b50:	d8002915 	stw	zero,164(sp)
  809b54:	d8003215 	stw	zero,200(sp)
  809b58:	dc001404 	addi	r16,sp,80
  809b5c:	0039883a 	mov	fp,zero
  809b60:	003e7206 	br	80952c <__alt_data_end+0xff80952c>
  809b64:	01002074 	movhi	r4,129
  809b68:	2116d604 	addi	r4,r4,23384
  809b6c:	0039883a 	mov	fp,zero
  809b70:	d9003915 	stw	r4,228(sp)
  809b74:	04401e04 	movi	r17,120
  809b78:	003f8206 	br	809984 <__alt_data_end+0xff809984>
  809b7c:	18c03fcc 	andi	r3,r3,255
  809b80:	1805061e 	bne	r3,zero,80af9c <___vfprintf_internal_r+0x21c0>
  809b84:	883d9126 	beq	r17,zero,8091cc <__alt_data_end+0xff8091cc>
  809b88:	00c00044 	movi	r3,1
  809b8c:	d8c02a15 	stw	r3,168(sp)
  809b90:	dc401405 	stb	r17,80(sp)
  809b94:	d8002785 	stb	zero,158(sp)
  809b98:	003fec06 	br	809b4c <__alt_data_end+0xff809b4c>
  809b9c:	01402074 	movhi	r5,129
  809ba0:	2956d604 	addi	r5,r5,23384
  809ba4:	d9403915 	stw	r5,228(sp)
  809ba8:	d8c02d15 	stw	r3,180(sp)
  809bac:	1025883a 	mov	r18,r2
  809bb0:	04401e04 	movi	r17,120
  809bb4:	9d84b03a 	or	r2,r19,r22
  809bb8:	1000fc1e 	bne	r2,zero,809fac <___vfprintf_internal_r+0x11d0>
  809bbc:	0039883a 	mov	fp,zero
  809bc0:	00800084 	movi	r2,2
  809bc4:	10803fcc 	andi	r2,r2,255
  809bc8:	00c00044 	movi	r3,1
  809bcc:	10c20f26 	beq	r2,r3,80a40c <___vfprintf_internal_r+0x1630>
  809bd0:	00c00084 	movi	r3,2
  809bd4:	10fd6326 	beq	r2,r3,809164 <__alt_data_end+0xff809164>
  809bd8:	003e2d06 	br	809490 <__alt_data_end+0xff809490>
  809bdc:	d8c02017 	ldw	r3,128(sp)
  809be0:	003e9306 	br	809630 <__alt_data_end+0xff809630>
  809be4:	00801944 	movi	r2,101
  809be8:	14407e0e 	bge	r2,r17,809de4 <___vfprintf_internal_r+0x1008>
  809bec:	d9003617 	ldw	r4,216(sp)
  809bf0:	d9403817 	ldw	r5,224(sp)
  809bf4:	000d883a 	mov	r6,zero
  809bf8:	000f883a 	mov	r7,zero
  809bfc:	d8c03c15 	stw	r3,240(sp)
  809c00:	da003d15 	stw	r8,244(sp)
  809c04:	08076040 	call	807604 <__eqdf2>
  809c08:	d8c03c17 	ldw	r3,240(sp)
  809c0c:	da003d17 	ldw	r8,244(sp)
  809c10:	1000f71e 	bne	r2,zero,809ff0 <___vfprintf_internal_r+0x1214>
  809c14:	d8801f17 	ldw	r2,124(sp)
  809c18:	01002074 	movhi	r4,129
  809c1c:	2116dd04 	addi	r4,r4,23412
  809c20:	18c00044 	addi	r3,r3,1
  809c24:	10800044 	addi	r2,r2,1
  809c28:	41000015 	stw	r4,0(r8)
  809c2c:	01000044 	movi	r4,1
  809c30:	41000115 	stw	r4,4(r8)
  809c34:	d8c02015 	stw	r3,128(sp)
  809c38:	d8801f15 	stw	r2,124(sp)
  809c3c:	010001c4 	movi	r4,7
  809c40:	2082b816 	blt	r4,r2,80a724 <___vfprintf_internal_r+0x1948>
  809c44:	42000204 	addi	r8,r8,8
  809c48:	d8802617 	ldw	r2,152(sp)
  809c4c:	d9403317 	ldw	r5,204(sp)
  809c50:	11400216 	blt	r2,r5,809c5c <___vfprintf_internal_r+0xe80>
  809c54:	9080004c 	andi	r2,r18,1
  809c58:	103ed526 	beq	r2,zero,8097b0 <__alt_data_end+0xff8097b0>
  809c5c:	d8803717 	ldw	r2,220(sp)
  809c60:	d9003417 	ldw	r4,208(sp)
  809c64:	d9403717 	ldw	r5,220(sp)
  809c68:	1887883a 	add	r3,r3,r2
  809c6c:	d8801f17 	ldw	r2,124(sp)
  809c70:	41000015 	stw	r4,0(r8)
  809c74:	41400115 	stw	r5,4(r8)
  809c78:	10800044 	addi	r2,r2,1
  809c7c:	d8c02015 	stw	r3,128(sp)
  809c80:	d8801f15 	stw	r2,124(sp)
  809c84:	010001c4 	movi	r4,7
  809c88:	20832916 	blt	r4,r2,80a930 <___vfprintf_internal_r+0x1b54>
  809c8c:	42000204 	addi	r8,r8,8
  809c90:	d8803317 	ldw	r2,204(sp)
  809c94:	143fffc4 	addi	r16,r2,-1
  809c98:	043ec50e 	bge	zero,r16,8097b0 <__alt_data_end+0xff8097b0>
  809c9c:	04400404 	movi	r17,16
  809ca0:	d8801f17 	ldw	r2,124(sp)
  809ca4:	8c00880e 	bge	r17,r16,809ec8 <___vfprintf_internal_r+0x10ec>
  809ca8:	01402074 	movhi	r5,129
  809cac:	2956dd84 	addi	r5,r5,23414
  809cb0:	d9402b15 	stw	r5,172(sp)
  809cb4:	058001c4 	movi	r22,7
  809cb8:	dcc02c17 	ldw	r19,176(sp)
  809cbc:	00000306 	br	809ccc <___vfprintf_internal_r+0xef0>
  809cc0:	42000204 	addi	r8,r8,8
  809cc4:	843ffc04 	addi	r16,r16,-16
  809cc8:	8c00820e 	bge	r17,r16,809ed4 <___vfprintf_internal_r+0x10f8>
  809ccc:	18c00404 	addi	r3,r3,16
  809cd0:	10800044 	addi	r2,r2,1
  809cd4:	45000015 	stw	r20,0(r8)
  809cd8:	44400115 	stw	r17,4(r8)
  809cdc:	d8c02015 	stw	r3,128(sp)
  809ce0:	d8801f15 	stw	r2,124(sp)
  809ce4:	b0bff60e 	bge	r22,r2,809cc0 <__alt_data_end+0xff809cc0>
  809ce8:	d9801e04 	addi	r6,sp,120
  809cec:	b80b883a 	mov	r5,r23
  809cf0:	9809883a 	mov	r4,r19
  809cf4:	08103d80 	call	8103d8 <__sprint_r>
  809cf8:	103d3a1e 	bne	r2,zero,8091e4 <__alt_data_end+0xff8091e4>
  809cfc:	d8c02017 	ldw	r3,128(sp)
  809d00:	d8801f17 	ldw	r2,124(sp)
  809d04:	da000404 	addi	r8,sp,16
  809d08:	003fee06 	br	809cc4 <__alt_data_end+0xff809cc4>
  809d0c:	d9403117 	ldw	r5,196(sp)
  809d10:	d8802a17 	ldw	r2,168(sp)
  809d14:	28adc83a 	sub	r22,r5,r2
  809d18:	05be630e 	bge	zero,r22,8096a8 <__alt_data_end+0xff8096a8>
  809d1c:	07000404 	movi	fp,16
  809d20:	d8801f17 	ldw	r2,124(sp)
  809d24:	e5838f0e 	bge	fp,r22,80ab64 <___vfprintf_internal_r+0x1d88>
  809d28:	01402074 	movhi	r5,129
  809d2c:	2956dd84 	addi	r5,r5,23414
  809d30:	dc403015 	stw	r17,192(sp)
  809d34:	d9402b15 	stw	r5,172(sp)
  809d38:	b023883a 	mov	r17,r22
  809d3c:	04c001c4 	movi	r19,7
  809d40:	a82d883a 	mov	r22,r21
  809d44:	902b883a 	mov	r21,r18
  809d48:	8025883a 	mov	r18,r16
  809d4c:	dc002c17 	ldw	r16,176(sp)
  809d50:	00000306 	br	809d60 <___vfprintf_internal_r+0xf84>
  809d54:	8c7ffc04 	addi	r17,r17,-16
  809d58:	42000204 	addi	r8,r8,8
  809d5c:	e440110e 	bge	fp,r17,809da4 <___vfprintf_internal_r+0xfc8>
  809d60:	18c00404 	addi	r3,r3,16
  809d64:	10800044 	addi	r2,r2,1
  809d68:	45000015 	stw	r20,0(r8)
  809d6c:	47000115 	stw	fp,4(r8)
  809d70:	d8c02015 	stw	r3,128(sp)
  809d74:	d8801f15 	stw	r2,124(sp)
  809d78:	98bff60e 	bge	r19,r2,809d54 <__alt_data_end+0xff809d54>
  809d7c:	d9801e04 	addi	r6,sp,120
  809d80:	b80b883a 	mov	r5,r23
  809d84:	8009883a 	mov	r4,r16
  809d88:	08103d80 	call	8103d8 <__sprint_r>
  809d8c:	103d151e 	bne	r2,zero,8091e4 <__alt_data_end+0xff8091e4>
  809d90:	8c7ffc04 	addi	r17,r17,-16
  809d94:	d8c02017 	ldw	r3,128(sp)
  809d98:	d8801f17 	ldw	r2,124(sp)
  809d9c:	da000404 	addi	r8,sp,16
  809da0:	e47fef16 	blt	fp,r17,809d60 <__alt_data_end+0xff809d60>
  809da4:	9021883a 	mov	r16,r18
  809da8:	a825883a 	mov	r18,r21
  809dac:	b02b883a 	mov	r21,r22
  809db0:	882d883a 	mov	r22,r17
  809db4:	dc403017 	ldw	r17,192(sp)
  809db8:	d9002b17 	ldw	r4,172(sp)
  809dbc:	1d87883a 	add	r3,r3,r22
  809dc0:	10800044 	addi	r2,r2,1
  809dc4:	41000015 	stw	r4,0(r8)
  809dc8:	45800115 	stw	r22,4(r8)
  809dcc:	d8c02015 	stw	r3,128(sp)
  809dd0:	d8801f15 	stw	r2,124(sp)
  809dd4:	010001c4 	movi	r4,7
  809dd8:	20818e16 	blt	r4,r2,80a414 <___vfprintf_internal_r+0x1638>
  809ddc:	42000204 	addi	r8,r8,8
  809de0:	003e3106 	br	8096a8 <__alt_data_end+0xff8096a8>
  809de4:	d9403317 	ldw	r5,204(sp)
  809de8:	00800044 	movi	r2,1
  809dec:	18c00044 	addi	r3,r3,1
  809df0:	1141530e 	bge	r2,r5,80a340 <___vfprintf_internal_r+0x1564>
  809df4:	dc401f17 	ldw	r17,124(sp)
  809df8:	00800044 	movi	r2,1
  809dfc:	40800115 	stw	r2,4(r8)
  809e00:	8c400044 	addi	r17,r17,1
  809e04:	44000015 	stw	r16,0(r8)
  809e08:	d8c02015 	stw	r3,128(sp)
  809e0c:	dc401f15 	stw	r17,124(sp)
  809e10:	008001c4 	movi	r2,7
  809e14:	14416b16 	blt	r2,r17,80a3c4 <___vfprintf_internal_r+0x15e8>
  809e18:	42000204 	addi	r8,r8,8
  809e1c:	d8803717 	ldw	r2,220(sp)
  809e20:	d9003417 	ldw	r4,208(sp)
  809e24:	8c400044 	addi	r17,r17,1
  809e28:	10c7883a 	add	r3,r2,r3
  809e2c:	40800115 	stw	r2,4(r8)
  809e30:	41000015 	stw	r4,0(r8)
  809e34:	d8c02015 	stw	r3,128(sp)
  809e38:	dc401f15 	stw	r17,124(sp)
  809e3c:	008001c4 	movi	r2,7
  809e40:	14416916 	blt	r2,r17,80a3e8 <___vfprintf_internal_r+0x160c>
  809e44:	45800204 	addi	r22,r8,8
  809e48:	d9003617 	ldw	r4,216(sp)
  809e4c:	d9403817 	ldw	r5,224(sp)
  809e50:	000d883a 	mov	r6,zero
  809e54:	000f883a 	mov	r7,zero
  809e58:	d8c03c15 	stw	r3,240(sp)
  809e5c:	08076040 	call	807604 <__eqdf2>
  809e60:	d8c03c17 	ldw	r3,240(sp)
  809e64:	1000bc26 	beq	r2,zero,80a158 <___vfprintf_internal_r+0x137c>
  809e68:	d9403317 	ldw	r5,204(sp)
  809e6c:	84000044 	addi	r16,r16,1
  809e70:	8c400044 	addi	r17,r17,1
  809e74:	28bfffc4 	addi	r2,r5,-1
  809e78:	1887883a 	add	r3,r3,r2
  809e7c:	b0800115 	stw	r2,4(r22)
  809e80:	b4000015 	stw	r16,0(r22)
  809e84:	d8c02015 	stw	r3,128(sp)
  809e88:	dc401f15 	stw	r17,124(sp)
  809e8c:	008001c4 	movi	r2,7
  809e90:	14414316 	blt	r2,r17,80a3a0 <___vfprintf_internal_r+0x15c4>
  809e94:	b5800204 	addi	r22,r22,8
  809e98:	d9003a17 	ldw	r4,232(sp)
  809e9c:	df0022c4 	addi	fp,sp,139
  809ea0:	8c400044 	addi	r17,r17,1
  809ea4:	20c7883a 	add	r3,r4,r3
  809ea8:	b7000015 	stw	fp,0(r22)
  809eac:	b1000115 	stw	r4,4(r22)
  809eb0:	d8c02015 	stw	r3,128(sp)
  809eb4:	dc401f15 	stw	r17,124(sp)
  809eb8:	008001c4 	movi	r2,7
  809ebc:	14400e16 	blt	r2,r17,809ef8 <___vfprintf_internal_r+0x111c>
  809ec0:	b2000204 	addi	r8,r22,8
  809ec4:	003e3a06 	br	8097b0 <__alt_data_end+0xff8097b0>
  809ec8:	01002074 	movhi	r4,129
  809ecc:	2116dd84 	addi	r4,r4,23414
  809ed0:	d9002b15 	stw	r4,172(sp)
  809ed4:	d9002b17 	ldw	r4,172(sp)
  809ed8:	1c07883a 	add	r3,r3,r16
  809edc:	44000115 	stw	r16,4(r8)
  809ee0:	41000015 	stw	r4,0(r8)
  809ee4:	10800044 	addi	r2,r2,1
  809ee8:	d8c02015 	stw	r3,128(sp)
  809eec:	d8801f15 	stw	r2,124(sp)
  809ef0:	010001c4 	movi	r4,7
  809ef4:	20be2d0e 	bge	r4,r2,8097ac <__alt_data_end+0xff8097ac>
  809ef8:	d9002c17 	ldw	r4,176(sp)
  809efc:	d9801e04 	addi	r6,sp,120
  809f00:	b80b883a 	mov	r5,r23
  809f04:	08103d80 	call	8103d8 <__sprint_r>
  809f08:	103cb61e 	bne	r2,zero,8091e4 <__alt_data_end+0xff8091e4>
  809f0c:	d8c02017 	ldw	r3,128(sp)
  809f10:	da000404 	addi	r8,sp,16
  809f14:	003e2606 	br	8097b0 <__alt_data_end+0xff8097b0>
  809f18:	d9002c17 	ldw	r4,176(sp)
  809f1c:	d9801e04 	addi	r6,sp,120
  809f20:	b80b883a 	mov	r5,r23
  809f24:	08103d80 	call	8103d8 <__sprint_r>
  809f28:	103e5d26 	beq	r2,zero,8098a0 <__alt_data_end+0xff8098a0>
  809f2c:	003cad06 	br	8091e4 <__alt_data_end+0xff8091e4>
  809f30:	d9002c17 	ldw	r4,176(sp)
  809f34:	d9801e04 	addi	r6,sp,120
  809f38:	b80b883a 	mov	r5,r23
  809f3c:	08103d80 	call	8103d8 <__sprint_r>
  809f40:	103ca81e 	bne	r2,zero,8091e4 <__alt_data_end+0xff8091e4>
  809f44:	d8c02017 	ldw	r3,128(sp)
  809f48:	da000404 	addi	r8,sp,16
  809f4c:	003e0b06 	br	80977c <__alt_data_end+0xff80977c>
  809f50:	d9002c17 	ldw	r4,176(sp)
  809f54:	d9801e04 	addi	r6,sp,120
  809f58:	b80b883a 	mov	r5,r23
  809f5c:	08103d80 	call	8103d8 <__sprint_r>
  809f60:	103ca01e 	bne	r2,zero,8091e4 <__alt_data_end+0xff8091e4>
  809f64:	d8c02017 	ldw	r3,128(sp)
  809f68:	da000404 	addi	r8,sp,16
  809f6c:	003dbd06 	br	809664 <__alt_data_end+0xff809664>
  809f70:	d9002c17 	ldw	r4,176(sp)
  809f74:	d9801e04 	addi	r6,sp,120
  809f78:	b80b883a 	mov	r5,r23
  809f7c:	08103d80 	call	8103d8 <__sprint_r>
  809f80:	103c981e 	bne	r2,zero,8091e4 <__alt_data_end+0xff8091e4>
  809f84:	d8c02017 	ldw	r3,128(sp)
  809f88:	da000404 	addi	r8,sp,16
  809f8c:	003dc306 	br	80969c <__alt_data_end+0xff80969c>
  809f90:	d8802917 	ldw	r2,164(sp)
  809f94:	d8002785 	stb	zero,158(sp)
  809f98:	103f0616 	blt	r2,zero,809bb4 <__alt_data_end+0xff809bb4>
  809f9c:	00ffdfc4 	movi	r3,-129
  809fa0:	9d84b03a 	or	r2,r19,r22
  809fa4:	90e4703a 	and	r18,r18,r3
  809fa8:	103c6b26 	beq	r2,zero,809158 <__alt_data_end+0xff809158>
  809fac:	0039883a 	mov	fp,zero
  809fb0:	003e7406 	br	809984 <__alt_data_end+0xff809984>
  809fb4:	9080040c 	andi	r2,r18,16
  809fb8:	1001b326 	beq	r2,zero,80a688 <___vfprintf_internal_r+0x18ac>
  809fbc:	d9002d17 	ldw	r4,180(sp)
  809fc0:	d9402917 	ldw	r5,164(sp)
  809fc4:	d8002785 	stb	zero,158(sp)
  809fc8:	20800104 	addi	r2,r4,4
  809fcc:	24c00017 	ldw	r19,0(r4)
  809fd0:	002d883a 	mov	r22,zero
  809fd4:	2801b516 	blt	r5,zero,80a6ac <___vfprintf_internal_r+0x18d0>
  809fd8:	00ffdfc4 	movi	r3,-129
  809fdc:	d8802d15 	stw	r2,180(sp)
  809fe0:	90e4703a 	and	r18,r18,r3
  809fe4:	983d2726 	beq	r19,zero,809484 <__alt_data_end+0xff809484>
  809fe8:	0039883a 	mov	fp,zero
  809fec:	003d2a06 	br	809498 <__alt_data_end+0xff809498>
  809ff0:	dc402617 	ldw	r17,152(sp)
  809ff4:	0441d30e 	bge	zero,r17,80a744 <___vfprintf_internal_r+0x1968>
  809ff8:	dc403217 	ldw	r17,200(sp)
  809ffc:	d8803317 	ldw	r2,204(sp)
  80a000:	1440010e 	bge	r2,r17,80a008 <___vfprintf_internal_r+0x122c>
  80a004:	1023883a 	mov	r17,r2
  80a008:	04400a0e 	bge	zero,r17,80a034 <___vfprintf_internal_r+0x1258>
  80a00c:	d8801f17 	ldw	r2,124(sp)
  80a010:	1c47883a 	add	r3,r3,r17
  80a014:	44000015 	stw	r16,0(r8)
  80a018:	10800044 	addi	r2,r2,1
  80a01c:	44400115 	stw	r17,4(r8)
  80a020:	d8c02015 	stw	r3,128(sp)
  80a024:	d8801f15 	stw	r2,124(sp)
  80a028:	010001c4 	movi	r4,7
  80a02c:	20826516 	blt	r4,r2,80a9c4 <___vfprintf_internal_r+0x1be8>
  80a030:	42000204 	addi	r8,r8,8
  80a034:	88026116 	blt	r17,zero,80a9bc <___vfprintf_internal_r+0x1be0>
  80a038:	d9003217 	ldw	r4,200(sp)
  80a03c:	2463c83a 	sub	r17,r4,r17
  80a040:	04407b0e 	bge	zero,r17,80a230 <___vfprintf_internal_r+0x1454>
  80a044:	05800404 	movi	r22,16
  80a048:	d8801f17 	ldw	r2,124(sp)
  80a04c:	b4419d0e 	bge	r22,r17,80a6c4 <___vfprintf_internal_r+0x18e8>
  80a050:	01002074 	movhi	r4,129
  80a054:	2116dd84 	addi	r4,r4,23414
  80a058:	d9002b15 	stw	r4,172(sp)
  80a05c:	070001c4 	movi	fp,7
  80a060:	dcc02c17 	ldw	r19,176(sp)
  80a064:	00000306 	br	80a074 <___vfprintf_internal_r+0x1298>
  80a068:	42000204 	addi	r8,r8,8
  80a06c:	8c7ffc04 	addi	r17,r17,-16
  80a070:	b441970e 	bge	r22,r17,80a6d0 <___vfprintf_internal_r+0x18f4>
  80a074:	18c00404 	addi	r3,r3,16
  80a078:	10800044 	addi	r2,r2,1
  80a07c:	45000015 	stw	r20,0(r8)
  80a080:	45800115 	stw	r22,4(r8)
  80a084:	d8c02015 	stw	r3,128(sp)
  80a088:	d8801f15 	stw	r2,124(sp)
  80a08c:	e0bff60e 	bge	fp,r2,80a068 <__alt_data_end+0xff80a068>
  80a090:	d9801e04 	addi	r6,sp,120
  80a094:	b80b883a 	mov	r5,r23
  80a098:	9809883a 	mov	r4,r19
  80a09c:	08103d80 	call	8103d8 <__sprint_r>
  80a0a0:	103c501e 	bne	r2,zero,8091e4 <__alt_data_end+0xff8091e4>
  80a0a4:	d8c02017 	ldw	r3,128(sp)
  80a0a8:	d8801f17 	ldw	r2,124(sp)
  80a0ac:	da000404 	addi	r8,sp,16
  80a0b0:	003fee06 	br	80a06c <__alt_data_end+0xff80a06c>
  80a0b4:	d9002c17 	ldw	r4,176(sp)
  80a0b8:	d9801e04 	addi	r6,sp,120
  80a0bc:	b80b883a 	mov	r5,r23
  80a0c0:	08103d80 	call	8103d8 <__sprint_r>
  80a0c4:	103c471e 	bne	r2,zero,8091e4 <__alt_data_end+0xff8091e4>
  80a0c8:	d8c02017 	ldw	r3,128(sp)
  80a0cc:	df002787 	ldb	fp,158(sp)
  80a0d0:	da000404 	addi	r8,sp,16
  80a0d4:	003d5606 	br	809630 <__alt_data_end+0xff809630>
  80a0d8:	9080040c 	andi	r2,r18,16
  80a0dc:	10016126 	beq	r2,zero,80a664 <___vfprintf_internal_r+0x1888>
  80a0e0:	d8802d17 	ldw	r2,180(sp)
  80a0e4:	14c00017 	ldw	r19,0(r2)
  80a0e8:	10800104 	addi	r2,r2,4
  80a0ec:	d8802d15 	stw	r2,180(sp)
  80a0f0:	982dd7fa 	srai	r22,r19,31
  80a0f4:	b005883a 	mov	r2,r22
  80a0f8:	003c8206 	br	809304 <__alt_data_end+0xff809304>
  80a0fc:	9080040c 	andi	r2,r18,16
  80a100:	10003526 	beq	r2,zero,80a1d8 <___vfprintf_internal_r+0x13fc>
  80a104:	d9402d17 	ldw	r5,180(sp)
  80a108:	d8c02917 	ldw	r3,164(sp)
  80a10c:	d8002785 	stb	zero,158(sp)
  80a110:	28800104 	addi	r2,r5,4
  80a114:	2cc00017 	ldw	r19,0(r5)
  80a118:	002d883a 	mov	r22,zero
  80a11c:	18003716 	blt	r3,zero,80a1fc <___vfprintf_internal_r+0x1420>
  80a120:	00ffdfc4 	movi	r3,-129
  80a124:	d8802d15 	stw	r2,180(sp)
  80a128:	90e4703a 	and	r18,r18,r3
  80a12c:	0039883a 	mov	fp,zero
  80a130:	983df326 	beq	r19,zero,809900 <__alt_data_end+0xff809900>
  80a134:	00800244 	movi	r2,9
  80a138:	14fc7b36 	bltu	r2,r19,809328 <__alt_data_end+0xff809328>
  80a13c:	d8c02817 	ldw	r3,160(sp)
  80a140:	dc001dc4 	addi	r16,sp,119
  80a144:	9cc00c04 	addi	r19,r19,48
  80a148:	1c07c83a 	sub	r3,r3,r16
  80a14c:	dcc01dc5 	stb	r19,119(sp)
  80a150:	d8c02e15 	stw	r3,184(sp)
  80a154:	003ce806 	br	8094f8 <__alt_data_end+0xff8094f8>
  80a158:	d8803317 	ldw	r2,204(sp)
  80a15c:	143fffc4 	addi	r16,r2,-1
  80a160:	043f4d0e 	bge	zero,r16,809e98 <__alt_data_end+0xff809e98>
  80a164:	07000404 	movi	fp,16
  80a168:	e400810e 	bge	fp,r16,80a370 <___vfprintf_internal_r+0x1594>
  80a16c:	01402074 	movhi	r5,129
  80a170:	2956dd84 	addi	r5,r5,23414
  80a174:	d9402b15 	stw	r5,172(sp)
  80a178:	01c001c4 	movi	r7,7
  80a17c:	dcc02c17 	ldw	r19,176(sp)
  80a180:	00000306 	br	80a190 <___vfprintf_internal_r+0x13b4>
  80a184:	b5800204 	addi	r22,r22,8
  80a188:	843ffc04 	addi	r16,r16,-16
  80a18c:	e4007b0e 	bge	fp,r16,80a37c <___vfprintf_internal_r+0x15a0>
  80a190:	18c00404 	addi	r3,r3,16
  80a194:	8c400044 	addi	r17,r17,1
  80a198:	b5000015 	stw	r20,0(r22)
  80a19c:	b7000115 	stw	fp,4(r22)
  80a1a0:	d8c02015 	stw	r3,128(sp)
  80a1a4:	dc401f15 	stw	r17,124(sp)
  80a1a8:	3c7ff60e 	bge	r7,r17,80a184 <__alt_data_end+0xff80a184>
  80a1ac:	d9801e04 	addi	r6,sp,120
  80a1b0:	b80b883a 	mov	r5,r23
  80a1b4:	9809883a 	mov	r4,r19
  80a1b8:	d9c03c15 	stw	r7,240(sp)
  80a1bc:	08103d80 	call	8103d8 <__sprint_r>
  80a1c0:	d9c03c17 	ldw	r7,240(sp)
  80a1c4:	103c071e 	bne	r2,zero,8091e4 <__alt_data_end+0xff8091e4>
  80a1c8:	d8c02017 	ldw	r3,128(sp)
  80a1cc:	dc401f17 	ldw	r17,124(sp)
  80a1d0:	dd800404 	addi	r22,sp,16
  80a1d4:	003fec06 	br	80a188 <__alt_data_end+0xff80a188>
  80a1d8:	9080100c 	andi	r2,r18,64
  80a1dc:	d8002785 	stb	zero,158(sp)
  80a1e0:	10010e26 	beq	r2,zero,80a61c <___vfprintf_internal_r+0x1840>
  80a1e4:	d9002d17 	ldw	r4,180(sp)
  80a1e8:	d9402917 	ldw	r5,164(sp)
  80a1ec:	002d883a 	mov	r22,zero
  80a1f0:	20800104 	addi	r2,r4,4
  80a1f4:	24c0000b 	ldhu	r19,0(r4)
  80a1f8:	283fc90e 	bge	r5,zero,80a120 <__alt_data_end+0xff80a120>
  80a1fc:	d8802d15 	stw	r2,180(sp)
  80a200:	0039883a 	mov	fp,zero
  80a204:	9d84b03a 	or	r2,r19,r22
  80a208:	103c461e 	bne	r2,zero,809324 <__alt_data_end+0xff809324>
  80a20c:	00800044 	movi	r2,1
  80a210:	003e6c06 	br	809bc4 <__alt_data_end+0xff809bc4>
  80a214:	d9002c17 	ldw	r4,176(sp)
  80a218:	d9801e04 	addi	r6,sp,120
  80a21c:	b80b883a 	mov	r5,r23
  80a220:	08103d80 	call	8103d8 <__sprint_r>
  80a224:	103bef1e 	bne	r2,zero,8091e4 <__alt_data_end+0xff8091e4>
  80a228:	d8c02017 	ldw	r3,128(sp)
  80a22c:	da000404 	addi	r8,sp,16
  80a230:	d9003217 	ldw	r4,200(sp)
  80a234:	d8802617 	ldw	r2,152(sp)
  80a238:	d9403317 	ldw	r5,204(sp)
  80a23c:	8123883a 	add	r17,r16,r4
  80a240:	11400216 	blt	r2,r5,80a24c <___vfprintf_internal_r+0x1470>
  80a244:	9100004c 	andi	r4,r18,1
  80a248:	20000d26 	beq	r4,zero,80a280 <___vfprintf_internal_r+0x14a4>
  80a24c:	d9003717 	ldw	r4,220(sp)
  80a250:	d9403417 	ldw	r5,208(sp)
  80a254:	1907883a 	add	r3,r3,r4
  80a258:	d9001f17 	ldw	r4,124(sp)
  80a25c:	41400015 	stw	r5,0(r8)
  80a260:	d9403717 	ldw	r5,220(sp)
  80a264:	21000044 	addi	r4,r4,1
  80a268:	d8c02015 	stw	r3,128(sp)
  80a26c:	41400115 	stw	r5,4(r8)
  80a270:	d9001f15 	stw	r4,124(sp)
  80a274:	014001c4 	movi	r5,7
  80a278:	2901e816 	blt	r5,r4,80aa1c <___vfprintf_internal_r+0x1c40>
  80a27c:	42000204 	addi	r8,r8,8
  80a280:	d9003317 	ldw	r4,204(sp)
  80a284:	8121883a 	add	r16,r16,r4
  80a288:	2085c83a 	sub	r2,r4,r2
  80a28c:	8461c83a 	sub	r16,r16,r17
  80a290:	1400010e 	bge	r2,r16,80a298 <___vfprintf_internal_r+0x14bc>
  80a294:	1021883a 	mov	r16,r2
  80a298:	04000a0e 	bge	zero,r16,80a2c4 <___vfprintf_internal_r+0x14e8>
  80a29c:	d9001f17 	ldw	r4,124(sp)
  80a2a0:	1c07883a 	add	r3,r3,r16
  80a2a4:	44400015 	stw	r17,0(r8)
  80a2a8:	21000044 	addi	r4,r4,1
  80a2ac:	44000115 	stw	r16,4(r8)
  80a2b0:	d8c02015 	stw	r3,128(sp)
  80a2b4:	d9001f15 	stw	r4,124(sp)
  80a2b8:	014001c4 	movi	r5,7
  80a2bc:	2901fb16 	blt	r5,r4,80aaac <___vfprintf_internal_r+0x1cd0>
  80a2c0:	42000204 	addi	r8,r8,8
  80a2c4:	8001f716 	blt	r16,zero,80aaa4 <___vfprintf_internal_r+0x1cc8>
  80a2c8:	1421c83a 	sub	r16,r2,r16
  80a2cc:	043d380e 	bge	zero,r16,8097b0 <__alt_data_end+0xff8097b0>
  80a2d0:	04400404 	movi	r17,16
  80a2d4:	d8801f17 	ldw	r2,124(sp)
  80a2d8:	8c3efb0e 	bge	r17,r16,809ec8 <__alt_data_end+0xff809ec8>
  80a2dc:	01402074 	movhi	r5,129
  80a2e0:	2956dd84 	addi	r5,r5,23414
  80a2e4:	d9402b15 	stw	r5,172(sp)
  80a2e8:	058001c4 	movi	r22,7
  80a2ec:	dcc02c17 	ldw	r19,176(sp)
  80a2f0:	00000306 	br	80a300 <___vfprintf_internal_r+0x1524>
  80a2f4:	42000204 	addi	r8,r8,8
  80a2f8:	843ffc04 	addi	r16,r16,-16
  80a2fc:	8c3ef50e 	bge	r17,r16,809ed4 <__alt_data_end+0xff809ed4>
  80a300:	18c00404 	addi	r3,r3,16
  80a304:	10800044 	addi	r2,r2,1
  80a308:	45000015 	stw	r20,0(r8)
  80a30c:	44400115 	stw	r17,4(r8)
  80a310:	d8c02015 	stw	r3,128(sp)
  80a314:	d8801f15 	stw	r2,124(sp)
  80a318:	b0bff60e 	bge	r22,r2,80a2f4 <__alt_data_end+0xff80a2f4>
  80a31c:	d9801e04 	addi	r6,sp,120
  80a320:	b80b883a 	mov	r5,r23
  80a324:	9809883a 	mov	r4,r19
  80a328:	08103d80 	call	8103d8 <__sprint_r>
  80a32c:	103bad1e 	bne	r2,zero,8091e4 <__alt_data_end+0xff8091e4>
  80a330:	d8c02017 	ldw	r3,128(sp)
  80a334:	d8801f17 	ldw	r2,124(sp)
  80a338:	da000404 	addi	r8,sp,16
  80a33c:	003fee06 	br	80a2f8 <__alt_data_end+0xff80a2f8>
  80a340:	9088703a 	and	r4,r18,r2
  80a344:	203eab1e 	bne	r4,zero,809df4 <__alt_data_end+0xff809df4>
  80a348:	dc401f17 	ldw	r17,124(sp)
  80a34c:	40800115 	stw	r2,4(r8)
  80a350:	44000015 	stw	r16,0(r8)
  80a354:	8c400044 	addi	r17,r17,1
  80a358:	d8c02015 	stw	r3,128(sp)
  80a35c:	dc401f15 	stw	r17,124(sp)
  80a360:	008001c4 	movi	r2,7
  80a364:	14400e16 	blt	r2,r17,80a3a0 <___vfprintf_internal_r+0x15c4>
  80a368:	45800204 	addi	r22,r8,8
  80a36c:	003eca06 	br	809e98 <__alt_data_end+0xff809e98>
  80a370:	01002074 	movhi	r4,129
  80a374:	2116dd84 	addi	r4,r4,23414
  80a378:	d9002b15 	stw	r4,172(sp)
  80a37c:	d8802b17 	ldw	r2,172(sp)
  80a380:	1c07883a 	add	r3,r3,r16
  80a384:	8c400044 	addi	r17,r17,1
  80a388:	b0800015 	stw	r2,0(r22)
  80a38c:	b4000115 	stw	r16,4(r22)
  80a390:	d8c02015 	stw	r3,128(sp)
  80a394:	dc401f15 	stw	r17,124(sp)
  80a398:	008001c4 	movi	r2,7
  80a39c:	147ebd0e 	bge	r2,r17,809e94 <__alt_data_end+0xff809e94>
  80a3a0:	d9002c17 	ldw	r4,176(sp)
  80a3a4:	d9801e04 	addi	r6,sp,120
  80a3a8:	b80b883a 	mov	r5,r23
  80a3ac:	08103d80 	call	8103d8 <__sprint_r>
  80a3b0:	103b8c1e 	bne	r2,zero,8091e4 <__alt_data_end+0xff8091e4>
  80a3b4:	d8c02017 	ldw	r3,128(sp)
  80a3b8:	dc401f17 	ldw	r17,124(sp)
  80a3bc:	dd800404 	addi	r22,sp,16
  80a3c0:	003eb506 	br	809e98 <__alt_data_end+0xff809e98>
  80a3c4:	d9002c17 	ldw	r4,176(sp)
  80a3c8:	d9801e04 	addi	r6,sp,120
  80a3cc:	b80b883a 	mov	r5,r23
  80a3d0:	08103d80 	call	8103d8 <__sprint_r>
  80a3d4:	103b831e 	bne	r2,zero,8091e4 <__alt_data_end+0xff8091e4>
  80a3d8:	d8c02017 	ldw	r3,128(sp)
  80a3dc:	dc401f17 	ldw	r17,124(sp)
  80a3e0:	da000404 	addi	r8,sp,16
  80a3e4:	003e8d06 	br	809e1c <__alt_data_end+0xff809e1c>
  80a3e8:	d9002c17 	ldw	r4,176(sp)
  80a3ec:	d9801e04 	addi	r6,sp,120
  80a3f0:	b80b883a 	mov	r5,r23
  80a3f4:	08103d80 	call	8103d8 <__sprint_r>
  80a3f8:	103b7a1e 	bne	r2,zero,8091e4 <__alt_data_end+0xff8091e4>
  80a3fc:	d8c02017 	ldw	r3,128(sp)
  80a400:	dc401f17 	ldw	r17,124(sp)
  80a404:	dd800404 	addi	r22,sp,16
  80a408:	003e8f06 	br	809e48 <__alt_data_end+0xff809e48>
  80a40c:	0027883a 	mov	r19,zero
  80a410:	003f4a06 	br	80a13c <__alt_data_end+0xff80a13c>
  80a414:	d9002c17 	ldw	r4,176(sp)
  80a418:	d9801e04 	addi	r6,sp,120
  80a41c:	b80b883a 	mov	r5,r23
  80a420:	08103d80 	call	8103d8 <__sprint_r>
  80a424:	103b6f1e 	bne	r2,zero,8091e4 <__alt_data_end+0xff8091e4>
  80a428:	d8c02017 	ldw	r3,128(sp)
  80a42c:	da000404 	addi	r8,sp,16
  80a430:	003c9d06 	br	8096a8 <__alt_data_end+0xff8096a8>
  80a434:	04e7c83a 	sub	r19,zero,r19
  80a438:	9804c03a 	cmpne	r2,r19,zero
  80a43c:	05adc83a 	sub	r22,zero,r22
  80a440:	b0adc83a 	sub	r22,r22,r2
  80a444:	d8802917 	ldw	r2,164(sp)
  80a448:	07000b44 	movi	fp,45
  80a44c:	df002785 	stb	fp,158(sp)
  80a450:	10017b16 	blt	r2,zero,80aa40 <___vfprintf_internal_r+0x1c64>
  80a454:	00bfdfc4 	movi	r2,-129
  80a458:	90a4703a 	and	r18,r18,r2
  80a45c:	003bb106 	br	809324 <__alt_data_end+0xff809324>
  80a460:	d9003617 	ldw	r4,216(sp)
  80a464:	d9403817 	ldw	r5,224(sp)
  80a468:	da003d15 	stw	r8,244(sp)
  80a46c:	080fffc0 	call	80fffc <__fpclassifyd>
  80a470:	da003d17 	ldw	r8,244(sp)
  80a474:	1000f026 	beq	r2,zero,80a838 <___vfprintf_internal_r+0x1a5c>
  80a478:	d9002917 	ldw	r4,164(sp)
  80a47c:	05bff7c4 	movi	r22,-33
  80a480:	00bfffc4 	movi	r2,-1
  80a484:	8dac703a 	and	r22,r17,r22
  80a488:	20820026 	beq	r4,r2,80ac8c <___vfprintf_internal_r+0x1eb0>
  80a48c:	008011c4 	movi	r2,71
  80a490:	b081f726 	beq	r22,r2,80ac70 <___vfprintf_internal_r+0x1e94>
  80a494:	d9003817 	ldw	r4,224(sp)
  80a498:	90c04014 	ori	r3,r18,256
  80a49c:	d8c02b15 	stw	r3,172(sp)
  80a4a0:	20021516 	blt	r4,zero,80acf8 <___vfprintf_internal_r+0x1f1c>
  80a4a4:	dcc03817 	ldw	r19,224(sp)
  80a4a8:	d8002a05 	stb	zero,168(sp)
  80a4ac:	00801984 	movi	r2,102
  80a4b0:	8881f926 	beq	r17,r2,80ac98 <___vfprintf_internal_r+0x1ebc>
  80a4b4:	00801184 	movi	r2,70
  80a4b8:	88821c26 	beq	r17,r2,80ad2c <___vfprintf_internal_r+0x1f50>
  80a4bc:	00801144 	movi	r2,69
  80a4c0:	b081ef26 	beq	r22,r2,80ac80 <___vfprintf_internal_r+0x1ea4>
  80a4c4:	d8c02917 	ldw	r3,164(sp)
  80a4c8:	d8802104 	addi	r2,sp,132
  80a4cc:	d8800315 	stw	r2,12(sp)
  80a4d0:	d9403617 	ldw	r5,216(sp)
  80a4d4:	d8802504 	addi	r2,sp,148
  80a4d8:	d9002c17 	ldw	r4,176(sp)
  80a4dc:	d8800215 	stw	r2,8(sp)
  80a4e0:	d8802604 	addi	r2,sp,152
  80a4e4:	d8c00015 	stw	r3,0(sp)
  80a4e8:	d8800115 	stw	r2,4(sp)
  80a4ec:	01c00084 	movi	r7,2
  80a4f0:	980d883a 	mov	r6,r19
  80a4f4:	d8c03c15 	stw	r3,240(sp)
  80a4f8:	da003d15 	stw	r8,244(sp)
  80a4fc:	080b4000 	call	80b400 <_dtoa_r>
  80a500:	1021883a 	mov	r16,r2
  80a504:	008019c4 	movi	r2,103
  80a508:	d8c03c17 	ldw	r3,240(sp)
  80a50c:	da003d17 	ldw	r8,244(sp)
  80a510:	88817126 	beq	r17,r2,80aad8 <___vfprintf_internal_r+0x1cfc>
  80a514:	008011c4 	movi	r2,71
  80a518:	88829226 	beq	r17,r2,80af64 <___vfprintf_internal_r+0x2188>
  80a51c:	80f9883a 	add	fp,r16,r3
  80a520:	d9003617 	ldw	r4,216(sp)
  80a524:	000d883a 	mov	r6,zero
  80a528:	000f883a 	mov	r7,zero
  80a52c:	980b883a 	mov	r5,r19
  80a530:	da003d15 	stw	r8,244(sp)
  80a534:	08076040 	call	807604 <__eqdf2>
  80a538:	da003d17 	ldw	r8,244(sp)
  80a53c:	10018d26 	beq	r2,zero,80ab74 <___vfprintf_internal_r+0x1d98>
  80a540:	d8802117 	ldw	r2,132(sp)
  80a544:	1700062e 	bgeu	r2,fp,80a560 <___vfprintf_internal_r+0x1784>
  80a548:	01000c04 	movi	r4,48
  80a54c:	10c00044 	addi	r3,r2,1
  80a550:	d8c02115 	stw	r3,132(sp)
  80a554:	11000005 	stb	r4,0(r2)
  80a558:	d8802117 	ldw	r2,132(sp)
  80a55c:	173ffb36 	bltu	r2,fp,80a54c <__alt_data_end+0xff80a54c>
  80a560:	1405c83a 	sub	r2,r2,r16
  80a564:	d8803315 	stw	r2,204(sp)
  80a568:	008011c4 	movi	r2,71
  80a56c:	b0817626 	beq	r22,r2,80ab48 <___vfprintf_internal_r+0x1d6c>
  80a570:	00801944 	movi	r2,101
  80a574:	1442810e 	bge	r2,r17,80af7c <___vfprintf_internal_r+0x21a0>
  80a578:	d8c02617 	ldw	r3,152(sp)
  80a57c:	00801984 	movi	r2,102
  80a580:	d8c03215 	stw	r3,200(sp)
  80a584:	8881fe26 	beq	r17,r2,80ad80 <___vfprintf_internal_r+0x1fa4>
  80a588:	d8c03217 	ldw	r3,200(sp)
  80a58c:	d9003317 	ldw	r4,204(sp)
  80a590:	1901dd16 	blt	r3,r4,80ad08 <___vfprintf_internal_r+0x1f2c>
  80a594:	9480004c 	andi	r18,r18,1
  80a598:	90022b1e 	bne	r18,zero,80ae48 <___vfprintf_internal_r+0x206c>
  80a59c:	1805883a 	mov	r2,r3
  80a5a0:	18028016 	blt	r3,zero,80afa4 <___vfprintf_internal_r+0x21c8>
  80a5a4:	d8c03217 	ldw	r3,200(sp)
  80a5a8:	044019c4 	movi	r17,103
  80a5ac:	d8c02e15 	stw	r3,184(sp)
  80a5b0:	df002a07 	ldb	fp,168(sp)
  80a5b4:	e001531e 	bne	fp,zero,80ab04 <___vfprintf_internal_r+0x1d28>
  80a5b8:	df002783 	ldbu	fp,158(sp)
  80a5bc:	d8802a15 	stw	r2,168(sp)
  80a5c0:	dc802b17 	ldw	r18,172(sp)
  80a5c4:	d8002915 	stw	zero,164(sp)
  80a5c8:	003bd106 	br	809510 <__alt_data_end+0xff809510>
  80a5cc:	d8802d17 	ldw	r2,180(sp)
  80a5d0:	d8c02d17 	ldw	r3,180(sp)
  80a5d4:	d9002d17 	ldw	r4,180(sp)
  80a5d8:	10800017 	ldw	r2,0(r2)
  80a5dc:	18c00117 	ldw	r3,4(r3)
  80a5e0:	21000204 	addi	r4,r4,8
  80a5e4:	d8803615 	stw	r2,216(sp)
  80a5e8:	d8c03815 	stw	r3,224(sp)
  80a5ec:	d9002d15 	stw	r4,180(sp)
  80a5f0:	003b7506 	br	8093c8 <__alt_data_end+0xff8093c8>
  80a5f4:	ac400007 	ldb	r17,0(r21)
  80a5f8:	003a5906 	br	808f60 <__alt_data_end+0xff808f60>
  80a5fc:	9080100c 	andi	r2,r18,64
  80a600:	1000a826 	beq	r2,zero,80a8a4 <___vfprintf_internal_r+0x1ac8>
  80a604:	d9002d17 	ldw	r4,180(sp)
  80a608:	002d883a 	mov	r22,zero
  80a60c:	24c0000b 	ldhu	r19,0(r4)
  80a610:	21000104 	addi	r4,r4,4
  80a614:	d9002d15 	stw	r4,180(sp)
  80a618:	003ccb06 	br	809948 <__alt_data_end+0xff809948>
  80a61c:	d8c02d17 	ldw	r3,180(sp)
  80a620:	d9002917 	ldw	r4,164(sp)
  80a624:	002d883a 	mov	r22,zero
  80a628:	18800104 	addi	r2,r3,4
  80a62c:	1cc00017 	ldw	r19,0(r3)
  80a630:	203ebb0e 	bge	r4,zero,80a120 <__alt_data_end+0xff80a120>
  80a634:	003ef106 	br	80a1fc <__alt_data_end+0xff80a1fc>
  80a638:	9080040c 	andi	r2,r18,16
  80a63c:	1000921e 	bne	r2,zero,80a888 <___vfprintf_internal_r+0x1aac>
  80a640:	9480100c 	andi	r18,r18,64
  80a644:	90013926 	beq	r18,zero,80ab2c <___vfprintf_internal_r+0x1d50>
  80a648:	d9002d17 	ldw	r4,180(sp)
  80a64c:	d9402f17 	ldw	r5,188(sp)
  80a650:	20800017 	ldw	r2,0(r4)
  80a654:	21000104 	addi	r4,r4,4
  80a658:	d9002d15 	stw	r4,180(sp)
  80a65c:	1140000d 	sth	r5,0(r2)
  80a660:	003a1606 	br	808ebc <__alt_data_end+0xff808ebc>
  80a664:	9080100c 	andi	r2,r18,64
  80a668:	10008026 	beq	r2,zero,80a86c <___vfprintf_internal_r+0x1a90>
  80a66c:	d8c02d17 	ldw	r3,180(sp)
  80a670:	1cc0000f 	ldh	r19,0(r3)
  80a674:	18c00104 	addi	r3,r3,4
  80a678:	d8c02d15 	stw	r3,180(sp)
  80a67c:	982dd7fa 	srai	r22,r19,31
  80a680:	b005883a 	mov	r2,r22
  80a684:	003b1f06 	br	809304 <__alt_data_end+0xff809304>
  80a688:	9080100c 	andi	r2,r18,64
  80a68c:	d8002785 	stb	zero,158(sp)
  80a690:	10008a1e 	bne	r2,zero,80a8bc <___vfprintf_internal_r+0x1ae0>
  80a694:	d9402d17 	ldw	r5,180(sp)
  80a698:	d8c02917 	ldw	r3,164(sp)
  80a69c:	002d883a 	mov	r22,zero
  80a6a0:	28800104 	addi	r2,r5,4
  80a6a4:	2cc00017 	ldw	r19,0(r5)
  80a6a8:	183e4b0e 	bge	r3,zero,809fd8 <__alt_data_end+0xff809fd8>
  80a6ac:	9d86b03a 	or	r3,r19,r22
  80a6b0:	d8802d15 	stw	r2,180(sp)
  80a6b4:	183e4c1e 	bne	r3,zero,809fe8 <__alt_data_end+0xff809fe8>
  80a6b8:	0039883a 	mov	fp,zero
  80a6bc:	0005883a 	mov	r2,zero
  80a6c0:	003d4006 	br	809bc4 <__alt_data_end+0xff809bc4>
  80a6c4:	01402074 	movhi	r5,129
  80a6c8:	2956dd84 	addi	r5,r5,23414
  80a6cc:	d9402b15 	stw	r5,172(sp)
  80a6d0:	d9402b17 	ldw	r5,172(sp)
  80a6d4:	1c47883a 	add	r3,r3,r17
  80a6d8:	10800044 	addi	r2,r2,1
  80a6dc:	41400015 	stw	r5,0(r8)
  80a6e0:	44400115 	stw	r17,4(r8)
  80a6e4:	d8c02015 	stw	r3,128(sp)
  80a6e8:	d8801f15 	stw	r2,124(sp)
  80a6ec:	010001c4 	movi	r4,7
  80a6f0:	20bec816 	blt	r4,r2,80a214 <__alt_data_end+0xff80a214>
  80a6f4:	42000204 	addi	r8,r8,8
  80a6f8:	003ecd06 	br	80a230 <__alt_data_end+0xff80a230>
  80a6fc:	d9002917 	ldw	r4,164(sp)
  80a700:	d8002785 	stb	zero,158(sp)
  80a704:	203d2d16 	blt	r4,zero,809bbc <__alt_data_end+0xff809bbc>
  80a708:	00bfdfc4 	movi	r2,-129
  80a70c:	90a4703a 	and	r18,r18,r2
  80a710:	003a9106 	br	809158 <__alt_data_end+0xff809158>
  80a714:	01002074 	movhi	r4,129
  80a718:	2116dd84 	addi	r4,r4,23414
  80a71c:	d9002b15 	stw	r4,172(sp)
  80a720:	003c0c06 	br	809754 <__alt_data_end+0xff809754>
  80a724:	d9002c17 	ldw	r4,176(sp)
  80a728:	d9801e04 	addi	r6,sp,120
  80a72c:	b80b883a 	mov	r5,r23
  80a730:	08103d80 	call	8103d8 <__sprint_r>
  80a734:	103aab1e 	bne	r2,zero,8091e4 <__alt_data_end+0xff8091e4>
  80a738:	d8c02017 	ldw	r3,128(sp)
  80a73c:	da000404 	addi	r8,sp,16
  80a740:	003d4106 	br	809c48 <__alt_data_end+0xff809c48>
  80a744:	d8801f17 	ldw	r2,124(sp)
  80a748:	01402074 	movhi	r5,129
  80a74c:	01000044 	movi	r4,1
  80a750:	18c00044 	addi	r3,r3,1
  80a754:	10800044 	addi	r2,r2,1
  80a758:	2956dd04 	addi	r5,r5,23412
  80a75c:	41000115 	stw	r4,4(r8)
  80a760:	41400015 	stw	r5,0(r8)
  80a764:	d8c02015 	stw	r3,128(sp)
  80a768:	d8801f15 	stw	r2,124(sp)
  80a76c:	010001c4 	movi	r4,7
  80a770:	20805c16 	blt	r4,r2,80a8e4 <___vfprintf_internal_r+0x1b08>
  80a774:	42000204 	addi	r8,r8,8
  80a778:	8800041e 	bne	r17,zero,80a78c <___vfprintf_internal_r+0x19b0>
  80a77c:	d8803317 	ldw	r2,204(sp)
  80a780:	1000021e 	bne	r2,zero,80a78c <___vfprintf_internal_r+0x19b0>
  80a784:	9080004c 	andi	r2,r18,1
  80a788:	103c0926 	beq	r2,zero,8097b0 <__alt_data_end+0xff8097b0>
  80a78c:	d9003717 	ldw	r4,220(sp)
  80a790:	d8801f17 	ldw	r2,124(sp)
  80a794:	d9403417 	ldw	r5,208(sp)
  80a798:	20c7883a 	add	r3,r4,r3
  80a79c:	10800044 	addi	r2,r2,1
  80a7a0:	41000115 	stw	r4,4(r8)
  80a7a4:	41400015 	stw	r5,0(r8)
  80a7a8:	d8c02015 	stw	r3,128(sp)
  80a7ac:	d8801f15 	stw	r2,124(sp)
  80a7b0:	010001c4 	movi	r4,7
  80a7b4:	20812116 	blt	r4,r2,80ac3c <___vfprintf_internal_r+0x1e60>
  80a7b8:	42000204 	addi	r8,r8,8
  80a7bc:	0463c83a 	sub	r17,zero,r17
  80a7c0:	0440730e 	bge	zero,r17,80a990 <___vfprintf_internal_r+0x1bb4>
  80a7c4:	05800404 	movi	r22,16
  80a7c8:	b440860e 	bge	r22,r17,80a9e4 <___vfprintf_internal_r+0x1c08>
  80a7cc:	01402074 	movhi	r5,129
  80a7d0:	2956dd84 	addi	r5,r5,23414
  80a7d4:	d9402b15 	stw	r5,172(sp)
  80a7d8:	070001c4 	movi	fp,7
  80a7dc:	dcc02c17 	ldw	r19,176(sp)
  80a7e0:	00000306 	br	80a7f0 <___vfprintf_internal_r+0x1a14>
  80a7e4:	42000204 	addi	r8,r8,8
  80a7e8:	8c7ffc04 	addi	r17,r17,-16
  80a7ec:	b440800e 	bge	r22,r17,80a9f0 <___vfprintf_internal_r+0x1c14>
  80a7f0:	18c00404 	addi	r3,r3,16
  80a7f4:	10800044 	addi	r2,r2,1
  80a7f8:	45000015 	stw	r20,0(r8)
  80a7fc:	45800115 	stw	r22,4(r8)
  80a800:	d8c02015 	stw	r3,128(sp)
  80a804:	d8801f15 	stw	r2,124(sp)
  80a808:	e0bff60e 	bge	fp,r2,80a7e4 <__alt_data_end+0xff80a7e4>
  80a80c:	d9801e04 	addi	r6,sp,120
  80a810:	b80b883a 	mov	r5,r23
  80a814:	9809883a 	mov	r4,r19
  80a818:	08103d80 	call	8103d8 <__sprint_r>
  80a81c:	103a711e 	bne	r2,zero,8091e4 <__alt_data_end+0xff8091e4>
  80a820:	d8c02017 	ldw	r3,128(sp)
  80a824:	d8801f17 	ldw	r2,124(sp)
  80a828:	da000404 	addi	r8,sp,16
  80a82c:	003fee06 	br	80a7e8 <__alt_data_end+0xff80a7e8>
  80a830:	00bfffc4 	movi	r2,-1
  80a834:	003a6f06 	br	8091f4 <__alt_data_end+0xff8091f4>
  80a838:	008011c4 	movi	r2,71
  80a83c:	1440b816 	blt	r2,r17,80ab20 <___vfprintf_internal_r+0x1d44>
  80a840:	04002074 	movhi	r16,129
  80a844:	8416cf04 	addi	r16,r16,23356
  80a848:	00c000c4 	movi	r3,3
  80a84c:	00bfdfc4 	movi	r2,-129
  80a850:	d8c02a15 	stw	r3,168(sp)
  80a854:	90a4703a 	and	r18,r18,r2
  80a858:	df002783 	ldbu	fp,158(sp)
  80a85c:	d8c02e15 	stw	r3,184(sp)
  80a860:	d8002915 	stw	zero,164(sp)
  80a864:	d8003215 	stw	zero,200(sp)
  80a868:	003b2906 	br	809510 <__alt_data_end+0xff809510>
  80a86c:	d9002d17 	ldw	r4,180(sp)
  80a870:	24c00017 	ldw	r19,0(r4)
  80a874:	21000104 	addi	r4,r4,4
  80a878:	d9002d15 	stw	r4,180(sp)
  80a87c:	982dd7fa 	srai	r22,r19,31
  80a880:	b005883a 	mov	r2,r22
  80a884:	003a9f06 	br	809304 <__alt_data_end+0xff809304>
  80a888:	d9402d17 	ldw	r5,180(sp)
  80a88c:	d8c02f17 	ldw	r3,188(sp)
  80a890:	28800017 	ldw	r2,0(r5)
  80a894:	29400104 	addi	r5,r5,4
  80a898:	d9402d15 	stw	r5,180(sp)
  80a89c:	10c00015 	stw	r3,0(r2)
  80a8a0:	00398606 	br	808ebc <__alt_data_end+0xff808ebc>
  80a8a4:	d9402d17 	ldw	r5,180(sp)
  80a8a8:	002d883a 	mov	r22,zero
  80a8ac:	2cc00017 	ldw	r19,0(r5)
  80a8b0:	29400104 	addi	r5,r5,4
  80a8b4:	d9402d15 	stw	r5,180(sp)
  80a8b8:	003c2306 	br	809948 <__alt_data_end+0xff809948>
  80a8bc:	d8c02d17 	ldw	r3,180(sp)
  80a8c0:	d9002917 	ldw	r4,164(sp)
  80a8c4:	002d883a 	mov	r22,zero
  80a8c8:	18800104 	addi	r2,r3,4
  80a8cc:	1cc0000b 	ldhu	r19,0(r3)
  80a8d0:	203dc10e 	bge	r4,zero,809fd8 <__alt_data_end+0xff809fd8>
  80a8d4:	003f7506 	br	80a6ac <__alt_data_end+0xff80a6ac>
  80a8d8:	04002074 	movhi	r16,129
  80a8dc:	8416cd04 	addi	r16,r16,23348
  80a8e0:	003acc06 	br	809414 <__alt_data_end+0xff809414>
  80a8e4:	d9002c17 	ldw	r4,176(sp)
  80a8e8:	d9801e04 	addi	r6,sp,120
  80a8ec:	b80b883a 	mov	r5,r23
  80a8f0:	08103d80 	call	8103d8 <__sprint_r>
  80a8f4:	103a3b1e 	bne	r2,zero,8091e4 <__alt_data_end+0xff8091e4>
  80a8f8:	dc402617 	ldw	r17,152(sp)
  80a8fc:	d8c02017 	ldw	r3,128(sp)
  80a900:	da000404 	addi	r8,sp,16
  80a904:	003f9c06 	br	80a778 <__alt_data_end+0xff80a778>
  80a908:	ac400043 	ldbu	r17,1(r21)
  80a90c:	94800814 	ori	r18,r18,32
  80a910:	ad400044 	addi	r21,r21,1
  80a914:	8c403fcc 	andi	r17,r17,255
  80a918:	8c40201c 	xori	r17,r17,128
  80a91c:	8c7fe004 	addi	r17,r17,-128
  80a920:	00398f06 	br	808f60 <__alt_data_end+0xff808f60>
  80a924:	d8c02d15 	stw	r3,180(sp)
  80a928:	0039883a 	mov	fp,zero
  80a92c:	003e3506 	br	80a204 <__alt_data_end+0xff80a204>
  80a930:	d9002c17 	ldw	r4,176(sp)
  80a934:	d9801e04 	addi	r6,sp,120
  80a938:	b80b883a 	mov	r5,r23
  80a93c:	08103d80 	call	8103d8 <__sprint_r>
  80a940:	103a281e 	bne	r2,zero,8091e4 <__alt_data_end+0xff8091e4>
  80a944:	d8c02017 	ldw	r3,128(sp)
  80a948:	da000404 	addi	r8,sp,16
  80a94c:	003cd006 	br	809c90 <__alt_data_end+0xff809c90>
  80a950:	8009883a 	mov	r4,r16
  80a954:	da003d15 	stw	r8,244(sp)
  80a958:	0808d440 	call	808d44 <strlen>
  80a95c:	d8802e15 	stw	r2,184(sp)
  80a960:	da003d17 	ldw	r8,244(sp)
  80a964:	103c340e 	bge	r2,zero,809a38 <__alt_data_end+0xff809a38>
  80a968:	0005883a 	mov	r2,zero
  80a96c:	003c3206 	br	809a38 <__alt_data_end+0xff809a38>
  80a970:	d9002c17 	ldw	r4,176(sp)
  80a974:	d9801e04 	addi	r6,sp,120
  80a978:	b80b883a 	mov	r5,r23
  80a97c:	08103d80 	call	8103d8 <__sprint_r>
  80a980:	103a181e 	bne	r2,zero,8091e4 <__alt_data_end+0xff8091e4>
  80a984:	d8c02017 	ldw	r3,128(sp)
  80a988:	d8801f17 	ldw	r2,124(sp)
  80a98c:	da000404 	addi	r8,sp,16
  80a990:	d9403317 	ldw	r5,204(sp)
  80a994:	10800044 	addi	r2,r2,1
  80a998:	44000015 	stw	r16,0(r8)
  80a99c:	28c7883a 	add	r3,r5,r3
  80a9a0:	003b7d06 	br	809798 <__alt_data_end+0xff809798>
  80a9a4:	01002074 	movhi	r4,129
  80a9a8:	2116e184 	addi	r4,r4,23430
  80a9ac:	d9003515 	stw	r4,212(sp)
  80a9b0:	003b1406 	br	809604 <__alt_data_end+0xff809604>
  80a9b4:	013fffc4 	movi	r4,-1
  80a9b8:	003a3506 	br	809290 <__alt_data_end+0xff809290>
  80a9bc:	0023883a 	mov	r17,zero
  80a9c0:	003d9d06 	br	80a038 <__alt_data_end+0xff80a038>
  80a9c4:	d9002c17 	ldw	r4,176(sp)
  80a9c8:	d9801e04 	addi	r6,sp,120
  80a9cc:	b80b883a 	mov	r5,r23
  80a9d0:	08103d80 	call	8103d8 <__sprint_r>
  80a9d4:	103a031e 	bne	r2,zero,8091e4 <__alt_data_end+0xff8091e4>
  80a9d8:	d8c02017 	ldw	r3,128(sp)
  80a9dc:	da000404 	addi	r8,sp,16
  80a9e0:	003d9406 	br	80a034 <__alt_data_end+0xff80a034>
  80a9e4:	01002074 	movhi	r4,129
  80a9e8:	2116dd84 	addi	r4,r4,23414
  80a9ec:	d9002b15 	stw	r4,172(sp)
  80a9f0:	d9002b17 	ldw	r4,172(sp)
  80a9f4:	1c47883a 	add	r3,r3,r17
  80a9f8:	10800044 	addi	r2,r2,1
  80a9fc:	41000015 	stw	r4,0(r8)
  80aa00:	44400115 	stw	r17,4(r8)
  80aa04:	d8c02015 	stw	r3,128(sp)
  80aa08:	d8801f15 	stw	r2,124(sp)
  80aa0c:	010001c4 	movi	r4,7
  80aa10:	20bfd716 	blt	r4,r2,80a970 <__alt_data_end+0xff80a970>
  80aa14:	42000204 	addi	r8,r8,8
  80aa18:	003fdd06 	br	80a990 <__alt_data_end+0xff80a990>
  80aa1c:	d9002c17 	ldw	r4,176(sp)
  80aa20:	d9801e04 	addi	r6,sp,120
  80aa24:	b80b883a 	mov	r5,r23
  80aa28:	08103d80 	call	8103d8 <__sprint_r>
  80aa2c:	1039ed1e 	bne	r2,zero,8091e4 <__alt_data_end+0xff8091e4>
  80aa30:	d8802617 	ldw	r2,152(sp)
  80aa34:	d8c02017 	ldw	r3,128(sp)
  80aa38:	da000404 	addi	r8,sp,16
  80aa3c:	003e1006 	br	80a280 <__alt_data_end+0xff80a280>
  80aa40:	00800044 	movi	r2,1
  80aa44:	10803fcc 	andi	r2,r2,255
  80aa48:	00c00044 	movi	r3,1
  80aa4c:	10fa3526 	beq	r2,r3,809324 <__alt_data_end+0xff809324>
  80aa50:	00c00084 	movi	r3,2
  80aa54:	10fbcb26 	beq	r2,r3,809984 <__alt_data_end+0xff809984>
  80aa58:	003a8f06 	br	809498 <__alt_data_end+0xff809498>
  80aa5c:	01002074 	movhi	r4,129
  80aa60:	2116e184 	addi	r4,r4,23430
  80aa64:	d9003515 	stw	r4,212(sp)
  80aa68:	003b7606 	br	809844 <__alt_data_end+0xff809844>
  80aa6c:	d8802917 	ldw	r2,164(sp)
  80aa70:	00c00184 	movi	r3,6
  80aa74:	1880012e 	bgeu	r3,r2,80aa7c <___vfprintf_internal_r+0x1ca0>
  80aa78:	1805883a 	mov	r2,r3
  80aa7c:	d8802e15 	stw	r2,184(sp)
  80aa80:	1000ef16 	blt	r2,zero,80ae40 <___vfprintf_internal_r+0x2064>
  80aa84:	04002074 	movhi	r16,129
  80aa88:	d8802a15 	stw	r2,168(sp)
  80aa8c:	dcc02d15 	stw	r19,180(sp)
  80aa90:	d8002915 	stw	zero,164(sp)
  80aa94:	d8003215 	stw	zero,200(sp)
  80aa98:	8416db04 	addi	r16,r16,23404
  80aa9c:	0039883a 	mov	fp,zero
  80aaa0:	003aa206 	br	80952c <__alt_data_end+0xff80952c>
  80aaa4:	0021883a 	mov	r16,zero
  80aaa8:	003e0706 	br	80a2c8 <__alt_data_end+0xff80a2c8>
  80aaac:	d9002c17 	ldw	r4,176(sp)
  80aab0:	d9801e04 	addi	r6,sp,120
  80aab4:	b80b883a 	mov	r5,r23
  80aab8:	08103d80 	call	8103d8 <__sprint_r>
  80aabc:	1039c91e 	bne	r2,zero,8091e4 <__alt_data_end+0xff8091e4>
  80aac0:	d8802617 	ldw	r2,152(sp)
  80aac4:	d9403317 	ldw	r5,204(sp)
  80aac8:	d8c02017 	ldw	r3,128(sp)
  80aacc:	da000404 	addi	r8,sp,16
  80aad0:	2885c83a 	sub	r2,r5,r2
  80aad4:	003dfb06 	br	80a2c4 <__alt_data_end+0xff80a2c4>
  80aad8:	9080004c 	andi	r2,r18,1
  80aadc:	103e8f1e 	bne	r2,zero,80a51c <__alt_data_end+0xff80a51c>
  80aae0:	d8802117 	ldw	r2,132(sp)
  80aae4:	003e9e06 	br	80a560 <__alt_data_end+0xff80a560>
  80aae8:	1025883a 	mov	r18,r2
  80aaec:	0039883a 	mov	fp,zero
  80aaf0:	00800084 	movi	r2,2
  80aaf4:	003fd306 	br	80aa44 <__alt_data_end+0xff80aa44>
  80aaf8:	07000b44 	movi	fp,45
  80aafc:	df002785 	stb	fp,158(sp)
  80ab00:	003a4006 	br	809404 <__alt_data_end+0xff809404>
  80ab04:	00c00b44 	movi	r3,45
  80ab08:	d8c02785 	stb	r3,158(sp)
  80ab0c:	d8802a15 	stw	r2,168(sp)
  80ab10:	dc802b17 	ldw	r18,172(sp)
  80ab14:	d8002915 	stw	zero,164(sp)
  80ab18:	07000b44 	movi	fp,45
  80ab1c:	003a8006 	br	809520 <__alt_data_end+0xff809520>
  80ab20:	04002074 	movhi	r16,129
  80ab24:	8416d004 	addi	r16,r16,23360
  80ab28:	003f4706 	br	80a848 <__alt_data_end+0xff80a848>
  80ab2c:	d8c02d17 	ldw	r3,180(sp)
  80ab30:	d9002f17 	ldw	r4,188(sp)
  80ab34:	18800017 	ldw	r2,0(r3)
  80ab38:	18c00104 	addi	r3,r3,4
  80ab3c:	d8c02d15 	stw	r3,180(sp)
  80ab40:	11000015 	stw	r4,0(r2)
  80ab44:	0038dd06 	br	808ebc <__alt_data_end+0xff808ebc>
  80ab48:	dd802617 	ldw	r22,152(sp)
  80ab4c:	00bfff44 	movi	r2,-3
  80ab50:	b0801c16 	blt	r22,r2,80abc4 <___vfprintf_internal_r+0x1de8>
  80ab54:	d9402917 	ldw	r5,164(sp)
  80ab58:	2d801a16 	blt	r5,r22,80abc4 <___vfprintf_internal_r+0x1de8>
  80ab5c:	dd803215 	stw	r22,200(sp)
  80ab60:	003e8906 	br	80a588 <__alt_data_end+0xff80a588>
  80ab64:	01002074 	movhi	r4,129
  80ab68:	2116dd84 	addi	r4,r4,23414
  80ab6c:	d9002b15 	stw	r4,172(sp)
  80ab70:	003c9106 	br	809db8 <__alt_data_end+0xff809db8>
  80ab74:	e005883a 	mov	r2,fp
  80ab78:	003e7906 	br	80a560 <__alt_data_end+0xff80a560>
  80ab7c:	d9402917 	ldw	r5,164(sp)
  80ab80:	df002783 	ldbu	fp,158(sp)
  80ab84:	dcc02d15 	stw	r19,180(sp)
  80ab88:	d9402a15 	stw	r5,168(sp)
  80ab8c:	d9402e15 	stw	r5,184(sp)
  80ab90:	d8002915 	stw	zero,164(sp)
  80ab94:	d8003215 	stw	zero,200(sp)
  80ab98:	003a5d06 	br	809510 <__alt_data_end+0xff809510>
  80ab9c:	9080004c 	andi	r2,r18,1
  80aba0:	0039883a 	mov	fp,zero
  80aba4:	10000426 	beq	r2,zero,80abb8 <___vfprintf_internal_r+0x1ddc>
  80aba8:	00800c04 	movi	r2,48
  80abac:	dc001dc4 	addi	r16,sp,119
  80abb0:	d8801dc5 	stb	r2,119(sp)
  80abb4:	003b8006 	br	8099b8 <__alt_data_end+0xff8099b8>
  80abb8:	d8002e15 	stw	zero,184(sp)
  80abbc:	dc001e04 	addi	r16,sp,120
  80abc0:	003a4d06 	br	8094f8 <__alt_data_end+0xff8094f8>
  80abc4:	8c7fff84 	addi	r17,r17,-2
  80abc8:	b5bfffc4 	addi	r22,r22,-1
  80abcc:	dd802615 	stw	r22,152(sp)
  80abd0:	dc4022c5 	stb	r17,139(sp)
  80abd4:	b000bf16 	blt	r22,zero,80aed4 <___vfprintf_internal_r+0x20f8>
  80abd8:	00800ac4 	movi	r2,43
  80abdc:	d8802305 	stb	r2,140(sp)
  80abe0:	00800244 	movi	r2,9
  80abe4:	15807016 	blt	r2,r22,80ada8 <___vfprintf_internal_r+0x1fcc>
  80abe8:	00800c04 	movi	r2,48
  80abec:	b5800c04 	addi	r22,r22,48
  80abf0:	d8802345 	stb	r2,141(sp)
  80abf4:	dd802385 	stb	r22,142(sp)
  80abf8:	d88023c4 	addi	r2,sp,143
  80abfc:	df0022c4 	addi	fp,sp,139
  80ac00:	d8c03317 	ldw	r3,204(sp)
  80ac04:	1739c83a 	sub	fp,r2,fp
  80ac08:	d9003317 	ldw	r4,204(sp)
  80ac0c:	e0c7883a 	add	r3,fp,r3
  80ac10:	df003a15 	stw	fp,232(sp)
  80ac14:	d8c02e15 	stw	r3,184(sp)
  80ac18:	00800044 	movi	r2,1
  80ac1c:	1100b30e 	bge	r2,r4,80aeec <___vfprintf_internal_r+0x2110>
  80ac20:	d8c02e17 	ldw	r3,184(sp)
  80ac24:	18c00044 	addi	r3,r3,1
  80ac28:	d8c02e15 	stw	r3,184(sp)
  80ac2c:	1805883a 	mov	r2,r3
  80ac30:	1800ac16 	blt	r3,zero,80aee4 <___vfprintf_internal_r+0x2108>
  80ac34:	d8003215 	stw	zero,200(sp)
  80ac38:	003e5d06 	br	80a5b0 <__alt_data_end+0xff80a5b0>
  80ac3c:	d9002c17 	ldw	r4,176(sp)
  80ac40:	d9801e04 	addi	r6,sp,120
  80ac44:	b80b883a 	mov	r5,r23
  80ac48:	08103d80 	call	8103d8 <__sprint_r>
  80ac4c:	1039651e 	bne	r2,zero,8091e4 <__alt_data_end+0xff8091e4>
  80ac50:	dc402617 	ldw	r17,152(sp)
  80ac54:	d8c02017 	ldw	r3,128(sp)
  80ac58:	d8801f17 	ldw	r2,124(sp)
  80ac5c:	da000404 	addi	r8,sp,16
  80ac60:	003ed606 	br	80a7bc <__alt_data_end+0xff80a7bc>
  80ac64:	582b883a 	mov	r21,r11
  80ac68:	d8002915 	stw	zero,164(sp)
  80ac6c:	0038bd06 	br	808f64 <__alt_data_end+0xff808f64>
  80ac70:	d8802917 	ldw	r2,164(sp)
  80ac74:	103e071e 	bne	r2,zero,80a494 <__alt_data_end+0xff80a494>
  80ac78:	dc002915 	stw	r16,164(sp)
  80ac7c:	003e0506 	br	80a494 <__alt_data_end+0xff80a494>
  80ac80:	d9002917 	ldw	r4,164(sp)
  80ac84:	20c00044 	addi	r3,r4,1
  80ac88:	003e0f06 	br	80a4c8 <__alt_data_end+0xff80a4c8>
  80ac8c:	01400184 	movi	r5,6
  80ac90:	d9402915 	stw	r5,164(sp)
  80ac94:	003dff06 	br	80a494 <__alt_data_end+0xff80a494>
  80ac98:	d8802104 	addi	r2,sp,132
  80ac9c:	d8800315 	stw	r2,12(sp)
  80aca0:	d8802504 	addi	r2,sp,148
  80aca4:	d8800215 	stw	r2,8(sp)
  80aca8:	d8802604 	addi	r2,sp,152
  80acac:	d8800115 	stw	r2,4(sp)
  80acb0:	d8802917 	ldw	r2,164(sp)
  80acb4:	d9403617 	ldw	r5,216(sp)
  80acb8:	d9002c17 	ldw	r4,176(sp)
  80acbc:	d8800015 	stw	r2,0(sp)
  80acc0:	01c000c4 	movi	r7,3
  80acc4:	980d883a 	mov	r6,r19
  80acc8:	da003d15 	stw	r8,244(sp)
  80accc:	080b4000 	call	80b400 <_dtoa_r>
  80acd0:	d8c02917 	ldw	r3,164(sp)
  80acd4:	da003d17 	ldw	r8,244(sp)
  80acd8:	1021883a 	mov	r16,r2
  80acdc:	10f9883a 	add	fp,r2,r3
  80ace0:	81000007 	ldb	r4,0(r16)
  80ace4:	00800c04 	movi	r2,48
  80ace8:	20805e26 	beq	r4,r2,80ae64 <___vfprintf_internal_r+0x2088>
  80acec:	d8c02617 	ldw	r3,152(sp)
  80acf0:	e0f9883a 	add	fp,fp,r3
  80acf4:	003e0a06 	br	80a520 <__alt_data_end+0xff80a520>
  80acf8:	00c00b44 	movi	r3,45
  80acfc:	24e0003c 	xorhi	r19,r4,32768
  80ad00:	d8c02a05 	stb	r3,168(sp)
  80ad04:	003de906 	br	80a4ac <__alt_data_end+0xff80a4ac>
  80ad08:	d8c03217 	ldw	r3,200(sp)
  80ad0c:	00c07a0e 	bge	zero,r3,80aef8 <___vfprintf_internal_r+0x211c>
  80ad10:	00800044 	movi	r2,1
  80ad14:	d9003317 	ldw	r4,204(sp)
  80ad18:	1105883a 	add	r2,r2,r4
  80ad1c:	d8802e15 	stw	r2,184(sp)
  80ad20:	10004e16 	blt	r2,zero,80ae5c <___vfprintf_internal_r+0x2080>
  80ad24:	044019c4 	movi	r17,103
  80ad28:	003e2106 	br	80a5b0 <__alt_data_end+0xff80a5b0>
  80ad2c:	d9002917 	ldw	r4,164(sp)
  80ad30:	d8802104 	addi	r2,sp,132
  80ad34:	d8800315 	stw	r2,12(sp)
  80ad38:	d9000015 	stw	r4,0(sp)
  80ad3c:	d8802504 	addi	r2,sp,148
  80ad40:	d9403617 	ldw	r5,216(sp)
  80ad44:	d9002c17 	ldw	r4,176(sp)
  80ad48:	d8800215 	stw	r2,8(sp)
  80ad4c:	d8802604 	addi	r2,sp,152
  80ad50:	d8800115 	stw	r2,4(sp)
  80ad54:	01c000c4 	movi	r7,3
  80ad58:	980d883a 	mov	r6,r19
  80ad5c:	da003d15 	stw	r8,244(sp)
  80ad60:	080b4000 	call	80b400 <_dtoa_r>
  80ad64:	d8c02917 	ldw	r3,164(sp)
  80ad68:	da003d17 	ldw	r8,244(sp)
  80ad6c:	1021883a 	mov	r16,r2
  80ad70:	00801184 	movi	r2,70
  80ad74:	80f9883a 	add	fp,r16,r3
  80ad78:	88bfd926 	beq	r17,r2,80ace0 <__alt_data_end+0xff80ace0>
  80ad7c:	003de806 	br	80a520 <__alt_data_end+0xff80a520>
  80ad80:	d9002917 	ldw	r4,164(sp)
  80ad84:	00c04d0e 	bge	zero,r3,80aebc <___vfprintf_internal_r+0x20e0>
  80ad88:	2000441e 	bne	r4,zero,80ae9c <___vfprintf_internal_r+0x20c0>
  80ad8c:	9480004c 	andi	r18,r18,1
  80ad90:	9000421e 	bne	r18,zero,80ae9c <___vfprintf_internal_r+0x20c0>
  80ad94:	1805883a 	mov	r2,r3
  80ad98:	18007016 	blt	r3,zero,80af5c <___vfprintf_internal_r+0x2180>
  80ad9c:	d8c03217 	ldw	r3,200(sp)
  80ada0:	d8c02e15 	stw	r3,184(sp)
  80ada4:	003e0206 	br	80a5b0 <__alt_data_end+0xff80a5b0>
  80ada8:	df0022c4 	addi	fp,sp,139
  80adac:	dc002915 	stw	r16,164(sp)
  80adb0:	4027883a 	mov	r19,r8
  80adb4:	e021883a 	mov	r16,fp
  80adb8:	b009883a 	mov	r4,r22
  80adbc:	01400284 	movi	r5,10
  80adc0:	0804dc80 	call	804dc8 <__modsi3>
  80adc4:	10800c04 	addi	r2,r2,48
  80adc8:	843fffc4 	addi	r16,r16,-1
  80adcc:	b009883a 	mov	r4,r22
  80add0:	01400284 	movi	r5,10
  80add4:	80800005 	stb	r2,0(r16)
  80add8:	0804d440 	call	804d44 <__divsi3>
  80addc:	102d883a 	mov	r22,r2
  80ade0:	00800244 	movi	r2,9
  80ade4:	15bff416 	blt	r2,r22,80adb8 <__alt_data_end+0xff80adb8>
  80ade8:	9811883a 	mov	r8,r19
  80adec:	b0800c04 	addi	r2,r22,48
  80adf0:	8027883a 	mov	r19,r16
  80adf4:	997fffc4 	addi	r5,r19,-1
  80adf8:	98bfffc5 	stb	r2,-1(r19)
  80adfc:	dc002917 	ldw	r16,164(sp)
  80ae00:	2f006a2e 	bgeu	r5,fp,80afac <___vfprintf_internal_r+0x21d0>
  80ae04:	d9c02384 	addi	r7,sp,142
  80ae08:	3ccfc83a 	sub	r7,r7,r19
  80ae0c:	d9002344 	addi	r4,sp,141
  80ae10:	e1cf883a 	add	r7,fp,r7
  80ae14:	00000106 	br	80ae1c <___vfprintf_internal_r+0x2040>
  80ae18:	28800003 	ldbu	r2,0(r5)
  80ae1c:	20800005 	stb	r2,0(r4)
  80ae20:	21000044 	addi	r4,r4,1
  80ae24:	29400044 	addi	r5,r5,1
  80ae28:	393ffb1e 	bne	r7,r4,80ae18 <__alt_data_end+0xff80ae18>
  80ae2c:	d8802304 	addi	r2,sp,140
  80ae30:	14c5c83a 	sub	r2,r2,r19
  80ae34:	d8c02344 	addi	r3,sp,141
  80ae38:	1885883a 	add	r2,r3,r2
  80ae3c:	003f7006 	br	80ac00 <__alt_data_end+0xff80ac00>
  80ae40:	0005883a 	mov	r2,zero
  80ae44:	003f0f06 	br	80aa84 <__alt_data_end+0xff80aa84>
  80ae48:	d8c03217 	ldw	r3,200(sp)
  80ae4c:	18c00044 	addi	r3,r3,1
  80ae50:	d8c02e15 	stw	r3,184(sp)
  80ae54:	1805883a 	mov	r2,r3
  80ae58:	183fb20e 	bge	r3,zero,80ad24 <__alt_data_end+0xff80ad24>
  80ae5c:	0005883a 	mov	r2,zero
  80ae60:	003fb006 	br	80ad24 <__alt_data_end+0xff80ad24>
  80ae64:	d9003617 	ldw	r4,216(sp)
  80ae68:	000d883a 	mov	r6,zero
  80ae6c:	000f883a 	mov	r7,zero
  80ae70:	980b883a 	mov	r5,r19
  80ae74:	d8c03c15 	stw	r3,240(sp)
  80ae78:	da003d15 	stw	r8,244(sp)
  80ae7c:	08076040 	call	807604 <__eqdf2>
  80ae80:	d8c03c17 	ldw	r3,240(sp)
  80ae84:	da003d17 	ldw	r8,244(sp)
  80ae88:	103f9826 	beq	r2,zero,80acec <__alt_data_end+0xff80acec>
  80ae8c:	00800044 	movi	r2,1
  80ae90:	10c7c83a 	sub	r3,r2,r3
  80ae94:	d8c02615 	stw	r3,152(sp)
  80ae98:	003f9506 	br	80acf0 <__alt_data_end+0xff80acf0>
  80ae9c:	d9002917 	ldw	r4,164(sp)
  80aea0:	d8c03217 	ldw	r3,200(sp)
  80aea4:	20800044 	addi	r2,r4,1
  80aea8:	1885883a 	add	r2,r3,r2
  80aeac:	d8802e15 	stw	r2,184(sp)
  80aeb0:	103dbf0e 	bge	r2,zero,80a5b0 <__alt_data_end+0xff80a5b0>
  80aeb4:	0005883a 	mov	r2,zero
  80aeb8:	003dbd06 	br	80a5b0 <__alt_data_end+0xff80a5b0>
  80aebc:	2000211e 	bne	r4,zero,80af44 <___vfprintf_internal_r+0x2168>
  80aec0:	9480004c 	andi	r18,r18,1
  80aec4:	90001f1e 	bne	r18,zero,80af44 <___vfprintf_internal_r+0x2168>
  80aec8:	00800044 	movi	r2,1
  80aecc:	d8802e15 	stw	r2,184(sp)
  80aed0:	003db706 	br	80a5b0 <__alt_data_end+0xff80a5b0>
  80aed4:	00800b44 	movi	r2,45
  80aed8:	05adc83a 	sub	r22,zero,r22
  80aedc:	d8802305 	stb	r2,140(sp)
  80aee0:	003f3f06 	br	80abe0 <__alt_data_end+0xff80abe0>
  80aee4:	0005883a 	mov	r2,zero
  80aee8:	003f5206 	br	80ac34 <__alt_data_end+0xff80ac34>
  80aeec:	90a4703a 	and	r18,r18,r2
  80aef0:	903f4e26 	beq	r18,zero,80ac2c <__alt_data_end+0xff80ac2c>
  80aef4:	003f4a06 	br	80ac20 <__alt_data_end+0xff80ac20>
  80aef8:	00800084 	movi	r2,2
  80aefc:	10c5c83a 	sub	r2,r2,r3
  80af00:	003f8406 	br	80ad14 <__alt_data_end+0xff80ad14>
  80af04:	d8802d17 	ldw	r2,180(sp)
  80af08:	d9002d17 	ldw	r4,180(sp)
  80af0c:	ac400043 	ldbu	r17,1(r21)
  80af10:	10800017 	ldw	r2,0(r2)
  80af14:	582b883a 	mov	r21,r11
  80af18:	d8802915 	stw	r2,164(sp)
  80af1c:	20800104 	addi	r2,r4,4
  80af20:	d9002917 	ldw	r4,164(sp)
  80af24:	d8802d15 	stw	r2,180(sp)
  80af28:	203e7a0e 	bge	r4,zero,80a914 <__alt_data_end+0xff80a914>
  80af2c:	8c403fcc 	andi	r17,r17,255
  80af30:	00bfffc4 	movi	r2,-1
  80af34:	8c40201c 	xori	r17,r17,128
  80af38:	d8802915 	stw	r2,164(sp)
  80af3c:	8c7fe004 	addi	r17,r17,-128
  80af40:	00380706 	br	808f60 <__alt_data_end+0xff808f60>
  80af44:	d8c02917 	ldw	r3,164(sp)
  80af48:	18c00084 	addi	r3,r3,2
  80af4c:	d8c02e15 	stw	r3,184(sp)
  80af50:	1805883a 	mov	r2,r3
  80af54:	183d960e 	bge	r3,zero,80a5b0 <__alt_data_end+0xff80a5b0>
  80af58:	003fd606 	br	80aeb4 <__alt_data_end+0xff80aeb4>
  80af5c:	0005883a 	mov	r2,zero
  80af60:	003f8e06 	br	80ad9c <__alt_data_end+0xff80ad9c>
  80af64:	9080004c 	andi	r2,r18,1
  80af68:	103f811e 	bne	r2,zero,80ad70 <__alt_data_end+0xff80ad70>
  80af6c:	d8802117 	ldw	r2,132(sp)
  80af70:	1405c83a 	sub	r2,r2,r16
  80af74:	d8803315 	stw	r2,204(sp)
  80af78:	b47ef326 	beq	r22,r17,80ab48 <__alt_data_end+0xff80ab48>
  80af7c:	dd802617 	ldw	r22,152(sp)
  80af80:	003f1106 	br	80abc8 <__alt_data_end+0xff80abc8>
  80af84:	d9c02785 	stb	r7,158(sp)
  80af88:	00390406 	br	80939c <__alt_data_end+0xff80939c>
  80af8c:	d9c02785 	stb	r7,158(sp)
  80af90:	0038d306 	br	8092e0 <__alt_data_end+0xff8092e0>
  80af94:	d9c02785 	stb	r7,158(sp)
  80af98:	003a6106 	br	809920 <__alt_data_end+0xff809920>
  80af9c:	d9c02785 	stb	r7,158(sp)
  80afa0:	003af806 	br	809b84 <__alt_data_end+0xff809b84>
  80afa4:	0005883a 	mov	r2,zero
  80afa8:	003d7e06 	br	80a5a4 <__alt_data_end+0xff80a5a4>
  80afac:	d8802344 	addi	r2,sp,141
  80afb0:	003f1306 	br	80ac00 <__alt_data_end+0xff80ac00>
  80afb4:	d9c02785 	stb	r7,158(sp)
  80afb8:	00392306 	br	809448 <__alt_data_end+0xff809448>
  80afbc:	d9c02785 	stb	r7,158(sp)
  80afc0:	003aa906 	br	809a68 <__alt_data_end+0xff809a68>
  80afc4:	d9c02785 	stb	r7,158(sp)
  80afc8:	003a3d06 	br	8098c0 <__alt_data_end+0xff8098c0>
  80afcc:	d9c02785 	stb	r7,158(sp)
  80afd0:	003aca06 	br	809afc <__alt_data_end+0xff809afc>

0080afd4 <__vfprintf_internal>:
  80afd4:	00802074 	movhi	r2,129
  80afd8:	109df704 	addi	r2,r2,30684
  80afdc:	300f883a 	mov	r7,r6
  80afe0:	280d883a 	mov	r6,r5
  80afe4:	200b883a 	mov	r5,r4
  80afe8:	11000017 	ldw	r4,0(r2)
  80afec:	0808ddc1 	jmpi	808ddc <___vfprintf_internal_r>

0080aff0 <__sbprintf>:
  80aff0:	2880030b 	ldhu	r2,12(r5)
  80aff4:	2ac01917 	ldw	r11,100(r5)
  80aff8:	2a80038b 	ldhu	r10,14(r5)
  80affc:	2a400717 	ldw	r9,28(r5)
  80b000:	2a000917 	ldw	r8,36(r5)
  80b004:	defee204 	addi	sp,sp,-1144
  80b008:	00c10004 	movi	r3,1024
  80b00c:	dc011a15 	stw	r16,1128(sp)
  80b010:	10bfff4c 	andi	r2,r2,65533
  80b014:	2821883a 	mov	r16,r5
  80b018:	d8cb883a 	add	r5,sp,r3
  80b01c:	dc811c15 	stw	r18,1136(sp)
  80b020:	dc411b15 	stw	r17,1132(sp)
  80b024:	dfc11d15 	stw	ra,1140(sp)
  80b028:	2025883a 	mov	r18,r4
  80b02c:	d881030d 	sth	r2,1036(sp)
  80b030:	dac11915 	stw	r11,1124(sp)
  80b034:	da81038d 	sth	r10,1038(sp)
  80b038:	da410715 	stw	r9,1052(sp)
  80b03c:	da010915 	stw	r8,1060(sp)
  80b040:	dec10015 	stw	sp,1024(sp)
  80b044:	dec10415 	stw	sp,1040(sp)
  80b048:	d8c10215 	stw	r3,1032(sp)
  80b04c:	d8c10515 	stw	r3,1044(sp)
  80b050:	d8010615 	stw	zero,1048(sp)
  80b054:	0808ddc0 	call	808ddc <___vfprintf_internal_r>
  80b058:	1023883a 	mov	r17,r2
  80b05c:	10000416 	blt	r2,zero,80b070 <__sbprintf+0x80>
  80b060:	d9410004 	addi	r5,sp,1024
  80b064:	9009883a 	mov	r4,r18
  80b068:	080cca40 	call	80cca4 <_fflush_r>
  80b06c:	10000d1e 	bne	r2,zero,80b0a4 <__sbprintf+0xb4>
  80b070:	d881030b 	ldhu	r2,1036(sp)
  80b074:	1080100c 	andi	r2,r2,64
  80b078:	10000326 	beq	r2,zero,80b088 <__sbprintf+0x98>
  80b07c:	8080030b 	ldhu	r2,12(r16)
  80b080:	10801014 	ori	r2,r2,64
  80b084:	8080030d 	sth	r2,12(r16)
  80b088:	8805883a 	mov	r2,r17
  80b08c:	dfc11d17 	ldw	ra,1140(sp)
  80b090:	dc811c17 	ldw	r18,1136(sp)
  80b094:	dc411b17 	ldw	r17,1132(sp)
  80b098:	dc011a17 	ldw	r16,1128(sp)
  80b09c:	dec11e04 	addi	sp,sp,1144
  80b0a0:	f800283a 	ret
  80b0a4:	047fffc4 	movi	r17,-1
  80b0a8:	003ff106 	br	80b070 <__alt_data_end+0xff80b070>

0080b0ac <__swsetup_r>:
  80b0ac:	00802074 	movhi	r2,129
  80b0b0:	defffd04 	addi	sp,sp,-12
  80b0b4:	109df704 	addi	r2,r2,30684
  80b0b8:	dc400115 	stw	r17,4(sp)
  80b0bc:	2023883a 	mov	r17,r4
  80b0c0:	11000017 	ldw	r4,0(r2)
  80b0c4:	dc000015 	stw	r16,0(sp)
  80b0c8:	dfc00215 	stw	ra,8(sp)
  80b0cc:	2821883a 	mov	r16,r5
  80b0d0:	20000226 	beq	r4,zero,80b0dc <__swsetup_r+0x30>
  80b0d4:	20800e17 	ldw	r2,56(r4)
  80b0d8:	10003126 	beq	r2,zero,80b1a0 <__swsetup_r+0xf4>
  80b0dc:	8080030b 	ldhu	r2,12(r16)
  80b0e0:	10c0020c 	andi	r3,r2,8
  80b0e4:	1009883a 	mov	r4,r2
  80b0e8:	18000f26 	beq	r3,zero,80b128 <__swsetup_r+0x7c>
  80b0ec:	80c00417 	ldw	r3,16(r16)
  80b0f0:	18001526 	beq	r3,zero,80b148 <__swsetup_r+0x9c>
  80b0f4:	1100004c 	andi	r4,r2,1
  80b0f8:	20001c1e 	bne	r4,zero,80b16c <__swsetup_r+0xc0>
  80b0fc:	1080008c 	andi	r2,r2,2
  80b100:	1000291e 	bne	r2,zero,80b1a8 <__swsetup_r+0xfc>
  80b104:	80800517 	ldw	r2,20(r16)
  80b108:	80800215 	stw	r2,8(r16)
  80b10c:	18001c26 	beq	r3,zero,80b180 <__swsetup_r+0xd4>
  80b110:	0005883a 	mov	r2,zero
  80b114:	dfc00217 	ldw	ra,8(sp)
  80b118:	dc400117 	ldw	r17,4(sp)
  80b11c:	dc000017 	ldw	r16,0(sp)
  80b120:	dec00304 	addi	sp,sp,12
  80b124:	f800283a 	ret
  80b128:	2080040c 	andi	r2,r4,16
  80b12c:	10002e26 	beq	r2,zero,80b1e8 <__swsetup_r+0x13c>
  80b130:	2080010c 	andi	r2,r4,4
  80b134:	10001e1e 	bne	r2,zero,80b1b0 <__swsetup_r+0x104>
  80b138:	80c00417 	ldw	r3,16(r16)
  80b13c:	20800214 	ori	r2,r4,8
  80b140:	8080030d 	sth	r2,12(r16)
  80b144:	183feb1e 	bne	r3,zero,80b0f4 <__alt_data_end+0xff80b0f4>
  80b148:	1100a00c 	andi	r4,r2,640
  80b14c:	01408004 	movi	r5,512
  80b150:	217fe826 	beq	r4,r5,80b0f4 <__alt_data_end+0xff80b0f4>
  80b154:	800b883a 	mov	r5,r16
  80b158:	8809883a 	mov	r4,r17
  80b15c:	080dc240 	call	80dc24 <__smakebuf_r>
  80b160:	8080030b 	ldhu	r2,12(r16)
  80b164:	80c00417 	ldw	r3,16(r16)
  80b168:	003fe206 	br	80b0f4 <__alt_data_end+0xff80b0f4>
  80b16c:	80800517 	ldw	r2,20(r16)
  80b170:	80000215 	stw	zero,8(r16)
  80b174:	0085c83a 	sub	r2,zero,r2
  80b178:	80800615 	stw	r2,24(r16)
  80b17c:	183fe41e 	bne	r3,zero,80b110 <__alt_data_end+0xff80b110>
  80b180:	80c0030b 	ldhu	r3,12(r16)
  80b184:	0005883a 	mov	r2,zero
  80b188:	1900200c 	andi	r4,r3,128
  80b18c:	203fe126 	beq	r4,zero,80b114 <__alt_data_end+0xff80b114>
  80b190:	18c01014 	ori	r3,r3,64
  80b194:	80c0030d 	sth	r3,12(r16)
  80b198:	00bfffc4 	movi	r2,-1
  80b19c:	003fdd06 	br	80b114 <__alt_data_end+0xff80b114>
  80b1a0:	080d0800 	call	80d080 <__sinit>
  80b1a4:	003fcd06 	br	80b0dc <__alt_data_end+0xff80b0dc>
  80b1a8:	0005883a 	mov	r2,zero
  80b1ac:	003fd606 	br	80b108 <__alt_data_end+0xff80b108>
  80b1b0:	81400c17 	ldw	r5,48(r16)
  80b1b4:	28000626 	beq	r5,zero,80b1d0 <__swsetup_r+0x124>
  80b1b8:	80801004 	addi	r2,r16,64
  80b1bc:	28800326 	beq	r5,r2,80b1cc <__swsetup_r+0x120>
  80b1c0:	8809883a 	mov	r4,r17
  80b1c4:	080d1f40 	call	80d1f4 <_free_r>
  80b1c8:	8100030b 	ldhu	r4,12(r16)
  80b1cc:	80000c15 	stw	zero,48(r16)
  80b1d0:	80c00417 	ldw	r3,16(r16)
  80b1d4:	00bff6c4 	movi	r2,-37
  80b1d8:	1108703a 	and	r4,r2,r4
  80b1dc:	80000115 	stw	zero,4(r16)
  80b1e0:	80c00015 	stw	r3,0(r16)
  80b1e4:	003fd506 	br	80b13c <__alt_data_end+0xff80b13c>
  80b1e8:	00800244 	movi	r2,9
  80b1ec:	88800015 	stw	r2,0(r17)
  80b1f0:	20801014 	ori	r2,r4,64
  80b1f4:	8080030d 	sth	r2,12(r16)
  80b1f8:	00bfffc4 	movi	r2,-1
  80b1fc:	003fc506 	br	80b114 <__alt_data_end+0xff80b114>

0080b200 <quorem>:
  80b200:	defff704 	addi	sp,sp,-36
  80b204:	dc800215 	stw	r18,8(sp)
  80b208:	20800417 	ldw	r2,16(r4)
  80b20c:	2c800417 	ldw	r18,16(r5)
  80b210:	dfc00815 	stw	ra,32(sp)
  80b214:	ddc00715 	stw	r23,28(sp)
  80b218:	dd800615 	stw	r22,24(sp)
  80b21c:	dd400515 	stw	r21,20(sp)
  80b220:	dd000415 	stw	r20,16(sp)
  80b224:	dcc00315 	stw	r19,12(sp)
  80b228:	dc400115 	stw	r17,4(sp)
  80b22c:	dc000015 	stw	r16,0(sp)
  80b230:	14807116 	blt	r2,r18,80b3f8 <quorem+0x1f8>
  80b234:	94bfffc4 	addi	r18,r18,-1
  80b238:	94ad883a 	add	r22,r18,r18
  80b23c:	b5ad883a 	add	r22,r22,r22
  80b240:	2c400504 	addi	r17,r5,20
  80b244:	8da9883a 	add	r20,r17,r22
  80b248:	25400504 	addi	r21,r4,20
  80b24c:	282f883a 	mov	r23,r5
  80b250:	adad883a 	add	r22,r21,r22
  80b254:	a1400017 	ldw	r5,0(r20)
  80b258:	2021883a 	mov	r16,r4
  80b25c:	b1000017 	ldw	r4,0(r22)
  80b260:	29400044 	addi	r5,r5,1
  80b264:	0804e3c0 	call	804e3c <__udivsi3>
  80b268:	1027883a 	mov	r19,r2
  80b26c:	10002c26 	beq	r2,zero,80b320 <quorem+0x120>
  80b270:	a813883a 	mov	r9,r21
  80b274:	880b883a 	mov	r5,r17
  80b278:	0009883a 	mov	r4,zero
  80b27c:	000d883a 	mov	r6,zero
  80b280:	2a000017 	ldw	r8,0(r5)
  80b284:	49c00017 	ldw	r7,0(r9)
  80b288:	29400104 	addi	r5,r5,4
  80b28c:	40bfffcc 	andi	r2,r8,65535
  80b290:	14c5383a 	mul	r2,r2,r19
  80b294:	4010d43a 	srli	r8,r8,16
  80b298:	38ffffcc 	andi	r3,r7,65535
  80b29c:	1105883a 	add	r2,r2,r4
  80b2a0:	1008d43a 	srli	r4,r2,16
  80b2a4:	44d1383a 	mul	r8,r8,r19
  80b2a8:	198d883a 	add	r6,r3,r6
  80b2ac:	10ffffcc 	andi	r3,r2,65535
  80b2b0:	30c7c83a 	sub	r3,r6,r3
  80b2b4:	380ed43a 	srli	r7,r7,16
  80b2b8:	4105883a 	add	r2,r8,r4
  80b2bc:	180dd43a 	srai	r6,r3,16
  80b2c0:	113fffcc 	andi	r4,r2,65535
  80b2c4:	390fc83a 	sub	r7,r7,r4
  80b2c8:	398d883a 	add	r6,r7,r6
  80b2cc:	300e943a 	slli	r7,r6,16
  80b2d0:	18ffffcc 	andi	r3,r3,65535
  80b2d4:	1008d43a 	srli	r4,r2,16
  80b2d8:	38ceb03a 	or	r7,r7,r3
  80b2dc:	49c00015 	stw	r7,0(r9)
  80b2e0:	300dd43a 	srai	r6,r6,16
  80b2e4:	4a400104 	addi	r9,r9,4
  80b2e8:	a17fe52e 	bgeu	r20,r5,80b280 <__alt_data_end+0xff80b280>
  80b2ec:	b0800017 	ldw	r2,0(r22)
  80b2f0:	10000b1e 	bne	r2,zero,80b320 <quorem+0x120>
  80b2f4:	b0bfff04 	addi	r2,r22,-4
  80b2f8:	a880082e 	bgeu	r21,r2,80b31c <quorem+0x11c>
  80b2fc:	b0ffff17 	ldw	r3,-4(r22)
  80b300:	18000326 	beq	r3,zero,80b310 <quorem+0x110>
  80b304:	00000506 	br	80b31c <quorem+0x11c>
  80b308:	10c00017 	ldw	r3,0(r2)
  80b30c:	1800031e 	bne	r3,zero,80b31c <quorem+0x11c>
  80b310:	10bfff04 	addi	r2,r2,-4
  80b314:	94bfffc4 	addi	r18,r18,-1
  80b318:	a8bffb36 	bltu	r21,r2,80b308 <__alt_data_end+0xff80b308>
  80b31c:	84800415 	stw	r18,16(r16)
  80b320:	b80b883a 	mov	r5,r23
  80b324:	8009883a 	mov	r4,r16
  80b328:	080f3640 	call	80f364 <__mcmp>
  80b32c:	10002616 	blt	r2,zero,80b3c8 <quorem+0x1c8>
  80b330:	9cc00044 	addi	r19,r19,1
  80b334:	a805883a 	mov	r2,r21
  80b338:	000b883a 	mov	r5,zero
  80b33c:	11000017 	ldw	r4,0(r2)
  80b340:	89800017 	ldw	r6,0(r17)
  80b344:	10800104 	addi	r2,r2,4
  80b348:	20ffffcc 	andi	r3,r4,65535
  80b34c:	194b883a 	add	r5,r3,r5
  80b350:	30ffffcc 	andi	r3,r6,65535
  80b354:	28c7c83a 	sub	r3,r5,r3
  80b358:	300cd43a 	srli	r6,r6,16
  80b35c:	2008d43a 	srli	r4,r4,16
  80b360:	180bd43a 	srai	r5,r3,16
  80b364:	18ffffcc 	andi	r3,r3,65535
  80b368:	2189c83a 	sub	r4,r4,r6
  80b36c:	2149883a 	add	r4,r4,r5
  80b370:	200c943a 	slli	r6,r4,16
  80b374:	8c400104 	addi	r17,r17,4
  80b378:	200bd43a 	srai	r5,r4,16
  80b37c:	30c6b03a 	or	r3,r6,r3
  80b380:	10ffff15 	stw	r3,-4(r2)
  80b384:	a47fed2e 	bgeu	r20,r17,80b33c <__alt_data_end+0xff80b33c>
  80b388:	9485883a 	add	r2,r18,r18
  80b38c:	1085883a 	add	r2,r2,r2
  80b390:	a887883a 	add	r3,r21,r2
  80b394:	18800017 	ldw	r2,0(r3)
  80b398:	10000b1e 	bne	r2,zero,80b3c8 <quorem+0x1c8>
  80b39c:	18bfff04 	addi	r2,r3,-4
  80b3a0:	a880082e 	bgeu	r21,r2,80b3c4 <quorem+0x1c4>
  80b3a4:	18ffff17 	ldw	r3,-4(r3)
  80b3a8:	18000326 	beq	r3,zero,80b3b8 <quorem+0x1b8>
  80b3ac:	00000506 	br	80b3c4 <quorem+0x1c4>
  80b3b0:	10c00017 	ldw	r3,0(r2)
  80b3b4:	1800031e 	bne	r3,zero,80b3c4 <quorem+0x1c4>
  80b3b8:	10bfff04 	addi	r2,r2,-4
  80b3bc:	94bfffc4 	addi	r18,r18,-1
  80b3c0:	a8bffb36 	bltu	r21,r2,80b3b0 <__alt_data_end+0xff80b3b0>
  80b3c4:	84800415 	stw	r18,16(r16)
  80b3c8:	9805883a 	mov	r2,r19
  80b3cc:	dfc00817 	ldw	ra,32(sp)
  80b3d0:	ddc00717 	ldw	r23,28(sp)
  80b3d4:	dd800617 	ldw	r22,24(sp)
  80b3d8:	dd400517 	ldw	r21,20(sp)
  80b3dc:	dd000417 	ldw	r20,16(sp)
  80b3e0:	dcc00317 	ldw	r19,12(sp)
  80b3e4:	dc800217 	ldw	r18,8(sp)
  80b3e8:	dc400117 	ldw	r17,4(sp)
  80b3ec:	dc000017 	ldw	r16,0(sp)
  80b3f0:	dec00904 	addi	sp,sp,36
  80b3f4:	f800283a 	ret
  80b3f8:	0005883a 	mov	r2,zero
  80b3fc:	003ff306 	br	80b3cc <__alt_data_end+0xff80b3cc>

0080b400 <_dtoa_r>:
  80b400:	20801017 	ldw	r2,64(r4)
  80b404:	deffde04 	addi	sp,sp,-136
  80b408:	df002015 	stw	fp,128(sp)
  80b40c:	dcc01b15 	stw	r19,108(sp)
  80b410:	dc801a15 	stw	r18,104(sp)
  80b414:	dc401915 	stw	r17,100(sp)
  80b418:	dc001815 	stw	r16,96(sp)
  80b41c:	dfc02115 	stw	ra,132(sp)
  80b420:	ddc01f15 	stw	r23,124(sp)
  80b424:	dd801e15 	stw	r22,120(sp)
  80b428:	dd401d15 	stw	r21,116(sp)
  80b42c:	dd001c15 	stw	r20,112(sp)
  80b430:	d9c00315 	stw	r7,12(sp)
  80b434:	2039883a 	mov	fp,r4
  80b438:	3023883a 	mov	r17,r6
  80b43c:	2825883a 	mov	r18,r5
  80b440:	dc002417 	ldw	r16,144(sp)
  80b444:	3027883a 	mov	r19,r6
  80b448:	10000826 	beq	r2,zero,80b46c <_dtoa_r+0x6c>
  80b44c:	21801117 	ldw	r6,68(r4)
  80b450:	00c00044 	movi	r3,1
  80b454:	100b883a 	mov	r5,r2
  80b458:	1986983a 	sll	r3,r3,r6
  80b45c:	11800115 	stw	r6,4(r2)
  80b460:	10c00215 	stw	r3,8(r2)
  80b464:	080eb440 	call	80eb44 <_Bfree>
  80b468:	e0001015 	stw	zero,64(fp)
  80b46c:	88002e16 	blt	r17,zero,80b528 <_dtoa_r+0x128>
  80b470:	80000015 	stw	zero,0(r16)
  80b474:	889ffc2c 	andhi	r2,r17,32752
  80b478:	00dffc34 	movhi	r3,32752
  80b47c:	10c01c26 	beq	r2,r3,80b4f0 <_dtoa_r+0xf0>
  80b480:	000d883a 	mov	r6,zero
  80b484:	000f883a 	mov	r7,zero
  80b488:	9009883a 	mov	r4,r18
  80b48c:	980b883a 	mov	r5,r19
  80b490:	08076040 	call	807604 <__eqdf2>
  80b494:	10002b1e 	bne	r2,zero,80b544 <_dtoa_r+0x144>
  80b498:	d9c02317 	ldw	r7,140(sp)
  80b49c:	00800044 	movi	r2,1
  80b4a0:	38800015 	stw	r2,0(r7)
  80b4a4:	d8802517 	ldw	r2,148(sp)
  80b4a8:	10019e26 	beq	r2,zero,80bb24 <_dtoa_r+0x724>
  80b4ac:	d8c02517 	ldw	r3,148(sp)
  80b4b0:	00802074 	movhi	r2,129
  80b4b4:	1096dd44 	addi	r2,r2,23413
  80b4b8:	18800015 	stw	r2,0(r3)
  80b4bc:	10bfffc4 	addi	r2,r2,-1
  80b4c0:	dfc02117 	ldw	ra,132(sp)
  80b4c4:	df002017 	ldw	fp,128(sp)
  80b4c8:	ddc01f17 	ldw	r23,124(sp)
  80b4cc:	dd801e17 	ldw	r22,120(sp)
  80b4d0:	dd401d17 	ldw	r21,116(sp)
  80b4d4:	dd001c17 	ldw	r20,112(sp)
  80b4d8:	dcc01b17 	ldw	r19,108(sp)
  80b4dc:	dc801a17 	ldw	r18,104(sp)
  80b4e0:	dc401917 	ldw	r17,100(sp)
  80b4e4:	dc001817 	ldw	r16,96(sp)
  80b4e8:	dec02204 	addi	sp,sp,136
  80b4ec:	f800283a 	ret
  80b4f0:	d8c02317 	ldw	r3,140(sp)
  80b4f4:	0089c3c4 	movi	r2,9999
  80b4f8:	18800015 	stw	r2,0(r3)
  80b4fc:	90017726 	beq	r18,zero,80badc <_dtoa_r+0x6dc>
  80b500:	00802074 	movhi	r2,129
  80b504:	1096e904 	addi	r2,r2,23460
  80b508:	d9002517 	ldw	r4,148(sp)
  80b50c:	203fec26 	beq	r4,zero,80b4c0 <__alt_data_end+0xff80b4c0>
  80b510:	10c000c7 	ldb	r3,3(r2)
  80b514:	1801781e 	bne	r3,zero,80baf8 <_dtoa_r+0x6f8>
  80b518:	10c000c4 	addi	r3,r2,3
  80b51c:	d9802517 	ldw	r6,148(sp)
  80b520:	30c00015 	stw	r3,0(r6)
  80b524:	003fe606 	br	80b4c0 <__alt_data_end+0xff80b4c0>
  80b528:	04e00034 	movhi	r19,32768
  80b52c:	9cffffc4 	addi	r19,r19,-1
  80b530:	00800044 	movi	r2,1
  80b534:	8ce6703a 	and	r19,r17,r19
  80b538:	80800015 	stw	r2,0(r16)
  80b53c:	9823883a 	mov	r17,r19
  80b540:	003fcc06 	br	80b474 <__alt_data_end+0xff80b474>
  80b544:	d8800204 	addi	r2,sp,8
  80b548:	d8800015 	stw	r2,0(sp)
  80b54c:	d9c00104 	addi	r7,sp,4
  80b550:	900b883a 	mov	r5,r18
  80b554:	980d883a 	mov	r6,r19
  80b558:	e009883a 	mov	r4,fp
  80b55c:	8820d53a 	srli	r16,r17,20
  80b560:	080f7300 	call	80f730 <__d2b>
  80b564:	d8800915 	stw	r2,36(sp)
  80b568:	8001651e 	bne	r16,zero,80bb00 <_dtoa_r+0x700>
  80b56c:	dd800217 	ldw	r22,8(sp)
  80b570:	dc000117 	ldw	r16,4(sp)
  80b574:	00800804 	movi	r2,32
  80b578:	b421883a 	add	r16,r22,r16
  80b57c:	80c10c84 	addi	r3,r16,1074
  80b580:	10c2d10e 	bge	r2,r3,80c0c8 <_dtoa_r+0xcc8>
  80b584:	00801004 	movi	r2,64
  80b588:	81010484 	addi	r4,r16,1042
  80b58c:	10c7c83a 	sub	r3,r2,r3
  80b590:	9108d83a 	srl	r4,r18,r4
  80b594:	88e2983a 	sll	r17,r17,r3
  80b598:	2448b03a 	or	r4,r4,r17
  80b59c:	0812dfc0 	call	812dfc <__floatunsidf>
  80b5a0:	017f8434 	movhi	r5,65040
  80b5a4:	01800044 	movi	r6,1
  80b5a8:	1009883a 	mov	r4,r2
  80b5ac:	194b883a 	add	r5,r3,r5
  80b5b0:	843fffc4 	addi	r16,r16,-1
  80b5b4:	d9801115 	stw	r6,68(sp)
  80b5b8:	000d883a 	mov	r6,zero
  80b5bc:	01cffe34 	movhi	r7,16376
  80b5c0:	0807e800 	call	807e80 <__subdf3>
  80b5c4:	0198dbf4 	movhi	r6,25455
  80b5c8:	01cff4f4 	movhi	r7,16339
  80b5cc:	3190d844 	addi	r6,r6,17249
  80b5d0:	39e1e9c4 	addi	r7,r7,-30809
  80b5d4:	1009883a 	mov	r4,r2
  80b5d8:	180b883a 	mov	r5,r3
  80b5dc:	08077680 	call	807768 <__muldf3>
  80b5e0:	01a2d874 	movhi	r6,35681
  80b5e4:	01cff1f4 	movhi	r7,16327
  80b5e8:	31b22cc4 	addi	r6,r6,-14157
  80b5ec:	39e28a04 	addi	r7,r7,-30168
  80b5f0:	180b883a 	mov	r5,r3
  80b5f4:	1009883a 	mov	r4,r2
  80b5f8:	08064700 	call	806470 <__adddf3>
  80b5fc:	8009883a 	mov	r4,r16
  80b600:	1029883a 	mov	r20,r2
  80b604:	1823883a 	mov	r17,r3
  80b608:	08087fc0 	call	8087fc <__floatsidf>
  80b60c:	019427f4 	movhi	r6,20639
  80b610:	01cff4f4 	movhi	r7,16339
  80b614:	319e7ec4 	addi	r6,r6,31227
  80b618:	39d104c4 	addi	r7,r7,17427
  80b61c:	1009883a 	mov	r4,r2
  80b620:	180b883a 	mov	r5,r3
  80b624:	08077680 	call	807768 <__muldf3>
  80b628:	100d883a 	mov	r6,r2
  80b62c:	180f883a 	mov	r7,r3
  80b630:	a009883a 	mov	r4,r20
  80b634:	880b883a 	mov	r5,r17
  80b638:	08064700 	call	806470 <__adddf3>
  80b63c:	1009883a 	mov	r4,r2
  80b640:	180b883a 	mov	r5,r3
  80b644:	1029883a 	mov	r20,r2
  80b648:	1823883a 	mov	r17,r3
  80b64c:	080877c0 	call	80877c <__fixdfsi>
  80b650:	000d883a 	mov	r6,zero
  80b654:	000f883a 	mov	r7,zero
  80b658:	a009883a 	mov	r4,r20
  80b65c:	880b883a 	mov	r5,r17
  80b660:	d8800515 	stw	r2,20(sp)
  80b664:	0812d080 	call	812d08 <__ledf2>
  80b668:	10028716 	blt	r2,zero,80c088 <_dtoa_r+0xc88>
  80b66c:	d8c00517 	ldw	r3,20(sp)
  80b670:	00800584 	movi	r2,22
  80b674:	10c27536 	bltu	r2,r3,80c04c <_dtoa_r+0xc4c>
  80b678:	180490fa 	slli	r2,r3,3
  80b67c:	00c02074 	movhi	r3,129
  80b680:	18d70404 	addi	r3,r3,23568
  80b684:	1885883a 	add	r2,r3,r2
  80b688:	11000017 	ldw	r4,0(r2)
  80b68c:	11400117 	ldw	r5,4(r2)
  80b690:	900d883a 	mov	r6,r18
  80b694:	980f883a 	mov	r7,r19
  80b698:	080768c0 	call	80768c <__gedf2>
  80b69c:	00828d0e 	bge	zero,r2,80c0d4 <_dtoa_r+0xcd4>
  80b6a0:	d9000517 	ldw	r4,20(sp)
  80b6a4:	d8000e15 	stw	zero,56(sp)
  80b6a8:	213fffc4 	addi	r4,r4,-1
  80b6ac:	d9000515 	stw	r4,20(sp)
  80b6b0:	b42dc83a 	sub	r22,r22,r16
  80b6b4:	b5bfffc4 	addi	r22,r22,-1
  80b6b8:	b0026f16 	blt	r22,zero,80c078 <_dtoa_r+0xc78>
  80b6bc:	d8000815 	stw	zero,32(sp)
  80b6c0:	d9c00517 	ldw	r7,20(sp)
  80b6c4:	38026416 	blt	r7,zero,80c058 <_dtoa_r+0xc58>
  80b6c8:	b1ed883a 	add	r22,r22,r7
  80b6cc:	d9c00d15 	stw	r7,52(sp)
  80b6d0:	d8000a15 	stw	zero,40(sp)
  80b6d4:	d9800317 	ldw	r6,12(sp)
  80b6d8:	00800244 	movi	r2,9
  80b6dc:	11811436 	bltu	r2,r6,80bb30 <_dtoa_r+0x730>
  80b6e0:	00800144 	movi	r2,5
  80b6e4:	1184e10e 	bge	r2,r6,80ca6c <_dtoa_r+0x166c>
  80b6e8:	31bfff04 	addi	r6,r6,-4
  80b6ec:	d9800315 	stw	r6,12(sp)
  80b6f0:	0023883a 	mov	r17,zero
  80b6f4:	d9800317 	ldw	r6,12(sp)
  80b6f8:	008000c4 	movi	r2,3
  80b6fc:	30836726 	beq	r6,r2,80c49c <_dtoa_r+0x109c>
  80b700:	1183410e 	bge	r2,r6,80c408 <_dtoa_r+0x1008>
  80b704:	d9c00317 	ldw	r7,12(sp)
  80b708:	00800104 	movi	r2,4
  80b70c:	38827c26 	beq	r7,r2,80c100 <_dtoa_r+0xd00>
  80b710:	00800144 	movi	r2,5
  80b714:	3884c41e 	bne	r7,r2,80ca28 <_dtoa_r+0x1628>
  80b718:	00800044 	movi	r2,1
  80b71c:	d8800b15 	stw	r2,44(sp)
  80b720:	d8c00517 	ldw	r3,20(sp)
  80b724:	d9002217 	ldw	r4,136(sp)
  80b728:	1907883a 	add	r3,r3,r4
  80b72c:	19800044 	addi	r6,r3,1
  80b730:	d8c00c15 	stw	r3,48(sp)
  80b734:	d9800615 	stw	r6,24(sp)
  80b738:	0183a40e 	bge	zero,r6,80c5cc <_dtoa_r+0x11cc>
  80b73c:	d9800617 	ldw	r6,24(sp)
  80b740:	3021883a 	mov	r16,r6
  80b744:	e0001115 	stw	zero,68(fp)
  80b748:	008005c4 	movi	r2,23
  80b74c:	1184c92e 	bgeu	r2,r6,80ca74 <_dtoa_r+0x1674>
  80b750:	00c00044 	movi	r3,1
  80b754:	00800104 	movi	r2,4
  80b758:	1085883a 	add	r2,r2,r2
  80b75c:	11000504 	addi	r4,r2,20
  80b760:	180b883a 	mov	r5,r3
  80b764:	18c00044 	addi	r3,r3,1
  80b768:	313ffb2e 	bgeu	r6,r4,80b758 <__alt_data_end+0xff80b758>
  80b76c:	e1401115 	stw	r5,68(fp)
  80b770:	e009883a 	mov	r4,fp
  80b774:	080ea9c0 	call	80ea9c <_Balloc>
  80b778:	d8800715 	stw	r2,28(sp)
  80b77c:	e0801015 	stw	r2,64(fp)
  80b780:	00800384 	movi	r2,14
  80b784:	1400f736 	bltu	r2,r16,80bb64 <_dtoa_r+0x764>
  80b788:	8800f626 	beq	r17,zero,80bb64 <_dtoa_r+0x764>
  80b78c:	d9c00517 	ldw	r7,20(sp)
  80b790:	01c39a0e 	bge	zero,r7,80c5fc <_dtoa_r+0x11fc>
  80b794:	388003cc 	andi	r2,r7,15
  80b798:	100490fa 	slli	r2,r2,3
  80b79c:	382bd13a 	srai	r21,r7,4
  80b7a0:	00c02074 	movhi	r3,129
  80b7a4:	18d70404 	addi	r3,r3,23568
  80b7a8:	1885883a 	add	r2,r3,r2
  80b7ac:	a8c0040c 	andi	r3,r21,16
  80b7b0:	12400017 	ldw	r9,0(r2)
  80b7b4:	12000117 	ldw	r8,4(r2)
  80b7b8:	18037926 	beq	r3,zero,80c5a0 <_dtoa_r+0x11a0>
  80b7bc:	00802074 	movhi	r2,129
  80b7c0:	1096fa04 	addi	r2,r2,23528
  80b7c4:	11800817 	ldw	r6,32(r2)
  80b7c8:	11c00917 	ldw	r7,36(r2)
  80b7cc:	9009883a 	mov	r4,r18
  80b7d0:	980b883a 	mov	r5,r19
  80b7d4:	da001715 	stw	r8,92(sp)
  80b7d8:	da401615 	stw	r9,88(sp)
  80b7dc:	0806d1c0 	call	806d1c <__divdf3>
  80b7e0:	da001717 	ldw	r8,92(sp)
  80b7e4:	da401617 	ldw	r9,88(sp)
  80b7e8:	ad4003cc 	andi	r21,r21,15
  80b7ec:	040000c4 	movi	r16,3
  80b7f0:	1023883a 	mov	r17,r2
  80b7f4:	1829883a 	mov	r20,r3
  80b7f8:	a8001126 	beq	r21,zero,80b840 <_dtoa_r+0x440>
  80b7fc:	05c02074 	movhi	r23,129
  80b800:	bdd6fa04 	addi	r23,r23,23528
  80b804:	4805883a 	mov	r2,r9
  80b808:	4007883a 	mov	r3,r8
  80b80c:	a980004c 	andi	r6,r21,1
  80b810:	1009883a 	mov	r4,r2
  80b814:	a82bd07a 	srai	r21,r21,1
  80b818:	180b883a 	mov	r5,r3
  80b81c:	30000426 	beq	r6,zero,80b830 <_dtoa_r+0x430>
  80b820:	b9800017 	ldw	r6,0(r23)
  80b824:	b9c00117 	ldw	r7,4(r23)
  80b828:	84000044 	addi	r16,r16,1
  80b82c:	08077680 	call	807768 <__muldf3>
  80b830:	bdc00204 	addi	r23,r23,8
  80b834:	a83ff51e 	bne	r21,zero,80b80c <__alt_data_end+0xff80b80c>
  80b838:	1013883a 	mov	r9,r2
  80b83c:	1811883a 	mov	r8,r3
  80b840:	480d883a 	mov	r6,r9
  80b844:	400f883a 	mov	r7,r8
  80b848:	8809883a 	mov	r4,r17
  80b84c:	a00b883a 	mov	r5,r20
  80b850:	0806d1c0 	call	806d1c <__divdf3>
  80b854:	d8800f15 	stw	r2,60(sp)
  80b858:	d8c01015 	stw	r3,64(sp)
  80b85c:	d8c00e17 	ldw	r3,56(sp)
  80b860:	18000626 	beq	r3,zero,80b87c <_dtoa_r+0x47c>
  80b864:	d9000f17 	ldw	r4,60(sp)
  80b868:	d9401017 	ldw	r5,64(sp)
  80b86c:	000d883a 	mov	r6,zero
  80b870:	01cffc34 	movhi	r7,16368
  80b874:	0812d080 	call	812d08 <__ledf2>
  80b878:	10040b16 	blt	r2,zero,80c8a8 <_dtoa_r+0x14a8>
  80b87c:	8009883a 	mov	r4,r16
  80b880:	08087fc0 	call	8087fc <__floatsidf>
  80b884:	d9800f17 	ldw	r6,60(sp)
  80b888:	d9c01017 	ldw	r7,64(sp)
  80b88c:	1009883a 	mov	r4,r2
  80b890:	180b883a 	mov	r5,r3
  80b894:	08077680 	call	807768 <__muldf3>
  80b898:	000d883a 	mov	r6,zero
  80b89c:	01d00734 	movhi	r7,16412
  80b8a0:	1009883a 	mov	r4,r2
  80b8a4:	180b883a 	mov	r5,r3
  80b8a8:	08064700 	call	806470 <__adddf3>
  80b8ac:	1021883a 	mov	r16,r2
  80b8b0:	d8800617 	ldw	r2,24(sp)
  80b8b4:	047f3034 	movhi	r17,64704
  80b8b8:	1c63883a 	add	r17,r3,r17
  80b8bc:	10031826 	beq	r2,zero,80c520 <_dtoa_r+0x1120>
  80b8c0:	d8c00517 	ldw	r3,20(sp)
  80b8c4:	db000617 	ldw	r12,24(sp)
  80b8c8:	d8c01315 	stw	r3,76(sp)
  80b8cc:	d9000b17 	ldw	r4,44(sp)
  80b8d0:	20038f26 	beq	r4,zero,80c710 <_dtoa_r+0x1310>
  80b8d4:	60bfffc4 	addi	r2,r12,-1
  80b8d8:	100490fa 	slli	r2,r2,3
  80b8dc:	00c02074 	movhi	r3,129
  80b8e0:	18d70404 	addi	r3,r3,23568
  80b8e4:	1885883a 	add	r2,r3,r2
  80b8e8:	11800017 	ldw	r6,0(r2)
  80b8ec:	11c00117 	ldw	r7,4(r2)
  80b8f0:	d8800717 	ldw	r2,28(sp)
  80b8f4:	0009883a 	mov	r4,zero
  80b8f8:	014ff834 	movhi	r5,16352
  80b8fc:	db001615 	stw	r12,88(sp)
  80b900:	15c00044 	addi	r23,r2,1
  80b904:	0806d1c0 	call	806d1c <__divdf3>
  80b908:	800d883a 	mov	r6,r16
  80b90c:	880f883a 	mov	r7,r17
  80b910:	1009883a 	mov	r4,r2
  80b914:	180b883a 	mov	r5,r3
  80b918:	0807e800 	call	807e80 <__subdf3>
  80b91c:	d9401017 	ldw	r5,64(sp)
  80b920:	d9000f17 	ldw	r4,60(sp)
  80b924:	102b883a 	mov	r21,r2
  80b928:	d8c01215 	stw	r3,72(sp)
  80b92c:	080877c0 	call	80877c <__fixdfsi>
  80b930:	1009883a 	mov	r4,r2
  80b934:	1029883a 	mov	r20,r2
  80b938:	08087fc0 	call	8087fc <__floatsidf>
  80b93c:	d9000f17 	ldw	r4,60(sp)
  80b940:	d9401017 	ldw	r5,64(sp)
  80b944:	100d883a 	mov	r6,r2
  80b948:	180f883a 	mov	r7,r3
  80b94c:	0807e800 	call	807e80 <__subdf3>
  80b950:	1823883a 	mov	r17,r3
  80b954:	d8c00717 	ldw	r3,28(sp)
  80b958:	d9401217 	ldw	r5,72(sp)
  80b95c:	a2000c04 	addi	r8,r20,48
  80b960:	1021883a 	mov	r16,r2
  80b964:	1a000005 	stb	r8,0(r3)
  80b968:	800d883a 	mov	r6,r16
  80b96c:	880f883a 	mov	r7,r17
  80b970:	a809883a 	mov	r4,r21
  80b974:	4029883a 	mov	r20,r8
  80b978:	080768c0 	call	80768c <__gedf2>
  80b97c:	00841d16 	blt	zero,r2,80c9f4 <_dtoa_r+0x15f4>
  80b980:	800d883a 	mov	r6,r16
  80b984:	880f883a 	mov	r7,r17
  80b988:	0009883a 	mov	r4,zero
  80b98c:	014ffc34 	movhi	r5,16368
  80b990:	0807e800 	call	807e80 <__subdf3>
  80b994:	d9401217 	ldw	r5,72(sp)
  80b998:	100d883a 	mov	r6,r2
  80b99c:	180f883a 	mov	r7,r3
  80b9a0:	a809883a 	mov	r4,r21
  80b9a4:	080768c0 	call	80768c <__gedf2>
  80b9a8:	db001617 	ldw	r12,88(sp)
  80b9ac:	00840e16 	blt	zero,r2,80c9e8 <_dtoa_r+0x15e8>
  80b9b0:	00800044 	movi	r2,1
  80b9b4:	13006b0e 	bge	r2,r12,80bb64 <_dtoa_r+0x764>
  80b9b8:	d9000717 	ldw	r4,28(sp)
  80b9bc:	dd800f15 	stw	r22,60(sp)
  80b9c0:	dcc01015 	stw	r19,64(sp)
  80b9c4:	2319883a 	add	r12,r4,r12
  80b9c8:	dcc01217 	ldw	r19,72(sp)
  80b9cc:	602d883a 	mov	r22,r12
  80b9d0:	dc801215 	stw	r18,72(sp)
  80b9d4:	b825883a 	mov	r18,r23
  80b9d8:	00000906 	br	80ba00 <_dtoa_r+0x600>
  80b9dc:	0807e800 	call	807e80 <__subdf3>
  80b9e0:	a80d883a 	mov	r6,r21
  80b9e4:	980f883a 	mov	r7,r19
  80b9e8:	1009883a 	mov	r4,r2
  80b9ec:	180b883a 	mov	r5,r3
  80b9f0:	0812d080 	call	812d08 <__ledf2>
  80b9f4:	1003e816 	blt	r2,zero,80c998 <_dtoa_r+0x1598>
  80b9f8:	b825883a 	mov	r18,r23
  80b9fc:	bd83e926 	beq	r23,r22,80c9a4 <_dtoa_r+0x15a4>
  80ba00:	a809883a 	mov	r4,r21
  80ba04:	980b883a 	mov	r5,r19
  80ba08:	000d883a 	mov	r6,zero
  80ba0c:	01d00934 	movhi	r7,16420
  80ba10:	08077680 	call	807768 <__muldf3>
  80ba14:	000d883a 	mov	r6,zero
  80ba18:	01d00934 	movhi	r7,16420
  80ba1c:	8009883a 	mov	r4,r16
  80ba20:	880b883a 	mov	r5,r17
  80ba24:	102b883a 	mov	r21,r2
  80ba28:	1827883a 	mov	r19,r3
  80ba2c:	08077680 	call	807768 <__muldf3>
  80ba30:	180b883a 	mov	r5,r3
  80ba34:	1009883a 	mov	r4,r2
  80ba38:	1821883a 	mov	r16,r3
  80ba3c:	1023883a 	mov	r17,r2
  80ba40:	080877c0 	call	80877c <__fixdfsi>
  80ba44:	1009883a 	mov	r4,r2
  80ba48:	1029883a 	mov	r20,r2
  80ba4c:	08087fc0 	call	8087fc <__floatsidf>
  80ba50:	8809883a 	mov	r4,r17
  80ba54:	800b883a 	mov	r5,r16
  80ba58:	100d883a 	mov	r6,r2
  80ba5c:	180f883a 	mov	r7,r3
  80ba60:	0807e800 	call	807e80 <__subdf3>
  80ba64:	a5000c04 	addi	r20,r20,48
  80ba68:	a80d883a 	mov	r6,r21
  80ba6c:	980f883a 	mov	r7,r19
  80ba70:	1009883a 	mov	r4,r2
  80ba74:	180b883a 	mov	r5,r3
  80ba78:	95000005 	stb	r20,0(r18)
  80ba7c:	1021883a 	mov	r16,r2
  80ba80:	1823883a 	mov	r17,r3
  80ba84:	0812d080 	call	812d08 <__ledf2>
  80ba88:	bdc00044 	addi	r23,r23,1
  80ba8c:	800d883a 	mov	r6,r16
  80ba90:	880f883a 	mov	r7,r17
  80ba94:	0009883a 	mov	r4,zero
  80ba98:	014ffc34 	movhi	r5,16368
  80ba9c:	103fcf0e 	bge	r2,zero,80b9dc <__alt_data_end+0xff80b9dc>
  80baa0:	d8c01317 	ldw	r3,76(sp)
  80baa4:	d8c00515 	stw	r3,20(sp)
  80baa8:	d9400917 	ldw	r5,36(sp)
  80baac:	e009883a 	mov	r4,fp
  80bab0:	080eb440 	call	80eb44 <_Bfree>
  80bab4:	d9000517 	ldw	r4,20(sp)
  80bab8:	d9802317 	ldw	r6,140(sp)
  80babc:	d9c02517 	ldw	r7,148(sp)
  80bac0:	b8000005 	stb	zero,0(r23)
  80bac4:	20800044 	addi	r2,r4,1
  80bac8:	30800015 	stw	r2,0(r6)
  80bacc:	3802aa26 	beq	r7,zero,80c578 <_dtoa_r+0x1178>
  80bad0:	3dc00015 	stw	r23,0(r7)
  80bad4:	d8800717 	ldw	r2,28(sp)
  80bad8:	003e7906 	br	80b4c0 <__alt_data_end+0xff80b4c0>
  80badc:	00800434 	movhi	r2,16
  80bae0:	10bfffc4 	addi	r2,r2,-1
  80bae4:	88a2703a 	and	r17,r17,r2
  80bae8:	883e851e 	bne	r17,zero,80b500 <__alt_data_end+0xff80b500>
  80baec:	00802074 	movhi	r2,129
  80baf0:	1096e604 	addi	r2,r2,23448
  80baf4:	003e8406 	br	80b508 <__alt_data_end+0xff80b508>
  80baf8:	10c00204 	addi	r3,r2,8
  80bafc:	003e8706 	br	80b51c <__alt_data_end+0xff80b51c>
  80bb00:	01400434 	movhi	r5,16
  80bb04:	297fffc4 	addi	r5,r5,-1
  80bb08:	994a703a 	and	r5,r19,r5
  80bb0c:	9009883a 	mov	r4,r18
  80bb10:	843f0044 	addi	r16,r16,-1023
  80bb14:	294ffc34 	orhi	r5,r5,16368
  80bb18:	dd800217 	ldw	r22,8(sp)
  80bb1c:	d8001115 	stw	zero,68(sp)
  80bb20:	003ea506 	br	80b5b8 <__alt_data_end+0xff80b5b8>
  80bb24:	00802074 	movhi	r2,129
  80bb28:	1096dd04 	addi	r2,r2,23412
  80bb2c:	003e6406 	br	80b4c0 <__alt_data_end+0xff80b4c0>
  80bb30:	e0001115 	stw	zero,68(fp)
  80bb34:	000b883a 	mov	r5,zero
  80bb38:	e009883a 	mov	r4,fp
  80bb3c:	080ea9c0 	call	80ea9c <_Balloc>
  80bb40:	01bfffc4 	movi	r6,-1
  80bb44:	01c00044 	movi	r7,1
  80bb48:	d8800715 	stw	r2,28(sp)
  80bb4c:	d9800c15 	stw	r6,48(sp)
  80bb50:	e0801015 	stw	r2,64(fp)
  80bb54:	d8000315 	stw	zero,12(sp)
  80bb58:	d9c00b15 	stw	r7,44(sp)
  80bb5c:	d9800615 	stw	r6,24(sp)
  80bb60:	d8002215 	stw	zero,136(sp)
  80bb64:	d8800117 	ldw	r2,4(sp)
  80bb68:	10008916 	blt	r2,zero,80bd90 <_dtoa_r+0x990>
  80bb6c:	d9000517 	ldw	r4,20(sp)
  80bb70:	00c00384 	movi	r3,14
  80bb74:	19008616 	blt	r3,r4,80bd90 <_dtoa_r+0x990>
  80bb78:	200490fa 	slli	r2,r4,3
  80bb7c:	00c02074 	movhi	r3,129
  80bb80:	d9802217 	ldw	r6,136(sp)
  80bb84:	18d70404 	addi	r3,r3,23568
  80bb88:	1885883a 	add	r2,r3,r2
  80bb8c:	14000017 	ldw	r16,0(r2)
  80bb90:	14400117 	ldw	r17,4(r2)
  80bb94:	30016316 	blt	r6,zero,80c124 <_dtoa_r+0xd24>
  80bb98:	800d883a 	mov	r6,r16
  80bb9c:	880f883a 	mov	r7,r17
  80bba0:	9009883a 	mov	r4,r18
  80bba4:	980b883a 	mov	r5,r19
  80bba8:	0806d1c0 	call	806d1c <__divdf3>
  80bbac:	180b883a 	mov	r5,r3
  80bbb0:	1009883a 	mov	r4,r2
  80bbb4:	080877c0 	call	80877c <__fixdfsi>
  80bbb8:	1009883a 	mov	r4,r2
  80bbbc:	102b883a 	mov	r21,r2
  80bbc0:	08087fc0 	call	8087fc <__floatsidf>
  80bbc4:	800d883a 	mov	r6,r16
  80bbc8:	880f883a 	mov	r7,r17
  80bbcc:	1009883a 	mov	r4,r2
  80bbd0:	180b883a 	mov	r5,r3
  80bbd4:	08077680 	call	807768 <__muldf3>
  80bbd8:	100d883a 	mov	r6,r2
  80bbdc:	180f883a 	mov	r7,r3
  80bbe0:	9009883a 	mov	r4,r18
  80bbe4:	980b883a 	mov	r5,r19
  80bbe8:	0807e800 	call	807e80 <__subdf3>
  80bbec:	d9c00717 	ldw	r7,28(sp)
  80bbf0:	1009883a 	mov	r4,r2
  80bbf4:	a8800c04 	addi	r2,r21,48
  80bbf8:	38800005 	stb	r2,0(r7)
  80bbfc:	3dc00044 	addi	r23,r7,1
  80bc00:	d9c00617 	ldw	r7,24(sp)
  80bc04:	01800044 	movi	r6,1
  80bc08:	180b883a 	mov	r5,r3
  80bc0c:	2005883a 	mov	r2,r4
  80bc10:	39803826 	beq	r7,r6,80bcf4 <_dtoa_r+0x8f4>
  80bc14:	000d883a 	mov	r6,zero
  80bc18:	01d00934 	movhi	r7,16420
  80bc1c:	08077680 	call	807768 <__muldf3>
  80bc20:	000d883a 	mov	r6,zero
  80bc24:	000f883a 	mov	r7,zero
  80bc28:	1009883a 	mov	r4,r2
  80bc2c:	180b883a 	mov	r5,r3
  80bc30:	1025883a 	mov	r18,r2
  80bc34:	1827883a 	mov	r19,r3
  80bc38:	08076040 	call	807604 <__eqdf2>
  80bc3c:	103f9a26 	beq	r2,zero,80baa8 <__alt_data_end+0xff80baa8>
  80bc40:	d9c00617 	ldw	r7,24(sp)
  80bc44:	d8c00717 	ldw	r3,28(sp)
  80bc48:	b829883a 	mov	r20,r23
  80bc4c:	38bfffc4 	addi	r2,r7,-1
  80bc50:	18ad883a 	add	r22,r3,r2
  80bc54:	00000a06 	br	80bc80 <_dtoa_r+0x880>
  80bc58:	08077680 	call	807768 <__muldf3>
  80bc5c:	000d883a 	mov	r6,zero
  80bc60:	000f883a 	mov	r7,zero
  80bc64:	1009883a 	mov	r4,r2
  80bc68:	180b883a 	mov	r5,r3
  80bc6c:	1025883a 	mov	r18,r2
  80bc70:	1827883a 	mov	r19,r3
  80bc74:	b829883a 	mov	r20,r23
  80bc78:	08076040 	call	807604 <__eqdf2>
  80bc7c:	103f8a26 	beq	r2,zero,80baa8 <__alt_data_end+0xff80baa8>
  80bc80:	800d883a 	mov	r6,r16
  80bc84:	880f883a 	mov	r7,r17
  80bc88:	9009883a 	mov	r4,r18
  80bc8c:	980b883a 	mov	r5,r19
  80bc90:	0806d1c0 	call	806d1c <__divdf3>
  80bc94:	180b883a 	mov	r5,r3
  80bc98:	1009883a 	mov	r4,r2
  80bc9c:	080877c0 	call	80877c <__fixdfsi>
  80bca0:	1009883a 	mov	r4,r2
  80bca4:	102b883a 	mov	r21,r2
  80bca8:	08087fc0 	call	8087fc <__floatsidf>
  80bcac:	800d883a 	mov	r6,r16
  80bcb0:	880f883a 	mov	r7,r17
  80bcb4:	1009883a 	mov	r4,r2
  80bcb8:	180b883a 	mov	r5,r3
  80bcbc:	08077680 	call	807768 <__muldf3>
  80bcc0:	100d883a 	mov	r6,r2
  80bcc4:	180f883a 	mov	r7,r3
  80bcc8:	9009883a 	mov	r4,r18
  80bccc:	980b883a 	mov	r5,r19
  80bcd0:	0807e800 	call	807e80 <__subdf3>
  80bcd4:	aa000c04 	addi	r8,r21,48
  80bcd8:	a2000005 	stb	r8,0(r20)
  80bcdc:	000d883a 	mov	r6,zero
  80bce0:	01d00934 	movhi	r7,16420
  80bce4:	1009883a 	mov	r4,r2
  80bce8:	180b883a 	mov	r5,r3
  80bcec:	a5c00044 	addi	r23,r20,1
  80bcf0:	b53fd91e 	bne	r22,r20,80bc58 <__alt_data_end+0xff80bc58>
  80bcf4:	100d883a 	mov	r6,r2
  80bcf8:	180f883a 	mov	r7,r3
  80bcfc:	1009883a 	mov	r4,r2
  80bd00:	180b883a 	mov	r5,r3
  80bd04:	08064700 	call	806470 <__adddf3>
  80bd08:	100d883a 	mov	r6,r2
  80bd0c:	180f883a 	mov	r7,r3
  80bd10:	8009883a 	mov	r4,r16
  80bd14:	880b883a 	mov	r5,r17
  80bd18:	1027883a 	mov	r19,r2
  80bd1c:	1825883a 	mov	r18,r3
  80bd20:	0812d080 	call	812d08 <__ledf2>
  80bd24:	10000816 	blt	r2,zero,80bd48 <_dtoa_r+0x948>
  80bd28:	980d883a 	mov	r6,r19
  80bd2c:	900f883a 	mov	r7,r18
  80bd30:	8009883a 	mov	r4,r16
  80bd34:	880b883a 	mov	r5,r17
  80bd38:	08076040 	call	807604 <__eqdf2>
  80bd3c:	103f5a1e 	bne	r2,zero,80baa8 <__alt_data_end+0xff80baa8>
  80bd40:	ad40004c 	andi	r21,r21,1
  80bd44:	a83f5826 	beq	r21,zero,80baa8 <__alt_data_end+0xff80baa8>
  80bd48:	bd3fffc3 	ldbu	r20,-1(r23)
  80bd4c:	b8bfffc4 	addi	r2,r23,-1
  80bd50:	1007883a 	mov	r3,r2
  80bd54:	01400e44 	movi	r5,57
  80bd58:	d9800717 	ldw	r6,28(sp)
  80bd5c:	00000506 	br	80bd74 <_dtoa_r+0x974>
  80bd60:	18ffffc4 	addi	r3,r3,-1
  80bd64:	11824726 	beq	r2,r6,80c684 <_dtoa_r+0x1284>
  80bd68:	1d000003 	ldbu	r20,0(r3)
  80bd6c:	102f883a 	mov	r23,r2
  80bd70:	10bfffc4 	addi	r2,r2,-1
  80bd74:	a1003fcc 	andi	r4,r20,255
  80bd78:	2100201c 	xori	r4,r4,128
  80bd7c:	213fe004 	addi	r4,r4,-128
  80bd80:	217ff726 	beq	r4,r5,80bd60 <__alt_data_end+0xff80bd60>
  80bd84:	a2000044 	addi	r8,r20,1
  80bd88:	12000005 	stb	r8,0(r2)
  80bd8c:	003f4606 	br	80baa8 <__alt_data_end+0xff80baa8>
  80bd90:	d9000b17 	ldw	r4,44(sp)
  80bd94:	2000c826 	beq	r4,zero,80c0b8 <_dtoa_r+0xcb8>
  80bd98:	d9800317 	ldw	r6,12(sp)
  80bd9c:	00c00044 	movi	r3,1
  80bda0:	1980f90e 	bge	r3,r6,80c188 <_dtoa_r+0xd88>
  80bda4:	d8800617 	ldw	r2,24(sp)
  80bda8:	d8c00a17 	ldw	r3,40(sp)
  80bdac:	157fffc4 	addi	r21,r2,-1
  80bdb0:	1d41f316 	blt	r3,r21,80c580 <_dtoa_r+0x1180>
  80bdb4:	1d6bc83a 	sub	r21,r3,r21
  80bdb8:	d9c00617 	ldw	r7,24(sp)
  80bdbc:	3802aa16 	blt	r7,zero,80c868 <_dtoa_r+0x1468>
  80bdc0:	dd000817 	ldw	r20,32(sp)
  80bdc4:	d8800617 	ldw	r2,24(sp)
  80bdc8:	d8c00817 	ldw	r3,32(sp)
  80bdcc:	01400044 	movi	r5,1
  80bdd0:	e009883a 	mov	r4,fp
  80bdd4:	1887883a 	add	r3,r3,r2
  80bdd8:	d8c00815 	stw	r3,32(sp)
  80bddc:	b0ad883a 	add	r22,r22,r2
  80bde0:	080eea80 	call	80eea8 <__i2b>
  80bde4:	1023883a 	mov	r17,r2
  80bde8:	a0000826 	beq	r20,zero,80be0c <_dtoa_r+0xa0c>
  80bdec:	0580070e 	bge	zero,r22,80be0c <_dtoa_r+0xa0c>
  80bdf0:	a005883a 	mov	r2,r20
  80bdf4:	b500b916 	blt	r22,r20,80c0dc <_dtoa_r+0xcdc>
  80bdf8:	d9000817 	ldw	r4,32(sp)
  80bdfc:	a0a9c83a 	sub	r20,r20,r2
  80be00:	b0adc83a 	sub	r22,r22,r2
  80be04:	2089c83a 	sub	r4,r4,r2
  80be08:	d9000815 	stw	r4,32(sp)
  80be0c:	d9800a17 	ldw	r6,40(sp)
  80be10:	0181810e 	bge	zero,r6,80c418 <_dtoa_r+0x1018>
  80be14:	d9c00b17 	ldw	r7,44(sp)
  80be18:	3800b326 	beq	r7,zero,80c0e8 <_dtoa_r+0xce8>
  80be1c:	a800b226 	beq	r21,zero,80c0e8 <_dtoa_r+0xce8>
  80be20:	880b883a 	mov	r5,r17
  80be24:	a80d883a 	mov	r6,r21
  80be28:	e009883a 	mov	r4,fp
  80be2c:	080f0dc0 	call	80f0dc <__pow5mult>
  80be30:	d9800917 	ldw	r6,36(sp)
  80be34:	100b883a 	mov	r5,r2
  80be38:	e009883a 	mov	r4,fp
  80be3c:	1023883a 	mov	r17,r2
  80be40:	080eee40 	call	80eee4 <__multiply>
  80be44:	1021883a 	mov	r16,r2
  80be48:	d8800a17 	ldw	r2,40(sp)
  80be4c:	d9400917 	ldw	r5,36(sp)
  80be50:	e009883a 	mov	r4,fp
  80be54:	1545c83a 	sub	r2,r2,r21
  80be58:	d8800a15 	stw	r2,40(sp)
  80be5c:	080eb440 	call	80eb44 <_Bfree>
  80be60:	d8c00a17 	ldw	r3,40(sp)
  80be64:	18009f1e 	bne	r3,zero,80c0e4 <_dtoa_r+0xce4>
  80be68:	05c00044 	movi	r23,1
  80be6c:	e009883a 	mov	r4,fp
  80be70:	b80b883a 	mov	r5,r23
  80be74:	080eea80 	call	80eea8 <__i2b>
  80be78:	d9000d17 	ldw	r4,52(sp)
  80be7c:	102b883a 	mov	r21,r2
  80be80:	2000ce26 	beq	r4,zero,80c1bc <_dtoa_r+0xdbc>
  80be84:	200d883a 	mov	r6,r4
  80be88:	100b883a 	mov	r5,r2
  80be8c:	e009883a 	mov	r4,fp
  80be90:	080f0dc0 	call	80f0dc <__pow5mult>
  80be94:	d9800317 	ldw	r6,12(sp)
  80be98:	102b883a 	mov	r21,r2
  80be9c:	b981810e 	bge	r23,r6,80c4a4 <_dtoa_r+0x10a4>
  80bea0:	0027883a 	mov	r19,zero
  80bea4:	a8800417 	ldw	r2,16(r21)
  80bea8:	05c00804 	movi	r23,32
  80beac:	10800104 	addi	r2,r2,4
  80beb0:	1085883a 	add	r2,r2,r2
  80beb4:	1085883a 	add	r2,r2,r2
  80beb8:	a885883a 	add	r2,r21,r2
  80bebc:	11000017 	ldw	r4,0(r2)
  80bec0:	080ed900 	call	80ed90 <__hi0bits>
  80bec4:	b885c83a 	sub	r2,r23,r2
  80bec8:	1585883a 	add	r2,r2,r22
  80becc:	108007cc 	andi	r2,r2,31
  80bed0:	1000b326 	beq	r2,zero,80c1a0 <_dtoa_r+0xda0>
  80bed4:	00c00804 	movi	r3,32
  80bed8:	1887c83a 	sub	r3,r3,r2
  80bedc:	01000104 	movi	r4,4
  80bee0:	20c2cd0e 	bge	r4,r3,80ca18 <_dtoa_r+0x1618>
  80bee4:	00c00704 	movi	r3,28
  80bee8:	1885c83a 	sub	r2,r3,r2
  80beec:	d8c00817 	ldw	r3,32(sp)
  80bef0:	a0a9883a 	add	r20,r20,r2
  80bef4:	b0ad883a 	add	r22,r22,r2
  80bef8:	1887883a 	add	r3,r3,r2
  80befc:	d8c00815 	stw	r3,32(sp)
  80bf00:	d9800817 	ldw	r6,32(sp)
  80bf04:	0180040e 	bge	zero,r6,80bf18 <_dtoa_r+0xb18>
  80bf08:	800b883a 	mov	r5,r16
  80bf0c:	e009883a 	mov	r4,fp
  80bf10:	080f21c0 	call	80f21c <__lshift>
  80bf14:	1021883a 	mov	r16,r2
  80bf18:	0580050e 	bge	zero,r22,80bf30 <_dtoa_r+0xb30>
  80bf1c:	a80b883a 	mov	r5,r21
  80bf20:	b00d883a 	mov	r6,r22
  80bf24:	e009883a 	mov	r4,fp
  80bf28:	080f21c0 	call	80f21c <__lshift>
  80bf2c:	102b883a 	mov	r21,r2
  80bf30:	d9c00e17 	ldw	r7,56(sp)
  80bf34:	3801211e 	bne	r7,zero,80c3bc <_dtoa_r+0xfbc>
  80bf38:	d9800617 	ldw	r6,24(sp)
  80bf3c:	0181380e 	bge	zero,r6,80c420 <_dtoa_r+0x1020>
  80bf40:	d8c00b17 	ldw	r3,44(sp)
  80bf44:	1800ab1e 	bne	r3,zero,80c1f4 <_dtoa_r+0xdf4>
  80bf48:	dc800717 	ldw	r18,28(sp)
  80bf4c:	dcc00617 	ldw	r19,24(sp)
  80bf50:	9029883a 	mov	r20,r18
  80bf54:	00000206 	br	80bf60 <_dtoa_r+0xb60>
  80bf58:	080eb6c0 	call	80eb6c <__multadd>
  80bf5c:	1021883a 	mov	r16,r2
  80bf60:	a80b883a 	mov	r5,r21
  80bf64:	8009883a 	mov	r4,r16
  80bf68:	080b2000 	call	80b200 <quorem>
  80bf6c:	10800c04 	addi	r2,r2,48
  80bf70:	90800005 	stb	r2,0(r18)
  80bf74:	94800044 	addi	r18,r18,1
  80bf78:	9507c83a 	sub	r3,r18,r20
  80bf7c:	000f883a 	mov	r7,zero
  80bf80:	01800284 	movi	r6,10
  80bf84:	800b883a 	mov	r5,r16
  80bf88:	e009883a 	mov	r4,fp
  80bf8c:	1cfff216 	blt	r3,r19,80bf58 <__alt_data_end+0xff80bf58>
  80bf90:	1011883a 	mov	r8,r2
  80bf94:	d8800617 	ldw	r2,24(sp)
  80bf98:	0082370e 	bge	zero,r2,80c878 <_dtoa_r+0x1478>
  80bf9c:	d9000717 	ldw	r4,28(sp)
  80bfa0:	0025883a 	mov	r18,zero
  80bfa4:	20af883a 	add	r23,r4,r2
  80bfa8:	01800044 	movi	r6,1
  80bfac:	800b883a 	mov	r5,r16
  80bfb0:	e009883a 	mov	r4,fp
  80bfb4:	da001715 	stw	r8,92(sp)
  80bfb8:	080f21c0 	call	80f21c <__lshift>
  80bfbc:	a80b883a 	mov	r5,r21
  80bfc0:	1009883a 	mov	r4,r2
  80bfc4:	d8800915 	stw	r2,36(sp)
  80bfc8:	080f3640 	call	80f364 <__mcmp>
  80bfcc:	da001717 	ldw	r8,92(sp)
  80bfd0:	0081800e 	bge	zero,r2,80c5d4 <_dtoa_r+0x11d4>
  80bfd4:	b93fffc3 	ldbu	r4,-1(r23)
  80bfd8:	b8bfffc4 	addi	r2,r23,-1
  80bfdc:	1007883a 	mov	r3,r2
  80bfe0:	01800e44 	movi	r6,57
  80bfe4:	d9c00717 	ldw	r7,28(sp)
  80bfe8:	00000506 	br	80c000 <_dtoa_r+0xc00>
  80bfec:	18ffffc4 	addi	r3,r3,-1
  80bff0:	11c12326 	beq	r2,r7,80c480 <_dtoa_r+0x1080>
  80bff4:	19000003 	ldbu	r4,0(r3)
  80bff8:	102f883a 	mov	r23,r2
  80bffc:	10bfffc4 	addi	r2,r2,-1
  80c000:	21403fcc 	andi	r5,r4,255
  80c004:	2940201c 	xori	r5,r5,128
  80c008:	297fe004 	addi	r5,r5,-128
  80c00c:	29bff726 	beq	r5,r6,80bfec <__alt_data_end+0xff80bfec>
  80c010:	21000044 	addi	r4,r4,1
  80c014:	11000005 	stb	r4,0(r2)
  80c018:	a80b883a 	mov	r5,r21
  80c01c:	e009883a 	mov	r4,fp
  80c020:	080eb440 	call	80eb44 <_Bfree>
  80c024:	883ea026 	beq	r17,zero,80baa8 <__alt_data_end+0xff80baa8>
  80c028:	90000426 	beq	r18,zero,80c03c <_dtoa_r+0xc3c>
  80c02c:	94400326 	beq	r18,r17,80c03c <_dtoa_r+0xc3c>
  80c030:	900b883a 	mov	r5,r18
  80c034:	e009883a 	mov	r4,fp
  80c038:	080eb440 	call	80eb44 <_Bfree>
  80c03c:	880b883a 	mov	r5,r17
  80c040:	e009883a 	mov	r4,fp
  80c044:	080eb440 	call	80eb44 <_Bfree>
  80c048:	003e9706 	br	80baa8 <__alt_data_end+0xff80baa8>
  80c04c:	01800044 	movi	r6,1
  80c050:	d9800e15 	stw	r6,56(sp)
  80c054:	003d9606 	br	80b6b0 <__alt_data_end+0xff80b6b0>
  80c058:	d8800817 	ldw	r2,32(sp)
  80c05c:	d8c00517 	ldw	r3,20(sp)
  80c060:	d8000d15 	stw	zero,52(sp)
  80c064:	10c5c83a 	sub	r2,r2,r3
  80c068:	00c9c83a 	sub	r4,zero,r3
  80c06c:	d8800815 	stw	r2,32(sp)
  80c070:	d9000a15 	stw	r4,40(sp)
  80c074:	003d9706 	br	80b6d4 <__alt_data_end+0xff80b6d4>
  80c078:	05adc83a 	sub	r22,zero,r22
  80c07c:	dd800815 	stw	r22,32(sp)
  80c080:	002d883a 	mov	r22,zero
  80c084:	003d8e06 	br	80b6c0 <__alt_data_end+0xff80b6c0>
  80c088:	d9000517 	ldw	r4,20(sp)
  80c08c:	08087fc0 	call	8087fc <__floatsidf>
  80c090:	100d883a 	mov	r6,r2
  80c094:	180f883a 	mov	r7,r3
  80c098:	a009883a 	mov	r4,r20
  80c09c:	880b883a 	mov	r5,r17
  80c0a0:	08076040 	call	807604 <__eqdf2>
  80c0a4:	103d7126 	beq	r2,zero,80b66c <__alt_data_end+0xff80b66c>
  80c0a8:	d9c00517 	ldw	r7,20(sp)
  80c0ac:	39ffffc4 	addi	r7,r7,-1
  80c0b0:	d9c00515 	stw	r7,20(sp)
  80c0b4:	003d6d06 	br	80b66c <__alt_data_end+0xff80b66c>
  80c0b8:	dd400a17 	ldw	r21,40(sp)
  80c0bc:	dd000817 	ldw	r20,32(sp)
  80c0c0:	0023883a 	mov	r17,zero
  80c0c4:	003f4806 	br	80bde8 <__alt_data_end+0xff80bde8>
  80c0c8:	10e3c83a 	sub	r17,r2,r3
  80c0cc:	9448983a 	sll	r4,r18,r17
  80c0d0:	003d3206 	br	80b59c <__alt_data_end+0xff80b59c>
  80c0d4:	d8000e15 	stw	zero,56(sp)
  80c0d8:	003d7506 	br	80b6b0 <__alt_data_end+0xff80b6b0>
  80c0dc:	b005883a 	mov	r2,r22
  80c0e0:	003f4506 	br	80bdf8 <__alt_data_end+0xff80bdf8>
  80c0e4:	dc000915 	stw	r16,36(sp)
  80c0e8:	d9800a17 	ldw	r6,40(sp)
  80c0ec:	d9400917 	ldw	r5,36(sp)
  80c0f0:	e009883a 	mov	r4,fp
  80c0f4:	080f0dc0 	call	80f0dc <__pow5mult>
  80c0f8:	1021883a 	mov	r16,r2
  80c0fc:	003f5a06 	br	80be68 <__alt_data_end+0xff80be68>
  80c100:	01c00044 	movi	r7,1
  80c104:	d9c00b15 	stw	r7,44(sp)
  80c108:	d8802217 	ldw	r2,136(sp)
  80c10c:	0081280e 	bge	zero,r2,80c5b0 <_dtoa_r+0x11b0>
  80c110:	100d883a 	mov	r6,r2
  80c114:	1021883a 	mov	r16,r2
  80c118:	d8800c15 	stw	r2,48(sp)
  80c11c:	d8800615 	stw	r2,24(sp)
  80c120:	003d8806 	br	80b744 <__alt_data_end+0xff80b744>
  80c124:	d8800617 	ldw	r2,24(sp)
  80c128:	00be9b16 	blt	zero,r2,80bb98 <__alt_data_end+0xff80bb98>
  80c12c:	10010f1e 	bne	r2,zero,80c56c <_dtoa_r+0x116c>
  80c130:	880b883a 	mov	r5,r17
  80c134:	000d883a 	mov	r6,zero
  80c138:	01d00534 	movhi	r7,16404
  80c13c:	8009883a 	mov	r4,r16
  80c140:	08077680 	call	807768 <__muldf3>
  80c144:	900d883a 	mov	r6,r18
  80c148:	980f883a 	mov	r7,r19
  80c14c:	1009883a 	mov	r4,r2
  80c150:	180b883a 	mov	r5,r3
  80c154:	080768c0 	call	80768c <__gedf2>
  80c158:	002b883a 	mov	r21,zero
  80c15c:	0023883a 	mov	r17,zero
  80c160:	1000bf16 	blt	r2,zero,80c460 <_dtoa_r+0x1060>
  80c164:	d9802217 	ldw	r6,136(sp)
  80c168:	ddc00717 	ldw	r23,28(sp)
  80c16c:	018c303a 	nor	r6,zero,r6
  80c170:	d9800515 	stw	r6,20(sp)
  80c174:	a80b883a 	mov	r5,r21
  80c178:	e009883a 	mov	r4,fp
  80c17c:	080eb440 	call	80eb44 <_Bfree>
  80c180:	883e4926 	beq	r17,zero,80baa8 <__alt_data_end+0xff80baa8>
  80c184:	003fad06 	br	80c03c <__alt_data_end+0xff80c03c>
  80c188:	d9c01117 	ldw	r7,68(sp)
  80c18c:	3801bc26 	beq	r7,zero,80c880 <_dtoa_r+0x1480>
  80c190:	10810cc4 	addi	r2,r2,1075
  80c194:	dd400a17 	ldw	r21,40(sp)
  80c198:	dd000817 	ldw	r20,32(sp)
  80c19c:	003f0a06 	br	80bdc8 <__alt_data_end+0xff80bdc8>
  80c1a0:	00800704 	movi	r2,28
  80c1a4:	d9000817 	ldw	r4,32(sp)
  80c1a8:	a0a9883a 	add	r20,r20,r2
  80c1ac:	b0ad883a 	add	r22,r22,r2
  80c1b0:	2089883a 	add	r4,r4,r2
  80c1b4:	d9000815 	stw	r4,32(sp)
  80c1b8:	003f5106 	br	80bf00 <__alt_data_end+0xff80bf00>
  80c1bc:	d8c00317 	ldw	r3,12(sp)
  80c1c0:	b8c1fc0e 	bge	r23,r3,80c9b4 <_dtoa_r+0x15b4>
  80c1c4:	0027883a 	mov	r19,zero
  80c1c8:	b805883a 	mov	r2,r23
  80c1cc:	003f3e06 	br	80bec8 <__alt_data_end+0xff80bec8>
  80c1d0:	880b883a 	mov	r5,r17
  80c1d4:	e009883a 	mov	r4,fp
  80c1d8:	000f883a 	mov	r7,zero
  80c1dc:	01800284 	movi	r6,10
  80c1e0:	080eb6c0 	call	80eb6c <__multadd>
  80c1e4:	d9000c17 	ldw	r4,48(sp)
  80c1e8:	1023883a 	mov	r17,r2
  80c1ec:	0102040e 	bge	zero,r4,80ca00 <_dtoa_r+0x1600>
  80c1f0:	d9000615 	stw	r4,24(sp)
  80c1f4:	0500050e 	bge	zero,r20,80c20c <_dtoa_r+0xe0c>
  80c1f8:	880b883a 	mov	r5,r17
  80c1fc:	a00d883a 	mov	r6,r20
  80c200:	e009883a 	mov	r4,fp
  80c204:	080f21c0 	call	80f21c <__lshift>
  80c208:	1023883a 	mov	r17,r2
  80c20c:	9801241e 	bne	r19,zero,80c6a0 <_dtoa_r+0x12a0>
  80c210:	8829883a 	mov	r20,r17
  80c214:	d9000617 	ldw	r4,24(sp)
  80c218:	dcc00717 	ldw	r19,28(sp)
  80c21c:	9480004c 	andi	r18,r18,1
  80c220:	20bfffc4 	addi	r2,r4,-1
  80c224:	9885883a 	add	r2,r19,r2
  80c228:	d8800415 	stw	r2,16(sp)
  80c22c:	dc800615 	stw	r18,24(sp)
  80c230:	a80b883a 	mov	r5,r21
  80c234:	8009883a 	mov	r4,r16
  80c238:	080b2000 	call	80b200 <quorem>
  80c23c:	880b883a 	mov	r5,r17
  80c240:	8009883a 	mov	r4,r16
  80c244:	102f883a 	mov	r23,r2
  80c248:	080f3640 	call	80f364 <__mcmp>
  80c24c:	a80b883a 	mov	r5,r21
  80c250:	a00d883a 	mov	r6,r20
  80c254:	e009883a 	mov	r4,fp
  80c258:	102d883a 	mov	r22,r2
  80c25c:	080f3c40 	call	80f3c4 <__mdiff>
  80c260:	1007883a 	mov	r3,r2
  80c264:	10800317 	ldw	r2,12(r2)
  80c268:	bc800c04 	addi	r18,r23,48
  80c26c:	180b883a 	mov	r5,r3
  80c270:	10004e1e 	bne	r2,zero,80c3ac <_dtoa_r+0xfac>
  80c274:	8009883a 	mov	r4,r16
  80c278:	d8c01615 	stw	r3,88(sp)
  80c27c:	080f3640 	call	80f364 <__mcmp>
  80c280:	d8c01617 	ldw	r3,88(sp)
  80c284:	e009883a 	mov	r4,fp
  80c288:	d8801615 	stw	r2,88(sp)
  80c28c:	180b883a 	mov	r5,r3
  80c290:	080eb440 	call	80eb44 <_Bfree>
  80c294:	d8801617 	ldw	r2,88(sp)
  80c298:	1000041e 	bne	r2,zero,80c2ac <_dtoa_r+0xeac>
  80c29c:	d9800317 	ldw	r6,12(sp)
  80c2a0:	3000021e 	bne	r6,zero,80c2ac <_dtoa_r+0xeac>
  80c2a4:	d8c00617 	ldw	r3,24(sp)
  80c2a8:	18003726 	beq	r3,zero,80c388 <_dtoa_r+0xf88>
  80c2ac:	b0002016 	blt	r22,zero,80c330 <_dtoa_r+0xf30>
  80c2b0:	b000041e 	bne	r22,zero,80c2c4 <_dtoa_r+0xec4>
  80c2b4:	d9000317 	ldw	r4,12(sp)
  80c2b8:	2000021e 	bne	r4,zero,80c2c4 <_dtoa_r+0xec4>
  80c2bc:	d8c00617 	ldw	r3,24(sp)
  80c2c0:	18001b26 	beq	r3,zero,80c330 <_dtoa_r+0xf30>
  80c2c4:	00810716 	blt	zero,r2,80c6e4 <_dtoa_r+0x12e4>
  80c2c8:	d8c00417 	ldw	r3,16(sp)
  80c2cc:	9d800044 	addi	r22,r19,1
  80c2d0:	9c800005 	stb	r18,0(r19)
  80c2d4:	b02f883a 	mov	r23,r22
  80c2d8:	98c10626 	beq	r19,r3,80c6f4 <_dtoa_r+0x12f4>
  80c2dc:	800b883a 	mov	r5,r16
  80c2e0:	000f883a 	mov	r7,zero
  80c2e4:	01800284 	movi	r6,10
  80c2e8:	e009883a 	mov	r4,fp
  80c2ec:	080eb6c0 	call	80eb6c <__multadd>
  80c2f0:	1021883a 	mov	r16,r2
  80c2f4:	000f883a 	mov	r7,zero
  80c2f8:	01800284 	movi	r6,10
  80c2fc:	880b883a 	mov	r5,r17
  80c300:	e009883a 	mov	r4,fp
  80c304:	8d002526 	beq	r17,r20,80c39c <_dtoa_r+0xf9c>
  80c308:	080eb6c0 	call	80eb6c <__multadd>
  80c30c:	a00b883a 	mov	r5,r20
  80c310:	000f883a 	mov	r7,zero
  80c314:	01800284 	movi	r6,10
  80c318:	e009883a 	mov	r4,fp
  80c31c:	1023883a 	mov	r17,r2
  80c320:	080eb6c0 	call	80eb6c <__multadd>
  80c324:	1029883a 	mov	r20,r2
  80c328:	b027883a 	mov	r19,r22
  80c32c:	003fc006 	br	80c230 <__alt_data_end+0xff80c230>
  80c330:	9011883a 	mov	r8,r18
  80c334:	00800e0e 	bge	zero,r2,80c370 <_dtoa_r+0xf70>
  80c338:	800b883a 	mov	r5,r16
  80c33c:	01800044 	movi	r6,1
  80c340:	e009883a 	mov	r4,fp
  80c344:	da001715 	stw	r8,92(sp)
  80c348:	080f21c0 	call	80f21c <__lshift>
  80c34c:	a80b883a 	mov	r5,r21
  80c350:	1009883a 	mov	r4,r2
  80c354:	1021883a 	mov	r16,r2
  80c358:	080f3640 	call	80f364 <__mcmp>
  80c35c:	da001717 	ldw	r8,92(sp)
  80c360:	0081960e 	bge	zero,r2,80c9bc <_dtoa_r+0x15bc>
  80c364:	00800e44 	movi	r2,57
  80c368:	40817026 	beq	r8,r2,80c92c <_dtoa_r+0x152c>
  80c36c:	ba000c44 	addi	r8,r23,49
  80c370:	8825883a 	mov	r18,r17
  80c374:	9dc00044 	addi	r23,r19,1
  80c378:	9a000005 	stb	r8,0(r19)
  80c37c:	a023883a 	mov	r17,r20
  80c380:	dc000915 	stw	r16,36(sp)
  80c384:	003f2406 	br	80c018 <__alt_data_end+0xff80c018>
  80c388:	00800e44 	movi	r2,57
  80c38c:	9011883a 	mov	r8,r18
  80c390:	90816626 	beq	r18,r2,80c92c <_dtoa_r+0x152c>
  80c394:	05bff516 	blt	zero,r22,80c36c <__alt_data_end+0xff80c36c>
  80c398:	003ff506 	br	80c370 <__alt_data_end+0xff80c370>
  80c39c:	080eb6c0 	call	80eb6c <__multadd>
  80c3a0:	1023883a 	mov	r17,r2
  80c3a4:	1029883a 	mov	r20,r2
  80c3a8:	003fdf06 	br	80c328 <__alt_data_end+0xff80c328>
  80c3ac:	e009883a 	mov	r4,fp
  80c3b0:	080eb440 	call	80eb44 <_Bfree>
  80c3b4:	00800044 	movi	r2,1
  80c3b8:	003fbc06 	br	80c2ac <__alt_data_end+0xff80c2ac>
  80c3bc:	a80b883a 	mov	r5,r21
  80c3c0:	8009883a 	mov	r4,r16
  80c3c4:	080f3640 	call	80f364 <__mcmp>
  80c3c8:	103edb0e 	bge	r2,zero,80bf38 <__alt_data_end+0xff80bf38>
  80c3cc:	800b883a 	mov	r5,r16
  80c3d0:	000f883a 	mov	r7,zero
  80c3d4:	01800284 	movi	r6,10
  80c3d8:	e009883a 	mov	r4,fp
  80c3dc:	080eb6c0 	call	80eb6c <__multadd>
  80c3e0:	1021883a 	mov	r16,r2
  80c3e4:	d8800517 	ldw	r2,20(sp)
  80c3e8:	d8c00b17 	ldw	r3,44(sp)
  80c3ec:	10bfffc4 	addi	r2,r2,-1
  80c3f0:	d8800515 	stw	r2,20(sp)
  80c3f4:	183f761e 	bne	r3,zero,80c1d0 <__alt_data_end+0xff80c1d0>
  80c3f8:	d9000c17 	ldw	r4,48(sp)
  80c3fc:	0101730e 	bge	zero,r4,80c9cc <_dtoa_r+0x15cc>
  80c400:	d9000615 	stw	r4,24(sp)
  80c404:	003ed006 	br	80bf48 <__alt_data_end+0xff80bf48>
  80c408:	00800084 	movi	r2,2
  80c40c:	3081861e 	bne	r6,r2,80ca28 <_dtoa_r+0x1628>
  80c410:	d8000b15 	stw	zero,44(sp)
  80c414:	003f3c06 	br	80c108 <__alt_data_end+0xff80c108>
  80c418:	dc000917 	ldw	r16,36(sp)
  80c41c:	003e9206 	br	80be68 <__alt_data_end+0xff80be68>
  80c420:	d9c00317 	ldw	r7,12(sp)
  80c424:	00800084 	movi	r2,2
  80c428:	11fec50e 	bge	r2,r7,80bf40 <__alt_data_end+0xff80bf40>
  80c42c:	d9000617 	ldw	r4,24(sp)
  80c430:	20013c1e 	bne	r4,zero,80c924 <_dtoa_r+0x1524>
  80c434:	a80b883a 	mov	r5,r21
  80c438:	000f883a 	mov	r7,zero
  80c43c:	01800144 	movi	r6,5
  80c440:	e009883a 	mov	r4,fp
  80c444:	080eb6c0 	call	80eb6c <__multadd>
  80c448:	100b883a 	mov	r5,r2
  80c44c:	8009883a 	mov	r4,r16
  80c450:	102b883a 	mov	r21,r2
  80c454:	080f3640 	call	80f364 <__mcmp>
  80c458:	dc000915 	stw	r16,36(sp)
  80c45c:	00bf410e 	bge	zero,r2,80c164 <__alt_data_end+0xff80c164>
  80c460:	d9c00717 	ldw	r7,28(sp)
  80c464:	00800c44 	movi	r2,49
  80c468:	38800005 	stb	r2,0(r7)
  80c46c:	d8800517 	ldw	r2,20(sp)
  80c470:	3dc00044 	addi	r23,r7,1
  80c474:	10800044 	addi	r2,r2,1
  80c478:	d8800515 	stw	r2,20(sp)
  80c47c:	003f3d06 	br	80c174 <__alt_data_end+0xff80c174>
  80c480:	d9800517 	ldw	r6,20(sp)
  80c484:	d9c00717 	ldw	r7,28(sp)
  80c488:	00800c44 	movi	r2,49
  80c48c:	31800044 	addi	r6,r6,1
  80c490:	d9800515 	stw	r6,20(sp)
  80c494:	38800005 	stb	r2,0(r7)
  80c498:	003edf06 	br	80c018 <__alt_data_end+0xff80c018>
  80c49c:	d8000b15 	stw	zero,44(sp)
  80c4a0:	003c9f06 	br	80b720 <__alt_data_end+0xff80b720>
  80c4a4:	903e7e1e 	bne	r18,zero,80bea0 <__alt_data_end+0xff80bea0>
  80c4a8:	00800434 	movhi	r2,16
  80c4ac:	10bfffc4 	addi	r2,r2,-1
  80c4b0:	9884703a 	and	r2,r19,r2
  80c4b4:	1000ea1e 	bne	r2,zero,80c860 <_dtoa_r+0x1460>
  80c4b8:	9cdffc2c 	andhi	r19,r19,32752
  80c4bc:	9800e826 	beq	r19,zero,80c860 <_dtoa_r+0x1460>
  80c4c0:	d9c00817 	ldw	r7,32(sp)
  80c4c4:	b5800044 	addi	r22,r22,1
  80c4c8:	04c00044 	movi	r19,1
  80c4cc:	39c00044 	addi	r7,r7,1
  80c4d0:	d9c00815 	stw	r7,32(sp)
  80c4d4:	d8800d17 	ldw	r2,52(sp)
  80c4d8:	103e721e 	bne	r2,zero,80bea4 <__alt_data_end+0xff80bea4>
  80c4dc:	00800044 	movi	r2,1
  80c4e0:	003e7906 	br	80bec8 <__alt_data_end+0xff80bec8>
  80c4e4:	8009883a 	mov	r4,r16
  80c4e8:	08087fc0 	call	8087fc <__floatsidf>
  80c4ec:	d9800f17 	ldw	r6,60(sp)
  80c4f0:	d9c01017 	ldw	r7,64(sp)
  80c4f4:	1009883a 	mov	r4,r2
  80c4f8:	180b883a 	mov	r5,r3
  80c4fc:	08077680 	call	807768 <__muldf3>
  80c500:	000d883a 	mov	r6,zero
  80c504:	01d00734 	movhi	r7,16412
  80c508:	1009883a 	mov	r4,r2
  80c50c:	180b883a 	mov	r5,r3
  80c510:	08064700 	call	806470 <__adddf3>
  80c514:	047f3034 	movhi	r17,64704
  80c518:	1021883a 	mov	r16,r2
  80c51c:	1c63883a 	add	r17,r3,r17
  80c520:	d9000f17 	ldw	r4,60(sp)
  80c524:	d9401017 	ldw	r5,64(sp)
  80c528:	000d883a 	mov	r6,zero
  80c52c:	01d00534 	movhi	r7,16404
  80c530:	0807e800 	call	807e80 <__subdf3>
  80c534:	800d883a 	mov	r6,r16
  80c538:	880f883a 	mov	r7,r17
  80c53c:	1009883a 	mov	r4,r2
  80c540:	180b883a 	mov	r5,r3
  80c544:	102b883a 	mov	r21,r2
  80c548:	1829883a 	mov	r20,r3
  80c54c:	080768c0 	call	80768c <__gedf2>
  80c550:	00806c16 	blt	zero,r2,80c704 <_dtoa_r+0x1304>
  80c554:	89e0003c 	xorhi	r7,r17,32768
  80c558:	800d883a 	mov	r6,r16
  80c55c:	a809883a 	mov	r4,r21
  80c560:	a00b883a 	mov	r5,r20
  80c564:	0812d080 	call	812d08 <__ledf2>
  80c568:	103d7e0e 	bge	r2,zero,80bb64 <__alt_data_end+0xff80bb64>
  80c56c:	002b883a 	mov	r21,zero
  80c570:	0023883a 	mov	r17,zero
  80c574:	003efb06 	br	80c164 <__alt_data_end+0xff80c164>
  80c578:	d8800717 	ldw	r2,28(sp)
  80c57c:	003bd006 	br	80b4c0 <__alt_data_end+0xff80b4c0>
  80c580:	d9000a17 	ldw	r4,40(sp)
  80c584:	d9800d17 	ldw	r6,52(sp)
  80c588:	dd400a15 	stw	r21,40(sp)
  80c58c:	a905c83a 	sub	r2,r21,r4
  80c590:	308d883a 	add	r6,r6,r2
  80c594:	d9800d15 	stw	r6,52(sp)
  80c598:	002b883a 	mov	r21,zero
  80c59c:	003e0606 	br	80bdb8 <__alt_data_end+0xff80bdb8>
  80c5a0:	9023883a 	mov	r17,r18
  80c5a4:	9829883a 	mov	r20,r19
  80c5a8:	04000084 	movi	r16,2
  80c5ac:	003c9206 	br	80b7f8 <__alt_data_end+0xff80b7f8>
  80c5b0:	04000044 	movi	r16,1
  80c5b4:	dc000c15 	stw	r16,48(sp)
  80c5b8:	dc000615 	stw	r16,24(sp)
  80c5bc:	dc002215 	stw	r16,136(sp)
  80c5c0:	e0001115 	stw	zero,68(fp)
  80c5c4:	000b883a 	mov	r5,zero
  80c5c8:	003c6906 	br	80b770 <__alt_data_end+0xff80b770>
  80c5cc:	3021883a 	mov	r16,r6
  80c5d0:	003ffb06 	br	80c5c0 <__alt_data_end+0xff80c5c0>
  80c5d4:	1000021e 	bne	r2,zero,80c5e0 <_dtoa_r+0x11e0>
  80c5d8:	4200004c 	andi	r8,r8,1
  80c5dc:	403e7d1e 	bne	r8,zero,80bfd4 <__alt_data_end+0xff80bfd4>
  80c5e0:	01000c04 	movi	r4,48
  80c5e4:	00000106 	br	80c5ec <_dtoa_r+0x11ec>
  80c5e8:	102f883a 	mov	r23,r2
  80c5ec:	b8bfffc4 	addi	r2,r23,-1
  80c5f0:	10c00007 	ldb	r3,0(r2)
  80c5f4:	193ffc26 	beq	r3,r4,80c5e8 <__alt_data_end+0xff80c5e8>
  80c5f8:	003e8706 	br	80c018 <__alt_data_end+0xff80c018>
  80c5fc:	d8800517 	ldw	r2,20(sp)
  80c600:	00a3c83a 	sub	r17,zero,r2
  80c604:	8800a426 	beq	r17,zero,80c898 <_dtoa_r+0x1498>
  80c608:	888003cc 	andi	r2,r17,15
  80c60c:	100490fa 	slli	r2,r2,3
  80c610:	00c02074 	movhi	r3,129
  80c614:	18d70404 	addi	r3,r3,23568
  80c618:	1885883a 	add	r2,r3,r2
  80c61c:	11800017 	ldw	r6,0(r2)
  80c620:	11c00117 	ldw	r7,4(r2)
  80c624:	9009883a 	mov	r4,r18
  80c628:	980b883a 	mov	r5,r19
  80c62c:	8823d13a 	srai	r17,r17,4
  80c630:	08077680 	call	807768 <__muldf3>
  80c634:	d8800f15 	stw	r2,60(sp)
  80c638:	d8c01015 	stw	r3,64(sp)
  80c63c:	8800e826 	beq	r17,zero,80c9e0 <_dtoa_r+0x15e0>
  80c640:	05002074 	movhi	r20,129
  80c644:	a516fa04 	addi	r20,r20,23528
  80c648:	04000084 	movi	r16,2
  80c64c:	8980004c 	andi	r6,r17,1
  80c650:	1009883a 	mov	r4,r2
  80c654:	8823d07a 	srai	r17,r17,1
  80c658:	180b883a 	mov	r5,r3
  80c65c:	30000426 	beq	r6,zero,80c670 <_dtoa_r+0x1270>
  80c660:	a1800017 	ldw	r6,0(r20)
  80c664:	a1c00117 	ldw	r7,4(r20)
  80c668:	84000044 	addi	r16,r16,1
  80c66c:	08077680 	call	807768 <__muldf3>
  80c670:	a5000204 	addi	r20,r20,8
  80c674:	883ff51e 	bne	r17,zero,80c64c <__alt_data_end+0xff80c64c>
  80c678:	d8800f15 	stw	r2,60(sp)
  80c67c:	d8c01015 	stw	r3,64(sp)
  80c680:	003c7606 	br	80b85c <__alt_data_end+0xff80b85c>
  80c684:	00c00c04 	movi	r3,48
  80c688:	10c00005 	stb	r3,0(r2)
  80c68c:	d8c00517 	ldw	r3,20(sp)
  80c690:	bd3fffc3 	ldbu	r20,-1(r23)
  80c694:	18c00044 	addi	r3,r3,1
  80c698:	d8c00515 	stw	r3,20(sp)
  80c69c:	003db906 	br	80bd84 <__alt_data_end+0xff80bd84>
  80c6a0:	89400117 	ldw	r5,4(r17)
  80c6a4:	e009883a 	mov	r4,fp
  80c6a8:	080ea9c0 	call	80ea9c <_Balloc>
  80c6ac:	89800417 	ldw	r6,16(r17)
  80c6b0:	89400304 	addi	r5,r17,12
  80c6b4:	11000304 	addi	r4,r2,12
  80c6b8:	31800084 	addi	r6,r6,2
  80c6bc:	318d883a 	add	r6,r6,r6
  80c6c0:	318d883a 	add	r6,r6,r6
  80c6c4:	1027883a 	mov	r19,r2
  80c6c8:	080e6d00 	call	80e6d0 <memcpy>
  80c6cc:	01800044 	movi	r6,1
  80c6d0:	980b883a 	mov	r5,r19
  80c6d4:	e009883a 	mov	r4,fp
  80c6d8:	080f21c0 	call	80f21c <__lshift>
  80c6dc:	1029883a 	mov	r20,r2
  80c6e0:	003ecc06 	br	80c214 <__alt_data_end+0xff80c214>
  80c6e4:	00800e44 	movi	r2,57
  80c6e8:	90809026 	beq	r18,r2,80c92c <_dtoa_r+0x152c>
  80c6ec:	92000044 	addi	r8,r18,1
  80c6f0:	003f1f06 	br	80c370 <__alt_data_end+0xff80c370>
  80c6f4:	9011883a 	mov	r8,r18
  80c6f8:	8825883a 	mov	r18,r17
  80c6fc:	a023883a 	mov	r17,r20
  80c700:	003e2906 	br	80bfa8 <__alt_data_end+0xff80bfa8>
  80c704:	002b883a 	mov	r21,zero
  80c708:	0023883a 	mov	r17,zero
  80c70c:	003f5406 	br	80c460 <__alt_data_end+0xff80c460>
  80c710:	61bfffc4 	addi	r6,r12,-1
  80c714:	300490fa 	slli	r2,r6,3
  80c718:	00c02074 	movhi	r3,129
  80c71c:	18d70404 	addi	r3,r3,23568
  80c720:	1885883a 	add	r2,r3,r2
  80c724:	11000017 	ldw	r4,0(r2)
  80c728:	11400117 	ldw	r5,4(r2)
  80c72c:	d8800717 	ldw	r2,28(sp)
  80c730:	880f883a 	mov	r7,r17
  80c734:	d9801215 	stw	r6,72(sp)
  80c738:	800d883a 	mov	r6,r16
  80c73c:	db001615 	stw	r12,88(sp)
  80c740:	15c00044 	addi	r23,r2,1
  80c744:	08077680 	call	807768 <__muldf3>
  80c748:	d9401017 	ldw	r5,64(sp)
  80c74c:	d9000f17 	ldw	r4,60(sp)
  80c750:	d8c01515 	stw	r3,84(sp)
  80c754:	d8801415 	stw	r2,80(sp)
  80c758:	080877c0 	call	80877c <__fixdfsi>
  80c75c:	1009883a 	mov	r4,r2
  80c760:	1021883a 	mov	r16,r2
  80c764:	08087fc0 	call	8087fc <__floatsidf>
  80c768:	d9000f17 	ldw	r4,60(sp)
  80c76c:	d9401017 	ldw	r5,64(sp)
  80c770:	100d883a 	mov	r6,r2
  80c774:	180f883a 	mov	r7,r3
  80c778:	0807e800 	call	807e80 <__subdf3>
  80c77c:	1829883a 	mov	r20,r3
  80c780:	d8c00717 	ldw	r3,28(sp)
  80c784:	84000c04 	addi	r16,r16,48
  80c788:	1023883a 	mov	r17,r2
  80c78c:	1c000005 	stb	r16,0(r3)
  80c790:	db001617 	ldw	r12,88(sp)
  80c794:	00800044 	movi	r2,1
  80c798:	60802226 	beq	r12,r2,80c824 <_dtoa_r+0x1424>
  80c79c:	d9c00717 	ldw	r7,28(sp)
  80c7a0:	8805883a 	mov	r2,r17
  80c7a4:	b82b883a 	mov	r21,r23
  80c7a8:	3b19883a 	add	r12,r7,r12
  80c7ac:	6023883a 	mov	r17,r12
  80c7b0:	a007883a 	mov	r3,r20
  80c7b4:	dc800f15 	stw	r18,60(sp)
  80c7b8:	000d883a 	mov	r6,zero
  80c7bc:	01d00934 	movhi	r7,16420
  80c7c0:	1009883a 	mov	r4,r2
  80c7c4:	180b883a 	mov	r5,r3
  80c7c8:	08077680 	call	807768 <__muldf3>
  80c7cc:	180b883a 	mov	r5,r3
  80c7d0:	1009883a 	mov	r4,r2
  80c7d4:	1829883a 	mov	r20,r3
  80c7d8:	1025883a 	mov	r18,r2
  80c7dc:	080877c0 	call	80877c <__fixdfsi>
  80c7e0:	1009883a 	mov	r4,r2
  80c7e4:	1021883a 	mov	r16,r2
  80c7e8:	08087fc0 	call	8087fc <__floatsidf>
  80c7ec:	100d883a 	mov	r6,r2
  80c7f0:	180f883a 	mov	r7,r3
  80c7f4:	9009883a 	mov	r4,r18
  80c7f8:	a00b883a 	mov	r5,r20
  80c7fc:	84000c04 	addi	r16,r16,48
  80c800:	0807e800 	call	807e80 <__subdf3>
  80c804:	ad400044 	addi	r21,r21,1
  80c808:	ac3fffc5 	stb	r16,-1(r21)
  80c80c:	ac7fea1e 	bne	r21,r17,80c7b8 <__alt_data_end+0xff80c7b8>
  80c810:	1023883a 	mov	r17,r2
  80c814:	d8801217 	ldw	r2,72(sp)
  80c818:	dc800f17 	ldw	r18,60(sp)
  80c81c:	1829883a 	mov	r20,r3
  80c820:	b8af883a 	add	r23,r23,r2
  80c824:	d9001417 	ldw	r4,80(sp)
  80c828:	d9401517 	ldw	r5,84(sp)
  80c82c:	000d883a 	mov	r6,zero
  80c830:	01cff834 	movhi	r7,16352
  80c834:	08064700 	call	806470 <__adddf3>
  80c838:	880d883a 	mov	r6,r17
  80c83c:	a00f883a 	mov	r7,r20
  80c840:	1009883a 	mov	r4,r2
  80c844:	180b883a 	mov	r5,r3
  80c848:	0812d080 	call	812d08 <__ledf2>
  80c84c:	10003e0e 	bge	r2,zero,80c948 <_dtoa_r+0x1548>
  80c850:	d9001317 	ldw	r4,76(sp)
  80c854:	bd3fffc3 	ldbu	r20,-1(r23)
  80c858:	d9000515 	stw	r4,20(sp)
  80c85c:	003d3b06 	br	80bd4c <__alt_data_end+0xff80bd4c>
  80c860:	0027883a 	mov	r19,zero
  80c864:	003f1b06 	br	80c4d4 <__alt_data_end+0xff80c4d4>
  80c868:	d8800817 	ldw	r2,32(sp)
  80c86c:	11e9c83a 	sub	r20,r2,r7
  80c870:	0005883a 	mov	r2,zero
  80c874:	003d5406 	br	80bdc8 <__alt_data_end+0xff80bdc8>
  80c878:	00800044 	movi	r2,1
  80c87c:	003dc706 	br	80bf9c <__alt_data_end+0xff80bf9c>
  80c880:	d8c00217 	ldw	r3,8(sp)
  80c884:	00800d84 	movi	r2,54
  80c888:	dd400a17 	ldw	r21,40(sp)
  80c88c:	10c5c83a 	sub	r2,r2,r3
  80c890:	dd000817 	ldw	r20,32(sp)
  80c894:	003d4c06 	br	80bdc8 <__alt_data_end+0xff80bdc8>
  80c898:	dc800f15 	stw	r18,60(sp)
  80c89c:	dcc01015 	stw	r19,64(sp)
  80c8a0:	04000084 	movi	r16,2
  80c8a4:	003bed06 	br	80b85c <__alt_data_end+0xff80b85c>
  80c8a8:	d9000617 	ldw	r4,24(sp)
  80c8ac:	203f0d26 	beq	r4,zero,80c4e4 <__alt_data_end+0xff80c4e4>
  80c8b0:	d9800c17 	ldw	r6,48(sp)
  80c8b4:	01bcab0e 	bge	zero,r6,80bb64 <__alt_data_end+0xff80bb64>
  80c8b8:	d9401017 	ldw	r5,64(sp)
  80c8bc:	d9000f17 	ldw	r4,60(sp)
  80c8c0:	000d883a 	mov	r6,zero
  80c8c4:	01d00934 	movhi	r7,16420
  80c8c8:	08077680 	call	807768 <__muldf3>
  80c8cc:	81000044 	addi	r4,r16,1
  80c8d0:	d8800f15 	stw	r2,60(sp)
  80c8d4:	d8c01015 	stw	r3,64(sp)
  80c8d8:	08087fc0 	call	8087fc <__floatsidf>
  80c8dc:	d9800f17 	ldw	r6,60(sp)
  80c8e0:	d9c01017 	ldw	r7,64(sp)
  80c8e4:	1009883a 	mov	r4,r2
  80c8e8:	180b883a 	mov	r5,r3
  80c8ec:	08077680 	call	807768 <__muldf3>
  80c8f0:	01d00734 	movhi	r7,16412
  80c8f4:	000d883a 	mov	r6,zero
  80c8f8:	1009883a 	mov	r4,r2
  80c8fc:	180b883a 	mov	r5,r3
  80c900:	08064700 	call	806470 <__adddf3>
  80c904:	d9c00517 	ldw	r7,20(sp)
  80c908:	047f3034 	movhi	r17,64704
  80c90c:	1021883a 	mov	r16,r2
  80c910:	39ffffc4 	addi	r7,r7,-1
  80c914:	d9c01315 	stw	r7,76(sp)
  80c918:	1c63883a 	add	r17,r3,r17
  80c91c:	db000c17 	ldw	r12,48(sp)
  80c920:	003bea06 	br	80b8cc <__alt_data_end+0xff80b8cc>
  80c924:	dc000915 	stw	r16,36(sp)
  80c928:	003e0e06 	br	80c164 <__alt_data_end+0xff80c164>
  80c92c:	01000e44 	movi	r4,57
  80c930:	8825883a 	mov	r18,r17
  80c934:	9dc00044 	addi	r23,r19,1
  80c938:	99000005 	stb	r4,0(r19)
  80c93c:	a023883a 	mov	r17,r20
  80c940:	dc000915 	stw	r16,36(sp)
  80c944:	003da406 	br	80bfd8 <__alt_data_end+0xff80bfd8>
  80c948:	d9801417 	ldw	r6,80(sp)
  80c94c:	d9c01517 	ldw	r7,84(sp)
  80c950:	0009883a 	mov	r4,zero
  80c954:	014ff834 	movhi	r5,16352
  80c958:	0807e800 	call	807e80 <__subdf3>
  80c95c:	880d883a 	mov	r6,r17
  80c960:	a00f883a 	mov	r7,r20
  80c964:	1009883a 	mov	r4,r2
  80c968:	180b883a 	mov	r5,r3
  80c96c:	080768c0 	call	80768c <__gedf2>
  80c970:	00bc7c0e 	bge	zero,r2,80bb64 <__alt_data_end+0xff80bb64>
  80c974:	01000c04 	movi	r4,48
  80c978:	00000106 	br	80c980 <_dtoa_r+0x1580>
  80c97c:	102f883a 	mov	r23,r2
  80c980:	b8bfffc4 	addi	r2,r23,-1
  80c984:	10c00007 	ldb	r3,0(r2)
  80c988:	193ffc26 	beq	r3,r4,80c97c <__alt_data_end+0xff80c97c>
  80c98c:	d9801317 	ldw	r6,76(sp)
  80c990:	d9800515 	stw	r6,20(sp)
  80c994:	003c4406 	br	80baa8 <__alt_data_end+0xff80baa8>
  80c998:	d9801317 	ldw	r6,76(sp)
  80c99c:	d9800515 	stw	r6,20(sp)
  80c9a0:	003cea06 	br	80bd4c <__alt_data_end+0xff80bd4c>
  80c9a4:	dd800f17 	ldw	r22,60(sp)
  80c9a8:	dcc01017 	ldw	r19,64(sp)
  80c9ac:	dc801217 	ldw	r18,72(sp)
  80c9b0:	003c6c06 	br	80bb64 <__alt_data_end+0xff80bb64>
  80c9b4:	903e031e 	bne	r18,zero,80c1c4 <__alt_data_end+0xff80c1c4>
  80c9b8:	003ebb06 	br	80c4a8 <__alt_data_end+0xff80c4a8>
  80c9bc:	103e6c1e 	bne	r2,zero,80c370 <__alt_data_end+0xff80c370>
  80c9c0:	4080004c 	andi	r2,r8,1
  80c9c4:	103e6a26 	beq	r2,zero,80c370 <__alt_data_end+0xff80c370>
  80c9c8:	003e6606 	br	80c364 <__alt_data_end+0xff80c364>
  80c9cc:	d8c00317 	ldw	r3,12(sp)
  80c9d0:	00800084 	movi	r2,2
  80c9d4:	10c02916 	blt	r2,r3,80ca7c <_dtoa_r+0x167c>
  80c9d8:	d9000c17 	ldw	r4,48(sp)
  80c9dc:	003e8806 	br	80c400 <__alt_data_end+0xff80c400>
  80c9e0:	04000084 	movi	r16,2
  80c9e4:	003b9d06 	br	80b85c <__alt_data_end+0xff80b85c>
  80c9e8:	d9001317 	ldw	r4,76(sp)
  80c9ec:	d9000515 	stw	r4,20(sp)
  80c9f0:	003cd606 	br	80bd4c <__alt_data_end+0xff80bd4c>
  80c9f4:	d8801317 	ldw	r2,76(sp)
  80c9f8:	d8800515 	stw	r2,20(sp)
  80c9fc:	003c2a06 	br	80baa8 <__alt_data_end+0xff80baa8>
  80ca00:	d9800317 	ldw	r6,12(sp)
  80ca04:	00800084 	movi	r2,2
  80ca08:	11801516 	blt	r2,r6,80ca60 <_dtoa_r+0x1660>
  80ca0c:	d9c00c17 	ldw	r7,48(sp)
  80ca10:	d9c00615 	stw	r7,24(sp)
  80ca14:	003df706 	br	80c1f4 <__alt_data_end+0xff80c1f4>
  80ca18:	193d3926 	beq	r3,r4,80bf00 <__alt_data_end+0xff80bf00>
  80ca1c:	00c00f04 	movi	r3,60
  80ca20:	1885c83a 	sub	r2,r3,r2
  80ca24:	003ddf06 	br	80c1a4 <__alt_data_end+0xff80c1a4>
  80ca28:	e009883a 	mov	r4,fp
  80ca2c:	e0001115 	stw	zero,68(fp)
  80ca30:	000b883a 	mov	r5,zero
  80ca34:	080ea9c0 	call	80ea9c <_Balloc>
  80ca38:	d8800715 	stw	r2,28(sp)
  80ca3c:	d8c00717 	ldw	r3,28(sp)
  80ca40:	00bfffc4 	movi	r2,-1
  80ca44:	01000044 	movi	r4,1
  80ca48:	d8800c15 	stw	r2,48(sp)
  80ca4c:	e0c01015 	stw	r3,64(fp)
  80ca50:	d9000b15 	stw	r4,44(sp)
  80ca54:	d8800615 	stw	r2,24(sp)
  80ca58:	d8002215 	stw	zero,136(sp)
  80ca5c:	003c4106 	br	80bb64 <__alt_data_end+0xff80bb64>
  80ca60:	d8c00c17 	ldw	r3,48(sp)
  80ca64:	d8c00615 	stw	r3,24(sp)
  80ca68:	003e7006 	br	80c42c <__alt_data_end+0xff80c42c>
  80ca6c:	04400044 	movi	r17,1
  80ca70:	003b2006 	br	80b6f4 <__alt_data_end+0xff80b6f4>
  80ca74:	000b883a 	mov	r5,zero
  80ca78:	003b3d06 	br	80b770 <__alt_data_end+0xff80b770>
  80ca7c:	d8800c17 	ldw	r2,48(sp)
  80ca80:	d8800615 	stw	r2,24(sp)
  80ca84:	003e6906 	br	80c42c <__alt_data_end+0xff80c42c>

0080ca88 <__sflush_r>:
  80ca88:	2880030b 	ldhu	r2,12(r5)
  80ca8c:	defffb04 	addi	sp,sp,-20
  80ca90:	dcc00315 	stw	r19,12(sp)
  80ca94:	dc400115 	stw	r17,4(sp)
  80ca98:	dfc00415 	stw	ra,16(sp)
  80ca9c:	dc800215 	stw	r18,8(sp)
  80caa0:	dc000015 	stw	r16,0(sp)
  80caa4:	10c0020c 	andi	r3,r2,8
  80caa8:	2823883a 	mov	r17,r5
  80caac:	2027883a 	mov	r19,r4
  80cab0:	1800311e 	bne	r3,zero,80cb78 <__sflush_r+0xf0>
  80cab4:	28c00117 	ldw	r3,4(r5)
  80cab8:	10820014 	ori	r2,r2,2048
  80cabc:	2880030d 	sth	r2,12(r5)
  80cac0:	00c04b0e 	bge	zero,r3,80cbf0 <__sflush_r+0x168>
  80cac4:	8a000a17 	ldw	r8,40(r17)
  80cac8:	40002326 	beq	r8,zero,80cb58 <__sflush_r+0xd0>
  80cacc:	9c000017 	ldw	r16,0(r19)
  80cad0:	10c4000c 	andi	r3,r2,4096
  80cad4:	98000015 	stw	zero,0(r19)
  80cad8:	18004826 	beq	r3,zero,80cbfc <__sflush_r+0x174>
  80cadc:	89801417 	ldw	r6,80(r17)
  80cae0:	10c0010c 	andi	r3,r2,4
  80cae4:	18000626 	beq	r3,zero,80cb00 <__sflush_r+0x78>
  80cae8:	88c00117 	ldw	r3,4(r17)
  80caec:	88800c17 	ldw	r2,48(r17)
  80caf0:	30cdc83a 	sub	r6,r6,r3
  80caf4:	10000226 	beq	r2,zero,80cb00 <__sflush_r+0x78>
  80caf8:	88800f17 	ldw	r2,60(r17)
  80cafc:	308dc83a 	sub	r6,r6,r2
  80cb00:	89400717 	ldw	r5,28(r17)
  80cb04:	000f883a 	mov	r7,zero
  80cb08:	9809883a 	mov	r4,r19
  80cb0c:	403ee83a 	callr	r8
  80cb10:	00ffffc4 	movi	r3,-1
  80cb14:	10c04426 	beq	r2,r3,80cc28 <__sflush_r+0x1a0>
  80cb18:	88c0030b 	ldhu	r3,12(r17)
  80cb1c:	89000417 	ldw	r4,16(r17)
  80cb20:	88000115 	stw	zero,4(r17)
  80cb24:	197dffcc 	andi	r5,r3,63487
  80cb28:	8940030d 	sth	r5,12(r17)
  80cb2c:	89000015 	stw	r4,0(r17)
  80cb30:	18c4000c 	andi	r3,r3,4096
  80cb34:	18002c1e 	bne	r3,zero,80cbe8 <__sflush_r+0x160>
  80cb38:	89400c17 	ldw	r5,48(r17)
  80cb3c:	9c000015 	stw	r16,0(r19)
  80cb40:	28000526 	beq	r5,zero,80cb58 <__sflush_r+0xd0>
  80cb44:	88801004 	addi	r2,r17,64
  80cb48:	28800226 	beq	r5,r2,80cb54 <__sflush_r+0xcc>
  80cb4c:	9809883a 	mov	r4,r19
  80cb50:	080d1f40 	call	80d1f4 <_free_r>
  80cb54:	88000c15 	stw	zero,48(r17)
  80cb58:	0005883a 	mov	r2,zero
  80cb5c:	dfc00417 	ldw	ra,16(sp)
  80cb60:	dcc00317 	ldw	r19,12(sp)
  80cb64:	dc800217 	ldw	r18,8(sp)
  80cb68:	dc400117 	ldw	r17,4(sp)
  80cb6c:	dc000017 	ldw	r16,0(sp)
  80cb70:	dec00504 	addi	sp,sp,20
  80cb74:	f800283a 	ret
  80cb78:	2c800417 	ldw	r18,16(r5)
  80cb7c:	903ff626 	beq	r18,zero,80cb58 <__alt_data_end+0xff80cb58>
  80cb80:	2c000017 	ldw	r16,0(r5)
  80cb84:	108000cc 	andi	r2,r2,3
  80cb88:	2c800015 	stw	r18,0(r5)
  80cb8c:	84a1c83a 	sub	r16,r16,r18
  80cb90:	1000131e 	bne	r2,zero,80cbe0 <__sflush_r+0x158>
  80cb94:	28800517 	ldw	r2,20(r5)
  80cb98:	88800215 	stw	r2,8(r17)
  80cb9c:	04000316 	blt	zero,r16,80cbac <__sflush_r+0x124>
  80cba0:	003fed06 	br	80cb58 <__alt_data_end+0xff80cb58>
  80cba4:	90a5883a 	add	r18,r18,r2
  80cba8:	043feb0e 	bge	zero,r16,80cb58 <__alt_data_end+0xff80cb58>
  80cbac:	88800917 	ldw	r2,36(r17)
  80cbb0:	89400717 	ldw	r5,28(r17)
  80cbb4:	800f883a 	mov	r7,r16
  80cbb8:	900d883a 	mov	r6,r18
  80cbbc:	9809883a 	mov	r4,r19
  80cbc0:	103ee83a 	callr	r2
  80cbc4:	80a1c83a 	sub	r16,r16,r2
  80cbc8:	00bff616 	blt	zero,r2,80cba4 <__alt_data_end+0xff80cba4>
  80cbcc:	88c0030b 	ldhu	r3,12(r17)
  80cbd0:	00bfffc4 	movi	r2,-1
  80cbd4:	18c01014 	ori	r3,r3,64
  80cbd8:	88c0030d 	sth	r3,12(r17)
  80cbdc:	003fdf06 	br	80cb5c <__alt_data_end+0xff80cb5c>
  80cbe0:	0005883a 	mov	r2,zero
  80cbe4:	003fec06 	br	80cb98 <__alt_data_end+0xff80cb98>
  80cbe8:	88801415 	stw	r2,80(r17)
  80cbec:	003fd206 	br	80cb38 <__alt_data_end+0xff80cb38>
  80cbf0:	28c00f17 	ldw	r3,60(r5)
  80cbf4:	00ffb316 	blt	zero,r3,80cac4 <__alt_data_end+0xff80cac4>
  80cbf8:	003fd706 	br	80cb58 <__alt_data_end+0xff80cb58>
  80cbfc:	89400717 	ldw	r5,28(r17)
  80cc00:	000d883a 	mov	r6,zero
  80cc04:	01c00044 	movi	r7,1
  80cc08:	9809883a 	mov	r4,r19
  80cc0c:	403ee83a 	callr	r8
  80cc10:	100d883a 	mov	r6,r2
  80cc14:	00bfffc4 	movi	r2,-1
  80cc18:	30801426 	beq	r6,r2,80cc6c <__sflush_r+0x1e4>
  80cc1c:	8880030b 	ldhu	r2,12(r17)
  80cc20:	8a000a17 	ldw	r8,40(r17)
  80cc24:	003fae06 	br	80cae0 <__alt_data_end+0xff80cae0>
  80cc28:	98c00017 	ldw	r3,0(r19)
  80cc2c:	183fba26 	beq	r3,zero,80cb18 <__alt_data_end+0xff80cb18>
  80cc30:	01000744 	movi	r4,29
  80cc34:	19000626 	beq	r3,r4,80cc50 <__sflush_r+0x1c8>
  80cc38:	01000584 	movi	r4,22
  80cc3c:	19000426 	beq	r3,r4,80cc50 <__sflush_r+0x1c8>
  80cc40:	88c0030b 	ldhu	r3,12(r17)
  80cc44:	18c01014 	ori	r3,r3,64
  80cc48:	88c0030d 	sth	r3,12(r17)
  80cc4c:	003fc306 	br	80cb5c <__alt_data_end+0xff80cb5c>
  80cc50:	8880030b 	ldhu	r2,12(r17)
  80cc54:	88c00417 	ldw	r3,16(r17)
  80cc58:	88000115 	stw	zero,4(r17)
  80cc5c:	10bdffcc 	andi	r2,r2,63487
  80cc60:	8880030d 	sth	r2,12(r17)
  80cc64:	88c00015 	stw	r3,0(r17)
  80cc68:	003fb306 	br	80cb38 <__alt_data_end+0xff80cb38>
  80cc6c:	98800017 	ldw	r2,0(r19)
  80cc70:	103fea26 	beq	r2,zero,80cc1c <__alt_data_end+0xff80cc1c>
  80cc74:	00c00744 	movi	r3,29
  80cc78:	10c00226 	beq	r2,r3,80cc84 <__sflush_r+0x1fc>
  80cc7c:	00c00584 	movi	r3,22
  80cc80:	10c0031e 	bne	r2,r3,80cc90 <__sflush_r+0x208>
  80cc84:	9c000015 	stw	r16,0(r19)
  80cc88:	0005883a 	mov	r2,zero
  80cc8c:	003fb306 	br	80cb5c <__alt_data_end+0xff80cb5c>
  80cc90:	88c0030b 	ldhu	r3,12(r17)
  80cc94:	3005883a 	mov	r2,r6
  80cc98:	18c01014 	ori	r3,r3,64
  80cc9c:	88c0030d 	sth	r3,12(r17)
  80cca0:	003fae06 	br	80cb5c <__alt_data_end+0xff80cb5c>

0080cca4 <_fflush_r>:
  80cca4:	defffd04 	addi	sp,sp,-12
  80cca8:	dc000115 	stw	r16,4(sp)
  80ccac:	dfc00215 	stw	ra,8(sp)
  80ccb0:	2021883a 	mov	r16,r4
  80ccb4:	20000226 	beq	r4,zero,80ccc0 <_fflush_r+0x1c>
  80ccb8:	20800e17 	ldw	r2,56(r4)
  80ccbc:	10000c26 	beq	r2,zero,80ccf0 <_fflush_r+0x4c>
  80ccc0:	2880030f 	ldh	r2,12(r5)
  80ccc4:	1000051e 	bne	r2,zero,80ccdc <_fflush_r+0x38>
  80ccc8:	0005883a 	mov	r2,zero
  80cccc:	dfc00217 	ldw	ra,8(sp)
  80ccd0:	dc000117 	ldw	r16,4(sp)
  80ccd4:	dec00304 	addi	sp,sp,12
  80ccd8:	f800283a 	ret
  80ccdc:	8009883a 	mov	r4,r16
  80cce0:	dfc00217 	ldw	ra,8(sp)
  80cce4:	dc000117 	ldw	r16,4(sp)
  80cce8:	dec00304 	addi	sp,sp,12
  80ccec:	080ca881 	jmpi	80ca88 <__sflush_r>
  80ccf0:	d9400015 	stw	r5,0(sp)
  80ccf4:	080d0800 	call	80d080 <__sinit>
  80ccf8:	d9400017 	ldw	r5,0(sp)
  80ccfc:	003ff006 	br	80ccc0 <__alt_data_end+0xff80ccc0>

0080cd00 <fflush>:
  80cd00:	20000526 	beq	r4,zero,80cd18 <fflush+0x18>
  80cd04:	00802074 	movhi	r2,129
  80cd08:	109df704 	addi	r2,r2,30684
  80cd0c:	200b883a 	mov	r5,r4
  80cd10:	11000017 	ldw	r4,0(r2)
  80cd14:	080cca41 	jmpi	80cca4 <_fflush_r>
  80cd18:	00802074 	movhi	r2,129
  80cd1c:	109df604 	addi	r2,r2,30680
  80cd20:	11000017 	ldw	r4,0(r2)
  80cd24:	01402074 	movhi	r5,129
  80cd28:	29732904 	addi	r5,r5,-13148
  80cd2c:	080da841 	jmpi	80da84 <_fwalk_reent>

0080cd30 <__fp_unlock>:
  80cd30:	0005883a 	mov	r2,zero
  80cd34:	f800283a 	ret

0080cd38 <_cleanup_r>:
  80cd38:	01402074 	movhi	r5,129
  80cd3c:	2946a704 	addi	r5,r5,6812
  80cd40:	080da841 	jmpi	80da84 <_fwalk_reent>

0080cd44 <__sinit.part.1>:
  80cd44:	defff704 	addi	sp,sp,-36
  80cd48:	00c02074 	movhi	r3,129
  80cd4c:	dfc00815 	stw	ra,32(sp)
  80cd50:	ddc00715 	stw	r23,28(sp)
  80cd54:	dd800615 	stw	r22,24(sp)
  80cd58:	dd400515 	stw	r21,20(sp)
  80cd5c:	dd000415 	stw	r20,16(sp)
  80cd60:	dcc00315 	stw	r19,12(sp)
  80cd64:	dc800215 	stw	r18,8(sp)
  80cd68:	dc400115 	stw	r17,4(sp)
  80cd6c:	dc000015 	stw	r16,0(sp)
  80cd70:	18f34e04 	addi	r3,r3,-13000
  80cd74:	24000117 	ldw	r16,4(r4)
  80cd78:	20c00f15 	stw	r3,60(r4)
  80cd7c:	2080bb04 	addi	r2,r4,748
  80cd80:	00c000c4 	movi	r3,3
  80cd84:	20c0b915 	stw	r3,740(r4)
  80cd88:	2080ba15 	stw	r2,744(r4)
  80cd8c:	2000b815 	stw	zero,736(r4)
  80cd90:	05c00204 	movi	r23,8
  80cd94:	00800104 	movi	r2,4
  80cd98:	2025883a 	mov	r18,r4
  80cd9c:	b80d883a 	mov	r6,r23
  80cda0:	81001704 	addi	r4,r16,92
  80cda4:	000b883a 	mov	r5,zero
  80cda8:	80000015 	stw	zero,0(r16)
  80cdac:	80000115 	stw	zero,4(r16)
  80cdb0:	80000215 	stw	zero,8(r16)
  80cdb4:	8080030d 	sth	r2,12(r16)
  80cdb8:	80001915 	stw	zero,100(r16)
  80cdbc:	8000038d 	sth	zero,14(r16)
  80cdc0:	80000415 	stw	zero,16(r16)
  80cdc4:	80000515 	stw	zero,20(r16)
  80cdc8:	80000615 	stw	zero,24(r16)
  80cdcc:	080e9740 	call	80e974 <memset>
  80cdd0:	05802074 	movhi	r22,129
  80cdd4:	94400217 	ldw	r17,8(r18)
  80cdd8:	05402074 	movhi	r21,129
  80cddc:	05002074 	movhi	r20,129
  80cde0:	04c02074 	movhi	r19,129
  80cde4:	b5803104 	addi	r22,r22,196
  80cde8:	ad404804 	addi	r21,r21,288
  80cdec:	a5006704 	addi	r20,r20,412
  80cdf0:	9cc07e04 	addi	r19,r19,504
  80cdf4:	85800815 	stw	r22,32(r16)
  80cdf8:	85400915 	stw	r21,36(r16)
  80cdfc:	85000a15 	stw	r20,40(r16)
  80ce00:	84c00b15 	stw	r19,44(r16)
  80ce04:	84000715 	stw	r16,28(r16)
  80ce08:	00800284 	movi	r2,10
  80ce0c:	8880030d 	sth	r2,12(r17)
  80ce10:	00800044 	movi	r2,1
  80ce14:	b80d883a 	mov	r6,r23
  80ce18:	89001704 	addi	r4,r17,92
  80ce1c:	000b883a 	mov	r5,zero
  80ce20:	88000015 	stw	zero,0(r17)
  80ce24:	88000115 	stw	zero,4(r17)
  80ce28:	88000215 	stw	zero,8(r17)
  80ce2c:	88001915 	stw	zero,100(r17)
  80ce30:	8880038d 	sth	r2,14(r17)
  80ce34:	88000415 	stw	zero,16(r17)
  80ce38:	88000515 	stw	zero,20(r17)
  80ce3c:	88000615 	stw	zero,24(r17)
  80ce40:	080e9740 	call	80e974 <memset>
  80ce44:	94000317 	ldw	r16,12(r18)
  80ce48:	00800484 	movi	r2,18
  80ce4c:	8c400715 	stw	r17,28(r17)
  80ce50:	8d800815 	stw	r22,32(r17)
  80ce54:	8d400915 	stw	r21,36(r17)
  80ce58:	8d000a15 	stw	r20,40(r17)
  80ce5c:	8cc00b15 	stw	r19,44(r17)
  80ce60:	8080030d 	sth	r2,12(r16)
  80ce64:	00800084 	movi	r2,2
  80ce68:	80000015 	stw	zero,0(r16)
  80ce6c:	80000115 	stw	zero,4(r16)
  80ce70:	80000215 	stw	zero,8(r16)
  80ce74:	80001915 	stw	zero,100(r16)
  80ce78:	8080038d 	sth	r2,14(r16)
  80ce7c:	80000415 	stw	zero,16(r16)
  80ce80:	80000515 	stw	zero,20(r16)
  80ce84:	80000615 	stw	zero,24(r16)
  80ce88:	b80d883a 	mov	r6,r23
  80ce8c:	000b883a 	mov	r5,zero
  80ce90:	81001704 	addi	r4,r16,92
  80ce94:	080e9740 	call	80e974 <memset>
  80ce98:	00800044 	movi	r2,1
  80ce9c:	84000715 	stw	r16,28(r16)
  80cea0:	85800815 	stw	r22,32(r16)
  80cea4:	85400915 	stw	r21,36(r16)
  80cea8:	85000a15 	stw	r20,40(r16)
  80ceac:	84c00b15 	stw	r19,44(r16)
  80ceb0:	90800e15 	stw	r2,56(r18)
  80ceb4:	dfc00817 	ldw	ra,32(sp)
  80ceb8:	ddc00717 	ldw	r23,28(sp)
  80cebc:	dd800617 	ldw	r22,24(sp)
  80cec0:	dd400517 	ldw	r21,20(sp)
  80cec4:	dd000417 	ldw	r20,16(sp)
  80cec8:	dcc00317 	ldw	r19,12(sp)
  80cecc:	dc800217 	ldw	r18,8(sp)
  80ced0:	dc400117 	ldw	r17,4(sp)
  80ced4:	dc000017 	ldw	r16,0(sp)
  80ced8:	dec00904 	addi	sp,sp,36
  80cedc:	f800283a 	ret

0080cee0 <__fp_lock>:
  80cee0:	0005883a 	mov	r2,zero
  80cee4:	f800283a 	ret

0080cee8 <__sfmoreglue>:
  80cee8:	defffc04 	addi	sp,sp,-16
  80ceec:	dc400115 	stw	r17,4(sp)
  80cef0:	2c7fffc4 	addi	r17,r5,-1
  80cef4:	8c401a24 	muli	r17,r17,104
  80cef8:	dc800215 	stw	r18,8(sp)
  80cefc:	2825883a 	mov	r18,r5
  80cf00:	89401d04 	addi	r5,r17,116
  80cf04:	dc000015 	stw	r16,0(sp)
  80cf08:	dfc00315 	stw	ra,12(sp)
  80cf0c:	080dde00 	call	80dde0 <_malloc_r>
  80cf10:	1021883a 	mov	r16,r2
  80cf14:	10000726 	beq	r2,zero,80cf34 <__sfmoreglue+0x4c>
  80cf18:	11000304 	addi	r4,r2,12
  80cf1c:	10000015 	stw	zero,0(r2)
  80cf20:	14800115 	stw	r18,4(r2)
  80cf24:	11000215 	stw	r4,8(r2)
  80cf28:	89801a04 	addi	r6,r17,104
  80cf2c:	000b883a 	mov	r5,zero
  80cf30:	080e9740 	call	80e974 <memset>
  80cf34:	8005883a 	mov	r2,r16
  80cf38:	dfc00317 	ldw	ra,12(sp)
  80cf3c:	dc800217 	ldw	r18,8(sp)
  80cf40:	dc400117 	ldw	r17,4(sp)
  80cf44:	dc000017 	ldw	r16,0(sp)
  80cf48:	dec00404 	addi	sp,sp,16
  80cf4c:	f800283a 	ret

0080cf50 <__sfp>:
  80cf50:	defffb04 	addi	sp,sp,-20
  80cf54:	dc000015 	stw	r16,0(sp)
  80cf58:	04002074 	movhi	r16,129
  80cf5c:	841df604 	addi	r16,r16,30680
  80cf60:	dcc00315 	stw	r19,12(sp)
  80cf64:	2027883a 	mov	r19,r4
  80cf68:	81000017 	ldw	r4,0(r16)
  80cf6c:	dfc00415 	stw	ra,16(sp)
  80cf70:	dc800215 	stw	r18,8(sp)
  80cf74:	20800e17 	ldw	r2,56(r4)
  80cf78:	dc400115 	stw	r17,4(sp)
  80cf7c:	1000021e 	bne	r2,zero,80cf88 <__sfp+0x38>
  80cf80:	080cd440 	call	80cd44 <__sinit.part.1>
  80cf84:	81000017 	ldw	r4,0(r16)
  80cf88:	2480b804 	addi	r18,r4,736
  80cf8c:	047fffc4 	movi	r17,-1
  80cf90:	91000117 	ldw	r4,4(r18)
  80cf94:	94000217 	ldw	r16,8(r18)
  80cf98:	213fffc4 	addi	r4,r4,-1
  80cf9c:	20000a16 	blt	r4,zero,80cfc8 <__sfp+0x78>
  80cfa0:	8080030f 	ldh	r2,12(r16)
  80cfa4:	10000c26 	beq	r2,zero,80cfd8 <__sfp+0x88>
  80cfa8:	80c01d04 	addi	r3,r16,116
  80cfac:	00000206 	br	80cfb8 <__sfp+0x68>
  80cfb0:	18bfe60f 	ldh	r2,-104(r3)
  80cfb4:	10000826 	beq	r2,zero,80cfd8 <__sfp+0x88>
  80cfb8:	213fffc4 	addi	r4,r4,-1
  80cfbc:	1c3ffd04 	addi	r16,r3,-12
  80cfc0:	18c01a04 	addi	r3,r3,104
  80cfc4:	247ffa1e 	bne	r4,r17,80cfb0 <__alt_data_end+0xff80cfb0>
  80cfc8:	90800017 	ldw	r2,0(r18)
  80cfcc:	10001d26 	beq	r2,zero,80d044 <__sfp+0xf4>
  80cfd0:	1025883a 	mov	r18,r2
  80cfd4:	003fee06 	br	80cf90 <__alt_data_end+0xff80cf90>
  80cfd8:	00bfffc4 	movi	r2,-1
  80cfdc:	8080038d 	sth	r2,14(r16)
  80cfe0:	00800044 	movi	r2,1
  80cfe4:	8080030d 	sth	r2,12(r16)
  80cfe8:	80001915 	stw	zero,100(r16)
  80cfec:	80000015 	stw	zero,0(r16)
  80cff0:	80000215 	stw	zero,8(r16)
  80cff4:	80000115 	stw	zero,4(r16)
  80cff8:	80000415 	stw	zero,16(r16)
  80cffc:	80000515 	stw	zero,20(r16)
  80d000:	80000615 	stw	zero,24(r16)
  80d004:	01800204 	movi	r6,8
  80d008:	000b883a 	mov	r5,zero
  80d00c:	81001704 	addi	r4,r16,92
  80d010:	080e9740 	call	80e974 <memset>
  80d014:	8005883a 	mov	r2,r16
  80d018:	80000c15 	stw	zero,48(r16)
  80d01c:	80000d15 	stw	zero,52(r16)
  80d020:	80001115 	stw	zero,68(r16)
  80d024:	80001215 	stw	zero,72(r16)
  80d028:	dfc00417 	ldw	ra,16(sp)
  80d02c:	dcc00317 	ldw	r19,12(sp)
  80d030:	dc800217 	ldw	r18,8(sp)
  80d034:	dc400117 	ldw	r17,4(sp)
  80d038:	dc000017 	ldw	r16,0(sp)
  80d03c:	dec00504 	addi	sp,sp,20
  80d040:	f800283a 	ret
  80d044:	01400104 	movi	r5,4
  80d048:	9809883a 	mov	r4,r19
  80d04c:	080cee80 	call	80cee8 <__sfmoreglue>
  80d050:	90800015 	stw	r2,0(r18)
  80d054:	103fde1e 	bne	r2,zero,80cfd0 <__alt_data_end+0xff80cfd0>
  80d058:	00800304 	movi	r2,12
  80d05c:	98800015 	stw	r2,0(r19)
  80d060:	0005883a 	mov	r2,zero
  80d064:	003ff006 	br	80d028 <__alt_data_end+0xff80d028>

0080d068 <_cleanup>:
  80d068:	00802074 	movhi	r2,129
  80d06c:	109df604 	addi	r2,r2,30680
  80d070:	11000017 	ldw	r4,0(r2)
  80d074:	01402074 	movhi	r5,129
  80d078:	2946a704 	addi	r5,r5,6812
  80d07c:	080da841 	jmpi	80da84 <_fwalk_reent>

0080d080 <__sinit>:
  80d080:	20800e17 	ldw	r2,56(r4)
  80d084:	10000126 	beq	r2,zero,80d08c <__sinit+0xc>
  80d088:	f800283a 	ret
  80d08c:	080cd441 	jmpi	80cd44 <__sinit.part.1>

0080d090 <__sfp_lock_acquire>:
  80d090:	f800283a 	ret

0080d094 <__sfp_lock_release>:
  80d094:	f800283a 	ret

0080d098 <__sinit_lock_acquire>:
  80d098:	f800283a 	ret

0080d09c <__sinit_lock_release>:
  80d09c:	f800283a 	ret

0080d0a0 <__fp_lock_all>:
  80d0a0:	00802074 	movhi	r2,129
  80d0a4:	109df704 	addi	r2,r2,30684
  80d0a8:	11000017 	ldw	r4,0(r2)
  80d0ac:	01402074 	movhi	r5,129
  80d0b0:	2973b804 	addi	r5,r5,-12576
  80d0b4:	080d9c01 	jmpi	80d9c0 <_fwalk>

0080d0b8 <__fp_unlock_all>:
  80d0b8:	00802074 	movhi	r2,129
  80d0bc:	109df704 	addi	r2,r2,30684
  80d0c0:	11000017 	ldw	r4,0(r2)
  80d0c4:	01402074 	movhi	r5,129
  80d0c8:	29734c04 	addi	r5,r5,-13008
  80d0cc:	080d9c01 	jmpi	80d9c0 <_fwalk>

0080d0d0 <_malloc_trim_r>:
  80d0d0:	defffb04 	addi	sp,sp,-20
  80d0d4:	dcc00315 	stw	r19,12(sp)
  80d0d8:	04c02074 	movhi	r19,129
  80d0dc:	dc800215 	stw	r18,8(sp)
  80d0e0:	dc400115 	stw	r17,4(sp)
  80d0e4:	dc000015 	stw	r16,0(sp)
  80d0e8:	dfc00415 	stw	ra,16(sp)
  80d0ec:	2821883a 	mov	r16,r5
  80d0f0:	9cd87004 	addi	r19,r19,25024
  80d0f4:	2025883a 	mov	r18,r4
  80d0f8:	08134200 	call	813420 <__malloc_lock>
  80d0fc:	98800217 	ldw	r2,8(r19)
  80d100:	14400117 	ldw	r17,4(r2)
  80d104:	00bfff04 	movi	r2,-4
  80d108:	88a2703a 	and	r17,r17,r2
  80d10c:	8c21c83a 	sub	r16,r17,r16
  80d110:	8403fbc4 	addi	r16,r16,4079
  80d114:	8020d33a 	srli	r16,r16,12
  80d118:	0083ffc4 	movi	r2,4095
  80d11c:	843fffc4 	addi	r16,r16,-1
  80d120:	8020933a 	slli	r16,r16,12
  80d124:	1400060e 	bge	r2,r16,80d140 <_malloc_trim_r+0x70>
  80d128:	000b883a 	mov	r5,zero
  80d12c:	9009883a 	mov	r4,r18
  80d130:	08100700 	call	810070 <_sbrk_r>
  80d134:	98c00217 	ldw	r3,8(r19)
  80d138:	1c47883a 	add	r3,r3,r17
  80d13c:	10c00a26 	beq	r2,r3,80d168 <_malloc_trim_r+0x98>
  80d140:	9009883a 	mov	r4,r18
  80d144:	08134440 	call	813444 <__malloc_unlock>
  80d148:	0005883a 	mov	r2,zero
  80d14c:	dfc00417 	ldw	ra,16(sp)
  80d150:	dcc00317 	ldw	r19,12(sp)
  80d154:	dc800217 	ldw	r18,8(sp)
  80d158:	dc400117 	ldw	r17,4(sp)
  80d15c:	dc000017 	ldw	r16,0(sp)
  80d160:	dec00504 	addi	sp,sp,20
  80d164:	f800283a 	ret
  80d168:	040bc83a 	sub	r5,zero,r16
  80d16c:	9009883a 	mov	r4,r18
  80d170:	08100700 	call	810070 <_sbrk_r>
  80d174:	00ffffc4 	movi	r3,-1
  80d178:	10c00d26 	beq	r2,r3,80d1b0 <_malloc_trim_r+0xe0>
  80d17c:	00c020b4 	movhi	r3,130
  80d180:	18e4d104 	addi	r3,r3,-27836
  80d184:	18800017 	ldw	r2,0(r3)
  80d188:	99000217 	ldw	r4,8(r19)
  80d18c:	8c23c83a 	sub	r17,r17,r16
  80d190:	8c400054 	ori	r17,r17,1
  80d194:	1421c83a 	sub	r16,r2,r16
  80d198:	24400115 	stw	r17,4(r4)
  80d19c:	9009883a 	mov	r4,r18
  80d1a0:	1c000015 	stw	r16,0(r3)
  80d1a4:	08134440 	call	813444 <__malloc_unlock>
  80d1a8:	00800044 	movi	r2,1
  80d1ac:	003fe706 	br	80d14c <__alt_data_end+0xff80d14c>
  80d1b0:	000b883a 	mov	r5,zero
  80d1b4:	9009883a 	mov	r4,r18
  80d1b8:	08100700 	call	810070 <_sbrk_r>
  80d1bc:	99000217 	ldw	r4,8(r19)
  80d1c0:	014003c4 	movi	r5,15
  80d1c4:	1107c83a 	sub	r3,r2,r4
  80d1c8:	28ffdd0e 	bge	r5,r3,80d140 <__alt_data_end+0xff80d140>
  80d1cc:	01402074 	movhi	r5,129
  80d1d0:	295df904 	addi	r5,r5,30692
  80d1d4:	29400017 	ldw	r5,0(r5)
  80d1d8:	18c00054 	ori	r3,r3,1
  80d1dc:	20c00115 	stw	r3,4(r4)
  80d1e0:	00c020b4 	movhi	r3,130
  80d1e4:	1145c83a 	sub	r2,r2,r5
  80d1e8:	18e4d104 	addi	r3,r3,-27836
  80d1ec:	18800015 	stw	r2,0(r3)
  80d1f0:	003fd306 	br	80d140 <__alt_data_end+0xff80d140>

0080d1f4 <_free_r>:
  80d1f4:	28004126 	beq	r5,zero,80d2fc <_free_r+0x108>
  80d1f8:	defffd04 	addi	sp,sp,-12
  80d1fc:	dc400115 	stw	r17,4(sp)
  80d200:	dc000015 	stw	r16,0(sp)
  80d204:	2023883a 	mov	r17,r4
  80d208:	2821883a 	mov	r16,r5
  80d20c:	dfc00215 	stw	ra,8(sp)
  80d210:	08134200 	call	813420 <__malloc_lock>
  80d214:	81ffff17 	ldw	r7,-4(r16)
  80d218:	00bfff84 	movi	r2,-2
  80d21c:	01002074 	movhi	r4,129
  80d220:	81bffe04 	addi	r6,r16,-8
  80d224:	3884703a 	and	r2,r7,r2
  80d228:	21187004 	addi	r4,r4,25024
  80d22c:	308b883a 	add	r5,r6,r2
  80d230:	2a400117 	ldw	r9,4(r5)
  80d234:	22000217 	ldw	r8,8(r4)
  80d238:	00ffff04 	movi	r3,-4
  80d23c:	48c6703a 	and	r3,r9,r3
  80d240:	2a005726 	beq	r5,r8,80d3a0 <_free_r+0x1ac>
  80d244:	28c00115 	stw	r3,4(r5)
  80d248:	39c0004c 	andi	r7,r7,1
  80d24c:	3800091e 	bne	r7,zero,80d274 <_free_r+0x80>
  80d250:	823ffe17 	ldw	r8,-8(r16)
  80d254:	22400204 	addi	r9,r4,8
  80d258:	320dc83a 	sub	r6,r6,r8
  80d25c:	31c00217 	ldw	r7,8(r6)
  80d260:	1205883a 	add	r2,r2,r8
  80d264:	3a406526 	beq	r7,r9,80d3fc <_free_r+0x208>
  80d268:	32000317 	ldw	r8,12(r6)
  80d26c:	3a000315 	stw	r8,12(r7)
  80d270:	41c00215 	stw	r7,8(r8)
  80d274:	28cf883a 	add	r7,r5,r3
  80d278:	39c00117 	ldw	r7,4(r7)
  80d27c:	39c0004c 	andi	r7,r7,1
  80d280:	38003a26 	beq	r7,zero,80d36c <_free_r+0x178>
  80d284:	10c00054 	ori	r3,r2,1
  80d288:	30c00115 	stw	r3,4(r6)
  80d28c:	3087883a 	add	r3,r6,r2
  80d290:	18800015 	stw	r2,0(r3)
  80d294:	00c07fc4 	movi	r3,511
  80d298:	18801936 	bltu	r3,r2,80d300 <_free_r+0x10c>
  80d29c:	1004d0fa 	srli	r2,r2,3
  80d2a0:	01c00044 	movi	r7,1
  80d2a4:	21400117 	ldw	r5,4(r4)
  80d2a8:	10c00044 	addi	r3,r2,1
  80d2ac:	18c7883a 	add	r3,r3,r3
  80d2b0:	1005d0ba 	srai	r2,r2,2
  80d2b4:	18c7883a 	add	r3,r3,r3
  80d2b8:	18c7883a 	add	r3,r3,r3
  80d2bc:	1907883a 	add	r3,r3,r4
  80d2c0:	3884983a 	sll	r2,r7,r2
  80d2c4:	19c00017 	ldw	r7,0(r3)
  80d2c8:	1a3ffe04 	addi	r8,r3,-8
  80d2cc:	1144b03a 	or	r2,r2,r5
  80d2d0:	32000315 	stw	r8,12(r6)
  80d2d4:	31c00215 	stw	r7,8(r6)
  80d2d8:	20800115 	stw	r2,4(r4)
  80d2dc:	19800015 	stw	r6,0(r3)
  80d2e0:	39800315 	stw	r6,12(r7)
  80d2e4:	8809883a 	mov	r4,r17
  80d2e8:	dfc00217 	ldw	ra,8(sp)
  80d2ec:	dc400117 	ldw	r17,4(sp)
  80d2f0:	dc000017 	ldw	r16,0(sp)
  80d2f4:	dec00304 	addi	sp,sp,12
  80d2f8:	08134441 	jmpi	813444 <__malloc_unlock>
  80d2fc:	f800283a 	ret
  80d300:	100ad27a 	srli	r5,r2,9
  80d304:	00c00104 	movi	r3,4
  80d308:	19404a36 	bltu	r3,r5,80d434 <_free_r+0x240>
  80d30c:	100ad1ba 	srli	r5,r2,6
  80d310:	28c00e44 	addi	r3,r5,57
  80d314:	18c7883a 	add	r3,r3,r3
  80d318:	29400e04 	addi	r5,r5,56
  80d31c:	18c7883a 	add	r3,r3,r3
  80d320:	18c7883a 	add	r3,r3,r3
  80d324:	1909883a 	add	r4,r3,r4
  80d328:	20c00017 	ldw	r3,0(r4)
  80d32c:	01c02074 	movhi	r7,129
  80d330:	213ffe04 	addi	r4,r4,-8
  80d334:	39d87004 	addi	r7,r7,25024
  80d338:	20c04426 	beq	r4,r3,80d44c <_free_r+0x258>
  80d33c:	01ffff04 	movi	r7,-4
  80d340:	19400117 	ldw	r5,4(r3)
  80d344:	29ca703a 	and	r5,r5,r7
  80d348:	1140022e 	bgeu	r2,r5,80d354 <_free_r+0x160>
  80d34c:	18c00217 	ldw	r3,8(r3)
  80d350:	20fffb1e 	bne	r4,r3,80d340 <__alt_data_end+0xff80d340>
  80d354:	19000317 	ldw	r4,12(r3)
  80d358:	31000315 	stw	r4,12(r6)
  80d35c:	30c00215 	stw	r3,8(r6)
  80d360:	21800215 	stw	r6,8(r4)
  80d364:	19800315 	stw	r6,12(r3)
  80d368:	003fde06 	br	80d2e4 <__alt_data_end+0xff80d2e4>
  80d36c:	29c00217 	ldw	r7,8(r5)
  80d370:	10c5883a 	add	r2,r2,r3
  80d374:	00c02074 	movhi	r3,129
  80d378:	18d87204 	addi	r3,r3,25032
  80d37c:	38c03b26 	beq	r7,r3,80d46c <_free_r+0x278>
  80d380:	2a000317 	ldw	r8,12(r5)
  80d384:	11400054 	ori	r5,r2,1
  80d388:	3087883a 	add	r3,r6,r2
  80d38c:	3a000315 	stw	r8,12(r7)
  80d390:	41c00215 	stw	r7,8(r8)
  80d394:	31400115 	stw	r5,4(r6)
  80d398:	18800015 	stw	r2,0(r3)
  80d39c:	003fbd06 	br	80d294 <__alt_data_end+0xff80d294>
  80d3a0:	39c0004c 	andi	r7,r7,1
  80d3a4:	10c5883a 	add	r2,r2,r3
  80d3a8:	3800071e 	bne	r7,zero,80d3c8 <_free_r+0x1d4>
  80d3ac:	81fffe17 	ldw	r7,-8(r16)
  80d3b0:	31cdc83a 	sub	r6,r6,r7
  80d3b4:	30c00317 	ldw	r3,12(r6)
  80d3b8:	31400217 	ldw	r5,8(r6)
  80d3bc:	11c5883a 	add	r2,r2,r7
  80d3c0:	28c00315 	stw	r3,12(r5)
  80d3c4:	19400215 	stw	r5,8(r3)
  80d3c8:	10c00054 	ori	r3,r2,1
  80d3cc:	30c00115 	stw	r3,4(r6)
  80d3d0:	00c02074 	movhi	r3,129
  80d3d4:	18ddfa04 	addi	r3,r3,30696
  80d3d8:	18c00017 	ldw	r3,0(r3)
  80d3dc:	21800215 	stw	r6,8(r4)
  80d3e0:	10ffc036 	bltu	r2,r3,80d2e4 <__alt_data_end+0xff80d2e4>
  80d3e4:	008020b4 	movhi	r2,130
  80d3e8:	10a4c804 	addi	r2,r2,-27872
  80d3ec:	11400017 	ldw	r5,0(r2)
  80d3f0:	8809883a 	mov	r4,r17
  80d3f4:	080d0d00 	call	80d0d0 <_malloc_trim_r>
  80d3f8:	003fba06 	br	80d2e4 <__alt_data_end+0xff80d2e4>
  80d3fc:	28c9883a 	add	r4,r5,r3
  80d400:	21000117 	ldw	r4,4(r4)
  80d404:	2100004c 	andi	r4,r4,1
  80d408:	2000391e 	bne	r4,zero,80d4f0 <_free_r+0x2fc>
  80d40c:	29c00217 	ldw	r7,8(r5)
  80d410:	29000317 	ldw	r4,12(r5)
  80d414:	1885883a 	add	r2,r3,r2
  80d418:	10c00054 	ori	r3,r2,1
  80d41c:	39000315 	stw	r4,12(r7)
  80d420:	21c00215 	stw	r7,8(r4)
  80d424:	30c00115 	stw	r3,4(r6)
  80d428:	308d883a 	add	r6,r6,r2
  80d42c:	30800015 	stw	r2,0(r6)
  80d430:	003fac06 	br	80d2e4 <__alt_data_end+0xff80d2e4>
  80d434:	00c00504 	movi	r3,20
  80d438:	19401536 	bltu	r3,r5,80d490 <_free_r+0x29c>
  80d43c:	28c01704 	addi	r3,r5,92
  80d440:	18c7883a 	add	r3,r3,r3
  80d444:	294016c4 	addi	r5,r5,91
  80d448:	003fb406 	br	80d31c <__alt_data_end+0xff80d31c>
  80d44c:	280bd0ba 	srai	r5,r5,2
  80d450:	00c00044 	movi	r3,1
  80d454:	38800117 	ldw	r2,4(r7)
  80d458:	194a983a 	sll	r5,r3,r5
  80d45c:	2007883a 	mov	r3,r4
  80d460:	2884b03a 	or	r2,r5,r2
  80d464:	38800115 	stw	r2,4(r7)
  80d468:	003fbb06 	br	80d358 <__alt_data_end+0xff80d358>
  80d46c:	21800515 	stw	r6,20(r4)
  80d470:	21800415 	stw	r6,16(r4)
  80d474:	10c00054 	ori	r3,r2,1
  80d478:	31c00315 	stw	r7,12(r6)
  80d47c:	31c00215 	stw	r7,8(r6)
  80d480:	30c00115 	stw	r3,4(r6)
  80d484:	308d883a 	add	r6,r6,r2
  80d488:	30800015 	stw	r2,0(r6)
  80d48c:	003f9506 	br	80d2e4 <__alt_data_end+0xff80d2e4>
  80d490:	00c01504 	movi	r3,84
  80d494:	19400536 	bltu	r3,r5,80d4ac <_free_r+0x2b8>
  80d498:	100ad33a 	srli	r5,r2,12
  80d49c:	28c01bc4 	addi	r3,r5,111
  80d4a0:	18c7883a 	add	r3,r3,r3
  80d4a4:	29401b84 	addi	r5,r5,110
  80d4a8:	003f9c06 	br	80d31c <__alt_data_end+0xff80d31c>
  80d4ac:	00c05504 	movi	r3,340
  80d4b0:	19400536 	bltu	r3,r5,80d4c8 <_free_r+0x2d4>
  80d4b4:	100ad3fa 	srli	r5,r2,15
  80d4b8:	28c01e04 	addi	r3,r5,120
  80d4bc:	18c7883a 	add	r3,r3,r3
  80d4c0:	29401dc4 	addi	r5,r5,119
  80d4c4:	003f9506 	br	80d31c <__alt_data_end+0xff80d31c>
  80d4c8:	00c15504 	movi	r3,1364
  80d4cc:	19400536 	bltu	r3,r5,80d4e4 <_free_r+0x2f0>
  80d4d0:	100ad4ba 	srli	r5,r2,18
  80d4d4:	28c01f44 	addi	r3,r5,125
  80d4d8:	18c7883a 	add	r3,r3,r3
  80d4dc:	29401f04 	addi	r5,r5,124
  80d4e0:	003f8e06 	br	80d31c <__alt_data_end+0xff80d31c>
  80d4e4:	00c03f84 	movi	r3,254
  80d4e8:	01401f84 	movi	r5,126
  80d4ec:	003f8b06 	br	80d31c <__alt_data_end+0xff80d31c>
  80d4f0:	10c00054 	ori	r3,r2,1
  80d4f4:	30c00115 	stw	r3,4(r6)
  80d4f8:	308d883a 	add	r6,r6,r2
  80d4fc:	30800015 	stw	r2,0(r6)
  80d500:	003f7806 	br	80d2e4 <__alt_data_end+0xff80d2e4>

0080d504 <__sfvwrite_r>:
  80d504:	30800217 	ldw	r2,8(r6)
  80d508:	10006726 	beq	r2,zero,80d6a8 <__sfvwrite_r+0x1a4>
  80d50c:	28c0030b 	ldhu	r3,12(r5)
  80d510:	defff404 	addi	sp,sp,-48
  80d514:	dd400715 	stw	r21,28(sp)
  80d518:	dd000615 	stw	r20,24(sp)
  80d51c:	dc000215 	stw	r16,8(sp)
  80d520:	dfc00b15 	stw	ra,44(sp)
  80d524:	df000a15 	stw	fp,40(sp)
  80d528:	ddc00915 	stw	r23,36(sp)
  80d52c:	dd800815 	stw	r22,32(sp)
  80d530:	dcc00515 	stw	r19,20(sp)
  80d534:	dc800415 	stw	r18,16(sp)
  80d538:	dc400315 	stw	r17,12(sp)
  80d53c:	1880020c 	andi	r2,r3,8
  80d540:	2821883a 	mov	r16,r5
  80d544:	202b883a 	mov	r21,r4
  80d548:	3029883a 	mov	r20,r6
  80d54c:	10002726 	beq	r2,zero,80d5ec <__sfvwrite_r+0xe8>
  80d550:	28800417 	ldw	r2,16(r5)
  80d554:	10002526 	beq	r2,zero,80d5ec <__sfvwrite_r+0xe8>
  80d558:	1880008c 	andi	r2,r3,2
  80d55c:	a4400017 	ldw	r17,0(r20)
  80d560:	10002a26 	beq	r2,zero,80d60c <__sfvwrite_r+0x108>
  80d564:	05a00034 	movhi	r22,32768
  80d568:	0027883a 	mov	r19,zero
  80d56c:	0025883a 	mov	r18,zero
  80d570:	b5bf0004 	addi	r22,r22,-1024
  80d574:	980d883a 	mov	r6,r19
  80d578:	a809883a 	mov	r4,r21
  80d57c:	90004626 	beq	r18,zero,80d698 <__sfvwrite_r+0x194>
  80d580:	900f883a 	mov	r7,r18
  80d584:	b480022e 	bgeu	r22,r18,80d590 <__sfvwrite_r+0x8c>
  80d588:	01e00034 	movhi	r7,32768
  80d58c:	39ff0004 	addi	r7,r7,-1024
  80d590:	80800917 	ldw	r2,36(r16)
  80d594:	81400717 	ldw	r5,28(r16)
  80d598:	103ee83a 	callr	r2
  80d59c:	0080570e 	bge	zero,r2,80d6fc <__sfvwrite_r+0x1f8>
  80d5a0:	a0c00217 	ldw	r3,8(r20)
  80d5a4:	98a7883a 	add	r19,r19,r2
  80d5a8:	90a5c83a 	sub	r18,r18,r2
  80d5ac:	1885c83a 	sub	r2,r3,r2
  80d5b0:	a0800215 	stw	r2,8(r20)
  80d5b4:	103fef1e 	bne	r2,zero,80d574 <__alt_data_end+0xff80d574>
  80d5b8:	0005883a 	mov	r2,zero
  80d5bc:	dfc00b17 	ldw	ra,44(sp)
  80d5c0:	df000a17 	ldw	fp,40(sp)
  80d5c4:	ddc00917 	ldw	r23,36(sp)
  80d5c8:	dd800817 	ldw	r22,32(sp)
  80d5cc:	dd400717 	ldw	r21,28(sp)
  80d5d0:	dd000617 	ldw	r20,24(sp)
  80d5d4:	dcc00517 	ldw	r19,20(sp)
  80d5d8:	dc800417 	ldw	r18,16(sp)
  80d5dc:	dc400317 	ldw	r17,12(sp)
  80d5e0:	dc000217 	ldw	r16,8(sp)
  80d5e4:	dec00c04 	addi	sp,sp,48
  80d5e8:	f800283a 	ret
  80d5ec:	800b883a 	mov	r5,r16
  80d5f0:	a809883a 	mov	r4,r21
  80d5f4:	080b0ac0 	call	80b0ac <__swsetup_r>
  80d5f8:	1000eb1e 	bne	r2,zero,80d9a8 <__sfvwrite_r+0x4a4>
  80d5fc:	80c0030b 	ldhu	r3,12(r16)
  80d600:	a4400017 	ldw	r17,0(r20)
  80d604:	1880008c 	andi	r2,r3,2
  80d608:	103fd61e 	bne	r2,zero,80d564 <__alt_data_end+0xff80d564>
  80d60c:	1880004c 	andi	r2,r3,1
  80d610:	10003f1e 	bne	r2,zero,80d710 <__sfvwrite_r+0x20c>
  80d614:	0039883a 	mov	fp,zero
  80d618:	0025883a 	mov	r18,zero
  80d61c:	90001a26 	beq	r18,zero,80d688 <__sfvwrite_r+0x184>
  80d620:	1880800c 	andi	r2,r3,512
  80d624:	84c00217 	ldw	r19,8(r16)
  80d628:	10002126 	beq	r2,zero,80d6b0 <__sfvwrite_r+0x1ac>
  80d62c:	982f883a 	mov	r23,r19
  80d630:	94c09336 	bltu	r18,r19,80d880 <__sfvwrite_r+0x37c>
  80d634:	1881200c 	andi	r2,r3,1152
  80d638:	10009e1e 	bne	r2,zero,80d8b4 <__sfvwrite_r+0x3b0>
  80d63c:	81000017 	ldw	r4,0(r16)
  80d640:	b80d883a 	mov	r6,r23
  80d644:	e00b883a 	mov	r5,fp
  80d648:	080e8180 	call	80e818 <memmove>
  80d64c:	80c00217 	ldw	r3,8(r16)
  80d650:	81000017 	ldw	r4,0(r16)
  80d654:	9005883a 	mov	r2,r18
  80d658:	1ce7c83a 	sub	r19,r3,r19
  80d65c:	25cf883a 	add	r7,r4,r23
  80d660:	84c00215 	stw	r19,8(r16)
  80d664:	81c00015 	stw	r7,0(r16)
  80d668:	a0c00217 	ldw	r3,8(r20)
  80d66c:	e0b9883a 	add	fp,fp,r2
  80d670:	90a5c83a 	sub	r18,r18,r2
  80d674:	18a7c83a 	sub	r19,r3,r2
  80d678:	a4c00215 	stw	r19,8(r20)
  80d67c:	983fce26 	beq	r19,zero,80d5b8 <__alt_data_end+0xff80d5b8>
  80d680:	80c0030b 	ldhu	r3,12(r16)
  80d684:	903fe61e 	bne	r18,zero,80d620 <__alt_data_end+0xff80d620>
  80d688:	8f000017 	ldw	fp,0(r17)
  80d68c:	8c800117 	ldw	r18,4(r17)
  80d690:	8c400204 	addi	r17,r17,8
  80d694:	003fe106 	br	80d61c <__alt_data_end+0xff80d61c>
  80d698:	8cc00017 	ldw	r19,0(r17)
  80d69c:	8c800117 	ldw	r18,4(r17)
  80d6a0:	8c400204 	addi	r17,r17,8
  80d6a4:	003fb306 	br	80d574 <__alt_data_end+0xff80d574>
  80d6a8:	0005883a 	mov	r2,zero
  80d6ac:	f800283a 	ret
  80d6b0:	81000017 	ldw	r4,0(r16)
  80d6b4:	80800417 	ldw	r2,16(r16)
  80d6b8:	11005736 	bltu	r2,r4,80d818 <__sfvwrite_r+0x314>
  80d6bc:	85c00517 	ldw	r23,20(r16)
  80d6c0:	95c05536 	bltu	r18,r23,80d818 <__sfvwrite_r+0x314>
  80d6c4:	00a00034 	movhi	r2,32768
  80d6c8:	10bfffc4 	addi	r2,r2,-1
  80d6cc:	9009883a 	mov	r4,r18
  80d6d0:	1480012e 	bgeu	r2,r18,80d6d8 <__sfvwrite_r+0x1d4>
  80d6d4:	1009883a 	mov	r4,r2
  80d6d8:	b80b883a 	mov	r5,r23
  80d6dc:	0804d440 	call	804d44 <__divsi3>
  80d6e0:	15cf383a 	mul	r7,r2,r23
  80d6e4:	81400717 	ldw	r5,28(r16)
  80d6e8:	80800917 	ldw	r2,36(r16)
  80d6ec:	e00d883a 	mov	r6,fp
  80d6f0:	a809883a 	mov	r4,r21
  80d6f4:	103ee83a 	callr	r2
  80d6f8:	00bfdb16 	blt	zero,r2,80d668 <__alt_data_end+0xff80d668>
  80d6fc:	8080030b 	ldhu	r2,12(r16)
  80d700:	10801014 	ori	r2,r2,64
  80d704:	8080030d 	sth	r2,12(r16)
  80d708:	00bfffc4 	movi	r2,-1
  80d70c:	003fab06 	br	80d5bc <__alt_data_end+0xff80d5bc>
  80d710:	0027883a 	mov	r19,zero
  80d714:	0011883a 	mov	r8,zero
  80d718:	0039883a 	mov	fp,zero
  80d71c:	0025883a 	mov	r18,zero
  80d720:	90001f26 	beq	r18,zero,80d7a0 <__sfvwrite_r+0x29c>
  80d724:	40005a26 	beq	r8,zero,80d890 <__sfvwrite_r+0x38c>
  80d728:	982d883a 	mov	r22,r19
  80d72c:	94c0012e 	bgeu	r18,r19,80d734 <__sfvwrite_r+0x230>
  80d730:	902d883a 	mov	r22,r18
  80d734:	81000017 	ldw	r4,0(r16)
  80d738:	80800417 	ldw	r2,16(r16)
  80d73c:	b02f883a 	mov	r23,r22
  80d740:	81c00517 	ldw	r7,20(r16)
  80d744:	1100032e 	bgeu	r2,r4,80d754 <__sfvwrite_r+0x250>
  80d748:	80c00217 	ldw	r3,8(r16)
  80d74c:	38c7883a 	add	r3,r7,r3
  80d750:	1d801816 	blt	r3,r22,80d7b4 <__sfvwrite_r+0x2b0>
  80d754:	b1c03e16 	blt	r22,r7,80d850 <__sfvwrite_r+0x34c>
  80d758:	80800917 	ldw	r2,36(r16)
  80d75c:	81400717 	ldw	r5,28(r16)
  80d760:	e00d883a 	mov	r6,fp
  80d764:	da000115 	stw	r8,4(sp)
  80d768:	a809883a 	mov	r4,r21
  80d76c:	103ee83a 	callr	r2
  80d770:	102f883a 	mov	r23,r2
  80d774:	da000117 	ldw	r8,4(sp)
  80d778:	00bfe00e 	bge	zero,r2,80d6fc <__alt_data_end+0xff80d6fc>
  80d77c:	9de7c83a 	sub	r19,r19,r23
  80d780:	98001f26 	beq	r19,zero,80d800 <__sfvwrite_r+0x2fc>
  80d784:	a0800217 	ldw	r2,8(r20)
  80d788:	e5f9883a 	add	fp,fp,r23
  80d78c:	95e5c83a 	sub	r18,r18,r23
  80d790:	15efc83a 	sub	r23,r2,r23
  80d794:	a5c00215 	stw	r23,8(r20)
  80d798:	b83f8726 	beq	r23,zero,80d5b8 <__alt_data_end+0xff80d5b8>
  80d79c:	903fe11e 	bne	r18,zero,80d724 <__alt_data_end+0xff80d724>
  80d7a0:	8f000017 	ldw	fp,0(r17)
  80d7a4:	8c800117 	ldw	r18,4(r17)
  80d7a8:	0011883a 	mov	r8,zero
  80d7ac:	8c400204 	addi	r17,r17,8
  80d7b0:	003fdb06 	br	80d720 <__alt_data_end+0xff80d720>
  80d7b4:	180d883a 	mov	r6,r3
  80d7b8:	e00b883a 	mov	r5,fp
  80d7bc:	da000115 	stw	r8,4(sp)
  80d7c0:	d8c00015 	stw	r3,0(sp)
  80d7c4:	080e8180 	call	80e818 <memmove>
  80d7c8:	d8c00017 	ldw	r3,0(sp)
  80d7cc:	80800017 	ldw	r2,0(r16)
  80d7d0:	800b883a 	mov	r5,r16
  80d7d4:	a809883a 	mov	r4,r21
  80d7d8:	10c5883a 	add	r2,r2,r3
  80d7dc:	80800015 	stw	r2,0(r16)
  80d7e0:	d8c00015 	stw	r3,0(sp)
  80d7e4:	080cca40 	call	80cca4 <_fflush_r>
  80d7e8:	d8c00017 	ldw	r3,0(sp)
  80d7ec:	da000117 	ldw	r8,4(sp)
  80d7f0:	103fc21e 	bne	r2,zero,80d6fc <__alt_data_end+0xff80d6fc>
  80d7f4:	182f883a 	mov	r23,r3
  80d7f8:	9de7c83a 	sub	r19,r19,r23
  80d7fc:	983fe11e 	bne	r19,zero,80d784 <__alt_data_end+0xff80d784>
  80d800:	800b883a 	mov	r5,r16
  80d804:	a809883a 	mov	r4,r21
  80d808:	080cca40 	call	80cca4 <_fflush_r>
  80d80c:	103fbb1e 	bne	r2,zero,80d6fc <__alt_data_end+0xff80d6fc>
  80d810:	0011883a 	mov	r8,zero
  80d814:	003fdb06 	br	80d784 <__alt_data_end+0xff80d784>
  80d818:	94c0012e 	bgeu	r18,r19,80d820 <__sfvwrite_r+0x31c>
  80d81c:	9027883a 	mov	r19,r18
  80d820:	980d883a 	mov	r6,r19
  80d824:	e00b883a 	mov	r5,fp
  80d828:	080e8180 	call	80e818 <memmove>
  80d82c:	80800217 	ldw	r2,8(r16)
  80d830:	80c00017 	ldw	r3,0(r16)
  80d834:	14c5c83a 	sub	r2,r2,r19
  80d838:	1cc7883a 	add	r3,r3,r19
  80d83c:	80800215 	stw	r2,8(r16)
  80d840:	80c00015 	stw	r3,0(r16)
  80d844:	10004326 	beq	r2,zero,80d954 <__sfvwrite_r+0x450>
  80d848:	9805883a 	mov	r2,r19
  80d84c:	003f8606 	br	80d668 <__alt_data_end+0xff80d668>
  80d850:	b00d883a 	mov	r6,r22
  80d854:	e00b883a 	mov	r5,fp
  80d858:	da000115 	stw	r8,4(sp)
  80d85c:	080e8180 	call	80e818 <memmove>
  80d860:	80800217 	ldw	r2,8(r16)
  80d864:	80c00017 	ldw	r3,0(r16)
  80d868:	da000117 	ldw	r8,4(sp)
  80d86c:	1585c83a 	sub	r2,r2,r22
  80d870:	1dad883a 	add	r22,r3,r22
  80d874:	80800215 	stw	r2,8(r16)
  80d878:	85800015 	stw	r22,0(r16)
  80d87c:	003fbf06 	br	80d77c <__alt_data_end+0xff80d77c>
  80d880:	81000017 	ldw	r4,0(r16)
  80d884:	9027883a 	mov	r19,r18
  80d888:	902f883a 	mov	r23,r18
  80d88c:	003f6c06 	br	80d640 <__alt_data_end+0xff80d640>
  80d890:	900d883a 	mov	r6,r18
  80d894:	01400284 	movi	r5,10
  80d898:	e009883a 	mov	r4,fp
  80d89c:	080e5ec0 	call	80e5ec <memchr>
  80d8a0:	10003e26 	beq	r2,zero,80d99c <__sfvwrite_r+0x498>
  80d8a4:	10800044 	addi	r2,r2,1
  80d8a8:	1727c83a 	sub	r19,r2,fp
  80d8ac:	02000044 	movi	r8,1
  80d8b0:	003f9d06 	br	80d728 <__alt_data_end+0xff80d728>
  80d8b4:	80800517 	ldw	r2,20(r16)
  80d8b8:	81400417 	ldw	r5,16(r16)
  80d8bc:	81c00017 	ldw	r7,0(r16)
  80d8c0:	10a7883a 	add	r19,r2,r2
  80d8c4:	9885883a 	add	r2,r19,r2
  80d8c8:	1026d7fa 	srli	r19,r2,31
  80d8cc:	396dc83a 	sub	r22,r7,r5
  80d8d0:	b1000044 	addi	r4,r22,1
  80d8d4:	9885883a 	add	r2,r19,r2
  80d8d8:	1027d07a 	srai	r19,r2,1
  80d8dc:	2485883a 	add	r2,r4,r18
  80d8e0:	980d883a 	mov	r6,r19
  80d8e4:	9880022e 	bgeu	r19,r2,80d8f0 <__sfvwrite_r+0x3ec>
  80d8e8:	1027883a 	mov	r19,r2
  80d8ec:	100d883a 	mov	r6,r2
  80d8f0:	18c1000c 	andi	r3,r3,1024
  80d8f4:	18001c26 	beq	r3,zero,80d968 <__sfvwrite_r+0x464>
  80d8f8:	300b883a 	mov	r5,r6
  80d8fc:	a809883a 	mov	r4,r21
  80d900:	080dde00 	call	80dde0 <_malloc_r>
  80d904:	102f883a 	mov	r23,r2
  80d908:	10002926 	beq	r2,zero,80d9b0 <__sfvwrite_r+0x4ac>
  80d90c:	81400417 	ldw	r5,16(r16)
  80d910:	b00d883a 	mov	r6,r22
  80d914:	1009883a 	mov	r4,r2
  80d918:	080e6d00 	call	80e6d0 <memcpy>
  80d91c:	8080030b 	ldhu	r2,12(r16)
  80d920:	00fedfc4 	movi	r3,-1153
  80d924:	10c4703a 	and	r2,r2,r3
  80d928:	10802014 	ori	r2,r2,128
  80d92c:	8080030d 	sth	r2,12(r16)
  80d930:	bd89883a 	add	r4,r23,r22
  80d934:	9d8fc83a 	sub	r7,r19,r22
  80d938:	85c00415 	stw	r23,16(r16)
  80d93c:	84c00515 	stw	r19,20(r16)
  80d940:	81000015 	stw	r4,0(r16)
  80d944:	9027883a 	mov	r19,r18
  80d948:	81c00215 	stw	r7,8(r16)
  80d94c:	902f883a 	mov	r23,r18
  80d950:	003f3b06 	br	80d640 <__alt_data_end+0xff80d640>
  80d954:	800b883a 	mov	r5,r16
  80d958:	a809883a 	mov	r4,r21
  80d95c:	080cca40 	call	80cca4 <_fflush_r>
  80d960:	103fb926 	beq	r2,zero,80d848 <__alt_data_end+0xff80d848>
  80d964:	003f6506 	br	80d6fc <__alt_data_end+0xff80d6fc>
  80d968:	a809883a 	mov	r4,r21
  80d96c:	080fa980 	call	80fa98 <_realloc_r>
  80d970:	102f883a 	mov	r23,r2
  80d974:	103fee1e 	bne	r2,zero,80d930 <__alt_data_end+0xff80d930>
  80d978:	81400417 	ldw	r5,16(r16)
  80d97c:	a809883a 	mov	r4,r21
  80d980:	080d1f40 	call	80d1f4 <_free_r>
  80d984:	8080030b 	ldhu	r2,12(r16)
  80d988:	00ffdfc4 	movi	r3,-129
  80d98c:	1884703a 	and	r2,r3,r2
  80d990:	00c00304 	movi	r3,12
  80d994:	a8c00015 	stw	r3,0(r21)
  80d998:	003f5906 	br	80d700 <__alt_data_end+0xff80d700>
  80d99c:	94c00044 	addi	r19,r18,1
  80d9a0:	02000044 	movi	r8,1
  80d9a4:	003f6006 	br	80d728 <__alt_data_end+0xff80d728>
  80d9a8:	00bfffc4 	movi	r2,-1
  80d9ac:	003f0306 	br	80d5bc <__alt_data_end+0xff80d5bc>
  80d9b0:	00800304 	movi	r2,12
  80d9b4:	a8800015 	stw	r2,0(r21)
  80d9b8:	8080030b 	ldhu	r2,12(r16)
  80d9bc:	003f5006 	br	80d700 <__alt_data_end+0xff80d700>

0080d9c0 <_fwalk>:
  80d9c0:	defff704 	addi	sp,sp,-36
  80d9c4:	dd000415 	stw	r20,16(sp)
  80d9c8:	dfc00815 	stw	ra,32(sp)
  80d9cc:	ddc00715 	stw	r23,28(sp)
  80d9d0:	dd800615 	stw	r22,24(sp)
  80d9d4:	dd400515 	stw	r21,20(sp)
  80d9d8:	dcc00315 	stw	r19,12(sp)
  80d9dc:	dc800215 	stw	r18,8(sp)
  80d9e0:	dc400115 	stw	r17,4(sp)
  80d9e4:	dc000015 	stw	r16,0(sp)
  80d9e8:	2500b804 	addi	r20,r4,736
  80d9ec:	a0002326 	beq	r20,zero,80da7c <_fwalk+0xbc>
  80d9f0:	282b883a 	mov	r21,r5
  80d9f4:	002f883a 	mov	r23,zero
  80d9f8:	05800044 	movi	r22,1
  80d9fc:	04ffffc4 	movi	r19,-1
  80da00:	a4400117 	ldw	r17,4(r20)
  80da04:	a4800217 	ldw	r18,8(r20)
  80da08:	8c7fffc4 	addi	r17,r17,-1
  80da0c:	88000d16 	blt	r17,zero,80da44 <_fwalk+0x84>
  80da10:	94000304 	addi	r16,r18,12
  80da14:	94800384 	addi	r18,r18,14
  80da18:	8080000b 	ldhu	r2,0(r16)
  80da1c:	8c7fffc4 	addi	r17,r17,-1
  80da20:	813ffd04 	addi	r4,r16,-12
  80da24:	b080042e 	bgeu	r22,r2,80da38 <_fwalk+0x78>
  80da28:	9080000f 	ldh	r2,0(r18)
  80da2c:	14c00226 	beq	r2,r19,80da38 <_fwalk+0x78>
  80da30:	a83ee83a 	callr	r21
  80da34:	b8aeb03a 	or	r23,r23,r2
  80da38:	84001a04 	addi	r16,r16,104
  80da3c:	94801a04 	addi	r18,r18,104
  80da40:	8cfff51e 	bne	r17,r19,80da18 <__alt_data_end+0xff80da18>
  80da44:	a5000017 	ldw	r20,0(r20)
  80da48:	a03fed1e 	bne	r20,zero,80da00 <__alt_data_end+0xff80da00>
  80da4c:	b805883a 	mov	r2,r23
  80da50:	dfc00817 	ldw	ra,32(sp)
  80da54:	ddc00717 	ldw	r23,28(sp)
  80da58:	dd800617 	ldw	r22,24(sp)
  80da5c:	dd400517 	ldw	r21,20(sp)
  80da60:	dd000417 	ldw	r20,16(sp)
  80da64:	dcc00317 	ldw	r19,12(sp)
  80da68:	dc800217 	ldw	r18,8(sp)
  80da6c:	dc400117 	ldw	r17,4(sp)
  80da70:	dc000017 	ldw	r16,0(sp)
  80da74:	dec00904 	addi	sp,sp,36
  80da78:	f800283a 	ret
  80da7c:	002f883a 	mov	r23,zero
  80da80:	003ff206 	br	80da4c <__alt_data_end+0xff80da4c>

0080da84 <_fwalk_reent>:
  80da84:	defff704 	addi	sp,sp,-36
  80da88:	dd000415 	stw	r20,16(sp)
  80da8c:	dfc00815 	stw	ra,32(sp)
  80da90:	ddc00715 	stw	r23,28(sp)
  80da94:	dd800615 	stw	r22,24(sp)
  80da98:	dd400515 	stw	r21,20(sp)
  80da9c:	dcc00315 	stw	r19,12(sp)
  80daa0:	dc800215 	stw	r18,8(sp)
  80daa4:	dc400115 	stw	r17,4(sp)
  80daa8:	dc000015 	stw	r16,0(sp)
  80daac:	2500b804 	addi	r20,r4,736
  80dab0:	a0002326 	beq	r20,zero,80db40 <_fwalk_reent+0xbc>
  80dab4:	282b883a 	mov	r21,r5
  80dab8:	2027883a 	mov	r19,r4
  80dabc:	002f883a 	mov	r23,zero
  80dac0:	05800044 	movi	r22,1
  80dac4:	04bfffc4 	movi	r18,-1
  80dac8:	a4400117 	ldw	r17,4(r20)
  80dacc:	a4000217 	ldw	r16,8(r20)
  80dad0:	8c7fffc4 	addi	r17,r17,-1
  80dad4:	88000c16 	blt	r17,zero,80db08 <_fwalk_reent+0x84>
  80dad8:	84000304 	addi	r16,r16,12
  80dadc:	8080000b 	ldhu	r2,0(r16)
  80dae0:	8c7fffc4 	addi	r17,r17,-1
  80dae4:	817ffd04 	addi	r5,r16,-12
  80dae8:	b080052e 	bgeu	r22,r2,80db00 <_fwalk_reent+0x7c>
  80daec:	8080008f 	ldh	r2,2(r16)
  80daf0:	9809883a 	mov	r4,r19
  80daf4:	14800226 	beq	r2,r18,80db00 <_fwalk_reent+0x7c>
  80daf8:	a83ee83a 	callr	r21
  80dafc:	b8aeb03a 	or	r23,r23,r2
  80db00:	84001a04 	addi	r16,r16,104
  80db04:	8cbff51e 	bne	r17,r18,80dadc <__alt_data_end+0xff80dadc>
  80db08:	a5000017 	ldw	r20,0(r20)
  80db0c:	a03fee1e 	bne	r20,zero,80dac8 <__alt_data_end+0xff80dac8>
  80db10:	b805883a 	mov	r2,r23
  80db14:	dfc00817 	ldw	ra,32(sp)
  80db18:	ddc00717 	ldw	r23,28(sp)
  80db1c:	dd800617 	ldw	r22,24(sp)
  80db20:	dd400517 	ldw	r21,20(sp)
  80db24:	dd000417 	ldw	r20,16(sp)
  80db28:	dcc00317 	ldw	r19,12(sp)
  80db2c:	dc800217 	ldw	r18,8(sp)
  80db30:	dc400117 	ldw	r17,4(sp)
  80db34:	dc000017 	ldw	r16,0(sp)
  80db38:	dec00904 	addi	sp,sp,36
  80db3c:	f800283a 	ret
  80db40:	002f883a 	mov	r23,zero
  80db44:	003ff206 	br	80db10 <__alt_data_end+0xff80db10>

0080db48 <_setlocale_r>:
  80db48:	30001b26 	beq	r6,zero,80dbb8 <_setlocale_r+0x70>
  80db4c:	01402074 	movhi	r5,129
  80db50:	defffe04 	addi	sp,sp,-8
  80db54:	2956ea04 	addi	r5,r5,23464
  80db58:	3009883a 	mov	r4,r6
  80db5c:	dc000015 	stw	r16,0(sp)
  80db60:	dfc00115 	stw	ra,4(sp)
  80db64:	3021883a 	mov	r16,r6
  80db68:	08102000 	call	810200 <strcmp>
  80db6c:	1000061e 	bne	r2,zero,80db88 <_setlocale_r+0x40>
  80db70:	00802074 	movhi	r2,129
  80db74:	1096cb04 	addi	r2,r2,23340
  80db78:	dfc00117 	ldw	ra,4(sp)
  80db7c:	dc000017 	ldw	r16,0(sp)
  80db80:	dec00204 	addi	sp,sp,8
  80db84:	f800283a 	ret
  80db88:	01402074 	movhi	r5,129
  80db8c:	2956cb04 	addi	r5,r5,23340
  80db90:	8009883a 	mov	r4,r16
  80db94:	08102000 	call	810200 <strcmp>
  80db98:	103ff526 	beq	r2,zero,80db70 <__alt_data_end+0xff80db70>
  80db9c:	01402074 	movhi	r5,129
  80dba0:	2956d504 	addi	r5,r5,23380
  80dba4:	8009883a 	mov	r4,r16
  80dba8:	08102000 	call	810200 <strcmp>
  80dbac:	103ff026 	beq	r2,zero,80db70 <__alt_data_end+0xff80db70>
  80dbb0:	0005883a 	mov	r2,zero
  80dbb4:	003ff006 	br	80db78 <__alt_data_end+0xff80db78>
  80dbb8:	00802074 	movhi	r2,129
  80dbbc:	1096cb04 	addi	r2,r2,23340
  80dbc0:	f800283a 	ret

0080dbc4 <__locale_charset>:
  80dbc4:	00802074 	movhi	r2,129
  80dbc8:	10985a04 	addi	r2,r2,24936
  80dbcc:	f800283a 	ret

0080dbd0 <__locale_mb_cur_max>:
  80dbd0:	00802074 	movhi	r2,129
  80dbd4:	109df804 	addi	r2,r2,30688
  80dbd8:	10800017 	ldw	r2,0(r2)
  80dbdc:	f800283a 	ret

0080dbe0 <__locale_msgcharset>:
  80dbe0:	00802074 	movhi	r2,129
  80dbe4:	10985204 	addi	r2,r2,24904
  80dbe8:	f800283a 	ret

0080dbec <__locale_cjk_lang>:
  80dbec:	0005883a 	mov	r2,zero
  80dbf0:	f800283a 	ret

0080dbf4 <_localeconv_r>:
  80dbf4:	00802074 	movhi	r2,129
  80dbf8:	10986204 	addi	r2,r2,24968
  80dbfc:	f800283a 	ret

0080dc00 <setlocale>:
  80dc00:	00802074 	movhi	r2,129
  80dc04:	109df704 	addi	r2,r2,30684
  80dc08:	280d883a 	mov	r6,r5
  80dc0c:	200b883a 	mov	r5,r4
  80dc10:	11000017 	ldw	r4,0(r2)
  80dc14:	080db481 	jmpi	80db48 <_setlocale_r>

0080dc18 <localeconv>:
  80dc18:	00802074 	movhi	r2,129
  80dc1c:	10986204 	addi	r2,r2,24968
  80dc20:	f800283a 	ret

0080dc24 <__smakebuf_r>:
  80dc24:	2880030b 	ldhu	r2,12(r5)
  80dc28:	10c0008c 	andi	r3,r2,2
  80dc2c:	1800411e 	bne	r3,zero,80dd34 <__smakebuf_r+0x110>
  80dc30:	deffec04 	addi	sp,sp,-80
  80dc34:	dc000f15 	stw	r16,60(sp)
  80dc38:	2821883a 	mov	r16,r5
  80dc3c:	2940038f 	ldh	r5,14(r5)
  80dc40:	dc401015 	stw	r17,64(sp)
  80dc44:	dfc01315 	stw	ra,76(sp)
  80dc48:	dcc01215 	stw	r19,72(sp)
  80dc4c:	dc801115 	stw	r18,68(sp)
  80dc50:	2023883a 	mov	r17,r4
  80dc54:	28001c16 	blt	r5,zero,80dcc8 <__smakebuf_r+0xa4>
  80dc58:	d80d883a 	mov	r6,sp
  80dc5c:	0811da80 	call	811da8 <_fstat_r>
  80dc60:	10001816 	blt	r2,zero,80dcc4 <__smakebuf_r+0xa0>
  80dc64:	d8800117 	ldw	r2,4(sp)
  80dc68:	00e00014 	movui	r3,32768
  80dc6c:	10bc000c 	andi	r2,r2,61440
  80dc70:	14c80020 	cmpeqi	r19,r2,8192
  80dc74:	10c03726 	beq	r2,r3,80dd54 <__smakebuf_r+0x130>
  80dc78:	80c0030b 	ldhu	r3,12(r16)
  80dc7c:	18c20014 	ori	r3,r3,2048
  80dc80:	80c0030d 	sth	r3,12(r16)
  80dc84:	00c80004 	movi	r3,8192
  80dc88:	10c0521e 	bne	r2,r3,80ddd4 <__smakebuf_r+0x1b0>
  80dc8c:	8140038f 	ldh	r5,14(r16)
  80dc90:	8809883a 	mov	r4,r17
  80dc94:	0811e040 	call	811e04 <_isatty_r>
  80dc98:	10004c26 	beq	r2,zero,80ddcc <__smakebuf_r+0x1a8>
  80dc9c:	8080030b 	ldhu	r2,12(r16)
  80dca0:	80c010c4 	addi	r3,r16,67
  80dca4:	80c00015 	stw	r3,0(r16)
  80dca8:	10800054 	ori	r2,r2,1
  80dcac:	8080030d 	sth	r2,12(r16)
  80dcb0:	00800044 	movi	r2,1
  80dcb4:	80c00415 	stw	r3,16(r16)
  80dcb8:	80800515 	stw	r2,20(r16)
  80dcbc:	04810004 	movi	r18,1024
  80dcc0:	00000706 	br	80dce0 <__smakebuf_r+0xbc>
  80dcc4:	8080030b 	ldhu	r2,12(r16)
  80dcc8:	10c0200c 	andi	r3,r2,128
  80dccc:	18001f1e 	bne	r3,zero,80dd4c <__smakebuf_r+0x128>
  80dcd0:	04810004 	movi	r18,1024
  80dcd4:	10820014 	ori	r2,r2,2048
  80dcd8:	8080030d 	sth	r2,12(r16)
  80dcdc:	0027883a 	mov	r19,zero
  80dce0:	900b883a 	mov	r5,r18
  80dce4:	8809883a 	mov	r4,r17
  80dce8:	080dde00 	call	80dde0 <_malloc_r>
  80dcec:	10002c26 	beq	r2,zero,80dda0 <__smakebuf_r+0x17c>
  80dcf0:	80c0030b 	ldhu	r3,12(r16)
  80dcf4:	01002074 	movhi	r4,129
  80dcf8:	21334e04 	addi	r4,r4,-13000
  80dcfc:	89000f15 	stw	r4,60(r17)
  80dd00:	18c02014 	ori	r3,r3,128
  80dd04:	80c0030d 	sth	r3,12(r16)
  80dd08:	80800015 	stw	r2,0(r16)
  80dd0c:	80800415 	stw	r2,16(r16)
  80dd10:	84800515 	stw	r18,20(r16)
  80dd14:	98001a1e 	bne	r19,zero,80dd80 <__smakebuf_r+0x15c>
  80dd18:	dfc01317 	ldw	ra,76(sp)
  80dd1c:	dcc01217 	ldw	r19,72(sp)
  80dd20:	dc801117 	ldw	r18,68(sp)
  80dd24:	dc401017 	ldw	r17,64(sp)
  80dd28:	dc000f17 	ldw	r16,60(sp)
  80dd2c:	dec01404 	addi	sp,sp,80
  80dd30:	f800283a 	ret
  80dd34:	288010c4 	addi	r2,r5,67
  80dd38:	28800015 	stw	r2,0(r5)
  80dd3c:	28800415 	stw	r2,16(r5)
  80dd40:	00800044 	movi	r2,1
  80dd44:	28800515 	stw	r2,20(r5)
  80dd48:	f800283a 	ret
  80dd4c:	04801004 	movi	r18,64
  80dd50:	003fe006 	br	80dcd4 <__alt_data_end+0xff80dcd4>
  80dd54:	81000a17 	ldw	r4,40(r16)
  80dd58:	00c02074 	movhi	r3,129
  80dd5c:	18c06704 	addi	r3,r3,412
  80dd60:	20ffc51e 	bne	r4,r3,80dc78 <__alt_data_end+0xff80dc78>
  80dd64:	8080030b 	ldhu	r2,12(r16)
  80dd68:	04810004 	movi	r18,1024
  80dd6c:	84801315 	stw	r18,76(r16)
  80dd70:	1484b03a 	or	r2,r2,r18
  80dd74:	8080030d 	sth	r2,12(r16)
  80dd78:	0027883a 	mov	r19,zero
  80dd7c:	003fd806 	br	80dce0 <__alt_data_end+0xff80dce0>
  80dd80:	8140038f 	ldh	r5,14(r16)
  80dd84:	8809883a 	mov	r4,r17
  80dd88:	0811e040 	call	811e04 <_isatty_r>
  80dd8c:	103fe226 	beq	r2,zero,80dd18 <__alt_data_end+0xff80dd18>
  80dd90:	8080030b 	ldhu	r2,12(r16)
  80dd94:	10800054 	ori	r2,r2,1
  80dd98:	8080030d 	sth	r2,12(r16)
  80dd9c:	003fde06 	br	80dd18 <__alt_data_end+0xff80dd18>
  80dda0:	8080030b 	ldhu	r2,12(r16)
  80dda4:	10c0800c 	andi	r3,r2,512
  80dda8:	183fdb1e 	bne	r3,zero,80dd18 <__alt_data_end+0xff80dd18>
  80ddac:	10800094 	ori	r2,r2,2
  80ddb0:	80c010c4 	addi	r3,r16,67
  80ddb4:	8080030d 	sth	r2,12(r16)
  80ddb8:	00800044 	movi	r2,1
  80ddbc:	80c00015 	stw	r3,0(r16)
  80ddc0:	80c00415 	stw	r3,16(r16)
  80ddc4:	80800515 	stw	r2,20(r16)
  80ddc8:	003fd306 	br	80dd18 <__alt_data_end+0xff80dd18>
  80ddcc:	04810004 	movi	r18,1024
  80ddd0:	003fc306 	br	80dce0 <__alt_data_end+0xff80dce0>
  80ddd4:	0027883a 	mov	r19,zero
  80ddd8:	04810004 	movi	r18,1024
  80dddc:	003fc006 	br	80dce0 <__alt_data_end+0xff80dce0>

0080dde0 <_malloc_r>:
  80dde0:	defff504 	addi	sp,sp,-44
  80dde4:	dc800315 	stw	r18,12(sp)
  80dde8:	dfc00a15 	stw	ra,40(sp)
  80ddec:	df000915 	stw	fp,36(sp)
  80ddf0:	ddc00815 	stw	r23,32(sp)
  80ddf4:	dd800715 	stw	r22,28(sp)
  80ddf8:	dd400615 	stw	r21,24(sp)
  80ddfc:	dd000515 	stw	r20,20(sp)
  80de00:	dcc00415 	stw	r19,16(sp)
  80de04:	dc400215 	stw	r17,8(sp)
  80de08:	dc000115 	stw	r16,4(sp)
  80de0c:	288002c4 	addi	r2,r5,11
  80de10:	00c00584 	movi	r3,22
  80de14:	2025883a 	mov	r18,r4
  80de18:	18807f2e 	bgeu	r3,r2,80e018 <_malloc_r+0x238>
  80de1c:	047ffe04 	movi	r17,-8
  80de20:	1462703a 	and	r17,r2,r17
  80de24:	8800a316 	blt	r17,zero,80e0b4 <_malloc_r+0x2d4>
  80de28:	8940a236 	bltu	r17,r5,80e0b4 <_malloc_r+0x2d4>
  80de2c:	08134200 	call	813420 <__malloc_lock>
  80de30:	00807dc4 	movi	r2,503
  80de34:	1441e92e 	bgeu	r2,r17,80e5dc <_malloc_r+0x7fc>
  80de38:	8804d27a 	srli	r2,r17,9
  80de3c:	1000a126 	beq	r2,zero,80e0c4 <_malloc_r+0x2e4>
  80de40:	00c00104 	movi	r3,4
  80de44:	18811e36 	bltu	r3,r2,80e2c0 <_malloc_r+0x4e0>
  80de48:	8804d1ba 	srli	r2,r17,6
  80de4c:	12000e44 	addi	r8,r2,57
  80de50:	11c00e04 	addi	r7,r2,56
  80de54:	4209883a 	add	r4,r8,r8
  80de58:	04c02074 	movhi	r19,129
  80de5c:	2109883a 	add	r4,r4,r4
  80de60:	9cd87004 	addi	r19,r19,25024
  80de64:	2109883a 	add	r4,r4,r4
  80de68:	9909883a 	add	r4,r19,r4
  80de6c:	24000117 	ldw	r16,4(r4)
  80de70:	213ffe04 	addi	r4,r4,-8
  80de74:	24009726 	beq	r4,r16,80e0d4 <_malloc_r+0x2f4>
  80de78:	80800117 	ldw	r2,4(r16)
  80de7c:	01bfff04 	movi	r6,-4
  80de80:	014003c4 	movi	r5,15
  80de84:	1184703a 	and	r2,r2,r6
  80de88:	1447c83a 	sub	r3,r2,r17
  80de8c:	28c00716 	blt	r5,r3,80deac <_malloc_r+0xcc>
  80de90:	1800920e 	bge	r3,zero,80e0dc <_malloc_r+0x2fc>
  80de94:	84000317 	ldw	r16,12(r16)
  80de98:	24008e26 	beq	r4,r16,80e0d4 <_malloc_r+0x2f4>
  80de9c:	80800117 	ldw	r2,4(r16)
  80dea0:	1184703a 	and	r2,r2,r6
  80dea4:	1447c83a 	sub	r3,r2,r17
  80dea8:	28fff90e 	bge	r5,r3,80de90 <__alt_data_end+0xff80de90>
  80deac:	3809883a 	mov	r4,r7
  80deb0:	01802074 	movhi	r6,129
  80deb4:	9c000417 	ldw	r16,16(r19)
  80deb8:	31987004 	addi	r6,r6,25024
  80debc:	32000204 	addi	r8,r6,8
  80dec0:	82013426 	beq	r16,r8,80e394 <_malloc_r+0x5b4>
  80dec4:	80c00117 	ldw	r3,4(r16)
  80dec8:	00bfff04 	movi	r2,-4
  80decc:	188e703a 	and	r7,r3,r2
  80ded0:	3c45c83a 	sub	r2,r7,r17
  80ded4:	00c003c4 	movi	r3,15
  80ded8:	18811f16 	blt	r3,r2,80e358 <_malloc_r+0x578>
  80dedc:	32000515 	stw	r8,20(r6)
  80dee0:	32000415 	stw	r8,16(r6)
  80dee4:	10007f0e 	bge	r2,zero,80e0e4 <_malloc_r+0x304>
  80dee8:	00807fc4 	movi	r2,511
  80deec:	11c0fd36 	bltu	r2,r7,80e2e4 <_malloc_r+0x504>
  80def0:	3806d0fa 	srli	r3,r7,3
  80def4:	01c00044 	movi	r7,1
  80def8:	30800117 	ldw	r2,4(r6)
  80defc:	19400044 	addi	r5,r3,1
  80df00:	294b883a 	add	r5,r5,r5
  80df04:	1807d0ba 	srai	r3,r3,2
  80df08:	294b883a 	add	r5,r5,r5
  80df0c:	294b883a 	add	r5,r5,r5
  80df10:	298b883a 	add	r5,r5,r6
  80df14:	38c6983a 	sll	r3,r7,r3
  80df18:	29c00017 	ldw	r7,0(r5)
  80df1c:	2a7ffe04 	addi	r9,r5,-8
  80df20:	1886b03a 	or	r3,r3,r2
  80df24:	82400315 	stw	r9,12(r16)
  80df28:	81c00215 	stw	r7,8(r16)
  80df2c:	30c00115 	stw	r3,4(r6)
  80df30:	2c000015 	stw	r16,0(r5)
  80df34:	3c000315 	stw	r16,12(r7)
  80df38:	2005d0ba 	srai	r2,r4,2
  80df3c:	01400044 	movi	r5,1
  80df40:	288a983a 	sll	r5,r5,r2
  80df44:	19406f36 	bltu	r3,r5,80e104 <_malloc_r+0x324>
  80df48:	28c4703a 	and	r2,r5,r3
  80df4c:	10000a1e 	bne	r2,zero,80df78 <_malloc_r+0x198>
  80df50:	00bfff04 	movi	r2,-4
  80df54:	294b883a 	add	r5,r5,r5
  80df58:	2088703a 	and	r4,r4,r2
  80df5c:	28c4703a 	and	r2,r5,r3
  80df60:	21000104 	addi	r4,r4,4
  80df64:	1000041e 	bne	r2,zero,80df78 <_malloc_r+0x198>
  80df68:	294b883a 	add	r5,r5,r5
  80df6c:	28c4703a 	and	r2,r5,r3
  80df70:	21000104 	addi	r4,r4,4
  80df74:	103ffc26 	beq	r2,zero,80df68 <__alt_data_end+0xff80df68>
  80df78:	02bfff04 	movi	r10,-4
  80df7c:	024003c4 	movi	r9,15
  80df80:	21800044 	addi	r6,r4,1
  80df84:	318d883a 	add	r6,r6,r6
  80df88:	318d883a 	add	r6,r6,r6
  80df8c:	318d883a 	add	r6,r6,r6
  80df90:	998d883a 	add	r6,r19,r6
  80df94:	333ffe04 	addi	r12,r6,-8
  80df98:	2017883a 	mov	r11,r4
  80df9c:	31800104 	addi	r6,r6,4
  80dfa0:	34000017 	ldw	r16,0(r6)
  80dfa4:	31fffd04 	addi	r7,r6,-12
  80dfa8:	81c0041e 	bne	r16,r7,80dfbc <_malloc_r+0x1dc>
  80dfac:	0000fb06 	br	80e39c <_malloc_r+0x5bc>
  80dfb0:	1801030e 	bge	r3,zero,80e3c0 <_malloc_r+0x5e0>
  80dfb4:	84000317 	ldw	r16,12(r16)
  80dfb8:	81c0f826 	beq	r16,r7,80e39c <_malloc_r+0x5bc>
  80dfbc:	80800117 	ldw	r2,4(r16)
  80dfc0:	1284703a 	and	r2,r2,r10
  80dfc4:	1447c83a 	sub	r3,r2,r17
  80dfc8:	48fff90e 	bge	r9,r3,80dfb0 <__alt_data_end+0xff80dfb0>
  80dfcc:	80800317 	ldw	r2,12(r16)
  80dfd0:	81000217 	ldw	r4,8(r16)
  80dfd4:	89400054 	ori	r5,r17,1
  80dfd8:	81400115 	stw	r5,4(r16)
  80dfdc:	20800315 	stw	r2,12(r4)
  80dfe0:	11000215 	stw	r4,8(r2)
  80dfe4:	8463883a 	add	r17,r16,r17
  80dfe8:	9c400515 	stw	r17,20(r19)
  80dfec:	9c400415 	stw	r17,16(r19)
  80dff0:	18800054 	ori	r2,r3,1
  80dff4:	88800115 	stw	r2,4(r17)
  80dff8:	8a000315 	stw	r8,12(r17)
  80dffc:	8a000215 	stw	r8,8(r17)
  80e000:	88e3883a 	add	r17,r17,r3
  80e004:	88c00015 	stw	r3,0(r17)
  80e008:	9009883a 	mov	r4,r18
  80e00c:	08134440 	call	813444 <__malloc_unlock>
  80e010:	80800204 	addi	r2,r16,8
  80e014:	00001b06 	br	80e084 <_malloc_r+0x2a4>
  80e018:	04400404 	movi	r17,16
  80e01c:	89402536 	bltu	r17,r5,80e0b4 <_malloc_r+0x2d4>
  80e020:	08134200 	call	813420 <__malloc_lock>
  80e024:	00800184 	movi	r2,6
  80e028:	01000084 	movi	r4,2
  80e02c:	04c02074 	movhi	r19,129
  80e030:	1085883a 	add	r2,r2,r2
  80e034:	9cd87004 	addi	r19,r19,25024
  80e038:	1085883a 	add	r2,r2,r2
  80e03c:	9885883a 	add	r2,r19,r2
  80e040:	14000117 	ldw	r16,4(r2)
  80e044:	10fffe04 	addi	r3,r2,-8
  80e048:	80c0d926 	beq	r16,r3,80e3b0 <_malloc_r+0x5d0>
  80e04c:	80c00117 	ldw	r3,4(r16)
  80e050:	81000317 	ldw	r4,12(r16)
  80e054:	00bfff04 	movi	r2,-4
  80e058:	1884703a 	and	r2,r3,r2
  80e05c:	81400217 	ldw	r5,8(r16)
  80e060:	8085883a 	add	r2,r16,r2
  80e064:	10c00117 	ldw	r3,4(r2)
  80e068:	29000315 	stw	r4,12(r5)
  80e06c:	21400215 	stw	r5,8(r4)
  80e070:	18c00054 	ori	r3,r3,1
  80e074:	10c00115 	stw	r3,4(r2)
  80e078:	9009883a 	mov	r4,r18
  80e07c:	08134440 	call	813444 <__malloc_unlock>
  80e080:	80800204 	addi	r2,r16,8
  80e084:	dfc00a17 	ldw	ra,40(sp)
  80e088:	df000917 	ldw	fp,36(sp)
  80e08c:	ddc00817 	ldw	r23,32(sp)
  80e090:	dd800717 	ldw	r22,28(sp)
  80e094:	dd400617 	ldw	r21,24(sp)
  80e098:	dd000517 	ldw	r20,20(sp)
  80e09c:	dcc00417 	ldw	r19,16(sp)
  80e0a0:	dc800317 	ldw	r18,12(sp)
  80e0a4:	dc400217 	ldw	r17,8(sp)
  80e0a8:	dc000117 	ldw	r16,4(sp)
  80e0ac:	dec00b04 	addi	sp,sp,44
  80e0b0:	f800283a 	ret
  80e0b4:	00800304 	movi	r2,12
  80e0b8:	90800015 	stw	r2,0(r18)
  80e0bc:	0005883a 	mov	r2,zero
  80e0c0:	003ff006 	br	80e084 <__alt_data_end+0xff80e084>
  80e0c4:	01002004 	movi	r4,128
  80e0c8:	02001004 	movi	r8,64
  80e0cc:	01c00fc4 	movi	r7,63
  80e0d0:	003f6106 	br	80de58 <__alt_data_end+0xff80de58>
  80e0d4:	4009883a 	mov	r4,r8
  80e0d8:	003f7506 	br	80deb0 <__alt_data_end+0xff80deb0>
  80e0dc:	81000317 	ldw	r4,12(r16)
  80e0e0:	003fde06 	br	80e05c <__alt_data_end+0xff80e05c>
  80e0e4:	81c5883a 	add	r2,r16,r7
  80e0e8:	11400117 	ldw	r5,4(r2)
  80e0ec:	9009883a 	mov	r4,r18
  80e0f0:	29400054 	ori	r5,r5,1
  80e0f4:	11400115 	stw	r5,4(r2)
  80e0f8:	08134440 	call	813444 <__malloc_unlock>
  80e0fc:	80800204 	addi	r2,r16,8
  80e100:	003fe006 	br	80e084 <__alt_data_end+0xff80e084>
  80e104:	9c000217 	ldw	r16,8(r19)
  80e108:	00bfff04 	movi	r2,-4
  80e10c:	85800117 	ldw	r22,4(r16)
  80e110:	b0ac703a 	and	r22,r22,r2
  80e114:	b4400336 	bltu	r22,r17,80e124 <_malloc_r+0x344>
  80e118:	b445c83a 	sub	r2,r22,r17
  80e11c:	00c003c4 	movi	r3,15
  80e120:	18805d16 	blt	r3,r2,80e298 <_malloc_r+0x4b8>
  80e124:	05c02074 	movhi	r23,129
  80e128:	008020b4 	movhi	r2,130
  80e12c:	10a4c804 	addi	r2,r2,-27872
  80e130:	bdddf904 	addi	r23,r23,30692
  80e134:	15400017 	ldw	r21,0(r2)
  80e138:	b8c00017 	ldw	r3,0(r23)
  80e13c:	00bfffc4 	movi	r2,-1
  80e140:	858d883a 	add	r6,r16,r22
  80e144:	8d6b883a 	add	r21,r17,r21
  80e148:	1880ea26 	beq	r3,r2,80e4f4 <_malloc_r+0x714>
  80e14c:	ad4403c4 	addi	r21,r21,4111
  80e150:	00bc0004 	movi	r2,-4096
  80e154:	a8aa703a 	and	r21,r21,r2
  80e158:	a80b883a 	mov	r5,r21
  80e15c:	9009883a 	mov	r4,r18
  80e160:	d9800015 	stw	r6,0(sp)
  80e164:	08100700 	call	810070 <_sbrk_r>
  80e168:	1029883a 	mov	r20,r2
  80e16c:	00bfffc4 	movi	r2,-1
  80e170:	d9800017 	ldw	r6,0(sp)
  80e174:	a080e826 	beq	r20,r2,80e518 <_malloc_r+0x738>
  80e178:	a180a636 	bltu	r20,r6,80e414 <_malloc_r+0x634>
  80e17c:	070020b4 	movhi	fp,130
  80e180:	e724d104 	addi	fp,fp,-27836
  80e184:	e0800017 	ldw	r2,0(fp)
  80e188:	a887883a 	add	r3,r21,r2
  80e18c:	e0c00015 	stw	r3,0(fp)
  80e190:	3500e626 	beq	r6,r20,80e52c <_malloc_r+0x74c>
  80e194:	b9000017 	ldw	r4,0(r23)
  80e198:	00bfffc4 	movi	r2,-1
  80e19c:	2080ee26 	beq	r4,r2,80e558 <_malloc_r+0x778>
  80e1a0:	a185c83a 	sub	r2,r20,r6
  80e1a4:	10c5883a 	add	r2,r2,r3
  80e1a8:	e0800015 	stw	r2,0(fp)
  80e1ac:	a0c001cc 	andi	r3,r20,7
  80e1b0:	1800bc26 	beq	r3,zero,80e4a4 <_malloc_r+0x6c4>
  80e1b4:	a0e9c83a 	sub	r20,r20,r3
  80e1b8:	00840204 	movi	r2,4104
  80e1bc:	a5000204 	addi	r20,r20,8
  80e1c0:	10c7c83a 	sub	r3,r2,r3
  80e1c4:	a545883a 	add	r2,r20,r21
  80e1c8:	1083ffcc 	andi	r2,r2,4095
  80e1cc:	18abc83a 	sub	r21,r3,r2
  80e1d0:	a80b883a 	mov	r5,r21
  80e1d4:	9009883a 	mov	r4,r18
  80e1d8:	08100700 	call	810070 <_sbrk_r>
  80e1dc:	00ffffc4 	movi	r3,-1
  80e1e0:	10c0e126 	beq	r2,r3,80e568 <_malloc_r+0x788>
  80e1e4:	1505c83a 	sub	r2,r2,r20
  80e1e8:	1545883a 	add	r2,r2,r21
  80e1ec:	10800054 	ori	r2,r2,1
  80e1f0:	e0c00017 	ldw	r3,0(fp)
  80e1f4:	9d000215 	stw	r20,8(r19)
  80e1f8:	a0800115 	stw	r2,4(r20)
  80e1fc:	a8c7883a 	add	r3,r21,r3
  80e200:	e0c00015 	stw	r3,0(fp)
  80e204:	84c00e26 	beq	r16,r19,80e240 <_malloc_r+0x460>
  80e208:	018003c4 	movi	r6,15
  80e20c:	3580a72e 	bgeu	r6,r22,80e4ac <_malloc_r+0x6cc>
  80e210:	81400117 	ldw	r5,4(r16)
  80e214:	013ffe04 	movi	r4,-8
  80e218:	b0bffd04 	addi	r2,r22,-12
  80e21c:	1104703a 	and	r2,r2,r4
  80e220:	2900004c 	andi	r4,r5,1
  80e224:	2088b03a 	or	r4,r4,r2
  80e228:	81000115 	stw	r4,4(r16)
  80e22c:	01400144 	movi	r5,5
  80e230:	8089883a 	add	r4,r16,r2
  80e234:	21400115 	stw	r5,4(r4)
  80e238:	21400215 	stw	r5,8(r4)
  80e23c:	3080cd36 	bltu	r6,r2,80e574 <_malloc_r+0x794>
  80e240:	008020b4 	movhi	r2,130
  80e244:	10a4c704 	addi	r2,r2,-27876
  80e248:	11000017 	ldw	r4,0(r2)
  80e24c:	20c0012e 	bgeu	r4,r3,80e254 <_malloc_r+0x474>
  80e250:	10c00015 	stw	r3,0(r2)
  80e254:	008020b4 	movhi	r2,130
  80e258:	10a4c604 	addi	r2,r2,-27880
  80e25c:	11000017 	ldw	r4,0(r2)
  80e260:	9c000217 	ldw	r16,8(r19)
  80e264:	20c0012e 	bgeu	r4,r3,80e26c <_malloc_r+0x48c>
  80e268:	10c00015 	stw	r3,0(r2)
  80e26c:	80c00117 	ldw	r3,4(r16)
  80e270:	00bfff04 	movi	r2,-4
  80e274:	1886703a 	and	r3,r3,r2
  80e278:	1c45c83a 	sub	r2,r3,r17
  80e27c:	1c400236 	bltu	r3,r17,80e288 <_malloc_r+0x4a8>
  80e280:	00c003c4 	movi	r3,15
  80e284:	18800416 	blt	r3,r2,80e298 <_malloc_r+0x4b8>
  80e288:	9009883a 	mov	r4,r18
  80e28c:	08134440 	call	813444 <__malloc_unlock>
  80e290:	0005883a 	mov	r2,zero
  80e294:	003f7b06 	br	80e084 <__alt_data_end+0xff80e084>
  80e298:	88c00054 	ori	r3,r17,1
  80e29c:	80c00115 	stw	r3,4(r16)
  80e2a0:	8463883a 	add	r17,r16,r17
  80e2a4:	10800054 	ori	r2,r2,1
  80e2a8:	9c400215 	stw	r17,8(r19)
  80e2ac:	88800115 	stw	r2,4(r17)
  80e2b0:	9009883a 	mov	r4,r18
  80e2b4:	08134440 	call	813444 <__malloc_unlock>
  80e2b8:	80800204 	addi	r2,r16,8
  80e2bc:	003f7106 	br	80e084 <__alt_data_end+0xff80e084>
  80e2c0:	00c00504 	movi	r3,20
  80e2c4:	18804a2e 	bgeu	r3,r2,80e3f0 <_malloc_r+0x610>
  80e2c8:	00c01504 	movi	r3,84
  80e2cc:	18806e36 	bltu	r3,r2,80e488 <_malloc_r+0x6a8>
  80e2d0:	8804d33a 	srli	r2,r17,12
  80e2d4:	12001bc4 	addi	r8,r2,111
  80e2d8:	11c01b84 	addi	r7,r2,110
  80e2dc:	4209883a 	add	r4,r8,r8
  80e2e0:	003edd06 	br	80de58 <__alt_data_end+0xff80de58>
  80e2e4:	3804d27a 	srli	r2,r7,9
  80e2e8:	00c00104 	movi	r3,4
  80e2ec:	1880442e 	bgeu	r3,r2,80e400 <_malloc_r+0x620>
  80e2f0:	00c00504 	movi	r3,20
  80e2f4:	18808136 	bltu	r3,r2,80e4fc <_malloc_r+0x71c>
  80e2f8:	11401704 	addi	r5,r2,92
  80e2fc:	10c016c4 	addi	r3,r2,91
  80e300:	294b883a 	add	r5,r5,r5
  80e304:	294b883a 	add	r5,r5,r5
  80e308:	294b883a 	add	r5,r5,r5
  80e30c:	994b883a 	add	r5,r19,r5
  80e310:	28800017 	ldw	r2,0(r5)
  80e314:	01802074 	movhi	r6,129
  80e318:	297ffe04 	addi	r5,r5,-8
  80e31c:	31987004 	addi	r6,r6,25024
  80e320:	28806526 	beq	r5,r2,80e4b8 <_malloc_r+0x6d8>
  80e324:	01bfff04 	movi	r6,-4
  80e328:	10c00117 	ldw	r3,4(r2)
  80e32c:	1986703a 	and	r3,r3,r6
  80e330:	38c0022e 	bgeu	r7,r3,80e33c <_malloc_r+0x55c>
  80e334:	10800217 	ldw	r2,8(r2)
  80e338:	28bffb1e 	bne	r5,r2,80e328 <__alt_data_end+0xff80e328>
  80e33c:	11400317 	ldw	r5,12(r2)
  80e340:	98c00117 	ldw	r3,4(r19)
  80e344:	81400315 	stw	r5,12(r16)
  80e348:	80800215 	stw	r2,8(r16)
  80e34c:	2c000215 	stw	r16,8(r5)
  80e350:	14000315 	stw	r16,12(r2)
  80e354:	003ef806 	br	80df38 <__alt_data_end+0xff80df38>
  80e358:	88c00054 	ori	r3,r17,1
  80e35c:	80c00115 	stw	r3,4(r16)
  80e360:	8463883a 	add	r17,r16,r17
  80e364:	34400515 	stw	r17,20(r6)
  80e368:	34400415 	stw	r17,16(r6)
  80e36c:	10c00054 	ori	r3,r2,1
  80e370:	8a000315 	stw	r8,12(r17)
  80e374:	8a000215 	stw	r8,8(r17)
  80e378:	88c00115 	stw	r3,4(r17)
  80e37c:	88a3883a 	add	r17,r17,r2
  80e380:	88800015 	stw	r2,0(r17)
  80e384:	9009883a 	mov	r4,r18
  80e388:	08134440 	call	813444 <__malloc_unlock>
  80e38c:	80800204 	addi	r2,r16,8
  80e390:	003f3c06 	br	80e084 <__alt_data_end+0xff80e084>
  80e394:	30c00117 	ldw	r3,4(r6)
  80e398:	003ee706 	br	80df38 <__alt_data_end+0xff80df38>
  80e39c:	5ac00044 	addi	r11,r11,1
  80e3a0:	588000cc 	andi	r2,r11,3
  80e3a4:	31800204 	addi	r6,r6,8
  80e3a8:	103efd1e 	bne	r2,zero,80dfa0 <__alt_data_end+0xff80dfa0>
  80e3ac:	00002406 	br	80e440 <_malloc_r+0x660>
  80e3b0:	14000317 	ldw	r16,12(r2)
  80e3b4:	143f251e 	bne	r2,r16,80e04c <__alt_data_end+0xff80e04c>
  80e3b8:	21000084 	addi	r4,r4,2
  80e3bc:	003ebc06 	br	80deb0 <__alt_data_end+0xff80deb0>
  80e3c0:	8085883a 	add	r2,r16,r2
  80e3c4:	10c00117 	ldw	r3,4(r2)
  80e3c8:	81000317 	ldw	r4,12(r16)
  80e3cc:	81400217 	ldw	r5,8(r16)
  80e3d0:	18c00054 	ori	r3,r3,1
  80e3d4:	10c00115 	stw	r3,4(r2)
  80e3d8:	29000315 	stw	r4,12(r5)
  80e3dc:	21400215 	stw	r5,8(r4)
  80e3e0:	9009883a 	mov	r4,r18
  80e3e4:	08134440 	call	813444 <__malloc_unlock>
  80e3e8:	80800204 	addi	r2,r16,8
  80e3ec:	003f2506 	br	80e084 <__alt_data_end+0xff80e084>
  80e3f0:	12001704 	addi	r8,r2,92
  80e3f4:	11c016c4 	addi	r7,r2,91
  80e3f8:	4209883a 	add	r4,r8,r8
  80e3fc:	003e9606 	br	80de58 <__alt_data_end+0xff80de58>
  80e400:	3804d1ba 	srli	r2,r7,6
  80e404:	11400e44 	addi	r5,r2,57
  80e408:	10c00e04 	addi	r3,r2,56
  80e40c:	294b883a 	add	r5,r5,r5
  80e410:	003fbc06 	br	80e304 <__alt_data_end+0xff80e304>
  80e414:	84ff5926 	beq	r16,r19,80e17c <__alt_data_end+0xff80e17c>
  80e418:	00802074 	movhi	r2,129
  80e41c:	10987004 	addi	r2,r2,25024
  80e420:	14000217 	ldw	r16,8(r2)
  80e424:	00bfff04 	movi	r2,-4
  80e428:	80c00117 	ldw	r3,4(r16)
  80e42c:	1886703a 	and	r3,r3,r2
  80e430:	003f9106 	br	80e278 <__alt_data_end+0xff80e278>
  80e434:	60800217 	ldw	r2,8(r12)
  80e438:	213fffc4 	addi	r4,r4,-1
  80e43c:	1300651e 	bne	r2,r12,80e5d4 <_malloc_r+0x7f4>
  80e440:	208000cc 	andi	r2,r4,3
  80e444:	633ffe04 	addi	r12,r12,-8
  80e448:	103ffa1e 	bne	r2,zero,80e434 <__alt_data_end+0xff80e434>
  80e44c:	98800117 	ldw	r2,4(r19)
  80e450:	0146303a 	nor	r3,zero,r5
  80e454:	1884703a 	and	r2,r3,r2
  80e458:	98800115 	stw	r2,4(r19)
  80e45c:	294b883a 	add	r5,r5,r5
  80e460:	117f2836 	bltu	r2,r5,80e104 <__alt_data_end+0xff80e104>
  80e464:	283f2726 	beq	r5,zero,80e104 <__alt_data_end+0xff80e104>
  80e468:	2886703a 	and	r3,r5,r2
  80e46c:	5809883a 	mov	r4,r11
  80e470:	183ec31e 	bne	r3,zero,80df80 <__alt_data_end+0xff80df80>
  80e474:	294b883a 	add	r5,r5,r5
  80e478:	2886703a 	and	r3,r5,r2
  80e47c:	21000104 	addi	r4,r4,4
  80e480:	183ffc26 	beq	r3,zero,80e474 <__alt_data_end+0xff80e474>
  80e484:	003ebe06 	br	80df80 <__alt_data_end+0xff80df80>
  80e488:	00c05504 	movi	r3,340
  80e48c:	18801236 	bltu	r3,r2,80e4d8 <_malloc_r+0x6f8>
  80e490:	8804d3fa 	srli	r2,r17,15
  80e494:	12001e04 	addi	r8,r2,120
  80e498:	11c01dc4 	addi	r7,r2,119
  80e49c:	4209883a 	add	r4,r8,r8
  80e4a0:	003e6d06 	br	80de58 <__alt_data_end+0xff80de58>
  80e4a4:	00c40004 	movi	r3,4096
  80e4a8:	003f4606 	br	80e1c4 <__alt_data_end+0xff80e1c4>
  80e4ac:	00800044 	movi	r2,1
  80e4b0:	a0800115 	stw	r2,4(r20)
  80e4b4:	003f7406 	br	80e288 <__alt_data_end+0xff80e288>
  80e4b8:	1805d0ba 	srai	r2,r3,2
  80e4bc:	01c00044 	movi	r7,1
  80e4c0:	30c00117 	ldw	r3,4(r6)
  80e4c4:	388e983a 	sll	r7,r7,r2
  80e4c8:	2805883a 	mov	r2,r5
  80e4cc:	38c6b03a 	or	r3,r7,r3
  80e4d0:	30c00115 	stw	r3,4(r6)
  80e4d4:	003f9b06 	br	80e344 <__alt_data_end+0xff80e344>
  80e4d8:	00c15504 	movi	r3,1364
  80e4dc:	18801a36 	bltu	r3,r2,80e548 <_malloc_r+0x768>
  80e4e0:	8804d4ba 	srli	r2,r17,18
  80e4e4:	12001f44 	addi	r8,r2,125
  80e4e8:	11c01f04 	addi	r7,r2,124
  80e4ec:	4209883a 	add	r4,r8,r8
  80e4f0:	003e5906 	br	80de58 <__alt_data_end+0xff80de58>
  80e4f4:	ad400404 	addi	r21,r21,16
  80e4f8:	003f1706 	br	80e158 <__alt_data_end+0xff80e158>
  80e4fc:	00c01504 	movi	r3,84
  80e500:	18802336 	bltu	r3,r2,80e590 <_malloc_r+0x7b0>
  80e504:	3804d33a 	srli	r2,r7,12
  80e508:	11401bc4 	addi	r5,r2,111
  80e50c:	10c01b84 	addi	r3,r2,110
  80e510:	294b883a 	add	r5,r5,r5
  80e514:	003f7b06 	br	80e304 <__alt_data_end+0xff80e304>
  80e518:	9c000217 	ldw	r16,8(r19)
  80e51c:	00bfff04 	movi	r2,-4
  80e520:	80c00117 	ldw	r3,4(r16)
  80e524:	1886703a 	and	r3,r3,r2
  80e528:	003f5306 	br	80e278 <__alt_data_end+0xff80e278>
  80e52c:	3083ffcc 	andi	r2,r6,4095
  80e530:	103f181e 	bne	r2,zero,80e194 <__alt_data_end+0xff80e194>
  80e534:	99000217 	ldw	r4,8(r19)
  80e538:	b545883a 	add	r2,r22,r21
  80e53c:	10800054 	ori	r2,r2,1
  80e540:	20800115 	stw	r2,4(r4)
  80e544:	003f3e06 	br	80e240 <__alt_data_end+0xff80e240>
  80e548:	01003f84 	movi	r4,254
  80e54c:	02001fc4 	movi	r8,127
  80e550:	01c01f84 	movi	r7,126
  80e554:	003e4006 	br	80de58 <__alt_data_end+0xff80de58>
  80e558:	00802074 	movhi	r2,129
  80e55c:	109df904 	addi	r2,r2,30692
  80e560:	15000015 	stw	r20,0(r2)
  80e564:	003f1106 	br	80e1ac <__alt_data_end+0xff80e1ac>
  80e568:	00800044 	movi	r2,1
  80e56c:	002b883a 	mov	r21,zero
  80e570:	003f1f06 	br	80e1f0 <__alt_data_end+0xff80e1f0>
  80e574:	81400204 	addi	r5,r16,8
  80e578:	9009883a 	mov	r4,r18
  80e57c:	080d1f40 	call	80d1f4 <_free_r>
  80e580:	008020b4 	movhi	r2,130
  80e584:	10a4d104 	addi	r2,r2,-27836
  80e588:	10c00017 	ldw	r3,0(r2)
  80e58c:	003f2c06 	br	80e240 <__alt_data_end+0xff80e240>
  80e590:	00c05504 	movi	r3,340
  80e594:	18800536 	bltu	r3,r2,80e5ac <_malloc_r+0x7cc>
  80e598:	3804d3fa 	srli	r2,r7,15
  80e59c:	11401e04 	addi	r5,r2,120
  80e5a0:	10c01dc4 	addi	r3,r2,119
  80e5a4:	294b883a 	add	r5,r5,r5
  80e5a8:	003f5606 	br	80e304 <__alt_data_end+0xff80e304>
  80e5ac:	00c15504 	movi	r3,1364
  80e5b0:	18800536 	bltu	r3,r2,80e5c8 <_malloc_r+0x7e8>
  80e5b4:	3804d4ba 	srli	r2,r7,18
  80e5b8:	11401f44 	addi	r5,r2,125
  80e5bc:	10c01f04 	addi	r3,r2,124
  80e5c0:	294b883a 	add	r5,r5,r5
  80e5c4:	003f4f06 	br	80e304 <__alt_data_end+0xff80e304>
  80e5c8:	01403f84 	movi	r5,254
  80e5cc:	00c01f84 	movi	r3,126
  80e5d0:	003f4c06 	br	80e304 <__alt_data_end+0xff80e304>
  80e5d4:	98800117 	ldw	r2,4(r19)
  80e5d8:	003fa006 	br	80e45c <__alt_data_end+0xff80e45c>
  80e5dc:	8808d0fa 	srli	r4,r17,3
  80e5e0:	20800044 	addi	r2,r4,1
  80e5e4:	1085883a 	add	r2,r2,r2
  80e5e8:	003e9006 	br	80e02c <__alt_data_end+0xff80e02c>

0080e5ec <memchr>:
  80e5ec:	208000cc 	andi	r2,r4,3
  80e5f0:	280f883a 	mov	r7,r5
  80e5f4:	10003426 	beq	r2,zero,80e6c8 <memchr+0xdc>
  80e5f8:	30bfffc4 	addi	r2,r6,-1
  80e5fc:	30001a26 	beq	r6,zero,80e668 <memchr+0x7c>
  80e600:	20c00003 	ldbu	r3,0(r4)
  80e604:	29803fcc 	andi	r6,r5,255
  80e608:	30c0051e 	bne	r6,r3,80e620 <memchr+0x34>
  80e60c:	00001806 	br	80e670 <memchr+0x84>
  80e610:	10001526 	beq	r2,zero,80e668 <memchr+0x7c>
  80e614:	20c00003 	ldbu	r3,0(r4)
  80e618:	10bfffc4 	addi	r2,r2,-1
  80e61c:	30c01426 	beq	r6,r3,80e670 <memchr+0x84>
  80e620:	21000044 	addi	r4,r4,1
  80e624:	20c000cc 	andi	r3,r4,3
  80e628:	183ff91e 	bne	r3,zero,80e610 <__alt_data_end+0xff80e610>
  80e62c:	020000c4 	movi	r8,3
  80e630:	40801136 	bltu	r8,r2,80e678 <memchr+0x8c>
  80e634:	10000c26 	beq	r2,zero,80e668 <memchr+0x7c>
  80e638:	20c00003 	ldbu	r3,0(r4)
  80e63c:	29403fcc 	andi	r5,r5,255
  80e640:	28c00b26 	beq	r5,r3,80e670 <memchr+0x84>
  80e644:	20c00044 	addi	r3,r4,1
  80e648:	39803fcc 	andi	r6,r7,255
  80e64c:	2089883a 	add	r4,r4,r2
  80e650:	00000306 	br	80e660 <memchr+0x74>
  80e654:	18c00044 	addi	r3,r3,1
  80e658:	197fffc3 	ldbu	r5,-1(r3)
  80e65c:	31400526 	beq	r6,r5,80e674 <memchr+0x88>
  80e660:	1805883a 	mov	r2,r3
  80e664:	20fffb1e 	bne	r4,r3,80e654 <__alt_data_end+0xff80e654>
  80e668:	0005883a 	mov	r2,zero
  80e66c:	f800283a 	ret
  80e670:	2005883a 	mov	r2,r4
  80e674:	f800283a 	ret
  80e678:	28c03fcc 	andi	r3,r5,255
  80e67c:	1812923a 	slli	r9,r3,8
  80e680:	02ffbff4 	movhi	r11,65279
  80e684:	02a02074 	movhi	r10,32897
  80e688:	48d2b03a 	or	r9,r9,r3
  80e68c:	4806943a 	slli	r3,r9,16
  80e690:	5affbfc4 	addi	r11,r11,-257
  80e694:	52a02004 	addi	r10,r10,-32640
  80e698:	48d2b03a 	or	r9,r9,r3
  80e69c:	20c00017 	ldw	r3,0(r4)
  80e6a0:	48c6f03a 	xor	r3,r9,r3
  80e6a4:	1acd883a 	add	r6,r3,r11
  80e6a8:	00c6303a 	nor	r3,zero,r3
  80e6ac:	30c6703a 	and	r3,r6,r3
  80e6b0:	1a86703a 	and	r3,r3,r10
  80e6b4:	183fe01e 	bne	r3,zero,80e638 <__alt_data_end+0xff80e638>
  80e6b8:	10bfff04 	addi	r2,r2,-4
  80e6bc:	21000104 	addi	r4,r4,4
  80e6c0:	40bff636 	bltu	r8,r2,80e69c <__alt_data_end+0xff80e69c>
  80e6c4:	003fdb06 	br	80e634 <__alt_data_end+0xff80e634>
  80e6c8:	3005883a 	mov	r2,r6
  80e6cc:	003fd706 	br	80e62c <__alt_data_end+0xff80e62c>

0080e6d0 <memcpy>:
  80e6d0:	defffd04 	addi	sp,sp,-12
  80e6d4:	dfc00215 	stw	ra,8(sp)
  80e6d8:	dc400115 	stw	r17,4(sp)
  80e6dc:	dc000015 	stw	r16,0(sp)
  80e6e0:	00c003c4 	movi	r3,15
  80e6e4:	2005883a 	mov	r2,r4
  80e6e8:	1980452e 	bgeu	r3,r6,80e800 <memcpy+0x130>
  80e6ec:	2906b03a 	or	r3,r5,r4
  80e6f0:	18c000cc 	andi	r3,r3,3
  80e6f4:	1800441e 	bne	r3,zero,80e808 <memcpy+0x138>
  80e6f8:	347ffc04 	addi	r17,r6,-16
  80e6fc:	8822d13a 	srli	r17,r17,4
  80e700:	28c00104 	addi	r3,r5,4
  80e704:	23400104 	addi	r13,r4,4
  80e708:	8820913a 	slli	r16,r17,4
  80e70c:	2b000204 	addi	r12,r5,8
  80e710:	22c00204 	addi	r11,r4,8
  80e714:	84000504 	addi	r16,r16,20
  80e718:	2a800304 	addi	r10,r5,12
  80e71c:	22400304 	addi	r9,r4,12
  80e720:	2c21883a 	add	r16,r5,r16
  80e724:	2811883a 	mov	r8,r5
  80e728:	200f883a 	mov	r7,r4
  80e72c:	41000017 	ldw	r4,0(r8)
  80e730:	1fc00017 	ldw	ra,0(r3)
  80e734:	63c00017 	ldw	r15,0(r12)
  80e738:	39000015 	stw	r4,0(r7)
  80e73c:	53800017 	ldw	r14,0(r10)
  80e740:	6fc00015 	stw	ra,0(r13)
  80e744:	5bc00015 	stw	r15,0(r11)
  80e748:	4b800015 	stw	r14,0(r9)
  80e74c:	18c00404 	addi	r3,r3,16
  80e750:	39c00404 	addi	r7,r7,16
  80e754:	42000404 	addi	r8,r8,16
  80e758:	6b400404 	addi	r13,r13,16
  80e75c:	63000404 	addi	r12,r12,16
  80e760:	5ac00404 	addi	r11,r11,16
  80e764:	52800404 	addi	r10,r10,16
  80e768:	4a400404 	addi	r9,r9,16
  80e76c:	1c3fef1e 	bne	r3,r16,80e72c <__alt_data_end+0xff80e72c>
  80e770:	89c00044 	addi	r7,r17,1
  80e774:	380e913a 	slli	r7,r7,4
  80e778:	310003cc 	andi	r4,r6,15
  80e77c:	02c000c4 	movi	r11,3
  80e780:	11c7883a 	add	r3,r2,r7
  80e784:	29cb883a 	add	r5,r5,r7
  80e788:	5900212e 	bgeu	r11,r4,80e810 <memcpy+0x140>
  80e78c:	1813883a 	mov	r9,r3
  80e790:	2811883a 	mov	r8,r5
  80e794:	200f883a 	mov	r7,r4
  80e798:	42800017 	ldw	r10,0(r8)
  80e79c:	4a400104 	addi	r9,r9,4
  80e7a0:	39ffff04 	addi	r7,r7,-4
  80e7a4:	4abfff15 	stw	r10,-4(r9)
  80e7a8:	42000104 	addi	r8,r8,4
  80e7ac:	59fffa36 	bltu	r11,r7,80e798 <__alt_data_end+0xff80e798>
  80e7b0:	213fff04 	addi	r4,r4,-4
  80e7b4:	2008d0ba 	srli	r4,r4,2
  80e7b8:	318000cc 	andi	r6,r6,3
  80e7bc:	21000044 	addi	r4,r4,1
  80e7c0:	2109883a 	add	r4,r4,r4
  80e7c4:	2109883a 	add	r4,r4,r4
  80e7c8:	1907883a 	add	r3,r3,r4
  80e7cc:	290b883a 	add	r5,r5,r4
  80e7d0:	30000626 	beq	r6,zero,80e7ec <memcpy+0x11c>
  80e7d4:	198d883a 	add	r6,r3,r6
  80e7d8:	29c00003 	ldbu	r7,0(r5)
  80e7dc:	18c00044 	addi	r3,r3,1
  80e7e0:	29400044 	addi	r5,r5,1
  80e7e4:	19ffffc5 	stb	r7,-1(r3)
  80e7e8:	19bffb1e 	bne	r3,r6,80e7d8 <__alt_data_end+0xff80e7d8>
  80e7ec:	dfc00217 	ldw	ra,8(sp)
  80e7f0:	dc400117 	ldw	r17,4(sp)
  80e7f4:	dc000017 	ldw	r16,0(sp)
  80e7f8:	dec00304 	addi	sp,sp,12
  80e7fc:	f800283a 	ret
  80e800:	2007883a 	mov	r3,r4
  80e804:	003ff206 	br	80e7d0 <__alt_data_end+0xff80e7d0>
  80e808:	2007883a 	mov	r3,r4
  80e80c:	003ff106 	br	80e7d4 <__alt_data_end+0xff80e7d4>
  80e810:	200d883a 	mov	r6,r4
  80e814:	003fee06 	br	80e7d0 <__alt_data_end+0xff80e7d0>

0080e818 <memmove>:
  80e818:	2005883a 	mov	r2,r4
  80e81c:	29000b2e 	bgeu	r5,r4,80e84c <memmove+0x34>
  80e820:	298f883a 	add	r7,r5,r6
  80e824:	21c0092e 	bgeu	r4,r7,80e84c <memmove+0x34>
  80e828:	2187883a 	add	r3,r4,r6
  80e82c:	198bc83a 	sub	r5,r3,r6
  80e830:	30004826 	beq	r6,zero,80e954 <memmove+0x13c>
  80e834:	39ffffc4 	addi	r7,r7,-1
  80e838:	39000003 	ldbu	r4,0(r7)
  80e83c:	18ffffc4 	addi	r3,r3,-1
  80e840:	19000005 	stb	r4,0(r3)
  80e844:	28fffb1e 	bne	r5,r3,80e834 <__alt_data_end+0xff80e834>
  80e848:	f800283a 	ret
  80e84c:	00c003c4 	movi	r3,15
  80e850:	1980412e 	bgeu	r3,r6,80e958 <memmove+0x140>
  80e854:	2886b03a 	or	r3,r5,r2
  80e858:	18c000cc 	andi	r3,r3,3
  80e85c:	1800401e 	bne	r3,zero,80e960 <memmove+0x148>
  80e860:	33fffc04 	addi	r15,r6,-16
  80e864:	781ed13a 	srli	r15,r15,4
  80e868:	28c00104 	addi	r3,r5,4
  80e86c:	13400104 	addi	r13,r2,4
  80e870:	781c913a 	slli	r14,r15,4
  80e874:	2b000204 	addi	r12,r5,8
  80e878:	12c00204 	addi	r11,r2,8
  80e87c:	73800504 	addi	r14,r14,20
  80e880:	2a800304 	addi	r10,r5,12
  80e884:	12400304 	addi	r9,r2,12
  80e888:	2b9d883a 	add	r14,r5,r14
  80e88c:	2811883a 	mov	r8,r5
  80e890:	100f883a 	mov	r7,r2
  80e894:	41000017 	ldw	r4,0(r8)
  80e898:	39c00404 	addi	r7,r7,16
  80e89c:	18c00404 	addi	r3,r3,16
  80e8a0:	393ffc15 	stw	r4,-16(r7)
  80e8a4:	193ffc17 	ldw	r4,-16(r3)
  80e8a8:	6b400404 	addi	r13,r13,16
  80e8ac:	5ac00404 	addi	r11,r11,16
  80e8b0:	693ffc15 	stw	r4,-16(r13)
  80e8b4:	61000017 	ldw	r4,0(r12)
  80e8b8:	4a400404 	addi	r9,r9,16
  80e8bc:	42000404 	addi	r8,r8,16
  80e8c0:	593ffc15 	stw	r4,-16(r11)
  80e8c4:	51000017 	ldw	r4,0(r10)
  80e8c8:	63000404 	addi	r12,r12,16
  80e8cc:	52800404 	addi	r10,r10,16
  80e8d0:	493ffc15 	stw	r4,-16(r9)
  80e8d4:	1bbfef1e 	bne	r3,r14,80e894 <__alt_data_end+0xff80e894>
  80e8d8:	79000044 	addi	r4,r15,1
  80e8dc:	2008913a 	slli	r4,r4,4
  80e8e0:	328003cc 	andi	r10,r6,15
  80e8e4:	02c000c4 	movi	r11,3
  80e8e8:	1107883a 	add	r3,r2,r4
  80e8ec:	290b883a 	add	r5,r5,r4
  80e8f0:	5a801e2e 	bgeu	r11,r10,80e96c <memmove+0x154>
  80e8f4:	1813883a 	mov	r9,r3
  80e8f8:	2811883a 	mov	r8,r5
  80e8fc:	500f883a 	mov	r7,r10
  80e900:	41000017 	ldw	r4,0(r8)
  80e904:	4a400104 	addi	r9,r9,4
  80e908:	39ffff04 	addi	r7,r7,-4
  80e90c:	493fff15 	stw	r4,-4(r9)
  80e910:	42000104 	addi	r8,r8,4
  80e914:	59fffa36 	bltu	r11,r7,80e900 <__alt_data_end+0xff80e900>
  80e918:	513fff04 	addi	r4,r10,-4
  80e91c:	2008d0ba 	srli	r4,r4,2
  80e920:	318000cc 	andi	r6,r6,3
  80e924:	21000044 	addi	r4,r4,1
  80e928:	2109883a 	add	r4,r4,r4
  80e92c:	2109883a 	add	r4,r4,r4
  80e930:	1907883a 	add	r3,r3,r4
  80e934:	290b883a 	add	r5,r5,r4
  80e938:	30000b26 	beq	r6,zero,80e968 <memmove+0x150>
  80e93c:	198d883a 	add	r6,r3,r6
  80e940:	29c00003 	ldbu	r7,0(r5)
  80e944:	18c00044 	addi	r3,r3,1
  80e948:	29400044 	addi	r5,r5,1
  80e94c:	19ffffc5 	stb	r7,-1(r3)
  80e950:	19bffb1e 	bne	r3,r6,80e940 <__alt_data_end+0xff80e940>
  80e954:	f800283a 	ret
  80e958:	1007883a 	mov	r3,r2
  80e95c:	003ff606 	br	80e938 <__alt_data_end+0xff80e938>
  80e960:	1007883a 	mov	r3,r2
  80e964:	003ff506 	br	80e93c <__alt_data_end+0xff80e93c>
  80e968:	f800283a 	ret
  80e96c:	500d883a 	mov	r6,r10
  80e970:	003ff106 	br	80e938 <__alt_data_end+0xff80e938>

0080e974 <memset>:
  80e974:	20c000cc 	andi	r3,r4,3
  80e978:	2005883a 	mov	r2,r4
  80e97c:	18004426 	beq	r3,zero,80ea90 <memset+0x11c>
  80e980:	31ffffc4 	addi	r7,r6,-1
  80e984:	30004026 	beq	r6,zero,80ea88 <memset+0x114>
  80e988:	2813883a 	mov	r9,r5
  80e98c:	200d883a 	mov	r6,r4
  80e990:	2007883a 	mov	r3,r4
  80e994:	00000406 	br	80e9a8 <memset+0x34>
  80e998:	3a3fffc4 	addi	r8,r7,-1
  80e99c:	31800044 	addi	r6,r6,1
  80e9a0:	38003926 	beq	r7,zero,80ea88 <memset+0x114>
  80e9a4:	400f883a 	mov	r7,r8
  80e9a8:	18c00044 	addi	r3,r3,1
  80e9ac:	32400005 	stb	r9,0(r6)
  80e9b0:	1a0000cc 	andi	r8,r3,3
  80e9b4:	403ff81e 	bne	r8,zero,80e998 <__alt_data_end+0xff80e998>
  80e9b8:	010000c4 	movi	r4,3
  80e9bc:	21c02d2e 	bgeu	r4,r7,80ea74 <memset+0x100>
  80e9c0:	29003fcc 	andi	r4,r5,255
  80e9c4:	200c923a 	slli	r6,r4,8
  80e9c8:	3108b03a 	or	r4,r6,r4
  80e9cc:	200c943a 	slli	r6,r4,16
  80e9d0:	218cb03a 	or	r6,r4,r6
  80e9d4:	010003c4 	movi	r4,15
  80e9d8:	21c0182e 	bgeu	r4,r7,80ea3c <memset+0xc8>
  80e9dc:	3b3ffc04 	addi	r12,r7,-16
  80e9e0:	6018d13a 	srli	r12,r12,4
  80e9e4:	1a000104 	addi	r8,r3,4
  80e9e8:	1ac00204 	addi	r11,r3,8
  80e9ec:	6008913a 	slli	r4,r12,4
  80e9f0:	1a800304 	addi	r10,r3,12
  80e9f4:	1813883a 	mov	r9,r3
  80e9f8:	21000504 	addi	r4,r4,20
  80e9fc:	1909883a 	add	r4,r3,r4
  80ea00:	49800015 	stw	r6,0(r9)
  80ea04:	41800015 	stw	r6,0(r8)
  80ea08:	59800015 	stw	r6,0(r11)
  80ea0c:	51800015 	stw	r6,0(r10)
  80ea10:	42000404 	addi	r8,r8,16
  80ea14:	4a400404 	addi	r9,r9,16
  80ea18:	5ac00404 	addi	r11,r11,16
  80ea1c:	52800404 	addi	r10,r10,16
  80ea20:	413ff71e 	bne	r8,r4,80ea00 <__alt_data_end+0xff80ea00>
  80ea24:	63000044 	addi	r12,r12,1
  80ea28:	6018913a 	slli	r12,r12,4
  80ea2c:	39c003cc 	andi	r7,r7,15
  80ea30:	010000c4 	movi	r4,3
  80ea34:	1b07883a 	add	r3,r3,r12
  80ea38:	21c00e2e 	bgeu	r4,r7,80ea74 <memset+0x100>
  80ea3c:	1813883a 	mov	r9,r3
  80ea40:	3811883a 	mov	r8,r7
  80ea44:	010000c4 	movi	r4,3
  80ea48:	49800015 	stw	r6,0(r9)
  80ea4c:	423fff04 	addi	r8,r8,-4
  80ea50:	4a400104 	addi	r9,r9,4
  80ea54:	223ffc36 	bltu	r4,r8,80ea48 <__alt_data_end+0xff80ea48>
  80ea58:	393fff04 	addi	r4,r7,-4
  80ea5c:	2008d0ba 	srli	r4,r4,2
  80ea60:	39c000cc 	andi	r7,r7,3
  80ea64:	21000044 	addi	r4,r4,1
  80ea68:	2109883a 	add	r4,r4,r4
  80ea6c:	2109883a 	add	r4,r4,r4
  80ea70:	1907883a 	add	r3,r3,r4
  80ea74:	38000526 	beq	r7,zero,80ea8c <memset+0x118>
  80ea78:	19cf883a 	add	r7,r3,r7
  80ea7c:	19400005 	stb	r5,0(r3)
  80ea80:	18c00044 	addi	r3,r3,1
  80ea84:	38fffd1e 	bne	r7,r3,80ea7c <__alt_data_end+0xff80ea7c>
  80ea88:	f800283a 	ret
  80ea8c:	f800283a 	ret
  80ea90:	2007883a 	mov	r3,r4
  80ea94:	300f883a 	mov	r7,r6
  80ea98:	003fc706 	br	80e9b8 <__alt_data_end+0xff80e9b8>

0080ea9c <_Balloc>:
  80ea9c:	20801317 	ldw	r2,76(r4)
  80eaa0:	defffc04 	addi	sp,sp,-16
  80eaa4:	dc400115 	stw	r17,4(sp)
  80eaa8:	dc000015 	stw	r16,0(sp)
  80eaac:	dfc00315 	stw	ra,12(sp)
  80eab0:	dc800215 	stw	r18,8(sp)
  80eab4:	2023883a 	mov	r17,r4
  80eab8:	2821883a 	mov	r16,r5
  80eabc:	10000f26 	beq	r2,zero,80eafc <_Balloc+0x60>
  80eac0:	8407883a 	add	r3,r16,r16
  80eac4:	18c7883a 	add	r3,r3,r3
  80eac8:	10c7883a 	add	r3,r2,r3
  80eacc:	18800017 	ldw	r2,0(r3)
  80ead0:	10001126 	beq	r2,zero,80eb18 <_Balloc+0x7c>
  80ead4:	11000017 	ldw	r4,0(r2)
  80ead8:	19000015 	stw	r4,0(r3)
  80eadc:	10000415 	stw	zero,16(r2)
  80eae0:	10000315 	stw	zero,12(r2)
  80eae4:	dfc00317 	ldw	ra,12(sp)
  80eae8:	dc800217 	ldw	r18,8(sp)
  80eaec:	dc400117 	ldw	r17,4(sp)
  80eaf0:	dc000017 	ldw	r16,0(sp)
  80eaf4:	dec00404 	addi	sp,sp,16
  80eaf8:	f800283a 	ret
  80eafc:	01800844 	movi	r6,33
  80eb00:	01400104 	movi	r5,4
  80eb04:	08119d80 	call	8119d8 <_calloc_r>
  80eb08:	88801315 	stw	r2,76(r17)
  80eb0c:	103fec1e 	bne	r2,zero,80eac0 <__alt_data_end+0xff80eac0>
  80eb10:	0005883a 	mov	r2,zero
  80eb14:	003ff306 	br	80eae4 <__alt_data_end+0xff80eae4>
  80eb18:	01400044 	movi	r5,1
  80eb1c:	2c24983a 	sll	r18,r5,r16
  80eb20:	8809883a 	mov	r4,r17
  80eb24:	91800144 	addi	r6,r18,5
  80eb28:	318d883a 	add	r6,r6,r6
  80eb2c:	318d883a 	add	r6,r6,r6
  80eb30:	08119d80 	call	8119d8 <_calloc_r>
  80eb34:	103ff626 	beq	r2,zero,80eb10 <__alt_data_end+0xff80eb10>
  80eb38:	14000115 	stw	r16,4(r2)
  80eb3c:	14800215 	stw	r18,8(r2)
  80eb40:	003fe606 	br	80eadc <__alt_data_end+0xff80eadc>

0080eb44 <_Bfree>:
  80eb44:	28000826 	beq	r5,zero,80eb68 <_Bfree+0x24>
  80eb48:	28c00117 	ldw	r3,4(r5)
  80eb4c:	20801317 	ldw	r2,76(r4)
  80eb50:	18c7883a 	add	r3,r3,r3
  80eb54:	18c7883a 	add	r3,r3,r3
  80eb58:	10c5883a 	add	r2,r2,r3
  80eb5c:	10c00017 	ldw	r3,0(r2)
  80eb60:	28c00015 	stw	r3,0(r5)
  80eb64:	11400015 	stw	r5,0(r2)
  80eb68:	f800283a 	ret

0080eb6c <__multadd>:
  80eb6c:	defffa04 	addi	sp,sp,-24
  80eb70:	dc800315 	stw	r18,12(sp)
  80eb74:	dc400215 	stw	r17,8(sp)
  80eb78:	dc000115 	stw	r16,4(sp)
  80eb7c:	2823883a 	mov	r17,r5
  80eb80:	2c000417 	ldw	r16,16(r5)
  80eb84:	dfc00515 	stw	ra,20(sp)
  80eb88:	dcc00415 	stw	r19,16(sp)
  80eb8c:	2025883a 	mov	r18,r4
  80eb90:	29400504 	addi	r5,r5,20
  80eb94:	0011883a 	mov	r8,zero
  80eb98:	28c00017 	ldw	r3,0(r5)
  80eb9c:	29400104 	addi	r5,r5,4
  80eba0:	42000044 	addi	r8,r8,1
  80eba4:	18bfffcc 	andi	r2,r3,65535
  80eba8:	1185383a 	mul	r2,r2,r6
  80ebac:	1806d43a 	srli	r3,r3,16
  80ebb0:	11cf883a 	add	r7,r2,r7
  80ebb4:	3808d43a 	srli	r4,r7,16
  80ebb8:	1987383a 	mul	r3,r3,r6
  80ebbc:	38bfffcc 	andi	r2,r7,65535
  80ebc0:	1907883a 	add	r3,r3,r4
  80ebc4:	1808943a 	slli	r4,r3,16
  80ebc8:	180ed43a 	srli	r7,r3,16
  80ebcc:	2085883a 	add	r2,r4,r2
  80ebd0:	28bfff15 	stw	r2,-4(r5)
  80ebd4:	443ff016 	blt	r8,r16,80eb98 <__alt_data_end+0xff80eb98>
  80ebd8:	38000926 	beq	r7,zero,80ec00 <__multadd+0x94>
  80ebdc:	88800217 	ldw	r2,8(r17)
  80ebe0:	80800f0e 	bge	r16,r2,80ec20 <__multadd+0xb4>
  80ebe4:	80800144 	addi	r2,r16,5
  80ebe8:	1085883a 	add	r2,r2,r2
  80ebec:	1085883a 	add	r2,r2,r2
  80ebf0:	8885883a 	add	r2,r17,r2
  80ebf4:	11c00015 	stw	r7,0(r2)
  80ebf8:	84000044 	addi	r16,r16,1
  80ebfc:	8c000415 	stw	r16,16(r17)
  80ec00:	8805883a 	mov	r2,r17
  80ec04:	dfc00517 	ldw	ra,20(sp)
  80ec08:	dcc00417 	ldw	r19,16(sp)
  80ec0c:	dc800317 	ldw	r18,12(sp)
  80ec10:	dc400217 	ldw	r17,8(sp)
  80ec14:	dc000117 	ldw	r16,4(sp)
  80ec18:	dec00604 	addi	sp,sp,24
  80ec1c:	f800283a 	ret
  80ec20:	89400117 	ldw	r5,4(r17)
  80ec24:	9009883a 	mov	r4,r18
  80ec28:	d9c00015 	stw	r7,0(sp)
  80ec2c:	29400044 	addi	r5,r5,1
  80ec30:	080ea9c0 	call	80ea9c <_Balloc>
  80ec34:	89800417 	ldw	r6,16(r17)
  80ec38:	89400304 	addi	r5,r17,12
  80ec3c:	11000304 	addi	r4,r2,12
  80ec40:	31800084 	addi	r6,r6,2
  80ec44:	318d883a 	add	r6,r6,r6
  80ec48:	318d883a 	add	r6,r6,r6
  80ec4c:	1027883a 	mov	r19,r2
  80ec50:	080e6d00 	call	80e6d0 <memcpy>
  80ec54:	d9c00017 	ldw	r7,0(sp)
  80ec58:	88000a26 	beq	r17,zero,80ec84 <__multadd+0x118>
  80ec5c:	88c00117 	ldw	r3,4(r17)
  80ec60:	90801317 	ldw	r2,76(r18)
  80ec64:	18c7883a 	add	r3,r3,r3
  80ec68:	18c7883a 	add	r3,r3,r3
  80ec6c:	10c5883a 	add	r2,r2,r3
  80ec70:	10c00017 	ldw	r3,0(r2)
  80ec74:	88c00015 	stw	r3,0(r17)
  80ec78:	14400015 	stw	r17,0(r2)
  80ec7c:	9823883a 	mov	r17,r19
  80ec80:	003fd806 	br	80ebe4 <__alt_data_end+0xff80ebe4>
  80ec84:	9823883a 	mov	r17,r19
  80ec88:	003fd606 	br	80ebe4 <__alt_data_end+0xff80ebe4>

0080ec8c <__s2b>:
  80ec8c:	defff904 	addi	sp,sp,-28
  80ec90:	dc400115 	stw	r17,4(sp)
  80ec94:	dc000015 	stw	r16,0(sp)
  80ec98:	2023883a 	mov	r17,r4
  80ec9c:	2821883a 	mov	r16,r5
  80eca0:	39000204 	addi	r4,r7,8
  80eca4:	01400244 	movi	r5,9
  80eca8:	dcc00315 	stw	r19,12(sp)
  80ecac:	dc800215 	stw	r18,8(sp)
  80ecb0:	dfc00615 	stw	ra,24(sp)
  80ecb4:	dd400515 	stw	r21,20(sp)
  80ecb8:	dd000415 	stw	r20,16(sp)
  80ecbc:	3825883a 	mov	r18,r7
  80ecc0:	3027883a 	mov	r19,r6
  80ecc4:	0804d440 	call	804d44 <__divsi3>
  80ecc8:	00c00044 	movi	r3,1
  80eccc:	000b883a 	mov	r5,zero
  80ecd0:	1880030e 	bge	r3,r2,80ece0 <__s2b+0x54>
  80ecd4:	18c7883a 	add	r3,r3,r3
  80ecd8:	29400044 	addi	r5,r5,1
  80ecdc:	18bffd16 	blt	r3,r2,80ecd4 <__alt_data_end+0xff80ecd4>
  80ece0:	8809883a 	mov	r4,r17
  80ece4:	080ea9c0 	call	80ea9c <_Balloc>
  80ece8:	d8c00717 	ldw	r3,28(sp)
  80ecec:	10c00515 	stw	r3,20(r2)
  80ecf0:	00c00044 	movi	r3,1
  80ecf4:	10c00415 	stw	r3,16(r2)
  80ecf8:	00c00244 	movi	r3,9
  80ecfc:	1cc0210e 	bge	r3,r19,80ed84 <__s2b+0xf8>
  80ed00:	80eb883a 	add	r21,r16,r3
  80ed04:	a829883a 	mov	r20,r21
  80ed08:	84e1883a 	add	r16,r16,r19
  80ed0c:	a1c00007 	ldb	r7,0(r20)
  80ed10:	01800284 	movi	r6,10
  80ed14:	a5000044 	addi	r20,r20,1
  80ed18:	100b883a 	mov	r5,r2
  80ed1c:	39fff404 	addi	r7,r7,-48
  80ed20:	8809883a 	mov	r4,r17
  80ed24:	080eb6c0 	call	80eb6c <__multadd>
  80ed28:	a43ff81e 	bne	r20,r16,80ed0c <__alt_data_end+0xff80ed0c>
  80ed2c:	ace1883a 	add	r16,r21,r19
  80ed30:	843ffe04 	addi	r16,r16,-8
  80ed34:	9c800a0e 	bge	r19,r18,80ed60 <__s2b+0xd4>
  80ed38:	94e5c83a 	sub	r18,r18,r19
  80ed3c:	84a5883a 	add	r18,r16,r18
  80ed40:	81c00007 	ldb	r7,0(r16)
  80ed44:	01800284 	movi	r6,10
  80ed48:	84000044 	addi	r16,r16,1
  80ed4c:	100b883a 	mov	r5,r2
  80ed50:	39fff404 	addi	r7,r7,-48
  80ed54:	8809883a 	mov	r4,r17
  80ed58:	080eb6c0 	call	80eb6c <__multadd>
  80ed5c:	84bff81e 	bne	r16,r18,80ed40 <__alt_data_end+0xff80ed40>
  80ed60:	dfc00617 	ldw	ra,24(sp)
  80ed64:	dd400517 	ldw	r21,20(sp)
  80ed68:	dd000417 	ldw	r20,16(sp)
  80ed6c:	dcc00317 	ldw	r19,12(sp)
  80ed70:	dc800217 	ldw	r18,8(sp)
  80ed74:	dc400117 	ldw	r17,4(sp)
  80ed78:	dc000017 	ldw	r16,0(sp)
  80ed7c:	dec00704 	addi	sp,sp,28
  80ed80:	f800283a 	ret
  80ed84:	84000284 	addi	r16,r16,10
  80ed88:	1827883a 	mov	r19,r3
  80ed8c:	003fe906 	br	80ed34 <__alt_data_end+0xff80ed34>

0080ed90 <__hi0bits>:
  80ed90:	20bfffec 	andhi	r2,r4,65535
  80ed94:	1000141e 	bne	r2,zero,80ede8 <__hi0bits+0x58>
  80ed98:	2008943a 	slli	r4,r4,16
  80ed9c:	00800404 	movi	r2,16
  80eda0:	20ffc02c 	andhi	r3,r4,65280
  80eda4:	1800021e 	bne	r3,zero,80edb0 <__hi0bits+0x20>
  80eda8:	2008923a 	slli	r4,r4,8
  80edac:	10800204 	addi	r2,r2,8
  80edb0:	20fc002c 	andhi	r3,r4,61440
  80edb4:	1800021e 	bne	r3,zero,80edc0 <__hi0bits+0x30>
  80edb8:	2008913a 	slli	r4,r4,4
  80edbc:	10800104 	addi	r2,r2,4
  80edc0:	20f0002c 	andhi	r3,r4,49152
  80edc4:	1800031e 	bne	r3,zero,80edd4 <__hi0bits+0x44>
  80edc8:	2109883a 	add	r4,r4,r4
  80edcc:	10800084 	addi	r2,r2,2
  80edd0:	2109883a 	add	r4,r4,r4
  80edd4:	20000316 	blt	r4,zero,80ede4 <__hi0bits+0x54>
  80edd8:	2110002c 	andhi	r4,r4,16384
  80eddc:	2000041e 	bne	r4,zero,80edf0 <__hi0bits+0x60>
  80ede0:	00800804 	movi	r2,32
  80ede4:	f800283a 	ret
  80ede8:	0005883a 	mov	r2,zero
  80edec:	003fec06 	br	80eda0 <__alt_data_end+0xff80eda0>
  80edf0:	10800044 	addi	r2,r2,1
  80edf4:	f800283a 	ret

0080edf8 <__lo0bits>:
  80edf8:	20c00017 	ldw	r3,0(r4)
  80edfc:	188001cc 	andi	r2,r3,7
  80ee00:	10000826 	beq	r2,zero,80ee24 <__lo0bits+0x2c>
  80ee04:	1880004c 	andi	r2,r3,1
  80ee08:	1000211e 	bne	r2,zero,80ee90 <__lo0bits+0x98>
  80ee0c:	1880008c 	andi	r2,r3,2
  80ee10:	1000211e 	bne	r2,zero,80ee98 <__lo0bits+0xa0>
  80ee14:	1806d0ba 	srli	r3,r3,2
  80ee18:	00800084 	movi	r2,2
  80ee1c:	20c00015 	stw	r3,0(r4)
  80ee20:	f800283a 	ret
  80ee24:	18bfffcc 	andi	r2,r3,65535
  80ee28:	10001326 	beq	r2,zero,80ee78 <__lo0bits+0x80>
  80ee2c:	0005883a 	mov	r2,zero
  80ee30:	19403fcc 	andi	r5,r3,255
  80ee34:	2800021e 	bne	r5,zero,80ee40 <__lo0bits+0x48>
  80ee38:	1806d23a 	srli	r3,r3,8
  80ee3c:	10800204 	addi	r2,r2,8
  80ee40:	194003cc 	andi	r5,r3,15
  80ee44:	2800021e 	bne	r5,zero,80ee50 <__lo0bits+0x58>
  80ee48:	1806d13a 	srli	r3,r3,4
  80ee4c:	10800104 	addi	r2,r2,4
  80ee50:	194000cc 	andi	r5,r3,3
  80ee54:	2800021e 	bne	r5,zero,80ee60 <__lo0bits+0x68>
  80ee58:	1806d0ba 	srli	r3,r3,2
  80ee5c:	10800084 	addi	r2,r2,2
  80ee60:	1940004c 	andi	r5,r3,1
  80ee64:	2800081e 	bne	r5,zero,80ee88 <__lo0bits+0x90>
  80ee68:	1806d07a 	srli	r3,r3,1
  80ee6c:	1800051e 	bne	r3,zero,80ee84 <__lo0bits+0x8c>
  80ee70:	00800804 	movi	r2,32
  80ee74:	f800283a 	ret
  80ee78:	1806d43a 	srli	r3,r3,16
  80ee7c:	00800404 	movi	r2,16
  80ee80:	003feb06 	br	80ee30 <__alt_data_end+0xff80ee30>
  80ee84:	10800044 	addi	r2,r2,1
  80ee88:	20c00015 	stw	r3,0(r4)
  80ee8c:	f800283a 	ret
  80ee90:	0005883a 	mov	r2,zero
  80ee94:	f800283a 	ret
  80ee98:	1806d07a 	srli	r3,r3,1
  80ee9c:	00800044 	movi	r2,1
  80eea0:	20c00015 	stw	r3,0(r4)
  80eea4:	f800283a 	ret

0080eea8 <__i2b>:
  80eea8:	defffd04 	addi	sp,sp,-12
  80eeac:	dc000015 	stw	r16,0(sp)
  80eeb0:	04000044 	movi	r16,1
  80eeb4:	dc400115 	stw	r17,4(sp)
  80eeb8:	2823883a 	mov	r17,r5
  80eebc:	800b883a 	mov	r5,r16
  80eec0:	dfc00215 	stw	ra,8(sp)
  80eec4:	080ea9c0 	call	80ea9c <_Balloc>
  80eec8:	14400515 	stw	r17,20(r2)
  80eecc:	14000415 	stw	r16,16(r2)
  80eed0:	dfc00217 	ldw	ra,8(sp)
  80eed4:	dc400117 	ldw	r17,4(sp)
  80eed8:	dc000017 	ldw	r16,0(sp)
  80eedc:	dec00304 	addi	sp,sp,12
  80eee0:	f800283a 	ret

0080eee4 <__multiply>:
  80eee4:	defffa04 	addi	sp,sp,-24
  80eee8:	dcc00315 	stw	r19,12(sp)
  80eeec:	dc800215 	stw	r18,8(sp)
  80eef0:	34c00417 	ldw	r19,16(r6)
  80eef4:	2c800417 	ldw	r18,16(r5)
  80eef8:	dd000415 	stw	r20,16(sp)
  80eefc:	dc400115 	stw	r17,4(sp)
  80ef00:	dfc00515 	stw	ra,20(sp)
  80ef04:	dc000015 	stw	r16,0(sp)
  80ef08:	2829883a 	mov	r20,r5
  80ef0c:	3023883a 	mov	r17,r6
  80ef10:	94c0050e 	bge	r18,r19,80ef28 <__multiply+0x44>
  80ef14:	9007883a 	mov	r3,r18
  80ef18:	3029883a 	mov	r20,r6
  80ef1c:	9825883a 	mov	r18,r19
  80ef20:	2823883a 	mov	r17,r5
  80ef24:	1827883a 	mov	r19,r3
  80ef28:	a0800217 	ldw	r2,8(r20)
  80ef2c:	94e1883a 	add	r16,r18,r19
  80ef30:	a1400117 	ldw	r5,4(r20)
  80ef34:	1400010e 	bge	r2,r16,80ef3c <__multiply+0x58>
  80ef38:	29400044 	addi	r5,r5,1
  80ef3c:	080ea9c0 	call	80ea9c <_Balloc>
  80ef40:	8415883a 	add	r10,r16,r16
  80ef44:	12c00504 	addi	r11,r2,20
  80ef48:	5295883a 	add	r10,r10,r10
  80ef4c:	5a95883a 	add	r10,r11,r10
  80ef50:	5807883a 	mov	r3,r11
  80ef54:	5a80032e 	bgeu	r11,r10,80ef64 <__multiply+0x80>
  80ef58:	18000015 	stw	zero,0(r3)
  80ef5c:	18c00104 	addi	r3,r3,4
  80ef60:	1abffd36 	bltu	r3,r10,80ef58 <__alt_data_end+0xff80ef58>
  80ef64:	9ce7883a 	add	r19,r19,r19
  80ef68:	94a5883a 	add	r18,r18,r18
  80ef6c:	89800504 	addi	r6,r17,20
  80ef70:	9ce7883a 	add	r19,r19,r19
  80ef74:	a3400504 	addi	r13,r20,20
  80ef78:	94a5883a 	add	r18,r18,r18
  80ef7c:	34d9883a 	add	r12,r6,r19
  80ef80:	6c93883a 	add	r9,r13,r18
  80ef84:	3300422e 	bgeu	r6,r12,80f090 <__multiply+0x1ac>
  80ef88:	37c00017 	ldw	ra,0(r6)
  80ef8c:	fbffffcc 	andi	r15,ra,65535
  80ef90:	78001b26 	beq	r15,zero,80f000 <__multiply+0x11c>
  80ef94:	5811883a 	mov	r8,r11
  80ef98:	681d883a 	mov	r14,r13
  80ef9c:	000f883a 	mov	r7,zero
  80efa0:	71000017 	ldw	r4,0(r14)
  80efa4:	40c00017 	ldw	r3,0(r8)
  80efa8:	73800104 	addi	r14,r14,4
  80efac:	217fffcc 	andi	r5,r4,65535
  80efb0:	2bcb383a 	mul	r5,r5,r15
  80efb4:	2008d43a 	srli	r4,r4,16
  80efb8:	1c7fffcc 	andi	r17,r3,65535
  80efbc:	2c4b883a 	add	r5,r5,r17
  80efc0:	29cb883a 	add	r5,r5,r7
  80efc4:	23c9383a 	mul	r4,r4,r15
  80efc8:	1806d43a 	srli	r3,r3,16
  80efcc:	280ed43a 	srli	r7,r5,16
  80efd0:	297fffcc 	andi	r5,r5,65535
  80efd4:	20c7883a 	add	r3,r4,r3
  80efd8:	19c7883a 	add	r3,r3,r7
  80efdc:	1808943a 	slli	r4,r3,16
  80efe0:	4023883a 	mov	r17,r8
  80efe4:	180ed43a 	srli	r7,r3,16
  80efe8:	214ab03a 	or	r5,r4,r5
  80efec:	41400015 	stw	r5,0(r8)
  80eff0:	42000104 	addi	r8,r8,4
  80eff4:	727fea36 	bltu	r14,r9,80efa0 <__alt_data_end+0xff80efa0>
  80eff8:	89c00115 	stw	r7,4(r17)
  80effc:	37c00017 	ldw	ra,0(r6)
  80f000:	f83ed43a 	srli	ra,ra,16
  80f004:	f8001f26 	beq	ra,zero,80f084 <__multiply+0x1a0>
  80f008:	58c00017 	ldw	r3,0(r11)
  80f00c:	681d883a 	mov	r14,r13
  80f010:	581f883a 	mov	r15,r11
  80f014:	1811883a 	mov	r8,r3
  80f018:	5825883a 	mov	r18,r11
  80f01c:	000f883a 	mov	r7,zero
  80f020:	00000106 	br	80f028 <__multiply+0x144>
  80f024:	8825883a 	mov	r18,r17
  80f028:	7140000b 	ldhu	r5,0(r14)
  80f02c:	4010d43a 	srli	r8,r8,16
  80f030:	193fffcc 	andi	r4,r3,65535
  80f034:	2fcb383a 	mul	r5,r5,ra
  80f038:	7bc00104 	addi	r15,r15,4
  80f03c:	73800104 	addi	r14,r14,4
  80f040:	2a0b883a 	add	r5,r5,r8
  80f044:	29cb883a 	add	r5,r5,r7
  80f048:	2806943a 	slli	r3,r5,16
  80f04c:	94400104 	addi	r17,r18,4
  80f050:	280ad43a 	srli	r5,r5,16
  80f054:	1908b03a 	or	r4,r3,r4
  80f058:	793fff15 	stw	r4,-4(r15)
  80f05c:	70ffff17 	ldw	r3,-4(r14)
  80f060:	8a000017 	ldw	r8,0(r17)
  80f064:	1806d43a 	srli	r3,r3,16
  80f068:	413fffcc 	andi	r4,r8,65535
  80f06c:	1fc7383a 	mul	r3,r3,ra
  80f070:	1907883a 	add	r3,r3,r4
  80f074:	1947883a 	add	r3,r3,r5
  80f078:	180ed43a 	srli	r7,r3,16
  80f07c:	727fe936 	bltu	r14,r9,80f024 <__alt_data_end+0xff80f024>
  80f080:	90c00115 	stw	r3,4(r18)
  80f084:	31800104 	addi	r6,r6,4
  80f088:	5ac00104 	addi	r11,r11,4
  80f08c:	333fbe36 	bltu	r6,r12,80ef88 <__alt_data_end+0xff80ef88>
  80f090:	0400090e 	bge	zero,r16,80f0b8 <__multiply+0x1d4>
  80f094:	50ffff17 	ldw	r3,-4(r10)
  80f098:	52bfff04 	addi	r10,r10,-4
  80f09c:	18000326 	beq	r3,zero,80f0ac <__multiply+0x1c8>
  80f0a0:	00000506 	br	80f0b8 <__multiply+0x1d4>
  80f0a4:	50c00017 	ldw	r3,0(r10)
  80f0a8:	1800031e 	bne	r3,zero,80f0b8 <__multiply+0x1d4>
  80f0ac:	843fffc4 	addi	r16,r16,-1
  80f0b0:	52bfff04 	addi	r10,r10,-4
  80f0b4:	803ffb1e 	bne	r16,zero,80f0a4 <__alt_data_end+0xff80f0a4>
  80f0b8:	14000415 	stw	r16,16(r2)
  80f0bc:	dfc00517 	ldw	ra,20(sp)
  80f0c0:	dd000417 	ldw	r20,16(sp)
  80f0c4:	dcc00317 	ldw	r19,12(sp)
  80f0c8:	dc800217 	ldw	r18,8(sp)
  80f0cc:	dc400117 	ldw	r17,4(sp)
  80f0d0:	dc000017 	ldw	r16,0(sp)
  80f0d4:	dec00604 	addi	sp,sp,24
  80f0d8:	f800283a 	ret

0080f0dc <__pow5mult>:
  80f0dc:	defffa04 	addi	sp,sp,-24
  80f0e0:	dcc00315 	stw	r19,12(sp)
  80f0e4:	dc000015 	stw	r16,0(sp)
  80f0e8:	dfc00515 	stw	ra,20(sp)
  80f0ec:	dd000415 	stw	r20,16(sp)
  80f0f0:	dc800215 	stw	r18,8(sp)
  80f0f4:	dc400115 	stw	r17,4(sp)
  80f0f8:	308000cc 	andi	r2,r6,3
  80f0fc:	3021883a 	mov	r16,r6
  80f100:	2027883a 	mov	r19,r4
  80f104:	10002f1e 	bne	r2,zero,80f1c4 <__pow5mult+0xe8>
  80f108:	2825883a 	mov	r18,r5
  80f10c:	8021d0ba 	srai	r16,r16,2
  80f110:	80001a26 	beq	r16,zero,80f17c <__pow5mult+0xa0>
  80f114:	9c401217 	ldw	r17,72(r19)
  80f118:	8800061e 	bne	r17,zero,80f134 <__pow5mult+0x58>
  80f11c:	00003406 	br	80f1f0 <__pow5mult+0x114>
  80f120:	8021d07a 	srai	r16,r16,1
  80f124:	80001526 	beq	r16,zero,80f17c <__pow5mult+0xa0>
  80f128:	88800017 	ldw	r2,0(r17)
  80f12c:	10001c26 	beq	r2,zero,80f1a0 <__pow5mult+0xc4>
  80f130:	1023883a 	mov	r17,r2
  80f134:	8080004c 	andi	r2,r16,1
  80f138:	103ff926 	beq	r2,zero,80f120 <__alt_data_end+0xff80f120>
  80f13c:	880d883a 	mov	r6,r17
  80f140:	900b883a 	mov	r5,r18
  80f144:	9809883a 	mov	r4,r19
  80f148:	080eee40 	call	80eee4 <__multiply>
  80f14c:	90001b26 	beq	r18,zero,80f1bc <__pow5mult+0xe0>
  80f150:	91000117 	ldw	r4,4(r18)
  80f154:	98c01317 	ldw	r3,76(r19)
  80f158:	8021d07a 	srai	r16,r16,1
  80f15c:	2109883a 	add	r4,r4,r4
  80f160:	2109883a 	add	r4,r4,r4
  80f164:	1907883a 	add	r3,r3,r4
  80f168:	19000017 	ldw	r4,0(r3)
  80f16c:	91000015 	stw	r4,0(r18)
  80f170:	1c800015 	stw	r18,0(r3)
  80f174:	1025883a 	mov	r18,r2
  80f178:	803feb1e 	bne	r16,zero,80f128 <__alt_data_end+0xff80f128>
  80f17c:	9005883a 	mov	r2,r18
  80f180:	dfc00517 	ldw	ra,20(sp)
  80f184:	dd000417 	ldw	r20,16(sp)
  80f188:	dcc00317 	ldw	r19,12(sp)
  80f18c:	dc800217 	ldw	r18,8(sp)
  80f190:	dc400117 	ldw	r17,4(sp)
  80f194:	dc000017 	ldw	r16,0(sp)
  80f198:	dec00604 	addi	sp,sp,24
  80f19c:	f800283a 	ret
  80f1a0:	880d883a 	mov	r6,r17
  80f1a4:	880b883a 	mov	r5,r17
  80f1a8:	9809883a 	mov	r4,r19
  80f1ac:	080eee40 	call	80eee4 <__multiply>
  80f1b0:	88800015 	stw	r2,0(r17)
  80f1b4:	10000015 	stw	zero,0(r2)
  80f1b8:	003fdd06 	br	80f130 <__alt_data_end+0xff80f130>
  80f1bc:	1025883a 	mov	r18,r2
  80f1c0:	003fd706 	br	80f120 <__alt_data_end+0xff80f120>
  80f1c4:	10bfffc4 	addi	r2,r2,-1
  80f1c8:	1085883a 	add	r2,r2,r2
  80f1cc:	00c02074 	movhi	r3,129
  80f1d0:	18d6ed04 	addi	r3,r3,23476
  80f1d4:	1085883a 	add	r2,r2,r2
  80f1d8:	1885883a 	add	r2,r3,r2
  80f1dc:	11800017 	ldw	r6,0(r2)
  80f1e0:	000f883a 	mov	r7,zero
  80f1e4:	080eb6c0 	call	80eb6c <__multadd>
  80f1e8:	1025883a 	mov	r18,r2
  80f1ec:	003fc706 	br	80f10c <__alt_data_end+0xff80f10c>
  80f1f0:	05000044 	movi	r20,1
  80f1f4:	a00b883a 	mov	r5,r20
  80f1f8:	9809883a 	mov	r4,r19
  80f1fc:	080ea9c0 	call	80ea9c <_Balloc>
  80f200:	1023883a 	mov	r17,r2
  80f204:	00809c44 	movi	r2,625
  80f208:	88800515 	stw	r2,20(r17)
  80f20c:	8d000415 	stw	r20,16(r17)
  80f210:	9c401215 	stw	r17,72(r19)
  80f214:	88000015 	stw	zero,0(r17)
  80f218:	003fc606 	br	80f134 <__alt_data_end+0xff80f134>

0080f21c <__lshift>:
  80f21c:	defff904 	addi	sp,sp,-28
  80f220:	dd400515 	stw	r21,20(sp)
  80f224:	dcc00315 	stw	r19,12(sp)
  80f228:	302bd17a 	srai	r21,r6,5
  80f22c:	2cc00417 	ldw	r19,16(r5)
  80f230:	28800217 	ldw	r2,8(r5)
  80f234:	dd000415 	stw	r20,16(sp)
  80f238:	ace7883a 	add	r19,r21,r19
  80f23c:	dc800215 	stw	r18,8(sp)
  80f240:	dc400115 	stw	r17,4(sp)
  80f244:	dc000015 	stw	r16,0(sp)
  80f248:	dfc00615 	stw	ra,24(sp)
  80f24c:	9c000044 	addi	r16,r19,1
  80f250:	2823883a 	mov	r17,r5
  80f254:	3029883a 	mov	r20,r6
  80f258:	2025883a 	mov	r18,r4
  80f25c:	29400117 	ldw	r5,4(r5)
  80f260:	1400030e 	bge	r2,r16,80f270 <__lshift+0x54>
  80f264:	1085883a 	add	r2,r2,r2
  80f268:	29400044 	addi	r5,r5,1
  80f26c:	143ffd16 	blt	r2,r16,80f264 <__alt_data_end+0xff80f264>
  80f270:	9009883a 	mov	r4,r18
  80f274:	080ea9c0 	call	80ea9c <_Balloc>
  80f278:	10c00504 	addi	r3,r2,20
  80f27c:	0540070e 	bge	zero,r21,80f29c <__lshift+0x80>
  80f280:	ad6b883a 	add	r21,r21,r21
  80f284:	ad6b883a 	add	r21,r21,r21
  80f288:	1809883a 	mov	r4,r3
  80f28c:	1d47883a 	add	r3,r3,r21
  80f290:	20000015 	stw	zero,0(r4)
  80f294:	21000104 	addi	r4,r4,4
  80f298:	193ffd1e 	bne	r3,r4,80f290 <__alt_data_end+0xff80f290>
  80f29c:	8a000417 	ldw	r8,16(r17)
  80f2a0:	89000504 	addi	r4,r17,20
  80f2a4:	a18007cc 	andi	r6,r20,31
  80f2a8:	4211883a 	add	r8,r8,r8
  80f2ac:	4211883a 	add	r8,r8,r8
  80f2b0:	2211883a 	add	r8,r4,r8
  80f2b4:	30002326 	beq	r6,zero,80f344 <__lshift+0x128>
  80f2b8:	02400804 	movi	r9,32
  80f2bc:	4993c83a 	sub	r9,r9,r6
  80f2c0:	000b883a 	mov	r5,zero
  80f2c4:	21c00017 	ldw	r7,0(r4)
  80f2c8:	1815883a 	mov	r10,r3
  80f2cc:	18c00104 	addi	r3,r3,4
  80f2d0:	398e983a 	sll	r7,r7,r6
  80f2d4:	21000104 	addi	r4,r4,4
  80f2d8:	394ab03a 	or	r5,r7,r5
  80f2dc:	197fff15 	stw	r5,-4(r3)
  80f2e0:	217fff17 	ldw	r5,-4(r4)
  80f2e4:	2a4ad83a 	srl	r5,r5,r9
  80f2e8:	223ff636 	bltu	r4,r8,80f2c4 <__alt_data_end+0xff80f2c4>
  80f2ec:	51400115 	stw	r5,4(r10)
  80f2f0:	28001a1e 	bne	r5,zero,80f35c <__lshift+0x140>
  80f2f4:	843fffc4 	addi	r16,r16,-1
  80f2f8:	14000415 	stw	r16,16(r2)
  80f2fc:	88000826 	beq	r17,zero,80f320 <__lshift+0x104>
  80f300:	89000117 	ldw	r4,4(r17)
  80f304:	90c01317 	ldw	r3,76(r18)
  80f308:	2109883a 	add	r4,r4,r4
  80f30c:	2109883a 	add	r4,r4,r4
  80f310:	1907883a 	add	r3,r3,r4
  80f314:	19000017 	ldw	r4,0(r3)
  80f318:	89000015 	stw	r4,0(r17)
  80f31c:	1c400015 	stw	r17,0(r3)
  80f320:	dfc00617 	ldw	ra,24(sp)
  80f324:	dd400517 	ldw	r21,20(sp)
  80f328:	dd000417 	ldw	r20,16(sp)
  80f32c:	dcc00317 	ldw	r19,12(sp)
  80f330:	dc800217 	ldw	r18,8(sp)
  80f334:	dc400117 	ldw	r17,4(sp)
  80f338:	dc000017 	ldw	r16,0(sp)
  80f33c:	dec00704 	addi	sp,sp,28
  80f340:	f800283a 	ret
  80f344:	21400017 	ldw	r5,0(r4)
  80f348:	18c00104 	addi	r3,r3,4
  80f34c:	21000104 	addi	r4,r4,4
  80f350:	197fff15 	stw	r5,-4(r3)
  80f354:	223ffb36 	bltu	r4,r8,80f344 <__alt_data_end+0xff80f344>
  80f358:	003fe606 	br	80f2f4 <__alt_data_end+0xff80f2f4>
  80f35c:	9c000084 	addi	r16,r19,2
  80f360:	003fe406 	br	80f2f4 <__alt_data_end+0xff80f2f4>

0080f364 <__mcmp>:
  80f364:	20800417 	ldw	r2,16(r4)
  80f368:	28c00417 	ldw	r3,16(r5)
  80f36c:	10c5c83a 	sub	r2,r2,r3
  80f370:	1000111e 	bne	r2,zero,80f3b8 <__mcmp+0x54>
  80f374:	18c7883a 	add	r3,r3,r3
  80f378:	18c7883a 	add	r3,r3,r3
  80f37c:	21000504 	addi	r4,r4,20
  80f380:	29400504 	addi	r5,r5,20
  80f384:	20c5883a 	add	r2,r4,r3
  80f388:	28cb883a 	add	r5,r5,r3
  80f38c:	00000106 	br	80f394 <__mcmp+0x30>
  80f390:	20800a2e 	bgeu	r4,r2,80f3bc <__mcmp+0x58>
  80f394:	10bfff04 	addi	r2,r2,-4
  80f398:	297fff04 	addi	r5,r5,-4
  80f39c:	11800017 	ldw	r6,0(r2)
  80f3a0:	28c00017 	ldw	r3,0(r5)
  80f3a4:	30fffa26 	beq	r6,r3,80f390 <__alt_data_end+0xff80f390>
  80f3a8:	30c00236 	bltu	r6,r3,80f3b4 <__mcmp+0x50>
  80f3ac:	00800044 	movi	r2,1
  80f3b0:	f800283a 	ret
  80f3b4:	00bfffc4 	movi	r2,-1
  80f3b8:	f800283a 	ret
  80f3bc:	0005883a 	mov	r2,zero
  80f3c0:	f800283a 	ret

0080f3c4 <__mdiff>:
  80f3c4:	28c00417 	ldw	r3,16(r5)
  80f3c8:	30800417 	ldw	r2,16(r6)
  80f3cc:	defffa04 	addi	sp,sp,-24
  80f3d0:	dcc00315 	stw	r19,12(sp)
  80f3d4:	dc800215 	stw	r18,8(sp)
  80f3d8:	dfc00515 	stw	ra,20(sp)
  80f3dc:	dd000415 	stw	r20,16(sp)
  80f3e0:	dc400115 	stw	r17,4(sp)
  80f3e4:	dc000015 	stw	r16,0(sp)
  80f3e8:	1887c83a 	sub	r3,r3,r2
  80f3ec:	2825883a 	mov	r18,r5
  80f3f0:	3027883a 	mov	r19,r6
  80f3f4:	1800141e 	bne	r3,zero,80f448 <__mdiff+0x84>
  80f3f8:	1085883a 	add	r2,r2,r2
  80f3fc:	1085883a 	add	r2,r2,r2
  80f400:	2a000504 	addi	r8,r5,20
  80f404:	34000504 	addi	r16,r6,20
  80f408:	4087883a 	add	r3,r8,r2
  80f40c:	8085883a 	add	r2,r16,r2
  80f410:	00000106 	br	80f418 <__mdiff+0x54>
  80f414:	40c0592e 	bgeu	r8,r3,80f57c <__mdiff+0x1b8>
  80f418:	18ffff04 	addi	r3,r3,-4
  80f41c:	10bfff04 	addi	r2,r2,-4
  80f420:	19c00017 	ldw	r7,0(r3)
  80f424:	11400017 	ldw	r5,0(r2)
  80f428:	397ffa26 	beq	r7,r5,80f414 <__alt_data_end+0xff80f414>
  80f42c:	3940592e 	bgeu	r7,r5,80f594 <__mdiff+0x1d0>
  80f430:	9005883a 	mov	r2,r18
  80f434:	4023883a 	mov	r17,r8
  80f438:	9825883a 	mov	r18,r19
  80f43c:	05000044 	movi	r20,1
  80f440:	1027883a 	mov	r19,r2
  80f444:	00000406 	br	80f458 <__mdiff+0x94>
  80f448:	18005616 	blt	r3,zero,80f5a4 <__mdiff+0x1e0>
  80f44c:	34400504 	addi	r17,r6,20
  80f450:	2c000504 	addi	r16,r5,20
  80f454:	0029883a 	mov	r20,zero
  80f458:	91400117 	ldw	r5,4(r18)
  80f45c:	080ea9c0 	call	80ea9c <_Balloc>
  80f460:	92400417 	ldw	r9,16(r18)
  80f464:	9b000417 	ldw	r12,16(r19)
  80f468:	12c00504 	addi	r11,r2,20
  80f46c:	4a51883a 	add	r8,r9,r9
  80f470:	6319883a 	add	r12,r12,r12
  80f474:	4211883a 	add	r8,r8,r8
  80f478:	6319883a 	add	r12,r12,r12
  80f47c:	15000315 	stw	r20,12(r2)
  80f480:	8211883a 	add	r8,r16,r8
  80f484:	8b19883a 	add	r12,r17,r12
  80f488:	0007883a 	mov	r3,zero
  80f48c:	81400017 	ldw	r5,0(r16)
  80f490:	89c00017 	ldw	r7,0(r17)
  80f494:	59800104 	addi	r6,r11,4
  80f498:	293fffcc 	andi	r4,r5,65535
  80f49c:	20c7883a 	add	r3,r4,r3
  80f4a0:	393fffcc 	andi	r4,r7,65535
  80f4a4:	1909c83a 	sub	r4,r3,r4
  80f4a8:	280ad43a 	srli	r5,r5,16
  80f4ac:	380ed43a 	srli	r7,r7,16
  80f4b0:	2007d43a 	srai	r3,r4,16
  80f4b4:	213fffcc 	andi	r4,r4,65535
  80f4b8:	29cbc83a 	sub	r5,r5,r7
  80f4bc:	28c7883a 	add	r3,r5,r3
  80f4c0:	180a943a 	slli	r5,r3,16
  80f4c4:	8c400104 	addi	r17,r17,4
  80f4c8:	84000104 	addi	r16,r16,4
  80f4cc:	2908b03a 	or	r4,r5,r4
  80f4d0:	59000015 	stw	r4,0(r11)
  80f4d4:	1807d43a 	srai	r3,r3,16
  80f4d8:	3015883a 	mov	r10,r6
  80f4dc:	3017883a 	mov	r11,r6
  80f4e0:	8b3fea36 	bltu	r17,r12,80f48c <__alt_data_end+0xff80f48c>
  80f4e4:	8200162e 	bgeu	r16,r8,80f540 <__mdiff+0x17c>
  80f4e8:	8017883a 	mov	r11,r16
  80f4ec:	59400017 	ldw	r5,0(r11)
  80f4f0:	31800104 	addi	r6,r6,4
  80f4f4:	5ac00104 	addi	r11,r11,4
  80f4f8:	293fffcc 	andi	r4,r5,65535
  80f4fc:	20c7883a 	add	r3,r4,r3
  80f500:	280ed43a 	srli	r7,r5,16
  80f504:	180bd43a 	srai	r5,r3,16
  80f508:	193fffcc 	andi	r4,r3,65535
  80f50c:	3947883a 	add	r3,r7,r5
  80f510:	180a943a 	slli	r5,r3,16
  80f514:	1807d43a 	srai	r3,r3,16
  80f518:	2908b03a 	or	r4,r5,r4
  80f51c:	313fff15 	stw	r4,-4(r6)
  80f520:	5a3ff236 	bltu	r11,r8,80f4ec <__alt_data_end+0xff80f4ec>
  80f524:	0406303a 	nor	r3,zero,r16
  80f528:	1a07883a 	add	r3,r3,r8
  80f52c:	1806d0ba 	srli	r3,r3,2
  80f530:	18c00044 	addi	r3,r3,1
  80f534:	18c7883a 	add	r3,r3,r3
  80f538:	18c7883a 	add	r3,r3,r3
  80f53c:	50d5883a 	add	r10,r10,r3
  80f540:	50ffff04 	addi	r3,r10,-4
  80f544:	2000041e 	bne	r4,zero,80f558 <__mdiff+0x194>
  80f548:	18ffff04 	addi	r3,r3,-4
  80f54c:	19000017 	ldw	r4,0(r3)
  80f550:	4a7fffc4 	addi	r9,r9,-1
  80f554:	203ffc26 	beq	r4,zero,80f548 <__alt_data_end+0xff80f548>
  80f558:	12400415 	stw	r9,16(r2)
  80f55c:	dfc00517 	ldw	ra,20(sp)
  80f560:	dd000417 	ldw	r20,16(sp)
  80f564:	dcc00317 	ldw	r19,12(sp)
  80f568:	dc800217 	ldw	r18,8(sp)
  80f56c:	dc400117 	ldw	r17,4(sp)
  80f570:	dc000017 	ldw	r16,0(sp)
  80f574:	dec00604 	addi	sp,sp,24
  80f578:	f800283a 	ret
  80f57c:	000b883a 	mov	r5,zero
  80f580:	080ea9c0 	call	80ea9c <_Balloc>
  80f584:	00c00044 	movi	r3,1
  80f588:	10c00415 	stw	r3,16(r2)
  80f58c:	10000515 	stw	zero,20(r2)
  80f590:	003ff206 	br	80f55c <__alt_data_end+0xff80f55c>
  80f594:	8023883a 	mov	r17,r16
  80f598:	0029883a 	mov	r20,zero
  80f59c:	4021883a 	mov	r16,r8
  80f5a0:	003fad06 	br	80f458 <__alt_data_end+0xff80f458>
  80f5a4:	9005883a 	mov	r2,r18
  80f5a8:	94400504 	addi	r17,r18,20
  80f5ac:	9c000504 	addi	r16,r19,20
  80f5b0:	9825883a 	mov	r18,r19
  80f5b4:	05000044 	movi	r20,1
  80f5b8:	1027883a 	mov	r19,r2
  80f5bc:	003fa606 	br	80f458 <__alt_data_end+0xff80f458>

0080f5c0 <__ulp>:
  80f5c0:	295ffc2c 	andhi	r5,r5,32752
  80f5c4:	00bf3034 	movhi	r2,64704
  80f5c8:	2887883a 	add	r3,r5,r2
  80f5cc:	00c0020e 	bge	zero,r3,80f5d8 <__ulp+0x18>
  80f5d0:	0005883a 	mov	r2,zero
  80f5d4:	f800283a 	ret
  80f5d8:	00c7c83a 	sub	r3,zero,r3
  80f5dc:	1807d53a 	srai	r3,r3,20
  80f5e0:	008004c4 	movi	r2,19
  80f5e4:	10c00b0e 	bge	r2,r3,80f614 <__ulp+0x54>
  80f5e8:	18bffb04 	addi	r2,r3,-20
  80f5ec:	01000784 	movi	r4,30
  80f5f0:	0007883a 	mov	r3,zero
  80f5f4:	20800516 	blt	r4,r2,80f60c <__ulp+0x4c>
  80f5f8:	010007c4 	movi	r4,31
  80f5fc:	2089c83a 	sub	r4,r4,r2
  80f600:	00800044 	movi	r2,1
  80f604:	1104983a 	sll	r2,r2,r4
  80f608:	f800283a 	ret
  80f60c:	00800044 	movi	r2,1
  80f610:	f800283a 	ret
  80f614:	01400234 	movhi	r5,8
  80f618:	28c7d83a 	sra	r3,r5,r3
  80f61c:	0005883a 	mov	r2,zero
  80f620:	f800283a 	ret

0080f624 <__b2d>:
  80f624:	defffa04 	addi	sp,sp,-24
  80f628:	dc000015 	stw	r16,0(sp)
  80f62c:	24000417 	ldw	r16,16(r4)
  80f630:	dc400115 	stw	r17,4(sp)
  80f634:	24400504 	addi	r17,r4,20
  80f638:	8421883a 	add	r16,r16,r16
  80f63c:	8421883a 	add	r16,r16,r16
  80f640:	8c21883a 	add	r16,r17,r16
  80f644:	dc800215 	stw	r18,8(sp)
  80f648:	84bfff17 	ldw	r18,-4(r16)
  80f64c:	dd000415 	stw	r20,16(sp)
  80f650:	dcc00315 	stw	r19,12(sp)
  80f654:	9009883a 	mov	r4,r18
  80f658:	2829883a 	mov	r20,r5
  80f65c:	dfc00515 	stw	ra,20(sp)
  80f660:	080ed900 	call	80ed90 <__hi0bits>
  80f664:	00c00804 	movi	r3,32
  80f668:	1889c83a 	sub	r4,r3,r2
  80f66c:	a1000015 	stw	r4,0(r20)
  80f670:	01000284 	movi	r4,10
  80f674:	84ffff04 	addi	r19,r16,-4
  80f678:	20801216 	blt	r4,r2,80f6c4 <__b2d+0xa0>
  80f67c:	018002c4 	movi	r6,11
  80f680:	308dc83a 	sub	r6,r6,r2
  80f684:	9186d83a 	srl	r3,r18,r6
  80f688:	18cffc34 	orhi	r3,r3,16368
  80f68c:	8cc0212e 	bgeu	r17,r19,80f714 <__b2d+0xf0>
  80f690:	813ffe17 	ldw	r4,-8(r16)
  80f694:	218cd83a 	srl	r6,r4,r6
  80f698:	10800544 	addi	r2,r2,21
  80f69c:	9084983a 	sll	r2,r18,r2
  80f6a0:	1184b03a 	or	r2,r2,r6
  80f6a4:	dfc00517 	ldw	ra,20(sp)
  80f6a8:	dd000417 	ldw	r20,16(sp)
  80f6ac:	dcc00317 	ldw	r19,12(sp)
  80f6b0:	dc800217 	ldw	r18,8(sp)
  80f6b4:	dc400117 	ldw	r17,4(sp)
  80f6b8:	dc000017 	ldw	r16,0(sp)
  80f6bc:	dec00604 	addi	sp,sp,24
  80f6c0:	f800283a 	ret
  80f6c4:	8cc00f2e 	bgeu	r17,r19,80f704 <__b2d+0xe0>
  80f6c8:	117ffd44 	addi	r5,r2,-11
  80f6cc:	80bffe17 	ldw	r2,-8(r16)
  80f6d0:	28000e26 	beq	r5,zero,80f70c <__b2d+0xe8>
  80f6d4:	1949c83a 	sub	r4,r3,r5
  80f6d8:	9164983a 	sll	r18,r18,r5
  80f6dc:	1106d83a 	srl	r3,r2,r4
  80f6e0:	81bffe04 	addi	r6,r16,-8
  80f6e4:	948ffc34 	orhi	r18,r18,16368
  80f6e8:	90c6b03a 	or	r3,r18,r3
  80f6ec:	89800e2e 	bgeu	r17,r6,80f728 <__b2d+0x104>
  80f6f0:	81bffd17 	ldw	r6,-12(r16)
  80f6f4:	1144983a 	sll	r2,r2,r5
  80f6f8:	310ad83a 	srl	r5,r6,r4
  80f6fc:	2884b03a 	or	r2,r5,r2
  80f700:	003fe806 	br	80f6a4 <__alt_data_end+0xff80f6a4>
  80f704:	10bffd44 	addi	r2,r2,-11
  80f708:	1000041e 	bne	r2,zero,80f71c <__b2d+0xf8>
  80f70c:	90cffc34 	orhi	r3,r18,16368
  80f710:	003fe406 	br	80f6a4 <__alt_data_end+0xff80f6a4>
  80f714:	000d883a 	mov	r6,zero
  80f718:	003fdf06 	br	80f698 <__alt_data_end+0xff80f698>
  80f71c:	90a4983a 	sll	r18,r18,r2
  80f720:	0005883a 	mov	r2,zero
  80f724:	003ff906 	br	80f70c <__alt_data_end+0xff80f70c>
  80f728:	1144983a 	sll	r2,r2,r5
  80f72c:	003fdd06 	br	80f6a4 <__alt_data_end+0xff80f6a4>

0080f730 <__d2b>:
  80f730:	defff804 	addi	sp,sp,-32
  80f734:	dc000215 	stw	r16,8(sp)
  80f738:	3021883a 	mov	r16,r6
  80f73c:	dc400315 	stw	r17,12(sp)
  80f740:	8022907a 	slli	r17,r16,1
  80f744:	dd000615 	stw	r20,24(sp)
  80f748:	2829883a 	mov	r20,r5
  80f74c:	01400044 	movi	r5,1
  80f750:	dcc00515 	stw	r19,20(sp)
  80f754:	dc800415 	stw	r18,16(sp)
  80f758:	dfc00715 	stw	ra,28(sp)
  80f75c:	3825883a 	mov	r18,r7
  80f760:	8822d57a 	srli	r17,r17,21
  80f764:	080ea9c0 	call	80ea9c <_Balloc>
  80f768:	1027883a 	mov	r19,r2
  80f76c:	00800434 	movhi	r2,16
  80f770:	10bfffc4 	addi	r2,r2,-1
  80f774:	808c703a 	and	r6,r16,r2
  80f778:	88000126 	beq	r17,zero,80f780 <__d2b+0x50>
  80f77c:	31800434 	orhi	r6,r6,16
  80f780:	d9800015 	stw	r6,0(sp)
  80f784:	a0002426 	beq	r20,zero,80f818 <__d2b+0xe8>
  80f788:	d9000104 	addi	r4,sp,4
  80f78c:	dd000115 	stw	r20,4(sp)
  80f790:	080edf80 	call	80edf8 <__lo0bits>
  80f794:	d8c00017 	ldw	r3,0(sp)
  80f798:	10002f1e 	bne	r2,zero,80f858 <__d2b+0x128>
  80f79c:	d9000117 	ldw	r4,4(sp)
  80f7a0:	99000515 	stw	r4,20(r19)
  80f7a4:	1821003a 	cmpeq	r16,r3,zero
  80f7a8:	01000084 	movi	r4,2
  80f7ac:	2421c83a 	sub	r16,r4,r16
  80f7b0:	98c00615 	stw	r3,24(r19)
  80f7b4:	9c000415 	stw	r16,16(r19)
  80f7b8:	88001f1e 	bne	r17,zero,80f838 <__d2b+0x108>
  80f7bc:	10bef384 	addi	r2,r2,-1074
  80f7c0:	90800015 	stw	r2,0(r18)
  80f7c4:	00900034 	movhi	r2,16384
  80f7c8:	10bfffc4 	addi	r2,r2,-1
  80f7cc:	8085883a 	add	r2,r16,r2
  80f7d0:	1085883a 	add	r2,r2,r2
  80f7d4:	1085883a 	add	r2,r2,r2
  80f7d8:	9885883a 	add	r2,r19,r2
  80f7dc:	11000517 	ldw	r4,20(r2)
  80f7e0:	8020917a 	slli	r16,r16,5
  80f7e4:	080ed900 	call	80ed90 <__hi0bits>
  80f7e8:	d8c00817 	ldw	r3,32(sp)
  80f7ec:	8085c83a 	sub	r2,r16,r2
  80f7f0:	18800015 	stw	r2,0(r3)
  80f7f4:	9805883a 	mov	r2,r19
  80f7f8:	dfc00717 	ldw	ra,28(sp)
  80f7fc:	dd000617 	ldw	r20,24(sp)
  80f800:	dcc00517 	ldw	r19,20(sp)
  80f804:	dc800417 	ldw	r18,16(sp)
  80f808:	dc400317 	ldw	r17,12(sp)
  80f80c:	dc000217 	ldw	r16,8(sp)
  80f810:	dec00804 	addi	sp,sp,32
  80f814:	f800283a 	ret
  80f818:	d809883a 	mov	r4,sp
  80f81c:	080edf80 	call	80edf8 <__lo0bits>
  80f820:	d8c00017 	ldw	r3,0(sp)
  80f824:	04000044 	movi	r16,1
  80f828:	9c000415 	stw	r16,16(r19)
  80f82c:	98c00515 	stw	r3,20(r19)
  80f830:	10800804 	addi	r2,r2,32
  80f834:	883fe126 	beq	r17,zero,80f7bc <__alt_data_end+0xff80f7bc>
  80f838:	00c00d44 	movi	r3,53
  80f83c:	8c7ef344 	addi	r17,r17,-1075
  80f840:	88a3883a 	add	r17,r17,r2
  80f844:	1885c83a 	sub	r2,r3,r2
  80f848:	d8c00817 	ldw	r3,32(sp)
  80f84c:	94400015 	stw	r17,0(r18)
  80f850:	18800015 	stw	r2,0(r3)
  80f854:	003fe706 	br	80f7f4 <__alt_data_end+0xff80f7f4>
  80f858:	01000804 	movi	r4,32
  80f85c:	2089c83a 	sub	r4,r4,r2
  80f860:	1908983a 	sll	r4,r3,r4
  80f864:	d9400117 	ldw	r5,4(sp)
  80f868:	1886d83a 	srl	r3,r3,r2
  80f86c:	2148b03a 	or	r4,r4,r5
  80f870:	99000515 	stw	r4,20(r19)
  80f874:	d8c00015 	stw	r3,0(sp)
  80f878:	003fca06 	br	80f7a4 <__alt_data_end+0xff80f7a4>

0080f87c <__ratio>:
  80f87c:	defff904 	addi	sp,sp,-28
  80f880:	dc400315 	stw	r17,12(sp)
  80f884:	2823883a 	mov	r17,r5
  80f888:	d9400104 	addi	r5,sp,4
  80f88c:	dfc00615 	stw	ra,24(sp)
  80f890:	dcc00515 	stw	r19,20(sp)
  80f894:	dc800415 	stw	r18,16(sp)
  80f898:	2027883a 	mov	r19,r4
  80f89c:	dc000215 	stw	r16,8(sp)
  80f8a0:	080f6240 	call	80f624 <__b2d>
  80f8a4:	d80b883a 	mov	r5,sp
  80f8a8:	8809883a 	mov	r4,r17
  80f8ac:	1025883a 	mov	r18,r2
  80f8b0:	1821883a 	mov	r16,r3
  80f8b4:	080f6240 	call	80f624 <__b2d>
  80f8b8:	8a000417 	ldw	r8,16(r17)
  80f8bc:	99000417 	ldw	r4,16(r19)
  80f8c0:	d9400117 	ldw	r5,4(sp)
  80f8c4:	2209c83a 	sub	r4,r4,r8
  80f8c8:	2010917a 	slli	r8,r4,5
  80f8cc:	d9000017 	ldw	r4,0(sp)
  80f8d0:	2909c83a 	sub	r4,r5,r4
  80f8d4:	4109883a 	add	r4,r8,r4
  80f8d8:	01000e0e 	bge	zero,r4,80f914 <__ratio+0x98>
  80f8dc:	2008953a 	slli	r4,r4,20
  80f8e0:	2421883a 	add	r16,r4,r16
  80f8e4:	100d883a 	mov	r6,r2
  80f8e8:	180f883a 	mov	r7,r3
  80f8ec:	9009883a 	mov	r4,r18
  80f8f0:	800b883a 	mov	r5,r16
  80f8f4:	0806d1c0 	call	806d1c <__divdf3>
  80f8f8:	dfc00617 	ldw	ra,24(sp)
  80f8fc:	dcc00517 	ldw	r19,20(sp)
  80f900:	dc800417 	ldw	r18,16(sp)
  80f904:	dc400317 	ldw	r17,12(sp)
  80f908:	dc000217 	ldw	r16,8(sp)
  80f90c:	dec00704 	addi	sp,sp,28
  80f910:	f800283a 	ret
  80f914:	2008953a 	slli	r4,r4,20
  80f918:	1907c83a 	sub	r3,r3,r4
  80f91c:	003ff106 	br	80f8e4 <__alt_data_end+0xff80f8e4>

0080f920 <_mprec_log10>:
  80f920:	defffe04 	addi	sp,sp,-8
  80f924:	dc000015 	stw	r16,0(sp)
  80f928:	dfc00115 	stw	ra,4(sp)
  80f92c:	008005c4 	movi	r2,23
  80f930:	2021883a 	mov	r16,r4
  80f934:	11000d0e 	bge	r2,r4,80f96c <_mprec_log10+0x4c>
  80f938:	0005883a 	mov	r2,zero
  80f93c:	00cffc34 	movhi	r3,16368
  80f940:	843fffc4 	addi	r16,r16,-1
  80f944:	000d883a 	mov	r6,zero
  80f948:	01d00934 	movhi	r7,16420
  80f94c:	1009883a 	mov	r4,r2
  80f950:	180b883a 	mov	r5,r3
  80f954:	08077680 	call	807768 <__muldf3>
  80f958:	803ff91e 	bne	r16,zero,80f940 <__alt_data_end+0xff80f940>
  80f95c:	dfc00117 	ldw	ra,4(sp)
  80f960:	dc000017 	ldw	r16,0(sp)
  80f964:	dec00204 	addi	sp,sp,8
  80f968:	f800283a 	ret
  80f96c:	202090fa 	slli	r16,r4,3
  80f970:	00802074 	movhi	r2,129
  80f974:	10970404 	addi	r2,r2,23568
  80f978:	1421883a 	add	r16,r2,r16
  80f97c:	80800017 	ldw	r2,0(r16)
  80f980:	80c00117 	ldw	r3,4(r16)
  80f984:	dfc00117 	ldw	ra,4(sp)
  80f988:	dc000017 	ldw	r16,0(sp)
  80f98c:	dec00204 	addi	sp,sp,8
  80f990:	f800283a 	ret

0080f994 <__copybits>:
  80f994:	297fffc4 	addi	r5,r5,-1
  80f998:	280fd17a 	srai	r7,r5,5
  80f99c:	30c00417 	ldw	r3,16(r6)
  80f9a0:	30800504 	addi	r2,r6,20
  80f9a4:	39c00044 	addi	r7,r7,1
  80f9a8:	18c7883a 	add	r3,r3,r3
  80f9ac:	39cf883a 	add	r7,r7,r7
  80f9b0:	18c7883a 	add	r3,r3,r3
  80f9b4:	39cf883a 	add	r7,r7,r7
  80f9b8:	10c7883a 	add	r3,r2,r3
  80f9bc:	21cf883a 	add	r7,r4,r7
  80f9c0:	10c00d2e 	bgeu	r2,r3,80f9f8 <__copybits+0x64>
  80f9c4:	200b883a 	mov	r5,r4
  80f9c8:	12000017 	ldw	r8,0(r2)
  80f9cc:	29400104 	addi	r5,r5,4
  80f9d0:	10800104 	addi	r2,r2,4
  80f9d4:	2a3fff15 	stw	r8,-4(r5)
  80f9d8:	10fffb36 	bltu	r2,r3,80f9c8 <__alt_data_end+0xff80f9c8>
  80f9dc:	1985c83a 	sub	r2,r3,r6
  80f9e0:	10bffac4 	addi	r2,r2,-21
  80f9e4:	1004d0ba 	srli	r2,r2,2
  80f9e8:	10800044 	addi	r2,r2,1
  80f9ec:	1085883a 	add	r2,r2,r2
  80f9f0:	1085883a 	add	r2,r2,r2
  80f9f4:	2089883a 	add	r4,r4,r2
  80f9f8:	21c0032e 	bgeu	r4,r7,80fa08 <__copybits+0x74>
  80f9fc:	20000015 	stw	zero,0(r4)
  80fa00:	21000104 	addi	r4,r4,4
  80fa04:	21fffd36 	bltu	r4,r7,80f9fc <__alt_data_end+0xff80f9fc>
  80fa08:	f800283a 	ret

0080fa0c <__any_on>:
  80fa0c:	20c00417 	ldw	r3,16(r4)
  80fa10:	2805d17a 	srai	r2,r5,5
  80fa14:	21000504 	addi	r4,r4,20
  80fa18:	18800d0e 	bge	r3,r2,80fa50 <__any_on+0x44>
  80fa1c:	18c7883a 	add	r3,r3,r3
  80fa20:	18c7883a 	add	r3,r3,r3
  80fa24:	20c7883a 	add	r3,r4,r3
  80fa28:	20c0192e 	bgeu	r4,r3,80fa90 <__any_on+0x84>
  80fa2c:	18bfff17 	ldw	r2,-4(r3)
  80fa30:	18ffff04 	addi	r3,r3,-4
  80fa34:	1000041e 	bne	r2,zero,80fa48 <__any_on+0x3c>
  80fa38:	20c0142e 	bgeu	r4,r3,80fa8c <__any_on+0x80>
  80fa3c:	18ffff04 	addi	r3,r3,-4
  80fa40:	19400017 	ldw	r5,0(r3)
  80fa44:	283ffc26 	beq	r5,zero,80fa38 <__alt_data_end+0xff80fa38>
  80fa48:	00800044 	movi	r2,1
  80fa4c:	f800283a 	ret
  80fa50:	10c00a0e 	bge	r2,r3,80fa7c <__any_on+0x70>
  80fa54:	1085883a 	add	r2,r2,r2
  80fa58:	1085883a 	add	r2,r2,r2
  80fa5c:	294007cc 	andi	r5,r5,31
  80fa60:	2087883a 	add	r3,r4,r2
  80fa64:	283ff026 	beq	r5,zero,80fa28 <__alt_data_end+0xff80fa28>
  80fa68:	19800017 	ldw	r6,0(r3)
  80fa6c:	3144d83a 	srl	r2,r6,r5
  80fa70:	114a983a 	sll	r5,r2,r5
  80fa74:	317ff41e 	bne	r6,r5,80fa48 <__alt_data_end+0xff80fa48>
  80fa78:	003feb06 	br	80fa28 <__alt_data_end+0xff80fa28>
  80fa7c:	1085883a 	add	r2,r2,r2
  80fa80:	1085883a 	add	r2,r2,r2
  80fa84:	2087883a 	add	r3,r4,r2
  80fa88:	003fe706 	br	80fa28 <__alt_data_end+0xff80fa28>
  80fa8c:	f800283a 	ret
  80fa90:	0005883a 	mov	r2,zero
  80fa94:	f800283a 	ret

0080fa98 <_realloc_r>:
  80fa98:	defff604 	addi	sp,sp,-40
  80fa9c:	dc800215 	stw	r18,8(sp)
  80faa0:	dfc00915 	stw	ra,36(sp)
  80faa4:	df000815 	stw	fp,32(sp)
  80faa8:	ddc00715 	stw	r23,28(sp)
  80faac:	dd800615 	stw	r22,24(sp)
  80fab0:	dd400515 	stw	r21,20(sp)
  80fab4:	dd000415 	stw	r20,16(sp)
  80fab8:	dcc00315 	stw	r19,12(sp)
  80fabc:	dc400115 	stw	r17,4(sp)
  80fac0:	dc000015 	stw	r16,0(sp)
  80fac4:	3025883a 	mov	r18,r6
  80fac8:	2800b726 	beq	r5,zero,80fda8 <_realloc_r+0x310>
  80facc:	282b883a 	mov	r21,r5
  80fad0:	2029883a 	mov	r20,r4
  80fad4:	08134200 	call	813420 <__malloc_lock>
  80fad8:	a8bfff17 	ldw	r2,-4(r21)
  80fadc:	043fff04 	movi	r16,-4
  80fae0:	90c002c4 	addi	r3,r18,11
  80fae4:	01000584 	movi	r4,22
  80fae8:	acfffe04 	addi	r19,r21,-8
  80faec:	1420703a 	and	r16,r2,r16
  80faf0:	20c0332e 	bgeu	r4,r3,80fbc0 <_realloc_r+0x128>
  80faf4:	047ffe04 	movi	r17,-8
  80faf8:	1c62703a 	and	r17,r3,r17
  80fafc:	8807883a 	mov	r3,r17
  80fb00:	88005816 	blt	r17,zero,80fc64 <_realloc_r+0x1cc>
  80fb04:	8c805736 	bltu	r17,r18,80fc64 <_realloc_r+0x1cc>
  80fb08:	80c0300e 	bge	r16,r3,80fbcc <_realloc_r+0x134>
  80fb0c:	07002074 	movhi	fp,129
  80fb10:	e7187004 	addi	fp,fp,25024
  80fb14:	e1c00217 	ldw	r7,8(fp)
  80fb18:	9c09883a 	add	r4,r19,r16
  80fb1c:	22000117 	ldw	r8,4(r4)
  80fb20:	21c06326 	beq	r4,r7,80fcb0 <_realloc_r+0x218>
  80fb24:	017fff84 	movi	r5,-2
  80fb28:	414a703a 	and	r5,r8,r5
  80fb2c:	214b883a 	add	r5,r4,r5
  80fb30:	29800117 	ldw	r6,4(r5)
  80fb34:	3180004c 	andi	r6,r6,1
  80fb38:	30003f26 	beq	r6,zero,80fc38 <_realloc_r+0x1a0>
  80fb3c:	1080004c 	andi	r2,r2,1
  80fb40:	10008326 	beq	r2,zero,80fd50 <_realloc_r+0x2b8>
  80fb44:	900b883a 	mov	r5,r18
  80fb48:	a009883a 	mov	r4,r20
  80fb4c:	080dde00 	call	80dde0 <_malloc_r>
  80fb50:	1025883a 	mov	r18,r2
  80fb54:	10011e26 	beq	r2,zero,80ffd0 <_realloc_r+0x538>
  80fb58:	a93fff17 	ldw	r4,-4(r21)
  80fb5c:	10fffe04 	addi	r3,r2,-8
  80fb60:	00bfff84 	movi	r2,-2
  80fb64:	2084703a 	and	r2,r4,r2
  80fb68:	9885883a 	add	r2,r19,r2
  80fb6c:	1880ee26 	beq	r3,r2,80ff28 <_realloc_r+0x490>
  80fb70:	81bfff04 	addi	r6,r16,-4
  80fb74:	00800904 	movi	r2,36
  80fb78:	1180b836 	bltu	r2,r6,80fe5c <_realloc_r+0x3c4>
  80fb7c:	00c004c4 	movi	r3,19
  80fb80:	19809636 	bltu	r3,r6,80fddc <_realloc_r+0x344>
  80fb84:	9005883a 	mov	r2,r18
  80fb88:	a807883a 	mov	r3,r21
  80fb8c:	19000017 	ldw	r4,0(r3)
  80fb90:	11000015 	stw	r4,0(r2)
  80fb94:	19000117 	ldw	r4,4(r3)
  80fb98:	11000115 	stw	r4,4(r2)
  80fb9c:	18c00217 	ldw	r3,8(r3)
  80fba0:	10c00215 	stw	r3,8(r2)
  80fba4:	a80b883a 	mov	r5,r21
  80fba8:	a009883a 	mov	r4,r20
  80fbac:	080d1f40 	call	80d1f4 <_free_r>
  80fbb0:	a009883a 	mov	r4,r20
  80fbb4:	08134440 	call	813444 <__malloc_unlock>
  80fbb8:	9005883a 	mov	r2,r18
  80fbbc:	00001206 	br	80fc08 <_realloc_r+0x170>
  80fbc0:	00c00404 	movi	r3,16
  80fbc4:	1823883a 	mov	r17,r3
  80fbc8:	003fce06 	br	80fb04 <__alt_data_end+0xff80fb04>
  80fbcc:	a825883a 	mov	r18,r21
  80fbd0:	8445c83a 	sub	r2,r16,r17
  80fbd4:	00c003c4 	movi	r3,15
  80fbd8:	18802636 	bltu	r3,r2,80fc74 <_realloc_r+0x1dc>
  80fbdc:	99800117 	ldw	r6,4(r19)
  80fbe0:	9c07883a 	add	r3,r19,r16
  80fbe4:	3180004c 	andi	r6,r6,1
  80fbe8:	3420b03a 	or	r16,r6,r16
  80fbec:	9c000115 	stw	r16,4(r19)
  80fbf0:	18800117 	ldw	r2,4(r3)
  80fbf4:	10800054 	ori	r2,r2,1
  80fbf8:	18800115 	stw	r2,4(r3)
  80fbfc:	a009883a 	mov	r4,r20
  80fc00:	08134440 	call	813444 <__malloc_unlock>
  80fc04:	9005883a 	mov	r2,r18
  80fc08:	dfc00917 	ldw	ra,36(sp)
  80fc0c:	df000817 	ldw	fp,32(sp)
  80fc10:	ddc00717 	ldw	r23,28(sp)
  80fc14:	dd800617 	ldw	r22,24(sp)
  80fc18:	dd400517 	ldw	r21,20(sp)
  80fc1c:	dd000417 	ldw	r20,16(sp)
  80fc20:	dcc00317 	ldw	r19,12(sp)
  80fc24:	dc800217 	ldw	r18,8(sp)
  80fc28:	dc400117 	ldw	r17,4(sp)
  80fc2c:	dc000017 	ldw	r16,0(sp)
  80fc30:	dec00a04 	addi	sp,sp,40
  80fc34:	f800283a 	ret
  80fc38:	017fff04 	movi	r5,-4
  80fc3c:	414a703a 	and	r5,r8,r5
  80fc40:	814d883a 	add	r6,r16,r5
  80fc44:	30c01f16 	blt	r6,r3,80fcc4 <_realloc_r+0x22c>
  80fc48:	20800317 	ldw	r2,12(r4)
  80fc4c:	20c00217 	ldw	r3,8(r4)
  80fc50:	a825883a 	mov	r18,r21
  80fc54:	3021883a 	mov	r16,r6
  80fc58:	18800315 	stw	r2,12(r3)
  80fc5c:	10c00215 	stw	r3,8(r2)
  80fc60:	003fdb06 	br	80fbd0 <__alt_data_end+0xff80fbd0>
  80fc64:	00800304 	movi	r2,12
  80fc68:	a0800015 	stw	r2,0(r20)
  80fc6c:	0005883a 	mov	r2,zero
  80fc70:	003fe506 	br	80fc08 <__alt_data_end+0xff80fc08>
  80fc74:	98c00117 	ldw	r3,4(r19)
  80fc78:	9c4b883a 	add	r5,r19,r17
  80fc7c:	11000054 	ori	r4,r2,1
  80fc80:	18c0004c 	andi	r3,r3,1
  80fc84:	1c62b03a 	or	r17,r3,r17
  80fc88:	9c400115 	stw	r17,4(r19)
  80fc8c:	29000115 	stw	r4,4(r5)
  80fc90:	2885883a 	add	r2,r5,r2
  80fc94:	10c00117 	ldw	r3,4(r2)
  80fc98:	29400204 	addi	r5,r5,8
  80fc9c:	a009883a 	mov	r4,r20
  80fca0:	18c00054 	ori	r3,r3,1
  80fca4:	10c00115 	stw	r3,4(r2)
  80fca8:	080d1f40 	call	80d1f4 <_free_r>
  80fcac:	003fd306 	br	80fbfc <__alt_data_end+0xff80fbfc>
  80fcb0:	017fff04 	movi	r5,-4
  80fcb4:	414a703a 	and	r5,r8,r5
  80fcb8:	89800404 	addi	r6,r17,16
  80fcbc:	8151883a 	add	r8,r16,r5
  80fcc0:	4180590e 	bge	r8,r6,80fe28 <_realloc_r+0x390>
  80fcc4:	1080004c 	andi	r2,r2,1
  80fcc8:	103f9e1e 	bne	r2,zero,80fb44 <__alt_data_end+0xff80fb44>
  80fccc:	adbffe17 	ldw	r22,-8(r21)
  80fcd0:	00bfff04 	movi	r2,-4
  80fcd4:	9dadc83a 	sub	r22,r19,r22
  80fcd8:	b1800117 	ldw	r6,4(r22)
  80fcdc:	3084703a 	and	r2,r6,r2
  80fce0:	20002026 	beq	r4,zero,80fd64 <_realloc_r+0x2cc>
  80fce4:	80af883a 	add	r23,r16,r2
  80fce8:	b96f883a 	add	r23,r23,r5
  80fcec:	21c05f26 	beq	r4,r7,80fe6c <_realloc_r+0x3d4>
  80fcf0:	b8c01c16 	blt	r23,r3,80fd64 <_realloc_r+0x2cc>
  80fcf4:	20800317 	ldw	r2,12(r4)
  80fcf8:	20c00217 	ldw	r3,8(r4)
  80fcfc:	81bfff04 	addi	r6,r16,-4
  80fd00:	01000904 	movi	r4,36
  80fd04:	18800315 	stw	r2,12(r3)
  80fd08:	10c00215 	stw	r3,8(r2)
  80fd0c:	b0c00217 	ldw	r3,8(r22)
  80fd10:	b0800317 	ldw	r2,12(r22)
  80fd14:	b4800204 	addi	r18,r22,8
  80fd18:	18800315 	stw	r2,12(r3)
  80fd1c:	10c00215 	stw	r3,8(r2)
  80fd20:	21801b36 	bltu	r4,r6,80fd90 <_realloc_r+0x2f8>
  80fd24:	008004c4 	movi	r2,19
  80fd28:	1180352e 	bgeu	r2,r6,80fe00 <_realloc_r+0x368>
  80fd2c:	a8800017 	ldw	r2,0(r21)
  80fd30:	b0800215 	stw	r2,8(r22)
  80fd34:	a8800117 	ldw	r2,4(r21)
  80fd38:	b0800315 	stw	r2,12(r22)
  80fd3c:	008006c4 	movi	r2,27
  80fd40:	11807f36 	bltu	r2,r6,80ff40 <_realloc_r+0x4a8>
  80fd44:	b0800404 	addi	r2,r22,16
  80fd48:	ad400204 	addi	r21,r21,8
  80fd4c:	00002d06 	br	80fe04 <_realloc_r+0x36c>
  80fd50:	adbffe17 	ldw	r22,-8(r21)
  80fd54:	00bfff04 	movi	r2,-4
  80fd58:	9dadc83a 	sub	r22,r19,r22
  80fd5c:	b1000117 	ldw	r4,4(r22)
  80fd60:	2084703a 	and	r2,r4,r2
  80fd64:	b03f7726 	beq	r22,zero,80fb44 <__alt_data_end+0xff80fb44>
  80fd68:	80af883a 	add	r23,r16,r2
  80fd6c:	b8ff7516 	blt	r23,r3,80fb44 <__alt_data_end+0xff80fb44>
  80fd70:	b0800317 	ldw	r2,12(r22)
  80fd74:	b0c00217 	ldw	r3,8(r22)
  80fd78:	81bfff04 	addi	r6,r16,-4
  80fd7c:	01000904 	movi	r4,36
  80fd80:	18800315 	stw	r2,12(r3)
  80fd84:	10c00215 	stw	r3,8(r2)
  80fd88:	b4800204 	addi	r18,r22,8
  80fd8c:	21bfe52e 	bgeu	r4,r6,80fd24 <__alt_data_end+0xff80fd24>
  80fd90:	a80b883a 	mov	r5,r21
  80fd94:	9009883a 	mov	r4,r18
  80fd98:	080e8180 	call	80e818 <memmove>
  80fd9c:	b821883a 	mov	r16,r23
  80fda0:	b027883a 	mov	r19,r22
  80fda4:	003f8a06 	br	80fbd0 <__alt_data_end+0xff80fbd0>
  80fda8:	300b883a 	mov	r5,r6
  80fdac:	dfc00917 	ldw	ra,36(sp)
  80fdb0:	df000817 	ldw	fp,32(sp)
  80fdb4:	ddc00717 	ldw	r23,28(sp)
  80fdb8:	dd800617 	ldw	r22,24(sp)
  80fdbc:	dd400517 	ldw	r21,20(sp)
  80fdc0:	dd000417 	ldw	r20,16(sp)
  80fdc4:	dcc00317 	ldw	r19,12(sp)
  80fdc8:	dc800217 	ldw	r18,8(sp)
  80fdcc:	dc400117 	ldw	r17,4(sp)
  80fdd0:	dc000017 	ldw	r16,0(sp)
  80fdd4:	dec00a04 	addi	sp,sp,40
  80fdd8:	080dde01 	jmpi	80dde0 <_malloc_r>
  80fddc:	a8c00017 	ldw	r3,0(r21)
  80fde0:	90c00015 	stw	r3,0(r18)
  80fde4:	a8c00117 	ldw	r3,4(r21)
  80fde8:	90c00115 	stw	r3,4(r18)
  80fdec:	00c006c4 	movi	r3,27
  80fdf0:	19804536 	bltu	r3,r6,80ff08 <_realloc_r+0x470>
  80fdf4:	90800204 	addi	r2,r18,8
  80fdf8:	a8c00204 	addi	r3,r21,8
  80fdfc:	003f6306 	br	80fb8c <__alt_data_end+0xff80fb8c>
  80fe00:	9005883a 	mov	r2,r18
  80fe04:	a8c00017 	ldw	r3,0(r21)
  80fe08:	b821883a 	mov	r16,r23
  80fe0c:	b027883a 	mov	r19,r22
  80fe10:	10c00015 	stw	r3,0(r2)
  80fe14:	a8c00117 	ldw	r3,4(r21)
  80fe18:	10c00115 	stw	r3,4(r2)
  80fe1c:	a8c00217 	ldw	r3,8(r21)
  80fe20:	10c00215 	stw	r3,8(r2)
  80fe24:	003f6a06 	br	80fbd0 <__alt_data_end+0xff80fbd0>
  80fe28:	9c67883a 	add	r19,r19,r17
  80fe2c:	4445c83a 	sub	r2,r8,r17
  80fe30:	e4c00215 	stw	r19,8(fp)
  80fe34:	10800054 	ori	r2,r2,1
  80fe38:	98800115 	stw	r2,4(r19)
  80fe3c:	a8bfff17 	ldw	r2,-4(r21)
  80fe40:	a009883a 	mov	r4,r20
  80fe44:	1080004c 	andi	r2,r2,1
  80fe48:	1462b03a 	or	r17,r2,r17
  80fe4c:	ac7fff15 	stw	r17,-4(r21)
  80fe50:	08134440 	call	813444 <__malloc_unlock>
  80fe54:	a805883a 	mov	r2,r21
  80fe58:	003f6b06 	br	80fc08 <__alt_data_end+0xff80fc08>
  80fe5c:	a80b883a 	mov	r5,r21
  80fe60:	9009883a 	mov	r4,r18
  80fe64:	080e8180 	call	80e818 <memmove>
  80fe68:	003f4e06 	br	80fba4 <__alt_data_end+0xff80fba4>
  80fe6c:	89000404 	addi	r4,r17,16
  80fe70:	b93fbc16 	blt	r23,r4,80fd64 <__alt_data_end+0xff80fd64>
  80fe74:	b0800317 	ldw	r2,12(r22)
  80fe78:	b0c00217 	ldw	r3,8(r22)
  80fe7c:	81bfff04 	addi	r6,r16,-4
  80fe80:	01000904 	movi	r4,36
  80fe84:	18800315 	stw	r2,12(r3)
  80fe88:	10c00215 	stw	r3,8(r2)
  80fe8c:	b4800204 	addi	r18,r22,8
  80fe90:	21804336 	bltu	r4,r6,80ffa0 <_realloc_r+0x508>
  80fe94:	008004c4 	movi	r2,19
  80fe98:	11803f2e 	bgeu	r2,r6,80ff98 <_realloc_r+0x500>
  80fe9c:	a8800017 	ldw	r2,0(r21)
  80fea0:	b0800215 	stw	r2,8(r22)
  80fea4:	a8800117 	ldw	r2,4(r21)
  80fea8:	b0800315 	stw	r2,12(r22)
  80feac:	008006c4 	movi	r2,27
  80feb0:	11803f36 	bltu	r2,r6,80ffb0 <_realloc_r+0x518>
  80feb4:	b0800404 	addi	r2,r22,16
  80feb8:	ad400204 	addi	r21,r21,8
  80febc:	a8c00017 	ldw	r3,0(r21)
  80fec0:	10c00015 	stw	r3,0(r2)
  80fec4:	a8c00117 	ldw	r3,4(r21)
  80fec8:	10c00115 	stw	r3,4(r2)
  80fecc:	a8c00217 	ldw	r3,8(r21)
  80fed0:	10c00215 	stw	r3,8(r2)
  80fed4:	b447883a 	add	r3,r22,r17
  80fed8:	bc45c83a 	sub	r2,r23,r17
  80fedc:	e0c00215 	stw	r3,8(fp)
  80fee0:	10800054 	ori	r2,r2,1
  80fee4:	18800115 	stw	r2,4(r3)
  80fee8:	b0800117 	ldw	r2,4(r22)
  80feec:	a009883a 	mov	r4,r20
  80fef0:	1080004c 	andi	r2,r2,1
  80fef4:	1462b03a 	or	r17,r2,r17
  80fef8:	b4400115 	stw	r17,4(r22)
  80fefc:	08134440 	call	813444 <__malloc_unlock>
  80ff00:	9005883a 	mov	r2,r18
  80ff04:	003f4006 	br	80fc08 <__alt_data_end+0xff80fc08>
  80ff08:	a8c00217 	ldw	r3,8(r21)
  80ff0c:	90c00215 	stw	r3,8(r18)
  80ff10:	a8c00317 	ldw	r3,12(r21)
  80ff14:	90c00315 	stw	r3,12(r18)
  80ff18:	30801126 	beq	r6,r2,80ff60 <_realloc_r+0x4c8>
  80ff1c:	90800404 	addi	r2,r18,16
  80ff20:	a8c00404 	addi	r3,r21,16
  80ff24:	003f1906 	br	80fb8c <__alt_data_end+0xff80fb8c>
  80ff28:	90ffff17 	ldw	r3,-4(r18)
  80ff2c:	00bfff04 	movi	r2,-4
  80ff30:	a825883a 	mov	r18,r21
  80ff34:	1884703a 	and	r2,r3,r2
  80ff38:	80a1883a 	add	r16,r16,r2
  80ff3c:	003f2406 	br	80fbd0 <__alt_data_end+0xff80fbd0>
  80ff40:	a8800217 	ldw	r2,8(r21)
  80ff44:	b0800415 	stw	r2,16(r22)
  80ff48:	a8800317 	ldw	r2,12(r21)
  80ff4c:	b0800515 	stw	r2,20(r22)
  80ff50:	31000a26 	beq	r6,r4,80ff7c <_realloc_r+0x4e4>
  80ff54:	b0800604 	addi	r2,r22,24
  80ff58:	ad400404 	addi	r21,r21,16
  80ff5c:	003fa906 	br	80fe04 <__alt_data_end+0xff80fe04>
  80ff60:	a9000417 	ldw	r4,16(r21)
  80ff64:	90800604 	addi	r2,r18,24
  80ff68:	a8c00604 	addi	r3,r21,24
  80ff6c:	91000415 	stw	r4,16(r18)
  80ff70:	a9000517 	ldw	r4,20(r21)
  80ff74:	91000515 	stw	r4,20(r18)
  80ff78:	003f0406 	br	80fb8c <__alt_data_end+0xff80fb8c>
  80ff7c:	a8c00417 	ldw	r3,16(r21)
  80ff80:	ad400604 	addi	r21,r21,24
  80ff84:	b0800804 	addi	r2,r22,32
  80ff88:	b0c00615 	stw	r3,24(r22)
  80ff8c:	a8ffff17 	ldw	r3,-4(r21)
  80ff90:	b0c00715 	stw	r3,28(r22)
  80ff94:	003f9b06 	br	80fe04 <__alt_data_end+0xff80fe04>
  80ff98:	9005883a 	mov	r2,r18
  80ff9c:	003fc706 	br	80febc <__alt_data_end+0xff80febc>
  80ffa0:	a80b883a 	mov	r5,r21
  80ffa4:	9009883a 	mov	r4,r18
  80ffa8:	080e8180 	call	80e818 <memmove>
  80ffac:	003fc906 	br	80fed4 <__alt_data_end+0xff80fed4>
  80ffb0:	a8800217 	ldw	r2,8(r21)
  80ffb4:	b0800415 	stw	r2,16(r22)
  80ffb8:	a8800317 	ldw	r2,12(r21)
  80ffbc:	b0800515 	stw	r2,20(r22)
  80ffc0:	31000726 	beq	r6,r4,80ffe0 <_realloc_r+0x548>
  80ffc4:	b0800604 	addi	r2,r22,24
  80ffc8:	ad400404 	addi	r21,r21,16
  80ffcc:	003fbb06 	br	80febc <__alt_data_end+0xff80febc>
  80ffd0:	a009883a 	mov	r4,r20
  80ffd4:	08134440 	call	813444 <__malloc_unlock>
  80ffd8:	0005883a 	mov	r2,zero
  80ffdc:	003f0a06 	br	80fc08 <__alt_data_end+0xff80fc08>
  80ffe0:	a8c00417 	ldw	r3,16(r21)
  80ffe4:	ad400604 	addi	r21,r21,24
  80ffe8:	b0800804 	addi	r2,r22,32
  80ffec:	b0c00615 	stw	r3,24(r22)
  80fff0:	a8ffff17 	ldw	r3,-4(r21)
  80fff4:	b0c00715 	stw	r3,28(r22)
  80fff8:	003fb006 	br	80febc <__alt_data_end+0xff80febc>

0080fffc <__fpclassifyd>:
  80fffc:	00a00034 	movhi	r2,32768
  810000:	10bfffc4 	addi	r2,r2,-1
  810004:	2884703a 	and	r2,r5,r2
  810008:	10000726 	beq	r2,zero,810028 <__fpclassifyd+0x2c>
  81000c:	00fffc34 	movhi	r3,65520
  810010:	019ff834 	movhi	r6,32736
  810014:	28c7883a 	add	r3,r5,r3
  810018:	31bfffc4 	addi	r6,r6,-1
  81001c:	30c00536 	bltu	r6,r3,810034 <__fpclassifyd+0x38>
  810020:	00800104 	movi	r2,4
  810024:	f800283a 	ret
  810028:	2000021e 	bne	r4,zero,810034 <__fpclassifyd+0x38>
  81002c:	00800084 	movi	r2,2
  810030:	f800283a 	ret
  810034:	00dffc34 	movhi	r3,32752
  810038:	019ff834 	movhi	r6,32736
  81003c:	28cb883a 	add	r5,r5,r3
  810040:	31bfffc4 	addi	r6,r6,-1
  810044:	317ff62e 	bgeu	r6,r5,810020 <__alt_data_end+0xff810020>
  810048:	01400434 	movhi	r5,16
  81004c:	297fffc4 	addi	r5,r5,-1
  810050:	28800236 	bltu	r5,r2,81005c <__fpclassifyd+0x60>
  810054:	008000c4 	movi	r2,3
  810058:	f800283a 	ret
  81005c:	10c00226 	beq	r2,r3,810068 <__fpclassifyd+0x6c>
  810060:	0005883a 	mov	r2,zero
  810064:	f800283a 	ret
  810068:	2005003a 	cmpeq	r2,r4,zero
  81006c:	f800283a 	ret

00810070 <_sbrk_r>:
  810070:	defffd04 	addi	sp,sp,-12
  810074:	dc000015 	stw	r16,0(sp)
  810078:	040020b4 	movhi	r16,130
  81007c:	dc400115 	stw	r17,4(sp)
  810080:	8424c904 	addi	r16,r16,-27868
  810084:	2023883a 	mov	r17,r4
  810088:	2809883a 	mov	r4,r5
  81008c:	dfc00215 	stw	ra,8(sp)
  810090:	80000015 	stw	zero,0(r16)
  810094:	08136400 	call	813640 <sbrk>
  810098:	00ffffc4 	movi	r3,-1
  81009c:	10c00526 	beq	r2,r3,8100b4 <_sbrk_r+0x44>
  8100a0:	dfc00217 	ldw	ra,8(sp)
  8100a4:	dc400117 	ldw	r17,4(sp)
  8100a8:	dc000017 	ldw	r16,0(sp)
  8100ac:	dec00304 	addi	sp,sp,12
  8100b0:	f800283a 	ret
  8100b4:	80c00017 	ldw	r3,0(r16)
  8100b8:	183ff926 	beq	r3,zero,8100a0 <__alt_data_end+0xff8100a0>
  8100bc:	88c00015 	stw	r3,0(r17)
  8100c0:	003ff706 	br	8100a0 <__alt_data_end+0xff8100a0>

008100c4 <__sread>:
  8100c4:	defffe04 	addi	sp,sp,-8
  8100c8:	dc000015 	stw	r16,0(sp)
  8100cc:	2821883a 	mov	r16,r5
  8100d0:	2940038f 	ldh	r5,14(r5)
  8100d4:	dfc00115 	stw	ra,4(sp)
  8100d8:	0811eb80 	call	811eb8 <_read_r>
  8100dc:	10000716 	blt	r2,zero,8100fc <__sread+0x38>
  8100e0:	80c01417 	ldw	r3,80(r16)
  8100e4:	1887883a 	add	r3,r3,r2
  8100e8:	80c01415 	stw	r3,80(r16)
  8100ec:	dfc00117 	ldw	ra,4(sp)
  8100f0:	dc000017 	ldw	r16,0(sp)
  8100f4:	dec00204 	addi	sp,sp,8
  8100f8:	f800283a 	ret
  8100fc:	80c0030b 	ldhu	r3,12(r16)
  810100:	18fbffcc 	andi	r3,r3,61439
  810104:	80c0030d 	sth	r3,12(r16)
  810108:	dfc00117 	ldw	ra,4(sp)
  81010c:	dc000017 	ldw	r16,0(sp)
  810110:	dec00204 	addi	sp,sp,8
  810114:	f800283a 	ret

00810118 <__seofread>:
  810118:	0005883a 	mov	r2,zero
  81011c:	f800283a 	ret

00810120 <__swrite>:
  810120:	2880030b 	ldhu	r2,12(r5)
  810124:	defffb04 	addi	sp,sp,-20
  810128:	dcc00315 	stw	r19,12(sp)
  81012c:	dc800215 	stw	r18,8(sp)
  810130:	dc400115 	stw	r17,4(sp)
  810134:	dc000015 	stw	r16,0(sp)
  810138:	dfc00415 	stw	ra,16(sp)
  81013c:	10c0400c 	andi	r3,r2,256
  810140:	2821883a 	mov	r16,r5
  810144:	2023883a 	mov	r17,r4
  810148:	3025883a 	mov	r18,r6
  81014c:	3827883a 	mov	r19,r7
  810150:	18000526 	beq	r3,zero,810168 <__swrite+0x48>
  810154:	2940038f 	ldh	r5,14(r5)
  810158:	01c00084 	movi	r7,2
  81015c:	000d883a 	mov	r6,zero
  810160:	0811e580 	call	811e58 <_lseek_r>
  810164:	8080030b 	ldhu	r2,12(r16)
  810168:	8140038f 	ldh	r5,14(r16)
  81016c:	10bbffcc 	andi	r2,r2,61439
  810170:	980f883a 	mov	r7,r19
  810174:	900d883a 	mov	r6,r18
  810178:	8809883a 	mov	r4,r17
  81017c:	8080030d 	sth	r2,12(r16)
  810180:	dfc00417 	ldw	ra,16(sp)
  810184:	dcc00317 	ldw	r19,12(sp)
  810188:	dc800217 	ldw	r18,8(sp)
  81018c:	dc400117 	ldw	r17,4(sp)
  810190:	dc000017 	ldw	r16,0(sp)
  810194:	dec00504 	addi	sp,sp,20
  810198:	08119241 	jmpi	811924 <_write_r>

0081019c <__sseek>:
  81019c:	defffe04 	addi	sp,sp,-8
  8101a0:	dc000015 	stw	r16,0(sp)
  8101a4:	2821883a 	mov	r16,r5
  8101a8:	2940038f 	ldh	r5,14(r5)
  8101ac:	dfc00115 	stw	ra,4(sp)
  8101b0:	0811e580 	call	811e58 <_lseek_r>
  8101b4:	00ffffc4 	movi	r3,-1
  8101b8:	10c00826 	beq	r2,r3,8101dc <__sseek+0x40>
  8101bc:	80c0030b 	ldhu	r3,12(r16)
  8101c0:	80801415 	stw	r2,80(r16)
  8101c4:	18c40014 	ori	r3,r3,4096
  8101c8:	80c0030d 	sth	r3,12(r16)
  8101cc:	dfc00117 	ldw	ra,4(sp)
  8101d0:	dc000017 	ldw	r16,0(sp)
  8101d4:	dec00204 	addi	sp,sp,8
  8101d8:	f800283a 	ret
  8101dc:	80c0030b 	ldhu	r3,12(r16)
  8101e0:	18fbffcc 	andi	r3,r3,61439
  8101e4:	80c0030d 	sth	r3,12(r16)
  8101e8:	dfc00117 	ldw	ra,4(sp)
  8101ec:	dc000017 	ldw	r16,0(sp)
  8101f0:	dec00204 	addi	sp,sp,8
  8101f4:	f800283a 	ret

008101f8 <__sclose>:
  8101f8:	2940038f 	ldh	r5,14(r5)
  8101fc:	08119841 	jmpi	811984 <_close_r>

00810200 <strcmp>:
  810200:	2144b03a 	or	r2,r4,r5
  810204:	108000cc 	andi	r2,r2,3
  810208:	1000171e 	bne	r2,zero,810268 <strcmp+0x68>
  81020c:	20800017 	ldw	r2,0(r4)
  810210:	28c00017 	ldw	r3,0(r5)
  810214:	10c0141e 	bne	r2,r3,810268 <strcmp+0x68>
  810218:	027fbff4 	movhi	r9,65279
  81021c:	4a7fbfc4 	addi	r9,r9,-257
  810220:	0086303a 	nor	r3,zero,r2
  810224:	02202074 	movhi	r8,32897
  810228:	1245883a 	add	r2,r2,r9
  81022c:	42202004 	addi	r8,r8,-32640
  810230:	10c4703a 	and	r2,r2,r3
  810234:	1204703a 	and	r2,r2,r8
  810238:	10000226 	beq	r2,zero,810244 <strcmp+0x44>
  81023c:	00002306 	br	8102cc <strcmp+0xcc>
  810240:	1000221e 	bne	r2,zero,8102cc <strcmp+0xcc>
  810244:	21000104 	addi	r4,r4,4
  810248:	20c00017 	ldw	r3,0(r4)
  81024c:	29400104 	addi	r5,r5,4
  810250:	29800017 	ldw	r6,0(r5)
  810254:	1a4f883a 	add	r7,r3,r9
  810258:	00c4303a 	nor	r2,zero,r3
  81025c:	3884703a 	and	r2,r7,r2
  810260:	1204703a 	and	r2,r2,r8
  810264:	19bff626 	beq	r3,r6,810240 <__alt_data_end+0xff810240>
  810268:	20800003 	ldbu	r2,0(r4)
  81026c:	10c03fcc 	andi	r3,r2,255
  810270:	18c0201c 	xori	r3,r3,128
  810274:	18ffe004 	addi	r3,r3,-128
  810278:	18000c26 	beq	r3,zero,8102ac <strcmp+0xac>
  81027c:	29800007 	ldb	r6,0(r5)
  810280:	19800326 	beq	r3,r6,810290 <strcmp+0x90>
  810284:	00001306 	br	8102d4 <strcmp+0xd4>
  810288:	29800007 	ldb	r6,0(r5)
  81028c:	11800b1e 	bne	r2,r6,8102bc <strcmp+0xbc>
  810290:	21000044 	addi	r4,r4,1
  810294:	20c00003 	ldbu	r3,0(r4)
  810298:	29400044 	addi	r5,r5,1
  81029c:	18803fcc 	andi	r2,r3,255
  8102a0:	1080201c 	xori	r2,r2,128
  8102a4:	10bfe004 	addi	r2,r2,-128
  8102a8:	103ff71e 	bne	r2,zero,810288 <__alt_data_end+0xff810288>
  8102ac:	0007883a 	mov	r3,zero
  8102b0:	28800003 	ldbu	r2,0(r5)
  8102b4:	1885c83a 	sub	r2,r3,r2
  8102b8:	f800283a 	ret
  8102bc:	28800003 	ldbu	r2,0(r5)
  8102c0:	18c03fcc 	andi	r3,r3,255
  8102c4:	1885c83a 	sub	r2,r3,r2
  8102c8:	f800283a 	ret
  8102cc:	0005883a 	mov	r2,zero
  8102d0:	f800283a 	ret
  8102d4:	10c03fcc 	andi	r3,r2,255
  8102d8:	003ff506 	br	8102b0 <__alt_data_end+0xff8102b0>

008102dc <__sprint_r.part.0>:
  8102dc:	28801917 	ldw	r2,100(r5)
  8102e0:	defff604 	addi	sp,sp,-40
  8102e4:	dd400515 	stw	r21,20(sp)
  8102e8:	dfc00915 	stw	ra,36(sp)
  8102ec:	df000815 	stw	fp,32(sp)
  8102f0:	ddc00715 	stw	r23,28(sp)
  8102f4:	dd800615 	stw	r22,24(sp)
  8102f8:	dd000415 	stw	r20,16(sp)
  8102fc:	dcc00315 	stw	r19,12(sp)
  810300:	dc800215 	stw	r18,8(sp)
  810304:	dc400115 	stw	r17,4(sp)
  810308:	dc000015 	stw	r16,0(sp)
  81030c:	1088000c 	andi	r2,r2,8192
  810310:	302b883a 	mov	r21,r6
  810314:	10002e26 	beq	r2,zero,8103d0 <__sprint_r.part.0+0xf4>
  810318:	30800217 	ldw	r2,8(r6)
  81031c:	35800017 	ldw	r22,0(r6)
  810320:	10002926 	beq	r2,zero,8103c8 <__sprint_r.part.0+0xec>
  810324:	2827883a 	mov	r19,r5
  810328:	2029883a 	mov	r20,r4
  81032c:	b5c00104 	addi	r23,r22,4
  810330:	04bfffc4 	movi	r18,-1
  810334:	bc400017 	ldw	r17,0(r23)
  810338:	b4000017 	ldw	r16,0(r22)
  81033c:	0039883a 	mov	fp,zero
  810340:	8822d0ba 	srli	r17,r17,2
  810344:	8800031e 	bne	r17,zero,810354 <__sprint_r.part.0+0x78>
  810348:	00001806 	br	8103ac <__sprint_r.part.0+0xd0>
  81034c:	84000104 	addi	r16,r16,4
  810350:	8f001526 	beq	r17,fp,8103a8 <__sprint_r.part.0+0xcc>
  810354:	81400017 	ldw	r5,0(r16)
  810358:	980d883a 	mov	r6,r19
  81035c:	a009883a 	mov	r4,r20
  810360:	0811d040 	call	811d04 <_fputwc_r>
  810364:	e7000044 	addi	fp,fp,1
  810368:	14bff81e 	bne	r2,r18,81034c <__alt_data_end+0xff81034c>
  81036c:	9005883a 	mov	r2,r18
  810370:	a8000215 	stw	zero,8(r21)
  810374:	a8000115 	stw	zero,4(r21)
  810378:	dfc00917 	ldw	ra,36(sp)
  81037c:	df000817 	ldw	fp,32(sp)
  810380:	ddc00717 	ldw	r23,28(sp)
  810384:	dd800617 	ldw	r22,24(sp)
  810388:	dd400517 	ldw	r21,20(sp)
  81038c:	dd000417 	ldw	r20,16(sp)
  810390:	dcc00317 	ldw	r19,12(sp)
  810394:	dc800217 	ldw	r18,8(sp)
  810398:	dc400117 	ldw	r17,4(sp)
  81039c:	dc000017 	ldw	r16,0(sp)
  8103a0:	dec00a04 	addi	sp,sp,40
  8103a4:	f800283a 	ret
  8103a8:	a8800217 	ldw	r2,8(r21)
  8103ac:	8c63883a 	add	r17,r17,r17
  8103b0:	8c63883a 	add	r17,r17,r17
  8103b4:	1445c83a 	sub	r2,r2,r17
  8103b8:	a8800215 	stw	r2,8(r21)
  8103bc:	b5800204 	addi	r22,r22,8
  8103c0:	bdc00204 	addi	r23,r23,8
  8103c4:	103fdb1e 	bne	r2,zero,810334 <__alt_data_end+0xff810334>
  8103c8:	0005883a 	mov	r2,zero
  8103cc:	003fe806 	br	810370 <__alt_data_end+0xff810370>
  8103d0:	080d5040 	call	80d504 <__sfvwrite_r>
  8103d4:	003fe606 	br	810370 <__alt_data_end+0xff810370>

008103d8 <__sprint_r>:
  8103d8:	30c00217 	ldw	r3,8(r6)
  8103dc:	18000126 	beq	r3,zero,8103e4 <__sprint_r+0xc>
  8103e0:	08102dc1 	jmpi	8102dc <__sprint_r.part.0>
  8103e4:	30000115 	stw	zero,4(r6)
  8103e8:	0005883a 	mov	r2,zero
  8103ec:	f800283a 	ret

008103f0 <___vfiprintf_internal_r>:
  8103f0:	deffc904 	addi	sp,sp,-220
  8103f4:	df003515 	stw	fp,212(sp)
  8103f8:	dd003115 	stw	r20,196(sp)
  8103fc:	dfc03615 	stw	ra,216(sp)
  810400:	ddc03415 	stw	r23,208(sp)
  810404:	dd803315 	stw	r22,204(sp)
  810408:	dd403215 	stw	r21,200(sp)
  81040c:	dcc03015 	stw	r19,192(sp)
  810410:	dc802f15 	stw	r18,188(sp)
  810414:	dc402e15 	stw	r17,184(sp)
  810418:	dc002d15 	stw	r16,180(sp)
  81041c:	d9002015 	stw	r4,128(sp)
  810420:	d9c02215 	stw	r7,136(sp)
  810424:	2829883a 	mov	r20,r5
  810428:	3039883a 	mov	fp,r6
  81042c:	20000226 	beq	r4,zero,810438 <___vfiprintf_internal_r+0x48>
  810430:	20800e17 	ldw	r2,56(r4)
  810434:	1000cf26 	beq	r2,zero,810774 <___vfiprintf_internal_r+0x384>
  810438:	a080030b 	ldhu	r2,12(r20)
  81043c:	10c8000c 	andi	r3,r2,8192
  810440:	1800061e 	bne	r3,zero,81045c <___vfiprintf_internal_r+0x6c>
  810444:	a1001917 	ldw	r4,100(r20)
  810448:	00f7ffc4 	movi	r3,-8193
  81044c:	10880014 	ori	r2,r2,8192
  810450:	20c6703a 	and	r3,r4,r3
  810454:	a080030d 	sth	r2,12(r20)
  810458:	a0c01915 	stw	r3,100(r20)
  81045c:	10c0020c 	andi	r3,r2,8
  810460:	1800a926 	beq	r3,zero,810708 <___vfiprintf_internal_r+0x318>
  810464:	a0c00417 	ldw	r3,16(r20)
  810468:	1800a726 	beq	r3,zero,810708 <___vfiprintf_internal_r+0x318>
  81046c:	1080068c 	andi	r2,r2,26
  810470:	00c00284 	movi	r3,10
  810474:	10c0ac26 	beq	r2,r3,810728 <___vfiprintf_internal_r+0x338>
  810478:	da801a04 	addi	r10,sp,104
  81047c:	da801e15 	stw	r10,120(sp)
  810480:	d8801e17 	ldw	r2,120(sp)
  810484:	da8019c4 	addi	r10,sp,103
  810488:	05802074 	movhi	r22,129
  81048c:	05c02074 	movhi	r23,129
  810490:	da801f15 	stw	r10,124(sp)
  810494:	1295c83a 	sub	r10,r2,r10
  810498:	b5973a04 	addi	r22,r22,23784
  81049c:	bdd73604 	addi	r23,r23,23768
  8104a0:	dec01a15 	stw	sp,104(sp)
  8104a4:	d8001c15 	stw	zero,112(sp)
  8104a8:	d8001b15 	stw	zero,108(sp)
  8104ac:	d8002615 	stw	zero,152(sp)
  8104b0:	d8002315 	stw	zero,140(sp)
  8104b4:	da802715 	stw	r10,156(sp)
  8104b8:	d811883a 	mov	r8,sp
  8104bc:	dd002115 	stw	r20,132(sp)
  8104c0:	e021883a 	mov	r16,fp
  8104c4:	80800007 	ldb	r2,0(r16)
  8104c8:	1003ea26 	beq	r2,zero,811474 <___vfiprintf_internal_r+0x1084>
  8104cc:	00c00944 	movi	r3,37
  8104d0:	8025883a 	mov	r18,r16
  8104d4:	10c0021e 	bne	r2,r3,8104e0 <___vfiprintf_internal_r+0xf0>
  8104d8:	00001606 	br	810534 <___vfiprintf_internal_r+0x144>
  8104dc:	10c00326 	beq	r2,r3,8104ec <___vfiprintf_internal_r+0xfc>
  8104e0:	94800044 	addi	r18,r18,1
  8104e4:	90800007 	ldb	r2,0(r18)
  8104e8:	103ffc1e 	bne	r2,zero,8104dc <__alt_data_end+0xff8104dc>
  8104ec:	9423c83a 	sub	r17,r18,r16
  8104f0:	88001026 	beq	r17,zero,810534 <___vfiprintf_internal_r+0x144>
  8104f4:	d8c01c17 	ldw	r3,112(sp)
  8104f8:	d8801b17 	ldw	r2,108(sp)
  8104fc:	44000015 	stw	r16,0(r8)
  810500:	88c7883a 	add	r3,r17,r3
  810504:	10800044 	addi	r2,r2,1
  810508:	44400115 	stw	r17,4(r8)
  81050c:	d8c01c15 	stw	r3,112(sp)
  810510:	d8801b15 	stw	r2,108(sp)
  810514:	010001c4 	movi	r4,7
  810518:	2080760e 	bge	r4,r2,8106f4 <___vfiprintf_internal_r+0x304>
  81051c:	1803821e 	bne	r3,zero,811328 <___vfiprintf_internal_r+0xf38>
  810520:	da802317 	ldw	r10,140(sp)
  810524:	d8001b15 	stw	zero,108(sp)
  810528:	d811883a 	mov	r8,sp
  81052c:	5455883a 	add	r10,r10,r17
  810530:	da802315 	stw	r10,140(sp)
  810534:	90800007 	ldb	r2,0(r18)
  810538:	10044626 	beq	r2,zero,811654 <___vfiprintf_internal_r+0x1264>
  81053c:	90c00047 	ldb	r3,1(r18)
  810540:	94000044 	addi	r16,r18,1
  810544:	d8001d85 	stb	zero,118(sp)
  810548:	0009883a 	mov	r4,zero
  81054c:	000f883a 	mov	r7,zero
  810550:	027fffc4 	movi	r9,-1
  810554:	0023883a 	mov	r17,zero
  810558:	0029883a 	mov	r20,zero
  81055c:	01401604 	movi	r5,88
  810560:	01800244 	movi	r6,9
  810564:	03400a84 	movi	r13,42
  810568:	03001b04 	movi	r12,108
  81056c:	84000044 	addi	r16,r16,1
  810570:	18bff804 	addi	r2,r3,-32
  810574:	28827336 	bltu	r5,r2,810f44 <___vfiprintf_internal_r+0xb54>
  810578:	100490ba 	slli	r2,r2,2
  81057c:	02802074 	movhi	r10,129
  810580:	52816404 	addi	r10,r10,1424
  810584:	1285883a 	add	r2,r2,r10
  810588:	10800017 	ldw	r2,0(r2)
  81058c:	1000683a 	jmp	r2
  810590:	00810c78 	rdprs	r2,zero,1073
  810594:	00810f44 	movi	r2,1085
  810598:	00810f44 	movi	r2,1085
  81059c:	00810c98 	cmpnei	r2,zero,1074
  8105a0:	00810f44 	movi	r2,1085
  8105a4:	00810f44 	movi	r2,1085
  8105a8:	00810f44 	movi	r2,1085
  8105ac:	00810f44 	movi	r2,1085
  8105b0:	00810f44 	movi	r2,1085
  8105b4:	00810f44 	movi	r2,1085
  8105b8:	00810e80 	call	810e8 <__alt_mem_sdram-0x77ef18>
  8105bc:	00810e9c 	xori	r2,zero,1082
  8105c0:	00810f44 	movi	r2,1085
  8105c4:	00810784 	movi	r2,1054
  8105c8:	00810eac 	andhi	r2,zero,1082
  8105cc:	00810f44 	movi	r2,1085
  8105d0:	00810ca4 	muli	r2,zero,1074
  8105d4:	00810cb0 	cmpltui	r2,zero,1074
  8105d8:	00810cb0 	cmpltui	r2,zero,1074
  8105dc:	00810cb0 	cmpltui	r2,zero,1074
  8105e0:	00810cb0 	cmpltui	r2,zero,1074
  8105e4:	00810cb0 	cmpltui	r2,zero,1074
  8105e8:	00810cb0 	cmpltui	r2,zero,1074
  8105ec:	00810cb0 	cmpltui	r2,zero,1074
  8105f0:	00810cb0 	cmpltui	r2,zero,1074
  8105f4:	00810cb0 	cmpltui	r2,zero,1074
  8105f8:	00810f44 	movi	r2,1085
  8105fc:	00810f44 	movi	r2,1085
  810600:	00810f44 	movi	r2,1085
  810604:	00810f44 	movi	r2,1085
  810608:	00810f44 	movi	r2,1085
  81060c:	00810f44 	movi	r2,1085
  810610:	00810f44 	movi	r2,1085
  810614:	00810f44 	movi	r2,1085
  810618:	00810f44 	movi	r2,1085
  81061c:	00810f44 	movi	r2,1085
  810620:	00810cdc 	xori	r2,zero,1075
  810624:	00810f44 	movi	r2,1085
  810628:	00810f44 	movi	r2,1085
  81062c:	00810f44 	movi	r2,1085
  810630:	00810f44 	movi	r2,1085
  810634:	00810f44 	movi	r2,1085
  810638:	00810f44 	movi	r2,1085
  81063c:	00810f44 	movi	r2,1085
  810640:	00810f44 	movi	r2,1085
  810644:	00810f44 	movi	r2,1085
  810648:	00810f44 	movi	r2,1085
  81064c:	00810d14 	movui	r2,1076
  810650:	00810f44 	movi	r2,1085
  810654:	00810f44 	movi	r2,1085
  810658:	00810f44 	movi	r2,1085
  81065c:	00810f44 	movi	r2,1085
  810660:	00810f44 	movi	r2,1085
  810664:	00810d6c 	andhi	r2,zero,1077
  810668:	00810f44 	movi	r2,1085
  81066c:	00810f44 	movi	r2,1085
  810670:	00810ddc 	xori	r2,zero,1079
  810674:	00810f44 	movi	r2,1085
  810678:	00810f44 	movi	r2,1085
  81067c:	00810f44 	movi	r2,1085
  810680:	00810f44 	movi	r2,1085
  810684:	00810f44 	movi	r2,1085
  810688:	00810f44 	movi	r2,1085
  81068c:	00810f44 	movi	r2,1085
  810690:	00810f44 	movi	r2,1085
  810694:	00810f44 	movi	r2,1085
  810698:	00810f44 	movi	r2,1085
  81069c:	00810b88 	cmpgei	r2,zero,1070
  8106a0:	00810bb4 	movhi	r2,1070
  8106a4:	00810f44 	movi	r2,1085
  8106a8:	00810f44 	movi	r2,1085
  8106ac:	00810f44 	movi	r2,1085
  8106b0:	00810eec 	andhi	r2,zero,1083
  8106b4:	00810bb4 	movhi	r2,1070
  8106b8:	00810f44 	movi	r2,1085
  8106bc:	00810f44 	movi	r2,1085
  8106c0:	00810a48 	cmpgei	r2,zero,1065
  8106c4:	00810f44 	movi	r2,1085
  8106c8:	00810a58 	cmpnei	r2,zero,1065
  8106cc:	00810a94 	movui	r2,1066
  8106d0:	00810790 	cmplti	r2,zero,1054
  8106d4:	00810a3c 	xorhi	r2,zero,1064
  8106d8:	00810f44 	movi	r2,1085
  8106dc:	00810e18 	cmpnei	r2,zero,1080
  8106e0:	00810f44 	movi	r2,1085
  8106e4:	00810e70 	cmpltui	r2,zero,1081
  8106e8:	00810f44 	movi	r2,1085
  8106ec:	00810f44 	movi	r2,1085
  8106f0:	00810b34 	movhi	r2,1068
  8106f4:	42000204 	addi	r8,r8,8
  8106f8:	da802317 	ldw	r10,140(sp)
  8106fc:	5455883a 	add	r10,r10,r17
  810700:	da802315 	stw	r10,140(sp)
  810704:	003f8b06 	br	810534 <__alt_data_end+0xff810534>
  810708:	d9002017 	ldw	r4,128(sp)
  81070c:	a00b883a 	mov	r5,r20
  810710:	080b0ac0 	call	80b0ac <__swsetup_r>
  810714:	1003b11e 	bne	r2,zero,8115dc <___vfiprintf_internal_r+0x11ec>
  810718:	a080030b 	ldhu	r2,12(r20)
  81071c:	00c00284 	movi	r3,10
  810720:	1080068c 	andi	r2,r2,26
  810724:	10ff541e 	bne	r2,r3,810478 <__alt_data_end+0xff810478>
  810728:	a080038f 	ldh	r2,14(r20)
  81072c:	103f5216 	blt	r2,zero,810478 <__alt_data_end+0xff810478>
  810730:	d9c02217 	ldw	r7,136(sp)
  810734:	d9002017 	ldw	r4,128(sp)
  810738:	e00d883a 	mov	r6,fp
  81073c:	a00b883a 	mov	r5,r20
  810740:	08118680 	call	811868 <__sbprintf>
  810744:	dfc03617 	ldw	ra,216(sp)
  810748:	df003517 	ldw	fp,212(sp)
  81074c:	ddc03417 	ldw	r23,208(sp)
  810750:	dd803317 	ldw	r22,204(sp)
  810754:	dd403217 	ldw	r21,200(sp)
  810758:	dd003117 	ldw	r20,196(sp)
  81075c:	dcc03017 	ldw	r19,192(sp)
  810760:	dc802f17 	ldw	r18,188(sp)
  810764:	dc402e17 	ldw	r17,184(sp)
  810768:	dc002d17 	ldw	r16,180(sp)
  81076c:	dec03704 	addi	sp,sp,220
  810770:	f800283a 	ret
  810774:	080d0800 	call	80d080 <__sinit>
  810778:	003f2f06 	br	810438 <__alt_data_end+0xff810438>
  81077c:	0463c83a 	sub	r17,zero,r17
  810780:	d8802215 	stw	r2,136(sp)
  810784:	a5000114 	ori	r20,r20,4
  810788:	80c00007 	ldb	r3,0(r16)
  81078c:	003f7706 	br	81056c <__alt_data_end+0xff81056c>
  810790:	00800c04 	movi	r2,48
  810794:	da802217 	ldw	r10,136(sp)
  810798:	d8801d05 	stb	r2,116(sp)
  81079c:	00801e04 	movi	r2,120
  8107a0:	d8801d45 	stb	r2,117(sp)
  8107a4:	d8001d85 	stb	zero,118(sp)
  8107a8:	50c00104 	addi	r3,r10,4
  8107ac:	54800017 	ldw	r18,0(r10)
  8107b0:	0027883a 	mov	r19,zero
  8107b4:	a0800094 	ori	r2,r20,2
  8107b8:	48030b16 	blt	r9,zero,8113e8 <___vfiprintf_internal_r+0xff8>
  8107bc:	00bfdfc4 	movi	r2,-129
  8107c0:	a096703a 	and	r11,r20,r2
  8107c4:	d8c02215 	stw	r3,136(sp)
  8107c8:	5d000094 	ori	r20,r11,2
  8107cc:	90032b1e 	bne	r18,zero,81147c <___vfiprintf_internal_r+0x108c>
  8107d0:	00802074 	movhi	r2,129
  8107d4:	1096d604 	addi	r2,r2,23384
  8107d8:	d8802615 	stw	r2,152(sp)
  8107dc:	0039883a 	mov	fp,zero
  8107e0:	48017b1e 	bne	r9,zero,810dd0 <___vfiprintf_internal_r+0x9e0>
  8107e4:	0013883a 	mov	r9,zero
  8107e8:	0027883a 	mov	r19,zero
  8107ec:	dd401a04 	addi	r21,sp,104
  8107f0:	4825883a 	mov	r18,r9
  8107f4:	4cc0010e 	bge	r9,r19,8107fc <___vfiprintf_internal_r+0x40c>
  8107f8:	9825883a 	mov	r18,r19
  8107fc:	e7003fcc 	andi	fp,fp,255
  810800:	e700201c 	xori	fp,fp,128
  810804:	e73fe004 	addi	fp,fp,-128
  810808:	e0000126 	beq	fp,zero,810810 <___vfiprintf_internal_r+0x420>
  81080c:	94800044 	addi	r18,r18,1
  810810:	a380008c 	andi	r14,r20,2
  810814:	70000126 	beq	r14,zero,81081c <___vfiprintf_internal_r+0x42c>
  810818:	94800084 	addi	r18,r18,2
  81081c:	a700210c 	andi	fp,r20,132
  810820:	e001df1e 	bne	fp,zero,810fa0 <___vfiprintf_internal_r+0xbb0>
  810824:	8c87c83a 	sub	r3,r17,r18
  810828:	00c1dd0e 	bge	zero,r3,810fa0 <___vfiprintf_internal_r+0xbb0>
  81082c:	01c00404 	movi	r7,16
  810830:	d8801c17 	ldw	r2,112(sp)
  810834:	38c3ad0e 	bge	r7,r3,8116ec <___vfiprintf_internal_r+0x12fc>
  810838:	02802074 	movhi	r10,129
  81083c:	52973a04 	addi	r10,r10,23784
  810840:	dc002915 	stw	r16,164(sp)
  810844:	d9801b17 	ldw	r6,108(sp)
  810848:	da802415 	stw	r10,144(sp)
  81084c:	03c001c4 	movi	r15,7
  810850:	da402515 	stw	r9,148(sp)
  810854:	db802815 	stw	r14,160(sp)
  810858:	1821883a 	mov	r16,r3
  81085c:	00000506 	br	810874 <___vfiprintf_internal_r+0x484>
  810860:	31400084 	addi	r5,r6,2
  810864:	42000204 	addi	r8,r8,8
  810868:	200d883a 	mov	r6,r4
  81086c:	843ffc04 	addi	r16,r16,-16
  810870:	3c000d0e 	bge	r7,r16,8108a8 <___vfiprintf_internal_r+0x4b8>
  810874:	10800404 	addi	r2,r2,16
  810878:	31000044 	addi	r4,r6,1
  81087c:	45800015 	stw	r22,0(r8)
  810880:	41c00115 	stw	r7,4(r8)
  810884:	d8801c15 	stw	r2,112(sp)
  810888:	d9001b15 	stw	r4,108(sp)
  81088c:	793ff40e 	bge	r15,r4,810860 <__alt_data_end+0xff810860>
  810890:	1001b51e 	bne	r2,zero,810f68 <___vfiprintf_internal_r+0xb78>
  810894:	843ffc04 	addi	r16,r16,-16
  810898:	000d883a 	mov	r6,zero
  81089c:	01400044 	movi	r5,1
  8108a0:	d811883a 	mov	r8,sp
  8108a4:	3c3ff316 	blt	r7,r16,810874 <__alt_data_end+0xff810874>
  8108a8:	8007883a 	mov	r3,r16
  8108ac:	da402517 	ldw	r9,148(sp)
  8108b0:	db802817 	ldw	r14,160(sp)
  8108b4:	dc002917 	ldw	r16,164(sp)
  8108b8:	da802417 	ldw	r10,144(sp)
  8108bc:	1885883a 	add	r2,r3,r2
  8108c0:	40c00115 	stw	r3,4(r8)
  8108c4:	42800015 	stw	r10,0(r8)
  8108c8:	d8801c15 	stw	r2,112(sp)
  8108cc:	d9401b15 	stw	r5,108(sp)
  8108d0:	00c001c4 	movi	r3,7
  8108d4:	19426016 	blt	r3,r5,811258 <___vfiprintf_internal_r+0xe68>
  8108d8:	d8c01d87 	ldb	r3,118(sp)
  8108dc:	42000204 	addi	r8,r8,8
  8108e0:	29000044 	addi	r4,r5,1
  8108e4:	1801b31e 	bne	r3,zero,810fb4 <___vfiprintf_internal_r+0xbc4>
  8108e8:	7001c026 	beq	r14,zero,810fec <___vfiprintf_internal_r+0xbfc>
  8108ec:	d8c01d04 	addi	r3,sp,116
  8108f0:	10800084 	addi	r2,r2,2
  8108f4:	40c00015 	stw	r3,0(r8)
  8108f8:	00c00084 	movi	r3,2
  8108fc:	40c00115 	stw	r3,4(r8)
  810900:	d8801c15 	stw	r2,112(sp)
  810904:	d9001b15 	stw	r4,108(sp)
  810908:	00c001c4 	movi	r3,7
  81090c:	1902650e 	bge	r3,r4,8112a4 <___vfiprintf_internal_r+0xeb4>
  810910:	10029a1e 	bne	r2,zero,81137c <___vfiprintf_internal_r+0xf8c>
  810914:	00c02004 	movi	r3,128
  810918:	01000044 	movi	r4,1
  81091c:	000b883a 	mov	r5,zero
  810920:	d811883a 	mov	r8,sp
  810924:	e0c1b31e 	bne	fp,r3,810ff4 <___vfiprintf_internal_r+0xc04>
  810928:	8cb9c83a 	sub	fp,r17,r18
  81092c:	0701b10e 	bge	zero,fp,810ff4 <___vfiprintf_internal_r+0xc04>
  810930:	01c00404 	movi	r7,16
  810934:	3f03890e 	bge	r7,fp,81175c <___vfiprintf_internal_r+0x136c>
  810938:	00c02074 	movhi	r3,129
  81093c:	18d73604 	addi	r3,r3,23768
  810940:	d8c02415 	stw	r3,144(sp)
  810944:	8007883a 	mov	r3,r16
  810948:	034001c4 	movi	r13,7
  81094c:	e021883a 	mov	r16,fp
  810950:	da402515 	stw	r9,148(sp)
  810954:	1839883a 	mov	fp,r3
  810958:	00000506 	br	810970 <___vfiprintf_internal_r+0x580>
  81095c:	29800084 	addi	r6,r5,2
  810960:	42000204 	addi	r8,r8,8
  810964:	180b883a 	mov	r5,r3
  810968:	843ffc04 	addi	r16,r16,-16
  81096c:	3c000d0e 	bge	r7,r16,8109a4 <___vfiprintf_internal_r+0x5b4>
  810970:	10800404 	addi	r2,r2,16
  810974:	28c00044 	addi	r3,r5,1
  810978:	45c00015 	stw	r23,0(r8)
  81097c:	41c00115 	stw	r7,4(r8)
  810980:	d8801c15 	stw	r2,112(sp)
  810984:	d8c01b15 	stw	r3,108(sp)
  810988:	68fff40e 	bge	r13,r3,81095c <__alt_data_end+0xff81095c>
  81098c:	1002241e 	bne	r2,zero,811220 <___vfiprintf_internal_r+0xe30>
  810990:	843ffc04 	addi	r16,r16,-16
  810994:	01800044 	movi	r6,1
  810998:	000b883a 	mov	r5,zero
  81099c:	d811883a 	mov	r8,sp
  8109a0:	3c3ff316 	blt	r7,r16,810970 <__alt_data_end+0xff810970>
  8109a4:	da402517 	ldw	r9,148(sp)
  8109a8:	e007883a 	mov	r3,fp
  8109ac:	8039883a 	mov	fp,r16
  8109b0:	1821883a 	mov	r16,r3
  8109b4:	d8c02417 	ldw	r3,144(sp)
  8109b8:	1705883a 	add	r2,r2,fp
  8109bc:	47000115 	stw	fp,4(r8)
  8109c0:	40c00015 	stw	r3,0(r8)
  8109c4:	d8801c15 	stw	r2,112(sp)
  8109c8:	d9801b15 	stw	r6,108(sp)
  8109cc:	00c001c4 	movi	r3,7
  8109d0:	19827616 	blt	r3,r6,8113ac <___vfiprintf_internal_r+0xfbc>
  8109d4:	4cf9c83a 	sub	fp,r9,r19
  8109d8:	42000204 	addi	r8,r8,8
  8109dc:	31000044 	addi	r4,r6,1
  8109e0:	300b883a 	mov	r5,r6
  8109e4:	07018516 	blt	zero,fp,810ffc <___vfiprintf_internal_r+0xc0c>
  8109e8:	9885883a 	add	r2,r19,r2
  8109ec:	45400015 	stw	r21,0(r8)
  8109f0:	44c00115 	stw	r19,4(r8)
  8109f4:	d8801c15 	stw	r2,112(sp)
  8109f8:	d9001b15 	stw	r4,108(sp)
  8109fc:	00c001c4 	movi	r3,7
  810a00:	1901dd0e 	bge	r3,r4,811178 <___vfiprintf_internal_r+0xd88>
  810a04:	1002401e 	bne	r2,zero,811308 <___vfiprintf_internal_r+0xf18>
  810a08:	d8001b15 	stw	zero,108(sp)
  810a0c:	a2c0010c 	andi	r11,r20,4
  810a10:	58000226 	beq	r11,zero,810a1c <___vfiprintf_internal_r+0x62c>
  810a14:	8ca7c83a 	sub	r19,r17,r18
  810a18:	04c2f216 	blt	zero,r19,8115e4 <___vfiprintf_internal_r+0x11f4>
  810a1c:	8c80010e 	bge	r17,r18,810a24 <___vfiprintf_internal_r+0x634>
  810a20:	9023883a 	mov	r17,r18
  810a24:	da802317 	ldw	r10,140(sp)
  810a28:	5455883a 	add	r10,r10,r17
  810a2c:	da802315 	stw	r10,140(sp)
  810a30:	d8001b15 	stw	zero,108(sp)
  810a34:	d811883a 	mov	r8,sp
  810a38:	003ea206 	br	8104c4 <__alt_data_end+0xff8104c4>
  810a3c:	a5000814 	ori	r20,r20,32
  810a40:	80c00007 	ldb	r3,0(r16)
  810a44:	003ec906 	br	81056c <__alt_data_end+0xff81056c>
  810a48:	80c00007 	ldb	r3,0(r16)
  810a4c:	1b030926 	beq	r3,r12,811674 <___vfiprintf_internal_r+0x1284>
  810a50:	a5000414 	ori	r20,r20,16
  810a54:	003ec506 	br	81056c <__alt_data_end+0xff81056c>
  810a58:	21003fcc 	andi	r4,r4,255
  810a5c:	20035e1e 	bne	r4,zero,8117d8 <___vfiprintf_internal_r+0x13e8>
  810a60:	a080080c 	andi	r2,r20,32
  810a64:	1002a526 	beq	r2,zero,8114fc <___vfiprintf_internal_r+0x110c>
  810a68:	da802217 	ldw	r10,136(sp)
  810a6c:	50800017 	ldw	r2,0(r10)
  810a70:	da802317 	ldw	r10,140(sp)
  810a74:	5007d7fa 	srai	r3,r10,31
  810a78:	da802217 	ldw	r10,136(sp)
  810a7c:	10c00115 	stw	r3,4(r2)
  810a80:	52800104 	addi	r10,r10,4
  810a84:	da802215 	stw	r10,136(sp)
  810a88:	da802317 	ldw	r10,140(sp)
  810a8c:	12800015 	stw	r10,0(r2)
  810a90:	003e8c06 	br	8104c4 <__alt_data_end+0xff8104c4>
  810a94:	21003fcc 	andi	r4,r4,255
  810a98:	2003511e 	bne	r4,zero,8117e0 <___vfiprintf_internal_r+0x13f0>
  810a9c:	a080080c 	andi	r2,r20,32
  810aa0:	1000a126 	beq	r2,zero,810d28 <___vfiprintf_internal_r+0x938>
  810aa4:	da802217 	ldw	r10,136(sp)
  810aa8:	d8001d85 	stb	zero,118(sp)
  810aac:	50800204 	addi	r2,r10,8
  810ab0:	54800017 	ldw	r18,0(r10)
  810ab4:	54c00117 	ldw	r19,4(r10)
  810ab8:	4802b416 	blt	r9,zero,81158c <___vfiprintf_internal_r+0x119c>
  810abc:	013fdfc4 	movi	r4,-129
  810ac0:	94c6b03a 	or	r3,r18,r19
  810ac4:	d8802215 	stw	r2,136(sp)
  810ac8:	a128703a 	and	r20,r20,r4
  810acc:	1800a226 	beq	r3,zero,810d58 <___vfiprintf_internal_r+0x968>
  810ad0:	0039883a 	mov	fp,zero
  810ad4:	dd401a04 	addi	r21,sp,104
  810ad8:	9006d0fa 	srli	r3,r18,3
  810adc:	9808977a 	slli	r4,r19,29
  810ae0:	9826d0fa 	srli	r19,r19,3
  810ae4:	948001cc 	andi	r18,r18,7
  810ae8:	90800c04 	addi	r2,r18,48
  810aec:	ad7fffc4 	addi	r21,r21,-1
  810af0:	20e4b03a 	or	r18,r4,r3
  810af4:	a8800005 	stb	r2,0(r21)
  810af8:	94c6b03a 	or	r3,r18,r19
  810afc:	183ff61e 	bne	r3,zero,810ad8 <__alt_data_end+0xff810ad8>
  810b00:	a0c0004c 	andi	r3,r20,1
  810b04:	18005926 	beq	r3,zero,810c6c <___vfiprintf_internal_r+0x87c>
  810b08:	10803fcc 	andi	r2,r2,255
  810b0c:	1080201c 	xori	r2,r2,128
  810b10:	10bfe004 	addi	r2,r2,-128
  810b14:	00c00c04 	movi	r3,48
  810b18:	10c05426 	beq	r2,r3,810c6c <___vfiprintf_internal_r+0x87c>
  810b1c:	da801e17 	ldw	r10,120(sp)
  810b20:	a8bfffc4 	addi	r2,r21,-1
  810b24:	a8ffffc5 	stb	r3,-1(r21)
  810b28:	50a7c83a 	sub	r19,r10,r2
  810b2c:	102b883a 	mov	r21,r2
  810b30:	003f2f06 	br	8107f0 <__alt_data_end+0xff8107f0>
  810b34:	21003fcc 	andi	r4,r4,255
  810b38:	2003421e 	bne	r4,zero,811844 <___vfiprintf_internal_r+0x1454>
  810b3c:	00802074 	movhi	r2,129
  810b40:	1096d604 	addi	r2,r2,23384
  810b44:	d8802615 	stw	r2,152(sp)
  810b48:	a080080c 	andi	r2,r20,32
  810b4c:	1000aa26 	beq	r2,zero,810df8 <___vfiprintf_internal_r+0xa08>
  810b50:	da802217 	ldw	r10,136(sp)
  810b54:	54800017 	ldw	r18,0(r10)
  810b58:	54c00117 	ldw	r19,4(r10)
  810b5c:	52800204 	addi	r10,r10,8
  810b60:	da802215 	stw	r10,136(sp)
  810b64:	a080004c 	andi	r2,r20,1
  810b68:	1001d226 	beq	r2,zero,8112b4 <___vfiprintf_internal_r+0xec4>
  810b6c:	94c4b03a 	or	r2,r18,r19
  810b70:	1002351e 	bne	r2,zero,811448 <___vfiprintf_internal_r+0x1058>
  810b74:	d8001d85 	stb	zero,118(sp)
  810b78:	48022216 	blt	r9,zero,811404 <___vfiprintf_internal_r+0x1014>
  810b7c:	00bfdfc4 	movi	r2,-129
  810b80:	a0a8703a 	and	r20,r20,r2
  810b84:	003f1506 	br	8107dc <__alt_data_end+0xff8107dc>
  810b88:	da802217 	ldw	r10,136(sp)
  810b8c:	04800044 	movi	r18,1
  810b90:	d8001d85 	stb	zero,118(sp)
  810b94:	50800017 	ldw	r2,0(r10)
  810b98:	52800104 	addi	r10,r10,4
  810b9c:	da802215 	stw	r10,136(sp)
  810ba0:	d8801005 	stb	r2,64(sp)
  810ba4:	9027883a 	mov	r19,r18
  810ba8:	dd401004 	addi	r21,sp,64
  810bac:	0013883a 	mov	r9,zero
  810bb0:	003f1706 	br	810810 <__alt_data_end+0xff810810>
  810bb4:	21003fcc 	andi	r4,r4,255
  810bb8:	2003201e 	bne	r4,zero,81183c <___vfiprintf_internal_r+0x144c>
  810bbc:	a080080c 	andi	r2,r20,32
  810bc0:	10004b26 	beq	r2,zero,810cf0 <___vfiprintf_internal_r+0x900>
  810bc4:	da802217 	ldw	r10,136(sp)
  810bc8:	50800117 	ldw	r2,4(r10)
  810bcc:	54800017 	ldw	r18,0(r10)
  810bd0:	52800204 	addi	r10,r10,8
  810bd4:	da802215 	stw	r10,136(sp)
  810bd8:	1027883a 	mov	r19,r2
  810bdc:	10022c16 	blt	r2,zero,811490 <___vfiprintf_internal_r+0x10a0>
  810be0:	df001d83 	ldbu	fp,118(sp)
  810be4:	48007216 	blt	r9,zero,810db0 <___vfiprintf_internal_r+0x9c0>
  810be8:	00ffdfc4 	movi	r3,-129
  810bec:	94c4b03a 	or	r2,r18,r19
  810bf0:	a0e8703a 	and	r20,r20,r3
  810bf4:	1000cc26 	beq	r2,zero,810f28 <___vfiprintf_internal_r+0xb38>
  810bf8:	98021026 	beq	r19,zero,81143c <___vfiprintf_internal_r+0x104c>
  810bfc:	dc402415 	stw	r17,144(sp)
  810c00:	dc002515 	stw	r16,148(sp)
  810c04:	9823883a 	mov	r17,r19
  810c08:	9021883a 	mov	r16,r18
  810c0c:	dd401a04 	addi	r21,sp,104
  810c10:	4825883a 	mov	r18,r9
  810c14:	4027883a 	mov	r19,r8
  810c18:	8009883a 	mov	r4,r16
  810c1c:	880b883a 	mov	r5,r17
  810c20:	01800284 	movi	r6,10
  810c24:	000f883a 	mov	r7,zero
  810c28:	08127d00 	call	8127d0 <__umoddi3>
  810c2c:	10800c04 	addi	r2,r2,48
  810c30:	ad7fffc4 	addi	r21,r21,-1
  810c34:	8009883a 	mov	r4,r16
  810c38:	880b883a 	mov	r5,r17
  810c3c:	a8800005 	stb	r2,0(r21)
  810c40:	01800284 	movi	r6,10
  810c44:	000f883a 	mov	r7,zero
  810c48:	08122580 	call	812258 <__udivdi3>
  810c4c:	1021883a 	mov	r16,r2
  810c50:	10c4b03a 	or	r2,r2,r3
  810c54:	1823883a 	mov	r17,r3
  810c58:	103fef1e 	bne	r2,zero,810c18 <__alt_data_end+0xff810c18>
  810c5c:	dc402417 	ldw	r17,144(sp)
  810c60:	dc002517 	ldw	r16,148(sp)
  810c64:	9013883a 	mov	r9,r18
  810c68:	9811883a 	mov	r8,r19
  810c6c:	da801e17 	ldw	r10,120(sp)
  810c70:	5567c83a 	sub	r19,r10,r21
  810c74:	003ede06 	br	8107f0 <__alt_data_end+0xff8107f0>
  810c78:	38803fcc 	andi	r2,r7,255
  810c7c:	1080201c 	xori	r2,r2,128
  810c80:	10bfe004 	addi	r2,r2,-128
  810c84:	1002371e 	bne	r2,zero,811564 <___vfiprintf_internal_r+0x1174>
  810c88:	01000044 	movi	r4,1
  810c8c:	01c00804 	movi	r7,32
  810c90:	80c00007 	ldb	r3,0(r16)
  810c94:	003e3506 	br	81056c <__alt_data_end+0xff81056c>
  810c98:	a5000054 	ori	r20,r20,1
  810c9c:	80c00007 	ldb	r3,0(r16)
  810ca0:	003e3206 	br	81056c <__alt_data_end+0xff81056c>
  810ca4:	a5002014 	ori	r20,r20,128
  810ca8:	80c00007 	ldb	r3,0(r16)
  810cac:	003e2f06 	br	81056c <__alt_data_end+0xff81056c>
  810cb0:	8015883a 	mov	r10,r16
  810cb4:	0023883a 	mov	r17,zero
  810cb8:	18bff404 	addi	r2,r3,-48
  810cbc:	50c00007 	ldb	r3,0(r10)
  810cc0:	8c4002a4 	muli	r17,r17,10
  810cc4:	84000044 	addi	r16,r16,1
  810cc8:	8015883a 	mov	r10,r16
  810ccc:	1463883a 	add	r17,r2,r17
  810cd0:	18bff404 	addi	r2,r3,-48
  810cd4:	30bff92e 	bgeu	r6,r2,810cbc <__alt_data_end+0xff810cbc>
  810cd8:	003e2506 	br	810570 <__alt_data_end+0xff810570>
  810cdc:	21003fcc 	andi	r4,r4,255
  810ce0:	2002d41e 	bne	r4,zero,811834 <___vfiprintf_internal_r+0x1444>
  810ce4:	a5000414 	ori	r20,r20,16
  810ce8:	a080080c 	andi	r2,r20,32
  810cec:	103fb51e 	bne	r2,zero,810bc4 <__alt_data_end+0xff810bc4>
  810cf0:	a080040c 	andi	r2,r20,16
  810cf4:	1001f826 	beq	r2,zero,8114d8 <___vfiprintf_internal_r+0x10e8>
  810cf8:	da802217 	ldw	r10,136(sp)
  810cfc:	54800017 	ldw	r18,0(r10)
  810d00:	52800104 	addi	r10,r10,4
  810d04:	da802215 	stw	r10,136(sp)
  810d08:	9027d7fa 	srai	r19,r18,31
  810d0c:	9805883a 	mov	r2,r19
  810d10:	003fb206 	br	810bdc <__alt_data_end+0xff810bdc>
  810d14:	21003fcc 	andi	r4,r4,255
  810d18:	2002c41e 	bne	r4,zero,81182c <___vfiprintf_internal_r+0x143c>
  810d1c:	a5000414 	ori	r20,r20,16
  810d20:	a080080c 	andi	r2,r20,32
  810d24:	103f5f1e 	bne	r2,zero,810aa4 <__alt_data_end+0xff810aa4>
  810d28:	a080040c 	andi	r2,r20,16
  810d2c:	10020f26 	beq	r2,zero,81156c <___vfiprintf_internal_r+0x117c>
  810d30:	da802217 	ldw	r10,136(sp)
  810d34:	d8001d85 	stb	zero,118(sp)
  810d38:	0027883a 	mov	r19,zero
  810d3c:	50800104 	addi	r2,r10,4
  810d40:	54800017 	ldw	r18,0(r10)
  810d44:	48021116 	blt	r9,zero,81158c <___vfiprintf_internal_r+0x119c>
  810d48:	00ffdfc4 	movi	r3,-129
  810d4c:	d8802215 	stw	r2,136(sp)
  810d50:	a0e8703a 	and	r20,r20,r3
  810d54:	903f5e1e 	bne	r18,zero,810ad0 <__alt_data_end+0xff810ad0>
  810d58:	0039883a 	mov	fp,zero
  810d5c:	4802a626 	beq	r9,zero,8117f8 <___vfiprintf_internal_r+0x1408>
  810d60:	0025883a 	mov	r18,zero
  810d64:	0027883a 	mov	r19,zero
  810d68:	003f5a06 	br	810ad4 <__alt_data_end+0xff810ad4>
  810d6c:	21003fcc 	andi	r4,r4,255
  810d70:	20029f1e 	bne	r4,zero,8117f0 <___vfiprintf_internal_r+0x1400>
  810d74:	a5000414 	ori	r20,r20,16
  810d78:	a080080c 	andi	r2,r20,32
  810d7c:	10005e1e 	bne	r2,zero,810ef8 <___vfiprintf_internal_r+0xb08>
  810d80:	a080040c 	andi	r2,r20,16
  810d84:	1001a21e 	bne	r2,zero,811410 <___vfiprintf_internal_r+0x1020>
  810d88:	a080100c 	andi	r2,r20,64
  810d8c:	d8001d85 	stb	zero,118(sp)
  810d90:	da802217 	ldw	r10,136(sp)
  810d94:	1002231e 	bne	r2,zero,811624 <___vfiprintf_internal_r+0x1234>
  810d98:	50800104 	addi	r2,r10,4
  810d9c:	54800017 	ldw	r18,0(r10)
  810da0:	0027883a 	mov	r19,zero
  810da4:	4801a00e 	bge	r9,zero,811428 <___vfiprintf_internal_r+0x1038>
  810da8:	d8802215 	stw	r2,136(sp)
  810dac:	0039883a 	mov	fp,zero
  810db0:	94c4b03a 	or	r2,r18,r19
  810db4:	103f901e 	bne	r2,zero,810bf8 <__alt_data_end+0xff810bf8>
  810db8:	00800044 	movi	r2,1
  810dbc:	10803fcc 	andi	r2,r2,255
  810dc0:	00c00044 	movi	r3,1
  810dc4:	10c05926 	beq	r2,r3,810f2c <___vfiprintf_internal_r+0xb3c>
  810dc8:	00c00084 	movi	r3,2
  810dcc:	10ffe41e 	bne	r2,r3,810d60 <__alt_data_end+0xff810d60>
  810dd0:	0025883a 	mov	r18,zero
  810dd4:	0027883a 	mov	r19,zero
  810dd8:	00013d06 	br	8112d0 <___vfiprintf_internal_r+0xee0>
  810ddc:	21003fcc 	andi	r4,r4,255
  810de0:	2002811e 	bne	r4,zero,8117e8 <___vfiprintf_internal_r+0x13f8>
  810de4:	00802074 	movhi	r2,129
  810de8:	1096d104 	addi	r2,r2,23364
  810dec:	d8802615 	stw	r2,152(sp)
  810df0:	a080080c 	andi	r2,r20,32
  810df4:	103f561e 	bne	r2,zero,810b50 <__alt_data_end+0xff810b50>
  810df8:	a080040c 	andi	r2,r20,16
  810dfc:	1001d126 	beq	r2,zero,811544 <___vfiprintf_internal_r+0x1154>
  810e00:	da802217 	ldw	r10,136(sp)
  810e04:	0027883a 	mov	r19,zero
  810e08:	54800017 	ldw	r18,0(r10)
  810e0c:	52800104 	addi	r10,r10,4
  810e10:	da802215 	stw	r10,136(sp)
  810e14:	003f5306 	br	810b64 <__alt_data_end+0xff810b64>
  810e18:	da802217 	ldw	r10,136(sp)
  810e1c:	d8001d85 	stb	zero,118(sp)
  810e20:	55400017 	ldw	r21,0(r10)
  810e24:	50c00104 	addi	r3,r10,4
  810e28:	a8024226 	beq	r21,zero,811734 <___vfiprintf_internal_r+0x1344>
  810e2c:	48021816 	blt	r9,zero,811690 <___vfiprintf_internal_r+0x12a0>
  810e30:	480d883a 	mov	r6,r9
  810e34:	000b883a 	mov	r5,zero
  810e38:	a809883a 	mov	r4,r21
  810e3c:	d8c02a15 	stw	r3,168(sp)
  810e40:	da002b15 	stw	r8,172(sp)
  810e44:	da402c15 	stw	r9,176(sp)
  810e48:	080e5ec0 	call	80e5ec <memchr>
  810e4c:	d8c02a17 	ldw	r3,168(sp)
  810e50:	da002b17 	ldw	r8,172(sp)
  810e54:	da402c17 	ldw	r9,176(sp)
  810e58:	10024826 	beq	r2,zero,81177c <___vfiprintf_internal_r+0x138c>
  810e5c:	1567c83a 	sub	r19,r2,r21
  810e60:	df001d83 	ldbu	fp,118(sp)
  810e64:	d8c02215 	stw	r3,136(sp)
  810e68:	0013883a 	mov	r9,zero
  810e6c:	003e6006 	br	8107f0 <__alt_data_end+0xff8107f0>
  810e70:	21003fcc 	andi	r4,r4,255
  810e74:	203fc026 	beq	r4,zero,810d78 <__alt_data_end+0xff810d78>
  810e78:	d9c01d85 	stb	r7,118(sp)
  810e7c:	003fbe06 	br	810d78 <__alt_data_end+0xff810d78>
  810e80:	da802217 	ldw	r10,136(sp)
  810e84:	54400017 	ldw	r17,0(r10)
  810e88:	50800104 	addi	r2,r10,4
  810e8c:	883e3b16 	blt	r17,zero,81077c <__alt_data_end+0xff81077c>
  810e90:	d8802215 	stw	r2,136(sp)
  810e94:	80c00007 	ldb	r3,0(r16)
  810e98:	003db406 	br	81056c <__alt_data_end+0xff81056c>
  810e9c:	01000044 	movi	r4,1
  810ea0:	01c00ac4 	movi	r7,43
  810ea4:	80c00007 	ldb	r3,0(r16)
  810ea8:	003db006 	br	81056c <__alt_data_end+0xff81056c>
  810eac:	80c00007 	ldb	r3,0(r16)
  810eb0:	82800044 	addi	r10,r16,1
  810eb4:	1b423c26 	beq	r3,r13,8117a8 <___vfiprintf_internal_r+0x13b8>
  810eb8:	18bff404 	addi	r2,r3,-48
  810ebc:	0013883a 	mov	r9,zero
  810ec0:	30822b36 	bltu	r6,r2,811770 <___vfiprintf_internal_r+0x1380>
  810ec4:	50c00007 	ldb	r3,0(r10)
  810ec8:	4a4002a4 	muli	r9,r9,10
  810ecc:	54000044 	addi	r16,r10,1
  810ed0:	8015883a 	mov	r10,r16
  810ed4:	4893883a 	add	r9,r9,r2
  810ed8:	18bff404 	addi	r2,r3,-48
  810edc:	30bff92e 	bgeu	r6,r2,810ec4 <__alt_data_end+0xff810ec4>
  810ee0:	483da30e 	bge	r9,zero,810570 <__alt_data_end+0xff810570>
  810ee4:	027fffc4 	movi	r9,-1
  810ee8:	003da106 	br	810570 <__alt_data_end+0xff810570>
  810eec:	a5001014 	ori	r20,r20,64
  810ef0:	80c00007 	ldb	r3,0(r16)
  810ef4:	003d9d06 	br	81056c <__alt_data_end+0xff81056c>
  810ef8:	da802217 	ldw	r10,136(sp)
  810efc:	d8001d85 	stb	zero,118(sp)
  810f00:	50c00204 	addi	r3,r10,8
  810f04:	54800017 	ldw	r18,0(r10)
  810f08:	54c00117 	ldw	r19,4(r10)
  810f0c:	4801ca16 	blt	r9,zero,811638 <___vfiprintf_internal_r+0x1248>
  810f10:	013fdfc4 	movi	r4,-129
  810f14:	94c4b03a 	or	r2,r18,r19
  810f18:	d8c02215 	stw	r3,136(sp)
  810f1c:	a128703a 	and	r20,r20,r4
  810f20:	0039883a 	mov	fp,zero
  810f24:	103f341e 	bne	r2,zero,810bf8 <__alt_data_end+0xff810bf8>
  810f28:	483e2e26 	beq	r9,zero,8107e4 <__alt_data_end+0xff8107e4>
  810f2c:	0025883a 	mov	r18,zero
  810f30:	94800c04 	addi	r18,r18,48
  810f34:	dc8019c5 	stb	r18,103(sp)
  810f38:	dcc02717 	ldw	r19,156(sp)
  810f3c:	dd4019c4 	addi	r21,sp,103
  810f40:	003e2b06 	br	8107f0 <__alt_data_end+0xff8107f0>
  810f44:	21003fcc 	andi	r4,r4,255
  810f48:	2002361e 	bne	r4,zero,811824 <___vfiprintf_internal_r+0x1434>
  810f4c:	1801c126 	beq	r3,zero,811654 <___vfiprintf_internal_r+0x1264>
  810f50:	04800044 	movi	r18,1
  810f54:	d8c01005 	stb	r3,64(sp)
  810f58:	d8001d85 	stb	zero,118(sp)
  810f5c:	9027883a 	mov	r19,r18
  810f60:	dd401004 	addi	r21,sp,64
  810f64:	003f1106 	br	810bac <__alt_data_end+0xff810bac>
  810f68:	d9402117 	ldw	r5,132(sp)
  810f6c:	d9002017 	ldw	r4,128(sp)
  810f70:	d9801a04 	addi	r6,sp,104
  810f74:	d9c02b15 	stw	r7,172(sp)
  810f78:	dbc02a15 	stw	r15,168(sp)
  810f7c:	08102dc0 	call	8102dc <__sprint_r.part.0>
  810f80:	d9c02b17 	ldw	r7,172(sp)
  810f84:	dbc02a17 	ldw	r15,168(sp)
  810f88:	10006d1e 	bne	r2,zero,811140 <___vfiprintf_internal_r+0xd50>
  810f8c:	d9801b17 	ldw	r6,108(sp)
  810f90:	d8801c17 	ldw	r2,112(sp)
  810f94:	d811883a 	mov	r8,sp
  810f98:	31400044 	addi	r5,r6,1
  810f9c:	003e3306 	br	81086c <__alt_data_end+0xff81086c>
  810fa0:	d9401b17 	ldw	r5,108(sp)
  810fa4:	d8801c17 	ldw	r2,112(sp)
  810fa8:	29000044 	addi	r4,r5,1
  810fac:	d8c01d87 	ldb	r3,118(sp)
  810fb0:	183e4d26 	beq	r3,zero,8108e8 <__alt_data_end+0xff8108e8>
  810fb4:	00c00044 	movi	r3,1
  810fb8:	d9401d84 	addi	r5,sp,118
  810fbc:	10c5883a 	add	r2,r2,r3
  810fc0:	41400015 	stw	r5,0(r8)
  810fc4:	40c00115 	stw	r3,4(r8)
  810fc8:	d8801c15 	stw	r2,112(sp)
  810fcc:	d9001b15 	stw	r4,108(sp)
  810fd0:	014001c4 	movi	r5,7
  810fd4:	2900a90e 	bge	r5,r4,81127c <___vfiprintf_internal_r+0xe8c>
  810fd8:	1000da1e 	bne	r2,zero,811344 <___vfiprintf_internal_r+0xf54>
  810fdc:	7000ab1e 	bne	r14,zero,81128c <___vfiprintf_internal_r+0xe9c>
  810fe0:	000b883a 	mov	r5,zero
  810fe4:	1809883a 	mov	r4,r3
  810fe8:	d811883a 	mov	r8,sp
  810fec:	00c02004 	movi	r3,128
  810ff0:	e0fe4d26 	beq	fp,r3,810928 <__alt_data_end+0xff810928>
  810ff4:	4cf9c83a 	sub	fp,r9,r19
  810ff8:	073e7b0e 	bge	zero,fp,8109e8 <__alt_data_end+0xff8109e8>
  810ffc:	01c00404 	movi	r7,16
  811000:	3f01900e 	bge	r7,fp,811644 <___vfiprintf_internal_r+0x1254>
  811004:	00c02074 	movhi	r3,129
  811008:	18d73604 	addi	r3,r3,23768
  81100c:	d8c02415 	stw	r3,144(sp)
  811010:	034001c4 	movi	r13,7
  811014:	00000506 	br	81102c <___vfiprintf_internal_r+0xc3c>
  811018:	29000084 	addi	r4,r5,2
  81101c:	42000204 	addi	r8,r8,8
  811020:	180b883a 	mov	r5,r3
  811024:	e73ffc04 	addi	fp,fp,-16
  811028:	3f000d0e 	bge	r7,fp,811060 <___vfiprintf_internal_r+0xc70>
  81102c:	10800404 	addi	r2,r2,16
  811030:	28c00044 	addi	r3,r5,1
  811034:	45c00015 	stw	r23,0(r8)
  811038:	41c00115 	stw	r7,4(r8)
  81103c:	d8801c15 	stw	r2,112(sp)
  811040:	d8c01b15 	stw	r3,108(sp)
  811044:	68fff40e 	bge	r13,r3,811018 <__alt_data_end+0xff811018>
  811048:	1000101e 	bne	r2,zero,81108c <___vfiprintf_internal_r+0xc9c>
  81104c:	e73ffc04 	addi	fp,fp,-16
  811050:	01000044 	movi	r4,1
  811054:	000b883a 	mov	r5,zero
  811058:	d811883a 	mov	r8,sp
  81105c:	3f3ff316 	blt	r7,fp,81102c <__alt_data_end+0xff81102c>
  811060:	da802417 	ldw	r10,144(sp)
  811064:	1705883a 	add	r2,r2,fp
  811068:	47000115 	stw	fp,4(r8)
  81106c:	42800015 	stw	r10,0(r8)
  811070:	d8801c15 	stw	r2,112(sp)
  811074:	d9001b15 	stw	r4,108(sp)
  811078:	00c001c4 	movi	r3,7
  81107c:	19003616 	blt	r3,r4,811158 <___vfiprintf_internal_r+0xd68>
  811080:	42000204 	addi	r8,r8,8
  811084:	21000044 	addi	r4,r4,1
  811088:	003e5706 	br	8109e8 <__alt_data_end+0xff8109e8>
  81108c:	d9402117 	ldw	r5,132(sp)
  811090:	d9002017 	ldw	r4,128(sp)
  811094:	d9801a04 	addi	r6,sp,104
  811098:	d9c02b15 	stw	r7,172(sp)
  81109c:	db402a15 	stw	r13,168(sp)
  8110a0:	08102dc0 	call	8102dc <__sprint_r.part.0>
  8110a4:	d9c02b17 	ldw	r7,172(sp)
  8110a8:	db402a17 	ldw	r13,168(sp)
  8110ac:	1000241e 	bne	r2,zero,811140 <___vfiprintf_internal_r+0xd50>
  8110b0:	d9401b17 	ldw	r5,108(sp)
  8110b4:	d8801c17 	ldw	r2,112(sp)
  8110b8:	d811883a 	mov	r8,sp
  8110bc:	29000044 	addi	r4,r5,1
  8110c0:	003fd806 	br	811024 <__alt_data_end+0xff811024>
  8110c4:	d9401b17 	ldw	r5,108(sp)
  8110c8:	00c02074 	movhi	r3,129
  8110cc:	18d73a04 	addi	r3,r3,23784
  8110d0:	d8c02415 	stw	r3,144(sp)
  8110d4:	29400044 	addi	r5,r5,1
  8110d8:	d8c02417 	ldw	r3,144(sp)
  8110dc:	14c5883a 	add	r2,r2,r19
  8110e0:	44c00115 	stw	r19,4(r8)
  8110e4:	40c00015 	stw	r3,0(r8)
  8110e8:	d8801c15 	stw	r2,112(sp)
  8110ec:	d9401b15 	stw	r5,108(sp)
  8110f0:	00c001c4 	movi	r3,7
  8110f4:	1940070e 	bge	r3,r5,811114 <___vfiprintf_internal_r+0xd24>
  8110f8:	103e4826 	beq	r2,zero,810a1c <__alt_data_end+0xff810a1c>
  8110fc:	d9402117 	ldw	r5,132(sp)
  811100:	d9002017 	ldw	r4,128(sp)
  811104:	d9801a04 	addi	r6,sp,104
  811108:	08102dc0 	call	8102dc <__sprint_r.part.0>
  81110c:	10000c1e 	bne	r2,zero,811140 <___vfiprintf_internal_r+0xd50>
  811110:	d8801c17 	ldw	r2,112(sp)
  811114:	8c80010e 	bge	r17,r18,81111c <___vfiprintf_internal_r+0xd2c>
  811118:	9023883a 	mov	r17,r18
  81111c:	da802317 	ldw	r10,140(sp)
  811120:	5455883a 	add	r10,r10,r17
  811124:	da802315 	stw	r10,140(sp)
  811128:	103e4126 	beq	r2,zero,810a30 <__alt_data_end+0xff810a30>
  81112c:	d9402117 	ldw	r5,132(sp)
  811130:	d9002017 	ldw	r4,128(sp)
  811134:	d9801a04 	addi	r6,sp,104
  811138:	08102dc0 	call	8102dc <__sprint_r.part.0>
  81113c:	103e3c26 	beq	r2,zero,810a30 <__alt_data_end+0xff810a30>
  811140:	dd002117 	ldw	r20,132(sp)
  811144:	a080030b 	ldhu	r2,12(r20)
  811148:	1080100c 	andi	r2,r2,64
  81114c:	1001231e 	bne	r2,zero,8115dc <___vfiprintf_internal_r+0x11ec>
  811150:	d8802317 	ldw	r2,140(sp)
  811154:	003d7b06 	br	810744 <__alt_data_end+0xff810744>
  811158:	1000991e 	bne	r2,zero,8113c0 <___vfiprintf_internal_r+0xfd0>
  81115c:	00c00044 	movi	r3,1
  811160:	9805883a 	mov	r2,r19
  811164:	dd400015 	stw	r21,0(sp)
  811168:	dcc00115 	stw	r19,4(sp)
  81116c:	dcc01c15 	stw	r19,112(sp)
  811170:	d8c01b15 	stw	r3,108(sp)
  811174:	d811883a 	mov	r8,sp
  811178:	42000204 	addi	r8,r8,8
  81117c:	a2c0010c 	andi	r11,r20,4
  811180:	583fe426 	beq	r11,zero,811114 <__alt_data_end+0xff811114>
  811184:	8ca7c83a 	sub	r19,r17,r18
  811188:	04ffe20e 	bge	zero,r19,811114 <__alt_data_end+0xff811114>
  81118c:	01c00404 	movi	r7,16
  811190:	3cffcc0e 	bge	r7,r19,8110c4 <__alt_data_end+0xff8110c4>
  811194:	02802074 	movhi	r10,129
  811198:	52973a04 	addi	r10,r10,23784
  81119c:	d9001b17 	ldw	r4,108(sp)
  8111a0:	da802415 	stw	r10,144(sp)
  8111a4:	382b883a 	mov	r21,r7
  8111a8:	050001c4 	movi	r20,7
  8111ac:	df002017 	ldw	fp,128(sp)
  8111b0:	00000506 	br	8111c8 <___vfiprintf_internal_r+0xdd8>
  8111b4:	21400084 	addi	r5,r4,2
  8111b8:	42000204 	addi	r8,r8,8
  8111bc:	1809883a 	mov	r4,r3
  8111c0:	9cfffc04 	addi	r19,r19,-16
  8111c4:	acffc40e 	bge	r21,r19,8110d8 <__alt_data_end+0xff8110d8>
  8111c8:	10800404 	addi	r2,r2,16
  8111cc:	20c00044 	addi	r3,r4,1
  8111d0:	45800015 	stw	r22,0(r8)
  8111d4:	45400115 	stw	r21,4(r8)
  8111d8:	d8801c15 	stw	r2,112(sp)
  8111dc:	d8c01b15 	stw	r3,108(sp)
  8111e0:	a0fff40e 	bge	r20,r3,8111b4 <__alt_data_end+0xff8111b4>
  8111e4:	1000041e 	bne	r2,zero,8111f8 <___vfiprintf_internal_r+0xe08>
  8111e8:	01400044 	movi	r5,1
  8111ec:	0009883a 	mov	r4,zero
  8111f0:	d811883a 	mov	r8,sp
  8111f4:	003ff206 	br	8111c0 <__alt_data_end+0xff8111c0>
  8111f8:	d9402117 	ldw	r5,132(sp)
  8111fc:	d9801a04 	addi	r6,sp,104
  811200:	e009883a 	mov	r4,fp
  811204:	08102dc0 	call	8102dc <__sprint_r.part.0>
  811208:	103fcd1e 	bne	r2,zero,811140 <__alt_data_end+0xff811140>
  81120c:	d9001b17 	ldw	r4,108(sp)
  811210:	d8801c17 	ldw	r2,112(sp)
  811214:	d811883a 	mov	r8,sp
  811218:	21400044 	addi	r5,r4,1
  81121c:	003fe806 	br	8111c0 <__alt_data_end+0xff8111c0>
  811220:	d9402117 	ldw	r5,132(sp)
  811224:	d9002017 	ldw	r4,128(sp)
  811228:	d9801a04 	addi	r6,sp,104
  81122c:	d9c02b15 	stw	r7,172(sp)
  811230:	db402a15 	stw	r13,168(sp)
  811234:	08102dc0 	call	8102dc <__sprint_r.part.0>
  811238:	d9c02b17 	ldw	r7,172(sp)
  81123c:	db402a17 	ldw	r13,168(sp)
  811240:	103fbf1e 	bne	r2,zero,811140 <__alt_data_end+0xff811140>
  811244:	d9401b17 	ldw	r5,108(sp)
  811248:	d8801c17 	ldw	r2,112(sp)
  81124c:	d811883a 	mov	r8,sp
  811250:	29800044 	addi	r6,r5,1
  811254:	003dc406 	br	810968 <__alt_data_end+0xff810968>
  811258:	1000d21e 	bne	r2,zero,8115a4 <___vfiprintf_internal_r+0x11b4>
  81125c:	d8c01d87 	ldb	r3,118(sp)
  811260:	18009526 	beq	r3,zero,8114b8 <___vfiprintf_internal_r+0x10c8>
  811264:	00800044 	movi	r2,1
  811268:	d8c01d84 	addi	r3,sp,118
  81126c:	1009883a 	mov	r4,r2
  811270:	d8c00015 	stw	r3,0(sp)
  811274:	d8800115 	stw	r2,4(sp)
  811278:	d811883a 	mov	r8,sp
  81127c:	200b883a 	mov	r5,r4
  811280:	42000204 	addi	r8,r8,8
  811284:	21000044 	addi	r4,r4,1
  811288:	003d9706 	br	8108e8 <__alt_data_end+0xff8108e8>
  81128c:	d9001d04 	addi	r4,sp,116
  811290:	00800084 	movi	r2,2
  811294:	d9000015 	stw	r4,0(sp)
  811298:	d8800115 	stw	r2,4(sp)
  81129c:	1809883a 	mov	r4,r3
  8112a0:	d811883a 	mov	r8,sp
  8112a4:	200b883a 	mov	r5,r4
  8112a8:	42000204 	addi	r8,r8,8
  8112ac:	21000044 	addi	r4,r4,1
  8112b0:	003f4e06 	br	810fec <__alt_data_end+0xff810fec>
  8112b4:	d8001d85 	stb	zero,118(sp)
  8112b8:	48005016 	blt	r9,zero,8113fc <___vfiprintf_internal_r+0x100c>
  8112bc:	00ffdfc4 	movi	r3,-129
  8112c0:	94c4b03a 	or	r2,r18,r19
  8112c4:	a0e8703a 	and	r20,r20,r3
  8112c8:	103d4426 	beq	r2,zero,8107dc <__alt_data_end+0xff8107dc>
  8112cc:	0039883a 	mov	fp,zero
  8112d0:	d9002617 	ldw	r4,152(sp)
  8112d4:	dd401a04 	addi	r21,sp,104
  8112d8:	908003cc 	andi	r2,r18,15
  8112dc:	9806973a 	slli	r3,r19,28
  8112e0:	2085883a 	add	r2,r4,r2
  8112e4:	9024d13a 	srli	r18,r18,4
  8112e8:	10800003 	ldbu	r2,0(r2)
  8112ec:	9826d13a 	srli	r19,r19,4
  8112f0:	ad7fffc4 	addi	r21,r21,-1
  8112f4:	1ca4b03a 	or	r18,r3,r18
  8112f8:	a8800005 	stb	r2,0(r21)
  8112fc:	94c4b03a 	or	r2,r18,r19
  811300:	103ff51e 	bne	r2,zero,8112d8 <__alt_data_end+0xff8112d8>
  811304:	003e5906 	br	810c6c <__alt_data_end+0xff810c6c>
  811308:	d9402117 	ldw	r5,132(sp)
  81130c:	d9002017 	ldw	r4,128(sp)
  811310:	d9801a04 	addi	r6,sp,104
  811314:	08102dc0 	call	8102dc <__sprint_r.part.0>
  811318:	103f891e 	bne	r2,zero,811140 <__alt_data_end+0xff811140>
  81131c:	d8801c17 	ldw	r2,112(sp)
  811320:	d811883a 	mov	r8,sp
  811324:	003f9506 	br	81117c <__alt_data_end+0xff81117c>
  811328:	d9402117 	ldw	r5,132(sp)
  81132c:	d9002017 	ldw	r4,128(sp)
  811330:	d9801a04 	addi	r6,sp,104
  811334:	08102dc0 	call	8102dc <__sprint_r.part.0>
  811338:	103f811e 	bne	r2,zero,811140 <__alt_data_end+0xff811140>
  81133c:	d811883a 	mov	r8,sp
  811340:	003ced06 	br	8106f8 <__alt_data_end+0xff8106f8>
  811344:	d9402117 	ldw	r5,132(sp)
  811348:	d9002017 	ldw	r4,128(sp)
  81134c:	d9801a04 	addi	r6,sp,104
  811350:	da402c15 	stw	r9,176(sp)
  811354:	db802a15 	stw	r14,168(sp)
  811358:	08102dc0 	call	8102dc <__sprint_r.part.0>
  81135c:	da402c17 	ldw	r9,176(sp)
  811360:	db802a17 	ldw	r14,168(sp)
  811364:	103f761e 	bne	r2,zero,811140 <__alt_data_end+0xff811140>
  811368:	d9401b17 	ldw	r5,108(sp)
  81136c:	d8801c17 	ldw	r2,112(sp)
  811370:	d811883a 	mov	r8,sp
  811374:	29000044 	addi	r4,r5,1
  811378:	003d5b06 	br	8108e8 <__alt_data_end+0xff8108e8>
  81137c:	d9402117 	ldw	r5,132(sp)
  811380:	d9002017 	ldw	r4,128(sp)
  811384:	d9801a04 	addi	r6,sp,104
  811388:	da402c15 	stw	r9,176(sp)
  81138c:	08102dc0 	call	8102dc <__sprint_r.part.0>
  811390:	da402c17 	ldw	r9,176(sp)
  811394:	103f6a1e 	bne	r2,zero,811140 <__alt_data_end+0xff811140>
  811398:	d9401b17 	ldw	r5,108(sp)
  81139c:	d8801c17 	ldw	r2,112(sp)
  8113a0:	d811883a 	mov	r8,sp
  8113a4:	29000044 	addi	r4,r5,1
  8113a8:	003f1006 	br	810fec <__alt_data_end+0xff810fec>
  8113ac:	1000c31e 	bne	r2,zero,8116bc <___vfiprintf_internal_r+0x12cc>
  8113b0:	01000044 	movi	r4,1
  8113b4:	000b883a 	mov	r5,zero
  8113b8:	d811883a 	mov	r8,sp
  8113bc:	003f0d06 	br	810ff4 <__alt_data_end+0xff810ff4>
  8113c0:	d9402117 	ldw	r5,132(sp)
  8113c4:	d9002017 	ldw	r4,128(sp)
  8113c8:	d9801a04 	addi	r6,sp,104
  8113cc:	08102dc0 	call	8102dc <__sprint_r.part.0>
  8113d0:	103f5b1e 	bne	r2,zero,811140 <__alt_data_end+0xff811140>
  8113d4:	d9001b17 	ldw	r4,108(sp)
  8113d8:	d8801c17 	ldw	r2,112(sp)
  8113dc:	d811883a 	mov	r8,sp
  8113e0:	21000044 	addi	r4,r4,1
  8113e4:	003d8006 	br	8109e8 <__alt_data_end+0xff8109e8>
  8113e8:	01002074 	movhi	r4,129
  8113ec:	2116d604 	addi	r4,r4,23384
  8113f0:	d9002615 	stw	r4,152(sp)
  8113f4:	d8c02215 	stw	r3,136(sp)
  8113f8:	1029883a 	mov	r20,r2
  8113fc:	94c4b03a 	or	r2,r18,r19
  811400:	103fb21e 	bne	r2,zero,8112cc <__alt_data_end+0xff8112cc>
  811404:	0039883a 	mov	fp,zero
  811408:	00800084 	movi	r2,2
  81140c:	003e6b06 	br	810dbc <__alt_data_end+0xff810dbc>
  811410:	da802217 	ldw	r10,136(sp)
  811414:	d8001d85 	stb	zero,118(sp)
  811418:	0027883a 	mov	r19,zero
  81141c:	50800104 	addi	r2,r10,4
  811420:	54800017 	ldw	r18,0(r10)
  811424:	483e6016 	blt	r9,zero,810da8 <__alt_data_end+0xff810da8>
  811428:	00ffdfc4 	movi	r3,-129
  81142c:	d8802215 	stw	r2,136(sp)
  811430:	a0e8703a 	and	r20,r20,r3
  811434:	0039883a 	mov	fp,zero
  811438:	903ebb26 	beq	r18,zero,810f28 <__alt_data_end+0xff810f28>
  81143c:	00800244 	movi	r2,9
  811440:	14bdee36 	bltu	r2,r18,810bfc <__alt_data_end+0xff810bfc>
  811444:	003eba06 	br	810f30 <__alt_data_end+0xff810f30>
  811448:	00800c04 	movi	r2,48
  81144c:	d8c01d45 	stb	r3,117(sp)
  811450:	d8801d05 	stb	r2,116(sp)
  811454:	d8001d85 	stb	zero,118(sp)
  811458:	a0c00094 	ori	r3,r20,2
  81145c:	4800a916 	blt	r9,zero,811704 <___vfiprintf_internal_r+0x1314>
  811460:	00bfdfc4 	movi	r2,-129
  811464:	a096703a 	and	r11,r20,r2
  811468:	5d000094 	ori	r20,r11,2
  81146c:	0039883a 	mov	fp,zero
  811470:	003f9706 	br	8112d0 <__alt_data_end+0xff8112d0>
  811474:	8025883a 	mov	r18,r16
  811478:	003c2e06 	br	810534 <__alt_data_end+0xff810534>
  81147c:	00802074 	movhi	r2,129
  811480:	1096d604 	addi	r2,r2,23384
  811484:	0039883a 	mov	fp,zero
  811488:	d8802615 	stw	r2,152(sp)
  81148c:	003f9006 	br	8112d0 <__alt_data_end+0xff8112d0>
  811490:	04a5c83a 	sub	r18,zero,r18
  811494:	07000b44 	movi	fp,45
  811498:	9004c03a 	cmpne	r2,r18,zero
  81149c:	04e7c83a 	sub	r19,zero,r19
  8114a0:	df001d85 	stb	fp,118(sp)
  8114a4:	98a7c83a 	sub	r19,r19,r2
  8114a8:	48009f16 	blt	r9,zero,811728 <___vfiprintf_internal_r+0x1338>
  8114ac:	00bfdfc4 	movi	r2,-129
  8114b0:	a0a8703a 	and	r20,r20,r2
  8114b4:	003dd006 	br	810bf8 <__alt_data_end+0xff810bf8>
  8114b8:	70004c26 	beq	r14,zero,8115ec <___vfiprintf_internal_r+0x11fc>
  8114bc:	00800084 	movi	r2,2
  8114c0:	d8c01d04 	addi	r3,sp,116
  8114c4:	d8c00015 	stw	r3,0(sp)
  8114c8:	d8800115 	stw	r2,4(sp)
  8114cc:	01000044 	movi	r4,1
  8114d0:	d811883a 	mov	r8,sp
  8114d4:	003f7306 	br	8112a4 <__alt_data_end+0xff8112a4>
  8114d8:	a080100c 	andi	r2,r20,64
  8114dc:	da802217 	ldw	r10,136(sp)
  8114e0:	103e0626 	beq	r2,zero,810cfc <__alt_data_end+0xff810cfc>
  8114e4:	5480000f 	ldh	r18,0(r10)
  8114e8:	52800104 	addi	r10,r10,4
  8114ec:	da802215 	stw	r10,136(sp)
  8114f0:	9027d7fa 	srai	r19,r18,31
  8114f4:	9805883a 	mov	r2,r19
  8114f8:	003db806 	br	810bdc <__alt_data_end+0xff810bdc>
  8114fc:	a080040c 	andi	r2,r20,16
  811500:	1000091e 	bne	r2,zero,811528 <___vfiprintf_internal_r+0x1138>
  811504:	a2c0100c 	andi	r11,r20,64
  811508:	58000726 	beq	r11,zero,811528 <___vfiprintf_internal_r+0x1138>
  81150c:	da802217 	ldw	r10,136(sp)
  811510:	50800017 	ldw	r2,0(r10)
  811514:	52800104 	addi	r10,r10,4
  811518:	da802215 	stw	r10,136(sp)
  81151c:	da802317 	ldw	r10,140(sp)
  811520:	1280000d 	sth	r10,0(r2)
  811524:	003be706 	br	8104c4 <__alt_data_end+0xff8104c4>
  811528:	da802217 	ldw	r10,136(sp)
  81152c:	50800017 	ldw	r2,0(r10)
  811530:	52800104 	addi	r10,r10,4
  811534:	da802215 	stw	r10,136(sp)
  811538:	da802317 	ldw	r10,140(sp)
  81153c:	12800015 	stw	r10,0(r2)
  811540:	003be006 	br	8104c4 <__alt_data_end+0xff8104c4>
  811544:	a080100c 	andi	r2,r20,64
  811548:	da802217 	ldw	r10,136(sp)
  81154c:	10003026 	beq	r2,zero,811610 <___vfiprintf_internal_r+0x1220>
  811550:	5480000b 	ldhu	r18,0(r10)
  811554:	52800104 	addi	r10,r10,4
  811558:	0027883a 	mov	r19,zero
  81155c:	da802215 	stw	r10,136(sp)
  811560:	003d8006 	br	810b64 <__alt_data_end+0xff810b64>
  811564:	80c00007 	ldb	r3,0(r16)
  811568:	003c0006 	br	81056c <__alt_data_end+0xff81056c>
  81156c:	a080100c 	andi	r2,r20,64
  811570:	d8001d85 	stb	zero,118(sp)
  811574:	da802217 	ldw	r10,136(sp)
  811578:	1000201e 	bne	r2,zero,8115fc <___vfiprintf_internal_r+0x120c>
  81157c:	50800104 	addi	r2,r10,4
  811580:	54800017 	ldw	r18,0(r10)
  811584:	0027883a 	mov	r19,zero
  811588:	483def0e 	bge	r9,zero,810d48 <__alt_data_end+0xff810d48>
  81158c:	94c6b03a 	or	r3,r18,r19
  811590:	d8802215 	stw	r2,136(sp)
  811594:	183d4e1e 	bne	r3,zero,810ad0 <__alt_data_end+0xff810ad0>
  811598:	0039883a 	mov	fp,zero
  81159c:	0005883a 	mov	r2,zero
  8115a0:	003e0606 	br	810dbc <__alt_data_end+0xff810dbc>
  8115a4:	d9402117 	ldw	r5,132(sp)
  8115a8:	d9002017 	ldw	r4,128(sp)
  8115ac:	d9801a04 	addi	r6,sp,104
  8115b0:	da402c15 	stw	r9,176(sp)
  8115b4:	db802a15 	stw	r14,168(sp)
  8115b8:	08102dc0 	call	8102dc <__sprint_r.part.0>
  8115bc:	da402c17 	ldw	r9,176(sp)
  8115c0:	db802a17 	ldw	r14,168(sp)
  8115c4:	103ede1e 	bne	r2,zero,811140 <__alt_data_end+0xff811140>
  8115c8:	d9401b17 	ldw	r5,108(sp)
  8115cc:	d8801c17 	ldw	r2,112(sp)
  8115d0:	d811883a 	mov	r8,sp
  8115d4:	29000044 	addi	r4,r5,1
  8115d8:	003e7406 	br	810fac <__alt_data_end+0xff810fac>
  8115dc:	00bfffc4 	movi	r2,-1
  8115e0:	003c5806 	br	810744 <__alt_data_end+0xff810744>
  8115e4:	d811883a 	mov	r8,sp
  8115e8:	003ee806 	br	81118c <__alt_data_end+0xff81118c>
  8115ec:	000b883a 	mov	r5,zero
  8115f0:	01000044 	movi	r4,1
  8115f4:	d811883a 	mov	r8,sp
  8115f8:	003e7c06 	br	810fec <__alt_data_end+0xff810fec>
  8115fc:	50800104 	addi	r2,r10,4
  811600:	5480000b 	ldhu	r18,0(r10)
  811604:	0027883a 	mov	r19,zero
  811608:	483dcf0e 	bge	r9,zero,810d48 <__alt_data_end+0xff810d48>
  81160c:	003fdf06 	br	81158c <__alt_data_end+0xff81158c>
  811610:	54800017 	ldw	r18,0(r10)
  811614:	52800104 	addi	r10,r10,4
  811618:	0027883a 	mov	r19,zero
  81161c:	da802215 	stw	r10,136(sp)
  811620:	003d5006 	br	810b64 <__alt_data_end+0xff810b64>
  811624:	50800104 	addi	r2,r10,4
  811628:	5480000b 	ldhu	r18,0(r10)
  81162c:	0027883a 	mov	r19,zero
  811630:	483f7d0e 	bge	r9,zero,811428 <__alt_data_end+0xff811428>
  811634:	003ddc06 	br	810da8 <__alt_data_end+0xff810da8>
  811638:	d8c02215 	stw	r3,136(sp)
  81163c:	0039883a 	mov	fp,zero
  811640:	003ddb06 	br	810db0 <__alt_data_end+0xff810db0>
  811644:	02802074 	movhi	r10,129
  811648:	52973604 	addi	r10,r10,23768
  81164c:	da802415 	stw	r10,144(sp)
  811650:	003e8306 	br	811060 <__alt_data_end+0xff811060>
  811654:	d8801c17 	ldw	r2,112(sp)
  811658:	dd002117 	ldw	r20,132(sp)
  81165c:	103eb926 	beq	r2,zero,811144 <__alt_data_end+0xff811144>
  811660:	d9002017 	ldw	r4,128(sp)
  811664:	d9801a04 	addi	r6,sp,104
  811668:	a00b883a 	mov	r5,r20
  81166c:	08102dc0 	call	8102dc <__sprint_r.part.0>
  811670:	003eb406 	br	811144 <__alt_data_end+0xff811144>
  811674:	80c00043 	ldbu	r3,1(r16)
  811678:	a5000814 	ori	r20,r20,32
  81167c:	84000044 	addi	r16,r16,1
  811680:	18c03fcc 	andi	r3,r3,255
  811684:	18c0201c 	xori	r3,r3,128
  811688:	18ffe004 	addi	r3,r3,-128
  81168c:	003bb706 	br	81056c <__alt_data_end+0xff81056c>
  811690:	a809883a 	mov	r4,r21
  811694:	d8c02a15 	stw	r3,168(sp)
  811698:	da002b15 	stw	r8,172(sp)
  81169c:	0808d440 	call	808d44 <strlen>
  8116a0:	d8c02a17 	ldw	r3,168(sp)
  8116a4:	1027883a 	mov	r19,r2
  8116a8:	df001d83 	ldbu	fp,118(sp)
  8116ac:	d8c02215 	stw	r3,136(sp)
  8116b0:	0013883a 	mov	r9,zero
  8116b4:	da002b17 	ldw	r8,172(sp)
  8116b8:	003c4d06 	br	8107f0 <__alt_data_end+0xff8107f0>
  8116bc:	d9402117 	ldw	r5,132(sp)
  8116c0:	d9002017 	ldw	r4,128(sp)
  8116c4:	d9801a04 	addi	r6,sp,104
  8116c8:	da402c15 	stw	r9,176(sp)
  8116cc:	08102dc0 	call	8102dc <__sprint_r.part.0>
  8116d0:	da402c17 	ldw	r9,176(sp)
  8116d4:	103e9a1e 	bne	r2,zero,811140 <__alt_data_end+0xff811140>
  8116d8:	d9401b17 	ldw	r5,108(sp)
  8116dc:	d8801c17 	ldw	r2,112(sp)
  8116e0:	d811883a 	mov	r8,sp
  8116e4:	29000044 	addi	r4,r5,1
  8116e8:	003e4206 	br	810ff4 <__alt_data_end+0xff810ff4>
  8116ec:	d9401b17 	ldw	r5,108(sp)
  8116f0:	01002074 	movhi	r4,129
  8116f4:	21173a04 	addi	r4,r4,23784
  8116f8:	d9002415 	stw	r4,144(sp)
  8116fc:	29400044 	addi	r5,r5,1
  811700:	003c6d06 	br	8108b8 <__alt_data_end+0xff8108b8>
  811704:	0039883a 	mov	fp,zero
  811708:	00800084 	movi	r2,2
  81170c:	10803fcc 	andi	r2,r2,255
  811710:	01000044 	movi	r4,1
  811714:	11001e26 	beq	r2,r4,811790 <___vfiprintf_internal_r+0x13a0>
  811718:	01000084 	movi	r4,2
  81171c:	11001e1e 	bne	r2,r4,811798 <___vfiprintf_internal_r+0x13a8>
  811720:	1829883a 	mov	r20,r3
  811724:	003eea06 	br	8112d0 <__alt_data_end+0xff8112d0>
  811728:	a007883a 	mov	r3,r20
  81172c:	00800044 	movi	r2,1
  811730:	003ff606 	br	81170c <__alt_data_end+0xff81170c>
  811734:	00800184 	movi	r2,6
  811738:	1240012e 	bgeu	r2,r9,811740 <___vfiprintf_internal_r+0x1350>
  81173c:	1013883a 	mov	r9,r2
  811740:	4827883a 	mov	r19,r9
  811744:	4825883a 	mov	r18,r9
  811748:	48001516 	blt	r9,zero,8117a0 <___vfiprintf_internal_r+0x13b0>
  81174c:	05402074 	movhi	r21,129
  811750:	d8c02215 	stw	r3,136(sp)
  811754:	ad56db04 	addi	r21,r21,23404
  811758:	003d1406 	br	810bac <__alt_data_end+0xff810bac>
  81175c:	02802074 	movhi	r10,129
  811760:	52973604 	addi	r10,r10,23768
  811764:	da802415 	stw	r10,144(sp)
  811768:	200d883a 	mov	r6,r4
  81176c:	003c9106 	br	8109b4 <__alt_data_end+0xff8109b4>
  811770:	5021883a 	mov	r16,r10
  811774:	0013883a 	mov	r9,zero
  811778:	003b7d06 	br	810570 <__alt_data_end+0xff810570>
  81177c:	4827883a 	mov	r19,r9
  811780:	df001d83 	ldbu	fp,118(sp)
  811784:	d8c02215 	stw	r3,136(sp)
  811788:	0013883a 	mov	r9,zero
  81178c:	003c1806 	br	8107f0 <__alt_data_end+0xff8107f0>
  811790:	1829883a 	mov	r20,r3
  811794:	003d1806 	br	810bf8 <__alt_data_end+0xff810bf8>
  811798:	1829883a 	mov	r20,r3
  81179c:	003ccd06 	br	810ad4 <__alt_data_end+0xff810ad4>
  8117a0:	0025883a 	mov	r18,zero
  8117a4:	003fe906 	br	81174c <__alt_data_end+0xff81174c>
  8117a8:	d8802217 	ldw	r2,136(sp)
  8117ac:	80c00043 	ldbu	r3,1(r16)
  8117b0:	5021883a 	mov	r16,r10
  8117b4:	12400017 	ldw	r9,0(r2)
  8117b8:	10800104 	addi	r2,r2,4
  8117bc:	d8802215 	stw	r2,136(sp)
  8117c0:	483faf0e 	bge	r9,zero,811680 <__alt_data_end+0xff811680>
  8117c4:	18c03fcc 	andi	r3,r3,255
  8117c8:	18c0201c 	xori	r3,r3,128
  8117cc:	027fffc4 	movi	r9,-1
  8117d0:	18ffe004 	addi	r3,r3,-128
  8117d4:	003b6506 	br	81056c <__alt_data_end+0xff81056c>
  8117d8:	d9c01d85 	stb	r7,118(sp)
  8117dc:	003ca006 	br	810a60 <__alt_data_end+0xff810a60>
  8117e0:	d9c01d85 	stb	r7,118(sp)
  8117e4:	003cad06 	br	810a9c <__alt_data_end+0xff810a9c>
  8117e8:	d9c01d85 	stb	r7,118(sp)
  8117ec:	003d7d06 	br	810de4 <__alt_data_end+0xff810de4>
  8117f0:	d9c01d85 	stb	r7,118(sp)
  8117f4:	003d5f06 	br	810d74 <__alt_data_end+0xff810d74>
  8117f8:	a080004c 	andi	r2,r20,1
  8117fc:	0039883a 	mov	fp,zero
  811800:	10000526 	beq	r2,zero,811818 <___vfiprintf_internal_r+0x1428>
  811804:	00800c04 	movi	r2,48
  811808:	d88019c5 	stb	r2,103(sp)
  81180c:	dcc02717 	ldw	r19,156(sp)
  811810:	dd4019c4 	addi	r21,sp,103
  811814:	003bf606 	br	8107f0 <__alt_data_end+0xff8107f0>
  811818:	0027883a 	mov	r19,zero
  81181c:	dd401a04 	addi	r21,sp,104
  811820:	003bf306 	br	8107f0 <__alt_data_end+0xff8107f0>
  811824:	d9c01d85 	stb	r7,118(sp)
  811828:	003dc806 	br	810f4c <__alt_data_end+0xff810f4c>
  81182c:	d9c01d85 	stb	r7,118(sp)
  811830:	003d3a06 	br	810d1c <__alt_data_end+0xff810d1c>
  811834:	d9c01d85 	stb	r7,118(sp)
  811838:	003d2a06 	br	810ce4 <__alt_data_end+0xff810ce4>
  81183c:	d9c01d85 	stb	r7,118(sp)
  811840:	003cde06 	br	810bbc <__alt_data_end+0xff810bbc>
  811844:	d9c01d85 	stb	r7,118(sp)
  811848:	003cbc06 	br	810b3c <__alt_data_end+0xff810b3c>

0081184c <__vfiprintf_internal>:
  81184c:	00802074 	movhi	r2,129
  811850:	109df704 	addi	r2,r2,30684
  811854:	300f883a 	mov	r7,r6
  811858:	280d883a 	mov	r6,r5
  81185c:	200b883a 	mov	r5,r4
  811860:	11000017 	ldw	r4,0(r2)
  811864:	08103f01 	jmpi	8103f0 <___vfiprintf_internal_r>

00811868 <__sbprintf>:
  811868:	2880030b 	ldhu	r2,12(r5)
  81186c:	2ac01917 	ldw	r11,100(r5)
  811870:	2a80038b 	ldhu	r10,14(r5)
  811874:	2a400717 	ldw	r9,28(r5)
  811878:	2a000917 	ldw	r8,36(r5)
  81187c:	defee204 	addi	sp,sp,-1144
  811880:	00c10004 	movi	r3,1024
  811884:	dc011a15 	stw	r16,1128(sp)
  811888:	10bfff4c 	andi	r2,r2,65533
  81188c:	2821883a 	mov	r16,r5
  811890:	d8cb883a 	add	r5,sp,r3
  811894:	dc811c15 	stw	r18,1136(sp)
  811898:	dc411b15 	stw	r17,1132(sp)
  81189c:	dfc11d15 	stw	ra,1140(sp)
  8118a0:	2025883a 	mov	r18,r4
  8118a4:	d881030d 	sth	r2,1036(sp)
  8118a8:	dac11915 	stw	r11,1124(sp)
  8118ac:	da81038d 	sth	r10,1038(sp)
  8118b0:	da410715 	stw	r9,1052(sp)
  8118b4:	da010915 	stw	r8,1060(sp)
  8118b8:	dec10015 	stw	sp,1024(sp)
  8118bc:	dec10415 	stw	sp,1040(sp)
  8118c0:	d8c10215 	stw	r3,1032(sp)
  8118c4:	d8c10515 	stw	r3,1044(sp)
  8118c8:	d8010615 	stw	zero,1048(sp)
  8118cc:	08103f00 	call	8103f0 <___vfiprintf_internal_r>
  8118d0:	1023883a 	mov	r17,r2
  8118d4:	10000416 	blt	r2,zero,8118e8 <__sbprintf+0x80>
  8118d8:	d9410004 	addi	r5,sp,1024
  8118dc:	9009883a 	mov	r4,r18
  8118e0:	080cca40 	call	80cca4 <_fflush_r>
  8118e4:	10000d1e 	bne	r2,zero,81191c <__sbprintf+0xb4>
  8118e8:	d881030b 	ldhu	r2,1036(sp)
  8118ec:	1080100c 	andi	r2,r2,64
  8118f0:	10000326 	beq	r2,zero,811900 <__sbprintf+0x98>
  8118f4:	8080030b 	ldhu	r2,12(r16)
  8118f8:	10801014 	ori	r2,r2,64
  8118fc:	8080030d 	sth	r2,12(r16)
  811900:	8805883a 	mov	r2,r17
  811904:	dfc11d17 	ldw	ra,1140(sp)
  811908:	dc811c17 	ldw	r18,1136(sp)
  81190c:	dc411b17 	ldw	r17,1132(sp)
  811910:	dc011a17 	ldw	r16,1128(sp)
  811914:	dec11e04 	addi	sp,sp,1144
  811918:	f800283a 	ret
  81191c:	047fffc4 	movi	r17,-1
  811920:	003ff106 	br	8118e8 <__alt_data_end+0xff8118e8>

00811924 <_write_r>:
  811924:	defffd04 	addi	sp,sp,-12
  811928:	2805883a 	mov	r2,r5
  81192c:	dc000015 	stw	r16,0(sp)
  811930:	040020b4 	movhi	r16,130
  811934:	dc400115 	stw	r17,4(sp)
  811938:	300b883a 	mov	r5,r6
  81193c:	8424c904 	addi	r16,r16,-27868
  811940:	2023883a 	mov	r17,r4
  811944:	380d883a 	mov	r6,r7
  811948:	1009883a 	mov	r4,r2
  81194c:	dfc00215 	stw	ra,8(sp)
  811950:	80000015 	stw	zero,0(r16)
  811954:	08137e00 	call	8137e0 <write>
  811958:	00ffffc4 	movi	r3,-1
  81195c:	10c00526 	beq	r2,r3,811974 <_write_r+0x50>
  811960:	dfc00217 	ldw	ra,8(sp)
  811964:	dc400117 	ldw	r17,4(sp)
  811968:	dc000017 	ldw	r16,0(sp)
  81196c:	dec00304 	addi	sp,sp,12
  811970:	f800283a 	ret
  811974:	80c00017 	ldw	r3,0(r16)
  811978:	183ff926 	beq	r3,zero,811960 <__alt_data_end+0xff811960>
  81197c:	88c00015 	stw	r3,0(r17)
  811980:	003ff706 	br	811960 <__alt_data_end+0xff811960>

00811984 <_close_r>:
  811984:	defffd04 	addi	sp,sp,-12
  811988:	dc000015 	stw	r16,0(sp)
  81198c:	040020b4 	movhi	r16,130
  811990:	dc400115 	stw	r17,4(sp)
  811994:	8424c904 	addi	r16,r16,-27868
  811998:	2023883a 	mov	r17,r4
  81199c:	2809883a 	mov	r4,r5
  8119a0:	dfc00215 	stw	ra,8(sp)
  8119a4:	80000015 	stw	zero,0(r16)
  8119a8:	0812ee00 	call	812ee0 <close>
  8119ac:	00ffffc4 	movi	r3,-1
  8119b0:	10c00526 	beq	r2,r3,8119c8 <_close_r+0x44>
  8119b4:	dfc00217 	ldw	ra,8(sp)
  8119b8:	dc400117 	ldw	r17,4(sp)
  8119bc:	dc000017 	ldw	r16,0(sp)
  8119c0:	dec00304 	addi	sp,sp,12
  8119c4:	f800283a 	ret
  8119c8:	80c00017 	ldw	r3,0(r16)
  8119cc:	183ff926 	beq	r3,zero,8119b4 <__alt_data_end+0xff8119b4>
  8119d0:	88c00015 	stw	r3,0(r17)
  8119d4:	003ff706 	br	8119b4 <__alt_data_end+0xff8119b4>

008119d8 <_calloc_r>:
  8119d8:	298b383a 	mul	r5,r5,r6
  8119dc:	defffe04 	addi	sp,sp,-8
  8119e0:	dfc00115 	stw	ra,4(sp)
  8119e4:	dc000015 	stw	r16,0(sp)
  8119e8:	080dde00 	call	80dde0 <_malloc_r>
  8119ec:	10002926 	beq	r2,zero,811a94 <_calloc_r+0xbc>
  8119f0:	11bfff17 	ldw	r6,-4(r2)
  8119f4:	1021883a 	mov	r16,r2
  8119f8:	00bfff04 	movi	r2,-4
  8119fc:	308c703a 	and	r6,r6,r2
  811a00:	00c00904 	movi	r3,36
  811a04:	308d883a 	add	r6,r6,r2
  811a08:	19801636 	bltu	r3,r6,811a64 <_calloc_r+0x8c>
  811a0c:	008004c4 	movi	r2,19
  811a10:	11800b2e 	bgeu	r2,r6,811a40 <_calloc_r+0x68>
  811a14:	80000015 	stw	zero,0(r16)
  811a18:	80000115 	stw	zero,4(r16)
  811a1c:	008006c4 	movi	r2,27
  811a20:	11801a2e 	bgeu	r2,r6,811a8c <_calloc_r+0xb4>
  811a24:	80000215 	stw	zero,8(r16)
  811a28:	80000315 	stw	zero,12(r16)
  811a2c:	30c0151e 	bne	r6,r3,811a84 <_calloc_r+0xac>
  811a30:	80000415 	stw	zero,16(r16)
  811a34:	80800604 	addi	r2,r16,24
  811a38:	80000515 	stw	zero,20(r16)
  811a3c:	00000106 	br	811a44 <_calloc_r+0x6c>
  811a40:	8005883a 	mov	r2,r16
  811a44:	10000015 	stw	zero,0(r2)
  811a48:	10000115 	stw	zero,4(r2)
  811a4c:	10000215 	stw	zero,8(r2)
  811a50:	8005883a 	mov	r2,r16
  811a54:	dfc00117 	ldw	ra,4(sp)
  811a58:	dc000017 	ldw	r16,0(sp)
  811a5c:	dec00204 	addi	sp,sp,8
  811a60:	f800283a 	ret
  811a64:	000b883a 	mov	r5,zero
  811a68:	8009883a 	mov	r4,r16
  811a6c:	080e9740 	call	80e974 <memset>
  811a70:	8005883a 	mov	r2,r16
  811a74:	dfc00117 	ldw	ra,4(sp)
  811a78:	dc000017 	ldw	r16,0(sp)
  811a7c:	dec00204 	addi	sp,sp,8
  811a80:	f800283a 	ret
  811a84:	80800404 	addi	r2,r16,16
  811a88:	003fee06 	br	811a44 <__alt_data_end+0xff811a44>
  811a8c:	80800204 	addi	r2,r16,8
  811a90:	003fec06 	br	811a44 <__alt_data_end+0xff811a44>
  811a94:	0005883a 	mov	r2,zero
  811a98:	003fee06 	br	811a54 <__alt_data_end+0xff811a54>

00811a9c <_fclose_r>:
  811a9c:	28003926 	beq	r5,zero,811b84 <_fclose_r+0xe8>
  811aa0:	defffc04 	addi	sp,sp,-16
  811aa4:	dc400115 	stw	r17,4(sp)
  811aa8:	dc000015 	stw	r16,0(sp)
  811aac:	dfc00315 	stw	ra,12(sp)
  811ab0:	dc800215 	stw	r18,8(sp)
  811ab4:	2023883a 	mov	r17,r4
  811ab8:	2821883a 	mov	r16,r5
  811abc:	20000226 	beq	r4,zero,811ac8 <_fclose_r+0x2c>
  811ac0:	20800e17 	ldw	r2,56(r4)
  811ac4:	10002726 	beq	r2,zero,811b64 <_fclose_r+0xc8>
  811ac8:	8080030f 	ldh	r2,12(r16)
  811acc:	1000071e 	bne	r2,zero,811aec <_fclose_r+0x50>
  811ad0:	0005883a 	mov	r2,zero
  811ad4:	dfc00317 	ldw	ra,12(sp)
  811ad8:	dc800217 	ldw	r18,8(sp)
  811adc:	dc400117 	ldw	r17,4(sp)
  811ae0:	dc000017 	ldw	r16,0(sp)
  811ae4:	dec00404 	addi	sp,sp,16
  811ae8:	f800283a 	ret
  811aec:	800b883a 	mov	r5,r16
  811af0:	8809883a 	mov	r4,r17
  811af4:	080ca880 	call	80ca88 <__sflush_r>
  811af8:	1025883a 	mov	r18,r2
  811afc:	80800b17 	ldw	r2,44(r16)
  811b00:	10000426 	beq	r2,zero,811b14 <_fclose_r+0x78>
  811b04:	81400717 	ldw	r5,28(r16)
  811b08:	8809883a 	mov	r4,r17
  811b0c:	103ee83a 	callr	r2
  811b10:	10001616 	blt	r2,zero,811b6c <_fclose_r+0xd0>
  811b14:	8080030b 	ldhu	r2,12(r16)
  811b18:	1080200c 	andi	r2,r2,128
  811b1c:	1000151e 	bne	r2,zero,811b74 <_fclose_r+0xd8>
  811b20:	81400c17 	ldw	r5,48(r16)
  811b24:	28000526 	beq	r5,zero,811b3c <_fclose_r+0xa0>
  811b28:	80801004 	addi	r2,r16,64
  811b2c:	28800226 	beq	r5,r2,811b38 <_fclose_r+0x9c>
  811b30:	8809883a 	mov	r4,r17
  811b34:	080d1f40 	call	80d1f4 <_free_r>
  811b38:	80000c15 	stw	zero,48(r16)
  811b3c:	81401117 	ldw	r5,68(r16)
  811b40:	28000326 	beq	r5,zero,811b50 <_fclose_r+0xb4>
  811b44:	8809883a 	mov	r4,r17
  811b48:	080d1f40 	call	80d1f4 <_free_r>
  811b4c:	80001115 	stw	zero,68(r16)
  811b50:	080d0900 	call	80d090 <__sfp_lock_acquire>
  811b54:	8000030d 	sth	zero,12(r16)
  811b58:	080d0940 	call	80d094 <__sfp_lock_release>
  811b5c:	9005883a 	mov	r2,r18
  811b60:	003fdc06 	br	811ad4 <__alt_data_end+0xff811ad4>
  811b64:	080d0800 	call	80d080 <__sinit>
  811b68:	003fd706 	br	811ac8 <__alt_data_end+0xff811ac8>
  811b6c:	04bfffc4 	movi	r18,-1
  811b70:	003fe806 	br	811b14 <__alt_data_end+0xff811b14>
  811b74:	81400417 	ldw	r5,16(r16)
  811b78:	8809883a 	mov	r4,r17
  811b7c:	080d1f40 	call	80d1f4 <_free_r>
  811b80:	003fe706 	br	811b20 <__alt_data_end+0xff811b20>
  811b84:	0005883a 	mov	r2,zero
  811b88:	f800283a 	ret

00811b8c <fclose>:
  811b8c:	00802074 	movhi	r2,129
  811b90:	109df704 	addi	r2,r2,30684
  811b94:	200b883a 	mov	r5,r4
  811b98:	11000017 	ldw	r4,0(r2)
  811b9c:	0811a9c1 	jmpi	811a9c <_fclose_r>

00811ba0 <__fputwc>:
  811ba0:	defff804 	addi	sp,sp,-32
  811ba4:	dcc00415 	stw	r19,16(sp)
  811ba8:	dc800315 	stw	r18,12(sp)
  811bac:	dc000115 	stw	r16,4(sp)
  811bb0:	dfc00715 	stw	ra,28(sp)
  811bb4:	dd400615 	stw	r21,24(sp)
  811bb8:	dd000515 	stw	r20,20(sp)
  811bbc:	dc400215 	stw	r17,8(sp)
  811bc0:	2027883a 	mov	r19,r4
  811bc4:	2825883a 	mov	r18,r5
  811bc8:	3021883a 	mov	r16,r6
  811bcc:	080dbd00 	call	80dbd0 <__locale_mb_cur_max>
  811bd0:	00c00044 	movi	r3,1
  811bd4:	10c03e26 	beq	r2,r3,811cd0 <__fputwc+0x130>
  811bd8:	81c01704 	addi	r7,r16,92
  811bdc:	900d883a 	mov	r6,r18
  811be0:	d80b883a 	mov	r5,sp
  811be4:	9809883a 	mov	r4,r19
  811be8:	08120700 	call	812070 <_wcrtomb_r>
  811bec:	1029883a 	mov	r20,r2
  811bf0:	00bfffc4 	movi	r2,-1
  811bf4:	a0802026 	beq	r20,r2,811c78 <__fputwc+0xd8>
  811bf8:	d9400003 	ldbu	r5,0(sp)
  811bfc:	a0001c26 	beq	r20,zero,811c70 <__fputwc+0xd0>
  811c00:	0023883a 	mov	r17,zero
  811c04:	05400284 	movi	r21,10
  811c08:	00000906 	br	811c30 <__fputwc+0x90>
  811c0c:	80800017 	ldw	r2,0(r16)
  811c10:	11400005 	stb	r5,0(r2)
  811c14:	80c00017 	ldw	r3,0(r16)
  811c18:	18c00044 	addi	r3,r3,1
  811c1c:	80c00015 	stw	r3,0(r16)
  811c20:	8c400044 	addi	r17,r17,1
  811c24:	dc45883a 	add	r2,sp,r17
  811c28:	8d00112e 	bgeu	r17,r20,811c70 <__fputwc+0xd0>
  811c2c:	11400003 	ldbu	r5,0(r2)
  811c30:	80c00217 	ldw	r3,8(r16)
  811c34:	18ffffc4 	addi	r3,r3,-1
  811c38:	80c00215 	stw	r3,8(r16)
  811c3c:	183ff30e 	bge	r3,zero,811c0c <__alt_data_end+0xff811c0c>
  811c40:	80800617 	ldw	r2,24(r16)
  811c44:	18801916 	blt	r3,r2,811cac <__fputwc+0x10c>
  811c48:	80800017 	ldw	r2,0(r16)
  811c4c:	11400005 	stb	r5,0(r2)
  811c50:	80800017 	ldw	r2,0(r16)
  811c54:	10c00003 	ldbu	r3,0(r2)
  811c58:	10800044 	addi	r2,r2,1
  811c5c:	1d402326 	beq	r3,r21,811cec <__fputwc+0x14c>
  811c60:	80800015 	stw	r2,0(r16)
  811c64:	8c400044 	addi	r17,r17,1
  811c68:	dc45883a 	add	r2,sp,r17
  811c6c:	8d3fef36 	bltu	r17,r20,811c2c <__alt_data_end+0xff811c2c>
  811c70:	9005883a 	mov	r2,r18
  811c74:	00000406 	br	811c88 <__fputwc+0xe8>
  811c78:	80c0030b 	ldhu	r3,12(r16)
  811c7c:	a005883a 	mov	r2,r20
  811c80:	18c01014 	ori	r3,r3,64
  811c84:	80c0030d 	sth	r3,12(r16)
  811c88:	dfc00717 	ldw	ra,28(sp)
  811c8c:	dd400617 	ldw	r21,24(sp)
  811c90:	dd000517 	ldw	r20,20(sp)
  811c94:	dcc00417 	ldw	r19,16(sp)
  811c98:	dc800317 	ldw	r18,12(sp)
  811c9c:	dc400217 	ldw	r17,8(sp)
  811ca0:	dc000117 	ldw	r16,4(sp)
  811ca4:	dec00804 	addi	sp,sp,32
  811ca8:	f800283a 	ret
  811cac:	800d883a 	mov	r6,r16
  811cb0:	29403fcc 	andi	r5,r5,255
  811cb4:	9809883a 	mov	r4,r19
  811cb8:	0811f180 	call	811f18 <__swbuf_r>
  811cbc:	10bfffe0 	cmpeqi	r2,r2,-1
  811cc0:	10803fcc 	andi	r2,r2,255
  811cc4:	103fd626 	beq	r2,zero,811c20 <__alt_data_end+0xff811c20>
  811cc8:	00bfffc4 	movi	r2,-1
  811ccc:	003fee06 	br	811c88 <__alt_data_end+0xff811c88>
  811cd0:	90ffffc4 	addi	r3,r18,-1
  811cd4:	01003f84 	movi	r4,254
  811cd8:	20ffbf36 	bltu	r4,r3,811bd8 <__alt_data_end+0xff811bd8>
  811cdc:	900b883a 	mov	r5,r18
  811ce0:	dc800005 	stb	r18,0(sp)
  811ce4:	1029883a 	mov	r20,r2
  811ce8:	003fc506 	br	811c00 <__alt_data_end+0xff811c00>
  811cec:	800d883a 	mov	r6,r16
  811cf0:	a80b883a 	mov	r5,r21
  811cf4:	9809883a 	mov	r4,r19
  811cf8:	0811f180 	call	811f18 <__swbuf_r>
  811cfc:	10bfffe0 	cmpeqi	r2,r2,-1
  811d00:	003fef06 	br	811cc0 <__alt_data_end+0xff811cc0>

00811d04 <_fputwc_r>:
  811d04:	3080030b 	ldhu	r2,12(r6)
  811d08:	10c8000c 	andi	r3,r2,8192
  811d0c:	1800051e 	bne	r3,zero,811d24 <_fputwc_r+0x20>
  811d10:	30c01917 	ldw	r3,100(r6)
  811d14:	10880014 	ori	r2,r2,8192
  811d18:	3080030d 	sth	r2,12(r6)
  811d1c:	18880014 	ori	r2,r3,8192
  811d20:	30801915 	stw	r2,100(r6)
  811d24:	0811ba01 	jmpi	811ba0 <__fputwc>

00811d28 <fputwc>:
  811d28:	00802074 	movhi	r2,129
  811d2c:	defffc04 	addi	sp,sp,-16
  811d30:	109df704 	addi	r2,r2,30684
  811d34:	dc000115 	stw	r16,4(sp)
  811d38:	14000017 	ldw	r16,0(r2)
  811d3c:	dc400215 	stw	r17,8(sp)
  811d40:	dfc00315 	stw	ra,12(sp)
  811d44:	2023883a 	mov	r17,r4
  811d48:	80000226 	beq	r16,zero,811d54 <fputwc+0x2c>
  811d4c:	80800e17 	ldw	r2,56(r16)
  811d50:	10001026 	beq	r2,zero,811d94 <fputwc+0x6c>
  811d54:	2880030b 	ldhu	r2,12(r5)
  811d58:	10c8000c 	andi	r3,r2,8192
  811d5c:	1800051e 	bne	r3,zero,811d74 <fputwc+0x4c>
  811d60:	28c01917 	ldw	r3,100(r5)
  811d64:	10880014 	ori	r2,r2,8192
  811d68:	2880030d 	sth	r2,12(r5)
  811d6c:	18880014 	ori	r2,r3,8192
  811d70:	28801915 	stw	r2,100(r5)
  811d74:	280d883a 	mov	r6,r5
  811d78:	8009883a 	mov	r4,r16
  811d7c:	880b883a 	mov	r5,r17
  811d80:	dfc00317 	ldw	ra,12(sp)
  811d84:	dc400217 	ldw	r17,8(sp)
  811d88:	dc000117 	ldw	r16,4(sp)
  811d8c:	dec00404 	addi	sp,sp,16
  811d90:	0811ba01 	jmpi	811ba0 <__fputwc>
  811d94:	8009883a 	mov	r4,r16
  811d98:	d9400015 	stw	r5,0(sp)
  811d9c:	080d0800 	call	80d080 <__sinit>
  811da0:	d9400017 	ldw	r5,0(sp)
  811da4:	003feb06 	br	811d54 <__alt_data_end+0xff811d54>

00811da8 <_fstat_r>:
  811da8:	defffd04 	addi	sp,sp,-12
  811dac:	2805883a 	mov	r2,r5
  811db0:	dc000015 	stw	r16,0(sp)
  811db4:	040020b4 	movhi	r16,130
  811db8:	dc400115 	stw	r17,4(sp)
  811dbc:	8424c904 	addi	r16,r16,-27868
  811dc0:	2023883a 	mov	r17,r4
  811dc4:	300b883a 	mov	r5,r6
  811dc8:	1009883a 	mov	r4,r2
  811dcc:	dfc00215 	stw	ra,8(sp)
  811dd0:	80000015 	stw	zero,0(r16)
  811dd4:	08130180 	call	813018 <fstat>
  811dd8:	00ffffc4 	movi	r3,-1
  811ddc:	10c00526 	beq	r2,r3,811df4 <_fstat_r+0x4c>
  811de0:	dfc00217 	ldw	ra,8(sp)
  811de4:	dc400117 	ldw	r17,4(sp)
  811de8:	dc000017 	ldw	r16,0(sp)
  811dec:	dec00304 	addi	sp,sp,12
  811df0:	f800283a 	ret
  811df4:	80c00017 	ldw	r3,0(r16)
  811df8:	183ff926 	beq	r3,zero,811de0 <__alt_data_end+0xff811de0>
  811dfc:	88c00015 	stw	r3,0(r17)
  811e00:	003ff706 	br	811de0 <__alt_data_end+0xff811de0>

00811e04 <_isatty_r>:
  811e04:	defffd04 	addi	sp,sp,-12
  811e08:	dc000015 	stw	r16,0(sp)
  811e0c:	040020b4 	movhi	r16,130
  811e10:	dc400115 	stw	r17,4(sp)
  811e14:	8424c904 	addi	r16,r16,-27868
  811e18:	2023883a 	mov	r17,r4
  811e1c:	2809883a 	mov	r4,r5
  811e20:	dfc00215 	stw	ra,8(sp)
  811e24:	80000015 	stw	zero,0(r16)
  811e28:	08131040 	call	813104 <isatty>
  811e2c:	00ffffc4 	movi	r3,-1
  811e30:	10c00526 	beq	r2,r3,811e48 <_isatty_r+0x44>
  811e34:	dfc00217 	ldw	ra,8(sp)
  811e38:	dc400117 	ldw	r17,4(sp)
  811e3c:	dc000017 	ldw	r16,0(sp)
  811e40:	dec00304 	addi	sp,sp,12
  811e44:	f800283a 	ret
  811e48:	80c00017 	ldw	r3,0(r16)
  811e4c:	183ff926 	beq	r3,zero,811e34 <__alt_data_end+0xff811e34>
  811e50:	88c00015 	stw	r3,0(r17)
  811e54:	003ff706 	br	811e34 <__alt_data_end+0xff811e34>

00811e58 <_lseek_r>:
  811e58:	defffd04 	addi	sp,sp,-12
  811e5c:	2805883a 	mov	r2,r5
  811e60:	dc000015 	stw	r16,0(sp)
  811e64:	040020b4 	movhi	r16,130
  811e68:	dc400115 	stw	r17,4(sp)
  811e6c:	300b883a 	mov	r5,r6
  811e70:	8424c904 	addi	r16,r16,-27868
  811e74:	2023883a 	mov	r17,r4
  811e78:	380d883a 	mov	r6,r7
  811e7c:	1009883a 	mov	r4,r2
  811e80:	dfc00215 	stw	ra,8(sp)
  811e84:	80000015 	stw	zero,0(r16)
  811e88:	08132d00 	call	8132d0 <lseek>
  811e8c:	00ffffc4 	movi	r3,-1
  811e90:	10c00526 	beq	r2,r3,811ea8 <_lseek_r+0x50>
  811e94:	dfc00217 	ldw	ra,8(sp)
  811e98:	dc400117 	ldw	r17,4(sp)
  811e9c:	dc000017 	ldw	r16,0(sp)
  811ea0:	dec00304 	addi	sp,sp,12
  811ea4:	f800283a 	ret
  811ea8:	80c00017 	ldw	r3,0(r16)
  811eac:	183ff926 	beq	r3,zero,811e94 <__alt_data_end+0xff811e94>
  811eb0:	88c00015 	stw	r3,0(r17)
  811eb4:	003ff706 	br	811e94 <__alt_data_end+0xff811e94>

00811eb8 <_read_r>:
  811eb8:	defffd04 	addi	sp,sp,-12
  811ebc:	2805883a 	mov	r2,r5
  811ec0:	dc000015 	stw	r16,0(sp)
  811ec4:	040020b4 	movhi	r16,130
  811ec8:	dc400115 	stw	r17,4(sp)
  811ecc:	300b883a 	mov	r5,r6
  811ed0:	8424c904 	addi	r16,r16,-27868
  811ed4:	2023883a 	mov	r17,r4
  811ed8:	380d883a 	mov	r6,r7
  811edc:	1009883a 	mov	r4,r2
  811ee0:	dfc00215 	stw	ra,8(sp)
  811ee4:	80000015 	stw	zero,0(r16)
  811ee8:	08134e00 	call	8134e0 <read>
  811eec:	00ffffc4 	movi	r3,-1
  811ef0:	10c00526 	beq	r2,r3,811f08 <_read_r+0x50>
  811ef4:	dfc00217 	ldw	ra,8(sp)
  811ef8:	dc400117 	ldw	r17,4(sp)
  811efc:	dc000017 	ldw	r16,0(sp)
  811f00:	dec00304 	addi	sp,sp,12
  811f04:	f800283a 	ret
  811f08:	80c00017 	ldw	r3,0(r16)
  811f0c:	183ff926 	beq	r3,zero,811ef4 <__alt_data_end+0xff811ef4>
  811f10:	88c00015 	stw	r3,0(r17)
  811f14:	003ff706 	br	811ef4 <__alt_data_end+0xff811ef4>

00811f18 <__swbuf_r>:
  811f18:	defffb04 	addi	sp,sp,-20
  811f1c:	dcc00315 	stw	r19,12(sp)
  811f20:	dc800215 	stw	r18,8(sp)
  811f24:	dc000015 	stw	r16,0(sp)
  811f28:	dfc00415 	stw	ra,16(sp)
  811f2c:	dc400115 	stw	r17,4(sp)
  811f30:	2025883a 	mov	r18,r4
  811f34:	2827883a 	mov	r19,r5
  811f38:	3021883a 	mov	r16,r6
  811f3c:	20000226 	beq	r4,zero,811f48 <__swbuf_r+0x30>
  811f40:	20800e17 	ldw	r2,56(r4)
  811f44:	10004226 	beq	r2,zero,812050 <__swbuf_r+0x138>
  811f48:	80800617 	ldw	r2,24(r16)
  811f4c:	8100030b 	ldhu	r4,12(r16)
  811f50:	80800215 	stw	r2,8(r16)
  811f54:	2080020c 	andi	r2,r4,8
  811f58:	10003626 	beq	r2,zero,812034 <__swbuf_r+0x11c>
  811f5c:	80c00417 	ldw	r3,16(r16)
  811f60:	18003426 	beq	r3,zero,812034 <__swbuf_r+0x11c>
  811f64:	2088000c 	andi	r2,r4,8192
  811f68:	9c403fcc 	andi	r17,r19,255
  811f6c:	10001a26 	beq	r2,zero,811fd8 <__swbuf_r+0xc0>
  811f70:	80800017 	ldw	r2,0(r16)
  811f74:	81000517 	ldw	r4,20(r16)
  811f78:	10c7c83a 	sub	r3,r2,r3
  811f7c:	1900200e 	bge	r3,r4,812000 <__swbuf_r+0xe8>
  811f80:	18c00044 	addi	r3,r3,1
  811f84:	81000217 	ldw	r4,8(r16)
  811f88:	11400044 	addi	r5,r2,1
  811f8c:	81400015 	stw	r5,0(r16)
  811f90:	213fffc4 	addi	r4,r4,-1
  811f94:	81000215 	stw	r4,8(r16)
  811f98:	14c00005 	stb	r19,0(r2)
  811f9c:	80800517 	ldw	r2,20(r16)
  811fa0:	10c01e26 	beq	r2,r3,81201c <__swbuf_r+0x104>
  811fa4:	8080030b 	ldhu	r2,12(r16)
  811fa8:	1080004c 	andi	r2,r2,1
  811fac:	10000226 	beq	r2,zero,811fb8 <__swbuf_r+0xa0>
  811fb0:	00800284 	movi	r2,10
  811fb4:	88801926 	beq	r17,r2,81201c <__swbuf_r+0x104>
  811fb8:	8805883a 	mov	r2,r17
  811fbc:	dfc00417 	ldw	ra,16(sp)
  811fc0:	dcc00317 	ldw	r19,12(sp)
  811fc4:	dc800217 	ldw	r18,8(sp)
  811fc8:	dc400117 	ldw	r17,4(sp)
  811fcc:	dc000017 	ldw	r16,0(sp)
  811fd0:	dec00504 	addi	sp,sp,20
  811fd4:	f800283a 	ret
  811fd8:	81401917 	ldw	r5,100(r16)
  811fdc:	00b7ffc4 	movi	r2,-8193
  811fe0:	21080014 	ori	r4,r4,8192
  811fe4:	2884703a 	and	r2,r5,r2
  811fe8:	80801915 	stw	r2,100(r16)
  811fec:	80800017 	ldw	r2,0(r16)
  811ff0:	8100030d 	sth	r4,12(r16)
  811ff4:	81000517 	ldw	r4,20(r16)
  811ff8:	10c7c83a 	sub	r3,r2,r3
  811ffc:	193fe016 	blt	r3,r4,811f80 <__alt_data_end+0xff811f80>
  812000:	800b883a 	mov	r5,r16
  812004:	9009883a 	mov	r4,r18
  812008:	080cca40 	call	80cca4 <_fflush_r>
  81200c:	1000071e 	bne	r2,zero,81202c <__swbuf_r+0x114>
  812010:	80800017 	ldw	r2,0(r16)
  812014:	00c00044 	movi	r3,1
  812018:	003fda06 	br	811f84 <__alt_data_end+0xff811f84>
  81201c:	800b883a 	mov	r5,r16
  812020:	9009883a 	mov	r4,r18
  812024:	080cca40 	call	80cca4 <_fflush_r>
  812028:	103fe326 	beq	r2,zero,811fb8 <__alt_data_end+0xff811fb8>
  81202c:	00bfffc4 	movi	r2,-1
  812030:	003fe206 	br	811fbc <__alt_data_end+0xff811fbc>
  812034:	800b883a 	mov	r5,r16
  812038:	9009883a 	mov	r4,r18
  81203c:	080b0ac0 	call	80b0ac <__swsetup_r>
  812040:	103ffa1e 	bne	r2,zero,81202c <__alt_data_end+0xff81202c>
  812044:	8100030b 	ldhu	r4,12(r16)
  812048:	80c00417 	ldw	r3,16(r16)
  81204c:	003fc506 	br	811f64 <__alt_data_end+0xff811f64>
  812050:	080d0800 	call	80d080 <__sinit>
  812054:	003fbc06 	br	811f48 <__alt_data_end+0xff811f48>

00812058 <__swbuf>:
  812058:	00802074 	movhi	r2,129
  81205c:	109df704 	addi	r2,r2,30684
  812060:	280d883a 	mov	r6,r5
  812064:	200b883a 	mov	r5,r4
  812068:	11000017 	ldw	r4,0(r2)
  81206c:	0811f181 	jmpi	811f18 <__swbuf_r>

00812070 <_wcrtomb_r>:
  812070:	defff604 	addi	sp,sp,-40
  812074:	00802074 	movhi	r2,129
  812078:	dc800815 	stw	r18,32(sp)
  81207c:	dc400715 	stw	r17,28(sp)
  812080:	dc000615 	stw	r16,24(sp)
  812084:	109dfb04 	addi	r2,r2,30700
  812088:	dfc00915 	stw	ra,36(sp)
  81208c:	2021883a 	mov	r16,r4
  812090:	3823883a 	mov	r17,r7
  812094:	14800017 	ldw	r18,0(r2)
  812098:	28001426 	beq	r5,zero,8120ec <_wcrtomb_r+0x7c>
  81209c:	d9400415 	stw	r5,16(sp)
  8120a0:	d9800515 	stw	r6,20(sp)
  8120a4:	080dbc40 	call	80dbc4 <__locale_charset>
  8120a8:	d9800517 	ldw	r6,20(sp)
  8120ac:	d9400417 	ldw	r5,16(sp)
  8120b0:	100f883a 	mov	r7,r2
  8120b4:	dc400015 	stw	r17,0(sp)
  8120b8:	8009883a 	mov	r4,r16
  8120bc:	903ee83a 	callr	r18
  8120c0:	00ffffc4 	movi	r3,-1
  8120c4:	10c0031e 	bne	r2,r3,8120d4 <_wcrtomb_r+0x64>
  8120c8:	88000015 	stw	zero,0(r17)
  8120cc:	00c02284 	movi	r3,138
  8120d0:	80c00015 	stw	r3,0(r16)
  8120d4:	dfc00917 	ldw	ra,36(sp)
  8120d8:	dc800817 	ldw	r18,32(sp)
  8120dc:	dc400717 	ldw	r17,28(sp)
  8120e0:	dc000617 	ldw	r16,24(sp)
  8120e4:	dec00a04 	addi	sp,sp,40
  8120e8:	f800283a 	ret
  8120ec:	080dbc40 	call	80dbc4 <__locale_charset>
  8120f0:	100f883a 	mov	r7,r2
  8120f4:	dc400015 	stw	r17,0(sp)
  8120f8:	000d883a 	mov	r6,zero
  8120fc:	d9400104 	addi	r5,sp,4
  812100:	8009883a 	mov	r4,r16
  812104:	903ee83a 	callr	r18
  812108:	003fed06 	br	8120c0 <__alt_data_end+0xff8120c0>

0081210c <wcrtomb>:
  81210c:	defff604 	addi	sp,sp,-40
  812110:	00802074 	movhi	r2,129
  812114:	dc800615 	stw	r18,24(sp)
  812118:	dc400515 	stw	r17,20(sp)
  81211c:	109df704 	addi	r2,r2,30684
  812120:	dfc00915 	stw	ra,36(sp)
  812124:	dd000815 	stw	r20,32(sp)
  812128:	dcc00715 	stw	r19,28(sp)
  81212c:	dc000415 	stw	r16,16(sp)
  812130:	3025883a 	mov	r18,r6
  812134:	14400017 	ldw	r17,0(r2)
  812138:	20001926 	beq	r4,zero,8121a0 <wcrtomb+0x94>
  81213c:	00802074 	movhi	r2,129
  812140:	109dfb04 	addi	r2,r2,30700
  812144:	15000017 	ldw	r20,0(r2)
  812148:	2021883a 	mov	r16,r4
  81214c:	2827883a 	mov	r19,r5
  812150:	080dbc40 	call	80dbc4 <__locale_charset>
  812154:	100f883a 	mov	r7,r2
  812158:	dc800015 	stw	r18,0(sp)
  81215c:	980d883a 	mov	r6,r19
  812160:	800b883a 	mov	r5,r16
  812164:	8809883a 	mov	r4,r17
  812168:	a03ee83a 	callr	r20
  81216c:	00ffffc4 	movi	r3,-1
  812170:	10c0031e 	bne	r2,r3,812180 <wcrtomb+0x74>
  812174:	90000015 	stw	zero,0(r18)
  812178:	00c02284 	movi	r3,138
  81217c:	88c00015 	stw	r3,0(r17)
  812180:	dfc00917 	ldw	ra,36(sp)
  812184:	dd000817 	ldw	r20,32(sp)
  812188:	dcc00717 	ldw	r19,28(sp)
  81218c:	dc800617 	ldw	r18,24(sp)
  812190:	dc400517 	ldw	r17,20(sp)
  812194:	dc000417 	ldw	r16,16(sp)
  812198:	dec00a04 	addi	sp,sp,40
  81219c:	f800283a 	ret
  8121a0:	00802074 	movhi	r2,129
  8121a4:	109dfb04 	addi	r2,r2,30700
  8121a8:	14000017 	ldw	r16,0(r2)
  8121ac:	080dbc40 	call	80dbc4 <__locale_charset>
  8121b0:	100f883a 	mov	r7,r2
  8121b4:	dc800015 	stw	r18,0(sp)
  8121b8:	000d883a 	mov	r6,zero
  8121bc:	d9400104 	addi	r5,sp,4
  8121c0:	8809883a 	mov	r4,r17
  8121c4:	803ee83a 	callr	r16
  8121c8:	003fe806 	br	81216c <__alt_data_end+0xff81216c>

008121cc <__ascii_wctomb>:
  8121cc:	28000526 	beq	r5,zero,8121e4 <__ascii_wctomb+0x18>
  8121d0:	00803fc4 	movi	r2,255
  8121d4:	11800536 	bltu	r2,r6,8121ec <__ascii_wctomb+0x20>
  8121d8:	29800005 	stb	r6,0(r5)
  8121dc:	00800044 	movi	r2,1
  8121e0:	f800283a 	ret
  8121e4:	0005883a 	mov	r2,zero
  8121e8:	f800283a 	ret
  8121ec:	00802284 	movi	r2,138
  8121f0:	20800015 	stw	r2,0(r4)
  8121f4:	00bfffc4 	movi	r2,-1
  8121f8:	f800283a 	ret

008121fc <_wctomb_r>:
  8121fc:	00802074 	movhi	r2,129
  812200:	defff904 	addi	sp,sp,-28
  812204:	109dfb04 	addi	r2,r2,30700
  812208:	dfc00615 	stw	ra,24(sp)
  81220c:	dc400515 	stw	r17,20(sp)
  812210:	dc000415 	stw	r16,16(sp)
  812214:	3823883a 	mov	r17,r7
  812218:	14000017 	ldw	r16,0(r2)
  81221c:	d9000115 	stw	r4,4(sp)
  812220:	d9400215 	stw	r5,8(sp)
  812224:	d9800315 	stw	r6,12(sp)
  812228:	080dbc40 	call	80dbc4 <__locale_charset>
  81222c:	d9800317 	ldw	r6,12(sp)
  812230:	d9400217 	ldw	r5,8(sp)
  812234:	d9000117 	ldw	r4,4(sp)
  812238:	100f883a 	mov	r7,r2
  81223c:	dc400015 	stw	r17,0(sp)
  812240:	803ee83a 	callr	r16
  812244:	dfc00617 	ldw	ra,24(sp)
  812248:	dc400517 	ldw	r17,20(sp)
  81224c:	dc000417 	ldw	r16,16(sp)
  812250:	dec00704 	addi	sp,sp,28
  812254:	f800283a 	ret

00812258 <__udivdi3>:
  812258:	defff504 	addi	sp,sp,-44
  81225c:	dcc00415 	stw	r19,16(sp)
  812260:	dc000115 	stw	r16,4(sp)
  812264:	dfc00a15 	stw	ra,40(sp)
  812268:	df000915 	stw	fp,36(sp)
  81226c:	ddc00815 	stw	r23,32(sp)
  812270:	dd800715 	stw	r22,28(sp)
  812274:	dd400615 	stw	r21,24(sp)
  812278:	dd000515 	stw	r20,20(sp)
  81227c:	dc800315 	stw	r18,12(sp)
  812280:	dc400215 	stw	r17,8(sp)
  812284:	2027883a 	mov	r19,r4
  812288:	2821883a 	mov	r16,r5
  81228c:	3800411e 	bne	r7,zero,812394 <__udivdi3+0x13c>
  812290:	3023883a 	mov	r17,r6
  812294:	2025883a 	mov	r18,r4
  812298:	2980522e 	bgeu	r5,r6,8123e4 <__udivdi3+0x18c>
  81229c:	00bfffd4 	movui	r2,65535
  8122a0:	282d883a 	mov	r22,r5
  8122a4:	1180a836 	bltu	r2,r6,812548 <__udivdi3+0x2f0>
  8122a8:	00803fc4 	movi	r2,255
  8122ac:	1185803a 	cmpltu	r2,r2,r6
  8122b0:	100490fa 	slli	r2,r2,3
  8122b4:	3086d83a 	srl	r3,r6,r2
  8122b8:	01002074 	movhi	r4,129
  8122bc:	21168b04 	addi	r4,r4,23084
  8122c0:	20c7883a 	add	r3,r4,r3
  8122c4:	18c00003 	ldbu	r3,0(r3)
  8122c8:	1885883a 	add	r2,r3,r2
  8122cc:	00c00804 	movi	r3,32
  8122d0:	1887c83a 	sub	r3,r3,r2
  8122d4:	18000526 	beq	r3,zero,8122ec <__udivdi3+0x94>
  8122d8:	80e0983a 	sll	r16,r16,r3
  8122dc:	9884d83a 	srl	r2,r19,r2
  8122e0:	30e2983a 	sll	r17,r6,r3
  8122e4:	98e4983a 	sll	r18,r19,r3
  8122e8:	142cb03a 	or	r22,r2,r16
  8122ec:	882ad43a 	srli	r21,r17,16
  8122f0:	b009883a 	mov	r4,r22
  8122f4:	8d3fffcc 	andi	r20,r17,65535
  8122f8:	a80b883a 	mov	r5,r21
  8122fc:	0804ea00 	call	804ea0 <__umodsi3>
  812300:	b009883a 	mov	r4,r22
  812304:	a80b883a 	mov	r5,r21
  812308:	1027883a 	mov	r19,r2
  81230c:	0804e3c0 	call	804e3c <__udivsi3>
  812310:	102d883a 	mov	r22,r2
  812314:	9826943a 	slli	r19,r19,16
  812318:	9004d43a 	srli	r2,r18,16
  81231c:	a5a1383a 	mul	r16,r20,r22
  812320:	14c4b03a 	or	r2,r2,r19
  812324:	1400052e 	bgeu	r2,r16,81233c <__udivdi3+0xe4>
  812328:	1445883a 	add	r2,r2,r17
  81232c:	b0ffffc4 	addi	r3,r22,-1
  812330:	14400136 	bltu	r2,r17,812338 <__udivdi3+0xe0>
  812334:	14012336 	bltu	r2,r16,8127c4 <__udivdi3+0x56c>
  812338:	182d883a 	mov	r22,r3
  81233c:	1421c83a 	sub	r16,r2,r16
  812340:	a80b883a 	mov	r5,r21
  812344:	8009883a 	mov	r4,r16
  812348:	0804ea00 	call	804ea0 <__umodsi3>
  81234c:	1027883a 	mov	r19,r2
  812350:	a80b883a 	mov	r5,r21
  812354:	8009883a 	mov	r4,r16
  812358:	0804e3c0 	call	804e3c <__udivsi3>
  81235c:	9826943a 	slli	r19,r19,16
  812360:	a0a9383a 	mul	r20,r20,r2
  812364:	94bfffcc 	andi	r18,r18,65535
  812368:	94e4b03a 	or	r18,r18,r19
  81236c:	9500052e 	bgeu	r18,r20,812384 <__udivdi3+0x12c>
  812370:	8ca5883a 	add	r18,r17,r18
  812374:	10ffffc4 	addi	r3,r2,-1
  812378:	9440f136 	bltu	r18,r17,812740 <__udivdi3+0x4e8>
  81237c:	9500f02e 	bgeu	r18,r20,812740 <__udivdi3+0x4e8>
  812380:	10bfff84 	addi	r2,r2,-2
  812384:	b00c943a 	slli	r6,r22,16
  812388:	0007883a 	mov	r3,zero
  81238c:	3084b03a 	or	r2,r6,r2
  812390:	00005906 	br	8124f8 <__udivdi3+0x2a0>
  812394:	29c05636 	bltu	r5,r7,8124f0 <__udivdi3+0x298>
  812398:	00bfffd4 	movui	r2,65535
  81239c:	11c0622e 	bgeu	r2,r7,812528 <__udivdi3+0x2d0>
  8123a0:	00804034 	movhi	r2,256
  8123a4:	10bfffc4 	addi	r2,r2,-1
  8123a8:	11c0ee36 	bltu	r2,r7,812764 <__udivdi3+0x50c>
  8123ac:	00800404 	movi	r2,16
  8123b0:	3886d83a 	srl	r3,r7,r2
  8123b4:	01002074 	movhi	r4,129
  8123b8:	21168b04 	addi	r4,r4,23084
  8123bc:	20c7883a 	add	r3,r4,r3
  8123c0:	18c00003 	ldbu	r3,0(r3)
  8123c4:	05400804 	movi	r21,32
  8123c8:	1885883a 	add	r2,r3,r2
  8123cc:	a8abc83a 	sub	r21,r21,r2
  8123d0:	a800621e 	bne	r21,zero,81255c <__udivdi3+0x304>
  8123d4:	3c00e936 	bltu	r7,r16,81277c <__udivdi3+0x524>
  8123d8:	9985403a 	cmpgeu	r2,r19,r6
  8123dc:	0007883a 	mov	r3,zero
  8123e0:	00004506 	br	8124f8 <__udivdi3+0x2a0>
  8123e4:	3000041e 	bne	r6,zero,8123f8 <__udivdi3+0x1a0>
  8123e8:	000b883a 	mov	r5,zero
  8123ec:	01000044 	movi	r4,1
  8123f0:	0804e3c0 	call	804e3c <__udivsi3>
  8123f4:	1023883a 	mov	r17,r2
  8123f8:	00bfffd4 	movui	r2,65535
  8123fc:	14404e2e 	bgeu	r2,r17,812538 <__udivdi3+0x2e0>
  812400:	00804034 	movhi	r2,256
  812404:	10bfffc4 	addi	r2,r2,-1
  812408:	1440d836 	bltu	r2,r17,81276c <__udivdi3+0x514>
  81240c:	00800404 	movi	r2,16
  812410:	8886d83a 	srl	r3,r17,r2
  812414:	01002074 	movhi	r4,129
  812418:	21168b04 	addi	r4,r4,23084
  81241c:	20c7883a 	add	r3,r4,r3
  812420:	18c00003 	ldbu	r3,0(r3)
  812424:	1885883a 	add	r2,r3,r2
  812428:	00c00804 	movi	r3,32
  81242c:	1887c83a 	sub	r3,r3,r2
  812430:	18008f1e 	bne	r3,zero,812670 <__udivdi3+0x418>
  812434:	882ad43a 	srli	r21,r17,16
  812438:	8461c83a 	sub	r16,r16,r17
  81243c:	8d3fffcc 	andi	r20,r17,65535
  812440:	00c00044 	movi	r3,1
  812444:	8009883a 	mov	r4,r16
  812448:	a80b883a 	mov	r5,r21
  81244c:	d8c00015 	stw	r3,0(sp)
  812450:	0804ea00 	call	804ea0 <__umodsi3>
  812454:	8009883a 	mov	r4,r16
  812458:	a80b883a 	mov	r5,r21
  81245c:	1027883a 	mov	r19,r2
  812460:	0804e3c0 	call	804e3c <__udivsi3>
  812464:	9826943a 	slli	r19,r19,16
  812468:	9008d43a 	srli	r4,r18,16
  81246c:	1521383a 	mul	r16,r2,r20
  812470:	102d883a 	mov	r22,r2
  812474:	24c8b03a 	or	r4,r4,r19
  812478:	d8c00017 	ldw	r3,0(sp)
  81247c:	2400052e 	bgeu	r4,r16,812494 <__udivdi3+0x23c>
  812480:	2449883a 	add	r4,r4,r17
  812484:	b0bfffc4 	addi	r2,r22,-1
  812488:	24400136 	bltu	r4,r17,812490 <__udivdi3+0x238>
  81248c:	2400ca36 	bltu	r4,r16,8127b8 <__udivdi3+0x560>
  812490:	102d883a 	mov	r22,r2
  812494:	2421c83a 	sub	r16,r4,r16
  812498:	a80b883a 	mov	r5,r21
  81249c:	8009883a 	mov	r4,r16
  8124a0:	d8c00015 	stw	r3,0(sp)
  8124a4:	0804ea00 	call	804ea0 <__umodsi3>
  8124a8:	1027883a 	mov	r19,r2
  8124ac:	a80b883a 	mov	r5,r21
  8124b0:	8009883a 	mov	r4,r16
  8124b4:	0804e3c0 	call	804e3c <__udivsi3>
  8124b8:	9826943a 	slli	r19,r19,16
  8124bc:	1529383a 	mul	r20,r2,r20
  8124c0:	94bfffcc 	andi	r18,r18,65535
  8124c4:	94e4b03a 	or	r18,r18,r19
  8124c8:	d8c00017 	ldw	r3,0(sp)
  8124cc:	9500052e 	bgeu	r18,r20,8124e4 <__udivdi3+0x28c>
  8124d0:	8ca5883a 	add	r18,r17,r18
  8124d4:	113fffc4 	addi	r4,r2,-1
  8124d8:	94409736 	bltu	r18,r17,812738 <__udivdi3+0x4e0>
  8124dc:	9500962e 	bgeu	r18,r20,812738 <__udivdi3+0x4e0>
  8124e0:	10bfff84 	addi	r2,r2,-2
  8124e4:	b00c943a 	slli	r6,r22,16
  8124e8:	3084b03a 	or	r2,r6,r2
  8124ec:	00000206 	br	8124f8 <__udivdi3+0x2a0>
  8124f0:	0007883a 	mov	r3,zero
  8124f4:	0005883a 	mov	r2,zero
  8124f8:	dfc00a17 	ldw	ra,40(sp)
  8124fc:	df000917 	ldw	fp,36(sp)
  812500:	ddc00817 	ldw	r23,32(sp)
  812504:	dd800717 	ldw	r22,28(sp)
  812508:	dd400617 	ldw	r21,24(sp)
  81250c:	dd000517 	ldw	r20,20(sp)
  812510:	dcc00417 	ldw	r19,16(sp)
  812514:	dc800317 	ldw	r18,12(sp)
  812518:	dc400217 	ldw	r17,8(sp)
  81251c:	dc000117 	ldw	r16,4(sp)
  812520:	dec00b04 	addi	sp,sp,44
  812524:	f800283a 	ret
  812528:	00803fc4 	movi	r2,255
  81252c:	11c5803a 	cmpltu	r2,r2,r7
  812530:	100490fa 	slli	r2,r2,3
  812534:	003f9e06 	br	8123b0 <__alt_data_end+0xff8123b0>
  812538:	00803fc4 	movi	r2,255
  81253c:	1445803a 	cmpltu	r2,r2,r17
  812540:	100490fa 	slli	r2,r2,3
  812544:	003fb206 	br	812410 <__alt_data_end+0xff812410>
  812548:	00804034 	movhi	r2,256
  81254c:	10bfffc4 	addi	r2,r2,-1
  812550:	11808836 	bltu	r2,r6,812774 <__udivdi3+0x51c>
  812554:	00800404 	movi	r2,16
  812558:	003f5606 	br	8122b4 <__alt_data_end+0xff8122b4>
  81255c:	30aed83a 	srl	r23,r6,r2
  812560:	3d4e983a 	sll	r7,r7,r21
  812564:	80acd83a 	srl	r22,r16,r2
  812568:	9884d83a 	srl	r2,r19,r2
  81256c:	3deeb03a 	or	r23,r7,r23
  812570:	b824d43a 	srli	r18,r23,16
  812574:	8560983a 	sll	r16,r16,r21
  812578:	b009883a 	mov	r4,r22
  81257c:	900b883a 	mov	r5,r18
  812580:	3568983a 	sll	r20,r6,r21
  812584:	1420b03a 	or	r16,r2,r16
  812588:	0804ea00 	call	804ea0 <__umodsi3>
  81258c:	b009883a 	mov	r4,r22
  812590:	900b883a 	mov	r5,r18
  812594:	1023883a 	mov	r17,r2
  812598:	0804e3c0 	call	804e3c <__udivsi3>
  81259c:	8808943a 	slli	r4,r17,16
  8125a0:	bf3fffcc 	andi	fp,r23,65535
  8125a4:	8006d43a 	srli	r3,r16,16
  8125a8:	e0a3383a 	mul	r17,fp,r2
  8125ac:	100d883a 	mov	r6,r2
  8125b0:	1906b03a 	or	r3,r3,r4
  8125b4:	1c40042e 	bgeu	r3,r17,8125c8 <__udivdi3+0x370>
  8125b8:	1dc7883a 	add	r3,r3,r23
  8125bc:	10bfffc4 	addi	r2,r2,-1
  8125c0:	1dc0752e 	bgeu	r3,r23,812798 <__udivdi3+0x540>
  8125c4:	100d883a 	mov	r6,r2
  8125c8:	1c63c83a 	sub	r17,r3,r17
  8125cc:	900b883a 	mov	r5,r18
  8125d0:	8809883a 	mov	r4,r17
  8125d4:	d9800015 	stw	r6,0(sp)
  8125d8:	0804ea00 	call	804ea0 <__umodsi3>
  8125dc:	102d883a 	mov	r22,r2
  8125e0:	8809883a 	mov	r4,r17
  8125e4:	900b883a 	mov	r5,r18
  8125e8:	0804e3c0 	call	804e3c <__udivsi3>
  8125ec:	b02c943a 	slli	r22,r22,16
  8125f0:	e089383a 	mul	r4,fp,r2
  8125f4:	843fffcc 	andi	r16,r16,65535
  8125f8:	85a0b03a 	or	r16,r16,r22
  8125fc:	d9800017 	ldw	r6,0(sp)
  812600:	8100042e 	bgeu	r16,r4,812614 <__udivdi3+0x3bc>
  812604:	85e1883a 	add	r16,r16,r23
  812608:	10ffffc4 	addi	r3,r2,-1
  81260c:	85c05e2e 	bgeu	r16,r23,812788 <__udivdi3+0x530>
  812610:	1805883a 	mov	r2,r3
  812614:	300c943a 	slli	r6,r6,16
  812618:	a17fffcc 	andi	r5,r20,65535
  81261c:	a028d43a 	srli	r20,r20,16
  812620:	3084b03a 	or	r2,r6,r2
  812624:	10ffffcc 	andi	r3,r2,65535
  812628:	100cd43a 	srli	r6,r2,16
  81262c:	194f383a 	mul	r7,r3,r5
  812630:	1d07383a 	mul	r3,r3,r20
  812634:	314b383a 	mul	r5,r6,r5
  812638:	3810d43a 	srli	r8,r7,16
  81263c:	8121c83a 	sub	r16,r16,r4
  812640:	1947883a 	add	r3,r3,r5
  812644:	40c7883a 	add	r3,r8,r3
  812648:	350d383a 	mul	r6,r6,r20
  81264c:	1940022e 	bgeu	r3,r5,812658 <__udivdi3+0x400>
  812650:	01000074 	movhi	r4,1
  812654:	310d883a 	add	r6,r6,r4
  812658:	1828d43a 	srli	r20,r3,16
  81265c:	a18d883a 	add	r6,r20,r6
  812660:	81803e36 	bltu	r16,r6,81275c <__udivdi3+0x504>
  812664:	81803826 	beq	r16,r6,812748 <__udivdi3+0x4f0>
  812668:	0007883a 	mov	r3,zero
  81266c:	003fa206 	br	8124f8 <__alt_data_end+0xff8124f8>
  812670:	88e2983a 	sll	r17,r17,r3
  812674:	80a8d83a 	srl	r20,r16,r2
  812678:	80e0983a 	sll	r16,r16,r3
  81267c:	882ad43a 	srli	r21,r17,16
  812680:	9884d83a 	srl	r2,r19,r2
  812684:	a009883a 	mov	r4,r20
  812688:	a80b883a 	mov	r5,r21
  81268c:	142eb03a 	or	r23,r2,r16
  812690:	98e4983a 	sll	r18,r19,r3
  812694:	0804ea00 	call	804ea0 <__umodsi3>
  812698:	a009883a 	mov	r4,r20
  81269c:	a80b883a 	mov	r5,r21
  8126a0:	1021883a 	mov	r16,r2
  8126a4:	0804e3c0 	call	804e3c <__udivsi3>
  8126a8:	1039883a 	mov	fp,r2
  8126ac:	8d3fffcc 	andi	r20,r17,65535
  8126b0:	8020943a 	slli	r16,r16,16
  8126b4:	b804d43a 	srli	r2,r23,16
  8126b8:	a72d383a 	mul	r22,r20,fp
  8126bc:	1404b03a 	or	r2,r2,r16
  8126c0:	1580062e 	bgeu	r2,r22,8126dc <__udivdi3+0x484>
  8126c4:	1445883a 	add	r2,r2,r17
  8126c8:	e0ffffc4 	addi	r3,fp,-1
  8126cc:	14403836 	bltu	r2,r17,8127b0 <__udivdi3+0x558>
  8126d0:	1580372e 	bgeu	r2,r22,8127b0 <__udivdi3+0x558>
  8126d4:	e73fff84 	addi	fp,fp,-2
  8126d8:	1445883a 	add	r2,r2,r17
  8126dc:	15adc83a 	sub	r22,r2,r22
  8126e0:	a80b883a 	mov	r5,r21
  8126e4:	b009883a 	mov	r4,r22
  8126e8:	0804ea00 	call	804ea0 <__umodsi3>
  8126ec:	1027883a 	mov	r19,r2
  8126f0:	b009883a 	mov	r4,r22
  8126f4:	a80b883a 	mov	r5,r21
  8126f8:	0804e3c0 	call	804e3c <__udivsi3>
  8126fc:	9826943a 	slli	r19,r19,16
  812700:	a0a1383a 	mul	r16,r20,r2
  812704:	b93fffcc 	andi	r4,r23,65535
  812708:	24c8b03a 	or	r4,r4,r19
  81270c:	2400062e 	bgeu	r4,r16,812728 <__udivdi3+0x4d0>
  812710:	2449883a 	add	r4,r4,r17
  812714:	10ffffc4 	addi	r3,r2,-1
  812718:	24402336 	bltu	r4,r17,8127a8 <__udivdi3+0x550>
  81271c:	2400222e 	bgeu	r4,r16,8127a8 <__udivdi3+0x550>
  812720:	10bfff84 	addi	r2,r2,-2
  812724:	2449883a 	add	r4,r4,r17
  812728:	e038943a 	slli	fp,fp,16
  81272c:	2421c83a 	sub	r16,r4,r16
  812730:	e086b03a 	or	r3,fp,r2
  812734:	003f4306 	br	812444 <__alt_data_end+0xff812444>
  812738:	2005883a 	mov	r2,r4
  81273c:	003f6906 	br	8124e4 <__alt_data_end+0xff8124e4>
  812740:	1805883a 	mov	r2,r3
  812744:	003f0f06 	br	812384 <__alt_data_end+0xff812384>
  812748:	1806943a 	slli	r3,r3,16
  81274c:	9d66983a 	sll	r19,r19,r21
  812750:	39ffffcc 	andi	r7,r7,65535
  812754:	19c7883a 	add	r3,r3,r7
  812758:	98ffc32e 	bgeu	r19,r3,812668 <__alt_data_end+0xff812668>
  81275c:	10bfffc4 	addi	r2,r2,-1
  812760:	003fc106 	br	812668 <__alt_data_end+0xff812668>
  812764:	00800604 	movi	r2,24
  812768:	003f1106 	br	8123b0 <__alt_data_end+0xff8123b0>
  81276c:	00800604 	movi	r2,24
  812770:	003f2706 	br	812410 <__alt_data_end+0xff812410>
  812774:	00800604 	movi	r2,24
  812778:	003ece06 	br	8122b4 <__alt_data_end+0xff8122b4>
  81277c:	0007883a 	mov	r3,zero
  812780:	00800044 	movi	r2,1
  812784:	003f5c06 	br	8124f8 <__alt_data_end+0xff8124f8>
  812788:	813fa12e 	bgeu	r16,r4,812610 <__alt_data_end+0xff812610>
  81278c:	10bfff84 	addi	r2,r2,-2
  812790:	85e1883a 	add	r16,r16,r23
  812794:	003f9f06 	br	812614 <__alt_data_end+0xff812614>
  812798:	1c7f8a2e 	bgeu	r3,r17,8125c4 <__alt_data_end+0xff8125c4>
  81279c:	31bfff84 	addi	r6,r6,-2
  8127a0:	1dc7883a 	add	r3,r3,r23
  8127a4:	003f8806 	br	8125c8 <__alt_data_end+0xff8125c8>
  8127a8:	1805883a 	mov	r2,r3
  8127ac:	003fde06 	br	812728 <__alt_data_end+0xff812728>
  8127b0:	1839883a 	mov	fp,r3
  8127b4:	003fc906 	br	8126dc <__alt_data_end+0xff8126dc>
  8127b8:	b5bfff84 	addi	r22,r22,-2
  8127bc:	2449883a 	add	r4,r4,r17
  8127c0:	003f3406 	br	812494 <__alt_data_end+0xff812494>
  8127c4:	b5bfff84 	addi	r22,r22,-2
  8127c8:	1445883a 	add	r2,r2,r17
  8127cc:	003edb06 	br	81233c <__alt_data_end+0xff81233c>

008127d0 <__umoddi3>:
  8127d0:	defff404 	addi	sp,sp,-48
  8127d4:	df000a15 	stw	fp,40(sp)
  8127d8:	dc400315 	stw	r17,12(sp)
  8127dc:	dc000215 	stw	r16,8(sp)
  8127e0:	dfc00b15 	stw	ra,44(sp)
  8127e4:	ddc00915 	stw	r23,36(sp)
  8127e8:	dd800815 	stw	r22,32(sp)
  8127ec:	dd400715 	stw	r21,28(sp)
  8127f0:	dd000615 	stw	r20,24(sp)
  8127f4:	dcc00515 	stw	r19,20(sp)
  8127f8:	dc800415 	stw	r18,16(sp)
  8127fc:	2021883a 	mov	r16,r4
  812800:	2823883a 	mov	r17,r5
  812804:	2839883a 	mov	fp,r5
  812808:	38003c1e 	bne	r7,zero,8128fc <__umoddi3+0x12c>
  81280c:	3027883a 	mov	r19,r6
  812810:	2029883a 	mov	r20,r4
  812814:	2980512e 	bgeu	r5,r6,81295c <__umoddi3+0x18c>
  812818:	00bfffd4 	movui	r2,65535
  81281c:	11809a36 	bltu	r2,r6,812a88 <__umoddi3+0x2b8>
  812820:	01003fc4 	movi	r4,255
  812824:	2189803a 	cmpltu	r4,r4,r6
  812828:	200890fa 	slli	r4,r4,3
  81282c:	3104d83a 	srl	r2,r6,r4
  812830:	00c02074 	movhi	r3,129
  812834:	18d68b04 	addi	r3,r3,23084
  812838:	1885883a 	add	r2,r3,r2
  81283c:	10c00003 	ldbu	r3,0(r2)
  812840:	00800804 	movi	r2,32
  812844:	1909883a 	add	r4,r3,r4
  812848:	1125c83a 	sub	r18,r2,r4
  81284c:	90000526 	beq	r18,zero,812864 <__umoddi3+0x94>
  812850:	8ca2983a 	sll	r17,r17,r18
  812854:	8108d83a 	srl	r4,r16,r4
  812858:	34a6983a 	sll	r19,r6,r18
  81285c:	84a8983a 	sll	r20,r16,r18
  812860:	2478b03a 	or	fp,r4,r17
  812864:	982ed43a 	srli	r23,r19,16
  812868:	e009883a 	mov	r4,fp
  81286c:	9dbfffcc 	andi	r22,r19,65535
  812870:	b80b883a 	mov	r5,r23
  812874:	0804ea00 	call	804ea0 <__umodsi3>
  812878:	e009883a 	mov	r4,fp
  81287c:	b80b883a 	mov	r5,r23
  812880:	102b883a 	mov	r21,r2
  812884:	0804e3c0 	call	804e3c <__udivsi3>
  812888:	a806943a 	slli	r3,r21,16
  81288c:	a008d43a 	srli	r4,r20,16
  812890:	b085383a 	mul	r2,r22,r2
  812894:	20c8b03a 	or	r4,r4,r3
  812898:	2080032e 	bgeu	r4,r2,8128a8 <__umoddi3+0xd8>
  81289c:	24c9883a 	add	r4,r4,r19
  8128a0:	24c00136 	bltu	r4,r19,8128a8 <__umoddi3+0xd8>
  8128a4:	20811036 	bltu	r4,r2,812ce8 <__umoddi3+0x518>
  8128a8:	20abc83a 	sub	r21,r4,r2
  8128ac:	b80b883a 	mov	r5,r23
  8128b0:	a809883a 	mov	r4,r21
  8128b4:	0804ea00 	call	804ea0 <__umodsi3>
  8128b8:	1023883a 	mov	r17,r2
  8128bc:	b80b883a 	mov	r5,r23
  8128c0:	a809883a 	mov	r4,r21
  8128c4:	0804e3c0 	call	804e3c <__udivsi3>
  8128c8:	8822943a 	slli	r17,r17,16
  8128cc:	b085383a 	mul	r2,r22,r2
  8128d0:	a0ffffcc 	andi	r3,r20,65535
  8128d4:	1c46b03a 	or	r3,r3,r17
  8128d8:	1880042e 	bgeu	r3,r2,8128ec <__umoddi3+0x11c>
  8128dc:	1cc7883a 	add	r3,r3,r19
  8128e0:	1cc00236 	bltu	r3,r19,8128ec <__umoddi3+0x11c>
  8128e4:	1880012e 	bgeu	r3,r2,8128ec <__umoddi3+0x11c>
  8128e8:	1cc7883a 	add	r3,r3,r19
  8128ec:	1885c83a 	sub	r2,r3,r2
  8128f0:	1484d83a 	srl	r2,r2,r18
  8128f4:	0007883a 	mov	r3,zero
  8128f8:	00004f06 	br	812a38 <__umoddi3+0x268>
  8128fc:	29c04c36 	bltu	r5,r7,812a30 <__umoddi3+0x260>
  812900:	00bfffd4 	movui	r2,65535
  812904:	11c0582e 	bgeu	r2,r7,812a68 <__umoddi3+0x298>
  812908:	00804034 	movhi	r2,256
  81290c:	10bfffc4 	addi	r2,r2,-1
  812910:	11c0e736 	bltu	r2,r7,812cb0 <__umoddi3+0x4e0>
  812914:	01000404 	movi	r4,16
  812918:	3904d83a 	srl	r2,r7,r4
  81291c:	00c02074 	movhi	r3,129
  812920:	18d68b04 	addi	r3,r3,23084
  812924:	1885883a 	add	r2,r3,r2
  812928:	14c00003 	ldbu	r19,0(r2)
  81292c:	00c00804 	movi	r3,32
  812930:	9927883a 	add	r19,r19,r4
  812934:	1ce9c83a 	sub	r20,r3,r19
  812938:	a000581e 	bne	r20,zero,812a9c <__umoddi3+0x2cc>
  81293c:	3c400136 	bltu	r7,r17,812944 <__umoddi3+0x174>
  812940:	8180eb36 	bltu	r16,r6,812cf0 <__umoddi3+0x520>
  812944:	8185c83a 	sub	r2,r16,r6
  812948:	89e3c83a 	sub	r17,r17,r7
  81294c:	8089803a 	cmpltu	r4,r16,r2
  812950:	8939c83a 	sub	fp,r17,r4
  812954:	e007883a 	mov	r3,fp
  812958:	00003706 	br	812a38 <__umoddi3+0x268>
  81295c:	3000041e 	bne	r6,zero,812970 <__umoddi3+0x1a0>
  812960:	000b883a 	mov	r5,zero
  812964:	01000044 	movi	r4,1
  812968:	0804e3c0 	call	804e3c <__udivsi3>
  81296c:	1027883a 	mov	r19,r2
  812970:	00bfffd4 	movui	r2,65535
  812974:	14c0402e 	bgeu	r2,r19,812a78 <__umoddi3+0x2a8>
  812978:	00804034 	movhi	r2,256
  81297c:	10bfffc4 	addi	r2,r2,-1
  812980:	14c0cd36 	bltu	r2,r19,812cb8 <__umoddi3+0x4e8>
  812984:	00800404 	movi	r2,16
  812988:	9886d83a 	srl	r3,r19,r2
  81298c:	01002074 	movhi	r4,129
  812990:	21168b04 	addi	r4,r4,23084
  812994:	20c7883a 	add	r3,r4,r3
  812998:	18c00003 	ldbu	r3,0(r3)
  81299c:	1887883a 	add	r3,r3,r2
  8129a0:	00800804 	movi	r2,32
  8129a4:	10e5c83a 	sub	r18,r2,r3
  8129a8:	9000901e 	bne	r18,zero,812bec <__umoddi3+0x41c>
  8129ac:	982cd43a 	srli	r22,r19,16
  8129b0:	8ce3c83a 	sub	r17,r17,r19
  8129b4:	9d7fffcc 	andi	r21,r19,65535
  8129b8:	b00b883a 	mov	r5,r22
  8129bc:	8809883a 	mov	r4,r17
  8129c0:	0804ea00 	call	804ea0 <__umodsi3>
  8129c4:	8809883a 	mov	r4,r17
  8129c8:	b00b883a 	mov	r5,r22
  8129cc:	1021883a 	mov	r16,r2
  8129d0:	0804e3c0 	call	804e3c <__udivsi3>
  8129d4:	8006943a 	slli	r3,r16,16
  8129d8:	a008d43a 	srli	r4,r20,16
  8129dc:	1545383a 	mul	r2,r2,r21
  8129e0:	20c8b03a 	or	r4,r4,r3
  8129e4:	2080042e 	bgeu	r4,r2,8129f8 <__umoddi3+0x228>
  8129e8:	24c9883a 	add	r4,r4,r19
  8129ec:	24c00236 	bltu	r4,r19,8129f8 <__umoddi3+0x228>
  8129f0:	2080012e 	bgeu	r4,r2,8129f8 <__umoddi3+0x228>
  8129f4:	24c9883a 	add	r4,r4,r19
  8129f8:	20a1c83a 	sub	r16,r4,r2
  8129fc:	b00b883a 	mov	r5,r22
  812a00:	8009883a 	mov	r4,r16
  812a04:	0804ea00 	call	804ea0 <__umodsi3>
  812a08:	1023883a 	mov	r17,r2
  812a0c:	b00b883a 	mov	r5,r22
  812a10:	8009883a 	mov	r4,r16
  812a14:	0804e3c0 	call	804e3c <__udivsi3>
  812a18:	8822943a 	slli	r17,r17,16
  812a1c:	1545383a 	mul	r2,r2,r21
  812a20:	a53fffcc 	andi	r20,r20,65535
  812a24:	a446b03a 	or	r3,r20,r17
  812a28:	18bfb02e 	bgeu	r3,r2,8128ec <__alt_data_end+0xff8128ec>
  812a2c:	003fab06 	br	8128dc <__alt_data_end+0xff8128dc>
  812a30:	2005883a 	mov	r2,r4
  812a34:	2807883a 	mov	r3,r5
  812a38:	dfc00b17 	ldw	ra,44(sp)
  812a3c:	df000a17 	ldw	fp,40(sp)
  812a40:	ddc00917 	ldw	r23,36(sp)
  812a44:	dd800817 	ldw	r22,32(sp)
  812a48:	dd400717 	ldw	r21,28(sp)
  812a4c:	dd000617 	ldw	r20,24(sp)
  812a50:	dcc00517 	ldw	r19,20(sp)
  812a54:	dc800417 	ldw	r18,16(sp)
  812a58:	dc400317 	ldw	r17,12(sp)
  812a5c:	dc000217 	ldw	r16,8(sp)
  812a60:	dec00c04 	addi	sp,sp,48
  812a64:	f800283a 	ret
  812a68:	04c03fc4 	movi	r19,255
  812a6c:	99c9803a 	cmpltu	r4,r19,r7
  812a70:	200890fa 	slli	r4,r4,3
  812a74:	003fa806 	br	812918 <__alt_data_end+0xff812918>
  812a78:	00803fc4 	movi	r2,255
  812a7c:	14c5803a 	cmpltu	r2,r2,r19
  812a80:	100490fa 	slli	r2,r2,3
  812a84:	003fc006 	br	812988 <__alt_data_end+0xff812988>
  812a88:	00804034 	movhi	r2,256
  812a8c:	10bfffc4 	addi	r2,r2,-1
  812a90:	11808b36 	bltu	r2,r6,812cc0 <__umoddi3+0x4f0>
  812a94:	01000404 	movi	r4,16
  812a98:	003f6406 	br	81282c <__alt_data_end+0xff81282c>
  812a9c:	34c4d83a 	srl	r2,r6,r19
  812aa0:	3d0e983a 	sll	r7,r7,r20
  812aa4:	8cf8d83a 	srl	fp,r17,r19
  812aa8:	8d10983a 	sll	r8,r17,r20
  812aac:	38aab03a 	or	r21,r7,r2
  812ab0:	a82cd43a 	srli	r22,r21,16
  812ab4:	84e2d83a 	srl	r17,r16,r19
  812ab8:	e009883a 	mov	r4,fp
  812abc:	b00b883a 	mov	r5,r22
  812ac0:	8a22b03a 	or	r17,r17,r8
  812ac4:	3524983a 	sll	r18,r6,r20
  812ac8:	0804ea00 	call	804ea0 <__umodsi3>
  812acc:	e009883a 	mov	r4,fp
  812ad0:	b00b883a 	mov	r5,r22
  812ad4:	102f883a 	mov	r23,r2
  812ad8:	0804e3c0 	call	804e3c <__udivsi3>
  812adc:	100d883a 	mov	r6,r2
  812ae0:	b808943a 	slli	r4,r23,16
  812ae4:	aa3fffcc 	andi	r8,r21,65535
  812ae8:	8804d43a 	srli	r2,r17,16
  812aec:	41af383a 	mul	r23,r8,r6
  812af0:	8520983a 	sll	r16,r16,r20
  812af4:	1104b03a 	or	r2,r2,r4
  812af8:	15c0042e 	bgeu	r2,r23,812b0c <__umoddi3+0x33c>
  812afc:	1545883a 	add	r2,r2,r21
  812b00:	30ffffc4 	addi	r3,r6,-1
  812b04:	1540742e 	bgeu	r2,r21,812cd8 <__umoddi3+0x508>
  812b08:	180d883a 	mov	r6,r3
  812b0c:	15efc83a 	sub	r23,r2,r23
  812b10:	b00b883a 	mov	r5,r22
  812b14:	b809883a 	mov	r4,r23
  812b18:	d9800115 	stw	r6,4(sp)
  812b1c:	da000015 	stw	r8,0(sp)
  812b20:	0804ea00 	call	804ea0 <__umodsi3>
  812b24:	b00b883a 	mov	r5,r22
  812b28:	b809883a 	mov	r4,r23
  812b2c:	1039883a 	mov	fp,r2
  812b30:	0804e3c0 	call	804e3c <__udivsi3>
  812b34:	da000017 	ldw	r8,0(sp)
  812b38:	e038943a 	slli	fp,fp,16
  812b3c:	100b883a 	mov	r5,r2
  812b40:	4089383a 	mul	r4,r8,r2
  812b44:	8a3fffcc 	andi	r8,r17,65535
  812b48:	4710b03a 	or	r8,r8,fp
  812b4c:	d9800117 	ldw	r6,4(sp)
  812b50:	4100042e 	bgeu	r8,r4,812b64 <__umoddi3+0x394>
  812b54:	4551883a 	add	r8,r8,r21
  812b58:	10bfffc4 	addi	r2,r2,-1
  812b5c:	45405a2e 	bgeu	r8,r21,812cc8 <__umoddi3+0x4f8>
  812b60:	100b883a 	mov	r5,r2
  812b64:	300c943a 	slli	r6,r6,16
  812b68:	91ffffcc 	andi	r7,r18,65535
  812b6c:	9004d43a 	srli	r2,r18,16
  812b70:	314cb03a 	or	r6,r6,r5
  812b74:	317fffcc 	andi	r5,r6,65535
  812b78:	300cd43a 	srli	r6,r6,16
  812b7c:	29d3383a 	mul	r9,r5,r7
  812b80:	288b383a 	mul	r5,r5,r2
  812b84:	31cf383a 	mul	r7,r6,r7
  812b88:	4806d43a 	srli	r3,r9,16
  812b8c:	4111c83a 	sub	r8,r8,r4
  812b90:	29cb883a 	add	r5,r5,r7
  812b94:	194b883a 	add	r5,r3,r5
  812b98:	3085383a 	mul	r2,r6,r2
  812b9c:	29c0022e 	bgeu	r5,r7,812ba8 <__umoddi3+0x3d8>
  812ba0:	00c00074 	movhi	r3,1
  812ba4:	10c5883a 	add	r2,r2,r3
  812ba8:	2808d43a 	srli	r4,r5,16
  812bac:	280a943a 	slli	r5,r5,16
  812bb0:	4a7fffcc 	andi	r9,r9,65535
  812bb4:	2085883a 	add	r2,r4,r2
  812bb8:	2a4b883a 	add	r5,r5,r9
  812bbc:	40803636 	bltu	r8,r2,812c98 <__umoddi3+0x4c8>
  812bc0:	40804d26 	beq	r8,r2,812cf8 <__umoddi3+0x528>
  812bc4:	4089c83a 	sub	r4,r8,r2
  812bc8:	280f883a 	mov	r7,r5
  812bcc:	81cfc83a 	sub	r7,r16,r7
  812bd0:	81c7803a 	cmpltu	r3,r16,r7
  812bd4:	20c7c83a 	sub	r3,r4,r3
  812bd8:	1cc4983a 	sll	r2,r3,r19
  812bdc:	3d0ed83a 	srl	r7,r7,r20
  812be0:	1d06d83a 	srl	r3,r3,r20
  812be4:	11c4b03a 	or	r2,r2,r7
  812be8:	003f9306 	br	812a38 <__alt_data_end+0xff812a38>
  812bec:	9ca6983a 	sll	r19,r19,r18
  812bf0:	88e8d83a 	srl	r20,r17,r3
  812bf4:	80c4d83a 	srl	r2,r16,r3
  812bf8:	982cd43a 	srli	r22,r19,16
  812bfc:	8ca2983a 	sll	r17,r17,r18
  812c00:	a009883a 	mov	r4,r20
  812c04:	b00b883a 	mov	r5,r22
  812c08:	1478b03a 	or	fp,r2,r17
  812c0c:	0804ea00 	call	804ea0 <__umodsi3>
  812c10:	a009883a 	mov	r4,r20
  812c14:	b00b883a 	mov	r5,r22
  812c18:	1023883a 	mov	r17,r2
  812c1c:	0804e3c0 	call	804e3c <__udivsi3>
  812c20:	9d7fffcc 	andi	r21,r19,65535
  812c24:	880a943a 	slli	r5,r17,16
  812c28:	e008d43a 	srli	r4,fp,16
  812c2c:	a885383a 	mul	r2,r21,r2
  812c30:	84a8983a 	sll	r20,r16,r18
  812c34:	2148b03a 	or	r4,r4,r5
  812c38:	2080042e 	bgeu	r4,r2,812c4c <__umoddi3+0x47c>
  812c3c:	24c9883a 	add	r4,r4,r19
  812c40:	24c00236 	bltu	r4,r19,812c4c <__umoddi3+0x47c>
  812c44:	2080012e 	bgeu	r4,r2,812c4c <__umoddi3+0x47c>
  812c48:	24c9883a 	add	r4,r4,r19
  812c4c:	20a3c83a 	sub	r17,r4,r2
  812c50:	b00b883a 	mov	r5,r22
  812c54:	8809883a 	mov	r4,r17
  812c58:	0804ea00 	call	804ea0 <__umodsi3>
  812c5c:	102f883a 	mov	r23,r2
  812c60:	8809883a 	mov	r4,r17
  812c64:	b00b883a 	mov	r5,r22
  812c68:	0804e3c0 	call	804e3c <__udivsi3>
  812c6c:	b82e943a 	slli	r23,r23,16
  812c70:	a885383a 	mul	r2,r21,r2
  812c74:	e13fffcc 	andi	r4,fp,65535
  812c78:	25c8b03a 	or	r4,r4,r23
  812c7c:	2080042e 	bgeu	r4,r2,812c90 <__umoddi3+0x4c0>
  812c80:	24c9883a 	add	r4,r4,r19
  812c84:	24c00236 	bltu	r4,r19,812c90 <__umoddi3+0x4c0>
  812c88:	2080012e 	bgeu	r4,r2,812c90 <__umoddi3+0x4c0>
  812c8c:	24c9883a 	add	r4,r4,r19
  812c90:	20a3c83a 	sub	r17,r4,r2
  812c94:	003f4806 	br	8129b8 <__alt_data_end+0xff8129b8>
  812c98:	2c8fc83a 	sub	r7,r5,r18
  812c9c:	1545c83a 	sub	r2,r2,r21
  812ca0:	29cb803a 	cmpltu	r5,r5,r7
  812ca4:	1145c83a 	sub	r2,r2,r5
  812ca8:	4089c83a 	sub	r4,r8,r2
  812cac:	003fc706 	br	812bcc <__alt_data_end+0xff812bcc>
  812cb0:	01000604 	movi	r4,24
  812cb4:	003f1806 	br	812918 <__alt_data_end+0xff812918>
  812cb8:	00800604 	movi	r2,24
  812cbc:	003f3206 	br	812988 <__alt_data_end+0xff812988>
  812cc0:	01000604 	movi	r4,24
  812cc4:	003ed906 	br	81282c <__alt_data_end+0xff81282c>
  812cc8:	413fa52e 	bgeu	r8,r4,812b60 <__alt_data_end+0xff812b60>
  812ccc:	297fff84 	addi	r5,r5,-2
  812cd0:	4551883a 	add	r8,r8,r21
  812cd4:	003fa306 	br	812b64 <__alt_data_end+0xff812b64>
  812cd8:	15ff8b2e 	bgeu	r2,r23,812b08 <__alt_data_end+0xff812b08>
  812cdc:	31bfff84 	addi	r6,r6,-2
  812ce0:	1545883a 	add	r2,r2,r21
  812ce4:	003f8906 	br	812b0c <__alt_data_end+0xff812b0c>
  812ce8:	24c9883a 	add	r4,r4,r19
  812cec:	003eee06 	br	8128a8 <__alt_data_end+0xff8128a8>
  812cf0:	8005883a 	mov	r2,r16
  812cf4:	003f1706 	br	812954 <__alt_data_end+0xff812954>
  812cf8:	817fe736 	bltu	r16,r5,812c98 <__alt_data_end+0xff812c98>
  812cfc:	280f883a 	mov	r7,r5
  812d00:	0009883a 	mov	r4,zero
  812d04:	003fb106 	br	812bcc <__alt_data_end+0xff812bcc>

00812d08 <__ledf2>:
  812d08:	2804d53a 	srli	r2,r5,20
  812d0c:	3810d53a 	srli	r8,r7,20
  812d10:	00c00434 	movhi	r3,16
  812d14:	18ffffc4 	addi	r3,r3,-1
  812d18:	1081ffcc 	andi	r2,r2,2047
  812d1c:	0241ffc4 	movi	r9,2047
  812d20:	28d4703a 	and	r10,r5,r3
  812d24:	4201ffcc 	andi	r8,r8,2047
  812d28:	38c6703a 	and	r3,r7,r3
  812d2c:	280ad7fa 	srli	r5,r5,31
  812d30:	380ed7fa 	srli	r7,r7,31
  812d34:	12401f26 	beq	r2,r9,812db4 <__ledf2+0xac>
  812d38:	0241ffc4 	movi	r9,2047
  812d3c:	42401426 	beq	r8,r9,812d90 <__ledf2+0x88>
  812d40:	1000091e 	bne	r2,zero,812d68 <__ledf2+0x60>
  812d44:	2296b03a 	or	r11,r4,r10
  812d48:	5813003a 	cmpeq	r9,r11,zero
  812d4c:	29403fcc 	andi	r5,r5,255
  812d50:	40000a1e 	bne	r8,zero,812d7c <__ledf2+0x74>
  812d54:	30d8b03a 	or	r12,r6,r3
  812d58:	6000081e 	bne	r12,zero,812d7c <__ledf2+0x74>
  812d5c:	0005883a 	mov	r2,zero
  812d60:	5800111e 	bne	r11,zero,812da8 <__ledf2+0xa0>
  812d64:	f800283a 	ret
  812d68:	29403fcc 	andi	r5,r5,255
  812d6c:	40000c1e 	bne	r8,zero,812da0 <__ledf2+0x98>
  812d70:	30d2b03a 	or	r9,r6,r3
  812d74:	48000c26 	beq	r9,zero,812da8 <__ledf2+0xa0>
  812d78:	0013883a 	mov	r9,zero
  812d7c:	39c03fcc 	andi	r7,r7,255
  812d80:	48000826 	beq	r9,zero,812da4 <__ledf2+0x9c>
  812d84:	38001126 	beq	r7,zero,812dcc <__ledf2+0xc4>
  812d88:	00800044 	movi	r2,1
  812d8c:	f800283a 	ret
  812d90:	30d2b03a 	or	r9,r6,r3
  812d94:	483fea26 	beq	r9,zero,812d40 <__alt_data_end+0xff812d40>
  812d98:	00800084 	movi	r2,2
  812d9c:	f800283a 	ret
  812da0:	39c03fcc 	andi	r7,r7,255
  812da4:	39400726 	beq	r7,r5,812dc4 <__ledf2+0xbc>
  812da8:	2800081e 	bne	r5,zero,812dcc <__ledf2+0xc4>
  812dac:	00800044 	movi	r2,1
  812db0:	f800283a 	ret
  812db4:	2292b03a 	or	r9,r4,r10
  812db8:	483fdf26 	beq	r9,zero,812d38 <__alt_data_end+0xff812d38>
  812dbc:	00800084 	movi	r2,2
  812dc0:	f800283a 	ret
  812dc4:	4080030e 	bge	r8,r2,812dd4 <__ledf2+0xcc>
  812dc8:	383fef26 	beq	r7,zero,812d88 <__alt_data_end+0xff812d88>
  812dcc:	00bfffc4 	movi	r2,-1
  812dd0:	f800283a 	ret
  812dd4:	123feb16 	blt	r2,r8,812d84 <__alt_data_end+0xff812d84>
  812dd8:	1abff336 	bltu	r3,r10,812da8 <__alt_data_end+0xff812da8>
  812ddc:	50c00326 	beq	r10,r3,812dec <__ledf2+0xe4>
  812de0:	50c0042e 	bgeu	r10,r3,812df4 <__ledf2+0xec>
  812de4:	283fe81e 	bne	r5,zero,812d88 <__alt_data_end+0xff812d88>
  812de8:	003ff806 	br	812dcc <__alt_data_end+0xff812dcc>
  812dec:	313fee36 	bltu	r6,r4,812da8 <__alt_data_end+0xff812da8>
  812df0:	21bffc36 	bltu	r4,r6,812de4 <__alt_data_end+0xff812de4>
  812df4:	0005883a 	mov	r2,zero
  812df8:	f800283a 	ret

00812dfc <__floatunsidf>:
  812dfc:	defffe04 	addi	sp,sp,-8
  812e00:	dc000015 	stw	r16,0(sp)
  812e04:	dfc00115 	stw	ra,4(sp)
  812e08:	2021883a 	mov	r16,r4
  812e0c:	20002226 	beq	r4,zero,812e98 <__floatunsidf+0x9c>
  812e10:	0808b900 	call	808b90 <__clzsi2>
  812e14:	01010784 	movi	r4,1054
  812e18:	2089c83a 	sub	r4,r4,r2
  812e1c:	01810cc4 	movi	r6,1075
  812e20:	310dc83a 	sub	r6,r6,r4
  812e24:	00c007c4 	movi	r3,31
  812e28:	1980120e 	bge	r3,r6,812e74 <__floatunsidf+0x78>
  812e2c:	00c104c4 	movi	r3,1043
  812e30:	1907c83a 	sub	r3,r3,r4
  812e34:	80ca983a 	sll	r5,r16,r3
  812e38:	00800434 	movhi	r2,16
  812e3c:	10bfffc4 	addi	r2,r2,-1
  812e40:	2101ffcc 	andi	r4,r4,2047
  812e44:	0021883a 	mov	r16,zero
  812e48:	288a703a 	and	r5,r5,r2
  812e4c:	2008953a 	slli	r4,r4,20
  812e50:	00c00434 	movhi	r3,16
  812e54:	18ffffc4 	addi	r3,r3,-1
  812e58:	28c6703a 	and	r3,r5,r3
  812e5c:	8005883a 	mov	r2,r16
  812e60:	1906b03a 	or	r3,r3,r4
  812e64:	dfc00117 	ldw	ra,4(sp)
  812e68:	dc000017 	ldw	r16,0(sp)
  812e6c:	dec00204 	addi	sp,sp,8
  812e70:	f800283a 	ret
  812e74:	00c002c4 	movi	r3,11
  812e78:	188bc83a 	sub	r5,r3,r2
  812e7c:	814ad83a 	srl	r5,r16,r5
  812e80:	00c00434 	movhi	r3,16
  812e84:	18ffffc4 	addi	r3,r3,-1
  812e88:	81a0983a 	sll	r16,r16,r6
  812e8c:	2101ffcc 	andi	r4,r4,2047
  812e90:	28ca703a 	and	r5,r5,r3
  812e94:	003fed06 	br	812e4c <__alt_data_end+0xff812e4c>
  812e98:	0009883a 	mov	r4,zero
  812e9c:	000b883a 	mov	r5,zero
  812ea0:	003fea06 	br	812e4c <__alt_data_end+0xff812e4c>

00812ea4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  812ea4:	defffe04 	addi	sp,sp,-8
  812ea8:	dfc00115 	stw	ra,4(sp)
  812eac:	df000015 	stw	fp,0(sp)
  812eb0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  812eb4:	d0a00d17 	ldw	r2,-32716(gp)
  812eb8:	10000326 	beq	r2,zero,812ec8 <alt_get_errno+0x24>
  812ebc:	d0a00d17 	ldw	r2,-32716(gp)
  812ec0:	103ee83a 	callr	r2
  812ec4:	00000106 	br	812ecc <alt_get_errno+0x28>
  812ec8:	d0a6d504 	addi	r2,gp,-25772
}
  812ecc:	e037883a 	mov	sp,fp
  812ed0:	dfc00117 	ldw	ra,4(sp)
  812ed4:	df000017 	ldw	fp,0(sp)
  812ed8:	dec00204 	addi	sp,sp,8
  812edc:	f800283a 	ret

00812ee0 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
  812ee0:	defffb04 	addi	sp,sp,-20
  812ee4:	dfc00415 	stw	ra,16(sp)
  812ee8:	df000315 	stw	fp,12(sp)
  812eec:	df000304 	addi	fp,sp,12
  812ef0:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
  812ef4:	e0bfff17 	ldw	r2,-4(fp)
  812ef8:	10000616 	blt	r2,zero,812f14 <close+0x34>
  812efc:	e0bfff17 	ldw	r2,-4(fp)
  812f00:	10c00324 	muli	r3,r2,12
  812f04:	00802074 	movhi	r2,129
  812f08:	10997c04 	addi	r2,r2,26096
  812f0c:	1885883a 	add	r2,r3,r2
  812f10:	00000106 	br	812f18 <close+0x38>
  812f14:	0005883a 	mov	r2,zero
  812f18:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
  812f1c:	e0bffd17 	ldw	r2,-12(fp)
  812f20:	10001926 	beq	r2,zero,812f88 <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
  812f24:	e0bffd17 	ldw	r2,-12(fp)
  812f28:	10800017 	ldw	r2,0(r2)
  812f2c:	10800417 	ldw	r2,16(r2)
  812f30:	10000626 	beq	r2,zero,812f4c <close+0x6c>
  812f34:	e0bffd17 	ldw	r2,-12(fp)
  812f38:	10800017 	ldw	r2,0(r2)
  812f3c:	10800417 	ldw	r2,16(r2)
  812f40:	e13ffd17 	ldw	r4,-12(fp)
  812f44:	103ee83a 	callr	r2
  812f48:	00000106 	br	812f50 <close+0x70>
  812f4c:	0005883a 	mov	r2,zero
  812f50:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
  812f54:	e13fff17 	ldw	r4,-4(fp)
  812f58:	08135dc0 	call	8135dc <alt_release_fd>
    if (rval < 0)
  812f5c:	e0bffe17 	ldw	r2,-8(fp)
  812f60:	1000070e 	bge	r2,zero,812f80 <close+0xa0>
    {
      ALT_ERRNO = -rval;
  812f64:	0812ea40 	call	812ea4 <alt_get_errno>
  812f68:	1007883a 	mov	r3,r2
  812f6c:	e0bffe17 	ldw	r2,-8(fp)
  812f70:	0085c83a 	sub	r2,zero,r2
  812f74:	18800015 	stw	r2,0(r3)
      return -1;
  812f78:	00bfffc4 	movi	r2,-1
  812f7c:	00000706 	br	812f9c <close+0xbc>
    }
    return 0;
  812f80:	0005883a 	mov	r2,zero
  812f84:	00000506 	br	812f9c <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
  812f88:	0812ea40 	call	812ea4 <alt_get_errno>
  812f8c:	1007883a 	mov	r3,r2
  812f90:	00801444 	movi	r2,81
  812f94:	18800015 	stw	r2,0(r3)
    return -1;
  812f98:	00bfffc4 	movi	r2,-1
  }
}
  812f9c:	e037883a 	mov	sp,fp
  812fa0:	dfc00117 	ldw	ra,4(sp)
  812fa4:	df000017 	ldw	fp,0(sp)
  812fa8:	dec00204 	addi	sp,sp,8
  812fac:	f800283a 	ret

00812fb0 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
  812fb0:	defffc04 	addi	sp,sp,-16
  812fb4:	df000315 	stw	fp,12(sp)
  812fb8:	df000304 	addi	fp,sp,12
  812fbc:	e13ffd15 	stw	r4,-12(fp)
  812fc0:	e17ffe15 	stw	r5,-8(fp)
  812fc4:	e1bfff15 	stw	r6,-4(fp)
  return len;
  812fc8:	e0bfff17 	ldw	r2,-4(fp)
}
  812fcc:	e037883a 	mov	sp,fp
  812fd0:	df000017 	ldw	fp,0(sp)
  812fd4:	dec00104 	addi	sp,sp,4
  812fd8:	f800283a 	ret

00812fdc <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  812fdc:	defffe04 	addi	sp,sp,-8
  812fe0:	dfc00115 	stw	ra,4(sp)
  812fe4:	df000015 	stw	fp,0(sp)
  812fe8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  812fec:	d0a00d17 	ldw	r2,-32716(gp)
  812ff0:	10000326 	beq	r2,zero,813000 <alt_get_errno+0x24>
  812ff4:	d0a00d17 	ldw	r2,-32716(gp)
  812ff8:	103ee83a 	callr	r2
  812ffc:	00000106 	br	813004 <alt_get_errno+0x28>
  813000:	d0a6d504 	addi	r2,gp,-25772
}
  813004:	e037883a 	mov	sp,fp
  813008:	dfc00117 	ldw	ra,4(sp)
  81300c:	df000017 	ldw	fp,0(sp)
  813010:	dec00204 	addi	sp,sp,8
  813014:	f800283a 	ret

00813018 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
  813018:	defffb04 	addi	sp,sp,-20
  81301c:	dfc00415 	stw	ra,16(sp)
  813020:	df000315 	stw	fp,12(sp)
  813024:	df000304 	addi	fp,sp,12
  813028:	e13ffe15 	stw	r4,-8(fp)
  81302c:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  813030:	e0bffe17 	ldw	r2,-8(fp)
  813034:	10000616 	blt	r2,zero,813050 <fstat+0x38>
  813038:	e0bffe17 	ldw	r2,-8(fp)
  81303c:	10c00324 	muli	r3,r2,12
  813040:	00802074 	movhi	r2,129
  813044:	10997c04 	addi	r2,r2,26096
  813048:	1885883a 	add	r2,r3,r2
  81304c:	00000106 	br	813054 <fstat+0x3c>
  813050:	0005883a 	mov	r2,zero
  813054:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
  813058:	e0bffd17 	ldw	r2,-12(fp)
  81305c:	10001026 	beq	r2,zero,8130a0 <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
  813060:	e0bffd17 	ldw	r2,-12(fp)
  813064:	10800017 	ldw	r2,0(r2)
  813068:	10800817 	ldw	r2,32(r2)
  81306c:	10000726 	beq	r2,zero,81308c <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
  813070:	e0bffd17 	ldw	r2,-12(fp)
  813074:	10800017 	ldw	r2,0(r2)
  813078:	10800817 	ldw	r2,32(r2)
  81307c:	e17fff17 	ldw	r5,-4(fp)
  813080:	e13ffd17 	ldw	r4,-12(fp)
  813084:	103ee83a 	callr	r2
  813088:	00000a06 	br	8130b4 <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
  81308c:	e0bfff17 	ldw	r2,-4(fp)
  813090:	00c80004 	movi	r3,8192
  813094:	10c00115 	stw	r3,4(r2)
      return 0;
  813098:	0005883a 	mov	r2,zero
  81309c:	00000506 	br	8130b4 <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
  8130a0:	0812fdc0 	call	812fdc <alt_get_errno>
  8130a4:	1007883a 	mov	r3,r2
  8130a8:	00801444 	movi	r2,81
  8130ac:	18800015 	stw	r2,0(r3)
    return -1;
  8130b0:	00bfffc4 	movi	r2,-1
  }
}
  8130b4:	e037883a 	mov	sp,fp
  8130b8:	dfc00117 	ldw	ra,4(sp)
  8130bc:	df000017 	ldw	fp,0(sp)
  8130c0:	dec00204 	addi	sp,sp,8
  8130c4:	f800283a 	ret

008130c8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  8130c8:	defffe04 	addi	sp,sp,-8
  8130cc:	dfc00115 	stw	ra,4(sp)
  8130d0:	df000015 	stw	fp,0(sp)
  8130d4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  8130d8:	d0a00d17 	ldw	r2,-32716(gp)
  8130dc:	10000326 	beq	r2,zero,8130ec <alt_get_errno+0x24>
  8130e0:	d0a00d17 	ldw	r2,-32716(gp)
  8130e4:	103ee83a 	callr	r2
  8130e8:	00000106 	br	8130f0 <alt_get_errno+0x28>
  8130ec:	d0a6d504 	addi	r2,gp,-25772
}
  8130f0:	e037883a 	mov	sp,fp
  8130f4:	dfc00117 	ldw	ra,4(sp)
  8130f8:	df000017 	ldw	fp,0(sp)
  8130fc:	dec00204 	addi	sp,sp,8
  813100:	f800283a 	ret

00813104 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
  813104:	deffed04 	addi	sp,sp,-76
  813108:	dfc01215 	stw	ra,72(sp)
  81310c:	df001115 	stw	fp,68(sp)
  813110:	df001104 	addi	fp,sp,68
  813114:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  813118:	e0bfff17 	ldw	r2,-4(fp)
  81311c:	10000616 	blt	r2,zero,813138 <isatty+0x34>
  813120:	e0bfff17 	ldw	r2,-4(fp)
  813124:	10c00324 	muli	r3,r2,12
  813128:	00802074 	movhi	r2,129
  81312c:	10997c04 	addi	r2,r2,26096
  813130:	1885883a 	add	r2,r3,r2
  813134:	00000106 	br	81313c <isatty+0x38>
  813138:	0005883a 	mov	r2,zero
  81313c:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
  813140:	e0bfef17 	ldw	r2,-68(fp)
  813144:	10000e26 	beq	r2,zero,813180 <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
  813148:	e0bfef17 	ldw	r2,-68(fp)
  81314c:	10800017 	ldw	r2,0(r2)
  813150:	10800817 	ldw	r2,32(r2)
  813154:	1000021e 	bne	r2,zero,813160 <isatty+0x5c>
    {
      return 1;
  813158:	00800044 	movi	r2,1
  81315c:	00000d06 	br	813194 <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
  813160:	e0bff004 	addi	r2,fp,-64
  813164:	100b883a 	mov	r5,r2
  813168:	e13fff17 	ldw	r4,-4(fp)
  81316c:	08130180 	call	813018 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
  813170:	e0bff117 	ldw	r2,-60(fp)
  813174:	10880020 	cmpeqi	r2,r2,8192
  813178:	10803fcc 	andi	r2,r2,255
  81317c:	00000506 	br	813194 <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
  813180:	08130c80 	call	8130c8 <alt_get_errno>
  813184:	1007883a 	mov	r3,r2
  813188:	00801444 	movi	r2,81
  81318c:	18800015 	stw	r2,0(r3)
    return 0;
  813190:	0005883a 	mov	r2,zero
  }
}
  813194:	e037883a 	mov	sp,fp
  813198:	dfc00117 	ldw	ra,4(sp)
  81319c:	df000017 	ldw	fp,0(sp)
  8131a0:	dec00204 	addi	sp,sp,8
  8131a4:	f800283a 	ret

008131a8 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
  8131a8:	defffc04 	addi	sp,sp,-16
  8131ac:	df000315 	stw	fp,12(sp)
  8131b0:	df000304 	addi	fp,sp,12
  8131b4:	e13ffd15 	stw	r4,-12(fp)
  8131b8:	e17ffe15 	stw	r5,-8(fp)
  8131bc:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
  8131c0:	e0fffe17 	ldw	r3,-8(fp)
  8131c4:	e0bffd17 	ldw	r2,-12(fp)
  8131c8:	18800c26 	beq	r3,r2,8131fc <alt_load_section+0x54>
  {
    while( to != end )
  8131cc:	00000806 	br	8131f0 <alt_load_section+0x48>
    {
      *to++ = *from++;
  8131d0:	e0bffe17 	ldw	r2,-8(fp)
  8131d4:	10c00104 	addi	r3,r2,4
  8131d8:	e0fffe15 	stw	r3,-8(fp)
  8131dc:	e0fffd17 	ldw	r3,-12(fp)
  8131e0:	19000104 	addi	r4,r3,4
  8131e4:	e13ffd15 	stw	r4,-12(fp)
  8131e8:	18c00017 	ldw	r3,0(r3)
  8131ec:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
  8131f0:	e0fffe17 	ldw	r3,-8(fp)
  8131f4:	e0bfff17 	ldw	r2,-4(fp)
  8131f8:	18bff51e 	bne	r3,r2,8131d0 <__alt_data_end+0xff8131d0>
    {
      *to++ = *from++;
    }
  }
}
  8131fc:	0001883a 	nop
  813200:	e037883a 	mov	sp,fp
  813204:	df000017 	ldw	fp,0(sp)
  813208:	dec00104 	addi	sp,sp,4
  81320c:	f800283a 	ret

00813210 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
  813210:	defffe04 	addi	sp,sp,-8
  813214:	dfc00115 	stw	ra,4(sp)
  813218:	df000015 	stw	fp,0(sp)
  81321c:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
  813220:	01802074 	movhi	r6,129
  813224:	319e0604 	addi	r6,r6,30744
  813228:	01402074 	movhi	r5,129
  81322c:	29574904 	addi	r5,r5,23844
  813230:	01002074 	movhi	r4,129
  813234:	211e0604 	addi	r4,r4,30744
  813238:	08131a80 	call	8131a8 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
  81323c:	01802034 	movhi	r6,128
  813240:	31809104 	addi	r6,r6,580
  813244:	01402034 	movhi	r5,128
  813248:	29400804 	addi	r5,r5,32
  81324c:	01002034 	movhi	r4,128
  813250:	21000804 	addi	r4,r4,32
  813254:	08131a80 	call	8131a8 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
  813258:	01802074 	movhi	r6,129
  81325c:	31974904 	addi	r6,r6,23844
  813260:	01402074 	movhi	r5,129
  813264:	2955fe04 	addi	r5,r5,22520
  813268:	01002074 	movhi	r4,129
  81326c:	2115fe04 	addi	r4,r4,22520
  813270:	08131a80 	call	8131a8 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
  813274:	08146300 	call	814630 <alt_dcache_flush_all>
  alt_icache_flush_all();
  813278:	08148180 	call	814818 <alt_icache_flush_all>
}
  81327c:	0001883a 	nop
  813280:	e037883a 	mov	sp,fp
  813284:	dfc00117 	ldw	ra,4(sp)
  813288:	df000017 	ldw	fp,0(sp)
  81328c:	dec00204 	addi	sp,sp,8
  813290:	f800283a 	ret

00813294 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  813294:	defffe04 	addi	sp,sp,-8
  813298:	dfc00115 	stw	ra,4(sp)
  81329c:	df000015 	stw	fp,0(sp)
  8132a0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  8132a4:	d0a00d17 	ldw	r2,-32716(gp)
  8132a8:	10000326 	beq	r2,zero,8132b8 <alt_get_errno+0x24>
  8132ac:	d0a00d17 	ldw	r2,-32716(gp)
  8132b0:	103ee83a 	callr	r2
  8132b4:	00000106 	br	8132bc <alt_get_errno+0x28>
  8132b8:	d0a6d504 	addi	r2,gp,-25772
}
  8132bc:	e037883a 	mov	sp,fp
  8132c0:	dfc00117 	ldw	ra,4(sp)
  8132c4:	df000017 	ldw	fp,0(sp)
  8132c8:	dec00204 	addi	sp,sp,8
  8132cc:	f800283a 	ret

008132d0 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
  8132d0:	defff904 	addi	sp,sp,-28
  8132d4:	dfc00615 	stw	ra,24(sp)
  8132d8:	df000515 	stw	fp,20(sp)
  8132dc:	df000504 	addi	fp,sp,20
  8132e0:	e13ffd15 	stw	r4,-12(fp)
  8132e4:	e17ffe15 	stw	r5,-8(fp)
  8132e8:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
  8132ec:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  8132f0:	e0bffd17 	ldw	r2,-12(fp)
  8132f4:	10000616 	blt	r2,zero,813310 <lseek+0x40>
  8132f8:	e0bffd17 	ldw	r2,-12(fp)
  8132fc:	10c00324 	muli	r3,r2,12
  813300:	00802074 	movhi	r2,129
  813304:	10997c04 	addi	r2,r2,26096
  813308:	1885883a 	add	r2,r3,r2
  81330c:	00000106 	br	813314 <lseek+0x44>
  813310:	0005883a 	mov	r2,zero
  813314:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
  813318:	e0bffc17 	ldw	r2,-16(fp)
  81331c:	10001026 	beq	r2,zero,813360 <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
  813320:	e0bffc17 	ldw	r2,-16(fp)
  813324:	10800017 	ldw	r2,0(r2)
  813328:	10800717 	ldw	r2,28(r2)
  81332c:	10000926 	beq	r2,zero,813354 <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
  813330:	e0bffc17 	ldw	r2,-16(fp)
  813334:	10800017 	ldw	r2,0(r2)
  813338:	10800717 	ldw	r2,28(r2)
  81333c:	e1bfff17 	ldw	r6,-4(fp)
  813340:	e17ffe17 	ldw	r5,-8(fp)
  813344:	e13ffc17 	ldw	r4,-16(fp)
  813348:	103ee83a 	callr	r2
  81334c:	e0bffb15 	stw	r2,-20(fp)
  813350:	00000506 	br	813368 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
  813354:	00bfde84 	movi	r2,-134
  813358:	e0bffb15 	stw	r2,-20(fp)
  81335c:	00000206 	br	813368 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
  813360:	00bfebc4 	movi	r2,-81
  813364:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
  813368:	e0bffb17 	ldw	r2,-20(fp)
  81336c:	1000070e 	bge	r2,zero,81338c <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
  813370:	08132940 	call	813294 <alt_get_errno>
  813374:	1007883a 	mov	r3,r2
  813378:	e0bffb17 	ldw	r2,-20(fp)
  81337c:	0085c83a 	sub	r2,zero,r2
  813380:	18800015 	stw	r2,0(r3)
    rc = -1;
  813384:	00bfffc4 	movi	r2,-1
  813388:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
  81338c:	e0bffb17 	ldw	r2,-20(fp)
}
  813390:	e037883a 	mov	sp,fp
  813394:	dfc00117 	ldw	ra,4(sp)
  813398:	df000017 	ldw	fp,0(sp)
  81339c:	dec00204 	addi	sp,sp,8
  8133a0:	f800283a 	ret

008133a4 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
  8133a4:	defffd04 	addi	sp,sp,-12
  8133a8:	dfc00215 	stw	ra,8(sp)
  8133ac:	df000115 	stw	fp,4(sp)
  8133b0:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
  8133b4:	0009883a 	mov	r4,zero
  8133b8:	081390c0 	call	81390c <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
  8133bc:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
  8133c0:	08139440 	call	813944 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
  8133c4:	01802074 	movhi	r6,129
  8133c8:	31974104 	addi	r6,r6,23812
  8133cc:	01402074 	movhi	r5,129
  8133d0:	29574104 	addi	r5,r5,23812
  8133d4:	01002074 	movhi	r4,129
  8133d8:	21174104 	addi	r4,r4,23812
  8133dc:	0814bb00 	call	814bb0 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
  8133e0:	08147580 	call	814758 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
  8133e4:	01002074 	movhi	r4,129
  8133e8:	2111ee04 	addi	r4,r4,18360
  8133ec:	08153b00 	call	8153b0 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
  8133f0:	d0a6d617 	ldw	r2,-25768(gp)
  8133f4:	d0e6d717 	ldw	r3,-25764(gp)
  8133f8:	d126d817 	ldw	r4,-25760(gp)
  8133fc:	200d883a 	mov	r6,r4
  813400:	180b883a 	mov	r5,r3
  813404:	1009883a 	mov	r4,r2
  813408:	08016100 	call	801610 <main>
  81340c:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
  813410:	01000044 	movi	r4,1
  813414:	0812ee00 	call	812ee0 <close>
  exit (result);
  813418:	e13fff17 	ldw	r4,-4(fp)
  81341c:	08153c40 	call	8153c4 <exit>

00813420 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
  813420:	defffe04 	addi	sp,sp,-8
  813424:	df000115 	stw	fp,4(sp)
  813428:	df000104 	addi	fp,sp,4
  81342c:	e13fff15 	stw	r4,-4(fp)
}
  813430:	0001883a 	nop
  813434:	e037883a 	mov	sp,fp
  813438:	df000017 	ldw	fp,0(sp)
  81343c:	dec00104 	addi	sp,sp,4
  813440:	f800283a 	ret

00813444 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
  813444:	defffe04 	addi	sp,sp,-8
  813448:	df000115 	stw	fp,4(sp)
  81344c:	df000104 	addi	fp,sp,4
  813450:	e13fff15 	stw	r4,-4(fp)
}
  813454:	0001883a 	nop
  813458:	e037883a 	mov	sp,fp
  81345c:	df000017 	ldw	fp,0(sp)
  813460:	dec00104 	addi	sp,sp,4
  813464:	f800283a 	ret

00813468 <alt_putstr>:
 * Uses the ALT_DRIVER_WRITE() macro to call directly to driver if available.
 * Otherwise, uses newlib provided fputs() routine.
 */
int 
alt_putstr(const char* str)
{
  813468:	defffd04 	addi	sp,sp,-12
  81346c:	dfc00215 	stw	ra,8(sp)
  813470:	df000115 	stw	fp,4(sp)
  813474:	df000104 	addi	fp,sp,4
  813478:	e13fff15 	stw	r4,-4(fp)
#else
#ifdef ALT_USE_DIRECT_DRIVERS
    ALT_DRIVER_WRITE_EXTERNS(ALT_STDOUT_DEV);
    return ALT_DRIVER_WRITE(ALT_STDOUT_DEV, str, strlen(str), 0);
#else
    return fputs(str, stdout);
  81347c:	d0a00317 	ldw	r2,-32756(gp)
  813480:	10800217 	ldw	r2,8(r2)
  813484:	100b883a 	mov	r5,r2
  813488:	e13fff17 	ldw	r4,-4(fp)
  81348c:	08154980 	call	815498 <fputs>
#endif
#endif
}
  813490:	e037883a 	mov	sp,fp
  813494:	dfc00117 	ldw	ra,4(sp)
  813498:	df000017 	ldw	fp,0(sp)
  81349c:	dec00204 	addi	sp,sp,8
  8134a0:	f800283a 	ret

008134a4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  8134a4:	defffe04 	addi	sp,sp,-8
  8134a8:	dfc00115 	stw	ra,4(sp)
  8134ac:	df000015 	stw	fp,0(sp)
  8134b0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  8134b4:	d0a00d17 	ldw	r2,-32716(gp)
  8134b8:	10000326 	beq	r2,zero,8134c8 <alt_get_errno+0x24>
  8134bc:	d0a00d17 	ldw	r2,-32716(gp)
  8134c0:	103ee83a 	callr	r2
  8134c4:	00000106 	br	8134cc <alt_get_errno+0x28>
  8134c8:	d0a6d504 	addi	r2,gp,-25772
}
  8134cc:	e037883a 	mov	sp,fp
  8134d0:	dfc00117 	ldw	ra,4(sp)
  8134d4:	df000017 	ldw	fp,0(sp)
  8134d8:	dec00204 	addi	sp,sp,8
  8134dc:	f800283a 	ret

008134e0 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
  8134e0:	defff904 	addi	sp,sp,-28
  8134e4:	dfc00615 	stw	ra,24(sp)
  8134e8:	df000515 	stw	fp,20(sp)
  8134ec:	df000504 	addi	fp,sp,20
  8134f0:	e13ffd15 	stw	r4,-12(fp)
  8134f4:	e17ffe15 	stw	r5,-8(fp)
  8134f8:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  8134fc:	e0bffd17 	ldw	r2,-12(fp)
  813500:	10000616 	blt	r2,zero,81351c <read+0x3c>
  813504:	e0bffd17 	ldw	r2,-12(fp)
  813508:	10c00324 	muli	r3,r2,12
  81350c:	00802074 	movhi	r2,129
  813510:	10997c04 	addi	r2,r2,26096
  813514:	1885883a 	add	r2,r3,r2
  813518:	00000106 	br	813520 <read+0x40>
  81351c:	0005883a 	mov	r2,zero
  813520:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
  813524:	e0bffb17 	ldw	r2,-20(fp)
  813528:	10002226 	beq	r2,zero,8135b4 <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
  81352c:	e0bffb17 	ldw	r2,-20(fp)
  813530:	10800217 	ldw	r2,8(r2)
  813534:	108000cc 	andi	r2,r2,3
  813538:	10800060 	cmpeqi	r2,r2,1
  81353c:	1000181e 	bne	r2,zero,8135a0 <read+0xc0>
        (fd->dev->read))
  813540:	e0bffb17 	ldw	r2,-20(fp)
  813544:	10800017 	ldw	r2,0(r2)
  813548:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
  81354c:	10001426 	beq	r2,zero,8135a0 <read+0xc0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
  813550:	e0bffb17 	ldw	r2,-20(fp)
  813554:	10800017 	ldw	r2,0(r2)
  813558:	10800517 	ldw	r2,20(r2)
  81355c:	e0ffff17 	ldw	r3,-4(fp)
  813560:	180d883a 	mov	r6,r3
  813564:	e17ffe17 	ldw	r5,-8(fp)
  813568:	e13ffb17 	ldw	r4,-20(fp)
  81356c:	103ee83a 	callr	r2
  813570:	e0bffc15 	stw	r2,-16(fp)
  813574:	e0bffc17 	ldw	r2,-16(fp)
  813578:	1000070e 	bge	r2,zero,813598 <read+0xb8>
        {
          ALT_ERRNO = -rval;
  81357c:	08134a40 	call	8134a4 <alt_get_errno>
  813580:	1007883a 	mov	r3,r2
  813584:	e0bffc17 	ldw	r2,-16(fp)
  813588:	0085c83a 	sub	r2,zero,r2
  81358c:	18800015 	stw	r2,0(r3)
          return -1;
  813590:	00bfffc4 	movi	r2,-1
  813594:	00000c06 	br	8135c8 <read+0xe8>
        }
        return rval;
  813598:	e0bffc17 	ldw	r2,-16(fp)
  81359c:	00000a06 	br	8135c8 <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
  8135a0:	08134a40 	call	8134a4 <alt_get_errno>
  8135a4:	1007883a 	mov	r3,r2
  8135a8:	00800344 	movi	r2,13
  8135ac:	18800015 	stw	r2,0(r3)
  8135b0:	00000406 	br	8135c4 <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
  8135b4:	08134a40 	call	8134a4 <alt_get_errno>
  8135b8:	1007883a 	mov	r3,r2
  8135bc:	00801444 	movi	r2,81
  8135c0:	18800015 	stw	r2,0(r3)
  }
  return -1;
  8135c4:	00bfffc4 	movi	r2,-1
}
  8135c8:	e037883a 	mov	sp,fp
  8135cc:	dfc00117 	ldw	ra,4(sp)
  8135d0:	df000017 	ldw	fp,0(sp)
  8135d4:	dec00204 	addi	sp,sp,8
  8135d8:	f800283a 	ret

008135dc <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
  8135dc:	defffe04 	addi	sp,sp,-8
  8135e0:	df000115 	stw	fp,4(sp)
  8135e4:	df000104 	addi	fp,sp,4
  8135e8:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
  8135ec:	e0bfff17 	ldw	r2,-4(fp)
  8135f0:	108000d0 	cmplti	r2,r2,3
  8135f4:	10000d1e 	bne	r2,zero,81362c <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
  8135f8:	00802074 	movhi	r2,129
  8135fc:	10997c04 	addi	r2,r2,26096
  813600:	e0ffff17 	ldw	r3,-4(fp)
  813604:	18c00324 	muli	r3,r3,12
  813608:	10c5883a 	add	r2,r2,r3
  81360c:	10800204 	addi	r2,r2,8
  813610:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
  813614:	00802074 	movhi	r2,129
  813618:	10997c04 	addi	r2,r2,26096
  81361c:	e0ffff17 	ldw	r3,-4(fp)
  813620:	18c00324 	muli	r3,r3,12
  813624:	10c5883a 	add	r2,r2,r3
  813628:	10000015 	stw	zero,0(r2)
  }
}
  81362c:	0001883a 	nop
  813630:	e037883a 	mov	sp,fp
  813634:	df000017 	ldw	fp,0(sp)
  813638:	dec00104 	addi	sp,sp,4
  81363c:	f800283a 	ret

00813640 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
  813640:	defff904 	addi	sp,sp,-28
  813644:	df000615 	stw	fp,24(sp)
  813648:	df000604 	addi	fp,sp,24
  81364c:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  813650:	0005303a 	rdctl	r2,status
  813654:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  813658:	e0fffe17 	ldw	r3,-8(fp)
  81365c:	00bfff84 	movi	r2,-2
  813660:	1884703a 	and	r2,r3,r2
  813664:	1001703a 	wrctl	status,r2
  
  return context;
  813668:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
  81366c:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
  813670:	d0a00e17 	ldw	r2,-32712(gp)
  813674:	10c000c4 	addi	r3,r2,3
  813678:	00bfff04 	movi	r2,-4
  81367c:	1884703a 	and	r2,r3,r2
  813680:	d0a00e15 	stw	r2,-32712(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
  813684:	d0e00e17 	ldw	r3,-32712(gp)
  813688:	e0bfff17 	ldw	r2,-4(fp)
  81368c:	1887883a 	add	r3,r3,r2
  813690:	00804034 	movhi	r2,256
  813694:	10800004 	addi	r2,r2,0
  813698:	10c0062e 	bgeu	r2,r3,8136b4 <sbrk+0x74>
  81369c:	e0bffb17 	ldw	r2,-20(fp)
  8136a0:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  8136a4:	e0bffa17 	ldw	r2,-24(fp)
  8136a8:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  8136ac:	00bfffc4 	movi	r2,-1
  8136b0:	00000b06 	br	8136e0 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
  8136b4:	d0a00e17 	ldw	r2,-32712(gp)
  8136b8:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
  8136bc:	d0e00e17 	ldw	r3,-32712(gp)
  8136c0:	e0bfff17 	ldw	r2,-4(fp)
  8136c4:	1885883a 	add	r2,r3,r2
  8136c8:	d0a00e15 	stw	r2,-32712(gp)
  8136cc:	e0bffb17 	ldw	r2,-20(fp)
  8136d0:	e0bffc15 	stw	r2,-16(fp)
  8136d4:	e0bffc17 	ldw	r2,-16(fp)
  8136d8:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
  8136dc:	e0bffd17 	ldw	r2,-12(fp)
} 
  8136e0:	e037883a 	mov	sp,fp
  8136e4:	df000017 	ldw	fp,0(sp)
  8136e8:	dec00104 	addi	sp,sp,4
  8136ec:	f800283a 	ret

008136f0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  8136f0:	defffe04 	addi	sp,sp,-8
  8136f4:	dfc00115 	stw	ra,4(sp)
  8136f8:	df000015 	stw	fp,0(sp)
  8136fc:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  813700:	d0a00d17 	ldw	r2,-32716(gp)
  813704:	10000326 	beq	r2,zero,813714 <alt_get_errno+0x24>
  813708:	d0a00d17 	ldw	r2,-32716(gp)
  81370c:	103ee83a 	callr	r2
  813710:	00000106 	br	813718 <alt_get_errno+0x28>
  813714:	d0a6d504 	addi	r2,gp,-25772
}
  813718:	e037883a 	mov	sp,fp
  81371c:	dfc00117 	ldw	ra,4(sp)
  813720:	df000017 	ldw	fp,0(sp)
  813724:	dec00204 	addi	sp,sp,8
  813728:	f800283a 	ret

0081372c <times>:
 *
 * ALT_TIMES is mapped onto the times() system call in alt_syscall.h
 */
 
clock_t ALT_TIMES (struct tms *buf)
{
  81372c:	defffc04 	addi	sp,sp,-16
  813730:	dfc00315 	stw	ra,12(sp)
  813734:	df000215 	stw	fp,8(sp)
  813738:	df000204 	addi	fp,sp,8
  81373c:	e13fff15 	stw	r4,-4(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
  813740:	d0a6db17 	ldw	r2,-25748(gp)
  clock_t ticks = alt_nticks(); 
  813744:	e0bffe15 	stw	r2,-8(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
  813748:	d0a6da17 	ldw	r2,-25752(gp)

  /* If there is no system clock present, generate an error */

  if (!alt_ticks_per_second())
  81374c:	1000061e 	bne	r2,zero,813768 <times+0x3c>
  {
    ALT_ERRNO = ENOSYS;
  813750:	08136f00 	call	8136f0 <alt_get_errno>
  813754:	1007883a 	mov	r3,r2
  813758:	00801604 	movi	r2,88
  81375c:	18800015 	stw	r2,0(r3)
    return 0;
  813760:	0005883a 	mov	r2,zero
  813764:	00000a06 	br	813790 <times+0x64>
  }

  /* Otherwise return the elapsed time */

  buf->tms_utime  = 0;
  813768:	e0bfff17 	ldw	r2,-4(fp)
  81376c:	10000015 	stw	zero,0(r2)
  buf->tms_stime  = ticks;
  813770:	e0bfff17 	ldw	r2,-4(fp)
  813774:	e0fffe17 	ldw	r3,-8(fp)
  813778:	10c00115 	stw	r3,4(r2)
  buf->tms_cutime = 0;
  81377c:	e0bfff17 	ldw	r2,-4(fp)
  813780:	10000215 	stw	zero,8(r2)
  buf->tms_cstime = 0;
  813784:	e0bfff17 	ldw	r2,-4(fp)
  813788:	10000315 	stw	zero,12(r2)

  return ticks;
  81378c:	e0bffe17 	ldw	r2,-8(fp)
}
  813790:	e037883a 	mov	sp,fp
  813794:	dfc00117 	ldw	ra,4(sp)
  813798:	df000017 	ldw	fp,0(sp)
  81379c:	dec00204 	addi	sp,sp,8
  8137a0:	f800283a 	ret

008137a4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  8137a4:	defffe04 	addi	sp,sp,-8
  8137a8:	dfc00115 	stw	ra,4(sp)
  8137ac:	df000015 	stw	fp,0(sp)
  8137b0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  8137b4:	d0a00d17 	ldw	r2,-32716(gp)
  8137b8:	10000326 	beq	r2,zero,8137c8 <alt_get_errno+0x24>
  8137bc:	d0a00d17 	ldw	r2,-32716(gp)
  8137c0:	103ee83a 	callr	r2
  8137c4:	00000106 	br	8137cc <alt_get_errno+0x28>
  8137c8:	d0a6d504 	addi	r2,gp,-25772
}
  8137cc:	e037883a 	mov	sp,fp
  8137d0:	dfc00117 	ldw	ra,4(sp)
  8137d4:	df000017 	ldw	fp,0(sp)
  8137d8:	dec00204 	addi	sp,sp,8
  8137dc:	f800283a 	ret

008137e0 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
  8137e0:	defff904 	addi	sp,sp,-28
  8137e4:	dfc00615 	stw	ra,24(sp)
  8137e8:	df000515 	stw	fp,20(sp)
  8137ec:	df000504 	addi	fp,sp,20
  8137f0:	e13ffd15 	stw	r4,-12(fp)
  8137f4:	e17ffe15 	stw	r5,-8(fp)
  8137f8:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  8137fc:	e0bffd17 	ldw	r2,-12(fp)
  813800:	10000616 	blt	r2,zero,81381c <write+0x3c>
  813804:	e0bffd17 	ldw	r2,-12(fp)
  813808:	10c00324 	muli	r3,r2,12
  81380c:	00802074 	movhi	r2,129
  813810:	10997c04 	addi	r2,r2,26096
  813814:	1885883a 	add	r2,r3,r2
  813818:	00000106 	br	813820 <write+0x40>
  81381c:	0005883a 	mov	r2,zero
  813820:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
  813824:	e0bffb17 	ldw	r2,-20(fp)
  813828:	10002126 	beq	r2,zero,8138b0 <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
  81382c:	e0bffb17 	ldw	r2,-20(fp)
  813830:	10800217 	ldw	r2,8(r2)
  813834:	108000cc 	andi	r2,r2,3
  813838:	10001826 	beq	r2,zero,81389c <write+0xbc>
  81383c:	e0bffb17 	ldw	r2,-20(fp)
  813840:	10800017 	ldw	r2,0(r2)
  813844:	10800617 	ldw	r2,24(r2)
  813848:	10001426 	beq	r2,zero,81389c <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
  81384c:	e0bffb17 	ldw	r2,-20(fp)
  813850:	10800017 	ldw	r2,0(r2)
  813854:	10800617 	ldw	r2,24(r2)
  813858:	e0ffff17 	ldw	r3,-4(fp)
  81385c:	180d883a 	mov	r6,r3
  813860:	e17ffe17 	ldw	r5,-8(fp)
  813864:	e13ffb17 	ldw	r4,-20(fp)
  813868:	103ee83a 	callr	r2
  81386c:	e0bffc15 	stw	r2,-16(fp)
  813870:	e0bffc17 	ldw	r2,-16(fp)
  813874:	1000070e 	bge	r2,zero,813894 <write+0xb4>
      {
        ALT_ERRNO = -rval;
  813878:	08137a40 	call	8137a4 <alt_get_errno>
  81387c:	1007883a 	mov	r3,r2
  813880:	e0bffc17 	ldw	r2,-16(fp)
  813884:	0085c83a 	sub	r2,zero,r2
  813888:	18800015 	stw	r2,0(r3)
        return -1;
  81388c:	00bfffc4 	movi	r2,-1
  813890:	00000c06 	br	8138c4 <write+0xe4>
      }
      return rval;
  813894:	e0bffc17 	ldw	r2,-16(fp)
  813898:	00000a06 	br	8138c4 <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
  81389c:	08137a40 	call	8137a4 <alt_get_errno>
  8138a0:	1007883a 	mov	r3,r2
  8138a4:	00800344 	movi	r2,13
  8138a8:	18800015 	stw	r2,0(r3)
  8138ac:	00000406 	br	8138c0 <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
  8138b0:	08137a40 	call	8137a4 <alt_get_errno>
  8138b4:	1007883a 	mov	r3,r2
  8138b8:	00801444 	movi	r2,81
  8138bc:	18800015 	stw	r2,0(r3)
  }
  return -1;
  8138c0:	00bfffc4 	movi	r2,-1
}
  8138c4:	e037883a 	mov	sp,fp
  8138c8:	dfc00117 	ldw	ra,4(sp)
  8138cc:	df000017 	ldw	fp,0(sp)
  8138d0:	dec00204 	addi	sp,sp,8
  8138d4:	f800283a 	ret

008138d8 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
  8138d8:	defffd04 	addi	sp,sp,-12
  8138dc:	dfc00215 	stw	ra,8(sp)
  8138e0:	df000115 	stw	fp,4(sp)
  8138e4:	df000104 	addi	fp,sp,4
  8138e8:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
  8138ec:	d1600a04 	addi	r5,gp,-32728
  8138f0:	e13fff17 	ldw	r4,-4(fp)
  8138f4:	08146b40 	call	8146b4 <alt_dev_llist_insert>
}
  8138f8:	e037883a 	mov	sp,fp
  8138fc:	dfc00117 	ldw	ra,4(sp)
  813900:	df000017 	ldw	fp,0(sp)
  813904:	dec00204 	addi	sp,sp,8
  813908:	f800283a 	ret

0081390c <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
  81390c:	defffd04 	addi	sp,sp,-12
  813910:	dfc00215 	stw	ra,8(sp)
  813914:	df000115 	stw	fp,4(sp)
  813918:	df000104 	addi	fp,sp,4
  81391c:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( CPU, cpu);
  813920:	08150240 	call	815024 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
  813924:	00800044 	movi	r2,1
  813928:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
  81392c:	0001883a 	nop
  813930:	e037883a 	mov	sp,fp
  813934:	dfc00117 	ldw	ra,4(sp)
  813938:	df000017 	ldw	fp,0(sp)
  81393c:	dec00204 	addi	sp,sp,8
  813940:	f800283a 	ret

00813944 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
  813944:	defffe04 	addi	sp,sp,-8
  813948:	dfc00115 	stw	ra,4(sp)
  81394c:	df000015 	stw	fp,0(sp)
  813950:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( SYS_CLK_TIMER, sys_clk_timer);
  813954:	01c0fa04 	movi	r7,1000
  813958:	01800044 	movi	r6,1
  81395c:	000b883a 	mov	r5,zero
  813960:	01004034 	movhi	r4,256
  813964:	21040004 	addi	r4,r4,4096
  813968:	08144880 	call	814488 <alt_avalon_timer_sc_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, jtag_uart);
  81396c:	01800404 	movi	r6,16
  813970:	000b883a 	mov	r5,zero
  813974:	01002074 	movhi	r4,129
  813978:	2119e604 	addi	r4,r4,26520
  81397c:	0813b0c0 	call	813b0c <altera_avalon_jtag_uart_init>
  813980:	01002074 	movhi	r4,129
  813984:	2119dc04 	addi	r4,r4,26480
  813988:	08138d80 	call	8138d8 <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID, sysid);
  81398c:	0001883a 	nop
}
  813990:	0001883a 	nop
  813994:	e037883a 	mov	sp,fp
  813998:	dfc00117 	ldw	ra,4(sp)
  81399c:	df000017 	ldw	fp,0(sp)
  8139a0:	dec00204 	addi	sp,sp,8
  8139a4:	f800283a 	ret

008139a8 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
  8139a8:	defffa04 	addi	sp,sp,-24
  8139ac:	dfc00515 	stw	ra,20(sp)
  8139b0:	df000415 	stw	fp,16(sp)
  8139b4:	df000404 	addi	fp,sp,16
  8139b8:	e13ffd15 	stw	r4,-12(fp)
  8139bc:	e17ffe15 	stw	r5,-8(fp)
  8139c0:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  8139c4:	e0bffd17 	ldw	r2,-12(fp)
  8139c8:	10800017 	ldw	r2,0(r2)
  8139cc:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
  8139d0:	e0bffc17 	ldw	r2,-16(fp)
  8139d4:	10c00a04 	addi	r3,r2,40
  8139d8:	e0bffd17 	ldw	r2,-12(fp)
  8139dc:	10800217 	ldw	r2,8(r2)
  8139e0:	100f883a 	mov	r7,r2
  8139e4:	e1bfff17 	ldw	r6,-4(fp)
  8139e8:	e17ffe17 	ldw	r5,-8(fp)
  8139ec:	1809883a 	mov	r4,r3
  8139f0:	0813fd00 	call	813fd0 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
  8139f4:	e037883a 	mov	sp,fp
  8139f8:	dfc00117 	ldw	ra,4(sp)
  8139fc:	df000017 	ldw	fp,0(sp)
  813a00:	dec00204 	addi	sp,sp,8
  813a04:	f800283a 	ret

00813a08 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
  813a08:	defffa04 	addi	sp,sp,-24
  813a0c:	dfc00515 	stw	ra,20(sp)
  813a10:	df000415 	stw	fp,16(sp)
  813a14:	df000404 	addi	fp,sp,16
  813a18:	e13ffd15 	stw	r4,-12(fp)
  813a1c:	e17ffe15 	stw	r5,-8(fp)
  813a20:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  813a24:	e0bffd17 	ldw	r2,-12(fp)
  813a28:	10800017 	ldw	r2,0(r2)
  813a2c:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
  813a30:	e0bffc17 	ldw	r2,-16(fp)
  813a34:	10c00a04 	addi	r3,r2,40
  813a38:	e0bffd17 	ldw	r2,-12(fp)
  813a3c:	10800217 	ldw	r2,8(r2)
  813a40:	100f883a 	mov	r7,r2
  813a44:	e1bfff17 	ldw	r6,-4(fp)
  813a48:	e17ffe17 	ldw	r5,-8(fp)
  813a4c:	1809883a 	mov	r4,r3
  813a50:	08141ec0 	call	8141ec <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
  813a54:	e037883a 	mov	sp,fp
  813a58:	dfc00117 	ldw	ra,4(sp)
  813a5c:	df000017 	ldw	fp,0(sp)
  813a60:	dec00204 	addi	sp,sp,8
  813a64:	f800283a 	ret

00813a68 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
  813a68:	defffc04 	addi	sp,sp,-16
  813a6c:	dfc00315 	stw	ra,12(sp)
  813a70:	df000215 	stw	fp,8(sp)
  813a74:	df000204 	addi	fp,sp,8
  813a78:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  813a7c:	e0bfff17 	ldw	r2,-4(fp)
  813a80:	10800017 	ldw	r2,0(r2)
  813a84:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
  813a88:	e0bffe17 	ldw	r2,-8(fp)
  813a8c:	10c00a04 	addi	r3,r2,40
  813a90:	e0bfff17 	ldw	r2,-4(fp)
  813a94:	10800217 	ldw	r2,8(r2)
  813a98:	100b883a 	mov	r5,r2
  813a9c:	1809883a 	mov	r4,r3
  813aa0:	0813e780 	call	813e78 <altera_avalon_jtag_uart_close>
}
  813aa4:	e037883a 	mov	sp,fp
  813aa8:	dfc00117 	ldw	ra,4(sp)
  813aac:	df000017 	ldw	fp,0(sp)
  813ab0:	dec00204 	addi	sp,sp,8
  813ab4:	f800283a 	ret

00813ab8 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
  813ab8:	defffa04 	addi	sp,sp,-24
  813abc:	dfc00515 	stw	ra,20(sp)
  813ac0:	df000415 	stw	fp,16(sp)
  813ac4:	df000404 	addi	fp,sp,16
  813ac8:	e13ffd15 	stw	r4,-12(fp)
  813acc:	e17ffe15 	stw	r5,-8(fp)
  813ad0:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
  813ad4:	e0bffd17 	ldw	r2,-12(fp)
  813ad8:	10800017 	ldw	r2,0(r2)
  813adc:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
  813ae0:	e0bffc17 	ldw	r2,-16(fp)
  813ae4:	10800a04 	addi	r2,r2,40
  813ae8:	e1bfff17 	ldw	r6,-4(fp)
  813aec:	e17ffe17 	ldw	r5,-8(fp)
  813af0:	1009883a 	mov	r4,r2
  813af4:	0813ee00 	call	813ee0 <altera_avalon_jtag_uart_ioctl>
}
  813af8:	e037883a 	mov	sp,fp
  813afc:	dfc00117 	ldw	ra,4(sp)
  813b00:	df000017 	ldw	fp,0(sp)
  813b04:	dec00204 	addi	sp,sp,8
  813b08:	f800283a 	ret

00813b0c <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
  813b0c:	defffa04 	addi	sp,sp,-24
  813b10:	dfc00515 	stw	ra,20(sp)
  813b14:	df000415 	stw	fp,16(sp)
  813b18:	df000404 	addi	fp,sp,16
  813b1c:	e13ffd15 	stw	r4,-12(fp)
  813b20:	e17ffe15 	stw	r5,-8(fp)
  813b24:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  813b28:	e0bffd17 	ldw	r2,-12(fp)
  813b2c:	00c00044 	movi	r3,1
  813b30:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
  813b34:	e0bffd17 	ldw	r2,-12(fp)
  813b38:	10800017 	ldw	r2,0(r2)
  813b3c:	10800104 	addi	r2,r2,4
  813b40:	1007883a 	mov	r3,r2
  813b44:	e0bffd17 	ldw	r2,-12(fp)
  813b48:	10800817 	ldw	r2,32(r2)
  813b4c:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
  813b50:	e0bffe17 	ldw	r2,-8(fp)
  813b54:	e0ffff17 	ldw	r3,-4(fp)
  813b58:	d8000015 	stw	zero,0(sp)
  813b5c:	e1fffd17 	ldw	r7,-12(fp)
  813b60:	01802074 	movhi	r6,129
  813b64:	318ef304 	addi	r6,r6,15308
  813b68:	180b883a 	mov	r5,r3
  813b6c:	1009883a 	mov	r4,r2
  813b70:	081484c0 	call	81484c <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
  813b74:	e0bffd17 	ldw	r2,-12(fp)
  813b78:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
  813b7c:	e0bffd17 	ldw	r2,-12(fp)
  813b80:	10800204 	addi	r2,r2,8
  813b84:	d0e6da17 	ldw	r3,-25752(gp)
  813b88:	e1fffd17 	ldw	r7,-12(fp)
  813b8c:	01802074 	movhi	r6,129
  813b90:	318f7604 	addi	r6,r6,15832
  813b94:	180b883a 	mov	r5,r3
  813b98:	1009883a 	mov	r4,r2
  813b9c:	08145040 	call	814504 <alt_alarm_start>
  813ba0:	1000040e 	bge	r2,zero,813bb4 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
  813ba4:	e0fffd17 	ldw	r3,-12(fp)
  813ba8:	00a00034 	movhi	r2,32768
  813bac:	10bfffc4 	addi	r2,r2,-1
  813bb0:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
  813bb4:	0001883a 	nop
  813bb8:	e037883a 	mov	sp,fp
  813bbc:	dfc00117 	ldw	ra,4(sp)
  813bc0:	df000017 	ldw	fp,0(sp)
  813bc4:	dec00204 	addi	sp,sp,8
  813bc8:	f800283a 	ret

00813bcc <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
  813bcc:	defff804 	addi	sp,sp,-32
  813bd0:	df000715 	stw	fp,28(sp)
  813bd4:	df000704 	addi	fp,sp,28
  813bd8:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
  813bdc:	e0bfff17 	ldw	r2,-4(fp)
  813be0:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
  813be4:	e0bffb17 	ldw	r2,-20(fp)
  813be8:	10800017 	ldw	r2,0(r2)
  813bec:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  813bf0:	e0bffc17 	ldw	r2,-16(fp)
  813bf4:	10800104 	addi	r2,r2,4
  813bf8:	10800037 	ldwio	r2,0(r2)
  813bfc:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
  813c00:	e0bffd17 	ldw	r2,-12(fp)
  813c04:	1080c00c 	andi	r2,r2,768
  813c08:	10006d26 	beq	r2,zero,813dc0 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
  813c0c:	e0bffd17 	ldw	r2,-12(fp)
  813c10:	1080400c 	andi	r2,r2,256
  813c14:	10003526 	beq	r2,zero,813cec <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
  813c18:	00800074 	movhi	r2,1
  813c1c:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  813c20:	e0bffb17 	ldw	r2,-20(fp)
  813c24:	10800a17 	ldw	r2,40(r2)
  813c28:	10800044 	addi	r2,r2,1
  813c2c:	1081ffcc 	andi	r2,r2,2047
  813c30:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
  813c34:	e0bffb17 	ldw	r2,-20(fp)
  813c38:	10c00b17 	ldw	r3,44(r2)
  813c3c:	e0bffe17 	ldw	r2,-8(fp)
  813c40:	18801526 	beq	r3,r2,813c98 <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
  813c44:	e0bffc17 	ldw	r2,-16(fp)
  813c48:	10800037 	ldwio	r2,0(r2)
  813c4c:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
  813c50:	e0bff917 	ldw	r2,-28(fp)
  813c54:	10a0000c 	andi	r2,r2,32768
  813c58:	10001126 	beq	r2,zero,813ca0 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
  813c5c:	e0bffb17 	ldw	r2,-20(fp)
  813c60:	10800a17 	ldw	r2,40(r2)
  813c64:	e0fff917 	ldw	r3,-28(fp)
  813c68:	1809883a 	mov	r4,r3
  813c6c:	e0fffb17 	ldw	r3,-20(fp)
  813c70:	1885883a 	add	r2,r3,r2
  813c74:	10800e04 	addi	r2,r2,56
  813c78:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  813c7c:	e0bffb17 	ldw	r2,-20(fp)
  813c80:	10800a17 	ldw	r2,40(r2)
  813c84:	10800044 	addi	r2,r2,1
  813c88:	10c1ffcc 	andi	r3,r2,2047
  813c8c:	e0bffb17 	ldw	r2,-20(fp)
  813c90:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
  813c94:	003fe206 	br	813c20 <__alt_data_end+0xff813c20>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
  813c98:	0001883a 	nop
  813c9c:	00000106 	br	813ca4 <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
  813ca0:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
  813ca4:	e0bff917 	ldw	r2,-28(fp)
  813ca8:	10bfffec 	andhi	r2,r2,65535
  813cac:	10000f26 	beq	r2,zero,813cec <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  813cb0:	e0bffb17 	ldw	r2,-20(fp)
  813cb4:	10c00817 	ldw	r3,32(r2)
  813cb8:	00bfff84 	movi	r2,-2
  813cbc:	1886703a 	and	r3,r3,r2
  813cc0:	e0bffb17 	ldw	r2,-20(fp)
  813cc4:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
  813cc8:	e0bffc17 	ldw	r2,-16(fp)
  813ccc:	10800104 	addi	r2,r2,4
  813cd0:	1007883a 	mov	r3,r2
  813cd4:	e0bffb17 	ldw	r2,-20(fp)
  813cd8:	10800817 	ldw	r2,32(r2)
  813cdc:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  813ce0:	e0bffc17 	ldw	r2,-16(fp)
  813ce4:	10800104 	addi	r2,r2,4
  813ce8:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
  813cec:	e0bffd17 	ldw	r2,-12(fp)
  813cf0:	1080800c 	andi	r2,r2,512
  813cf4:	103fbe26 	beq	r2,zero,813bf0 <__alt_data_end+0xff813bf0>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
  813cf8:	e0bffd17 	ldw	r2,-12(fp)
  813cfc:	1004d43a 	srli	r2,r2,16
  813d00:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
  813d04:	00001406 	br	813d58 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
  813d08:	e0bffc17 	ldw	r2,-16(fp)
  813d0c:	e0fffb17 	ldw	r3,-20(fp)
  813d10:	18c00d17 	ldw	r3,52(r3)
  813d14:	e13ffb17 	ldw	r4,-20(fp)
  813d18:	20c7883a 	add	r3,r4,r3
  813d1c:	18c20e04 	addi	r3,r3,2104
  813d20:	18c00003 	ldbu	r3,0(r3)
  813d24:	18c03fcc 	andi	r3,r3,255
  813d28:	18c0201c 	xori	r3,r3,128
  813d2c:	18ffe004 	addi	r3,r3,-128
  813d30:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  813d34:	e0bffb17 	ldw	r2,-20(fp)
  813d38:	10800d17 	ldw	r2,52(r2)
  813d3c:	10800044 	addi	r2,r2,1
  813d40:	10c1ffcc 	andi	r3,r2,2047
  813d44:	e0bffb17 	ldw	r2,-20(fp)
  813d48:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
  813d4c:	e0bffa17 	ldw	r2,-24(fp)
  813d50:	10bfffc4 	addi	r2,r2,-1
  813d54:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
  813d58:	e0bffa17 	ldw	r2,-24(fp)
  813d5c:	10000526 	beq	r2,zero,813d74 <altera_avalon_jtag_uart_irq+0x1a8>
  813d60:	e0bffb17 	ldw	r2,-20(fp)
  813d64:	10c00d17 	ldw	r3,52(r2)
  813d68:	e0bffb17 	ldw	r2,-20(fp)
  813d6c:	10800c17 	ldw	r2,48(r2)
  813d70:	18bfe51e 	bne	r3,r2,813d08 <__alt_data_end+0xff813d08>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
  813d74:	e0bffa17 	ldw	r2,-24(fp)
  813d78:	103f9d26 	beq	r2,zero,813bf0 <__alt_data_end+0xff813bf0>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
  813d7c:	e0bffb17 	ldw	r2,-20(fp)
  813d80:	10c00817 	ldw	r3,32(r2)
  813d84:	00bfff44 	movi	r2,-3
  813d88:	1886703a 	and	r3,r3,r2
  813d8c:	e0bffb17 	ldw	r2,-20(fp)
  813d90:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  813d94:	e0bffb17 	ldw	r2,-20(fp)
  813d98:	10800017 	ldw	r2,0(r2)
  813d9c:	10800104 	addi	r2,r2,4
  813da0:	1007883a 	mov	r3,r2
  813da4:	e0bffb17 	ldw	r2,-20(fp)
  813da8:	10800817 	ldw	r2,32(r2)
  813dac:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  813db0:	e0bffc17 	ldw	r2,-16(fp)
  813db4:	10800104 	addi	r2,r2,4
  813db8:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
  813dbc:	003f8c06 	br	813bf0 <__alt_data_end+0xff813bf0>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
  813dc0:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
  813dc4:	0001883a 	nop
  813dc8:	e037883a 	mov	sp,fp
  813dcc:	df000017 	ldw	fp,0(sp)
  813dd0:	dec00104 	addi	sp,sp,4
  813dd4:	f800283a 	ret

00813dd8 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
  813dd8:	defff804 	addi	sp,sp,-32
  813ddc:	df000715 	stw	fp,28(sp)
  813de0:	df000704 	addi	fp,sp,28
  813de4:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
  813de8:	e0bffb17 	ldw	r2,-20(fp)
  813dec:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
  813df0:	e0bff917 	ldw	r2,-28(fp)
  813df4:	10800017 	ldw	r2,0(r2)
  813df8:	10800104 	addi	r2,r2,4
  813dfc:	10800037 	ldwio	r2,0(r2)
  813e00:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
  813e04:	e0bffa17 	ldw	r2,-24(fp)
  813e08:	1081000c 	andi	r2,r2,1024
  813e0c:	10000b26 	beq	r2,zero,813e3c <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
  813e10:	e0bff917 	ldw	r2,-28(fp)
  813e14:	10800017 	ldw	r2,0(r2)
  813e18:	10800104 	addi	r2,r2,4
  813e1c:	1007883a 	mov	r3,r2
  813e20:	e0bff917 	ldw	r2,-28(fp)
  813e24:	10800817 	ldw	r2,32(r2)
  813e28:	10810014 	ori	r2,r2,1024
  813e2c:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
  813e30:	e0bff917 	ldw	r2,-28(fp)
  813e34:	10000915 	stw	zero,36(r2)
  813e38:	00000a06 	br	813e64 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
  813e3c:	e0bff917 	ldw	r2,-28(fp)
  813e40:	10c00917 	ldw	r3,36(r2)
  813e44:	00a00034 	movhi	r2,32768
  813e48:	10bfff04 	addi	r2,r2,-4
  813e4c:	10c00536 	bltu	r2,r3,813e64 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
  813e50:	e0bff917 	ldw	r2,-28(fp)
  813e54:	10800917 	ldw	r2,36(r2)
  813e58:	10c00044 	addi	r3,r2,1
  813e5c:	e0bff917 	ldw	r2,-28(fp)
  813e60:	10c00915 	stw	r3,36(r2)
  813e64:	d0a6da17 	ldw	r2,-25752(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
  813e68:	e037883a 	mov	sp,fp
  813e6c:	df000017 	ldw	fp,0(sp)
  813e70:	dec00104 	addi	sp,sp,4
  813e74:	f800283a 	ret

00813e78 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
  813e78:	defffd04 	addi	sp,sp,-12
  813e7c:	df000215 	stw	fp,8(sp)
  813e80:	df000204 	addi	fp,sp,8
  813e84:	e13ffe15 	stw	r4,-8(fp)
  813e88:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
  813e8c:	00000506 	br	813ea4 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
  813e90:	e0bfff17 	ldw	r2,-4(fp)
  813e94:	1090000c 	andi	r2,r2,16384
  813e98:	10000226 	beq	r2,zero,813ea4 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
  813e9c:	00bffd44 	movi	r2,-11
  813ea0:	00000b06 	br	813ed0 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
  813ea4:	e0bffe17 	ldw	r2,-8(fp)
  813ea8:	10c00d17 	ldw	r3,52(r2)
  813eac:	e0bffe17 	ldw	r2,-8(fp)
  813eb0:	10800c17 	ldw	r2,48(r2)
  813eb4:	18800526 	beq	r3,r2,813ecc <altera_avalon_jtag_uart_close+0x54>
  813eb8:	e0bffe17 	ldw	r2,-8(fp)
  813ebc:	10c00917 	ldw	r3,36(r2)
  813ec0:	e0bffe17 	ldw	r2,-8(fp)
  813ec4:	10800117 	ldw	r2,4(r2)
  813ec8:	18bff136 	bltu	r3,r2,813e90 <__alt_data_end+0xff813e90>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
  813ecc:	0005883a 	mov	r2,zero
}
  813ed0:	e037883a 	mov	sp,fp
  813ed4:	df000017 	ldw	fp,0(sp)
  813ed8:	dec00104 	addi	sp,sp,4
  813edc:	f800283a 	ret

00813ee0 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
  813ee0:	defffa04 	addi	sp,sp,-24
  813ee4:	df000515 	stw	fp,20(sp)
  813ee8:	df000504 	addi	fp,sp,20
  813eec:	e13ffd15 	stw	r4,-12(fp)
  813ef0:	e17ffe15 	stw	r5,-8(fp)
  813ef4:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
  813ef8:	00bff9c4 	movi	r2,-25
  813efc:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
  813f00:	e0bffe17 	ldw	r2,-8(fp)
  813f04:	10da8060 	cmpeqi	r3,r2,27137
  813f08:	1800031e 	bne	r3,zero,813f18 <altera_avalon_jtag_uart_ioctl+0x38>
  813f0c:	109a80a0 	cmpeqi	r2,r2,27138
  813f10:	1000181e 	bne	r2,zero,813f74 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
  813f14:	00002906 	br	813fbc <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
  813f18:	e0bffd17 	ldw	r2,-12(fp)
  813f1c:	10c00117 	ldw	r3,4(r2)
  813f20:	00a00034 	movhi	r2,32768
  813f24:	10bfffc4 	addi	r2,r2,-1
  813f28:	18802126 	beq	r3,r2,813fb0 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
  813f2c:	e0bfff17 	ldw	r2,-4(fp)
  813f30:	10800017 	ldw	r2,0(r2)
  813f34:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
  813f38:	e0bffc17 	ldw	r2,-16(fp)
  813f3c:	10800090 	cmplti	r2,r2,2
  813f40:	1000061e 	bne	r2,zero,813f5c <altera_avalon_jtag_uart_ioctl+0x7c>
  813f44:	e0fffc17 	ldw	r3,-16(fp)
  813f48:	00a00034 	movhi	r2,32768
  813f4c:	10bfffc4 	addi	r2,r2,-1
  813f50:	18800226 	beq	r3,r2,813f5c <altera_avalon_jtag_uart_ioctl+0x7c>
  813f54:	e0bffc17 	ldw	r2,-16(fp)
  813f58:	00000206 	br	813f64 <altera_avalon_jtag_uart_ioctl+0x84>
  813f5c:	00a00034 	movhi	r2,32768
  813f60:	10bfff84 	addi	r2,r2,-2
  813f64:	e0fffd17 	ldw	r3,-12(fp)
  813f68:	18800115 	stw	r2,4(r3)
      rc = 0;
  813f6c:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
  813f70:	00000f06 	br	813fb0 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
  813f74:	e0bffd17 	ldw	r2,-12(fp)
  813f78:	10c00117 	ldw	r3,4(r2)
  813f7c:	00a00034 	movhi	r2,32768
  813f80:	10bfffc4 	addi	r2,r2,-1
  813f84:	18800c26 	beq	r3,r2,813fb8 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
  813f88:	e0bffd17 	ldw	r2,-12(fp)
  813f8c:	10c00917 	ldw	r3,36(r2)
  813f90:	e0bffd17 	ldw	r2,-12(fp)
  813f94:	10800117 	ldw	r2,4(r2)
  813f98:	1885803a 	cmpltu	r2,r3,r2
  813f9c:	10c03fcc 	andi	r3,r2,255
  813fa0:	e0bfff17 	ldw	r2,-4(fp)
  813fa4:	10c00015 	stw	r3,0(r2)
      rc = 0;
  813fa8:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
  813fac:	00000206 	br	813fb8 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
  813fb0:	0001883a 	nop
  813fb4:	00000106 	br	813fbc <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
  813fb8:	0001883a 	nop

  default:
    break;
  }

  return rc;
  813fbc:	e0bffb17 	ldw	r2,-20(fp)
}
  813fc0:	e037883a 	mov	sp,fp
  813fc4:	df000017 	ldw	fp,0(sp)
  813fc8:	dec00104 	addi	sp,sp,4
  813fcc:	f800283a 	ret

00813fd0 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
  813fd0:	defff304 	addi	sp,sp,-52
  813fd4:	dfc00c15 	stw	ra,48(sp)
  813fd8:	df000b15 	stw	fp,44(sp)
  813fdc:	df000b04 	addi	fp,sp,44
  813fe0:	e13ffc15 	stw	r4,-16(fp)
  813fe4:	e17ffd15 	stw	r5,-12(fp)
  813fe8:	e1bffe15 	stw	r6,-8(fp)
  813fec:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
  813ff0:	e0bffd17 	ldw	r2,-12(fp)
  813ff4:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
  813ff8:	00004706 	br	814118 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
  813ffc:	e0bffc17 	ldw	r2,-16(fp)
  814000:	10800a17 	ldw	r2,40(r2)
  814004:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
  814008:	e0bffc17 	ldw	r2,-16(fp)
  81400c:	10800b17 	ldw	r2,44(r2)
  814010:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
  814014:	e0fff717 	ldw	r3,-36(fp)
  814018:	e0bff817 	ldw	r2,-32(fp)
  81401c:	18800536 	bltu	r3,r2,814034 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
  814020:	e0fff717 	ldw	r3,-36(fp)
  814024:	e0bff817 	ldw	r2,-32(fp)
  814028:	1885c83a 	sub	r2,r3,r2
  81402c:	e0bff615 	stw	r2,-40(fp)
  814030:	00000406 	br	814044 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
  814034:	00c20004 	movi	r3,2048
  814038:	e0bff817 	ldw	r2,-32(fp)
  81403c:	1885c83a 	sub	r2,r3,r2
  814040:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
  814044:	e0bff617 	ldw	r2,-40(fp)
  814048:	10001e26 	beq	r2,zero,8140c4 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
  81404c:	e0fffe17 	ldw	r3,-8(fp)
  814050:	e0bff617 	ldw	r2,-40(fp)
  814054:	1880022e 	bgeu	r3,r2,814060 <altera_avalon_jtag_uart_read+0x90>
        n = space;
  814058:	e0bffe17 	ldw	r2,-8(fp)
  81405c:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
  814060:	e0bffc17 	ldw	r2,-16(fp)
  814064:	10c00e04 	addi	r3,r2,56
  814068:	e0bff817 	ldw	r2,-32(fp)
  81406c:	1885883a 	add	r2,r3,r2
  814070:	e1bff617 	ldw	r6,-40(fp)
  814074:	100b883a 	mov	r5,r2
  814078:	e13ff517 	ldw	r4,-44(fp)
  81407c:	080e6d00 	call	80e6d0 <memcpy>
      ptr   += n;
  814080:	e0fff517 	ldw	r3,-44(fp)
  814084:	e0bff617 	ldw	r2,-40(fp)
  814088:	1885883a 	add	r2,r3,r2
  81408c:	e0bff515 	stw	r2,-44(fp)
      space -= n;
  814090:	e0fffe17 	ldw	r3,-8(fp)
  814094:	e0bff617 	ldw	r2,-40(fp)
  814098:	1885c83a 	sub	r2,r3,r2
  81409c:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  8140a0:	e0fff817 	ldw	r3,-32(fp)
  8140a4:	e0bff617 	ldw	r2,-40(fp)
  8140a8:	1885883a 	add	r2,r3,r2
  8140ac:	10c1ffcc 	andi	r3,r2,2047
  8140b0:	e0bffc17 	ldw	r2,-16(fp)
  8140b4:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
  8140b8:	e0bffe17 	ldw	r2,-8(fp)
  8140bc:	00bfcf16 	blt	zero,r2,813ffc <__alt_data_end+0xff813ffc>
  8140c0:	00000106 	br	8140c8 <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
  8140c4:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
  8140c8:	e0fff517 	ldw	r3,-44(fp)
  8140cc:	e0bffd17 	ldw	r2,-12(fp)
  8140d0:	1880141e 	bne	r3,r2,814124 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
  8140d4:	e0bfff17 	ldw	r2,-4(fp)
  8140d8:	1090000c 	andi	r2,r2,16384
  8140dc:	1000131e 	bne	r2,zero,81412c <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
  8140e0:	0001883a 	nop
  8140e4:	e0bffc17 	ldw	r2,-16(fp)
  8140e8:	10c00a17 	ldw	r3,40(r2)
  8140ec:	e0bff717 	ldw	r2,-36(fp)
  8140f0:	1880051e 	bne	r3,r2,814108 <altera_avalon_jtag_uart_read+0x138>
  8140f4:	e0bffc17 	ldw	r2,-16(fp)
  8140f8:	10c00917 	ldw	r3,36(r2)
  8140fc:	e0bffc17 	ldw	r2,-16(fp)
  814100:	10800117 	ldw	r2,4(r2)
  814104:	18bff736 	bltu	r3,r2,8140e4 <__alt_data_end+0xff8140e4>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
  814108:	e0bffc17 	ldw	r2,-16(fp)
  81410c:	10c00a17 	ldw	r3,40(r2)
  814110:	e0bff717 	ldw	r2,-36(fp)
  814114:	18800726 	beq	r3,r2,814134 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
  814118:	e0bffe17 	ldw	r2,-8(fp)
  81411c:	00bfb716 	blt	zero,r2,813ffc <__alt_data_end+0xff813ffc>
  814120:	00000506 	br	814138 <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
  814124:	0001883a 	nop
  814128:	00000306 	br	814138 <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
  81412c:	0001883a 	nop
  814130:	00000106 	br	814138 <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
  814134:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
  814138:	e0fff517 	ldw	r3,-44(fp)
  81413c:	e0bffd17 	ldw	r2,-12(fp)
  814140:	18801826 	beq	r3,r2,8141a4 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  814144:	0005303a 	rdctl	r2,status
  814148:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  81414c:	e0fffb17 	ldw	r3,-20(fp)
  814150:	00bfff84 	movi	r2,-2
  814154:	1884703a 	and	r2,r3,r2
  814158:	1001703a 	wrctl	status,r2
  
  return context;
  81415c:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
  814160:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  814164:	e0bffc17 	ldw	r2,-16(fp)
  814168:	10800817 	ldw	r2,32(r2)
  81416c:	10c00054 	ori	r3,r2,1
  814170:	e0bffc17 	ldw	r2,-16(fp)
  814174:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  814178:	e0bffc17 	ldw	r2,-16(fp)
  81417c:	10800017 	ldw	r2,0(r2)
  814180:	10800104 	addi	r2,r2,4
  814184:	1007883a 	mov	r3,r2
  814188:	e0bffc17 	ldw	r2,-16(fp)
  81418c:	10800817 	ldw	r2,32(r2)
  814190:	18800035 	stwio	r2,0(r3)
  814194:	e0bffa17 	ldw	r2,-24(fp)
  814198:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  81419c:	e0bff917 	ldw	r2,-28(fp)
  8141a0:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
  8141a4:	e0fff517 	ldw	r3,-44(fp)
  8141a8:	e0bffd17 	ldw	r2,-12(fp)
  8141ac:	18800426 	beq	r3,r2,8141c0 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
  8141b0:	e0fff517 	ldw	r3,-44(fp)
  8141b4:	e0bffd17 	ldw	r2,-12(fp)
  8141b8:	1885c83a 	sub	r2,r3,r2
  8141bc:	00000606 	br	8141d8 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
  8141c0:	e0bfff17 	ldw	r2,-4(fp)
  8141c4:	1090000c 	andi	r2,r2,16384
  8141c8:	10000226 	beq	r2,zero,8141d4 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
  8141cc:	00bffd44 	movi	r2,-11
  8141d0:	00000106 	br	8141d8 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
  8141d4:	00bffec4 	movi	r2,-5
}
  8141d8:	e037883a 	mov	sp,fp
  8141dc:	dfc00117 	ldw	ra,4(sp)
  8141e0:	df000017 	ldw	fp,0(sp)
  8141e4:	dec00204 	addi	sp,sp,8
  8141e8:	f800283a 	ret

008141ec <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
  8141ec:	defff304 	addi	sp,sp,-52
  8141f0:	dfc00c15 	stw	ra,48(sp)
  8141f4:	df000b15 	stw	fp,44(sp)
  8141f8:	df000b04 	addi	fp,sp,44
  8141fc:	e13ffc15 	stw	r4,-16(fp)
  814200:	e17ffd15 	stw	r5,-12(fp)
  814204:	e1bffe15 	stw	r6,-8(fp)
  814208:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
  81420c:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
  814210:	e0bffd17 	ldw	r2,-12(fp)
  814214:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
  814218:	00003706 	br	8142f8 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
  81421c:	e0bffc17 	ldw	r2,-16(fp)
  814220:	10800c17 	ldw	r2,48(r2)
  814224:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
  814228:	e0bffc17 	ldw	r2,-16(fp)
  81422c:	10800d17 	ldw	r2,52(r2)
  814230:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
  814234:	e0fff917 	ldw	r3,-28(fp)
  814238:	e0bff517 	ldw	r2,-44(fp)
  81423c:	1880062e 	bgeu	r3,r2,814258 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
  814240:	e0fff517 	ldw	r3,-44(fp)
  814244:	e0bff917 	ldw	r2,-28(fp)
  814248:	1885c83a 	sub	r2,r3,r2
  81424c:	10bfffc4 	addi	r2,r2,-1
  814250:	e0bff615 	stw	r2,-40(fp)
  814254:	00000b06 	br	814284 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
  814258:	e0bff517 	ldw	r2,-44(fp)
  81425c:	10000526 	beq	r2,zero,814274 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
  814260:	00c20004 	movi	r3,2048
  814264:	e0bff917 	ldw	r2,-28(fp)
  814268:	1885c83a 	sub	r2,r3,r2
  81426c:	e0bff615 	stw	r2,-40(fp)
  814270:	00000406 	br	814284 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
  814274:	00c1ffc4 	movi	r3,2047
  814278:	e0bff917 	ldw	r2,-28(fp)
  81427c:	1885c83a 	sub	r2,r3,r2
  814280:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
  814284:	e0bff617 	ldw	r2,-40(fp)
  814288:	10001e26 	beq	r2,zero,814304 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
  81428c:	e0fffe17 	ldw	r3,-8(fp)
  814290:	e0bff617 	ldw	r2,-40(fp)
  814294:	1880022e 	bgeu	r3,r2,8142a0 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
  814298:	e0bffe17 	ldw	r2,-8(fp)
  81429c:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
  8142a0:	e0bffc17 	ldw	r2,-16(fp)
  8142a4:	10c20e04 	addi	r3,r2,2104
  8142a8:	e0bff917 	ldw	r2,-28(fp)
  8142ac:	1885883a 	add	r2,r3,r2
  8142b0:	e1bff617 	ldw	r6,-40(fp)
  8142b4:	e17ffd17 	ldw	r5,-12(fp)
  8142b8:	1009883a 	mov	r4,r2
  8142bc:	080e6d00 	call	80e6d0 <memcpy>
      ptr   += n;
  8142c0:	e0fffd17 	ldw	r3,-12(fp)
  8142c4:	e0bff617 	ldw	r2,-40(fp)
  8142c8:	1885883a 	add	r2,r3,r2
  8142cc:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
  8142d0:	e0fffe17 	ldw	r3,-8(fp)
  8142d4:	e0bff617 	ldw	r2,-40(fp)
  8142d8:	1885c83a 	sub	r2,r3,r2
  8142dc:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  8142e0:	e0fff917 	ldw	r3,-28(fp)
  8142e4:	e0bff617 	ldw	r2,-40(fp)
  8142e8:	1885883a 	add	r2,r3,r2
  8142ec:	10c1ffcc 	andi	r3,r2,2047
  8142f0:	e0bffc17 	ldw	r2,-16(fp)
  8142f4:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
  8142f8:	e0bffe17 	ldw	r2,-8(fp)
  8142fc:	00bfc716 	blt	zero,r2,81421c <__alt_data_end+0xff81421c>
  814300:	00000106 	br	814308 <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
  814304:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  814308:	0005303a 	rdctl	r2,status
  81430c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  814310:	e0fffb17 	ldw	r3,-20(fp)
  814314:	00bfff84 	movi	r2,-2
  814318:	1884703a 	and	r2,r3,r2
  81431c:	1001703a 	wrctl	status,r2
  
  return context;
  814320:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
  814324:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
  814328:	e0bffc17 	ldw	r2,-16(fp)
  81432c:	10800817 	ldw	r2,32(r2)
  814330:	10c00094 	ori	r3,r2,2
  814334:	e0bffc17 	ldw	r2,-16(fp)
  814338:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  81433c:	e0bffc17 	ldw	r2,-16(fp)
  814340:	10800017 	ldw	r2,0(r2)
  814344:	10800104 	addi	r2,r2,4
  814348:	1007883a 	mov	r3,r2
  81434c:	e0bffc17 	ldw	r2,-16(fp)
  814350:	10800817 	ldw	r2,32(r2)
  814354:	18800035 	stwio	r2,0(r3)
  814358:	e0bffa17 	ldw	r2,-24(fp)
  81435c:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  814360:	e0bff817 	ldw	r2,-32(fp)
  814364:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
  814368:	e0bffe17 	ldw	r2,-8(fp)
  81436c:	0080100e 	bge	zero,r2,8143b0 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
  814370:	e0bfff17 	ldw	r2,-4(fp)
  814374:	1090000c 	andi	r2,r2,16384
  814378:	1000101e 	bne	r2,zero,8143bc <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
  81437c:	0001883a 	nop
  814380:	e0bffc17 	ldw	r2,-16(fp)
  814384:	10c00d17 	ldw	r3,52(r2)
  814388:	e0bff517 	ldw	r2,-44(fp)
  81438c:	1880051e 	bne	r3,r2,8143a4 <altera_avalon_jtag_uart_write+0x1b8>
  814390:	e0bffc17 	ldw	r2,-16(fp)
  814394:	10c00917 	ldw	r3,36(r2)
  814398:	e0bffc17 	ldw	r2,-16(fp)
  81439c:	10800117 	ldw	r2,4(r2)
  8143a0:	18bff736 	bltu	r3,r2,814380 <__alt_data_end+0xff814380>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
  8143a4:	e0bffc17 	ldw	r2,-16(fp)
  8143a8:	10800917 	ldw	r2,36(r2)
  8143ac:	1000051e 	bne	r2,zero,8143c4 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
  8143b0:	e0bffe17 	ldw	r2,-8(fp)
  8143b4:	00bfd016 	blt	zero,r2,8142f8 <__alt_data_end+0xff8142f8>
  8143b8:	00000306 	br	8143c8 <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
  8143bc:	0001883a 	nop
  8143c0:	00000106 	br	8143c8 <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
  8143c4:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
  8143c8:	e0fffd17 	ldw	r3,-12(fp)
  8143cc:	e0bff717 	ldw	r2,-36(fp)
  8143d0:	18800426 	beq	r3,r2,8143e4 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
  8143d4:	e0fffd17 	ldw	r3,-12(fp)
  8143d8:	e0bff717 	ldw	r2,-36(fp)
  8143dc:	1885c83a 	sub	r2,r3,r2
  8143e0:	00000606 	br	8143fc <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
  8143e4:	e0bfff17 	ldw	r2,-4(fp)
  8143e8:	1090000c 	andi	r2,r2,16384
  8143ec:	10000226 	beq	r2,zero,8143f8 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
  8143f0:	00bffd44 	movi	r2,-11
  8143f4:	00000106 	br	8143fc <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
  8143f8:	00bffec4 	movi	r2,-5
}
  8143fc:	e037883a 	mov	sp,fp
  814400:	dfc00117 	ldw	ra,4(sp)
  814404:	df000017 	ldw	fp,0(sp)
  814408:	dec00204 	addi	sp,sp,8
  81440c:	f800283a 	ret

00814410 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
  814410:	defffa04 	addi	sp,sp,-24
  814414:	dfc00515 	stw	ra,20(sp)
  814418:	df000415 	stw	fp,16(sp)
  81441c:	df000404 	addi	fp,sp,16
  814420:	e13fff15 	stw	r4,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
  814424:	0007883a 	mov	r3,zero
  814428:	e0bfff17 	ldw	r2,-4(fp)
  81442c:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
  814430:	e0bfff17 	ldw	r2,-4(fp)
  814434:	10800104 	addi	r2,r2,4
  814438:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  81443c:	0005303a 	rdctl	r2,status
  814440:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  814444:	e0fffd17 	ldw	r3,-12(fp)
  814448:	00bfff84 	movi	r2,-2
  81444c:	1884703a 	and	r2,r3,r2
  814450:	1001703a 	wrctl	status,r2
  
  return context;
  814454:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
  814458:	e0bffc15 	stw	r2,-16(fp)
  alt_tick ();
  81445c:	0814f1c0 	call	814f1c <alt_tick>
  814460:	e0bffc17 	ldw	r2,-16(fp)
  814464:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  814468:	e0bffe17 	ldw	r2,-8(fp)
  81446c:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
  814470:	0001883a 	nop
  814474:	e037883a 	mov	sp,fp
  814478:	dfc00117 	ldw	ra,4(sp)
  81447c:	df000017 	ldw	fp,0(sp)
  814480:	dec00204 	addi	sp,sp,8
  814484:	f800283a 	ret

00814488 <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
  814488:	defff804 	addi	sp,sp,-32
  81448c:	dfc00715 	stw	ra,28(sp)
  814490:	df000615 	stw	fp,24(sp)
  814494:	df000604 	addi	fp,sp,24
  814498:	e13ffc15 	stw	r4,-16(fp)
  81449c:	e17ffd15 	stw	r5,-12(fp)
  8144a0:	e1bffe15 	stw	r6,-8(fp)
  8144a4:	e1ffff15 	stw	r7,-4(fp)
  8144a8:	e0bfff17 	ldw	r2,-4(fp)
  8144ac:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
  8144b0:	d0a6da17 	ldw	r2,-25752(gp)
  8144b4:	1000021e 	bne	r2,zero,8144c0 <alt_avalon_timer_sc_init+0x38>
  {
    _alt_tick_rate = nticks;
  8144b8:	e0bffb17 	ldw	r2,-20(fp)
  8144bc:	d0a6da15 	stw	r2,-25752(gp)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
  8144c0:	e0bffc17 	ldw	r2,-16(fp)
  8144c4:	10800104 	addi	r2,r2,4
  8144c8:	00c001c4 	movi	r3,7
  8144cc:	10c00035 	stwio	r3,0(r2)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
  8144d0:	d8000015 	stw	zero,0(sp)
  8144d4:	e1fffc17 	ldw	r7,-16(fp)
  8144d8:	01802074 	movhi	r6,129
  8144dc:	31910404 	addi	r6,r6,17424
  8144e0:	e17ffe17 	ldw	r5,-8(fp)
  8144e4:	e13ffd17 	ldw	r4,-12(fp)
  8144e8:	081484c0 	call	81484c <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
  8144ec:	0001883a 	nop
  8144f0:	e037883a 	mov	sp,fp
  8144f4:	dfc00117 	ldw	ra,4(sp)
  8144f8:	df000017 	ldw	fp,0(sp)
  8144fc:	dec00204 	addi	sp,sp,8
  814500:	f800283a 	ret

00814504 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
  814504:	defff504 	addi	sp,sp,-44
  814508:	df000a15 	stw	fp,40(sp)
  81450c:	df000a04 	addi	fp,sp,40
  814510:	e13ffc15 	stw	r4,-16(fp)
  814514:	e17ffd15 	stw	r5,-12(fp)
  814518:	e1bffe15 	stw	r6,-8(fp)
  81451c:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
  814520:	e03ff615 	stw	zero,-40(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
  814524:	d0a6da17 	ldw	r2,-25752(gp)
  
  if (alt_ticks_per_second ())
  814528:	10003c26 	beq	r2,zero,81461c <alt_alarm_start+0x118>
  {
    if (alarm)
  81452c:	e0bffc17 	ldw	r2,-16(fp)
  814530:	10003826 	beq	r2,zero,814614 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
  814534:	e0bffc17 	ldw	r2,-16(fp)
  814538:	e0fffe17 	ldw	r3,-8(fp)
  81453c:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
  814540:	e0bffc17 	ldw	r2,-16(fp)
  814544:	e0ffff17 	ldw	r3,-4(fp)
  814548:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  81454c:	0005303a 	rdctl	r2,status
  814550:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  814554:	e0fff917 	ldw	r3,-28(fp)
  814558:	00bfff84 	movi	r2,-2
  81455c:	1884703a 	and	r2,r3,r2
  814560:	1001703a 	wrctl	status,r2
  
  return context;
  814564:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
  814568:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
  81456c:	d0a6db17 	ldw	r2,-25748(gp)
      
      current_nticks = alt_nticks();
  814570:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
  814574:	e0fffd17 	ldw	r3,-12(fp)
  814578:	e0bff617 	ldw	r2,-40(fp)
  81457c:	1885883a 	add	r2,r3,r2
  814580:	10c00044 	addi	r3,r2,1
  814584:	e0bffc17 	ldw	r2,-16(fp)
  814588:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
  81458c:	e0bffc17 	ldw	r2,-16(fp)
  814590:	10c00217 	ldw	r3,8(r2)
  814594:	e0bff617 	ldw	r2,-40(fp)
  814598:	1880042e 	bgeu	r3,r2,8145ac <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
  81459c:	e0bffc17 	ldw	r2,-16(fp)
  8145a0:	00c00044 	movi	r3,1
  8145a4:	10c00405 	stb	r3,16(r2)
  8145a8:	00000206 	br	8145b4 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
  8145ac:	e0bffc17 	ldw	r2,-16(fp)
  8145b0:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
  8145b4:	e0bffc17 	ldw	r2,-16(fp)
  8145b8:	d0e01004 	addi	r3,gp,-32704
  8145bc:	e0fffa15 	stw	r3,-24(fp)
  8145c0:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
  8145c4:	e0bffb17 	ldw	r2,-20(fp)
  8145c8:	e0fffa17 	ldw	r3,-24(fp)
  8145cc:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
  8145d0:	e0bffa17 	ldw	r2,-24(fp)
  8145d4:	10c00017 	ldw	r3,0(r2)
  8145d8:	e0bffb17 	ldw	r2,-20(fp)
  8145dc:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
  8145e0:	e0bffa17 	ldw	r2,-24(fp)
  8145e4:	10800017 	ldw	r2,0(r2)
  8145e8:	e0fffb17 	ldw	r3,-20(fp)
  8145ec:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
  8145f0:	e0bffa17 	ldw	r2,-24(fp)
  8145f4:	e0fffb17 	ldw	r3,-20(fp)
  8145f8:	10c00015 	stw	r3,0(r2)
  8145fc:	e0bff817 	ldw	r2,-32(fp)
  814600:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  814604:	e0bff717 	ldw	r2,-36(fp)
  814608:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
  81460c:	0005883a 	mov	r2,zero
  814610:	00000306 	br	814620 <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
  814614:	00bffa84 	movi	r2,-22
  814618:	00000106 	br	814620 <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
  81461c:	00bfde84 	movi	r2,-134
  }
}
  814620:	e037883a 	mov	sp,fp
  814624:	df000017 	ldw	fp,0(sp)
  814628:	dec00104 	addi	sp,sp,4
  81462c:	f800283a 	ret

00814630 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
  814630:	defffe04 	addi	sp,sp,-8
  814634:	df000115 	stw	fp,4(sp)
  814638:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  81463c:	e03fff15 	stw	zero,-4(fp)
  814640:	00000506 	br	814658 <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  814644:	e0bfff17 	ldw	r2,-4(fp)
  814648:	1000003b 	flushd	0(r2)
void alt_dcache_flush_all (void)
{
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  81464c:	e0bfff17 	ldw	r2,-4(fp)
  814650:	10800804 	addi	r2,r2,32
  814654:	e0bfff15 	stw	r2,-4(fp)
  814658:	e0bfff17 	ldw	r2,-4(fp)
  81465c:	10810030 	cmpltui	r2,r2,1024
  814660:	103ff81e 	bne	r2,zero,814644 <__alt_data_end+0xff814644>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
  814664:	0001883a 	nop
  814668:	e037883a 	mov	sp,fp
  81466c:	df000017 	ldw	fp,0(sp)
  814670:	dec00104 	addi	sp,sp,4
  814674:	f800283a 	ret

00814678 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  814678:	defffe04 	addi	sp,sp,-8
  81467c:	dfc00115 	stw	ra,4(sp)
  814680:	df000015 	stw	fp,0(sp)
  814684:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  814688:	d0a00d17 	ldw	r2,-32716(gp)
  81468c:	10000326 	beq	r2,zero,81469c <alt_get_errno+0x24>
  814690:	d0a00d17 	ldw	r2,-32716(gp)
  814694:	103ee83a 	callr	r2
  814698:	00000106 	br	8146a0 <alt_get_errno+0x28>
  81469c:	d0a6d504 	addi	r2,gp,-25772
}
  8146a0:	e037883a 	mov	sp,fp
  8146a4:	dfc00117 	ldw	ra,4(sp)
  8146a8:	df000017 	ldw	fp,0(sp)
  8146ac:	dec00204 	addi	sp,sp,8
  8146b0:	f800283a 	ret

008146b4 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
  8146b4:	defffa04 	addi	sp,sp,-24
  8146b8:	dfc00515 	stw	ra,20(sp)
  8146bc:	df000415 	stw	fp,16(sp)
  8146c0:	df000404 	addi	fp,sp,16
  8146c4:	e13ffe15 	stw	r4,-8(fp)
  8146c8:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
  8146cc:	e0bffe17 	ldw	r2,-8(fp)
  8146d0:	10000326 	beq	r2,zero,8146e0 <alt_dev_llist_insert+0x2c>
  8146d4:	e0bffe17 	ldw	r2,-8(fp)
  8146d8:	10800217 	ldw	r2,8(r2)
  8146dc:	1000061e 	bne	r2,zero,8146f8 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
  8146e0:	08146780 	call	814678 <alt_get_errno>
  8146e4:	1007883a 	mov	r3,r2
  8146e8:	00800584 	movi	r2,22
  8146ec:	18800015 	stw	r2,0(r3)
    return -EINVAL;
  8146f0:	00bffa84 	movi	r2,-22
  8146f4:	00001306 	br	814744 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
  8146f8:	e0bffe17 	ldw	r2,-8(fp)
  8146fc:	e0ffff17 	ldw	r3,-4(fp)
  814700:	e0fffc15 	stw	r3,-16(fp)
  814704:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
  814708:	e0bffd17 	ldw	r2,-12(fp)
  81470c:	e0fffc17 	ldw	r3,-16(fp)
  814710:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
  814714:	e0bffc17 	ldw	r2,-16(fp)
  814718:	10c00017 	ldw	r3,0(r2)
  81471c:	e0bffd17 	ldw	r2,-12(fp)
  814720:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
  814724:	e0bffc17 	ldw	r2,-16(fp)
  814728:	10800017 	ldw	r2,0(r2)
  81472c:	e0fffd17 	ldw	r3,-12(fp)
  814730:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
  814734:	e0bffc17 	ldw	r2,-16(fp)
  814738:	e0fffd17 	ldw	r3,-12(fp)
  81473c:	10c00015 	stw	r3,0(r2)

  return 0;  
  814740:	0005883a 	mov	r2,zero
}
  814744:	e037883a 	mov	sp,fp
  814748:	dfc00117 	ldw	ra,4(sp)
  81474c:	df000017 	ldw	fp,0(sp)
  814750:	dec00204 	addi	sp,sp,8
  814754:	f800283a 	ret

00814758 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
  814758:	defffd04 	addi	sp,sp,-12
  81475c:	dfc00215 	stw	ra,8(sp)
  814760:	df000115 	stw	fp,4(sp)
  814764:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
  814768:	00802074 	movhi	r2,129
  81476c:	1095fd04 	addi	r2,r2,22516
  814770:	e0bfff15 	stw	r2,-4(fp)
  814774:	00000606 	br	814790 <_do_ctors+0x38>
        (*ctor) (); 
  814778:	e0bfff17 	ldw	r2,-4(fp)
  81477c:	10800017 	ldw	r2,0(r2)
  814780:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
  814784:	e0bfff17 	ldw	r2,-4(fp)
  814788:	10bfff04 	addi	r2,r2,-4
  81478c:	e0bfff15 	stw	r2,-4(fp)
  814790:	e0ffff17 	ldw	r3,-4(fp)
  814794:	00802074 	movhi	r2,129
  814798:	1095fe04 	addi	r2,r2,22520
  81479c:	18bff62e 	bgeu	r3,r2,814778 <__alt_data_end+0xff814778>
        (*ctor) (); 
}
  8147a0:	0001883a 	nop
  8147a4:	e037883a 	mov	sp,fp
  8147a8:	dfc00117 	ldw	ra,4(sp)
  8147ac:	df000017 	ldw	fp,0(sp)
  8147b0:	dec00204 	addi	sp,sp,8
  8147b4:	f800283a 	ret

008147b8 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
  8147b8:	defffd04 	addi	sp,sp,-12
  8147bc:	dfc00215 	stw	ra,8(sp)
  8147c0:	df000115 	stw	fp,4(sp)
  8147c4:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
  8147c8:	00802074 	movhi	r2,129
  8147cc:	1095fd04 	addi	r2,r2,22516
  8147d0:	e0bfff15 	stw	r2,-4(fp)
  8147d4:	00000606 	br	8147f0 <_do_dtors+0x38>
        (*dtor) (); 
  8147d8:	e0bfff17 	ldw	r2,-4(fp)
  8147dc:	10800017 	ldw	r2,0(r2)
  8147e0:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
  8147e4:	e0bfff17 	ldw	r2,-4(fp)
  8147e8:	10bfff04 	addi	r2,r2,-4
  8147ec:	e0bfff15 	stw	r2,-4(fp)
  8147f0:	e0ffff17 	ldw	r3,-4(fp)
  8147f4:	00802074 	movhi	r2,129
  8147f8:	1095fe04 	addi	r2,r2,22520
  8147fc:	18bff62e 	bgeu	r3,r2,8147d8 <__alt_data_end+0xff8147d8>
        (*dtor) (); 
}
  814800:	0001883a 	nop
  814804:	e037883a 	mov	sp,fp
  814808:	dfc00117 	ldw	ra,4(sp)
  81480c:	df000017 	ldw	fp,0(sp)
  814810:	dec00204 	addi	sp,sp,8
  814814:	f800283a 	ret

00814818 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
  814818:	defffe04 	addi	sp,sp,-8
  81481c:	dfc00115 	stw	ra,4(sp)
  814820:	df000015 	stw	fp,0(sp)
  814824:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
  814828:	01480004 	movi	r5,8192
  81482c:	0009883a 	mov	r4,zero
  814830:	08152840 	call	815284 <alt_icache_flush>
#endif
}
  814834:	0001883a 	nop
  814838:	e037883a 	mov	sp,fp
  81483c:	dfc00117 	ldw	ra,4(sp)
  814840:	df000017 	ldw	fp,0(sp)
  814844:	dec00204 	addi	sp,sp,8
  814848:	f800283a 	ret

0081484c <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
  81484c:	defff904 	addi	sp,sp,-28
  814850:	dfc00615 	stw	ra,24(sp)
  814854:	df000515 	stw	fp,20(sp)
  814858:	df000504 	addi	fp,sp,20
  81485c:	e13ffc15 	stw	r4,-16(fp)
  814860:	e17ffd15 	stw	r5,-12(fp)
  814864:	e1bffe15 	stw	r6,-8(fp)
  814868:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
  81486c:	e0800217 	ldw	r2,8(fp)
  814870:	d8800015 	stw	r2,0(sp)
  814874:	e1ffff17 	ldw	r7,-4(fp)
  814878:	e1bffe17 	ldw	r6,-8(fp)
  81487c:	e17ffd17 	ldw	r5,-12(fp)
  814880:	e13ffc17 	ldw	r4,-16(fp)
  814884:	08149fc0 	call	8149fc <alt_iic_isr_register>
}  
  814888:	e037883a 	mov	sp,fp
  81488c:	dfc00117 	ldw	ra,4(sp)
  814890:	df000017 	ldw	fp,0(sp)
  814894:	dec00204 	addi	sp,sp,8
  814898:	f800283a 	ret

0081489c <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
  81489c:	defff904 	addi	sp,sp,-28
  8148a0:	df000615 	stw	fp,24(sp)
  8148a4:	df000604 	addi	fp,sp,24
  8148a8:	e13ffe15 	stw	r4,-8(fp)
  8148ac:	e17fff15 	stw	r5,-4(fp)
  8148b0:	e0bfff17 	ldw	r2,-4(fp)
  8148b4:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  8148b8:	0005303a 	rdctl	r2,status
  8148bc:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  8148c0:	e0fffb17 	ldw	r3,-20(fp)
  8148c4:	00bfff84 	movi	r2,-2
  8148c8:	1884703a 	and	r2,r3,r2
  8148cc:	1001703a 	wrctl	status,r2
  
  return context;
  8148d0:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
  8148d4:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
  8148d8:	00c00044 	movi	r3,1
  8148dc:	e0bffa17 	ldw	r2,-24(fp)
  8148e0:	1884983a 	sll	r2,r3,r2
  8148e4:	1007883a 	mov	r3,r2
  8148e8:	d0a6d917 	ldw	r2,-25756(gp)
  8148ec:	1884b03a 	or	r2,r3,r2
  8148f0:	d0a6d915 	stw	r2,-25756(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
  8148f4:	d0a6d917 	ldw	r2,-25756(gp)
  8148f8:	100170fa 	wrctl	ienable,r2
  8148fc:	e0bffc17 	ldw	r2,-16(fp)
  814900:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  814904:	e0bffd17 	ldw	r2,-12(fp)
  814908:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
  81490c:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
  814910:	0001883a 	nop
}
  814914:	e037883a 	mov	sp,fp
  814918:	df000017 	ldw	fp,0(sp)
  81491c:	dec00104 	addi	sp,sp,4
  814920:	f800283a 	ret

00814924 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
  814924:	defff904 	addi	sp,sp,-28
  814928:	df000615 	stw	fp,24(sp)
  81492c:	df000604 	addi	fp,sp,24
  814930:	e13ffe15 	stw	r4,-8(fp)
  814934:	e17fff15 	stw	r5,-4(fp)
  814938:	e0bfff17 	ldw	r2,-4(fp)
  81493c:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  814940:	0005303a 	rdctl	r2,status
  814944:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  814948:	e0fffb17 	ldw	r3,-20(fp)
  81494c:	00bfff84 	movi	r2,-2
  814950:	1884703a 	and	r2,r3,r2
  814954:	1001703a 	wrctl	status,r2
  
  return context;
  814958:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
  81495c:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
  814960:	00c00044 	movi	r3,1
  814964:	e0bffa17 	ldw	r2,-24(fp)
  814968:	1884983a 	sll	r2,r3,r2
  81496c:	0084303a 	nor	r2,zero,r2
  814970:	1007883a 	mov	r3,r2
  814974:	d0a6d917 	ldw	r2,-25756(gp)
  814978:	1884703a 	and	r2,r3,r2
  81497c:	d0a6d915 	stw	r2,-25756(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
  814980:	d0a6d917 	ldw	r2,-25756(gp)
  814984:	100170fa 	wrctl	ienable,r2
  814988:	e0bffc17 	ldw	r2,-16(fp)
  81498c:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  814990:	e0bffd17 	ldw	r2,-12(fp)
  814994:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
  814998:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
  81499c:	0001883a 	nop
}
  8149a0:	e037883a 	mov	sp,fp
  8149a4:	df000017 	ldw	fp,0(sp)
  8149a8:	dec00104 	addi	sp,sp,4
  8149ac:	f800283a 	ret

008149b0 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
  8149b0:	defffc04 	addi	sp,sp,-16
  8149b4:	df000315 	stw	fp,12(sp)
  8149b8:	df000304 	addi	fp,sp,12
  8149bc:	e13ffe15 	stw	r4,-8(fp)
  8149c0:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
  8149c4:	000530fa 	rdctl	r2,ienable
  8149c8:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
  8149cc:	00c00044 	movi	r3,1
  8149d0:	e0bfff17 	ldw	r2,-4(fp)
  8149d4:	1884983a 	sll	r2,r3,r2
  8149d8:	1007883a 	mov	r3,r2
  8149dc:	e0bffd17 	ldw	r2,-12(fp)
  8149e0:	1884703a 	and	r2,r3,r2
  8149e4:	1004c03a 	cmpne	r2,r2,zero
  8149e8:	10803fcc 	andi	r2,r2,255
}
  8149ec:	e037883a 	mov	sp,fp
  8149f0:	df000017 	ldw	fp,0(sp)
  8149f4:	dec00104 	addi	sp,sp,4
  8149f8:	f800283a 	ret

008149fc <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
  8149fc:	defff504 	addi	sp,sp,-44
  814a00:	dfc00a15 	stw	ra,40(sp)
  814a04:	df000915 	stw	fp,36(sp)
  814a08:	df000904 	addi	fp,sp,36
  814a0c:	e13ffc15 	stw	r4,-16(fp)
  814a10:	e17ffd15 	stw	r5,-12(fp)
  814a14:	e1bffe15 	stw	r6,-8(fp)
  814a18:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
  814a1c:	00bffa84 	movi	r2,-22
  814a20:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
  814a24:	e0bffd17 	ldw	r2,-12(fp)
  814a28:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
  814a2c:	e0bff817 	ldw	r2,-32(fp)
  814a30:	10800808 	cmpgei	r2,r2,32
  814a34:	1000271e 	bne	r2,zero,814ad4 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  814a38:	0005303a 	rdctl	r2,status
  814a3c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  814a40:	e0fffb17 	ldw	r3,-20(fp)
  814a44:	00bfff84 	movi	r2,-2
  814a48:	1884703a 	and	r2,r3,r2
  814a4c:	1001703a 	wrctl	status,r2
  
  return context;
  814a50:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
  814a54:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
  814a58:	008020b4 	movhi	r2,130
  814a5c:	10a64304 	addi	r2,r2,-26356
  814a60:	e0fff817 	ldw	r3,-32(fp)
  814a64:	180690fa 	slli	r3,r3,3
  814a68:	10c5883a 	add	r2,r2,r3
  814a6c:	e0fffe17 	ldw	r3,-8(fp)
  814a70:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
  814a74:	008020b4 	movhi	r2,130
  814a78:	10a64304 	addi	r2,r2,-26356
  814a7c:	e0fff817 	ldw	r3,-32(fp)
  814a80:	180690fa 	slli	r3,r3,3
  814a84:	10c5883a 	add	r2,r2,r3
  814a88:	10800104 	addi	r2,r2,4
  814a8c:	e0ffff17 	ldw	r3,-4(fp)
  814a90:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
  814a94:	e0bffe17 	ldw	r2,-8(fp)
  814a98:	10000526 	beq	r2,zero,814ab0 <alt_iic_isr_register+0xb4>
  814a9c:	e0bff817 	ldw	r2,-32(fp)
  814aa0:	100b883a 	mov	r5,r2
  814aa4:	e13ffc17 	ldw	r4,-16(fp)
  814aa8:	081489c0 	call	81489c <alt_ic_irq_enable>
  814aac:	00000406 	br	814ac0 <alt_iic_isr_register+0xc4>
  814ab0:	e0bff817 	ldw	r2,-32(fp)
  814ab4:	100b883a 	mov	r5,r2
  814ab8:	e13ffc17 	ldw	r4,-16(fp)
  814abc:	08149240 	call	814924 <alt_ic_irq_disable>
  814ac0:	e0bff715 	stw	r2,-36(fp)
  814ac4:	e0bffa17 	ldw	r2,-24(fp)
  814ac8:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  814acc:	e0bff917 	ldw	r2,-28(fp)
  814ad0:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
  814ad4:	e0bff717 	ldw	r2,-36(fp)
}
  814ad8:	e037883a 	mov	sp,fp
  814adc:	dfc00117 	ldw	ra,4(sp)
  814ae0:	df000017 	ldw	fp,0(sp)
  814ae4:	dec00204 	addi	sp,sp,8
  814ae8:	f800283a 	ret

00814aec <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
  814aec:	defff904 	addi	sp,sp,-28
  814af0:	dfc00615 	stw	ra,24(sp)
  814af4:	df000515 	stw	fp,20(sp)
  814af8:	df000504 	addi	fp,sp,20
  814afc:	e13ffc15 	stw	r4,-16(fp)
  814b00:	e17ffd15 	stw	r5,-12(fp)
  814b04:	e1bffe15 	stw	r6,-8(fp)
  814b08:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
  814b0c:	e1bfff17 	ldw	r6,-4(fp)
  814b10:	e17ffe17 	ldw	r5,-8(fp)
  814b14:	e13ffd17 	ldw	r4,-12(fp)
  814b18:	0814d2c0 	call	814d2c <open>
  814b1c:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
  814b20:	e0bffb17 	ldw	r2,-20(fp)
  814b24:	10001c16 	blt	r2,zero,814b98 <alt_open_fd+0xac>
  {
    fd->dev      = alt_fd_list[old].dev;
  814b28:	00802074 	movhi	r2,129
  814b2c:	10997c04 	addi	r2,r2,26096
  814b30:	e0fffb17 	ldw	r3,-20(fp)
  814b34:	18c00324 	muli	r3,r3,12
  814b38:	10c5883a 	add	r2,r2,r3
  814b3c:	10c00017 	ldw	r3,0(r2)
  814b40:	e0bffc17 	ldw	r2,-16(fp)
  814b44:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
  814b48:	00802074 	movhi	r2,129
  814b4c:	10997c04 	addi	r2,r2,26096
  814b50:	e0fffb17 	ldw	r3,-20(fp)
  814b54:	18c00324 	muli	r3,r3,12
  814b58:	10c5883a 	add	r2,r2,r3
  814b5c:	10800104 	addi	r2,r2,4
  814b60:	10c00017 	ldw	r3,0(r2)
  814b64:	e0bffc17 	ldw	r2,-16(fp)
  814b68:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
  814b6c:	00802074 	movhi	r2,129
  814b70:	10997c04 	addi	r2,r2,26096
  814b74:	e0fffb17 	ldw	r3,-20(fp)
  814b78:	18c00324 	muli	r3,r3,12
  814b7c:	10c5883a 	add	r2,r2,r3
  814b80:	10800204 	addi	r2,r2,8
  814b84:	10c00017 	ldw	r3,0(r2)
  814b88:	e0bffc17 	ldw	r2,-16(fp)
  814b8c:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
  814b90:	e13ffb17 	ldw	r4,-20(fp)
  814b94:	08135dc0 	call	8135dc <alt_release_fd>
  }
} 
  814b98:	0001883a 	nop
  814b9c:	e037883a 	mov	sp,fp
  814ba0:	dfc00117 	ldw	ra,4(sp)
  814ba4:	df000017 	ldw	fp,0(sp)
  814ba8:	dec00204 	addi	sp,sp,8
  814bac:	f800283a 	ret

00814bb0 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
  814bb0:	defffb04 	addi	sp,sp,-20
  814bb4:	dfc00415 	stw	ra,16(sp)
  814bb8:	df000315 	stw	fp,12(sp)
  814bbc:	df000304 	addi	fp,sp,12
  814bc0:	e13ffd15 	stw	r4,-12(fp)
  814bc4:	e17ffe15 	stw	r5,-8(fp)
  814bc8:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
  814bcc:	01c07fc4 	movi	r7,511
  814bd0:	01800044 	movi	r6,1
  814bd4:	e17ffd17 	ldw	r5,-12(fp)
  814bd8:	01002074 	movhi	r4,129
  814bdc:	21197f04 	addi	r4,r4,26108
  814be0:	0814aec0 	call	814aec <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
  814be4:	01c07fc4 	movi	r7,511
  814be8:	000d883a 	mov	r6,zero
  814bec:	e17ffe17 	ldw	r5,-8(fp)
  814bf0:	01002074 	movhi	r4,129
  814bf4:	21197c04 	addi	r4,r4,26096
  814bf8:	0814aec0 	call	814aec <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
  814bfc:	01c07fc4 	movi	r7,511
  814c00:	01800044 	movi	r6,1
  814c04:	e17fff17 	ldw	r5,-4(fp)
  814c08:	01002074 	movhi	r4,129
  814c0c:	21198204 	addi	r4,r4,26120
  814c10:	0814aec0 	call	814aec <alt_open_fd>
}  
  814c14:	0001883a 	nop
  814c18:	e037883a 	mov	sp,fp
  814c1c:	dfc00117 	ldw	ra,4(sp)
  814c20:	df000017 	ldw	fp,0(sp)
  814c24:	dec00204 	addi	sp,sp,8
  814c28:	f800283a 	ret

00814c2c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  814c2c:	defffe04 	addi	sp,sp,-8
  814c30:	dfc00115 	stw	ra,4(sp)
  814c34:	df000015 	stw	fp,0(sp)
  814c38:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  814c3c:	d0a00d17 	ldw	r2,-32716(gp)
  814c40:	10000326 	beq	r2,zero,814c50 <alt_get_errno+0x24>
  814c44:	d0a00d17 	ldw	r2,-32716(gp)
  814c48:	103ee83a 	callr	r2
  814c4c:	00000106 	br	814c54 <alt_get_errno+0x28>
  814c50:	d0a6d504 	addi	r2,gp,-25772
}
  814c54:	e037883a 	mov	sp,fp
  814c58:	dfc00117 	ldw	ra,4(sp)
  814c5c:	df000017 	ldw	fp,0(sp)
  814c60:	dec00204 	addi	sp,sp,8
  814c64:	f800283a 	ret

00814c68 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
  814c68:	defffd04 	addi	sp,sp,-12
  814c6c:	df000215 	stw	fp,8(sp)
  814c70:	df000204 	addi	fp,sp,8
  814c74:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
  814c78:	e0bfff17 	ldw	r2,-4(fp)
  814c7c:	10800217 	ldw	r2,8(r2)
  814c80:	10d00034 	orhi	r3,r2,16384
  814c84:	e0bfff17 	ldw	r2,-4(fp)
  814c88:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  814c8c:	e03ffe15 	stw	zero,-8(fp)
  814c90:	00001d06 	br	814d08 <alt_file_locked+0xa0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
  814c94:	00802074 	movhi	r2,129
  814c98:	10997c04 	addi	r2,r2,26096
  814c9c:	e0fffe17 	ldw	r3,-8(fp)
  814ca0:	18c00324 	muli	r3,r3,12
  814ca4:	10c5883a 	add	r2,r2,r3
  814ca8:	10c00017 	ldw	r3,0(r2)
  814cac:	e0bfff17 	ldw	r2,-4(fp)
  814cb0:	10800017 	ldw	r2,0(r2)
  814cb4:	1880111e 	bne	r3,r2,814cfc <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
  814cb8:	00802074 	movhi	r2,129
  814cbc:	10997c04 	addi	r2,r2,26096
  814cc0:	e0fffe17 	ldw	r3,-8(fp)
  814cc4:	18c00324 	muli	r3,r3,12
  814cc8:	10c5883a 	add	r2,r2,r3
  814ccc:	10800204 	addi	r2,r2,8
  814cd0:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
  814cd4:	1000090e 	bge	r2,zero,814cfc <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
  814cd8:	e0bffe17 	ldw	r2,-8(fp)
  814cdc:	10c00324 	muli	r3,r2,12
  814ce0:	00802074 	movhi	r2,129
  814ce4:	10997c04 	addi	r2,r2,26096
  814ce8:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
  814cec:	e0bfff17 	ldw	r2,-4(fp)
  814cf0:	18800226 	beq	r3,r2,814cfc <alt_file_locked+0x94>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
  814cf4:	00bffcc4 	movi	r2,-13
  814cf8:	00000806 	br	814d1c <alt_file_locked+0xb4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  814cfc:	e0bffe17 	ldw	r2,-8(fp)
  814d00:	10800044 	addi	r2,r2,1
  814d04:	e0bffe15 	stw	r2,-8(fp)
  814d08:	d0a00c17 	ldw	r2,-32720(gp)
  814d0c:	1007883a 	mov	r3,r2
  814d10:	e0bffe17 	ldw	r2,-8(fp)
  814d14:	18bfdf2e 	bgeu	r3,r2,814c94 <__alt_data_end+0xff814c94>
    }
  }
  
  /* The device is not locked */
 
  return 0;
  814d18:	0005883a 	mov	r2,zero
}
  814d1c:	e037883a 	mov	sp,fp
  814d20:	df000017 	ldw	fp,0(sp)
  814d24:	dec00104 	addi	sp,sp,4
  814d28:	f800283a 	ret

00814d2c <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
  814d2c:	defff604 	addi	sp,sp,-40
  814d30:	dfc00915 	stw	ra,36(sp)
  814d34:	df000815 	stw	fp,32(sp)
  814d38:	df000804 	addi	fp,sp,32
  814d3c:	e13ffd15 	stw	r4,-12(fp)
  814d40:	e17ffe15 	stw	r5,-8(fp)
  814d44:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
  814d48:	00bfffc4 	movi	r2,-1
  814d4c:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
  814d50:	00bffb44 	movi	r2,-19
  814d54:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
  814d58:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
  814d5c:	d1600a04 	addi	r5,gp,-32728
  814d60:	e13ffd17 	ldw	r4,-12(fp)
  814d64:	08150480 	call	815048 <alt_find_dev>
  814d68:	e0bff815 	stw	r2,-32(fp)
  814d6c:	e0bff817 	ldw	r2,-32(fp)
  814d70:	1000051e 	bne	r2,zero,814d88 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
  814d74:	e13ffd17 	ldw	r4,-12(fp)
  814d78:	08150d80 	call	8150d8 <alt_find_file>
  814d7c:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
  814d80:	00800044 	movi	r2,1
  814d84:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
  814d88:	e0bff817 	ldw	r2,-32(fp)
  814d8c:	10002926 	beq	r2,zero,814e34 <open+0x108>
  {
    if ((index = alt_get_fd (dev)) < 0)
  814d90:	e13ff817 	ldw	r4,-32(fp)
  814d94:	08151e00 	call	8151e0 <alt_get_fd>
  814d98:	e0bff915 	stw	r2,-28(fp)
  814d9c:	e0bff917 	ldw	r2,-28(fp)
  814da0:	1000030e 	bge	r2,zero,814db0 <open+0x84>
    {
      status = index;
  814da4:	e0bff917 	ldw	r2,-28(fp)
  814da8:	e0bffa15 	stw	r2,-24(fp)
  814dac:	00002306 	br	814e3c <open+0x110>
    }
    else
    {
      fd = &alt_fd_list[index];
  814db0:	e0bff917 	ldw	r2,-28(fp)
  814db4:	10c00324 	muli	r3,r2,12
  814db8:	00802074 	movhi	r2,129
  814dbc:	10997c04 	addi	r2,r2,26096
  814dc0:	1885883a 	add	r2,r3,r2
  814dc4:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
  814dc8:	e0fffe17 	ldw	r3,-8(fp)
  814dcc:	00900034 	movhi	r2,16384
  814dd0:	10bfffc4 	addi	r2,r2,-1
  814dd4:	1886703a 	and	r3,r3,r2
  814dd8:	e0bffc17 	ldw	r2,-16(fp)
  814ddc:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
  814de0:	e0bffb17 	ldw	r2,-20(fp)
  814de4:	1000051e 	bne	r2,zero,814dfc <open+0xd0>
  814de8:	e13ffc17 	ldw	r4,-16(fp)
  814dec:	0814c680 	call	814c68 <alt_file_locked>
  814df0:	e0bffa15 	stw	r2,-24(fp)
  814df4:	e0bffa17 	ldw	r2,-24(fp)
  814df8:	10001016 	blt	r2,zero,814e3c <open+0x110>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
  814dfc:	e0bff817 	ldw	r2,-32(fp)
  814e00:	10800317 	ldw	r2,12(r2)
  814e04:	10000826 	beq	r2,zero,814e28 <open+0xfc>
  814e08:	e0bff817 	ldw	r2,-32(fp)
  814e0c:	10800317 	ldw	r2,12(r2)
  814e10:	e1ffff17 	ldw	r7,-4(fp)
  814e14:	e1bffe17 	ldw	r6,-8(fp)
  814e18:	e17ffd17 	ldw	r5,-12(fp)
  814e1c:	e13ffc17 	ldw	r4,-16(fp)
  814e20:	103ee83a 	callr	r2
  814e24:	00000106 	br	814e2c <open+0x100>
  814e28:	0005883a 	mov	r2,zero
  814e2c:	e0bffa15 	stw	r2,-24(fp)
  814e30:	00000206 	br	814e3c <open+0x110>
      }
    }
  }
  else
  {
    status = -ENODEV;
  814e34:	00bffb44 	movi	r2,-19
  814e38:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
  814e3c:	e0bffa17 	ldw	r2,-24(fp)
  814e40:	1000090e 	bge	r2,zero,814e68 <open+0x13c>
  {
    alt_release_fd (index);  
  814e44:	e13ff917 	ldw	r4,-28(fp)
  814e48:	08135dc0 	call	8135dc <alt_release_fd>
    ALT_ERRNO = -status;
  814e4c:	0814c2c0 	call	814c2c <alt_get_errno>
  814e50:	1007883a 	mov	r3,r2
  814e54:	e0bffa17 	ldw	r2,-24(fp)
  814e58:	0085c83a 	sub	r2,zero,r2
  814e5c:	18800015 	stw	r2,0(r3)
    return -1;
  814e60:	00bfffc4 	movi	r2,-1
  814e64:	00000106 	br	814e6c <open+0x140>
  }
  
  /* return the reference upon success */

  return index;
  814e68:	e0bff917 	ldw	r2,-28(fp)
}
  814e6c:	e037883a 	mov	sp,fp
  814e70:	dfc00117 	ldw	ra,4(sp)
  814e74:	df000017 	ldw	fp,0(sp)
  814e78:	dec00204 	addi	sp,sp,8
  814e7c:	f800283a 	ret

00814e80 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
  814e80:	defffa04 	addi	sp,sp,-24
  814e84:	df000515 	stw	fp,20(sp)
  814e88:	df000504 	addi	fp,sp,20
  814e8c:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  814e90:	0005303a 	rdctl	r2,status
  814e94:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  814e98:	e0fffc17 	ldw	r3,-16(fp)
  814e9c:	00bfff84 	movi	r2,-2
  814ea0:	1884703a 	and	r2,r3,r2
  814ea4:	1001703a 	wrctl	status,r2
  
  return context;
  814ea8:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
  814eac:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
  814eb0:	e0bfff17 	ldw	r2,-4(fp)
  814eb4:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
  814eb8:	e0bffd17 	ldw	r2,-12(fp)
  814ebc:	10800017 	ldw	r2,0(r2)
  814ec0:	e0fffd17 	ldw	r3,-12(fp)
  814ec4:	18c00117 	ldw	r3,4(r3)
  814ec8:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
  814ecc:	e0bffd17 	ldw	r2,-12(fp)
  814ed0:	10800117 	ldw	r2,4(r2)
  814ed4:	e0fffd17 	ldw	r3,-12(fp)
  814ed8:	18c00017 	ldw	r3,0(r3)
  814edc:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
  814ee0:	e0bffd17 	ldw	r2,-12(fp)
  814ee4:	e0fffd17 	ldw	r3,-12(fp)
  814ee8:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
  814eec:	e0bffd17 	ldw	r2,-12(fp)
  814ef0:	e0fffd17 	ldw	r3,-12(fp)
  814ef4:	10c00015 	stw	r3,0(r2)
  814ef8:	e0bffb17 	ldw	r2,-20(fp)
  814efc:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  814f00:	e0bffe17 	ldw	r2,-8(fp)
  814f04:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
  814f08:	0001883a 	nop
  814f0c:	e037883a 	mov	sp,fp
  814f10:	df000017 	ldw	fp,0(sp)
  814f14:	dec00104 	addi	sp,sp,4
  814f18:	f800283a 	ret

00814f1c <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
  814f1c:	defffb04 	addi	sp,sp,-20
  814f20:	dfc00415 	stw	ra,16(sp)
  814f24:	df000315 	stw	fp,12(sp)
  814f28:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
  814f2c:	d0a01017 	ldw	r2,-32704(gp)
  814f30:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
  814f34:	d0a6db17 	ldw	r2,-25748(gp)
  814f38:	10800044 	addi	r2,r2,1
  814f3c:	d0a6db15 	stw	r2,-25748(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
  814f40:	00002e06 	br	814ffc <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
  814f44:	e0bffd17 	ldw	r2,-12(fp)
  814f48:	10800017 	ldw	r2,0(r2)
  814f4c:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
  814f50:	e0bffd17 	ldw	r2,-12(fp)
  814f54:	10800403 	ldbu	r2,16(r2)
  814f58:	10803fcc 	andi	r2,r2,255
  814f5c:	10000426 	beq	r2,zero,814f70 <alt_tick+0x54>
  814f60:	d0a6db17 	ldw	r2,-25748(gp)
  814f64:	1000021e 	bne	r2,zero,814f70 <alt_tick+0x54>
    {
      alarm->rollover = 0;
  814f68:	e0bffd17 	ldw	r2,-12(fp)
  814f6c:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
  814f70:	e0bffd17 	ldw	r2,-12(fp)
  814f74:	10800217 	ldw	r2,8(r2)
  814f78:	d0e6db17 	ldw	r3,-25748(gp)
  814f7c:	18801d36 	bltu	r3,r2,814ff4 <alt_tick+0xd8>
  814f80:	e0bffd17 	ldw	r2,-12(fp)
  814f84:	10800403 	ldbu	r2,16(r2)
  814f88:	10803fcc 	andi	r2,r2,255
  814f8c:	1000191e 	bne	r2,zero,814ff4 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
  814f90:	e0bffd17 	ldw	r2,-12(fp)
  814f94:	10800317 	ldw	r2,12(r2)
  814f98:	e0fffd17 	ldw	r3,-12(fp)
  814f9c:	18c00517 	ldw	r3,20(r3)
  814fa0:	1809883a 	mov	r4,r3
  814fa4:	103ee83a 	callr	r2
  814fa8:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
  814fac:	e0bfff17 	ldw	r2,-4(fp)
  814fb0:	1000031e 	bne	r2,zero,814fc0 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
  814fb4:	e13ffd17 	ldw	r4,-12(fp)
  814fb8:	0814e800 	call	814e80 <alt_alarm_stop>
  814fbc:	00000d06 	br	814ff4 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
  814fc0:	e0bffd17 	ldw	r2,-12(fp)
  814fc4:	10c00217 	ldw	r3,8(r2)
  814fc8:	e0bfff17 	ldw	r2,-4(fp)
  814fcc:	1887883a 	add	r3,r3,r2
  814fd0:	e0bffd17 	ldw	r2,-12(fp)
  814fd4:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
  814fd8:	e0bffd17 	ldw	r2,-12(fp)
  814fdc:	10c00217 	ldw	r3,8(r2)
  814fe0:	d0a6db17 	ldw	r2,-25748(gp)
  814fe4:	1880032e 	bgeu	r3,r2,814ff4 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
  814fe8:	e0bffd17 	ldw	r2,-12(fp)
  814fec:	00c00044 	movi	r3,1
  814ff0:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
  814ff4:	e0bffe17 	ldw	r2,-8(fp)
  814ff8:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
  814ffc:	e0fffd17 	ldw	r3,-12(fp)
  815000:	d0a01004 	addi	r2,gp,-32704
  815004:	18bfcf1e 	bne	r3,r2,814f44 <__alt_data_end+0xff814f44>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
  815008:	0001883a 	nop
}
  81500c:	0001883a 	nop
  815010:	e037883a 	mov	sp,fp
  815014:	dfc00117 	ldw	ra,4(sp)
  815018:	df000017 	ldw	fp,0(sp)
  81501c:	dec00204 	addi	sp,sp,8
  815020:	f800283a 	ret

00815024 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
  815024:	deffff04 	addi	sp,sp,-4
  815028:	df000015 	stw	fp,0(sp)
  81502c:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
  815030:	000170fa 	wrctl	ienable,zero
}
  815034:	0001883a 	nop
  815038:	e037883a 	mov	sp,fp
  81503c:	df000017 	ldw	fp,0(sp)
  815040:	dec00104 	addi	sp,sp,4
  815044:	f800283a 	ret

00815048 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
  815048:	defffa04 	addi	sp,sp,-24
  81504c:	dfc00515 	stw	ra,20(sp)
  815050:	df000415 	stw	fp,16(sp)
  815054:	df000404 	addi	fp,sp,16
  815058:	e13ffe15 	stw	r4,-8(fp)
  81505c:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
  815060:	e0bfff17 	ldw	r2,-4(fp)
  815064:	10800017 	ldw	r2,0(r2)
  815068:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
  81506c:	e13ffe17 	ldw	r4,-8(fp)
  815070:	0808d440 	call	808d44 <strlen>
  815074:	10800044 	addi	r2,r2,1
  815078:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
  81507c:	00000d06 	br	8150b4 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
  815080:	e0bffc17 	ldw	r2,-16(fp)
  815084:	10800217 	ldw	r2,8(r2)
  815088:	e0fffd17 	ldw	r3,-12(fp)
  81508c:	180d883a 	mov	r6,r3
  815090:	e17ffe17 	ldw	r5,-8(fp)
  815094:	1009883a 	mov	r4,r2
  815098:	08154b00 	call	8154b0 <memcmp>
  81509c:	1000021e 	bne	r2,zero,8150a8 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
  8150a0:	e0bffc17 	ldw	r2,-16(fp)
  8150a4:	00000706 	br	8150c4 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
  8150a8:	e0bffc17 	ldw	r2,-16(fp)
  8150ac:	10800017 	ldw	r2,0(r2)
  8150b0:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
  8150b4:	e0fffc17 	ldw	r3,-16(fp)
  8150b8:	e0bfff17 	ldw	r2,-4(fp)
  8150bc:	18bff01e 	bne	r3,r2,815080 <__alt_data_end+0xff815080>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
  8150c0:	0005883a 	mov	r2,zero
}
  8150c4:	e037883a 	mov	sp,fp
  8150c8:	dfc00117 	ldw	ra,4(sp)
  8150cc:	df000017 	ldw	fp,0(sp)
  8150d0:	dec00204 	addi	sp,sp,8
  8150d4:	f800283a 	ret

008150d8 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
  8150d8:	defffb04 	addi	sp,sp,-20
  8150dc:	dfc00415 	stw	ra,16(sp)
  8150e0:	df000315 	stw	fp,12(sp)
  8150e4:	df000304 	addi	fp,sp,12
  8150e8:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
  8150ec:	d0a00817 	ldw	r2,-32736(gp)
  8150f0:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
  8150f4:	00003106 	br	8151bc <alt_find_file+0xe4>
  {
    len = strlen(next->name);
  8150f8:	e0bffd17 	ldw	r2,-12(fp)
  8150fc:	10800217 	ldw	r2,8(r2)
  815100:	1009883a 	mov	r4,r2
  815104:	0808d440 	call	808d44 <strlen>
  815108:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
  81510c:	e0bffd17 	ldw	r2,-12(fp)
  815110:	10c00217 	ldw	r3,8(r2)
  815114:	e0bffe17 	ldw	r2,-8(fp)
  815118:	10bfffc4 	addi	r2,r2,-1
  81511c:	1885883a 	add	r2,r3,r2
  815120:	10800003 	ldbu	r2,0(r2)
  815124:	10803fcc 	andi	r2,r2,255
  815128:	1080201c 	xori	r2,r2,128
  81512c:	10bfe004 	addi	r2,r2,-128
  815130:	10800bd8 	cmpnei	r2,r2,47
  815134:	1000031e 	bne	r2,zero,815144 <alt_find_file+0x6c>
    {
      len -= 1;
  815138:	e0bffe17 	ldw	r2,-8(fp)
  81513c:	10bfffc4 	addi	r2,r2,-1
  815140:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
  815144:	e0bffe17 	ldw	r2,-8(fp)
  815148:	e0ffff17 	ldw	r3,-4(fp)
  81514c:	1885883a 	add	r2,r3,r2
  815150:	10800003 	ldbu	r2,0(r2)
  815154:	10803fcc 	andi	r2,r2,255
  815158:	1080201c 	xori	r2,r2,128
  81515c:	10bfe004 	addi	r2,r2,-128
  815160:	10800be0 	cmpeqi	r2,r2,47
  815164:	1000081e 	bne	r2,zero,815188 <alt_find_file+0xb0>
  815168:	e0bffe17 	ldw	r2,-8(fp)
  81516c:	e0ffff17 	ldw	r3,-4(fp)
  815170:	1885883a 	add	r2,r3,r2
  815174:	10800003 	ldbu	r2,0(r2)
  815178:	10803fcc 	andi	r2,r2,255
  81517c:	1080201c 	xori	r2,r2,128
  815180:	10bfe004 	addi	r2,r2,-128
  815184:	10000a1e 	bne	r2,zero,8151b0 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
  815188:	e0bffd17 	ldw	r2,-12(fp)
  81518c:	10800217 	ldw	r2,8(r2)
  815190:	e0fffe17 	ldw	r3,-8(fp)
  815194:	180d883a 	mov	r6,r3
  815198:	e17fff17 	ldw	r5,-4(fp)
  81519c:	1009883a 	mov	r4,r2
  8151a0:	08154b00 	call	8154b0 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
  8151a4:	1000021e 	bne	r2,zero,8151b0 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
  8151a8:	e0bffd17 	ldw	r2,-12(fp)
  8151ac:	00000706 	br	8151cc <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
  8151b0:	e0bffd17 	ldw	r2,-12(fp)
  8151b4:	10800017 	ldw	r2,0(r2)
  8151b8:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
  8151bc:	e0fffd17 	ldw	r3,-12(fp)
  8151c0:	d0a00804 	addi	r2,gp,-32736
  8151c4:	18bfcc1e 	bne	r3,r2,8150f8 <__alt_data_end+0xff8150f8>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
  8151c8:	0005883a 	mov	r2,zero
}
  8151cc:	e037883a 	mov	sp,fp
  8151d0:	dfc00117 	ldw	ra,4(sp)
  8151d4:	df000017 	ldw	fp,0(sp)
  8151d8:	dec00204 	addi	sp,sp,8
  8151dc:	f800283a 	ret

008151e0 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
  8151e0:	defffc04 	addi	sp,sp,-16
  8151e4:	df000315 	stw	fp,12(sp)
  8151e8:	df000304 	addi	fp,sp,12
  8151ec:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
  8151f0:	00bffa04 	movi	r2,-24
  8151f4:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
  8151f8:	e03ffd15 	stw	zero,-12(fp)
  8151fc:	00001906 	br	815264 <alt_get_fd+0x84>
  {
    if (!alt_fd_list[i].dev)
  815200:	00802074 	movhi	r2,129
  815204:	10997c04 	addi	r2,r2,26096
  815208:	e0fffd17 	ldw	r3,-12(fp)
  81520c:	18c00324 	muli	r3,r3,12
  815210:	10c5883a 	add	r2,r2,r3
  815214:	10800017 	ldw	r2,0(r2)
  815218:	10000f1e 	bne	r2,zero,815258 <alt_get_fd+0x78>
    {
      alt_fd_list[i].dev = dev;
  81521c:	00802074 	movhi	r2,129
  815220:	10997c04 	addi	r2,r2,26096
  815224:	e0fffd17 	ldw	r3,-12(fp)
  815228:	18c00324 	muli	r3,r3,12
  81522c:	10c5883a 	add	r2,r2,r3
  815230:	e0ffff17 	ldw	r3,-4(fp)
  815234:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
  815238:	d0e00c17 	ldw	r3,-32720(gp)
  81523c:	e0bffd17 	ldw	r2,-12(fp)
  815240:	1880020e 	bge	r3,r2,81524c <alt_get_fd+0x6c>
      {
        alt_max_fd = i;
  815244:	e0bffd17 	ldw	r2,-12(fp)
  815248:	d0a00c15 	stw	r2,-32720(gp)
      }
      rc = i;
  81524c:	e0bffd17 	ldw	r2,-12(fp)
  815250:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
  815254:	00000606 	br	815270 <alt_get_fd+0x90>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
  815258:	e0bffd17 	ldw	r2,-12(fp)
  81525c:	10800044 	addi	r2,r2,1
  815260:	e0bffd15 	stw	r2,-12(fp)
  815264:	e0bffd17 	ldw	r2,-12(fp)
  815268:	10800810 	cmplti	r2,r2,32
  81526c:	103fe41e 	bne	r2,zero,815200 <__alt_data_end+0xff815200>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
  815270:	e0bffe17 	ldw	r2,-8(fp)
}
  815274:	e037883a 	mov	sp,fp
  815278:	df000017 	ldw	fp,0(sp)
  81527c:	dec00104 	addi	sp,sp,4
  815280:	f800283a 	ret

00815284 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
  815284:	defffb04 	addi	sp,sp,-20
  815288:	df000415 	stw	fp,16(sp)
  81528c:	df000404 	addi	fp,sp,16
  815290:	e13ffe15 	stw	r4,-8(fp)
  815294:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
  815298:	e0bfff17 	ldw	r2,-4(fp)
  81529c:	10880070 	cmpltui	r2,r2,8193
  8152a0:	1000021e 	bne	r2,zero,8152ac <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
  8152a4:	00880004 	movi	r2,8192
  8152a8:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
  8152ac:	e0fffe17 	ldw	r3,-8(fp)
  8152b0:	e0bfff17 	ldw	r2,-4(fp)
  8152b4:	1885883a 	add	r2,r3,r2
  8152b8:	e0bffd15 	stw	r2,-12(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
  8152bc:	e0bffe17 	ldw	r2,-8(fp)
  8152c0:	e0bffc15 	stw	r2,-16(fp)
  8152c4:	00000506 	br	8152dc <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
  8152c8:	e0bffc17 	ldw	r2,-16(fp)
  8152cc:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
  8152d0:	e0bffc17 	ldw	r2,-16(fp)
  8152d4:	10800804 	addi	r2,r2,32
  8152d8:	e0bffc15 	stw	r2,-16(fp)
  8152dc:	e0fffc17 	ldw	r3,-16(fp)
  8152e0:	e0bffd17 	ldw	r2,-12(fp)
  8152e4:	18bff836 	bltu	r3,r2,8152c8 <__alt_data_end+0xff8152c8>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
  8152e8:	e0bffe17 	ldw	r2,-8(fp)
  8152ec:	108007cc 	andi	r2,r2,31
  8152f0:	10000226 	beq	r2,zero,8152fc <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
  8152f4:	e0bffc17 	ldw	r2,-16(fp)
  8152f8:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
  8152fc:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
  815300:	0001883a 	nop
  815304:	e037883a 	mov	sp,fp
  815308:	df000017 	ldw	fp,0(sp)
  81530c:	dec00104 	addi	sp,sp,4
  815310:	f800283a 	ret

00815314 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
  815314:	defffe04 	addi	sp,sp,-8
  815318:	df000115 	stw	fp,4(sp)
  81531c:	df000104 	addi	fp,sp,4
  815320:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
  815324:	e0bfff17 	ldw	r2,-4(fp)
  815328:	10bffe84 	addi	r2,r2,-6
  81532c:	10c00428 	cmpgeui	r3,r2,16
  815330:	18001a1e 	bne	r3,zero,81539c <alt_exception_cause_generated_bad_addr+0x88>
  815334:	100690ba 	slli	r3,r2,2
  815338:	00802074 	movhi	r2,129
  81533c:	1094d304 	addi	r2,r2,21324
  815340:	1885883a 	add	r2,r3,r2
  815344:	10800017 	ldw	r2,0(r2)
  815348:	1000683a 	jmp	r2
  81534c:	0081538c 	andi	r2,zero,1358
  815350:	0081538c 	andi	r2,zero,1358
  815354:	0081539c 	xori	r2,zero,1358
  815358:	0081539c 	xori	r2,zero,1358
  81535c:	0081539c 	xori	r2,zero,1358
  815360:	0081538c 	andi	r2,zero,1358
  815364:	00815394 	movui	r2,1358
  815368:	0081539c 	xori	r2,zero,1358
  81536c:	0081538c 	andi	r2,zero,1358
  815370:	0081538c 	andi	r2,zero,1358
  815374:	0081539c 	xori	r2,zero,1358
  815378:	0081538c 	andi	r2,zero,1358
  81537c:	00815394 	movui	r2,1358
  815380:	0081539c 	xori	r2,zero,1358
  815384:	0081539c 	xori	r2,zero,1358
  815388:	0081538c 	andi	r2,zero,1358
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
  81538c:	00800044 	movi	r2,1
  815390:	00000306 	br	8153a0 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
  815394:	0005883a 	mov	r2,zero
  815398:	00000106 	br	8153a0 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
  81539c:	0005883a 	mov	r2,zero
  }
}
  8153a0:	e037883a 	mov	sp,fp
  8153a4:	df000017 	ldw	fp,0(sp)
  8153a8:	dec00104 	addi	sp,sp,4
  8153ac:	f800283a 	ret

008153b0 <atexit>:
  8153b0:	200b883a 	mov	r5,r4
  8153b4:	000f883a 	mov	r7,zero
  8153b8:	000d883a 	mov	r6,zero
  8153bc:	0009883a 	mov	r4,zero
  8153c0:	081552c1 	jmpi	81552c <__register_exitproc>

008153c4 <exit>:
  8153c4:	defffe04 	addi	sp,sp,-8
  8153c8:	000b883a 	mov	r5,zero
  8153cc:	dc000015 	stw	r16,0(sp)
  8153d0:	dfc00115 	stw	ra,4(sp)
  8153d4:	2021883a 	mov	r16,r4
  8153d8:	08156440 	call	815644 <__call_exitprocs>
  8153dc:	00802074 	movhi	r2,129
  8153e0:	109df604 	addi	r2,r2,30680
  8153e4:	11000017 	ldw	r4,0(r2)
  8153e8:	20800f17 	ldw	r2,60(r4)
  8153ec:	10000126 	beq	r2,zero,8153f4 <exit+0x30>
  8153f0:	103ee83a 	callr	r2
  8153f4:	8009883a 	mov	r4,r16
  8153f8:	08157c40 	call	8157c4 <_exit>

008153fc <_fputs_r>:
  8153fc:	defff804 	addi	sp,sp,-32
  815400:	dc400615 	stw	r17,24(sp)
  815404:	2023883a 	mov	r17,r4
  815408:	2809883a 	mov	r4,r5
  81540c:	dc000515 	stw	r16,20(sp)
  815410:	dfc00715 	stw	ra,28(sp)
  815414:	3021883a 	mov	r16,r6
  815418:	d9400315 	stw	r5,12(sp)
  81541c:	0808d440 	call	808d44 <strlen>
  815420:	d8800215 	stw	r2,8(sp)
  815424:	d8800415 	stw	r2,16(sp)
  815428:	d8800304 	addi	r2,sp,12
  81542c:	d8800015 	stw	r2,0(sp)
  815430:	00800044 	movi	r2,1
  815434:	d8800115 	stw	r2,4(sp)
  815438:	88000226 	beq	r17,zero,815444 <_fputs_r+0x48>
  81543c:	88800e17 	ldw	r2,56(r17)
  815440:	10001226 	beq	r2,zero,81548c <_fputs_r+0x90>
  815444:	8080030b 	ldhu	r2,12(r16)
  815448:	10c8000c 	andi	r3,r2,8192
  81544c:	1800061e 	bne	r3,zero,815468 <_fputs_r+0x6c>
  815450:	81001917 	ldw	r4,100(r16)
  815454:	00f7ffc4 	movi	r3,-8193
  815458:	10880014 	ori	r2,r2,8192
  81545c:	20c6703a 	and	r3,r4,r3
  815460:	8080030d 	sth	r2,12(r16)
  815464:	80c01915 	stw	r3,100(r16)
  815468:	d80d883a 	mov	r6,sp
  81546c:	800b883a 	mov	r5,r16
  815470:	8809883a 	mov	r4,r17
  815474:	080d5040 	call	80d504 <__sfvwrite_r>
  815478:	dfc00717 	ldw	ra,28(sp)
  81547c:	dc400617 	ldw	r17,24(sp)
  815480:	dc000517 	ldw	r16,20(sp)
  815484:	dec00804 	addi	sp,sp,32
  815488:	f800283a 	ret
  81548c:	8809883a 	mov	r4,r17
  815490:	080d0800 	call	80d080 <__sinit>
  815494:	003feb06 	br	815444 <__alt_data_end+0xff815444>

00815498 <fputs>:
  815498:	00802074 	movhi	r2,129
  81549c:	109df704 	addi	r2,r2,30684
  8154a0:	280d883a 	mov	r6,r5
  8154a4:	200b883a 	mov	r5,r4
  8154a8:	11000017 	ldw	r4,0(r2)
  8154ac:	08153fc1 	jmpi	8153fc <_fputs_r>

008154b0 <memcmp>:
  8154b0:	01c000c4 	movi	r7,3
  8154b4:	3980192e 	bgeu	r7,r6,81551c <memcmp+0x6c>
  8154b8:	2144b03a 	or	r2,r4,r5
  8154bc:	11c4703a 	and	r2,r2,r7
  8154c0:	10000f26 	beq	r2,zero,815500 <memcmp+0x50>
  8154c4:	20800003 	ldbu	r2,0(r4)
  8154c8:	28c00003 	ldbu	r3,0(r5)
  8154cc:	10c0151e 	bne	r2,r3,815524 <memcmp+0x74>
  8154d0:	31bfff84 	addi	r6,r6,-2
  8154d4:	01ffffc4 	movi	r7,-1
  8154d8:	00000406 	br	8154ec <memcmp+0x3c>
  8154dc:	20800003 	ldbu	r2,0(r4)
  8154e0:	28c00003 	ldbu	r3,0(r5)
  8154e4:	31bfffc4 	addi	r6,r6,-1
  8154e8:	10c00e1e 	bne	r2,r3,815524 <memcmp+0x74>
  8154ec:	21000044 	addi	r4,r4,1
  8154f0:	29400044 	addi	r5,r5,1
  8154f4:	31fff91e 	bne	r6,r7,8154dc <__alt_data_end+0xff8154dc>
  8154f8:	0005883a 	mov	r2,zero
  8154fc:	f800283a 	ret
  815500:	20c00017 	ldw	r3,0(r4)
  815504:	28800017 	ldw	r2,0(r5)
  815508:	18bfee1e 	bne	r3,r2,8154c4 <__alt_data_end+0xff8154c4>
  81550c:	31bfff04 	addi	r6,r6,-4
  815510:	21000104 	addi	r4,r4,4
  815514:	29400104 	addi	r5,r5,4
  815518:	39bff936 	bltu	r7,r6,815500 <__alt_data_end+0xff815500>
  81551c:	303fe91e 	bne	r6,zero,8154c4 <__alt_data_end+0xff8154c4>
  815520:	003ff506 	br	8154f8 <__alt_data_end+0xff8154f8>
  815524:	10c5c83a 	sub	r2,r2,r3
  815528:	f800283a 	ret

0081552c <__register_exitproc>:
  81552c:	defffa04 	addi	sp,sp,-24
  815530:	dc000315 	stw	r16,12(sp)
  815534:	04002074 	movhi	r16,129
  815538:	841df604 	addi	r16,r16,30680
  81553c:	80c00017 	ldw	r3,0(r16)
  815540:	dc400415 	stw	r17,16(sp)
  815544:	dfc00515 	stw	ra,20(sp)
  815548:	18805217 	ldw	r2,328(r3)
  81554c:	2023883a 	mov	r17,r4
  815550:	10003726 	beq	r2,zero,815630 <__register_exitproc+0x104>
  815554:	10c00117 	ldw	r3,4(r2)
  815558:	010007c4 	movi	r4,31
  81555c:	20c00e16 	blt	r4,r3,815598 <__register_exitproc+0x6c>
  815560:	1a000044 	addi	r8,r3,1
  815564:	8800221e 	bne	r17,zero,8155f0 <__register_exitproc+0xc4>
  815568:	18c00084 	addi	r3,r3,2
  81556c:	18c7883a 	add	r3,r3,r3
  815570:	18c7883a 	add	r3,r3,r3
  815574:	12000115 	stw	r8,4(r2)
  815578:	10c7883a 	add	r3,r2,r3
  81557c:	19400015 	stw	r5,0(r3)
  815580:	0005883a 	mov	r2,zero
  815584:	dfc00517 	ldw	ra,20(sp)
  815588:	dc400417 	ldw	r17,16(sp)
  81558c:	dc000317 	ldw	r16,12(sp)
  815590:	dec00604 	addi	sp,sp,24
  815594:	f800283a 	ret
  815598:	00800034 	movhi	r2,0
  81559c:	10800004 	addi	r2,r2,0
  8155a0:	10002626 	beq	r2,zero,81563c <__register_exitproc+0x110>
  8155a4:	01006404 	movi	r4,400
  8155a8:	d9400015 	stw	r5,0(sp)
  8155ac:	d9800115 	stw	r6,4(sp)
  8155b0:	d9c00215 	stw	r7,8(sp)
  8155b4:	00000000 	call	0 <__alt_mem_sdram-0x800000>
  8155b8:	d9400017 	ldw	r5,0(sp)
  8155bc:	d9800117 	ldw	r6,4(sp)
  8155c0:	d9c00217 	ldw	r7,8(sp)
  8155c4:	10001d26 	beq	r2,zero,81563c <__register_exitproc+0x110>
  8155c8:	81000017 	ldw	r4,0(r16)
  8155cc:	10000115 	stw	zero,4(r2)
  8155d0:	02000044 	movi	r8,1
  8155d4:	22405217 	ldw	r9,328(r4)
  8155d8:	0007883a 	mov	r3,zero
  8155dc:	12400015 	stw	r9,0(r2)
  8155e0:	20805215 	stw	r2,328(r4)
  8155e4:	10006215 	stw	zero,392(r2)
  8155e8:	10006315 	stw	zero,396(r2)
  8155ec:	883fde26 	beq	r17,zero,815568 <__alt_data_end+0xff815568>
  8155f0:	18c9883a 	add	r4,r3,r3
  8155f4:	2109883a 	add	r4,r4,r4
  8155f8:	1109883a 	add	r4,r2,r4
  8155fc:	21802215 	stw	r6,136(r4)
  815600:	01800044 	movi	r6,1
  815604:	12406217 	ldw	r9,392(r2)
  815608:	30cc983a 	sll	r6,r6,r3
  81560c:	4992b03a 	or	r9,r9,r6
  815610:	12406215 	stw	r9,392(r2)
  815614:	21c04215 	stw	r7,264(r4)
  815618:	01000084 	movi	r4,2
  81561c:	893fd21e 	bne	r17,r4,815568 <__alt_data_end+0xff815568>
  815620:	11006317 	ldw	r4,396(r2)
  815624:	218cb03a 	or	r6,r4,r6
  815628:	11806315 	stw	r6,396(r2)
  81562c:	003fce06 	br	815568 <__alt_data_end+0xff815568>
  815630:	18805304 	addi	r2,r3,332
  815634:	18805215 	stw	r2,328(r3)
  815638:	003fc606 	br	815554 <__alt_data_end+0xff815554>
  81563c:	00bfffc4 	movi	r2,-1
  815640:	003fd006 	br	815584 <__alt_data_end+0xff815584>

00815644 <__call_exitprocs>:
  815644:	defff504 	addi	sp,sp,-44
  815648:	df000915 	stw	fp,36(sp)
  81564c:	dd400615 	stw	r21,24(sp)
  815650:	dc800315 	stw	r18,12(sp)
  815654:	dfc00a15 	stw	ra,40(sp)
  815658:	ddc00815 	stw	r23,32(sp)
  81565c:	dd800715 	stw	r22,28(sp)
  815660:	dd000515 	stw	r20,20(sp)
  815664:	dcc00415 	stw	r19,16(sp)
  815668:	dc400215 	stw	r17,8(sp)
  81566c:	dc000115 	stw	r16,4(sp)
  815670:	d9000015 	stw	r4,0(sp)
  815674:	2839883a 	mov	fp,r5
  815678:	04800044 	movi	r18,1
  81567c:	057fffc4 	movi	r21,-1
  815680:	00802074 	movhi	r2,129
  815684:	109df604 	addi	r2,r2,30680
  815688:	12000017 	ldw	r8,0(r2)
  81568c:	45005217 	ldw	r20,328(r8)
  815690:	44c05204 	addi	r19,r8,328
  815694:	a0001c26 	beq	r20,zero,815708 <__call_exitprocs+0xc4>
  815698:	a0800117 	ldw	r2,4(r20)
  81569c:	15ffffc4 	addi	r23,r2,-1
  8156a0:	b8000d16 	blt	r23,zero,8156d8 <__call_exitprocs+0x94>
  8156a4:	14000044 	addi	r16,r2,1
  8156a8:	8421883a 	add	r16,r16,r16
  8156ac:	8421883a 	add	r16,r16,r16
  8156b0:	84402004 	addi	r17,r16,128
  8156b4:	a463883a 	add	r17,r20,r17
  8156b8:	a421883a 	add	r16,r20,r16
  8156bc:	e0001e26 	beq	fp,zero,815738 <__call_exitprocs+0xf4>
  8156c0:	80804017 	ldw	r2,256(r16)
  8156c4:	e0801c26 	beq	fp,r2,815738 <__call_exitprocs+0xf4>
  8156c8:	bdffffc4 	addi	r23,r23,-1
  8156cc:	843fff04 	addi	r16,r16,-4
  8156d0:	8c7fff04 	addi	r17,r17,-4
  8156d4:	bd7ff91e 	bne	r23,r21,8156bc <__alt_data_end+0xff8156bc>
  8156d8:	00800034 	movhi	r2,0
  8156dc:	10800004 	addi	r2,r2,0
  8156e0:	10000926 	beq	r2,zero,815708 <__call_exitprocs+0xc4>
  8156e4:	a0800117 	ldw	r2,4(r20)
  8156e8:	1000301e 	bne	r2,zero,8157ac <__call_exitprocs+0x168>
  8156ec:	a0800017 	ldw	r2,0(r20)
  8156f0:	10003226 	beq	r2,zero,8157bc <__call_exitprocs+0x178>
  8156f4:	a009883a 	mov	r4,r20
  8156f8:	98800015 	stw	r2,0(r19)
  8156fc:	00000000 	call	0 <__alt_mem_sdram-0x800000>
  815700:	9d000017 	ldw	r20,0(r19)
  815704:	a03fe41e 	bne	r20,zero,815698 <__alt_data_end+0xff815698>
  815708:	dfc00a17 	ldw	ra,40(sp)
  81570c:	df000917 	ldw	fp,36(sp)
  815710:	ddc00817 	ldw	r23,32(sp)
  815714:	dd800717 	ldw	r22,28(sp)
  815718:	dd400617 	ldw	r21,24(sp)
  81571c:	dd000517 	ldw	r20,20(sp)
  815720:	dcc00417 	ldw	r19,16(sp)
  815724:	dc800317 	ldw	r18,12(sp)
  815728:	dc400217 	ldw	r17,8(sp)
  81572c:	dc000117 	ldw	r16,4(sp)
  815730:	dec00b04 	addi	sp,sp,44
  815734:	f800283a 	ret
  815738:	a0800117 	ldw	r2,4(r20)
  81573c:	80c00017 	ldw	r3,0(r16)
  815740:	10bfffc4 	addi	r2,r2,-1
  815744:	15c01426 	beq	r2,r23,815798 <__call_exitprocs+0x154>
  815748:	80000015 	stw	zero,0(r16)
  81574c:	183fde26 	beq	r3,zero,8156c8 <__alt_data_end+0xff8156c8>
  815750:	95c8983a 	sll	r4,r18,r23
  815754:	a0806217 	ldw	r2,392(r20)
  815758:	a5800117 	ldw	r22,4(r20)
  81575c:	2084703a 	and	r2,r4,r2
  815760:	10000b26 	beq	r2,zero,815790 <__call_exitprocs+0x14c>
  815764:	a0806317 	ldw	r2,396(r20)
  815768:	2088703a 	and	r4,r4,r2
  81576c:	20000c1e 	bne	r4,zero,8157a0 <__call_exitprocs+0x15c>
  815770:	89400017 	ldw	r5,0(r17)
  815774:	d9000017 	ldw	r4,0(sp)
  815778:	183ee83a 	callr	r3
  81577c:	a0800117 	ldw	r2,4(r20)
  815780:	15bfbf1e 	bne	r2,r22,815680 <__alt_data_end+0xff815680>
  815784:	98800017 	ldw	r2,0(r19)
  815788:	153fcf26 	beq	r2,r20,8156c8 <__alt_data_end+0xff8156c8>
  81578c:	003fbc06 	br	815680 <__alt_data_end+0xff815680>
  815790:	183ee83a 	callr	r3
  815794:	003ff906 	br	81577c <__alt_data_end+0xff81577c>
  815798:	a5c00115 	stw	r23,4(r20)
  81579c:	003feb06 	br	81574c <__alt_data_end+0xff81574c>
  8157a0:	89000017 	ldw	r4,0(r17)
  8157a4:	183ee83a 	callr	r3
  8157a8:	003ff406 	br	81577c <__alt_data_end+0xff81577c>
  8157ac:	a0800017 	ldw	r2,0(r20)
  8157b0:	a027883a 	mov	r19,r20
  8157b4:	1029883a 	mov	r20,r2
  8157b8:	003fb606 	br	815694 <__alt_data_end+0xff815694>
  8157bc:	0005883a 	mov	r2,zero
  8157c0:	003ffb06 	br	8157b0 <__alt_data_end+0xff8157b0>

008157c4 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
  8157c4:	defffd04 	addi	sp,sp,-12
  8157c8:	df000215 	stw	fp,8(sp)
  8157cc:	df000204 	addi	fp,sp,8
  8157d0:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
  8157d4:	0001883a 	nop
  8157d8:	e0bfff17 	ldw	r2,-4(fp)
  8157dc:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
  8157e0:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
  8157e4:	10000226 	beq	r2,zero,8157f0 <_exit+0x2c>
    ALT_SIM_FAIL();
  8157e8:	002af070 	cmpltui	zero,zero,43969
  8157ec:	00000106 	br	8157f4 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
  8157f0:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
  8157f4:	003fff06 	br	8157f4 <__alt_data_end+0xff8157f4>
