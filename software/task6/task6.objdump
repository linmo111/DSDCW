
task6.elf:     file format elf32-littlenios2
task6.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00800244

Program Header:
    LOAD off    0x00001000 vaddr 0x00800000 paddr 0x00800000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00800020 paddr 0x00800020 align 2**12
         filesz 0x00012278 memsz 0x00012278 flags r-x
    LOAD off    0x00013298 vaddr 0x00812298 paddr 0x00813d84 align 2**12
         filesz 0x00001aec memsz 0x00001aec flags rw-
    LOAD off    0x00015870 vaddr 0x00815870 paddr 0x00815870 align 2**12
         filesz 0x00000000 memsz 0x00000700 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00800000  00800000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000224  00800020  00800020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         00011b54  00800244  00800244  00001244  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000500  00811d98  00811d98  00012d98  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001aec  00812298  00813d84  00013298  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000700  00815870  00815870  00015870  2**2
                  ALLOC, SMALL_DATA
  6 .sdram        00000000  00815f70  00815f70  00014d84  2**0
                  CONTENTS
  7 .comment      00000023  00000000  00000000  00014d84  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00001078  00000000  00000000  00014da8  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   000251b1  00000000  00000000  00015e20  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 00009e69  00000000  00000000  0003afd1  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0000ca83  00000000  00000000  00044e3a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  00002490  00000000  00000000  000518c0  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00003e98  00000000  00000000  00053d50  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    00019f6a  00000000  00000000  00057be8  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000030  00000000  00000000  00071b54  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00001a58  00000000  00000000  00071b88  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  00076a96  2**0
                  CONTENTS, READONLY
 18 .cpu          00000003  00000000  00000000  00076a99  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  00076a9c  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  00076a9d  2**0
                  CONTENTS, READONLY
 21 .sysid_hash   00000004  00000000  00000000  00076a9e  2**0
                  CONTENTS, READONLY
 22 .sysid_base   00000004  00000000  00000000  00076aa2  2**0
                  CONTENTS, READONLY
 23 .sysid_time   00000004  00000000  00000000  00076aa6  2**0
                  CONTENTS, READONLY
 24 .stderr_dev   00000009  00000000  00000000  00076aaa  2**0
                  CONTENTS, READONLY
 25 .stdin_dev    00000009  00000000  00000000  00076ab3  2**0
                  CONTENTS, READONLY
 26 .stdout_dev   00000009  00000000  00000000  00076abc  2**0
                  CONTENTS, READONLY
 27 .sopc_system_name 00000012  00000000  00000000  00076ac5  2**0
                  CONTENTS, READONLY
 28 .quartus_project_dir 00000045  00000000  00000000  00076ad7  2**0
                  CONTENTS, READONLY
 29 .jdi          000058e3  00000000  00000000  00076b1c  2**0
                  CONTENTS, READONLY
 30 .sopcinfo     000423b6  00000000  00000000  0007c3ff  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00800000 l    d  .entry	00000000 .entry
00800020 l    d  .exceptions	00000000 .exceptions
00800244 l    d  .text	00000000 .text
00811d98 l    d  .rodata	00000000 .rodata
00812298 l    d  .rwdata	00000000 .rwdata
00815870 l    d  .bss	00000000 .bss
00815f70 l    d  .sdram	00000000 .sdram
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../task6_bsp//obj/HAL/src/crt0.o
0080028c l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 hello_world.c
00000000 l    df *ABS*	00000000 s_cos.c
00000000 l    df *ABS*	00000000 e_rem_pio2.c
00811e48 l     O .rodata	00000108 two_over_pi
00811dc8 l     O .rodata	00000080 npio2_hw
00000000 l    df *ABS*	00000000 k_cos.c
00000000 l    df *ABS*	00000000 k_rem_pio2.c
00811f90 l     O .rodata	00000010 init_jk
00811f50 l     O .rodata	00000040 PIo2
00000000 l    df *ABS*	00000000 k_sin.c
00000000 l    df *ABS*	00000000 s_fabs.c
00000000 l    df *ABS*	00000000 s_floor.c
00000000 l    df *ABS*	00000000 s_scalbn.c
00000000 l    df *ABS*	00000000 s_copysign.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 fixsfsi.c
00000000 l    df *ABS*	00000000 floatsisf.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 extendsfdf2.c
00000000 l    df *ABS*	00000000 truncdfsf2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
008120e6 l     O .rodata	00000010 zeroes.4404
00806d98 l     F .text	000000bc __sbprintf
008120f6 l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
00806fa8 l     F .text	00000200 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
00808ad8 l     F .text	00000008 __fp_unlock
00808aec l     F .text	0000019c __sinit.part.1
00808c88 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
00812298 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
008126dc l     O .rwdata	00000020 lc_ctype_charset
008126bc l     O .rwdata	00000020 lc_message_charset
008126fc l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
00812128 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
0080c084 l     F .text	000000fc __sprint_r.part.0
0081225c l     O .rodata	00000010 blanks.4348
0081224c l     O .rodata	00000010 zeroes.4349
0080d610 l     F .text	000000bc __sbprintf
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 alt_close.c
0080f534 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0080f640 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0080f66c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
0080f758 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0080f838 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0080f924 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0080faf8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
00813d74 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_times.c
0080fd44 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_write.c
0080fdf8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0080ff2c l     F .text	00000034 alt_dev_reg
00812ce4 l     O .rwdata	00001060 jtag_uart
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
00810220 l     F .text	0000020c altera_avalon_jtag_uart_irq
0081042c l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
00810a64 l     F .text	00000078 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
00810ccc l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
00811140 l     F .text	000000c4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
00811280 l     F .text	0000003c alt_get_errno
008112bc l     F .text	000000c4 alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
008158a4 g     O .bss	00000004 alt_instruction_exception_handler
0080b6c8 g     F .text	00000074 _mprec_log10
0080b7b4 g     F .text	0000008c __any_on
0080dbac g     F .text	00000054 _isatty_r
00812134 g     O .rodata	00000028 __mprec_tinytens
0080fa34 g     F .text	0000007c alt_main
00804a18 g     F .text	000000c0 _puts_r
00815e70 g     O .bss	00000100 alt_irq
00802410 g     F .text	00000014 fabs
0080dc00 g     F .text	00000060 _lseek_r
00813d84 g       *ABS*	00000000 __flash_rwdata_start
008033bc g     F .text	00000088 .hidden __eqdf2
00815f70 g       *ABS*	00000000 __alt_heap_start
008049dc g     F .text	0000003c printf
0080de18 g     F .text	0000009c _wcrtomb_r
0080bf44 g     F .text	0000005c __sseek
00808e28 g     F .text	00000010 __sinit
0080dcc0 g     F .text	00000140 __swbuf_r
008098f0 g     F .text	0000007c _setlocale_r
00808c90 g     F .text	00000068 __sfmoreglue
0080fad4 g     F .text	00000024 __malloc_unlock
0080a5c0 g     F .text	0000015c memmove
00808e10 g     F .text	00000018 _cleanup
0080a844 g     F .text	000000a8 _Balloc
0080297c g     F .text	00000070 .hidden __fixsfsi
00803444 g     F .text	000000dc .hidden __gtdf2
00811678 g     F .text	00000024 altera_nios2_gen2_irq_init
00800000 g     F .entry	0000001c __reset
0080fd80 g     F .text	00000078 times
00800020 g       *ABS*	00000000 __flash_exceptions_start
0080db50 g     F .text	0000005c _fstat_r
00815888 g     O .bss	00000004 errno
00802424 g     F .text	000001ec floor
0080bec0 g     F .text	00000008 __seofread
00815890 g     O .bss	00000004 alt_argv
0081bd44 g       *ABS*	00000000 _gp
00812b64 g     O .rwdata	00000180 alt_fd_list
008007a4 g     F .text	0000076c __ieee754_rem_pio2
0081169c g     F .text	00000090 alt_find_dev
0080a478 g     F .text	00000148 memcpy
00808ae0 g     F .text	0000000c _cleanup_r
008045b4 g     F .text	000000dc .hidden __floatsidf
00811204 g     F .text	0000007c alt_io_redirect
0080f398 g     F .text	000000f4 .hidden __ltdf2
00811d98 g       *ABS*	00000000 __DTOR_END__
00804ad8 g     F .text	00000014 puts
00811968 g     F .text	0000009c alt_exception_cause_generated_bad_addr
0080bda4 g     F .text	00000074 __fpclassifyd
0080b624 g     F .text	000000a4 __ratio
0080d5f4 g     F .text	0000001c __vfiprintf_internal
00810624 g     F .text	0000021c altera_avalon_jtag_uart_read
008049ac g     F .text	00000030 _printf_r
008028c0 g     F .text	00000064 .hidden __udivsi3
0080f794 g     F .text	000000a4 isatty
00812184 g     O .rodata	000000c8 __mprec_tens
0080996c g     F .text	0000000c __locale_charset
00800f10 g     F .text	000004a4 __kernel_cos
008118d8 g     F .text	00000090 alt_icache_flush
00815884 g     O .bss	00000004 __malloc_top_pad
00813d4c g     O .rwdata	00000004 __mb_cur_max
0080999c g     F .text	0000000c _localeconv_r
0080ac50 g     F .text	0000003c __i2b
008092ac g     F .text	000004bc __sfvwrite_r
0080be18 g     F .text	00000054 _sbrk_r
008158d0 g     O .bss	000005a0 cosLookupTable
0080dc60 g     F .text	00000060 _read_r
00813d6c g     O .rwdata	00000004 alt_max_fd
0080d844 g     F .text	000000f0 _fclose_r
00808aa8 g     F .text	00000030 fflush
00815880 g     O .bss	00000004 __malloc_max_sbrked_mem
00802144 g     F .text	000002cc __kernel_sin
00804690 g     F .text	00000110 .hidden __extendsfdf2
00802b10 g     F .text	000008ac .hidden __adddf3
0080b3cc g     F .text	0000010c __b2d
0080e578 g     F .text	00000538 .hidden __umoddi3
0080f960 g     F .text	000000d4 lseek
00813d44 g     O .rwdata	00000004 _global_impure_ptr
0080b840 g     F .text	00000564 _realloc_r
00815f70 g       *ABS*	00000000 __bss_end
00811050 g     F .text	000000f0 alt_iic_isr_register
00811570 g     F .text	00000108 alt_tick
0080e000 g     F .text	00000578 .hidden __udivdi3
0080daac g     F .text	00000024 _fputwc_r
0081215c g     O .rodata	00000028 __mprec_bigtens
0080aa34 g     F .text	00000104 __s2b
0080f48c g     F .text	000000a8 .hidden __floatunsidf
0080b10c g     F .text	00000060 __mcmp
00800290 g     F .text	000000e8 generateCosLookupTable
00808e48 g     F .text	00000018 __fp_lock_all
00811004 g     F .text	0000004c alt_ic_irq_enabled
008114d4 g     F .text	0000009c alt_alarm_stop
00815898 g     O .bss	00000004 alt_irq_active
008000fc g     F .exceptions	000000d4 alt_irq_handler
00812b3c g     O .rwdata	00000028 alt_dev_null
00800378 g     F .text	00000070 lookupCos
008013b4 g     F .text	00000d90 __kernel_rem_pio2
00810c84 g     F .text	00000048 alt_dcache_flush_all
0080ab38 g     F .text	00000068 __hi0bits
00804534 g     F .text	00000080 .hidden __fixdfsi
00813d84 g       *ABS*	00000000 __ram_rwdata_end
00813d64 g     O .rwdata	00000008 alt_dev_list
0080fe34 g     F .text	000000f8 write
00812298 g       *ABS*	00000000 __ram_rodata_end
0080f6a8 g     F .text	000000b0 fstat
0080f398 g     F .text	000000f4 .hidden __ledf2
0080ae84 g     F .text	00000140 __pow5mult
0080c198 g     F .text	0000145c ___vfiprintf_internal_r
00815878 g     O .bss	00000004 __nlocale_changed
00802924 g     F .text	00000058 .hidden __umodsi3
00815f70 g       *ABS*	00000000 end
00810160 g     F .text	000000c0 altera_avalon_jtag_uart_init
008001d0 g     F .exceptions	00000074 alt_instruction_exception_entry
00811d98 g       *ABS*	00000000 __CTOR_LIST__
01000000 g       *ABS*	00000000 __alt_stack_pointer
00810adc g     F .text	0000007c alt_avalon_timer_sc_init
00804948 g     F .text	00000064 .hidden __clzsi2
00810840 g     F .text	00000224 altera_avalon_jtag_uart_write
008006b8 g     F .text	000000ec cos
00808e38 g     F .text	00000004 __sfp_lock_acquire
0080a394 g     F .text	000000e4 memchr
00804b84 g     F .text	000021f8 ___vfprintf_internal_r
00808f9c g     F .text	00000310 _free_r
00809978 g     F .text	00000010 __locale_mb_cur_max
00811be4 g     F .text	00000180 __call_exitprocs
00815874 g     O .bss	00000004 __mlocale_changed
00813d50 g     O .rwdata	00000004 __malloc_sbrk_base
00800244 g     F .text	0000004c _start
0081589c g     O .bss	00000004 _alt_tick_rate
0080afc4 g     F .text	00000148 __lshift
008158a0 g     O .bss	00000004 _alt_nticks
0080fb34 g     F .text	000000fc read
0080ff98 g     F .text	00000064 alt_sys_init
008029ec g     F .text	00000124 .hidden __floatsisf
00811acc g     F .text	00000118 __register_exitproc
0080ac8c g     F .text	000001f8 __multiply
008104cc g     F .text	00000068 altera_avalon_jtag_uart_close
00812298 g       *ABS*	00000000 __ram_rwdata_start
00811d98 g       *ABS*	00000000 __ram_rodata_start
008158a8 g     O .bss	00000028 __malloc_current_mallinfo
0080b4d8 g     F .text	0000014c __d2b
0080fffc g     F .text	00000060 altera_avalon_jtag_uart_read_fd
00811834 g     F .text	000000a4 alt_get_fd
0080d72c g     F .text	00000054 _close_r
008003e8 g     F .text	0000009c generateVector
00811a50 g     F .text	0000007c memcmp
008100bc g     F .text	00000050 altera_avalon_jtag_uart_close_fd
00815f70 g       *ABS*	00000000 __alt_stack_base
0081010c g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
00806e54 g     F .text	00000154 __swsetup_r
0080eab0 g     F .text	000008e8 .hidden __divdf3
00808cf8 g     F .text	00000118 __sfp
0080b73c g     F .text	00000078 __copybits
00812734 g     O .rwdata	00000408 __malloc_av_
00808e44 g     F .text	00000004 __sinit_lock_release
00803520 g     F .text	00000718 .hidden __muldf3
0080be6c g     F .text	00000054 __sread
0081172c g     F .text	00000108 alt_find_file
00810d08 g     F .text	000000a4 alt_dev_llist_insert
0080fab0 g     F .text	00000024 __malloc_lock
0080fc94 g     F .text	000000b0 sbrk
00808a4c g     F .text	0000005c _fflush_r
0080d780 g     F .text	000000c4 _calloc_r
00815870 g       *ABS*	00000000 __bss_start
0080a71c g     F .text	00000128 memset
0080060c g     F .text	000000ac main
00815894 g     O .bss	00000004 alt_envp
0081587c g     O .bss	00000004 __malloc_max_total_mem
0081005c g     F .text	00000060 altera_avalon_jtag_uart_write_fd
0080de00 g     F .text	00000018 __swbuf
0080bfa0 g     F .text	00000008 __sclose
01000000 g       *ABS*	00000000 __alt_heap_limit
0080d934 g     F .text	00000014 fclose
008047a0 g     F .text	000001a8 .hidden __truncdfsf2
008071a8 g     F .text	00001688 _dtoa_r
00809b88 g     F .text	0000080c _malloc_r
0080df74 g     F .text	00000030 __ascii_wctomb
00813d70 g     O .rwdata	00000004 alt_errno
00809768 g     F .text	000000c4 _fwalk
008027c8 g     F .text	00000084 .hidden __divsi3
00808e78 g     F .text	00000124 _malloc_trim_r
00811d98 g       *ABS*	00000000 __CTOR_END__
0080bfa8 g     F .text	000000dc strcmp
00811d98 g       *ABS*	00000000 __flash_rodata_start
00811d98 g       *ABS*	00000000 __DTOR_LIST__
008027ac g     F .text	0000001c copysign
008033bc g     F .text	00000088 .hidden __nedf2
0080ff60 g     F .text	00000038 alt_irq_init
0080fc30 g     F .text	00000064 alt_release_fd
00811fa0 g     O .rodata	00000100 .hidden __clz_tab
00815870 g     O .bss	00000004 _PathLocale
00811a04 g     F .text	00000014 atexit
0080d6cc g     F .text	00000060 _write_r
008099a8 g     F .text	00000018 setlocale
00813d48 g     O .rwdata	00000004 _impure_ptr
0081588c g     O .bss	00000004 alt_argc
00808830 g     F .text	0000021c __sflush_r
00802610 g     F .text	0000019c scalbn
00810e0c g     F .text	00000060 _do_dtors
00809994 g     F .text	00000008 __locale_cjk_lang
00800020 g       .exceptions	00000000 alt_irq_entry
0080b368 g     F .text	00000064 __ulp
00808e60 g     F .text	00000018 __fp_unlock_all
00813d5c g     O .rwdata	00000008 alt_fs_list
00800484 g     F .text	00000188 func
00800020 g       *ABS*	00000000 __ram_exceptions_start
008099c0 g     F .text	0000000c localeconv
00810ea0 g     F .text	00000050 alt_ic_isr_register
00813d84 g       *ABS*	00000000 _edata
00815f70 g       *ABS*	00000000 _end
0080d948 g     F .text	00000164 __fputwc
00800244 g       *ABS*	00000000 __ram_exceptions_end
00810534 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
00810f78 g     F .text	0000008c alt_ic_irq_disable
0080bec8 g     F .text	0000007c __swrite
00813d54 g     O .rwdata	00000004 __malloc_trim_threshold
00809988 g     F .text	0000000c __locale_msgcharset
00811a18 g     F .text	00000038 exit
0080982c g     F .text	000000c4 _fwalk_reent
0080b16c g     F .text	000001fc __mdiff
0080284c g     F .text	00000074 .hidden __modsi3
01000000 g       *ABS*	00000000 __alt_data_end
00800020 g     F .exceptions	00000000 alt_exception
00808e3c g     F .text	00000004 __sfp_lock_release
00800000 g       *ABS*	00000000 __alt_mem_sdram
00811d64 g     F .text	00000034 _exit
00810b58 g     F .text	0000012c alt_alarm_start
008099cc g     F .text	000001bc __smakebuf_r
00804aec g     F .text	00000098 strlen
00811380 g     F .text	00000154 open
00803444 g     F .text	000000dc .hidden __gedf2
00813d58 g     O .rwdata	00000004 __wctomb
0080c180 g     F .text	00000018 __sprint_r
00810e6c g     F .text	00000034 alt_icache_flush_all
00813d78 g     O .rwdata	00000004 alt_priority_mask
00810ef0 g     F .text	00000088 alt_ic_irq_enable
00806d7c g     F .text	0000001c __vfprintf_internal
0080dfa4 g     F .text	0000005c _wctomb_r
00803c38 g     F .text	000008fc .hidden __subdf3
0080aba0 g     F .text	000000b0 __lo0bits
00813d7c g     O .rwdata	00000008 alt_alarm_list
00810dac g     F .text	00000060 _do_ctors
0080deb4 g     F .text	000000c0 wcrtomb
0080f570 g     F .text	000000d0 close
0080f8a0 g     F .text	00000084 alt_load
0080dad0 g     F .text	00000080 fputwc
00808e40 g     F .text	00000004 __sinit_lock_acquire
0080a914 g     F .text	00000120 __multadd
0080a8ec g     F .text	00000028 _Bfree



Disassembly of section .entry:

00800000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
  800000:	00820014 	movui	r2,2048
#endif

0:
    initi r2
  800004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
  800008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
  80000c:	00bffd16 	blt	zero,r2,800004 <__alt_data_end+0xff800004>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
  800010:	00402034 	movhi	at,128
    ori r1, r1, %lo(_start)
  800014:	08409114 	ori	at,at,580
    jmp r1
  800018:	0800683a 	jmp	at
  80001c:	00000000 	call	0 <__alt_mem_sdram-0x800000>

Disassembly of section .exceptions:

00800020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
  800020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
  800024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
  800028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
  80002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
  800030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
  800034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
  800038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
  80003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
  800040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
  800044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
  800048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
  80004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
  800050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
  800054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
  800058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
  80005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
  800060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
  800064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
  800068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
  80006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  800070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
  800074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
  800078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
  80007c:	10000326 	beq	r2,zero,80008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
  800080:	20000226 	beq	r4,zero,80008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
  800084:	08000fc0 	call	8000fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
  800088:	00000706 	br	8000a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
  80008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
  800090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
  800094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
  800098:	08001d00 	call	8001d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
  80009c:	1000021e 	bne	r2,zero,8000a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
  8000a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  8000a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
  8000a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
  8000ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
  8000b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
  8000b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
  8000b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
  8000bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
  8000c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
  8000c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
  8000c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
  8000cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
  8000d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
  8000d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
  8000d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
  8000dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
  8000e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
  8000e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
  8000e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
  8000ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
  8000f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
  8000f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
  8000f8:	ef80083a 	eret

008000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
  8000fc:	defff904 	addi	sp,sp,-28
  800100:	dfc00615 	stw	ra,24(sp)
  800104:	df000515 	stw	fp,20(sp)
  800108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
  80010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
  800110:	0005313a 	rdctl	r2,ipending
  800114:	e0bffe15 	stw	r2,-8(fp)

  return active;
  800118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
  80011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
  800120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
  800124:	00800044 	movi	r2,1
  800128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
  80012c:	e0fffb17 	ldw	r3,-20(fp)
  800130:	e0bffc17 	ldw	r2,-16(fp)
  800134:	1884703a 	and	r2,r3,r2
  800138:	10001426 	beq	r2,zero,80018c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
  80013c:	00802074 	movhi	r2,129
  800140:	10979c04 	addi	r2,r2,24176
  800144:	e0fffd17 	ldw	r3,-12(fp)
  800148:	180690fa 	slli	r3,r3,3
  80014c:	10c5883a 	add	r2,r2,r3
  800150:	10c00017 	ldw	r3,0(r2)
  800154:	00802074 	movhi	r2,129
  800158:	10979c04 	addi	r2,r2,24176
  80015c:	e13ffd17 	ldw	r4,-12(fp)
  800160:	200890fa 	slli	r4,r4,3
  800164:	1105883a 	add	r2,r2,r4
  800168:	10800104 	addi	r2,r2,4
  80016c:	10800017 	ldw	r2,0(r2)
  800170:	1009883a 	mov	r4,r2
  800174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
  800178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
  80017c:	0005313a 	rdctl	r2,ipending
  800180:	e0bfff15 	stw	r2,-4(fp)

  return active;
  800184:	e0bfff17 	ldw	r2,-4(fp)
  800188:	00000706 	br	8001a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
  80018c:	e0bffc17 	ldw	r2,-16(fp)
  800190:	1085883a 	add	r2,r2,r2
  800194:	e0bffc15 	stw	r2,-16(fp)
      i++;
  800198:	e0bffd17 	ldw	r2,-12(fp)
  80019c:	10800044 	addi	r2,r2,1
  8001a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
  8001a4:	003fe106 	br	80012c <__alt_data_end+0xff80012c>

    active = alt_irq_pending ();
  8001a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
  8001ac:	e0bffb17 	ldw	r2,-20(fp)
  8001b0:	103fdb1e 	bne	r2,zero,800120 <__alt_data_end+0xff800120>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
  8001b4:	0001883a 	nop
}
  8001b8:	0001883a 	nop
  8001bc:	e037883a 	mov	sp,fp
  8001c0:	dfc00117 	ldw	ra,4(sp)
  8001c4:	df000017 	ldw	fp,0(sp)
  8001c8:	dec00204 	addi	sp,sp,8
  8001cc:	f800283a 	ret

008001d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
  8001d0:	defffb04 	addi	sp,sp,-20
  8001d4:	dfc00415 	stw	ra,16(sp)
  8001d8:	df000315 	stw	fp,12(sp)
  8001dc:	df000304 	addi	fp,sp,12
  8001e0:	e13fff15 	stw	r4,-4(fp)
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
  8001e4:	000531fa 	rdctl	r2,exception
  8001e8:	e0bffd15 	stw	r2,-12(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
  8001ec:	e0bffd17 	ldw	r2,-12(fp)
  8001f0:	10801f0c 	andi	r2,r2,124
  8001f4:	1004d0ba 	srli	r2,r2,2
  8001f8:	e0bffd15 	stw	r2,-12(fp)
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
  8001fc:	0005333a 	rdctl	r2,badaddr
  800200:	e0bffe15 	stw	r2,-8(fp)
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
  800204:	d0a6d817 	ldw	r2,-25760(gp)
  800208:	10000726 	beq	r2,zero,800228 <alt_instruction_exception_entry+0x58>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
  80020c:	d0a6d817 	ldw	r2,-25760(gp)
  800210:	e0fffd17 	ldw	r3,-12(fp)
  800214:	e1bffe17 	ldw	r6,-8(fp)
  800218:	e17fff17 	ldw	r5,-4(fp)
  80021c:	1809883a 	mov	r4,r3
  800220:	103ee83a 	callr	r2
  800224:	00000206 	br	800230 <alt_instruction_exception_entry+0x60>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
  800228:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
  80022c:	0005883a 	mov	r2,zero
}
  800230:	e037883a 	mov	sp,fp
  800234:	dfc00117 	ldw	ra,4(sp)
  800238:	df000017 	ldw	fp,0(sp)
  80023c:	dec00204 	addi	sp,sp,8
  800240:	f800283a 	ret

Disassembly of section .text:

00800244 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
  800244:	00880014 	movui	r2,8192
#endif

0:
    initd 0(r2)
  800248:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
  80024c:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
  800250:	00bffd16 	blt	zero,r2,800248 <__alt_data_end+0xff800248>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
  800254:	06c04034 	movhi	sp,256
    ori sp, sp, %lo(__alt_stack_pointer)
  800258:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
  80025c:	06802074 	movhi	gp,129
    ori gp, gp, %lo(_gp)
  800260:	d6af5114 	ori	gp,gp,48452
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
  800264:	00802074 	movhi	r2,129
    ori r2, r2, %lo(__bss_start)
  800268:	10961c14 	ori	r2,r2,22640

    movhi r3, %hi(__bss_end)
  80026c:	00c02074 	movhi	r3,129
    ori r3, r3, %lo(__bss_end)
  800270:	18d7dc14 	ori	r3,r3,24432

    beq r2, r3, 1f
  800274:	10c00326 	beq	r2,r3,800284 <_start+0x40>

0:
    stw zero, (r2)
  800278:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
  80027c:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
  800280:	10fffd36 	bltu	r2,r3,800278 <__alt_data_end+0xff800278>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
  800284:	080f8a00 	call	80f8a0 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
  800288:	080fa340 	call	80fa34 <alt_main>

0080028c <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
  80028c:	003fff06 	br	80028c <__alt_data_end+0xff80028c>

00800290 <generateCosLookupTable>:
#define TABLE_SIZE 360 // 1 degree resolution
#define PI 3.14159265358979323846

float cosLookupTable[TABLE_SIZE];

void generateCosLookupTable() {
  800290:	defffc04 	addi	sp,sp,-16
  800294:	dfc00315 	stw	ra,12(sp)
  800298:	df000215 	stw	fp,8(sp)
  80029c:	df000204 	addi	fp,sp,8
    for (int i = 0; i < TABLE_SIZE; i++) {
  8002a0:	e03ffe15 	stw	zero,-8(fp)
  8002a4:	00002b06 	br	800354 <generateCosLookupTable+0xc4>
        // Convert angle from degrees to radians
        float rad = i * (PI / 180.0);
  8002a8:	e13ffe17 	ldw	r4,-8(fp)
  8002ac:	08045b40 	call	8045b4 <__floatsidf>
  8002b0:	1011883a 	mov	r8,r2
  8002b4:	1813883a 	mov	r9,r3
  8002b8:	01a894f4 	movhi	r6,41555
  8002bc:	31a74e44 	addi	r6,r6,-25287
  8002c0:	01cfe4b4 	movhi	r7,16274
  8002c4:	39f7d184 	addi	r7,r7,-8378
  8002c8:	4009883a 	mov	r4,r8
  8002cc:	480b883a 	mov	r5,r9
  8002d0:	08035200 	call	803520 <__muldf3>
  8002d4:	1009883a 	mov	r4,r2
  8002d8:	180b883a 	mov	r5,r3
  8002dc:	2005883a 	mov	r2,r4
  8002e0:	2807883a 	mov	r3,r5
  8002e4:	1009883a 	mov	r4,r2
  8002e8:	180b883a 	mov	r5,r3
  8002ec:	08047a00 	call	8047a0 <__truncdfsf2>
  8002f0:	1007883a 	mov	r3,r2
  8002f4:	e0ffff15 	stw	r3,-4(fp)
        cosLookupTable[i] = cos(rad);
  8002f8:	e13fff17 	ldw	r4,-4(fp)
  8002fc:	08046900 	call	804690 <__extendsfdf2>
  800300:	100b883a 	mov	r5,r2
  800304:	180d883a 	mov	r6,r3
  800308:	2809883a 	mov	r4,r5
  80030c:	300b883a 	mov	r5,r6
  800310:	08006b80 	call	8006b8 <cos>
  800314:	100b883a 	mov	r5,r2
  800318:	180d883a 	mov	r6,r3
  80031c:	2809883a 	mov	r4,r5
  800320:	300b883a 	mov	r5,r6
  800324:	08047a00 	call	8047a0 <__truncdfsf2>
  800328:	1009883a 	mov	r4,r2
  80032c:	00802074 	movhi	r2,129
  800330:	10963404 	addi	r2,r2,22736
  800334:	e0fffe17 	ldw	r3,-8(fp)
  800338:	18c7883a 	add	r3,r3,r3
  80033c:	18c7883a 	add	r3,r3,r3
  800340:	10c5883a 	add	r2,r2,r3
  800344:	11000015 	stw	r4,0(r2)
#define PI 3.14159265358979323846

float cosLookupTable[TABLE_SIZE];

void generateCosLookupTable() {
    for (int i = 0; i < TABLE_SIZE; i++) {
  800348:	e0bffe17 	ldw	r2,-8(fp)
  80034c:	10800044 	addi	r2,r2,1
  800350:	e0bffe15 	stw	r2,-8(fp)
  800354:	e0bffe17 	ldw	r2,-8(fp)
  800358:	10805a10 	cmplti	r2,r2,360
  80035c:	103fd21e 	bne	r2,zero,8002a8 <__alt_data_end+0xff8002a8>
        // Convert angle from degrees to radians
        float rad = i * (PI / 180.0);
        cosLookupTable[i] = cos(rad);
    }
}
  800360:	0001883a 	nop
  800364:	e037883a 	mov	sp,fp
  800368:	dfc00117 	ldw	ra,4(sp)
  80036c:	df000017 	ldw	fp,0(sp)
  800370:	dec00204 	addi	sp,sp,8
  800374:	f800283a 	ret

00800378 <lookupCos>:

float lookupCos(int angle) {
  800378:	defffd04 	addi	sp,sp,-12
  80037c:	dfc00215 	stw	ra,8(sp)
  800380:	df000115 	stw	fp,4(sp)
  800384:	df000104 	addi	fp,sp,4
  800388:	e13fff15 	stw	r4,-4(fp)
    // Normalize angle to [0, 359]
    angle = angle % 360;
  80038c:	e0bfff17 	ldw	r2,-4(fp)
  800390:	01405a04 	movi	r5,360
  800394:	1009883a 	mov	r4,r2
  800398:	080284c0 	call	80284c <__modsi3>
  80039c:	e0bfff15 	stw	r2,-4(fp)
    if (angle < 0) angle += 360; // Ensure positive angle for negative inputs
  8003a0:	e0bfff17 	ldw	r2,-4(fp)
  8003a4:	1000030e 	bge	r2,zero,8003b4 <lookupCos+0x3c>
  8003a8:	e0bfff17 	ldw	r2,-4(fp)
  8003ac:	10805a04 	addi	r2,r2,360
  8003b0:	e0bfff15 	stw	r2,-4(fp)

    return cosLookupTable[angle];
  8003b4:	00802074 	movhi	r2,129
  8003b8:	10963404 	addi	r2,r2,22736
  8003bc:	e0ffff17 	ldw	r3,-4(fp)
  8003c0:	18c7883a 	add	r3,r3,r3
  8003c4:	18c7883a 	add	r3,r3,r3
  8003c8:	10c5883a 	add	r2,r2,r3
  8003cc:	10c00017 	ldw	r3,0(r2)
  8003d0:	1805883a 	mov	r2,r3
}
  8003d4:	e037883a 	mov	sp,fp
  8003d8:	dfc00117 	ldw	ra,4(sp)
  8003dc:	df000017 	ldw	fp,0(sp)
  8003e0:	dec00204 	addi	sp,sp,8
  8003e4:	f800283a 	ret

008003e8 <generateVector>:



void generateVector(float x[N])
{
  8003e8:	defffd04 	addi	sp,sp,-12
  8003ec:	df000215 	stw	fp,8(sp)
  8003f0:	df000204 	addi	fp,sp,8
  8003f4:	e13fff15 	stw	r4,-4(fp)
int i;
x[0] = 0;
  8003f8:	e0bfff17 	ldw	r2,-4(fp)
  8003fc:	10000015 	stw	zero,0(r2)
for (i=1; i<N; i++){
  800400:	00800044 	movi	r2,1
  800404:	e0bffe15 	stw	r2,-8(fp)
  800408:	00001606 	br	800464 <generateVector+0x7c>
//x[i] = x[i-1] + step;
x[i]=ALT_CI_FP_ADD_0(x[i-1], step);
  80040c:	e0bffe17 	ldw	r2,-8(fp)
  800410:	1085883a 	add	r2,r2,r2
  800414:	1085883a 	add	r2,r2,r2
  800418:	1007883a 	mov	r3,r2
  80041c:	e0bfff17 	ldw	r2,-4(fp)
  800420:	10c7883a 	add	r3,r2,r3
  800424:	e13ffe17 	ldw	r4,-8(fp)
  800428:	00900034 	movhi	r2,16384
  80042c:	10bfffc4 	addi	r2,r2,-1
  800430:	2085883a 	add	r2,r4,r2
  800434:	1085883a 	add	r2,r2,r2
  800438:	1085883a 	add	r2,r2,r2
  80043c:	1009883a 	mov	r4,r2
  800440:	e0bfff17 	ldw	r2,-4(fp)
  800444:	1109883a 	add	r4,r2,r4
  800448:	20800017 	ldw	r2,0(r4)
  80044c:	010f8034 	movhi	r4,15872
  800450:	1105c072 	custom	1,r2,r2,r4
  800454:	18800015 	stw	r2,0(r3)

void generateVector(float x[N])
{
int i;
x[0] = 0;
for (i=1; i<N; i++){
  800458:	e0bffe17 	ldw	r2,-8(fp)
  80045c:	10800044 	addi	r2,r2,1
  800460:	e0bffe15 	stw	r2,-8(fp)
  800464:	e0bffe17 	ldw	r2,-8(fp)
  800468:	1081fe50 	cmplti	r2,r2,2041
  80046c:	103fe71e 	bne	r2,zero,80040c <__alt_data_end+0xff80040c>
//x[i] = x[i-1] + step;
x[i]=ALT_CI_FP_ADD_0(x[i-1], step);
//printf("x[%d] = %f\n", i, x[i]); // Print the current value in each iteration
}
}
  800470:	0001883a 	nop
  800474:	e037883a 	mov	sp,fp
  800478:	df000017 	ldw	fp,0(sp)
  80047c:	dec00104 	addi	sp,sp,4
  800480:	f800283a 	ret

00800484 <func>:
//    }
//    return sum;
//}

float func(float x[], int M)
{
  800484:	defff304 	addi	sp,sp,-52
  800488:	dfc00c15 	stw	ra,48(sp)
  80048c:	df000b15 	stw	fp,44(sp)
  800490:	df000b04 	addi	fp,sp,44
  800494:	e13ffe15 	stw	r4,-8(fp)
  800498:	e17fff15 	stw	r5,-4(fp)
    float sum = 0;
  80049c:	e03ff515 	stw	zero,-44(fp)
    for (int i = 0; i < M; i++) {
  8004a0:	e03ff615 	stw	zero,-40(fp)
  8004a4:	00004e06 	br	8005e0 <func+0x15c>
    	//sum += 0.5 * x[i] + x[i] * x[i] * cosTaylorExpansion((x[i] - 128.0) / 128.0);
        float min = ALT_CI_FP_SUB_0(x[i],128);
  8004a8:	e0bff617 	ldw	r2,-40(fp)
  8004ac:	1085883a 	add	r2,r2,r2
  8004b0:	1085883a 	add	r2,r2,r2
  8004b4:	1007883a 	mov	r3,r2
  8004b8:	e0bffe17 	ldw	r2,-8(fp)
  8004bc:	10c7883a 	add	r3,r2,r3
  8004c0:	18800017 	ldw	r2,0(r3)
  8004c4:	00d0c034 	movhi	r3,17152
  8004c8:	10c5c0b2 	custom	2,r2,r2,r3
  8004cc:	e0bff815 	stw	r2,-32(fp)
        float div = ALT_CI_FP_MULT_0(min, 0.0078125);
  8004d0:	e0bff817 	ldw	r2,-32(fp)
  8004d4:	00cf0034 	movhi	r3,15360
  8004d8:	10c5c0f2 	custom	3,r2,r2,r3
  8004dc:	e0bff915 	stw	r2,-28(fp)
        float xs = ALT_CI_FP_MULT_0(x[i],x[i]);
  8004e0:	e0bff617 	ldw	r2,-40(fp)
  8004e4:	1085883a 	add	r2,r2,r2
  8004e8:	1085883a 	add	r2,r2,r2
  8004ec:	1007883a 	mov	r3,r2
  8004f0:	e0bffe17 	ldw	r2,-8(fp)
  8004f4:	10c5883a 	add	r2,r2,r3
  8004f8:	10c00017 	ldw	r3,0(r2)
  8004fc:	e0bff617 	ldw	r2,-40(fp)
  800500:	1085883a 	add	r2,r2,r2
  800504:	1085883a 	add	r2,r2,r2
  800508:	1009883a 	mov	r4,r2
  80050c:	e0bffe17 	ldw	r2,-8(fp)
  800510:	1109883a 	add	r4,r2,r4
  800514:	20800017 	ldw	r2,0(r4)
  800518:	1885c0f2 	custom	3,r2,r3,r2
  80051c:	e0bffa15 	stw	r2,-24(fp)
        float sum05=ALT_CI_FP_MULT_0(x[i], 0.5);
  800520:	e0bff617 	ldw	r2,-40(fp)
  800524:	1085883a 	add	r2,r2,r2
  800528:	1085883a 	add	r2,r2,r2
  80052c:	1007883a 	mov	r3,r2
  800530:	e0bffe17 	ldw	r2,-8(fp)
  800534:	10c7883a 	add	r3,r2,r3
  800538:	18800017 	ldw	r2,0(r3)
  80053c:	00cfc034 	movhi	r3,16128
  800540:	10c5c0f2 	custom	3,r2,r2,r3
  800544:	e0bffb15 	stw	r2,-20(fp)
    	int a = (int)ALT_CI_FP_MULT_0(div, 360);
  800548:	e0bff917 	ldw	r2,-28(fp)
  80054c:	00d0ed34 	movhi	r3,17332
  800550:	10c5c0f2 	custom	3,r2,r2,r3
  800554:	1009883a 	mov	r4,r2
  800558:	080297c0 	call	80297c <__fixsfsi>
  80055c:	e0bff715 	stw	r2,-36(fp)
    	if (a>360){
  800560:	e0bff717 	ldw	r2,-36(fp)
  800564:	10805a50 	cmplti	r2,r2,361
  800568:	1000081e 	bne	r2,zero,80058c <func+0x108>
    		a=ALT_CI_FP_SUB_0(a,360);
  80056c:	e13ff717 	ldw	r4,-36(fp)
  800570:	08029ec0 	call	8029ec <__floatsisf>
  800574:	1007883a 	mov	r3,r2
  800578:	0090ed34 	movhi	r2,17332
  80057c:	1885c0b2 	custom	2,r2,r3,r2
  800580:	1009883a 	mov	r4,r2
  800584:	080297c0 	call	80297c <__fixsfsi>
  800588:	e0bff715 	stw	r2,-36(fp)
    	}
    	float sum_cos=ALT_CI_FP_MULT_0(xs, cosLookupTable[a]);
  80058c:	00802074 	movhi	r2,129
  800590:	10963404 	addi	r2,r2,22736
  800594:	e0fff717 	ldw	r3,-36(fp)
  800598:	18c7883a 	add	r3,r3,r3
  80059c:	18c7883a 	add	r3,r3,r3
  8005a0:	10c5883a 	add	r2,r2,r3
  8005a4:	10c00017 	ldw	r3,0(r2)
  8005a8:	e0bffa17 	ldw	r2,-24(fp)
  8005ac:	10c5c0f2 	custom	3,r2,r2,r3
  8005b0:	e0bffc15 	stw	r2,-16(fp)
    	float sumf=ALT_CI_FP_ADD_0(sum05, sum_cos);
  8005b4:	e0bffb17 	ldw	r2,-20(fp)
  8005b8:	e0fffc17 	ldw	r3,-16(fp)
  8005bc:	10c5c072 	custom	1,r2,r2,r3
  8005c0:	e0bffd15 	stw	r2,-12(fp)
    	sum = ALT_CI_FP_ADD_0(sum, sumf);
  8005c4:	e0bff517 	ldw	r2,-44(fp)
  8005c8:	e0fffd17 	ldw	r3,-12(fp)
  8005cc:	10c5c072 	custom	1,r2,r2,r3
  8005d0:	e0bff515 	stw	r2,-44(fp)
//}

float func(float x[], int M)
{
    float sum = 0;
    for (int i = 0; i < M; i++) {
  8005d4:	e0bff617 	ldw	r2,-40(fp)
  8005d8:	10800044 	addi	r2,r2,1
  8005dc:	e0bff615 	stw	r2,-40(fp)
  8005e0:	e0fff617 	ldw	r3,-40(fp)
  8005e4:	e0bfff17 	ldw	r2,-4(fp)
  8005e8:	18bfaf16 	blt	r3,r2,8004a8 <__alt_data_end+0xff8004a8>
    	}
    	float sum_cos=ALT_CI_FP_MULT_0(xs, cosLookupTable[a]);
    	float sumf=ALT_CI_FP_ADD_0(sum05, sum_cos);
    	sum = ALT_CI_FP_ADD_0(sum, sumf);
    }
    return sum;
  8005ec:	e0bff517 	ldw	r2,-44(fp)
  8005f0:	1007883a 	mov	r3,r2
}
  8005f4:	1805883a 	mov	r2,r3
  8005f8:	e037883a 	mov	sp,fp
  8005fc:	dfc00117 	ldw	ra,4(sp)
  800600:	df000017 	ldw	fp,0(sp)
  800604:	dec00204 	addi	sp,sp,8
  800608:	f800283a 	ret

0080060c <main>:
//    }
//    return sum;
//}

int main()
{
  80060c:	def80204 	addi	sp,sp,-8184
  800610:	dfc7fd15 	stw	ra,8180(sp)
  800614:	df07fc15 	stw	fp,8176(sp)
  800618:	df07fc04 	addi	fp,sp,8176
printf("Task 4!\n");
  80061c:	01002074 	movhi	r4,129
  800620:	21076604 	addi	r4,r4,7576
  800624:	0804ad80 	call	804ad8 <puts>
// Define input vector
float x[N];
// Returned result
float y;
generateVector(x);
  800628:	e0b80704 	addi	r2,fp,-8164
  80062c:	1009883a 	mov	r4,r2
  800630:	08003e80 	call	8003e8 <generateVector>
// The following is used for timing
//char buf[50];
clock_t exec_t1, exec_t2;
exec_t1 = times(NULL); // get system time before starting the process
  800634:	0009883a 	mov	r4,zero
  800638:	080fd800 	call	80fd80 <times>
  80063c:	e0b80415 	stw	r2,-8176(fp)
// The code that you want to time goes here
y = func(x, N);
  800640:	e0b80704 	addi	r2,fp,-8164
  800644:	0141fe44 	movi	r5,2041
  800648:	1009883a 	mov	r4,r2
  80064c:	08004840 	call	800484 <func>
  800650:	e0b80515 	stw	r2,-8172(fp)
// till here
exec_t2 = times(NULL); // get system time after finishing the process
  800654:	0009883a 	mov	r4,zero
  800658:	080fd800 	call	80fd80 <times>
  80065c:	e0b80615 	stw	r2,-8168(fp)



printf(" proc time = %d ticks \n", (unsigned int) (exec_t2-exec_t1));
  800660:	e0f80617 	ldw	r3,-8168(fp)
  800664:	e0b80417 	ldw	r2,-8176(fp)
  800668:	1885c83a 	sub	r2,r3,r2
  80066c:	100b883a 	mov	r5,r2
  800670:	01002074 	movhi	r4,129
  800674:	21076804 	addi	r4,r4,7584
  800678:	08049dc0 	call	8049dc <printf>
printf("Result: %f \n",y);
  80067c:	e1380517 	ldw	r4,-8172(fp)
  800680:	08046900 	call	804690 <__extendsfdf2>
  800684:	100d883a 	mov	r6,r2
  800688:	180f883a 	mov	r7,r3
  80068c:	300b883a 	mov	r5,r6
  800690:	380d883a 	mov	r6,r7
  800694:	01002074 	movhi	r4,129
  800698:	21076e04 	addi	r4,r4,7608
  80069c:	08049dc0 	call	8049dc <printf>
  8006a0:	0005883a 	mov	r2,zero

//nios2-elf-objdump -d hello_world.elf > disassembly.txt
//nios2-elf-objdump -d hello_world.elf | grep -A20 "<main>:"
//nios2-elf-size hello_world.elf
}
  8006a4:	e037883a 	mov	sp,fp
  8006a8:	dfc00117 	ldw	ra,4(sp)
  8006ac:	df000017 	ldw	fp,0(sp)
  8006b0:	dec00204 	addi	sp,sp,8
  8006b4:	f800283a 	ret

008006b8 <cos>:
  8006b8:	00a00034 	movhi	r2,32768
  8006bc:	defffa04 	addi	sp,sp,-24
  8006c0:	10bfffc4 	addi	r2,r2,-1
  8006c4:	00cffa74 	movhi	r3,16361
  8006c8:	dfc00515 	stw	ra,20(sp)
  8006cc:	2884703a 	and	r2,r5,r2
  8006d0:	18c87ec4 	addi	r3,r3,8699
  8006d4:	1880180e 	bge	r3,r2,800738 <cos+0x80>
  8006d8:	00dffc34 	movhi	r3,32752
  8006dc:	18ffffc4 	addi	r3,r3,-1
  8006e0:	1880060e 	bge	r3,r2,8006fc <cos+0x44>
  8006e4:	280f883a 	mov	r7,r5
  8006e8:	200d883a 	mov	r6,r4
  8006ec:	0803c380 	call	803c38 <__subdf3>
  8006f0:	dfc00517 	ldw	ra,20(sp)
  8006f4:	dec00604 	addi	sp,sp,24
  8006f8:	f800283a 	ret
  8006fc:	d9800104 	addi	r6,sp,4
  800700:	08007a40 	call	8007a4 <__ieee754_rem_pio2>
  800704:	108000cc 	andi	r2,r2,3
  800708:	00c00044 	movi	r3,1
  80070c:	10c01726 	beq	r2,r3,80076c <cos+0xb4>
  800710:	01000084 	movi	r4,2
  800714:	11000e26 	beq	r2,r4,800750 <cos+0x98>
  800718:	10001c26 	beq	r2,zero,80078c <cos+0xd4>
  80071c:	d9800317 	ldw	r6,12(sp)
  800720:	d9c00417 	ldw	r7,16(sp)
  800724:	d9000117 	ldw	r4,4(sp)
  800728:	d9400217 	ldw	r5,8(sp)
  80072c:	d8c00015 	stw	r3,0(sp)
  800730:	08021440 	call	802144 <__kernel_sin>
  800734:	003fee06 	br	8006f0 <__alt_data_end+0xff8006f0>
  800738:	000d883a 	mov	r6,zero
  80073c:	000f883a 	mov	r7,zero
  800740:	0800f100 	call	800f10 <__kernel_cos>
  800744:	dfc00517 	ldw	ra,20(sp)
  800748:	dec00604 	addi	sp,sp,24
  80074c:	f800283a 	ret
  800750:	d9800317 	ldw	r6,12(sp)
  800754:	d9c00417 	ldw	r7,16(sp)
  800758:	d9000117 	ldw	r4,4(sp)
  80075c:	d9400217 	ldw	r5,8(sp)
  800760:	0800f100 	call	800f10 <__kernel_cos>
  800764:	18e0003c 	xorhi	r3,r3,32768
  800768:	003fe106 	br	8006f0 <__alt_data_end+0xff8006f0>
  80076c:	d9800317 	ldw	r6,12(sp)
  800770:	d9c00417 	ldw	r7,16(sp)
  800774:	d9000117 	ldw	r4,4(sp)
  800778:	d9400217 	ldw	r5,8(sp)
  80077c:	d8800015 	stw	r2,0(sp)
  800780:	08021440 	call	802144 <__kernel_sin>
  800784:	18e0003c 	xorhi	r3,r3,32768
  800788:	003fd906 	br	8006f0 <__alt_data_end+0xff8006f0>
  80078c:	d9800317 	ldw	r6,12(sp)
  800790:	d9c00417 	ldw	r7,16(sp)
  800794:	d9000117 	ldw	r4,4(sp)
  800798:	d9400217 	ldw	r5,8(sp)
  80079c:	0800f100 	call	800f10 <__kernel_cos>
  8007a0:	003fd306 	br	8006f0 <__alt_data_end+0xff8006f0>

008007a4 <__ieee754_rem_pio2>:
  8007a4:	02200034 	movhi	r8,32768
  8007a8:	deffea04 	addi	sp,sp,-88
  8007ac:	423fffc4 	addi	r8,r8,-1
  8007b0:	00cffa74 	movhi	r3,16361
  8007b4:	ddc01315 	stw	r23,76(sp)
  8007b8:	dc400d15 	stw	r17,52(sp)
  8007bc:	dfc01515 	stw	ra,84(sp)
  8007c0:	df001415 	stw	fp,80(sp)
  8007c4:	dd801215 	stw	r22,72(sp)
  8007c8:	dd401115 	stw	r21,68(sp)
  8007cc:	dd001015 	stw	r20,64(sp)
  8007d0:	dcc00f15 	stw	r19,60(sp)
  8007d4:	dc800e15 	stw	r18,56(sp)
  8007d8:	dc000c15 	stw	r16,48(sp)
  8007dc:	2a2e703a 	and	r23,r5,r8
  8007e0:	18c87ec4 	addi	r3,r3,8699
  8007e4:	2823883a 	mov	r17,r5
  8007e8:	1dc0790e 	bge	r3,r23,8009d0 <__ieee754_rem_pio2+0x22c>
  8007ec:	009000f4 	movhi	r2,16387
  8007f0:	10b65ec4 	addi	r2,r2,-9861
  8007f4:	3021883a 	mov	r16,r6
  8007f8:	2027883a 	mov	r19,r4
  8007fc:	15c02316 	blt	r2,r23,80088c <__ieee754_rem_pio2+0xe8>
  800800:	01cffe74 	movhi	r7,16377
  800804:	39c87ec4 	addi	r7,r7,8699
  800808:	01951034 	movhi	r6,21568
  80080c:	01417a0e 	bge	zero,r5,800df8 <__ieee754_rem_pio2+0x654>
  800810:	0803c380 	call	803c38 <__subdf3>
  800814:	1025883a 	mov	r18,r2
  800818:	008ffe74 	movhi	r2,16377
  80081c:	10887ec4 	addi	r2,r2,8699
  800820:	1823883a 	mov	r17,r3
  800824:	b8808426 	beq	r23,r2,800a38 <__ieee754_rem_pio2+0x294>
  800828:	018698b4 	movhi	r6,6754
  80082c:	01cf7474 	movhi	r7,15825
  800830:	3198cc44 	addi	r6,r6,25393
  800834:	39ed1844 	addi	r7,r7,-19359
  800838:	9009883a 	mov	r4,r18
  80083c:	180b883a 	mov	r5,r3
  800840:	0803c380 	call	803c38 <__subdf3>
  800844:	100d883a 	mov	r6,r2
  800848:	180f883a 	mov	r7,r3
  80084c:	9009883a 	mov	r4,r18
  800850:	880b883a 	mov	r5,r17
  800854:	80800015 	stw	r2,0(r16)
  800858:	80c00115 	stw	r3,4(r16)
  80085c:	0803c380 	call	803c38 <__subdf3>
  800860:	018698b4 	movhi	r6,6754
  800864:	01cf7474 	movhi	r7,15825
  800868:	3198cc44 	addi	r6,r6,25393
  80086c:	39ed1844 	addi	r7,r7,-19359
  800870:	1009883a 	mov	r4,r2
  800874:	180b883a 	mov	r5,r3
  800878:	0803c380 	call	803c38 <__subdf3>
  80087c:	80800215 	stw	r2,8(r16)
  800880:	80c00315 	stw	r3,12(r16)
  800884:	00800044 	movi	r2,1
  800888:	00005606 	br	8009e4 <__ieee754_rem_pio2+0x240>
  80088c:	00904e74 	movhi	r2,16697
  800890:	10887ec4 	addi	r2,r2,8699
  800894:	15c0830e 	bge	r2,r23,800aa4 <__ieee754_rem_pio2+0x300>
  800898:	009ffc34 	movhi	r2,32752
  80089c:	10bfffc4 	addi	r2,r2,-1
  8008a0:	15c05c16 	blt	r2,r23,800a14 <__ieee754_rem_pio2+0x270>
  8008a4:	b829d53a 	srai	r20,r23,20
  8008a8:	a53efa84 	addi	r20,r20,-1046
  8008ac:	a024953a 	slli	r18,r20,20
  8008b0:	bca5c83a 	sub	r18,r23,r18
  8008b4:	900b883a 	mov	r5,r18
  8008b8:	08045340 	call	804534 <__fixdfsi>
  8008bc:	1009883a 	mov	r4,r2
  8008c0:	08045b40 	call	8045b4 <__floatsidf>
  8008c4:	9809883a 	mov	r4,r19
  8008c8:	900b883a 	mov	r5,r18
  8008cc:	100d883a 	mov	r6,r2
  8008d0:	180f883a 	mov	r7,r3
  8008d4:	d8800215 	stw	r2,8(sp)
  8008d8:	d8c00315 	stw	r3,12(sp)
  8008dc:	0803c380 	call	803c38 <__subdf3>
  8008e0:	000d883a 	mov	r6,zero
  8008e4:	01d05c34 	movhi	r7,16752
  8008e8:	1009883a 	mov	r4,r2
  8008ec:	180b883a 	mov	r5,r3
  8008f0:	08035200 	call	803520 <__muldf3>
  8008f4:	180b883a 	mov	r5,r3
  8008f8:	1009883a 	mov	r4,r2
  8008fc:	182b883a 	mov	r21,r3
  800900:	102d883a 	mov	r22,r2
  800904:	08045340 	call	804534 <__fixdfsi>
  800908:	1009883a 	mov	r4,r2
  80090c:	08045b40 	call	8045b4 <__floatsidf>
  800910:	100d883a 	mov	r6,r2
  800914:	180f883a 	mov	r7,r3
  800918:	b009883a 	mov	r4,r22
  80091c:	a80b883a 	mov	r5,r21
  800920:	1027883a 	mov	r19,r2
  800924:	1825883a 	mov	r18,r3
  800928:	d8800415 	stw	r2,16(sp)
  80092c:	d8c00515 	stw	r3,20(sp)
  800930:	0803c380 	call	803c38 <__subdf3>
  800934:	000d883a 	mov	r6,zero
  800938:	01d05c34 	movhi	r7,16752
  80093c:	1009883a 	mov	r4,r2
  800940:	180b883a 	mov	r5,r3
  800944:	08035200 	call	803520 <__muldf3>
  800948:	000d883a 	mov	r6,zero
  80094c:	000f883a 	mov	r7,zero
  800950:	1009883a 	mov	r4,r2
  800954:	180b883a 	mov	r5,r3
  800958:	d8800615 	stw	r2,24(sp)
  80095c:	d8c00715 	stw	r3,28(sp)
  800960:	08033bc0 	call	8033bc <__eqdf2>
  800964:	1001431e 	bne	r2,zero,800e74 <__ieee754_rem_pio2+0x6d0>
  800968:	000f883a 	mov	r7,zero
  80096c:	000d883a 	mov	r6,zero
  800970:	9809883a 	mov	r4,r19
  800974:	900b883a 	mov	r5,r18
  800978:	08033bc0 	call	8033bc <__eqdf2>
  80097c:	100f003a 	cmpeq	r7,r2,zero
  800980:	00800084 	movi	r2,2
  800984:	11cfc83a 	sub	r7,r2,r7
  800988:	00800084 	movi	r2,2
  80098c:	d8800015 	stw	r2,0(sp)
  800990:	00802074 	movhi	r2,129
  800994:	10879204 	addi	r2,r2,7752
  800998:	d8800115 	stw	r2,4(sp)
  80099c:	a00d883a 	mov	r6,r20
  8009a0:	800b883a 	mov	r5,r16
  8009a4:	d9000204 	addi	r4,sp,8
  8009a8:	08013b40 	call	8013b4 <__kernel_rem_pio2>
  8009ac:	88000d0e 	bge	r17,zero,8009e4 <__ieee754_rem_pio2+0x240>
  8009b0:	81000117 	ldw	r4,4(r16)
  8009b4:	80c00317 	ldw	r3,12(r16)
  8009b8:	0085c83a 	sub	r2,zero,r2
  8009bc:	2120003c 	xorhi	r4,r4,32768
  8009c0:	18e0003c 	xorhi	r3,r3,32768
  8009c4:	81000115 	stw	r4,4(r16)
  8009c8:	80c00315 	stw	r3,12(r16)
  8009cc:	00000506 	br	8009e4 <__ieee754_rem_pio2+0x240>
  8009d0:	31000015 	stw	r4,0(r6)
  8009d4:	31400115 	stw	r5,4(r6)
  8009d8:	30000215 	stw	zero,8(r6)
  8009dc:	30000315 	stw	zero,12(r6)
  8009e0:	0005883a 	mov	r2,zero
  8009e4:	dfc01517 	ldw	ra,84(sp)
  8009e8:	df001417 	ldw	fp,80(sp)
  8009ec:	ddc01317 	ldw	r23,76(sp)
  8009f0:	dd801217 	ldw	r22,72(sp)
  8009f4:	dd401117 	ldw	r21,68(sp)
  8009f8:	dd001017 	ldw	r20,64(sp)
  8009fc:	dcc00f17 	ldw	r19,60(sp)
  800a00:	dc800e17 	ldw	r18,56(sp)
  800a04:	dc400d17 	ldw	r17,52(sp)
  800a08:	dc000c17 	ldw	r16,48(sp)
  800a0c:	dec01604 	addi	sp,sp,88
  800a10:	f800283a 	ret
  800a14:	200d883a 	mov	r6,r4
  800a18:	280f883a 	mov	r7,r5
  800a1c:	0803c380 	call	803c38 <__subdf3>
  800a20:	80800215 	stw	r2,8(r16)
  800a24:	80800015 	stw	r2,0(r16)
  800a28:	80c00315 	stw	r3,12(r16)
  800a2c:	80c00115 	stw	r3,4(r16)
  800a30:	0005883a 	mov	r2,zero
  800a34:	003feb06 	br	8009e4 <__alt_data_end+0xff8009e4>
  800a38:	01cf7474 	movhi	r7,15825
  800a3c:	9009883a 	mov	r4,r18
  800a40:	39ed1844 	addi	r7,r7,-19359
  800a44:	01869834 	movhi	r6,6752
  800a48:	180b883a 	mov	r5,r3
  800a4c:	0803c380 	call	803c38 <__subdf3>
  800a50:	018b80f4 	movhi	r6,11779
  800a54:	01cee8f4 	movhi	r7,15267
  800a58:	319c1cc4 	addi	r6,r6,28787
  800a5c:	39c66284 	addi	r7,r7,6538
  800a60:	1009883a 	mov	r4,r2
  800a64:	180b883a 	mov	r5,r3
  800a68:	1025883a 	mov	r18,r2
  800a6c:	1823883a 	mov	r17,r3
  800a70:	0803c380 	call	803c38 <__subdf3>
  800a74:	100d883a 	mov	r6,r2
  800a78:	180f883a 	mov	r7,r3
  800a7c:	9009883a 	mov	r4,r18
  800a80:	880b883a 	mov	r5,r17
  800a84:	80800015 	stw	r2,0(r16)
  800a88:	80c00115 	stw	r3,4(r16)
  800a8c:	0803c380 	call	803c38 <__subdf3>
  800a90:	018b80f4 	movhi	r6,11779
  800a94:	01cee8f4 	movhi	r7,15267
  800a98:	319c1cc4 	addi	r6,r6,28787
  800a9c:	39c66284 	addi	r7,r7,6538
  800aa0:	003f7306 	br	800870 <__alt_data_end+0xff800870>
  800aa4:	08024100 	call	802410 <fabs>
  800aa8:	019b72b4 	movhi	r6,28106
  800aac:	01cff934 	movhi	r7,16356
  800ab0:	31b220c4 	addi	r6,r6,-14205
  800ab4:	39d7cc04 	addi	r7,r7,24368
  800ab8:	1009883a 	mov	r4,r2
  800abc:	180b883a 	mov	r5,r3
  800ac0:	102d883a 	mov	r22,r2
  800ac4:	182b883a 	mov	r21,r3
  800ac8:	08035200 	call	803520 <__muldf3>
  800acc:	000d883a 	mov	r6,zero
  800ad0:	01cff834 	movhi	r7,16352
  800ad4:	1009883a 	mov	r4,r2
  800ad8:	180b883a 	mov	r5,r3
  800adc:	0802b100 	call	802b10 <__adddf3>
  800ae0:	180b883a 	mov	r5,r3
  800ae4:	1009883a 	mov	r4,r2
  800ae8:	08045340 	call	804534 <__fixdfsi>
  800aec:	1009883a 	mov	r4,r2
  800af0:	1025883a 	mov	r18,r2
  800af4:	08045b40 	call	8045b4 <__floatsidf>
  800af8:	01cffe74 	movhi	r7,16377
  800afc:	39c87ec4 	addi	r7,r7,8699
  800b00:	01951034 	movhi	r6,21568
  800b04:	1009883a 	mov	r4,r2
  800b08:	180b883a 	mov	r5,r3
  800b0c:	1029883a 	mov	r20,r2
  800b10:	1827883a 	mov	r19,r3
  800b14:	08035200 	call	803520 <__muldf3>
  800b18:	b009883a 	mov	r4,r22
  800b1c:	a80b883a 	mov	r5,r21
  800b20:	100d883a 	mov	r6,r2
  800b24:	180f883a 	mov	r7,r3
  800b28:	0803c380 	call	803c38 <__subdf3>
  800b2c:	018698b4 	movhi	r6,6754
  800b30:	01cf7474 	movhi	r7,15825
  800b34:	a009883a 	mov	r4,r20
  800b38:	3198cc44 	addi	r6,r6,25393
  800b3c:	39ed1844 	addi	r7,r7,-19359
  800b40:	980b883a 	mov	r5,r19
  800b44:	1039883a 	mov	fp,r2
  800b48:	d8c00815 	stw	r3,32(sp)
  800b4c:	08035200 	call	803520 <__muldf3>
  800b50:	010007c4 	movi	r4,31
  800b54:	e017883a 	mov	r11,fp
  800b58:	da800817 	ldw	r10,32(sp)
  800b5c:	102d883a 	mov	r22,r2
  800b60:	182b883a 	mov	r21,r3
  800b64:	24802816 	blt	r4,r18,800c08 <__ieee754_rem_pio2+0x464>
  800b68:	913fffc4 	addi	r4,r18,-1
  800b6c:	2109883a 	add	r4,r4,r4
  800b70:	01402074 	movhi	r5,129
  800b74:	2109883a 	add	r4,r4,r4
  800b78:	29477204 	addi	r5,r5,7624
  800b7c:	2909883a 	add	r4,r5,r4
  800b80:	21000017 	ldw	r4,0(r4)
  800b84:	b9002026 	beq	r23,r4,800c08 <__ieee754_rem_pio2+0x464>
  800b88:	100d883a 	mov	r6,r2
  800b8c:	180f883a 	mov	r7,r3
  800b90:	e009883a 	mov	r4,fp
  800b94:	500b883a 	mov	r5,r10
  800b98:	da800b15 	stw	r10,44(sp)
  800b9c:	df000a15 	stw	fp,40(sp)
  800ba0:	0803c380 	call	803c38 <__subdf3>
  800ba4:	da800b17 	ldw	r10,44(sp)
  800ba8:	dac00a17 	ldw	r11,40(sp)
  800bac:	1019883a 	mov	r12,r2
  800bb0:	1813883a 	mov	r9,r3
  800bb4:	80800015 	stw	r2,0(r16)
  800bb8:	80c00115 	stw	r3,4(r16)
  800bbc:	600d883a 	mov	r6,r12
  800bc0:	480f883a 	mov	r7,r9
  800bc4:	5809883a 	mov	r4,r11
  800bc8:	500b883a 	mov	r5,r10
  800bcc:	da400b15 	stw	r9,44(sp)
  800bd0:	db000a15 	stw	r12,40(sp)
  800bd4:	0803c380 	call	803c38 <__subdf3>
  800bd8:	b00d883a 	mov	r6,r22
  800bdc:	a80f883a 	mov	r7,r21
  800be0:	1009883a 	mov	r4,r2
  800be4:	180b883a 	mov	r5,r3
  800be8:	0803c380 	call	803c38 <__subdf3>
  800bec:	80800215 	stw	r2,8(r16)
  800bf0:	80c00315 	stw	r3,12(r16)
  800bf4:	da400b17 	ldw	r9,44(sp)
  800bf8:	db000a17 	ldw	r12,40(sp)
  800bfc:	88009f16 	blt	r17,zero,800e7c <__ieee754_rem_pio2+0x6d8>
  800c00:	9005883a 	mov	r2,r18
  800c04:	003f7706 	br	8009e4 <__alt_data_end+0xff8009e4>
  800c08:	d9400817 	ldw	r5,32(sp)
  800c0c:	100d883a 	mov	r6,r2
  800c10:	180f883a 	mov	r7,r3
  800c14:	e009883a 	mov	r4,fp
  800c18:	da800b15 	stw	r10,44(sp)
  800c1c:	dac00a15 	stw	r11,40(sp)
  800c20:	0803c380 	call	803c38 <__subdf3>
  800c24:	1019883a 	mov	r12,r2
  800c28:	1804d53a 	srli	r2,r3,20
  800c2c:	b811d53a 	srai	r8,r23,20
  800c30:	1813883a 	mov	r9,r3
  800c34:	1081ffcc 	andi	r2,r2,2047
  800c38:	80c00115 	stw	r3,4(r16)
  800c3c:	83000015 	stw	r12,0(r16)
  800c40:	4085c83a 	sub	r2,r8,r2
  800c44:	00c00404 	movi	r3,16
  800c48:	da800b17 	ldw	r10,44(sp)
  800c4c:	dac00a17 	ldw	r11,40(sp)
  800c50:	18bfda0e 	bge	r3,r2,800bbc <__alt_data_end+0xff800bbc>
  800c54:	01cf7474 	movhi	r7,15825
  800c58:	39ed1844 	addi	r7,r7,-19359
  800c5c:	01869834 	movhi	r6,6752
  800c60:	a009883a 	mov	r4,r20
  800c64:	980b883a 	mov	r5,r19
  800c68:	da000a15 	stw	r8,40(sp)
  800c6c:	08035200 	call	803520 <__muldf3>
  800c70:	d9400817 	ldw	r5,32(sp)
  800c74:	100d883a 	mov	r6,r2
  800c78:	180f883a 	mov	r7,r3
  800c7c:	e009883a 	mov	r4,fp
  800c80:	102d883a 	mov	r22,r2
  800c84:	182b883a 	mov	r21,r3
  800c88:	0803c380 	call	803c38 <__subdf3>
  800c8c:	d9400817 	ldw	r5,32(sp)
  800c90:	100d883a 	mov	r6,r2
  800c94:	180f883a 	mov	r7,r3
  800c98:	e009883a 	mov	r4,fp
  800c9c:	182f883a 	mov	r23,r3
  800ca0:	d8800915 	stw	r2,36(sp)
  800ca4:	0803c380 	call	803c38 <__subdf3>
  800ca8:	b00d883a 	mov	r6,r22
  800cac:	a80f883a 	mov	r7,r21
  800cb0:	1009883a 	mov	r4,r2
  800cb4:	180b883a 	mov	r5,r3
  800cb8:	0803c380 	call	803c38 <__subdf3>
  800cbc:	018b80f4 	movhi	r6,11779
  800cc0:	01cee8f4 	movhi	r7,15267
  800cc4:	319c1cc4 	addi	r6,r6,28787
  800cc8:	39c66284 	addi	r7,r7,6538
  800ccc:	a009883a 	mov	r4,r20
  800cd0:	980b883a 	mov	r5,r19
  800cd4:	102d883a 	mov	r22,r2
  800cd8:	182b883a 	mov	r21,r3
  800cdc:	08035200 	call	803520 <__muldf3>
  800ce0:	b00d883a 	mov	r6,r22
  800ce4:	a80f883a 	mov	r7,r21
  800ce8:	1009883a 	mov	r4,r2
  800cec:	180b883a 	mov	r5,r3
  800cf0:	0803c380 	call	803c38 <__subdf3>
  800cf4:	d9000917 	ldw	r4,36(sp)
  800cf8:	100d883a 	mov	r6,r2
  800cfc:	180f883a 	mov	r7,r3
  800d00:	b80b883a 	mov	r5,r23
  800d04:	102d883a 	mov	r22,r2
  800d08:	182b883a 	mov	r21,r3
  800d0c:	0803c380 	call	803c38 <__subdf3>
  800d10:	1019883a 	mov	r12,r2
  800d14:	1804d53a 	srli	r2,r3,20
  800d18:	da000a17 	ldw	r8,40(sp)
  800d1c:	83000015 	stw	r12,0(r16)
  800d20:	1081ffcc 	andi	r2,r2,2047
  800d24:	4091c83a 	sub	r8,r8,r2
  800d28:	80c00115 	stw	r3,4(r16)
  800d2c:	00800c44 	movi	r2,49
  800d30:	1813883a 	mov	r9,r3
  800d34:	1200730e 	bge	r2,r8,800f04 <__ieee754_rem_pio2+0x760>
  800d38:	01cee8f4 	movhi	r7,15267
  800d3c:	39c66284 	addi	r7,r7,6538
  800d40:	018b8034 	movhi	r6,11776
  800d44:	a009883a 	mov	r4,r20
  800d48:	980b883a 	mov	r5,r19
  800d4c:	08035200 	call	803520 <__muldf3>
  800d50:	d9000917 	ldw	r4,36(sp)
  800d54:	100d883a 	mov	r6,r2
  800d58:	180f883a 	mov	r7,r3
  800d5c:	b80b883a 	mov	r5,r23
  800d60:	102d883a 	mov	r22,r2
  800d64:	182b883a 	mov	r21,r3
  800d68:	0803c380 	call	803c38 <__subdf3>
  800d6c:	d9000917 	ldw	r4,36(sp)
  800d70:	100d883a 	mov	r6,r2
  800d74:	180f883a 	mov	r7,r3
  800d78:	b80b883a 	mov	r5,r23
  800d7c:	d8c00b15 	stw	r3,44(sp)
  800d80:	d8800a15 	stw	r2,40(sp)
  800d84:	0803c380 	call	803c38 <__subdf3>
  800d88:	b00d883a 	mov	r6,r22
  800d8c:	a80f883a 	mov	r7,r21
  800d90:	1009883a 	mov	r4,r2
  800d94:	180b883a 	mov	r5,r3
  800d98:	0803c380 	call	803c38 <__subdf3>
  800d9c:	01894834 	movhi	r6,9504
  800da0:	01ce5f34 	movhi	r7,14716
  800da4:	31927044 	addi	r6,r6,18881
  800da8:	39e0e684 	addi	r7,r7,-31846
  800dac:	a009883a 	mov	r4,r20
  800db0:	980b883a 	mov	r5,r19
  800db4:	102d883a 	mov	r22,r2
  800db8:	182b883a 	mov	r21,r3
  800dbc:	08035200 	call	803520 <__muldf3>
  800dc0:	b00d883a 	mov	r6,r22
  800dc4:	a80f883a 	mov	r7,r21
  800dc8:	1009883a 	mov	r4,r2
  800dcc:	180b883a 	mov	r5,r3
  800dd0:	0803c380 	call	803c38 <__subdf3>
  800dd4:	dac00a17 	ldw	r11,40(sp)
  800dd8:	da800b17 	ldw	r10,44(sp)
  800ddc:	102d883a 	mov	r22,r2
  800de0:	182b883a 	mov	r21,r3
  800de4:	100d883a 	mov	r6,r2
  800de8:	180f883a 	mov	r7,r3
  800dec:	5809883a 	mov	r4,r11
  800df0:	500b883a 	mov	r5,r10
  800df4:	003f6a06 	br	800ba0 <__alt_data_end+0xff800ba0>
  800df8:	0802b100 	call	802b10 <__adddf3>
  800dfc:	1025883a 	mov	r18,r2
  800e00:	008ffe74 	movhi	r2,16377
  800e04:	10887ec4 	addi	r2,r2,8699
  800e08:	1823883a 	mov	r17,r3
  800e0c:	b8802226 	beq	r23,r2,800e98 <__ieee754_rem_pio2+0x6f4>
  800e10:	018698b4 	movhi	r6,6754
  800e14:	01cf7474 	movhi	r7,15825
  800e18:	3198cc44 	addi	r6,r6,25393
  800e1c:	39ed1844 	addi	r7,r7,-19359
  800e20:	9009883a 	mov	r4,r18
  800e24:	180b883a 	mov	r5,r3
  800e28:	0802b100 	call	802b10 <__adddf3>
  800e2c:	100d883a 	mov	r6,r2
  800e30:	180f883a 	mov	r7,r3
  800e34:	9009883a 	mov	r4,r18
  800e38:	880b883a 	mov	r5,r17
  800e3c:	80800015 	stw	r2,0(r16)
  800e40:	80c00115 	stw	r3,4(r16)
  800e44:	0803c380 	call	803c38 <__subdf3>
  800e48:	018698b4 	movhi	r6,6754
  800e4c:	01cf7474 	movhi	r7,15825
  800e50:	3198cc44 	addi	r6,r6,25393
  800e54:	39ed1844 	addi	r7,r7,-19359
  800e58:	1009883a 	mov	r4,r2
  800e5c:	180b883a 	mov	r5,r3
  800e60:	0802b100 	call	802b10 <__adddf3>
  800e64:	80800215 	stw	r2,8(r16)
  800e68:	80c00315 	stw	r3,12(r16)
  800e6c:	00bfffc4 	movi	r2,-1
  800e70:	003edc06 	br	8009e4 <__alt_data_end+0xff8009e4>
  800e74:	01c000c4 	movi	r7,3
  800e78:	003ec306 	br	800988 <__alt_data_end+0xff800988>
  800e7c:	4a60003c 	xorhi	r9,r9,32768
  800e80:	18e0003c 	xorhi	r3,r3,32768
  800e84:	83000015 	stw	r12,0(r16)
  800e88:	82400115 	stw	r9,4(r16)
  800e8c:	80c00315 	stw	r3,12(r16)
  800e90:	0485c83a 	sub	r2,zero,r18
  800e94:	003ed306 	br	8009e4 <__alt_data_end+0xff8009e4>
  800e98:	01cf7474 	movhi	r7,15825
  800e9c:	9009883a 	mov	r4,r18
  800ea0:	39ed1844 	addi	r7,r7,-19359
  800ea4:	01869834 	movhi	r6,6752
  800ea8:	180b883a 	mov	r5,r3
  800eac:	0802b100 	call	802b10 <__adddf3>
  800eb0:	018b80f4 	movhi	r6,11779
  800eb4:	01cee8f4 	movhi	r7,15267
  800eb8:	319c1cc4 	addi	r6,r6,28787
  800ebc:	39c66284 	addi	r7,r7,6538
  800ec0:	1009883a 	mov	r4,r2
  800ec4:	180b883a 	mov	r5,r3
  800ec8:	1025883a 	mov	r18,r2
  800ecc:	1823883a 	mov	r17,r3
  800ed0:	0802b100 	call	802b10 <__adddf3>
  800ed4:	100d883a 	mov	r6,r2
  800ed8:	180f883a 	mov	r7,r3
  800edc:	9009883a 	mov	r4,r18
  800ee0:	880b883a 	mov	r5,r17
  800ee4:	80800015 	stw	r2,0(r16)
  800ee8:	80c00115 	stw	r3,4(r16)
  800eec:	0803c380 	call	803c38 <__subdf3>
  800ef0:	018b80f4 	movhi	r6,11779
  800ef4:	01cee8f4 	movhi	r7,15267
  800ef8:	319c1cc4 	addi	r6,r6,28787
  800efc:	39c66284 	addi	r7,r7,6538
  800f00:	003fd506 	br	800e58 <__alt_data_end+0xff800e58>
  800f04:	dac00917 	ldw	r11,36(sp)
  800f08:	b815883a 	mov	r10,r23
  800f0c:	003f2b06 	br	800bbc <__alt_data_end+0xff800bbc>

00800f10 <__kernel_cos>:
  800f10:	defff304 	addi	sp,sp,-52
  800f14:	dc000315 	stw	r16,12(sp)
  800f18:	04200034 	movhi	r16,32768
  800f1c:	843fffc4 	addi	r16,r16,-1
  800f20:	008f9034 	movhi	r2,15936
  800f24:	df000b15 	stw	fp,44(sp)
  800f28:	ddc00a15 	stw	r23,40(sp)
  800f2c:	dd800915 	stw	r22,36(sp)
  800f30:	dcc00615 	stw	r19,24(sp)
  800f34:	dfc00c15 	stw	ra,48(sp)
  800f38:	dd400815 	stw	r21,32(sp)
  800f3c:	dd000715 	stw	r20,28(sp)
  800f40:	dc800515 	stw	r18,20(sp)
  800f44:	dc400415 	stw	r17,16(sp)
  800f48:	2c20703a 	and	r16,r5,r16
  800f4c:	10bfffc4 	addi	r2,r2,-1
  800f50:	2827883a 	mov	r19,r5
  800f54:	202d883a 	mov	r22,r4
  800f58:	302f883a 	mov	r23,r6
  800f5c:	3839883a 	mov	fp,r7
  800f60:	14007516 	blt	r2,r16,801138 <__kernel_cos+0x228>
  800f64:	08045340 	call	804534 <__fixdfsi>
  800f68:	10010f26 	beq	r2,zero,8013a8 <__kernel_cos+0x498>
  800f6c:	b00d883a 	mov	r6,r22
  800f70:	980f883a 	mov	r7,r19
  800f74:	b009883a 	mov	r4,r22
  800f78:	980b883a 	mov	r5,r19
  800f7c:	08035200 	call	803520 <__muldf3>
  800f80:	01afa234 	movhi	r6,48776
  800f84:	01ef6a74 	movhi	r7,48553
  800f88:	318e3504 	addi	r6,r6,14548
  800f8c:	39feba44 	addi	r7,r7,-1303
  800f90:	1009883a 	mov	r4,r2
  800f94:	180b883a 	mov	r5,r3
  800f98:	102b883a 	mov	r21,r2
  800f9c:	1829883a 	mov	r20,r3
  800fa0:	08035200 	call	803520 <__muldf3>
  800fa4:	01af6d74 	movhi	r6,48565
  800fa8:	01cf88b4 	movhi	r7,15906
  800fac:	31ac7104 	addi	r6,r6,-20028
  800fb0:	39fba784 	addi	r7,r7,-4450
  800fb4:	1009883a 	mov	r4,r2
  800fb8:	180b883a 	mov	r5,r3
  800fbc:	0802b100 	call	802b10 <__adddf3>
  800fc0:	a80d883a 	mov	r6,r21
  800fc4:	a00f883a 	mov	r7,r20
  800fc8:	1009883a 	mov	r4,r2
  800fcc:	180b883a 	mov	r5,r3
  800fd0:	08035200 	call	803520 <__muldf3>
  800fd4:	01a02734 	movhi	r6,32924
  800fd8:	01cfa4b4 	movhi	r7,16018
  800fdc:	3194ab44 	addi	r6,r6,21165
  800fe0:	39df93c4 	addi	r7,r7,32335
  800fe4:	1009883a 	mov	r4,r2
  800fe8:	180b883a 	mov	r5,r3
  800fec:	0803c380 	call	803c38 <__subdf3>
  800ff0:	a80d883a 	mov	r6,r21
  800ff4:	a00f883a 	mov	r7,r20
  800ff8:	1009883a 	mov	r4,r2
  800ffc:	180b883a 	mov	r5,r3
  801000:	08035200 	call	803520 <__muldf3>
  801004:	018672f4 	movhi	r6,6603
  801008:	01cfbeb4 	movhi	r7,16122
  80100c:	31856404 	addi	r6,r6,5520
  801010:	39c06804 	addi	r7,r7,416
  801014:	1009883a 	mov	r4,r2
  801018:	180b883a 	mov	r5,r3
  80101c:	0802b100 	call	802b10 <__adddf3>
  801020:	a80d883a 	mov	r6,r21
  801024:	a00f883a 	mov	r7,r20
  801028:	1009883a 	mov	r4,r2
  80102c:	180b883a 	mov	r5,r3
  801030:	08035200 	call	803520 <__muldf3>
  801034:	0185b074 	movhi	r6,5825
  801038:	01cfd5f4 	movhi	r7,16215
  80103c:	31945dc4 	addi	r6,r6,20855
  801040:	39f05b04 	addi	r7,r7,-16020
  801044:	1009883a 	mov	r4,r2
  801048:	180b883a 	mov	r5,r3
  80104c:	0803c380 	call	803c38 <__subdf3>
  801050:	a80d883a 	mov	r6,r21
  801054:	a00f883a 	mov	r7,r20
  801058:	1009883a 	mov	r4,r2
  80105c:	180b883a 	mov	r5,r3
  801060:	08035200 	call	803520 <__muldf3>
  801064:	01955574 	movhi	r6,21845
  801068:	01cfe974 	movhi	r7,16293
  80106c:	31955304 	addi	r6,r6,21836
  801070:	39d55544 	addi	r7,r7,21845
  801074:	1009883a 	mov	r4,r2
  801078:	180b883a 	mov	r5,r3
  80107c:	0802b100 	call	802b10 <__adddf3>
  801080:	a80d883a 	mov	r6,r21
  801084:	a00f883a 	mov	r7,r20
  801088:	1009883a 	mov	r4,r2
  80108c:	180b883a 	mov	r5,r3
  801090:	08035200 	call	803520 <__muldf3>
  801094:	1017883a 	mov	r11,r2
  801098:	1815883a 	mov	r10,r3
  80109c:	a809883a 	mov	r4,r21
  8010a0:	a00b883a 	mov	r5,r20
  8010a4:	000d883a 	mov	r6,zero
  8010a8:	01cff834 	movhi	r7,16352
  8010ac:	da800215 	stw	r10,8(sp)
  8010b0:	dac00115 	stw	r11,4(sp)
  8010b4:	08035200 	call	803520 <__muldf3>
  8010b8:	dac00117 	ldw	r11,4(sp)
  8010bc:	da800217 	ldw	r10,8(sp)
  8010c0:	a809883a 	mov	r4,r21
  8010c4:	580d883a 	mov	r6,r11
  8010c8:	500f883a 	mov	r7,r10
  8010cc:	a00b883a 	mov	r5,r20
  8010d0:	1023883a 	mov	r17,r2
  8010d4:	1821883a 	mov	r16,r3
  8010d8:	08035200 	call	803520 <__muldf3>
  8010dc:	b80d883a 	mov	r6,r23
  8010e0:	e00f883a 	mov	r7,fp
  8010e4:	b009883a 	mov	r4,r22
  8010e8:	980b883a 	mov	r5,r19
  8010ec:	1029883a 	mov	r20,r2
  8010f0:	1825883a 	mov	r18,r3
  8010f4:	08035200 	call	803520 <__muldf3>
  8010f8:	a009883a 	mov	r4,r20
  8010fc:	900b883a 	mov	r5,r18
  801100:	100d883a 	mov	r6,r2
  801104:	180f883a 	mov	r7,r3
  801108:	0803c380 	call	803c38 <__subdf3>
  80110c:	8809883a 	mov	r4,r17
  801110:	800b883a 	mov	r5,r16
  801114:	100d883a 	mov	r6,r2
  801118:	180f883a 	mov	r7,r3
  80111c:	0803c380 	call	803c38 <__subdf3>
  801120:	100d883a 	mov	r6,r2
  801124:	180f883a 	mov	r7,r3
  801128:	0009883a 	mov	r4,zero
  80112c:	014ffc34 	movhi	r5,16368
  801130:	0803c380 	call	803c38 <__subdf3>
  801134:	00008b06 	br	801364 <__kernel_cos+0x454>
  801138:	200d883a 	mov	r6,r4
  80113c:	280f883a 	mov	r7,r5
  801140:	08035200 	call	803520 <__muldf3>
  801144:	01afa234 	movhi	r6,48776
  801148:	01ef6a74 	movhi	r7,48553
  80114c:	318e3504 	addi	r6,r6,14548
  801150:	39feba44 	addi	r7,r7,-1303
  801154:	1009883a 	mov	r4,r2
  801158:	180b883a 	mov	r5,r3
  80115c:	1025883a 	mov	r18,r2
  801160:	1823883a 	mov	r17,r3
  801164:	08035200 	call	803520 <__muldf3>
  801168:	01af6d74 	movhi	r6,48565
  80116c:	01cf88b4 	movhi	r7,15906
  801170:	31ac7104 	addi	r6,r6,-20028
  801174:	39fba784 	addi	r7,r7,-4450
  801178:	1009883a 	mov	r4,r2
  80117c:	180b883a 	mov	r5,r3
  801180:	0802b100 	call	802b10 <__adddf3>
  801184:	900d883a 	mov	r6,r18
  801188:	880f883a 	mov	r7,r17
  80118c:	1009883a 	mov	r4,r2
  801190:	180b883a 	mov	r5,r3
  801194:	08035200 	call	803520 <__muldf3>
  801198:	01a02734 	movhi	r6,32924
  80119c:	01cfa4b4 	movhi	r7,16018
  8011a0:	3194ab44 	addi	r6,r6,21165
  8011a4:	39df93c4 	addi	r7,r7,32335
  8011a8:	1009883a 	mov	r4,r2
  8011ac:	180b883a 	mov	r5,r3
  8011b0:	0803c380 	call	803c38 <__subdf3>
  8011b4:	900d883a 	mov	r6,r18
  8011b8:	880f883a 	mov	r7,r17
  8011bc:	1009883a 	mov	r4,r2
  8011c0:	180b883a 	mov	r5,r3
  8011c4:	08035200 	call	803520 <__muldf3>
  8011c8:	018672f4 	movhi	r6,6603
  8011cc:	01cfbeb4 	movhi	r7,16122
  8011d0:	31856404 	addi	r6,r6,5520
  8011d4:	39c06804 	addi	r7,r7,416
  8011d8:	1009883a 	mov	r4,r2
  8011dc:	180b883a 	mov	r5,r3
  8011e0:	0802b100 	call	802b10 <__adddf3>
  8011e4:	900d883a 	mov	r6,r18
  8011e8:	880f883a 	mov	r7,r17
  8011ec:	1009883a 	mov	r4,r2
  8011f0:	180b883a 	mov	r5,r3
  8011f4:	08035200 	call	803520 <__muldf3>
  8011f8:	0185b074 	movhi	r6,5825
  8011fc:	01cfd5f4 	movhi	r7,16215
  801200:	31945dc4 	addi	r6,r6,20855
  801204:	39f05b04 	addi	r7,r7,-16020
  801208:	1009883a 	mov	r4,r2
  80120c:	180b883a 	mov	r5,r3
  801210:	0803c380 	call	803c38 <__subdf3>
  801214:	900d883a 	mov	r6,r18
  801218:	880f883a 	mov	r7,r17
  80121c:	1009883a 	mov	r4,r2
  801220:	180b883a 	mov	r5,r3
  801224:	08035200 	call	803520 <__muldf3>
  801228:	01955574 	movhi	r6,21845
  80122c:	01cfe974 	movhi	r7,16293
  801230:	31955304 	addi	r6,r6,21836
  801234:	39d55544 	addi	r7,r7,21845
  801238:	1009883a 	mov	r4,r2
  80123c:	180b883a 	mov	r5,r3
  801240:	0802b100 	call	802b10 <__adddf3>
  801244:	900d883a 	mov	r6,r18
  801248:	880f883a 	mov	r7,r17
  80124c:	1009883a 	mov	r4,r2
  801250:	180b883a 	mov	r5,r3
  801254:	08035200 	call	803520 <__muldf3>
  801258:	1013883a 	mov	r9,r2
  80125c:	1017883a 	mov	r11,r2
  801260:	008ff4f4 	movhi	r2,16339
  801264:	108ccc84 	addi	r2,r2,13106
  801268:	1811883a 	mov	r8,r3
  80126c:	902b883a 	mov	r21,r18
  801270:	8829883a 	mov	r20,r17
  801274:	1815883a 	mov	r10,r3
  801278:	143f880e 	bge	r2,r16,80109c <__alt_data_end+0xff80109c>
  80127c:	008ffa74 	movhi	r2,16361
  801280:	14004416 	blt	r2,r16,801394 <__kernel_cos+0x484>
  801284:	00bff834 	movhi	r2,65504
  801288:	80a1883a 	add	r16,r16,r2
  80128c:	000d883a 	mov	r6,zero
  801290:	800f883a 	mov	r7,r16
  801294:	0009883a 	mov	r4,zero
  801298:	014ffc34 	movhi	r5,16368
  80129c:	da400115 	stw	r9,4(sp)
  8012a0:	d8c00215 	stw	r3,8(sp)
  8012a4:	0803c380 	call	803c38 <__subdf3>
  8012a8:	da000217 	ldw	r8,8(sp)
  8012ac:	da400117 	ldw	r9,4(sp)
  8012b0:	102b883a 	mov	r21,r2
  8012b4:	d8c00015 	stw	r3,0(sp)
  8012b8:	9009883a 	mov	r4,r18
  8012bc:	880b883a 	mov	r5,r17
  8012c0:	000d883a 	mov	r6,zero
  8012c4:	01cff834 	movhi	r7,16352
  8012c8:	da000215 	stw	r8,8(sp)
  8012cc:	da400115 	stw	r9,4(sp)
  8012d0:	08035200 	call	803520 <__muldf3>
  8012d4:	800f883a 	mov	r7,r16
  8012d8:	000d883a 	mov	r6,zero
  8012dc:	1009883a 	mov	r4,r2
  8012e0:	180b883a 	mov	r5,r3
  8012e4:	0803c380 	call	803c38 <__subdf3>
  8012e8:	da400117 	ldw	r9,4(sp)
  8012ec:	da000217 	ldw	r8,8(sp)
  8012f0:	9009883a 	mov	r4,r18
  8012f4:	480d883a 	mov	r6,r9
  8012f8:	400f883a 	mov	r7,r8
  8012fc:	880b883a 	mov	r5,r17
  801300:	1029883a 	mov	r20,r2
  801304:	1821883a 	mov	r16,r3
  801308:	08035200 	call	803520 <__muldf3>
  80130c:	b80d883a 	mov	r6,r23
  801310:	e00f883a 	mov	r7,fp
  801314:	b009883a 	mov	r4,r22
  801318:	980b883a 	mov	r5,r19
  80131c:	1025883a 	mov	r18,r2
  801320:	1823883a 	mov	r17,r3
  801324:	08035200 	call	803520 <__muldf3>
  801328:	100d883a 	mov	r6,r2
  80132c:	180f883a 	mov	r7,r3
  801330:	9009883a 	mov	r4,r18
  801334:	880b883a 	mov	r5,r17
  801338:	0803c380 	call	803c38 <__subdf3>
  80133c:	100d883a 	mov	r6,r2
  801340:	180f883a 	mov	r7,r3
  801344:	a009883a 	mov	r4,r20
  801348:	800b883a 	mov	r5,r16
  80134c:	0803c380 	call	803c38 <__subdf3>
  801350:	d9400017 	ldw	r5,0(sp)
  801354:	100d883a 	mov	r6,r2
  801358:	180f883a 	mov	r7,r3
  80135c:	a809883a 	mov	r4,r21
  801360:	0803c380 	call	803c38 <__subdf3>
  801364:	dfc00c17 	ldw	ra,48(sp)
  801368:	df000b17 	ldw	fp,44(sp)
  80136c:	ddc00a17 	ldw	r23,40(sp)
  801370:	dd800917 	ldw	r22,36(sp)
  801374:	dd400817 	ldw	r21,32(sp)
  801378:	dd000717 	ldw	r20,28(sp)
  80137c:	dcc00617 	ldw	r19,24(sp)
  801380:	dc800517 	ldw	r18,20(sp)
  801384:	dc400417 	ldw	r17,16(sp)
  801388:	dc000317 	ldw	r16,12(sp)
  80138c:	dec00d04 	addi	sp,sp,52
  801390:	f800283a 	ret
  801394:	008ff9f4 	movhi	r2,16359
  801398:	002b883a 	mov	r21,zero
  80139c:	d8800015 	stw	r2,0(sp)
  8013a0:	040ff4b4 	movhi	r16,16338
  8013a4:	003fc406 	br	8012b8 <__alt_data_end+0xff8012b8>
  8013a8:	0005883a 	mov	r2,zero
  8013ac:	00cffc34 	movhi	r3,16368
  8013b0:	003fec06 	br	801364 <__alt_data_end+0xff801364>

008013b4 <__kernel_rem_pio2>:
  8013b4:	deff5a04 	addi	sp,sp,-664
  8013b8:	da00a617 	ldw	r8,664(sp)
  8013bc:	00c02074 	movhi	r3,129
  8013c0:	18c7e404 	addi	r3,r3,8080
  8013c4:	4205883a 	add	r2,r8,r8
  8013c8:	1085883a 	add	r2,r2,r2
  8013cc:	1885883a 	add	r2,r3,r2
  8013d0:	d9008e15 	stw	r4,568(sp)
  8013d4:	d9408f15 	stw	r5,572(sp)
  8013d8:	313fff44 	addi	r4,r6,-3
  8013dc:	01400604 	movi	r5,24
  8013e0:	dd80a215 	stw	r22,648(sp)
  8013e4:	dc009c15 	stw	r16,624(sp)
  8013e8:	dfc0a515 	stw	ra,660(sp)
  8013ec:	df00a415 	stw	fp,656(sp)
  8013f0:	ddc0a315 	stw	r23,652(sp)
  8013f4:	dd40a115 	stw	r21,644(sp)
  8013f8:	dd00a015 	stw	r20,640(sp)
  8013fc:	dcc09f15 	stw	r19,636(sp)
  801400:	dc809e15 	stw	r18,632(sp)
  801404:	dc409d15 	stw	r17,628(sp)
  801408:	3021883a 	mov	r16,r6
  80140c:	d9c09315 	stw	r7,588(sp)
  801410:	15800017 	ldw	r22,0(r2)
  801414:	08027c80 	call	8027c8 <__divsi3>
  801418:	da009317 	ldw	r8,588(sp)
  80141c:	d8809215 	stw	r2,584(sp)
  801420:	423fffc4 	addi	r8,r8,-1
  801424:	da008d15 	stw	r8,564(sp)
  801428:	10033b16 	blt	r2,zero,802118 <__kernel_rem_pio2+0xd64>
  80142c:	da009217 	ldw	r8,584(sp)
  801430:	d9009217 	ldw	r4,584(sp)
  801434:	42000044 	addi	r8,r8,1
  801438:	40fffa24 	muli	r3,r8,-24
  80143c:	da009515 	stw	r8,596(sp)
  801440:	da008d17 	ldw	r8,564(sp)
  801444:	1c07883a 	add	r3,r3,r16
  801448:	d8c09015 	stw	r3,576(sp)
  80144c:	b205883a 	add	r2,r22,r8
  801450:	2223c83a 	sub	r17,r4,r8
  801454:	10001016 	blt	r2,zero,801498 <__kernel_rem_pio2+0xe4>
  801458:	da00a717 	ldw	r8,668(sp)
  80145c:	8c65883a 	add	r18,r17,r17
  801460:	94a5883a 	add	r18,r18,r18
  801464:	1445883a 	add	r2,r2,r17
  801468:	dcc05004 	addi	r19,sp,320
  80146c:	44a5883a 	add	r18,r8,r18
  801470:	14000044 	addi	r16,r2,1
  801474:	88015316 	blt	r17,zero,8019c4 <__kernel_rem_pio2+0x610>
  801478:	91000017 	ldw	r4,0(r18)
  80147c:	08045b40 	call	8045b4 <__floatsidf>
  801480:	98800015 	stw	r2,0(r19)
  801484:	98c00115 	stw	r3,4(r19)
  801488:	8c400044 	addi	r17,r17,1
  80148c:	9cc00204 	addi	r19,r19,8
  801490:	94800104 	addi	r18,r18,4
  801494:	8c3ff71e 	bne	r17,r16,801474 <__alt_data_end+0xff801474>
  801498:	b0002816 	blt	r22,zero,80153c <__kernel_rem_pio2+0x188>
  80149c:	da008d17 	ldw	r8,564(sp)
  8014a0:	b4c00044 	addi	r19,r22,1
  8014a4:	982690fa 	slli	r19,r19,3
  8014a8:	402490fa 	slli	r18,r8,3
  8014ac:	da008e17 	ldw	r8,568(sp)
  8014b0:	d8805004 	addi	r2,sp,320
  8014b4:	94000204 	addi	r16,r18,8
  8014b8:	d823883a 	mov	r17,sp
  8014bc:	14a5883a 	add	r18,r2,r18
  8014c0:	dcef883a 	add	r23,sp,r19
  8014c4:	4421883a 	add	r16,r8,r16
  8014c8:	dd809115 	stw	r22,580(sp)
  8014cc:	4039883a 	mov	fp,r8
  8014d0:	da008d17 	ldw	r8,564(sp)
  8014d4:	40016016 	blt	r8,zero,801a58 <__kernel_rem_pio2+0x6a4>
  8014d8:	e027883a 	mov	r19,fp
  8014dc:	9029883a 	mov	r20,r18
  8014e0:	002d883a 	mov	r22,zero
  8014e4:	002b883a 	mov	r21,zero
  8014e8:	a1800017 	ldw	r6,0(r20)
  8014ec:	a1c00117 	ldw	r7,4(r20)
  8014f0:	99000017 	ldw	r4,0(r19)
  8014f4:	99400117 	ldw	r5,4(r19)
  8014f8:	9cc00204 	addi	r19,r19,8
  8014fc:	a53ffe04 	addi	r20,r20,-8
  801500:	08035200 	call	803520 <__muldf3>
  801504:	b009883a 	mov	r4,r22
  801508:	a80b883a 	mov	r5,r21
  80150c:	100d883a 	mov	r6,r2
  801510:	180f883a 	mov	r7,r3
  801514:	0802b100 	call	802b10 <__adddf3>
  801518:	102d883a 	mov	r22,r2
  80151c:	182b883a 	mov	r21,r3
  801520:	9c3ff11e 	bne	r19,r16,8014e8 <__alt_data_end+0xff8014e8>
  801524:	8d800015 	stw	r22,0(r17)
  801528:	8d400115 	stw	r21,4(r17)
  80152c:	8c400204 	addi	r17,r17,8
  801530:	94800204 	addi	r18,r18,8
  801534:	8dffe61e 	bne	r17,r23,8014d0 <__alt_data_end+0xff8014d0>
  801538:	dd809117 	ldw	r22,580(sp)
  80153c:	00d00034 	movhi	r3,16384
  801540:	da009317 	ldw	r8,588(sp)
  801544:	18ffff84 	addi	r3,r3,-2
  801548:	b0c7883a 	add	r3,r22,r3
  80154c:	18c7883a 	add	r3,r3,r3
  801550:	402090fa 	slli	r16,r8,3
  801554:	18c7883a 	add	r3,r3,r3
  801558:	da007804 	addi	r8,sp,480
  80155c:	40d1883a 	add	r8,r8,r3
  801560:	b0bfffc4 	addi	r2,r22,-1
  801564:	da009615 	stw	r8,600(sp)
  801568:	da008e17 	ldw	r8,568(sp)
  80156c:	1085883a 	add	r2,r2,r2
  801570:	1085883a 	add	r2,r2,r2
  801574:	19000104 	addi	r4,r3,4
  801578:	d885883a 	add	r2,sp,r2
  80157c:	4421883a 	add	r16,r8,r16
  801580:	da007804 	addi	r8,sp,480
  801584:	4111883a 	add	r8,r8,r4
  801588:	10807804 	addi	r2,r2,480
  80158c:	da009715 	stw	r8,604(sp)
  801590:	b025883a 	mov	r18,r22
  801594:	d8809815 	stw	r2,608(sp)
  801598:	dd809415 	stw	r22,592(sp)
  80159c:	900490fa 	slli	r2,r18,3
  8015a0:	d885883a 	add	r2,sp,r2
  8015a4:	17000017 	ldw	fp,0(r2)
  8015a8:	15400117 	ldw	r21,4(r2)
  8015ac:	04802b0e 	bge	zero,r18,80165c <__kernel_rem_pio2+0x2a8>
  8015b0:	00880034 	movhi	r2,8192
  8015b4:	10bfffc4 	addi	r2,r2,-1
  8015b8:	90a9883a 	add	r20,r18,r2
  8015bc:	a02890fa 	slli	r20,r20,3
  8015c0:	dc407804 	addi	r17,sp,480
  8015c4:	dcfffe04 	addi	r19,sp,-8
  8015c8:	dd29883a 	add	r20,sp,r20
  8015cc:	000d883a 	mov	r6,zero
  8015d0:	01cf9c34 	movhi	r7,15984
  8015d4:	e009883a 	mov	r4,fp
  8015d8:	a80b883a 	mov	r5,r21
  8015dc:	08035200 	call	803520 <__muldf3>
  8015e0:	180b883a 	mov	r5,r3
  8015e4:	1009883a 	mov	r4,r2
  8015e8:	08045340 	call	804534 <__fixdfsi>
  8015ec:	1009883a 	mov	r4,r2
  8015f0:	08045b40 	call	8045b4 <__floatsidf>
  8015f4:	000d883a 	mov	r6,zero
  8015f8:	01d05c34 	movhi	r7,16752
  8015fc:	1009883a 	mov	r4,r2
  801600:	180b883a 	mov	r5,r3
  801604:	102f883a 	mov	r23,r2
  801608:	182d883a 	mov	r22,r3
  80160c:	08035200 	call	803520 <__muldf3>
  801610:	100d883a 	mov	r6,r2
  801614:	180f883a 	mov	r7,r3
  801618:	e009883a 	mov	r4,fp
  80161c:	a80b883a 	mov	r5,r21
  801620:	0803c380 	call	803c38 <__subdf3>
  801624:	180b883a 	mov	r5,r3
  801628:	1009883a 	mov	r4,r2
  80162c:	08045340 	call	804534 <__fixdfsi>
  801630:	a1800017 	ldw	r6,0(r20)
  801634:	a1c00117 	ldw	r7,4(r20)
  801638:	88800015 	stw	r2,0(r17)
  80163c:	b809883a 	mov	r4,r23
  801640:	b00b883a 	mov	r5,r22
  801644:	0802b100 	call	802b10 <__adddf3>
  801648:	a53ffe04 	addi	r20,r20,-8
  80164c:	1039883a 	mov	fp,r2
  801650:	182b883a 	mov	r21,r3
  801654:	8c400104 	addi	r17,r17,4
  801658:	a4ffdc1e 	bne	r20,r19,8015cc <__alt_data_end+0xff8015cc>
  80165c:	d9809017 	ldw	r6,576(sp)
  801660:	a80b883a 	mov	r5,r21
  801664:	e009883a 	mov	r4,fp
  801668:	08026100 	call	802610 <scalbn>
  80166c:	000d883a 	mov	r6,zero
  801670:	01cff034 	movhi	r7,16320
  801674:	1009883a 	mov	r4,r2
  801678:	180b883a 	mov	r5,r3
  80167c:	1027883a 	mov	r19,r2
  801680:	1823883a 	mov	r17,r3
  801684:	08035200 	call	803520 <__muldf3>
  801688:	1009883a 	mov	r4,r2
  80168c:	180b883a 	mov	r5,r3
  801690:	08024240 	call	802424 <floor>
  801694:	000d883a 	mov	r6,zero
  801698:	01d00834 	movhi	r7,16416
  80169c:	1009883a 	mov	r4,r2
  8016a0:	180b883a 	mov	r5,r3
  8016a4:	08035200 	call	803520 <__muldf3>
  8016a8:	100d883a 	mov	r6,r2
  8016ac:	180f883a 	mov	r7,r3
  8016b0:	9809883a 	mov	r4,r19
  8016b4:	880b883a 	mov	r5,r17
  8016b8:	0803c380 	call	803c38 <__subdf3>
  8016bc:	180b883a 	mov	r5,r3
  8016c0:	1009883a 	mov	r4,r2
  8016c4:	1827883a 	mov	r19,r3
  8016c8:	1029883a 	mov	r20,r2
  8016cc:	08045340 	call	804534 <__fixdfsi>
  8016d0:	1009883a 	mov	r4,r2
  8016d4:	1023883a 	mov	r17,r2
  8016d8:	08045b40 	call	8045b4 <__floatsidf>
  8016dc:	a009883a 	mov	r4,r20
  8016e0:	100d883a 	mov	r6,r2
  8016e4:	180f883a 	mov	r7,r3
  8016e8:	980b883a 	mov	r5,r19
  8016ec:	0803c380 	call	803c38 <__subdf3>
  8016f0:	d9009017 	ldw	r4,576(sp)
  8016f4:	1013883a 	mov	r9,r2
  8016f8:	102b883a 	mov	r21,r2
  8016fc:	1811883a 	mov	r8,r3
  801700:	0100b30e 	bge	zero,r4,8019d0 <__kernel_rem_pio2+0x61c>
  801704:	90bfffc4 	addi	r2,r18,-1
  801708:	1085883a 	add	r2,r2,r2
  80170c:	1085883a 	add	r2,r2,r2
  801710:	d885883a 	add	r2,sp,r2
  801714:	10807804 	addi	r2,r2,480
  801718:	d9809017 	ldw	r6,576(sp)
  80171c:	11400017 	ldw	r5,0(r2)
  801720:	01000604 	movi	r4,24
  801724:	2189c83a 	sub	r4,r4,r6
  801728:	290dd83a 	sra	r6,r5,r4
  80172c:	d9c09017 	ldw	r7,576(sp)
  801730:	04c005c4 	movi	r19,23
  801734:	3108983a 	sll	r4,r6,r4
  801738:	99e7c83a 	sub	r19,r19,r7
  80173c:	89a3883a 	add	r17,r17,r6
  801740:	2909c83a 	sub	r4,r5,r4
  801744:	24e7d83a 	sra	r19,r4,r19
  801748:	11000015 	stw	r4,0(r2)
  80174c:	04c02a0e 	bge	zero,r19,8017f8 <__kernel_rem_pio2+0x444>
  801750:	8c400044 	addi	r17,r17,1
  801754:	0481570e 	bge	zero,r18,801cb4 <__kernel_rem_pio2+0x900>
  801758:	02804034 	movhi	r10,256
  80175c:	52bfffc4 	addi	r10,r10,-1
  801760:	d8807804 	addi	r2,sp,480
  801764:	000b883a 	mov	r5,zero
  801768:	0029883a 	mov	r20,zero
  80176c:	01c04034 	movhi	r7,256
  801770:	00000706 	br	801790 <__kernel_rem_pio2+0x3dc>
  801774:	390dc83a 	sub	r6,r7,r4
  801778:	20000226 	beq	r4,zero,801784 <__kernel_rem_pio2+0x3d0>
  80177c:	11800015 	stw	r6,0(r2)
  801780:	05000044 	movi	r20,1
  801784:	29400044 	addi	r5,r5,1
  801788:	10800104 	addi	r2,r2,4
  80178c:	2c80080e 	bge	r5,r18,8017b0 <__kernel_rem_pio2+0x3fc>
  801790:	11000017 	ldw	r4,0(r2)
  801794:	a03ff726 	beq	r20,zero,801774 <__alt_data_end+0xff801774>
  801798:	5109c83a 	sub	r4,r10,r4
  80179c:	11000015 	stw	r4,0(r2)
  8017a0:	29400044 	addi	r5,r5,1
  8017a4:	05000044 	movi	r20,1
  8017a8:	10800104 	addi	r2,r2,4
  8017ac:	2cbff816 	blt	r5,r18,801790 <__alt_data_end+0xff801790>
  8017b0:	d9009017 	ldw	r4,576(sp)
  8017b4:	01000e0e 	bge	zero,r4,8017f0 <__kernel_rem_pio2+0x43c>
  8017b8:	00800044 	movi	r2,1
  8017bc:	20808d26 	beq	r4,r2,8019f4 <__kernel_rem_pio2+0x640>
  8017c0:	00800084 	movi	r2,2
  8017c4:	20800a1e 	bne	r4,r2,8017f0 <__kernel_rem_pio2+0x43c>
  8017c8:	90bfffc4 	addi	r2,r18,-1
  8017cc:	1085883a 	add	r2,r2,r2
  8017d0:	1085883a 	add	r2,r2,r2
  8017d4:	d885883a 	add	r2,sp,r2
  8017d8:	10807804 	addi	r2,r2,480
  8017dc:	11400017 	ldw	r5,0(r2)
  8017e0:	01001034 	movhi	r4,64
  8017e4:	213fffc4 	addi	r4,r4,-1
  8017e8:	2908703a 	and	r4,r5,r4
  8017ec:	11000015 	stw	r4,0(r2)
  8017f0:	00800084 	movi	r2,2
  8017f4:	98805d26 	beq	r19,r2,80196c <__kernel_rem_pio2+0x5b8>
  8017f8:	400b883a 	mov	r5,r8
  8017fc:	000d883a 	mov	r6,zero
  801800:	000f883a 	mov	r7,zero
  801804:	a809883a 	mov	r4,r21
  801808:	da009b15 	stw	r8,620(sp)
  80180c:	08033bc0 	call	8033bc <__eqdf2>
  801810:	da009b17 	ldw	r8,620(sp)
  801814:	10012b1e 	bne	r2,zero,801cc4 <__kernel_rem_pio2+0x910>
  801818:	da009417 	ldw	r8,592(sp)
  80181c:	917fffc4 	addi	r5,r18,-1
  801820:	2a000e16 	blt	r5,r8,80185c <__kernel_rem_pio2+0x4a8>
  801824:	00900034 	movhi	r2,16384
  801828:	10bfffc4 	addi	r2,r2,-1
  80182c:	9085883a 	add	r2,r18,r2
  801830:	1085883a 	add	r2,r2,r2
  801834:	d9809717 	ldw	r6,604(sp)
  801838:	1085883a 	add	r2,r2,r2
  80183c:	d9007804 	addi	r4,sp,480
  801840:	0007883a 	mov	r3,zero
  801844:	2085883a 	add	r2,r4,r2
  801848:	11000017 	ldw	r4,0(r2)
  80184c:	10bfff04 	addi	r2,r2,-4
  801850:	1906b03a 	or	r3,r3,r4
  801854:	11bffc1e 	bne	r2,r6,801848 <__alt_data_end+0xff801848>
  801858:	1800821e 	bne	r3,zero,801a64 <__kernel_rem_pio2+0x6b0>
  80185c:	da009817 	ldw	r8,608(sp)
  801860:	40800017 	ldw	r2,0(r8)
  801864:	1001151e 	bne	r2,zero,801cbc <__kernel_rem_pio2+0x908>
  801868:	d8809617 	ldw	r2,600(sp)
  80186c:	05000044 	movi	r20,1
  801870:	10bfff04 	addi	r2,r2,-4
  801874:	10c00117 	ldw	r3,4(r2)
  801878:	a5000044 	addi	r20,r20,1
  80187c:	183ffc26 	beq	r3,zero,801870 <__alt_data_end+0xff801870>
  801880:	9529883a 	add	r20,r18,r20
  801884:	90800044 	addi	r2,r18,1
  801888:	dd009115 	stw	r20,580(sp)
  80188c:	a0803216 	blt	r20,r2,801958 <__kernel_rem_pio2+0x5a4>
  801890:	da009317 	ldw	r8,588(sp)
  801894:	d8c09117 	ldw	r3,580(sp)
  801898:	44a3883a 	add	r17,r8,r18
  80189c:	da009217 	ldw	r8,584(sp)
  8018a0:	882290fa 	slli	r17,r17,3
  8018a4:	40a5883a 	add	r18,r8,r2
  8018a8:	da009517 	ldw	r8,596(sp)
  8018ac:	100490fa 	slli	r2,r2,3
  8018b0:	94a5883a 	add	r18,r18,r18
  8018b4:	40eb883a 	add	r21,r8,r3
  8018b8:	da00a717 	ldw	r8,668(sp)
  8018bc:	ad6b883a 	add	r21,r21,r21
  8018c0:	94a5883a 	add	r18,r18,r18
  8018c4:	ad6b883a 	add	r21,r21,r21
  8018c8:	d8c05004 	addi	r3,sp,320
  8018cc:	44a5883a 	add	r18,r8,r18
  8018d0:	1c63883a 	add	r17,r3,r17
  8018d4:	d8a7883a 	add	r19,sp,r2
  8018d8:	456b883a 	add	r21,r8,r21
  8018dc:	91000017 	ldw	r4,0(r18)
  8018e0:	08045b40 	call	8045b4 <__floatsidf>
  8018e4:	da008d17 	ldw	r8,564(sp)
  8018e8:	88800015 	stw	r2,0(r17)
  8018ec:	88c00115 	stw	r3,4(r17)
  8018f0:	40001b16 	blt	r8,zero,801960 <__kernel_rem_pio2+0x5ac>
  8018f4:	dd008e17 	ldw	r20,568(sp)
  8018f8:	882d883a 	mov	r22,r17
  8018fc:	002f883a 	mov	r23,zero
  801900:	0039883a 	mov	fp,zero
  801904:	b1800017 	ldw	r6,0(r22)
  801908:	b1c00117 	ldw	r7,4(r22)
  80190c:	a1000017 	ldw	r4,0(r20)
  801910:	a1400117 	ldw	r5,4(r20)
  801914:	a5000204 	addi	r20,r20,8
  801918:	b5bffe04 	addi	r22,r22,-8
  80191c:	08035200 	call	803520 <__muldf3>
  801920:	b809883a 	mov	r4,r23
  801924:	e00b883a 	mov	r5,fp
  801928:	100d883a 	mov	r6,r2
  80192c:	180f883a 	mov	r7,r3
  801930:	0802b100 	call	802b10 <__adddf3>
  801934:	102f883a 	mov	r23,r2
  801938:	1839883a 	mov	fp,r3
  80193c:	a43ff11e 	bne	r20,r16,801904 <__alt_data_end+0xff801904>
  801940:	9dc00015 	stw	r23,0(r19)
  801944:	9f000115 	stw	fp,4(r19)
  801948:	94800104 	addi	r18,r18,4
  80194c:	8c400204 	addi	r17,r17,8
  801950:	9cc00204 	addi	r19,r19,8
  801954:	957fe11e 	bne	r18,r21,8018dc <__alt_data_end+0xff8018dc>
  801958:	dc809117 	ldw	r18,580(sp)
  80195c:	003f0f06 	br	80159c <__alt_data_end+0xff80159c>
  801960:	002f883a 	mov	r23,zero
  801964:	0039883a 	mov	fp,zero
  801968:	003ff506 	br	801940 <__alt_data_end+0xff801940>
  80196c:	480d883a 	mov	r6,r9
  801970:	180f883a 	mov	r7,r3
  801974:	0009883a 	mov	r4,zero
  801978:	014ffc34 	movhi	r5,16368
  80197c:	0803c380 	call	803c38 <__subdf3>
  801980:	102b883a 	mov	r21,r2
  801984:	1811883a 	mov	r8,r3
  801988:	a03f9b26 	beq	r20,zero,8017f8 <__alt_data_end+0xff8017f8>
  80198c:	d9809017 	ldw	r6,576(sp)
  801990:	0009883a 	mov	r4,zero
  801994:	014ffc34 	movhi	r5,16368
  801998:	d8c09b15 	stw	r3,620(sp)
  80199c:	08026100 	call	802610 <scalbn>
  8019a0:	da009b17 	ldw	r8,620(sp)
  8019a4:	a809883a 	mov	r4,r21
  8019a8:	100d883a 	mov	r6,r2
  8019ac:	400b883a 	mov	r5,r8
  8019b0:	180f883a 	mov	r7,r3
  8019b4:	0803c380 	call	803c38 <__subdf3>
  8019b8:	102b883a 	mov	r21,r2
  8019bc:	1811883a 	mov	r8,r3
  8019c0:	003f8d06 	br	8017f8 <__alt_data_end+0xff8017f8>
  8019c4:	0005883a 	mov	r2,zero
  8019c8:	0007883a 	mov	r3,zero
  8019cc:	003eac06 	br	801480 <__alt_data_end+0xff801480>
  8019d0:	d8809017 	ldw	r2,576(sp)
  8019d4:	1000121e 	bne	r2,zero,801a20 <__kernel_rem_pio2+0x66c>
  8019d8:	90bfffc4 	addi	r2,r18,-1
  8019dc:	1085883a 	add	r2,r2,r2
  8019e0:	1085883a 	add	r2,r2,r2
  8019e4:	d885883a 	add	r2,sp,r2
  8019e8:	14c07817 	ldw	r19,480(r2)
  8019ec:	9827d5fa 	srai	r19,r19,23
  8019f0:	003f5606 	br	80174c <__alt_data_end+0xff80174c>
  8019f4:	90bfffc4 	addi	r2,r18,-1
  8019f8:	1085883a 	add	r2,r2,r2
  8019fc:	1085883a 	add	r2,r2,r2
  801a00:	d885883a 	add	r2,sp,r2
  801a04:	10807804 	addi	r2,r2,480
  801a08:	11000017 	ldw	r4,0(r2)
  801a0c:	01402034 	movhi	r5,128
  801a10:	297fffc4 	addi	r5,r5,-1
  801a14:	2148703a 	and	r4,r4,r5
  801a18:	11000015 	stw	r4,0(r2)
  801a1c:	003f7406 	br	8017f0 <__alt_data_end+0xff8017f0>
  801a20:	4809883a 	mov	r4,r9
  801a24:	180b883a 	mov	r5,r3
  801a28:	000d883a 	mov	r6,zero
  801a2c:	01cff834 	movhi	r7,16352
  801a30:	d8c09a15 	stw	r3,616(sp)
  801a34:	d8c09b15 	stw	r3,620(sp)
  801a38:	da409915 	stw	r9,612(sp)
  801a3c:	08034440 	call	803444 <__gedf2>
  801a40:	d8c09a17 	ldw	r3,616(sp)
  801a44:	da009b17 	ldw	r8,620(sp)
  801a48:	da409917 	ldw	r9,612(sp)
  801a4c:	1000920e 	bge	r2,zero,801c98 <__kernel_rem_pio2+0x8e4>
  801a50:	0027883a 	mov	r19,zero
  801a54:	003f6806 	br	8017f8 <__alt_data_end+0xff8017f8>
  801a58:	002d883a 	mov	r22,zero
  801a5c:	002b883a 	mov	r21,zero
  801a60:	003eb006 	br	801524 <__alt_data_end+0xff801524>
  801a64:	2945883a 	add	r2,r5,r5
  801a68:	da009017 	ldw	r8,576(sp)
  801a6c:	1085883a 	add	r2,r2,r2
  801a70:	d885883a 	add	r2,sp,r2
  801a74:	10807817 	ldw	r2,480(r2)
  801a78:	423ffa04 	addi	r8,r8,-24
  801a7c:	dc409115 	stw	r17,580(sp)
  801a80:	dcc08d15 	stw	r19,564(sp)
  801a84:	da009015 	stw	r8,576(sp)
  801a88:	dd809417 	ldw	r22,592(sp)
  801a8c:	2823883a 	mov	r17,r5
  801a90:	10000e1e 	bne	r2,zero,801acc <__kernel_rem_pio2+0x718>
  801a94:	00900034 	movhi	r2,16384
  801a98:	10bfffc4 	addi	r2,r2,-1
  801a9c:	2885883a 	add	r2,r5,r2
  801aa0:	1085883a 	add	r2,r2,r2
  801aa4:	d8c07804 	addi	r3,sp,480
  801aa8:	1085883a 	add	r2,r2,r2
  801aac:	1885883a 	add	r2,r3,r2
  801ab0:	4007883a 	mov	r3,r8
  801ab4:	10bfff04 	addi	r2,r2,-4
  801ab8:	11000117 	ldw	r4,4(r2)
  801abc:	8c7fffc4 	addi	r17,r17,-1
  801ac0:	18fffa04 	addi	r3,r3,-24
  801ac4:	203ffb26 	beq	r4,zero,801ab4 <__alt_data_end+0xff801ab4>
  801ac8:	d8c09015 	stw	r3,576(sp)
  801acc:	d9809017 	ldw	r6,576(sp)
  801ad0:	0009883a 	mov	r4,zero
  801ad4:	014ffc34 	movhi	r5,16368
  801ad8:	08026100 	call	802610 <scalbn>
  801adc:	1029883a 	mov	r20,r2
  801ae0:	182b883a 	mov	r21,r3
  801ae4:	88018416 	blt	r17,zero,8020f8 <__kernel_rem_pio2+0xd44>
  801ae8:	881090fa 	slli	r8,r17,3
  801aec:	d8c07804 	addi	r3,sp,480
  801af0:	da008e15 	stw	r8,568(sp)
  801af4:	d8808e17 	ldw	r2,568(sp)
  801af8:	8c51883a 	add	r8,r17,r17
  801afc:	4211883a 	add	r8,r8,r8
  801b00:	d8a1883a 	add	r16,sp,r2
  801b04:	1a25883a 	add	r18,r3,r8
  801b08:	da3ffe04 	addi	r8,sp,-8
  801b0c:	da008c15 	stw	r8,560(sp)
  801b10:	8039883a 	mov	fp,r16
  801b14:	91000017 	ldw	r4,0(r18)
  801b18:	e73ffe04 	addi	fp,fp,-8
  801b1c:	94bfff04 	addi	r18,r18,-4
  801b20:	08045b40 	call	8045b4 <__floatsidf>
  801b24:	a00d883a 	mov	r6,r20
  801b28:	a80f883a 	mov	r7,r21
  801b2c:	1009883a 	mov	r4,r2
  801b30:	180b883a 	mov	r5,r3
  801b34:	08035200 	call	803520 <__muldf3>
  801b38:	a009883a 	mov	r4,r20
  801b3c:	a80b883a 	mov	r5,r21
  801b40:	e0800215 	stw	r2,8(fp)
  801b44:	e0c00315 	stw	r3,12(fp)
  801b48:	000d883a 	mov	r6,zero
  801b4c:	01cf9c34 	movhi	r7,15984
  801b50:	08035200 	call	803520 <__muldf3>
  801b54:	da008c17 	ldw	r8,560(sp)
  801b58:	1029883a 	mov	r20,r2
  801b5c:	182b883a 	mov	r21,r3
  801b60:	e23fec1e 	bne	fp,r8,801b14 <__alt_data_end+0xff801b14>
  801b64:	0029883a 	mov	r20,zero
  801b68:	b0004f16 	blt	r22,zero,801ca8 <__kernel_rem_pio2+0x8f4>
  801b6c:	05402074 	movhi	r21,129
  801b70:	014ffe74 	movhi	r5,16377
  801b74:	ad47d604 	addi	r21,r21,8024
  801b78:	8027883a 	mov	r19,r16
  801b7c:	01100034 	movhi	r4,16384
  801b80:	29487ec4 	addi	r5,r5,8699
  801b84:	0039883a 	mov	fp,zero
  801b88:	002f883a 	mov	r23,zero
  801b8c:	0025883a 	mov	r18,zero
  801b90:	00000506 	br	801ba8 <__kernel_rem_pio2+0x7f4>
  801b94:	9cc00204 	addi	r19,r19,8
  801b98:	a4800f16 	blt	r20,r18,801bd8 <__kernel_rem_pio2+0x824>
  801b9c:	a9000017 	ldw	r4,0(r21)
  801ba0:	a9400117 	ldw	r5,4(r21)
  801ba4:	ad400204 	addi	r21,r21,8
  801ba8:	99800017 	ldw	r6,0(r19)
  801bac:	99c00117 	ldw	r7,4(r19)
  801bb0:	94800044 	addi	r18,r18,1
  801bb4:	08035200 	call	803520 <__muldf3>
  801bb8:	e009883a 	mov	r4,fp
  801bbc:	b80b883a 	mov	r5,r23
  801bc0:	100d883a 	mov	r6,r2
  801bc4:	180f883a 	mov	r7,r3
  801bc8:	0802b100 	call	802b10 <__adddf3>
  801bcc:	1039883a 	mov	fp,r2
  801bd0:	182f883a 	mov	r23,r3
  801bd4:	b4bfef0e 	bge	r22,r18,801b94 <__alt_data_end+0xff801b94>
  801bd8:	a00490fa 	slli	r2,r20,3
  801bdc:	da008c17 	ldw	r8,560(sp)
  801be0:	843ffe04 	addi	r16,r16,-8
  801be4:	d885883a 	add	r2,sp,r2
  801be8:	10802804 	addi	r2,r2,160
  801bec:	17000015 	stw	fp,0(r2)
  801bf0:	15c00115 	stw	r23,4(r2)
  801bf4:	a5000044 	addi	r20,r20,1
  801bf8:	823fdb1e 	bne	r16,r8,801b68 <__alt_data_end+0xff801b68>
  801bfc:	da00a617 	ldw	r8,664(sp)
  801c00:	00800084 	movi	r2,2
  801c04:	12006616 	blt	r2,r8,801da0 <__kernel_rem_pio2+0x9ec>
  801c08:	0200de16 	blt	zero,r8,801f84 <__kernel_rem_pio2+0xbd0>
  801c0c:	4000141e 	bne	r8,zero,801c60 <__kernel_rem_pio2+0x8ac>
  801c10:	da008e17 	ldw	r8,568(sp)
  801c14:	d8802804 	addi	r2,sp,160
  801c18:	0007883a 	mov	r3,zero
  801c1c:	1225883a 	add	r18,r2,r8
  801c20:	043fffc4 	movi	r16,-1
  801c24:	0005883a 	mov	r2,zero
  801c28:	91800017 	ldw	r6,0(r18)
  801c2c:	91c00117 	ldw	r7,4(r18)
  801c30:	1009883a 	mov	r4,r2
  801c34:	180b883a 	mov	r5,r3
  801c38:	8c7fffc4 	addi	r17,r17,-1
  801c3c:	0802b100 	call	802b10 <__adddf3>
  801c40:	94bffe04 	addi	r18,r18,-8
  801c44:	8c3ff81e 	bne	r17,r16,801c28 <__alt_data_end+0xff801c28>
  801c48:	da008d17 	ldw	r8,564(sp)
  801c4c:	40000126 	beq	r8,zero,801c54 <__kernel_rem_pio2+0x8a0>
  801c50:	18e0003c 	xorhi	r3,r3,32768
  801c54:	da008f17 	ldw	r8,572(sp)
  801c58:	40800015 	stw	r2,0(r8)
  801c5c:	40c00115 	stw	r3,4(r8)
  801c60:	da009117 	ldw	r8,580(sp)
  801c64:	408001cc 	andi	r2,r8,7
  801c68:	dfc0a517 	ldw	ra,660(sp)
  801c6c:	df00a417 	ldw	fp,656(sp)
  801c70:	ddc0a317 	ldw	r23,652(sp)
  801c74:	dd80a217 	ldw	r22,648(sp)
  801c78:	dd40a117 	ldw	r21,644(sp)
  801c7c:	dd00a017 	ldw	r20,640(sp)
  801c80:	dcc09f17 	ldw	r19,636(sp)
  801c84:	dc809e17 	ldw	r18,632(sp)
  801c88:	dc409d17 	ldw	r17,628(sp)
  801c8c:	dc009c17 	ldw	r16,624(sp)
  801c90:	dec0a604 	addi	sp,sp,664
  801c94:	f800283a 	ret
  801c98:	8c400044 	addi	r17,r17,1
  801c9c:	04810d0e 	bge	zero,r18,8020d4 <__kernel_rem_pio2+0xd20>
  801ca0:	04c00084 	movi	r19,2
  801ca4:	003eac06 	br	801758 <__alt_data_end+0xff801758>
  801ca8:	0039883a 	mov	fp,zero
  801cac:	002f883a 	mov	r23,zero
  801cb0:	003fc906 	br	801bd8 <__alt_data_end+0xff801bd8>
  801cb4:	0029883a 	mov	r20,zero
  801cb8:	003ebd06 	br	8017b0 <__alt_data_end+0xff8017b0>
  801cbc:	05000044 	movi	r20,1
  801cc0:	003eef06 	br	801880 <__alt_data_end+0xff801880>
  801cc4:	4029883a 	mov	r20,r8
  801cc8:	da009017 	ldw	r8,576(sp)
  801ccc:	a809883a 	mov	r4,r21
  801cd0:	a00b883a 	mov	r5,r20
  801cd4:	020dc83a 	sub	r6,zero,r8
  801cd8:	dc409115 	stw	r17,580(sp)
  801cdc:	dd809417 	ldw	r22,592(sp)
  801ce0:	dcc08d15 	stw	r19,564(sp)
  801ce4:	08026100 	call	802610 <scalbn>
  801ce8:	000d883a 	mov	r6,zero
  801cec:	01d05c34 	movhi	r7,16752
  801cf0:	1009883a 	mov	r4,r2
  801cf4:	180b883a 	mov	r5,r3
  801cf8:	102b883a 	mov	r21,r2
  801cfc:	1823883a 	mov	r17,r3
  801d00:	08034440 	call	803444 <__gedf2>
  801d04:	1000e916 	blt	r2,zero,8020ac <__kernel_rem_pio2+0xcf8>
  801d08:	000d883a 	mov	r6,zero
  801d0c:	01cf9c34 	movhi	r7,15984
  801d10:	880b883a 	mov	r5,r17
  801d14:	a809883a 	mov	r4,r21
  801d18:	08035200 	call	803520 <__muldf3>
  801d1c:	180b883a 	mov	r5,r3
  801d20:	1009883a 	mov	r4,r2
  801d24:	08045340 	call	804534 <__fixdfsi>
  801d28:	1029883a 	mov	r20,r2
  801d2c:	9485883a 	add	r2,r18,r18
  801d30:	1085883a 	add	r2,r2,r2
  801d34:	a009883a 	mov	r4,r20
  801d38:	d8a1883a 	add	r16,sp,r2
  801d3c:	08045b40 	call	8045b4 <__floatsidf>
  801d40:	000d883a 	mov	r6,zero
  801d44:	01d05c34 	movhi	r7,16752
  801d48:	1009883a 	mov	r4,r2
  801d4c:	180b883a 	mov	r5,r3
  801d50:	08035200 	call	803520 <__muldf3>
  801d54:	880b883a 	mov	r5,r17
  801d58:	100d883a 	mov	r6,r2
  801d5c:	180f883a 	mov	r7,r3
  801d60:	a809883a 	mov	r4,r21
  801d64:	0803c380 	call	803c38 <__subdf3>
  801d68:	180b883a 	mov	r5,r3
  801d6c:	1009883a 	mov	r4,r2
  801d70:	08045340 	call	804534 <__fixdfsi>
  801d74:	da009017 	ldw	r8,576(sp)
  801d78:	94400044 	addi	r17,r18,1
  801d7c:	8c47883a 	add	r3,r17,r17
  801d80:	84007804 	addi	r16,r16,480
  801d84:	18c7883a 	add	r3,r3,r3
  801d88:	80800015 	stw	r2,0(r16)
  801d8c:	d8c7883a 	add	r3,sp,r3
  801d90:	42000604 	addi	r8,r8,24
  801d94:	da009015 	stw	r8,576(sp)
  801d98:	1d007815 	stw	r20,480(r3)
  801d9c:	003f4b06 	br	801acc <__alt_data_end+0xff801acc>
  801da0:	da00a617 	ldw	r8,664(sp)
  801da4:	008000c4 	movi	r2,3
  801da8:	40bfad1e 	bne	r8,r2,801c60 <__alt_data_end+0xff801c60>
  801dac:	0440bc0e 	bge	zero,r17,8020a0 <__kernel_rem_pio2+0xcec>
  801db0:	da008e17 	ldw	r8,568(sp)
  801db4:	882090fa 	slli	r16,r17,3
  801db8:	dd402804 	addi	r21,sp,160
  801dbc:	da05883a 	add	r2,sp,r8
  801dc0:	10802804 	addi	r2,r2,160
  801dc4:	15c00017 	ldw	r23,0(r2)
  801dc8:	15800117 	ldw	r22,4(r2)
  801dcc:	8029883a 	mov	r20,r16
  801dd0:	843ffe04 	addi	r16,r16,-8
  801dd4:	ac21883a 	add	r16,r21,r16
  801dd8:	ad29883a 	add	r20,r21,r20
  801ddc:	dac02604 	addi	r11,sp,152
  801de0:	8811883a 	mov	r8,r17
  801de4:	84400017 	ldw	r17,0(r16)
  801de8:	87000117 	ldw	fp,4(r16)
  801dec:	b80d883a 	mov	r6,r23
  801df0:	b00f883a 	mov	r7,r22
  801df4:	8809883a 	mov	r4,r17
  801df8:	e00b883a 	mov	r5,fp
  801dfc:	da009b15 	stw	r8,620(sp)
  801e00:	dac09915 	stw	r11,612(sp)
  801e04:	0802b100 	call	802b10 <__adddf3>
  801e08:	100d883a 	mov	r6,r2
  801e0c:	180f883a 	mov	r7,r3
  801e10:	8809883a 	mov	r4,r17
  801e14:	e00b883a 	mov	r5,fp
  801e18:	1027883a 	mov	r19,r2
  801e1c:	1825883a 	mov	r18,r3
  801e20:	0803c380 	call	803c38 <__subdf3>
  801e24:	b80d883a 	mov	r6,r23
  801e28:	b00f883a 	mov	r7,r22
  801e2c:	1009883a 	mov	r4,r2
  801e30:	180b883a 	mov	r5,r3
  801e34:	0802b100 	call	802b10 <__adddf3>
  801e38:	dac09917 	ldw	r11,612(sp)
  801e3c:	a0800015 	stw	r2,0(r20)
  801e40:	a0c00115 	stw	r3,4(r20)
  801e44:	84c00015 	stw	r19,0(r16)
  801e48:	84800115 	stw	r18,4(r16)
  801e4c:	843ffe04 	addi	r16,r16,-8
  801e50:	a53ffe04 	addi	r20,r20,-8
  801e54:	982f883a 	mov	r23,r19
  801e58:	902d883a 	mov	r22,r18
  801e5c:	da009b17 	ldw	r8,620(sp)
  801e60:	5c3fe01e 	bne	r11,r16,801de4 <__alt_data_end+0xff801de4>
  801e64:	00800044 	movi	r2,1
  801e68:	12008d0e 	bge	r2,r8,8020a0 <__kernel_rem_pio2+0xcec>
  801e6c:	402090fa 	slli	r16,r8,3
  801e70:	da008e17 	ldw	r8,568(sp)
  801e74:	8023883a 	mov	r17,r16
  801e78:	da05883a 	add	r2,sp,r8
  801e7c:	10802804 	addi	r2,r2,160
  801e80:	15800017 	ldw	r22,0(r2)
  801e84:	15000117 	ldw	r20,4(r2)
  801e88:	ac63883a 	add	r17,r21,r17
  801e8c:	843ffe04 	addi	r16,r16,-8
  801e90:	ac21883a 	add	r16,r21,r16
  801e94:	8825883a 	mov	r18,r17
  801e98:	8811883a 	mov	r8,r17
  801e9c:	84400017 	ldw	r17,0(r16)
  801ea0:	87000117 	ldw	fp,4(r16)
  801ea4:	b009883a 	mov	r4,r22
  801ea8:	a00b883a 	mov	r5,r20
  801eac:	880d883a 	mov	r6,r17
  801eb0:	e00f883a 	mov	r7,fp
  801eb4:	da009b15 	stw	r8,620(sp)
  801eb8:	0802b100 	call	802b10 <__adddf3>
  801ebc:	100d883a 	mov	r6,r2
  801ec0:	180f883a 	mov	r7,r3
  801ec4:	8809883a 	mov	r4,r17
  801ec8:	e00b883a 	mov	r5,fp
  801ecc:	102f883a 	mov	r23,r2
  801ed0:	1827883a 	mov	r19,r3
  801ed4:	0803c380 	call	803c38 <__subdf3>
  801ed8:	b00d883a 	mov	r6,r22
  801edc:	a00f883a 	mov	r7,r20
  801ee0:	1009883a 	mov	r4,r2
  801ee4:	180b883a 	mov	r5,r3
  801ee8:	0802b100 	call	802b10 <__adddf3>
  801eec:	90800015 	stw	r2,0(r18)
  801ef0:	90c00115 	stw	r3,4(r18)
  801ef4:	85c00015 	stw	r23,0(r16)
  801ef8:	84c00115 	stw	r19,4(r16)
  801efc:	843ffe04 	addi	r16,r16,-8
  801f00:	94bffe04 	addi	r18,r18,-8
  801f04:	b82d883a 	mov	r22,r23
  801f08:	9829883a 	mov	r20,r19
  801f0c:	da009b17 	ldw	r8,620(sp)
  801f10:	ac3fe21e 	bne	r21,r16,801e9c <__alt_data_end+0xff801e9c>
  801f14:	4023883a 	mov	r17,r8
  801f18:	dc002a04 	addi	r16,sp,168
  801f1c:	0005883a 	mov	r2,zero
  801f20:	0007883a 	mov	r3,zero
  801f24:	89800017 	ldw	r6,0(r17)
  801f28:	89c00117 	ldw	r7,4(r17)
  801f2c:	1009883a 	mov	r4,r2
  801f30:	8c7ffe04 	addi	r17,r17,-8
  801f34:	180b883a 	mov	r5,r3
  801f38:	0802b100 	call	802b10 <__adddf3>
  801f3c:	847ff91e 	bne	r16,r17,801f24 <__alt_data_end+0xff801f24>
  801f40:	da008d17 	ldw	r8,564(sp)
  801f44:	40004726 	beq	r8,zero,802064 <__kernel_rem_pio2+0xcb0>
  801f48:	d9002b17 	ldw	r4,172(sp)
  801f4c:	d9402917 	ldw	r5,164(sp)
  801f50:	d9802a17 	ldw	r6,168(sp)
  801f54:	da008f17 	ldw	r8,572(sp)
  801f58:	d9c02817 	ldw	r7,160(sp)
  801f5c:	2960003c 	xorhi	r5,r5,32768
  801f60:	2120003c 	xorhi	r4,r4,32768
  801f64:	18e0003c 	xorhi	r3,r3,32768
  801f68:	41c00015 	stw	r7,0(r8)
  801f6c:	41400115 	stw	r5,4(r8)
  801f70:	41800215 	stw	r6,8(r8)
  801f74:	41000315 	stw	r4,12(r8)
  801f78:	40800415 	stw	r2,16(r8)
  801f7c:	40c00515 	stw	r3,20(r8)
  801f80:	003f3706 	br	801c60 <__alt_data_end+0xff801c60>
  801f84:	da008e17 	ldw	r8,568(sp)
  801f88:	d8802804 	addi	r2,sp,160
  801f8c:	dc002604 	addi	r16,sp,152
  801f90:	1225883a 	add	r18,r2,r8
  801f94:	0007883a 	mov	r3,zero
  801f98:	0005883a 	mov	r2,zero
  801f9c:	91800017 	ldw	r6,0(r18)
  801fa0:	91c00117 	ldw	r7,4(r18)
  801fa4:	1009883a 	mov	r4,r2
  801fa8:	94bffe04 	addi	r18,r18,-8
  801fac:	180b883a 	mov	r5,r3
  801fb0:	0802b100 	call	802b10 <__adddf3>
  801fb4:	943ff91e 	bne	r18,r16,801f9c <__alt_data_end+0xff801f9c>
  801fb8:	da008d17 	ldw	r8,564(sp)
  801fbc:	d9002817 	ldw	r4,160(sp)
  801fc0:	d9402917 	ldw	r5,164(sp)
  801fc4:	40001a26 	beq	r8,zero,802030 <__kernel_rem_pio2+0xc7c>
  801fc8:	da008f17 	ldw	r8,572(sp)
  801fcc:	19a0003c 	xorhi	r6,r3,32768
  801fd0:	180f883a 	mov	r7,r3
  801fd4:	41800115 	stw	r6,4(r8)
  801fd8:	40800015 	stw	r2,0(r8)
  801fdc:	100d883a 	mov	r6,r2
  801fe0:	0803c380 	call	803c38 <__subdf3>
  801fe4:	04400c0e 	bge	zero,r17,802018 <__kernel_rem_pio2+0xc64>
  801fe8:	dc002a04 	addi	r16,sp,168
  801fec:	04800044 	movi	r18,1
  801ff0:	81800017 	ldw	r6,0(r16)
  801ff4:	81c00117 	ldw	r7,4(r16)
  801ff8:	1009883a 	mov	r4,r2
  801ffc:	180b883a 	mov	r5,r3
  802000:	94800044 	addi	r18,r18,1
  802004:	0802b100 	call	802b10 <__adddf3>
  802008:	84000204 	addi	r16,r16,8
  80200c:	8cbff80e 	bge	r17,r18,801ff0 <__alt_data_end+0xff801ff0>
  802010:	da008d17 	ldw	r8,564(sp)
  802014:	40004226 	beq	r8,zero,802120 <__kernel_rem_pio2+0xd6c>
  802018:	da008f17 	ldw	r8,572(sp)
  80201c:	1009883a 	mov	r4,r2
  802020:	18a0003c 	xorhi	r2,r3,32768
  802024:	41000215 	stw	r4,8(r8)
  802028:	40800315 	stw	r2,12(r8)
  80202c:	003f0c06 	br	801c60 <__alt_data_end+0xff801c60>
  802030:	da008f17 	ldw	r8,572(sp)
  802034:	100d883a 	mov	r6,r2
  802038:	180f883a 	mov	r7,r3
  80203c:	40800015 	stw	r2,0(r8)
  802040:	40c00115 	stw	r3,4(r8)
  802044:	0803c380 	call	803c38 <__subdf3>
  802048:	047fe716 	blt	zero,r17,801fe8 <__alt_data_end+0xff801fe8>
  80204c:	da008f17 	ldw	r8,572(sp)
  802050:	1009883a 	mov	r4,r2
  802054:	1805883a 	mov	r2,r3
  802058:	41000215 	stw	r4,8(r8)
  80205c:	40800315 	stw	r2,12(r8)
  802060:	003eff06 	br	801c60 <__alt_data_end+0xff801c60>
  802064:	da008f17 	ldw	r8,572(sp)
  802068:	d9802817 	ldw	r6,160(sp)
  80206c:	d9402a17 	ldw	r5,168(sp)
  802070:	d9002b17 	ldw	r4,172(sp)
  802074:	41800015 	stw	r6,0(r8)
  802078:	d9802917 	ldw	r6,164(sp)
  80207c:	41400215 	stw	r5,8(r8)
  802080:	41000315 	stw	r4,12(r8)
  802084:	41800115 	stw	r6,4(r8)
  802088:	40800415 	stw	r2,16(r8)
  80208c:	40c00515 	stw	r3,20(r8)
  802090:	003ef306 	br	801c60 <__alt_data_end+0xff801c60>
  802094:	da00a617 	ldw	r8,664(sp)
  802098:	008000c4 	movi	r2,3
  80209c:	40bef01e 	bne	r8,r2,801c60 <__alt_data_end+0xff801c60>
  8020a0:	0005883a 	mov	r2,zero
  8020a4:	0007883a 	mov	r3,zero
  8020a8:	003fa506 	br	801f40 <__alt_data_end+0xff801f40>
  8020ac:	9485883a 	add	r2,r18,r18
  8020b0:	1085883a 	add	r2,r2,r2
  8020b4:	d8a1883a 	add	r16,sp,r2
  8020b8:	880b883a 	mov	r5,r17
  8020bc:	a809883a 	mov	r4,r21
  8020c0:	84007804 	addi	r16,r16,480
  8020c4:	08045340 	call	804534 <__fixdfsi>
  8020c8:	80800015 	stw	r2,0(r16)
  8020cc:	9023883a 	mov	r17,r18
  8020d0:	003e7e06 	br	801acc <__alt_data_end+0xff801acc>
  8020d4:	a80d883a 	mov	r6,r21
  8020d8:	400f883a 	mov	r7,r8
  8020dc:	0009883a 	mov	r4,zero
  8020e0:	014ffc34 	movhi	r5,16368
  8020e4:	0803c380 	call	803c38 <__subdf3>
  8020e8:	102b883a 	mov	r21,r2
  8020ec:	1811883a 	mov	r8,r3
  8020f0:	04c00084 	movi	r19,2
  8020f4:	003dc006 	br	8017f8 <__alt_data_end+0xff8017f8>
  8020f8:	da00a617 	ldw	r8,664(sp)
  8020fc:	00800084 	movi	r2,2
  802100:	123fe416 	blt	r2,r8,802094 <__alt_data_end+0xff802094>
  802104:	02000c16 	blt	zero,r8,802138 <__kernel_rem_pio2+0xd84>
  802108:	403ed51e 	bne	r8,zero,801c60 <__alt_data_end+0xff801c60>
  80210c:	0005883a 	mov	r2,zero
  802110:	0007883a 	mov	r3,zero
  802114:	003ecc06 	br	801c48 <__alt_data_end+0xff801c48>
  802118:	d8009215 	stw	zero,584(sp)
  80211c:	003cc306 	br	80142c <__alt_data_end+0xff80142c>
  802120:	da008f17 	ldw	r8,572(sp)
  802124:	1009883a 	mov	r4,r2
  802128:	1805883a 	mov	r2,r3
  80212c:	41000215 	stw	r4,8(r8)
  802130:	40800315 	stw	r2,12(r8)
  802134:	003eca06 	br	801c60 <__alt_data_end+0xff801c60>
  802138:	0005883a 	mov	r2,zero
  80213c:	0007883a 	mov	r3,zero
  802140:	003f9d06 	br	801fb8 <__alt_data_end+0xff801fb8>

00802144 <__kernel_sin>:
  802144:	00a00034 	movhi	r2,32768
  802148:	defff404 	addi	sp,sp,-48
  80214c:	10bfffc4 	addi	r2,r2,-1
  802150:	00cf9034 	movhi	r3,15936
  802154:	ddc00915 	stw	r23,36(sp)
  802158:	dd800815 	stw	r22,32(sp)
  80215c:	dc400315 	stw	r17,12(sp)
  802160:	dc000215 	stw	r16,8(sp)
  802164:	dfc00b15 	stw	ra,44(sp)
  802168:	df000a15 	stw	fp,40(sp)
  80216c:	dd400715 	stw	r21,28(sp)
  802170:	dd000615 	stw	r20,24(sp)
  802174:	dcc00515 	stw	r19,20(sp)
  802178:	dc800415 	stw	r18,16(sp)
  80217c:	2884703a 	and	r2,r5,r2
  802180:	18ffffc4 	addi	r3,r3,-1
  802184:	2821883a 	mov	r16,r5
  802188:	2023883a 	mov	r17,r4
  80218c:	302f883a 	mov	r23,r6
  802190:	382d883a 	mov	r22,r7
  802194:	18800216 	blt	r3,r2,8021a0 <__kernel_sin+0x5c>
  802198:	08045340 	call	804534 <__fixdfsi>
  80219c:	10009926 	beq	r2,zero,802404 <__kernel_sin+0x2c0>
  8021a0:	880d883a 	mov	r6,r17
  8021a4:	800f883a 	mov	r7,r16
  8021a8:	8809883a 	mov	r4,r17
  8021ac:	800b883a 	mov	r5,r16
  8021b0:	08035200 	call	803520 <__muldf3>
  8021b4:	100d883a 	mov	r6,r2
  8021b8:	180f883a 	mov	r7,r3
  8021bc:	8809883a 	mov	r4,r17
  8021c0:	800b883a 	mov	r5,r16
  8021c4:	1027883a 	mov	r19,r2
  8021c8:	1825883a 	mov	r18,r3
  8021cc:	08035200 	call	803520 <__muldf3>
  8021d0:	0196b434 	movhi	r6,23248
  8021d4:	01cf79b4 	movhi	r7,15846
  8021d8:	31b55f04 	addi	r6,r6,-10884
  8021dc:	39f64e84 	addi	r7,r7,-9926
  8021e0:	9809883a 	mov	r4,r19
  8021e4:	900b883a 	mov	r5,r18
  8021e8:	102b883a 	mov	r21,r2
  8021ec:	1829883a 	mov	r20,r3
  8021f0:	08035200 	call	803520 <__muldf3>
  8021f4:	01a28b34 	movhi	r6,35372
  8021f8:	01cf96f4 	movhi	r7,15963
  8021fc:	31a73ac4 	addi	r6,r6,-25365
  802200:	39f97984 	addi	r7,r7,-6682
  802204:	1009883a 	mov	r4,r2
  802208:	180b883a 	mov	r5,r3
  80220c:	0803c380 	call	803c38 <__subdf3>
  802210:	980d883a 	mov	r6,r19
  802214:	900f883a 	mov	r7,r18
  802218:	1009883a 	mov	r4,r2
  80221c:	180b883a 	mov	r5,r3
  802220:	08035200 	call	803520 <__muldf3>
  802224:	0195ecb4 	movhi	r6,22450
  802228:	01cfb1f4 	movhi	r7,16071
  80222c:	31bf9f44 	addi	r6,r6,-387
  802230:	39c778c4 	addi	r7,r7,7651
  802234:	1009883a 	mov	r4,r2
  802238:	180b883a 	mov	r5,r3
  80223c:	0802b100 	call	802b10 <__adddf3>
  802240:	980d883a 	mov	r6,r19
  802244:	900f883a 	mov	r7,r18
  802248:	1009883a 	mov	r4,r2
  80224c:	180b883a 	mov	r5,r3
  802250:	08035200 	call	803520 <__muldf3>
  802254:	01867074 	movhi	r6,6593
  802258:	01cfcab4 	movhi	r7,16170
  80225c:	31987544 	addi	r6,r6,25045
  802260:	39c06804 	addi	r7,r7,416
  802264:	1009883a 	mov	r4,r2
  802268:	180b883a 	mov	r5,r3
  80226c:	0803c380 	call	803c38 <__subdf3>
  802270:	980d883a 	mov	r6,r19
  802274:	900f883a 	mov	r7,r18
  802278:	1009883a 	mov	r4,r2
  80227c:	180b883a 	mov	r5,r3
  802280:	08035200 	call	803520 <__muldf3>
  802284:	01844474 	movhi	r6,4369
  802288:	01cfe074 	movhi	r7,16257
  80228c:	31be2984 	addi	r6,r6,-1882
  802290:	39c44444 	addi	r7,r7,4369
  802294:	1009883a 	mov	r4,r2
  802298:	180b883a 	mov	r5,r3
  80229c:	0802b100 	call	802b10 <__adddf3>
  8022a0:	1011883a 	mov	r8,r2
  8022a4:	d8800c17 	ldw	r2,48(sp)
  8022a8:	1839883a 	mov	fp,r3
  8022ac:	10003e26 	beq	r2,zero,8023a8 <__kernel_sin+0x264>
  8022b0:	000d883a 	mov	r6,zero
  8022b4:	01cff834 	movhi	r7,16352
  8022b8:	b809883a 	mov	r4,r23
  8022bc:	b00b883a 	mov	r5,r22
  8022c0:	da000015 	stw	r8,0(sp)
  8022c4:	08035200 	call	803520 <__muldf3>
  8022c8:	da000017 	ldw	r8,0(sp)
  8022cc:	e00f883a 	mov	r7,fp
  8022d0:	a809883a 	mov	r4,r21
  8022d4:	400d883a 	mov	r6,r8
  8022d8:	a00b883a 	mov	r5,r20
  8022dc:	d8c00115 	stw	r3,4(sp)
  8022e0:	d8800015 	stw	r2,0(sp)
  8022e4:	08035200 	call	803520 <__muldf3>
  8022e8:	da800017 	ldw	r10,0(sp)
  8022ec:	da400117 	ldw	r9,4(sp)
  8022f0:	100d883a 	mov	r6,r2
  8022f4:	5009883a 	mov	r4,r10
  8022f8:	480b883a 	mov	r5,r9
  8022fc:	180f883a 	mov	r7,r3
  802300:	0803c380 	call	803c38 <__subdf3>
  802304:	980d883a 	mov	r6,r19
  802308:	900f883a 	mov	r7,r18
  80230c:	1009883a 	mov	r4,r2
  802310:	180b883a 	mov	r5,r3
  802314:	08035200 	call	803520 <__muldf3>
  802318:	b80d883a 	mov	r6,r23
  80231c:	b00f883a 	mov	r7,r22
  802320:	1009883a 	mov	r4,r2
  802324:	180b883a 	mov	r5,r3
  802328:	0803c380 	call	803c38 <__subdf3>
  80232c:	01955574 	movhi	r6,21845
  802330:	01cff174 	movhi	r7,16325
  802334:	31955244 	addi	r6,r6,21833
  802338:	39d55544 	addi	r7,r7,21845
  80233c:	a809883a 	mov	r4,r21
  802340:	a00b883a 	mov	r5,r20
  802344:	1027883a 	mov	r19,r2
  802348:	1825883a 	mov	r18,r3
  80234c:	08035200 	call	803520 <__muldf3>
  802350:	100d883a 	mov	r6,r2
  802354:	180f883a 	mov	r7,r3
  802358:	9809883a 	mov	r4,r19
  80235c:	900b883a 	mov	r5,r18
  802360:	0802b100 	call	802b10 <__adddf3>
  802364:	100d883a 	mov	r6,r2
  802368:	180f883a 	mov	r7,r3
  80236c:	8809883a 	mov	r4,r17
  802370:	800b883a 	mov	r5,r16
  802374:	0803c380 	call	803c38 <__subdf3>
  802378:	dfc00b17 	ldw	ra,44(sp)
  80237c:	df000a17 	ldw	fp,40(sp)
  802380:	ddc00917 	ldw	r23,36(sp)
  802384:	dd800817 	ldw	r22,32(sp)
  802388:	dd400717 	ldw	r21,28(sp)
  80238c:	dd000617 	ldw	r20,24(sp)
  802390:	dcc00517 	ldw	r19,20(sp)
  802394:	dc800417 	ldw	r18,16(sp)
  802398:	dc400317 	ldw	r17,12(sp)
  80239c:	dc000217 	ldw	r16,8(sp)
  8023a0:	dec00c04 	addi	sp,sp,48
  8023a4:	f800283a 	ret
  8023a8:	400d883a 	mov	r6,r8
  8023ac:	9809883a 	mov	r4,r19
  8023b0:	900b883a 	mov	r5,r18
  8023b4:	180f883a 	mov	r7,r3
  8023b8:	08035200 	call	803520 <__muldf3>
  8023bc:	01955574 	movhi	r6,21845
  8023c0:	01cff174 	movhi	r7,16325
  8023c4:	31955244 	addi	r6,r6,21833
  8023c8:	39d55544 	addi	r7,r7,21845
  8023cc:	1009883a 	mov	r4,r2
  8023d0:	180b883a 	mov	r5,r3
  8023d4:	0803c380 	call	803c38 <__subdf3>
  8023d8:	a80d883a 	mov	r6,r21
  8023dc:	a00f883a 	mov	r7,r20
  8023e0:	1009883a 	mov	r4,r2
  8023e4:	180b883a 	mov	r5,r3
  8023e8:	08035200 	call	803520 <__muldf3>
  8023ec:	880d883a 	mov	r6,r17
  8023f0:	800f883a 	mov	r7,r16
  8023f4:	1009883a 	mov	r4,r2
  8023f8:	180b883a 	mov	r5,r3
  8023fc:	0802b100 	call	802b10 <__adddf3>
  802400:	003fdd06 	br	802378 <__alt_data_end+0xff802378>
  802404:	8805883a 	mov	r2,r17
  802408:	8007883a 	mov	r3,r16
  80240c:	003fda06 	br	802378 <__alt_data_end+0xff802378>

00802410 <fabs>:
  802410:	00e00034 	movhi	r3,32768
  802414:	18ffffc4 	addi	r3,r3,-1
  802418:	2005883a 	mov	r2,r4
  80241c:	28c6703a 	and	r3,r5,r3
  802420:	f800283a 	ret

00802424 <floor>:
  802424:	2811d53a 	srai	r8,r5,20
  802428:	defffa04 	addi	sp,sp,-24
  80242c:	dcc00315 	stw	r19,12(sp)
  802430:	4201ffcc 	andi	r8,r8,2047
  802434:	dc800215 	stw	r18,8(sp)
  802438:	dc400115 	stw	r17,4(sp)
  80243c:	dc000015 	stw	r16,0(sp)
  802440:	dfc00515 	stw	ra,20(sp)
  802444:	dd000415 	stw	r20,16(sp)
  802448:	44bf0044 	addi	r18,r8,-1023
  80244c:	018004c4 	movi	r6,19
  802450:	2821883a 	mov	r16,r5
  802454:	2005883a 	mov	r2,r4
  802458:	280f883a 	mov	r7,r5
  80245c:	2827883a 	mov	r19,r5
  802460:	2023883a 	mov	r17,r4
  802464:	34801916 	blt	r6,r18,8024cc <floor+0xa8>
  802468:	90003c16 	blt	r18,zero,80255c <floor+0x138>
  80246c:	05000434 	movhi	r20,16
  802470:	a53fffc4 	addi	r20,r20,-1
  802474:	a4a9d83a 	sra	r20,r20,r18
  802478:	2d0c703a 	and	r6,r5,r20
  80247c:	310cb03a 	or	r6,r6,r4
  802480:	30001626 	beq	r6,zero,8024dc <floor+0xb8>
  802484:	01a20034 	movhi	r6,34816
  802488:	01df8e34 	movhi	r7,32312
  80248c:	319d6704 	addi	r6,r6,30108
  802490:	39f90f04 	addi	r7,r7,-7108
  802494:	0802b100 	call	802b10 <__adddf3>
  802498:	000d883a 	mov	r6,zero
  80249c:	000f883a 	mov	r7,zero
  8024a0:	1009883a 	mov	r4,r2
  8024a4:	180b883a 	mov	r5,r3
  8024a8:	08034440 	call	803444 <__gedf2>
  8024ac:	0080040e 	bge	zero,r2,8024c0 <floor+0x9c>
  8024b0:	80003c16 	blt	r16,zero,8025a4 <floor+0x180>
  8024b4:	0520303a 	nor	r16,zero,r20
  8024b8:	84e0703a 	and	r16,r16,r19
  8024bc:	0023883a 	mov	r17,zero
  8024c0:	8805883a 	mov	r2,r17
  8024c4:	8007883a 	mov	r3,r16
  8024c8:	00000506 	br	8024e0 <floor+0xbc>
  8024cc:	01800cc4 	movi	r6,51
  8024d0:	34800b0e 	bge	r6,r18,802500 <floor+0xdc>
  8024d4:	01810004 	movi	r6,1024
  8024d8:	91802f26 	beq	r18,r6,802598 <floor+0x174>
  8024dc:	3807883a 	mov	r3,r7
  8024e0:	dfc00517 	ldw	ra,20(sp)
  8024e4:	dd000417 	ldw	r20,16(sp)
  8024e8:	dcc00317 	ldw	r19,12(sp)
  8024ec:	dc800217 	ldw	r18,8(sp)
  8024f0:	dc400117 	ldw	r17,4(sp)
  8024f4:	dc000017 	ldw	r16,0(sp)
  8024f8:	dec00604 	addi	sp,sp,24
  8024fc:	f800283a 	ret
  802500:	423efb44 	addi	r8,r8,-1043
  802504:	053fffc4 	movi	r20,-1
  802508:	a228d83a 	srl	r20,r20,r8
  80250c:	250c703a 	and	r6,r4,r20
  802510:	303ff226 	beq	r6,zero,8024dc <__alt_data_end+0xff8024dc>
  802514:	01a20034 	movhi	r6,34816
  802518:	01df8e34 	movhi	r7,32312
  80251c:	319d6704 	addi	r6,r6,30108
  802520:	39f90f04 	addi	r7,r7,-7108
  802524:	0802b100 	call	802b10 <__adddf3>
  802528:	000d883a 	mov	r6,zero
  80252c:	000f883a 	mov	r7,zero
  802530:	1009883a 	mov	r4,r2
  802534:	180b883a 	mov	r5,r3
  802538:	08034440 	call	803444 <__gedf2>
  80253c:	00bfe00e 	bge	zero,r2,8024c0 <__alt_data_end+0xff8024c0>
  802540:	80001c16 	blt	r16,zero,8025b4 <floor+0x190>
  802544:	0510303a 	nor	r8,zero,r20
  802548:	9821883a 	mov	r16,r19
  80254c:	8a22703a 	and	r17,r17,r8
  802550:	8805883a 	mov	r2,r17
  802554:	8007883a 	mov	r3,r16
  802558:	003fe106 	br	8024e0 <__alt_data_end+0xff8024e0>
  80255c:	01a20034 	movhi	r6,34816
  802560:	01df8e34 	movhi	r7,32312
  802564:	319d6704 	addi	r6,r6,30108
  802568:	39f90f04 	addi	r7,r7,-7108
  80256c:	0802b100 	call	802b10 <__adddf3>
  802570:	000d883a 	mov	r6,zero
  802574:	000f883a 	mov	r7,zero
  802578:	1009883a 	mov	r4,r2
  80257c:	180b883a 	mov	r5,r3
  802580:	08034440 	call	803444 <__gedf2>
  802584:	00bfce0e 	bge	zero,r2,8024c0 <__alt_data_end+0xff8024c0>
  802588:	80001516 	blt	r16,zero,8025e0 <floor+0x1bc>
  80258c:	0023883a 	mov	r17,zero
  802590:	0021883a 	mov	r16,zero
  802594:	003fca06 	br	8024c0 <__alt_data_end+0xff8024c0>
  802598:	200d883a 	mov	r6,r4
  80259c:	0802b100 	call	802b10 <__adddf3>
  8025a0:	003fcf06 	br	8024e0 <__alt_data_end+0xff8024e0>
  8025a4:	00800434 	movhi	r2,16
  8025a8:	14a5d83a 	sra	r18,r2,r18
  8025ac:	84a7883a 	add	r19,r16,r18
  8025b0:	003fc006 	br	8024b4 <__alt_data_end+0xff8024b4>
  8025b4:	00800504 	movi	r2,20
  8025b8:	90801326 	beq	r18,r2,802608 <floor+0x1e4>
  8025bc:	00800d04 	movi	r2,52
  8025c0:	14a5c83a 	sub	r18,r2,r18
  8025c4:	00800044 	movi	r2,1
  8025c8:	1484983a 	sll	r2,r2,r18
  8025cc:	1445883a 	add	r2,r2,r17
  8025d0:	14400b2e 	bgeu	r2,r17,802600 <floor+0x1dc>
  8025d4:	84c00044 	addi	r19,r16,1
  8025d8:	1023883a 	mov	r17,r2
  8025dc:	003fd906 	br	802544 <__alt_data_end+0xff802544>
  8025e0:	00a00034 	movhi	r2,32768
  8025e4:	10bfffc4 	addi	r2,r2,-1
  8025e8:	8084703a 	and	r2,r16,r2
  8025ec:	1462b03a 	or	r17,r2,r17
  8025f0:	883fb326 	beq	r17,zero,8024c0 <__alt_data_end+0xff8024c0>
  8025f4:	0023883a 	mov	r17,zero
  8025f8:	042ffc34 	movhi	r16,49136
  8025fc:	003fb006 	br	8024c0 <__alt_data_end+0xff8024c0>
  802600:	1023883a 	mov	r17,r2
  802604:	003fcf06 	br	802544 <__alt_data_end+0xff802544>
  802608:	84c00044 	addi	r19,r16,1
  80260c:	003fcd06 	br	802544 <__alt_data_end+0xff802544>

00802610 <scalbn>:
  802610:	2a1ffc2c 	andhi	r8,r5,32752
  802614:	4011d53a 	srai	r8,r8,20
  802618:	defffe04 	addi	sp,sp,-8
  80261c:	dc000015 	stw	r16,0(sp)
  802620:	dfc00115 	stw	ra,4(sp)
  802624:	280f883a 	mov	r7,r5
  802628:	2015883a 	mov	r10,r4
  80262c:	3021883a 	mov	r16,r6
  802630:	40001e1e 	bne	r8,zero,8026ac <scalbn+0x9c>
  802634:	00a00034 	movhi	r2,32768
  802638:	10bfffc4 	addi	r2,r2,-1
  80263c:	2884703a 	and	r2,r5,r2
  802640:	1104b03a 	or	r2,r2,r4
  802644:	10002226 	beq	r2,zero,8026d0 <scalbn+0xc0>
  802648:	01d0d434 	movhi	r7,17232
  80264c:	000d883a 	mov	r6,zero
  802650:	08035200 	call	803520 <__muldf3>
  802654:	013ffff4 	movhi	r4,65535
  802658:	210f2c04 	addi	r4,r4,15536
  80265c:	1015883a 	mov	r10,r2
  802660:	180f883a 	mov	r7,r3
  802664:	81002a16 	blt	r16,r4,802710 <scalbn+0x100>
  802668:	191ffc2c 	andhi	r4,r3,32752
  80266c:	2009d53a 	srai	r4,r4,20
  802670:	223ff284 	addi	r8,r4,-54
  802674:	8211883a 	add	r8,r16,r8
  802678:	0081ff84 	movi	r2,2046
  80267c:	12002f16 	blt	r2,r8,80273c <scalbn+0x12c>
  802680:	0200190e 	bge	zero,r8,8026e8 <scalbn+0xd8>
  802684:	4010953a 	slli	r8,r8,20
  802688:	01600434 	movhi	r5,32784
  80268c:	297fffc4 	addi	r5,r5,-1
  802690:	194e703a 	and	r7,r3,r5
  802694:	5005883a 	mov	r2,r10
  802698:	3a06b03a 	or	r3,r7,r8
  80269c:	dfc00117 	ldw	ra,4(sp)
  8026a0:	dc000017 	ldw	r16,0(sp)
  8026a4:	dec00204 	addi	sp,sp,8
  8026a8:	f800283a 	ret
  8026ac:	0081ffc4 	movi	r2,2047
  8026b0:	2807883a 	mov	r3,r5
  8026b4:	40bfef1e 	bne	r8,r2,802674 <__alt_data_end+0xff802674>
  8026b8:	200d883a 	mov	r6,r4
  8026bc:	0802b100 	call	802b10 <__adddf3>
  8026c0:	dfc00117 	ldw	ra,4(sp)
  8026c4:	dc000017 	ldw	r16,0(sp)
  8026c8:	dec00204 	addi	sp,sp,8
  8026cc:	f800283a 	ret
  8026d0:	2005883a 	mov	r2,r4
  8026d4:	2807883a 	mov	r3,r5
  8026d8:	dfc00117 	ldw	ra,4(sp)
  8026dc:	dc000017 	ldw	r16,0(sp)
  8026e0:	dec00204 	addi	sp,sp,8
  8026e4:	f800283a 	ret
  8026e8:	00bff2c4 	movi	r2,-53
  8026ec:	4080240e 	bge	r8,r2,802780 <scalbn+0x170>
  8026f0:	00b0d414 	movui	r2,50000
  8026f4:	14001116 	blt	r2,r16,80273c <scalbn+0x12c>
  8026f8:	0130be74 	movhi	r4,49913
  8026fc:	01406974 	movhi	r5,421
  802700:	213cd644 	addi	r4,r4,-3239
  802704:	295b87c4 	addi	r5,r5,28191
  802708:	500d883a 	mov	r6,r10
  80270c:	08027ac0 	call	8027ac <copysign>
  802710:	01b0be74 	movhi	r6,49913
  802714:	01c06974 	movhi	r7,421
  802718:	31bcd644 	addi	r6,r6,-3239
  80271c:	39db87c4 	addi	r7,r7,28191
  802720:	1009883a 	mov	r4,r2
  802724:	180b883a 	mov	r5,r3
  802728:	08035200 	call	803520 <__muldf3>
  80272c:	dfc00117 	ldw	ra,4(sp)
  802730:	dc000017 	ldw	r16,0(sp)
  802734:	dec00204 	addi	sp,sp,8
  802738:	f800283a 	ret
  80273c:	01220034 	movhi	r4,34816
  802740:	015f8e34 	movhi	r5,32312
  802744:	500d883a 	mov	r6,r10
  802748:	211d6704 	addi	r4,r4,30108
  80274c:	29790f04 	addi	r5,r5,-7108
  802750:	08027ac0 	call	8027ac <copysign>
  802754:	01a20034 	movhi	r6,34816
  802758:	01df8e34 	movhi	r7,32312
  80275c:	319d6704 	addi	r6,r6,30108
  802760:	39f90f04 	addi	r7,r7,-7108
  802764:	1009883a 	mov	r4,r2
  802768:	180b883a 	mov	r5,r3
  80276c:	08035200 	call	803520 <__muldf3>
  802770:	dfc00117 	ldw	ra,4(sp)
  802774:	dc000017 	ldw	r16,0(sp)
  802778:	dec00204 	addi	sp,sp,8
  80277c:	f800283a 	ret
  802780:	42000d84 	addi	r8,r8,54
  802784:	4012953a 	slli	r9,r8,20
  802788:	01e00434 	movhi	r7,32784
  80278c:	39ffffc4 	addi	r7,r7,-1
  802790:	19ca703a 	and	r5,r3,r7
  802794:	000d883a 	mov	r6,zero
  802798:	01cf2434 	movhi	r7,15504
  80279c:	5009883a 	mov	r4,r10
  8027a0:	494ab03a 	or	r5,r9,r5
  8027a4:	08035200 	call	803520 <__muldf3>
  8027a8:	003fbc06 	br	80269c <__alt_data_end+0xff80269c>

008027ac <copysign>:
  8027ac:	2005883a 	mov	r2,r4
  8027b0:	01200034 	movhi	r4,32768
  8027b4:	213fffc4 	addi	r4,r4,-1
  8027b8:	38e0002c 	andhi	r3,r7,32768
  8027bc:	290a703a 	and	r5,r5,r4
  8027c0:	28c6b03a 	or	r3,r5,r3
  8027c4:	f800283a 	ret

008027c8 <__divsi3>:
  8027c8:	20001b16 	blt	r4,zero,802838 <__divsi3+0x70>
  8027cc:	000f883a 	mov	r7,zero
  8027d0:	28001616 	blt	r5,zero,80282c <__divsi3+0x64>
  8027d4:	200d883a 	mov	r6,r4
  8027d8:	29001a2e 	bgeu	r5,r4,802844 <__divsi3+0x7c>
  8027dc:	00800804 	movi	r2,32
  8027e0:	00c00044 	movi	r3,1
  8027e4:	00000106 	br	8027ec <__divsi3+0x24>
  8027e8:	10000d26 	beq	r2,zero,802820 <__divsi3+0x58>
  8027ec:	294b883a 	add	r5,r5,r5
  8027f0:	10bfffc4 	addi	r2,r2,-1
  8027f4:	18c7883a 	add	r3,r3,r3
  8027f8:	293ffb36 	bltu	r5,r4,8027e8 <__alt_data_end+0xff8027e8>
  8027fc:	0005883a 	mov	r2,zero
  802800:	18000726 	beq	r3,zero,802820 <__divsi3+0x58>
  802804:	0005883a 	mov	r2,zero
  802808:	31400236 	bltu	r6,r5,802814 <__divsi3+0x4c>
  80280c:	314dc83a 	sub	r6,r6,r5
  802810:	10c4b03a 	or	r2,r2,r3
  802814:	1806d07a 	srli	r3,r3,1
  802818:	280ad07a 	srli	r5,r5,1
  80281c:	183ffa1e 	bne	r3,zero,802808 <__alt_data_end+0xff802808>
  802820:	38000126 	beq	r7,zero,802828 <__divsi3+0x60>
  802824:	0085c83a 	sub	r2,zero,r2
  802828:	f800283a 	ret
  80282c:	014bc83a 	sub	r5,zero,r5
  802830:	39c0005c 	xori	r7,r7,1
  802834:	003fe706 	br	8027d4 <__alt_data_end+0xff8027d4>
  802838:	0109c83a 	sub	r4,zero,r4
  80283c:	01c00044 	movi	r7,1
  802840:	003fe306 	br	8027d0 <__alt_data_end+0xff8027d0>
  802844:	00c00044 	movi	r3,1
  802848:	003fee06 	br	802804 <__alt_data_end+0xff802804>

0080284c <__modsi3>:
  80284c:	20001716 	blt	r4,zero,8028ac <__modsi3+0x60>
  802850:	000f883a 	mov	r7,zero
  802854:	2005883a 	mov	r2,r4
  802858:	28001216 	blt	r5,zero,8028a4 <__modsi3+0x58>
  80285c:	2900162e 	bgeu	r5,r4,8028b8 <__modsi3+0x6c>
  802860:	01800804 	movi	r6,32
  802864:	00c00044 	movi	r3,1
  802868:	00000106 	br	802870 <__modsi3+0x24>
  80286c:	30000a26 	beq	r6,zero,802898 <__modsi3+0x4c>
  802870:	294b883a 	add	r5,r5,r5
  802874:	31bfffc4 	addi	r6,r6,-1
  802878:	18c7883a 	add	r3,r3,r3
  80287c:	293ffb36 	bltu	r5,r4,80286c <__alt_data_end+0xff80286c>
  802880:	18000526 	beq	r3,zero,802898 <__modsi3+0x4c>
  802884:	1806d07a 	srli	r3,r3,1
  802888:	11400136 	bltu	r2,r5,802890 <__modsi3+0x44>
  80288c:	1145c83a 	sub	r2,r2,r5
  802890:	280ad07a 	srli	r5,r5,1
  802894:	183ffb1e 	bne	r3,zero,802884 <__alt_data_end+0xff802884>
  802898:	38000126 	beq	r7,zero,8028a0 <__modsi3+0x54>
  80289c:	0085c83a 	sub	r2,zero,r2
  8028a0:	f800283a 	ret
  8028a4:	014bc83a 	sub	r5,zero,r5
  8028a8:	003fec06 	br	80285c <__alt_data_end+0xff80285c>
  8028ac:	0109c83a 	sub	r4,zero,r4
  8028b0:	01c00044 	movi	r7,1
  8028b4:	003fe706 	br	802854 <__alt_data_end+0xff802854>
  8028b8:	00c00044 	movi	r3,1
  8028bc:	003ff106 	br	802884 <__alt_data_end+0xff802884>

008028c0 <__udivsi3>:
  8028c0:	200d883a 	mov	r6,r4
  8028c4:	2900152e 	bgeu	r5,r4,80291c <__udivsi3+0x5c>
  8028c8:	28001416 	blt	r5,zero,80291c <__udivsi3+0x5c>
  8028cc:	00800804 	movi	r2,32
  8028d0:	00c00044 	movi	r3,1
  8028d4:	00000206 	br	8028e0 <__udivsi3+0x20>
  8028d8:	10000e26 	beq	r2,zero,802914 <__udivsi3+0x54>
  8028dc:	28000516 	blt	r5,zero,8028f4 <__udivsi3+0x34>
  8028e0:	294b883a 	add	r5,r5,r5
  8028e4:	10bfffc4 	addi	r2,r2,-1
  8028e8:	18c7883a 	add	r3,r3,r3
  8028ec:	293ffa36 	bltu	r5,r4,8028d8 <__alt_data_end+0xff8028d8>
  8028f0:	18000826 	beq	r3,zero,802914 <__udivsi3+0x54>
  8028f4:	0005883a 	mov	r2,zero
  8028f8:	31400236 	bltu	r6,r5,802904 <__udivsi3+0x44>
  8028fc:	314dc83a 	sub	r6,r6,r5
  802900:	10c4b03a 	or	r2,r2,r3
  802904:	1806d07a 	srli	r3,r3,1
  802908:	280ad07a 	srli	r5,r5,1
  80290c:	183ffa1e 	bne	r3,zero,8028f8 <__alt_data_end+0xff8028f8>
  802910:	f800283a 	ret
  802914:	0005883a 	mov	r2,zero
  802918:	f800283a 	ret
  80291c:	00c00044 	movi	r3,1
  802920:	003ff406 	br	8028f4 <__alt_data_end+0xff8028f4>

00802924 <__umodsi3>:
  802924:	2005883a 	mov	r2,r4
  802928:	2900122e 	bgeu	r5,r4,802974 <__umodsi3+0x50>
  80292c:	28001116 	blt	r5,zero,802974 <__umodsi3+0x50>
  802930:	01800804 	movi	r6,32
  802934:	00c00044 	movi	r3,1
  802938:	00000206 	br	802944 <__umodsi3+0x20>
  80293c:	30000c26 	beq	r6,zero,802970 <__umodsi3+0x4c>
  802940:	28000516 	blt	r5,zero,802958 <__umodsi3+0x34>
  802944:	294b883a 	add	r5,r5,r5
  802948:	31bfffc4 	addi	r6,r6,-1
  80294c:	18c7883a 	add	r3,r3,r3
  802950:	293ffa36 	bltu	r5,r4,80293c <__alt_data_end+0xff80293c>
  802954:	18000626 	beq	r3,zero,802970 <__umodsi3+0x4c>
  802958:	1806d07a 	srli	r3,r3,1
  80295c:	11400136 	bltu	r2,r5,802964 <__umodsi3+0x40>
  802960:	1145c83a 	sub	r2,r2,r5
  802964:	280ad07a 	srli	r5,r5,1
  802968:	183ffb1e 	bne	r3,zero,802958 <__alt_data_end+0xff802958>
  80296c:	f800283a 	ret
  802970:	f800283a 	ret
  802974:	00c00044 	movi	r3,1
  802978:	003ff706 	br	802958 <__alt_data_end+0xff802958>

0080297c <__fixsfsi>:
  80297c:	200ad5fa 	srli	r5,r4,23
  802980:	00c02034 	movhi	r3,128
  802984:	18ffffc4 	addi	r3,r3,-1
  802988:	29403fcc 	andi	r5,r5,255
  80298c:	00801f84 	movi	r2,126
  802990:	1906703a 	and	r3,r3,r4
  802994:	2008d7fa 	srli	r4,r4,31
  802998:	11400e0e 	bge	r2,r5,8029d4 <__fixsfsi+0x58>
  80299c:	00802744 	movi	r2,157
  8029a0:	11400816 	blt	r2,r5,8029c4 <__fixsfsi+0x48>
  8029a4:	00802544 	movi	r2,149
  8029a8:	18c02034 	orhi	r3,r3,128
  8029ac:	11400b0e 	bge	r2,r5,8029dc <__fixsfsi+0x60>
  8029b0:	28bfda84 	addi	r2,r5,-150
  8029b4:	1884983a 	sll	r2,r3,r2
  8029b8:	20000726 	beq	r4,zero,8029d8 <__fixsfsi+0x5c>
  8029bc:	0085c83a 	sub	r2,zero,r2
  8029c0:	f800283a 	ret
  8029c4:	00a00034 	movhi	r2,32768
  8029c8:	10bfffc4 	addi	r2,r2,-1
  8029cc:	2085883a 	add	r2,r4,r2
  8029d0:	f800283a 	ret
  8029d4:	0005883a 	mov	r2,zero
  8029d8:	f800283a 	ret
  8029dc:	00802584 	movi	r2,150
  8029e0:	1145c83a 	sub	r2,r2,r5
  8029e4:	1884d83a 	srl	r2,r3,r2
  8029e8:	003ff306 	br	8029b8 <__alt_data_end+0xff8029b8>

008029ec <__floatsisf>:
  8029ec:	defffd04 	addi	sp,sp,-12
  8029f0:	dfc00215 	stw	ra,8(sp)
  8029f4:	dc400115 	stw	r17,4(sp)
  8029f8:	dc000015 	stw	r16,0(sp)
  8029fc:	20003526 	beq	r4,zero,802ad4 <__floatsisf+0xe8>
  802a00:	2021883a 	mov	r16,r4
  802a04:	2022d7fa 	srli	r17,r4,31
  802a08:	20003616 	blt	r4,zero,802ae4 <__floatsisf+0xf8>
  802a0c:	8009883a 	mov	r4,r16
  802a10:	08049480 	call	804948 <__clzsi2>
  802a14:	00c02784 	movi	r3,158
  802a18:	1887c83a 	sub	r3,r3,r2
  802a1c:	01002584 	movi	r4,150
  802a20:	20c01416 	blt	r4,r3,802a74 <__floatsisf+0x88>
  802a24:	20c9c83a 	sub	r4,r4,r3
  802a28:	8120983a 	sll	r16,r16,r4
  802a2c:	00802034 	movhi	r2,128
  802a30:	10bfffc4 	addi	r2,r2,-1
  802a34:	8809883a 	mov	r4,r17
  802a38:	80a0703a 	and	r16,r16,r2
  802a3c:	18803fcc 	andi	r2,r3,255
  802a40:	100695fa 	slli	r3,r2,23
  802a44:	20803fcc 	andi	r2,r4,255
  802a48:	100897fa 	slli	r4,r2,31
  802a4c:	00802034 	movhi	r2,128
  802a50:	10bfffc4 	addi	r2,r2,-1
  802a54:	8084703a 	and	r2,r16,r2
  802a58:	10c4b03a 	or	r2,r2,r3
  802a5c:	1104b03a 	or	r2,r2,r4
  802a60:	dfc00217 	ldw	ra,8(sp)
  802a64:	dc400117 	ldw	r17,4(sp)
  802a68:	dc000017 	ldw	r16,0(sp)
  802a6c:	dec00304 	addi	sp,sp,12
  802a70:	f800283a 	ret
  802a74:	01002644 	movi	r4,153
  802a78:	20c01c16 	blt	r4,r3,802aec <__floatsisf+0x100>
  802a7c:	20c9c83a 	sub	r4,r4,r3
  802a80:	8120983a 	sll	r16,r16,r4
  802a84:	013f0034 	movhi	r4,64512
  802a88:	213fffc4 	addi	r4,r4,-1
  802a8c:	814001cc 	andi	r5,r16,7
  802a90:	8108703a 	and	r4,r16,r4
  802a94:	28000426 	beq	r5,zero,802aa8 <__floatsisf+0xbc>
  802a98:	840003cc 	andi	r16,r16,15
  802a9c:	01400104 	movi	r5,4
  802aa0:	81400126 	beq	r16,r5,802aa8 <__floatsisf+0xbc>
  802aa4:	2149883a 	add	r4,r4,r5
  802aa8:	2141002c 	andhi	r5,r4,1024
  802aac:	28000526 	beq	r5,zero,802ac4 <__floatsisf+0xd8>
  802ab0:	00c027c4 	movi	r3,159
  802ab4:	1887c83a 	sub	r3,r3,r2
  802ab8:	00bf0034 	movhi	r2,64512
  802abc:	10bfffc4 	addi	r2,r2,-1
  802ac0:	2088703a 	and	r4,r4,r2
  802ac4:	202091ba 	slli	r16,r4,6
  802ac8:	8809883a 	mov	r4,r17
  802acc:	8020d27a 	srli	r16,r16,9
  802ad0:	003fda06 	br	802a3c <__alt_data_end+0xff802a3c>
  802ad4:	0009883a 	mov	r4,zero
  802ad8:	0007883a 	mov	r3,zero
  802adc:	0021883a 	mov	r16,zero
  802ae0:	003fd606 	br	802a3c <__alt_data_end+0xff802a3c>
  802ae4:	0121c83a 	sub	r16,zero,r4
  802ae8:	003fc806 	br	802a0c <__alt_data_end+0xff802a0c>
  802aec:	01002e44 	movi	r4,185
  802af0:	20c9c83a 	sub	r4,r4,r3
  802af4:	01400144 	movi	r5,5
  802af8:	8108983a 	sll	r4,r16,r4
  802afc:	288bc83a 	sub	r5,r5,r2
  802b00:	8160d83a 	srl	r16,r16,r5
  802b04:	2008c03a 	cmpne	r4,r4,zero
  802b08:	8120b03a 	or	r16,r16,r4
  802b0c:	003fdd06 	br	802a84 <__alt_data_end+0xff802a84>

00802b10 <__adddf3>:
  802b10:	02c00434 	movhi	r11,16
  802b14:	5affffc4 	addi	r11,r11,-1
  802b18:	2806d7fa 	srli	r3,r5,31
  802b1c:	2ad4703a 	and	r10,r5,r11
  802b20:	3ad2703a 	and	r9,r7,r11
  802b24:	3804d53a 	srli	r2,r7,20
  802b28:	3018d77a 	srli	r12,r6,29
  802b2c:	280ad53a 	srli	r5,r5,20
  802b30:	501490fa 	slli	r10,r10,3
  802b34:	2010d77a 	srli	r8,r4,29
  802b38:	481290fa 	slli	r9,r9,3
  802b3c:	380ed7fa 	srli	r7,r7,31
  802b40:	defffb04 	addi	sp,sp,-20
  802b44:	dc800215 	stw	r18,8(sp)
  802b48:	dc400115 	stw	r17,4(sp)
  802b4c:	dc000015 	stw	r16,0(sp)
  802b50:	dfc00415 	stw	ra,16(sp)
  802b54:	dcc00315 	stw	r19,12(sp)
  802b58:	1c803fcc 	andi	r18,r3,255
  802b5c:	2c01ffcc 	andi	r16,r5,2047
  802b60:	5210b03a 	or	r8,r10,r8
  802b64:	202290fa 	slli	r17,r4,3
  802b68:	1081ffcc 	andi	r2,r2,2047
  802b6c:	4b12b03a 	or	r9,r9,r12
  802b70:	300c90fa 	slli	r6,r6,3
  802b74:	91c07526 	beq	r18,r7,802d4c <__adddf3+0x23c>
  802b78:	8087c83a 	sub	r3,r16,r2
  802b7c:	00c0ab0e 	bge	zero,r3,802e2c <__adddf3+0x31c>
  802b80:	10002a1e 	bne	r2,zero,802c2c <__adddf3+0x11c>
  802b84:	4984b03a 	or	r2,r9,r6
  802b88:	1000961e 	bne	r2,zero,802de4 <__adddf3+0x2d4>
  802b8c:	888001cc 	andi	r2,r17,7
  802b90:	10000726 	beq	r2,zero,802bb0 <__adddf3+0xa0>
  802b94:	888003cc 	andi	r2,r17,15
  802b98:	00c00104 	movi	r3,4
  802b9c:	10c00426 	beq	r2,r3,802bb0 <__adddf3+0xa0>
  802ba0:	88c7883a 	add	r3,r17,r3
  802ba4:	1c63803a 	cmpltu	r17,r3,r17
  802ba8:	4451883a 	add	r8,r8,r17
  802bac:	1823883a 	mov	r17,r3
  802bb0:	4080202c 	andhi	r2,r8,128
  802bb4:	10005926 	beq	r2,zero,802d1c <__adddf3+0x20c>
  802bb8:	84000044 	addi	r16,r16,1
  802bbc:	0081ffc4 	movi	r2,2047
  802bc0:	8080ba26 	beq	r16,r2,802eac <__adddf3+0x39c>
  802bc4:	00bfe034 	movhi	r2,65408
  802bc8:	10bfffc4 	addi	r2,r2,-1
  802bcc:	4090703a 	and	r8,r8,r2
  802bd0:	4004977a 	slli	r2,r8,29
  802bd4:	4010927a 	slli	r8,r8,9
  802bd8:	8822d0fa 	srli	r17,r17,3
  802bdc:	8401ffcc 	andi	r16,r16,2047
  802be0:	4010d33a 	srli	r8,r8,12
  802be4:	9007883a 	mov	r3,r18
  802be8:	1444b03a 	or	r2,r2,r17
  802bec:	8401ffcc 	andi	r16,r16,2047
  802bf0:	8020953a 	slli	r16,r16,20
  802bf4:	18c03fcc 	andi	r3,r3,255
  802bf8:	01000434 	movhi	r4,16
  802bfc:	213fffc4 	addi	r4,r4,-1
  802c00:	180697fa 	slli	r3,r3,31
  802c04:	4110703a 	and	r8,r8,r4
  802c08:	4410b03a 	or	r8,r8,r16
  802c0c:	40c6b03a 	or	r3,r8,r3
  802c10:	dfc00417 	ldw	ra,16(sp)
  802c14:	dcc00317 	ldw	r19,12(sp)
  802c18:	dc800217 	ldw	r18,8(sp)
  802c1c:	dc400117 	ldw	r17,4(sp)
  802c20:	dc000017 	ldw	r16,0(sp)
  802c24:	dec00504 	addi	sp,sp,20
  802c28:	f800283a 	ret
  802c2c:	0081ffc4 	movi	r2,2047
  802c30:	80bfd626 	beq	r16,r2,802b8c <__alt_data_end+0xff802b8c>
  802c34:	4a402034 	orhi	r9,r9,128
  802c38:	00800e04 	movi	r2,56
  802c3c:	10c09f16 	blt	r2,r3,802ebc <__adddf3+0x3ac>
  802c40:	008007c4 	movi	r2,31
  802c44:	10c0c216 	blt	r2,r3,802f50 <__adddf3+0x440>
  802c48:	00800804 	movi	r2,32
  802c4c:	10c5c83a 	sub	r2,r2,r3
  802c50:	488a983a 	sll	r5,r9,r2
  802c54:	30c8d83a 	srl	r4,r6,r3
  802c58:	3084983a 	sll	r2,r6,r2
  802c5c:	48c6d83a 	srl	r3,r9,r3
  802c60:	290cb03a 	or	r6,r5,r4
  802c64:	1004c03a 	cmpne	r2,r2,zero
  802c68:	308cb03a 	or	r6,r6,r2
  802c6c:	898dc83a 	sub	r6,r17,r6
  802c70:	89a3803a 	cmpltu	r17,r17,r6
  802c74:	40d1c83a 	sub	r8,r8,r3
  802c78:	4451c83a 	sub	r8,r8,r17
  802c7c:	3023883a 	mov	r17,r6
  802c80:	4080202c 	andhi	r2,r8,128
  802c84:	10002326 	beq	r2,zero,802d14 <__adddf3+0x204>
  802c88:	04c02034 	movhi	r19,128
  802c8c:	9cffffc4 	addi	r19,r19,-1
  802c90:	44e6703a 	and	r19,r8,r19
  802c94:	98007626 	beq	r19,zero,802e70 <__adddf3+0x360>
  802c98:	9809883a 	mov	r4,r19
  802c9c:	08049480 	call	804948 <__clzsi2>
  802ca0:	10fffe04 	addi	r3,r2,-8
  802ca4:	010007c4 	movi	r4,31
  802ca8:	20c07716 	blt	r4,r3,802e88 <__adddf3+0x378>
  802cac:	00800804 	movi	r2,32
  802cb0:	10c5c83a 	sub	r2,r2,r3
  802cb4:	8884d83a 	srl	r2,r17,r2
  802cb8:	98d0983a 	sll	r8,r19,r3
  802cbc:	88e2983a 	sll	r17,r17,r3
  802cc0:	1204b03a 	or	r2,r2,r8
  802cc4:	1c007416 	blt	r3,r16,802e98 <__adddf3+0x388>
  802cc8:	1c21c83a 	sub	r16,r3,r16
  802ccc:	82000044 	addi	r8,r16,1
  802cd0:	00c007c4 	movi	r3,31
  802cd4:	1a009116 	blt	r3,r8,802f1c <__adddf3+0x40c>
  802cd8:	00c00804 	movi	r3,32
  802cdc:	1a07c83a 	sub	r3,r3,r8
  802ce0:	8a08d83a 	srl	r4,r17,r8
  802ce4:	88e2983a 	sll	r17,r17,r3
  802ce8:	10c6983a 	sll	r3,r2,r3
  802cec:	1210d83a 	srl	r8,r2,r8
  802cf0:	8804c03a 	cmpne	r2,r17,zero
  802cf4:	1906b03a 	or	r3,r3,r4
  802cf8:	18a2b03a 	or	r17,r3,r2
  802cfc:	0021883a 	mov	r16,zero
  802d00:	003fa206 	br	802b8c <__alt_data_end+0xff802b8c>
  802d04:	1890b03a 	or	r8,r3,r2
  802d08:	40017d26 	beq	r8,zero,803300 <__adddf3+0x7f0>
  802d0c:	1011883a 	mov	r8,r2
  802d10:	1823883a 	mov	r17,r3
  802d14:	888001cc 	andi	r2,r17,7
  802d18:	103f9e1e 	bne	r2,zero,802b94 <__alt_data_end+0xff802b94>
  802d1c:	4004977a 	slli	r2,r8,29
  802d20:	8822d0fa 	srli	r17,r17,3
  802d24:	4010d0fa 	srli	r8,r8,3
  802d28:	9007883a 	mov	r3,r18
  802d2c:	1444b03a 	or	r2,r2,r17
  802d30:	0101ffc4 	movi	r4,2047
  802d34:	81002426 	beq	r16,r4,802dc8 <__adddf3+0x2b8>
  802d38:	8120703a 	and	r16,r16,r4
  802d3c:	01000434 	movhi	r4,16
  802d40:	213fffc4 	addi	r4,r4,-1
  802d44:	4110703a 	and	r8,r8,r4
  802d48:	003fa806 	br	802bec <__alt_data_end+0xff802bec>
  802d4c:	8089c83a 	sub	r4,r16,r2
  802d50:	01005e0e 	bge	zero,r4,802ecc <__adddf3+0x3bc>
  802d54:	10002b26 	beq	r2,zero,802e04 <__adddf3+0x2f4>
  802d58:	0081ffc4 	movi	r2,2047
  802d5c:	80bf8b26 	beq	r16,r2,802b8c <__alt_data_end+0xff802b8c>
  802d60:	4a402034 	orhi	r9,r9,128
  802d64:	00800e04 	movi	r2,56
  802d68:	1100a40e 	bge	r2,r4,802ffc <__adddf3+0x4ec>
  802d6c:	498cb03a 	or	r6,r9,r6
  802d70:	300ac03a 	cmpne	r5,r6,zero
  802d74:	0013883a 	mov	r9,zero
  802d78:	2c4b883a 	add	r5,r5,r17
  802d7c:	2c63803a 	cmpltu	r17,r5,r17
  802d80:	4a11883a 	add	r8,r9,r8
  802d84:	8a11883a 	add	r8,r17,r8
  802d88:	2823883a 	mov	r17,r5
  802d8c:	4080202c 	andhi	r2,r8,128
  802d90:	103fe026 	beq	r2,zero,802d14 <__alt_data_end+0xff802d14>
  802d94:	84000044 	addi	r16,r16,1
  802d98:	0081ffc4 	movi	r2,2047
  802d9c:	8080d226 	beq	r16,r2,8030e8 <__adddf3+0x5d8>
  802da0:	00bfe034 	movhi	r2,65408
  802da4:	10bfffc4 	addi	r2,r2,-1
  802da8:	4090703a 	and	r8,r8,r2
  802dac:	880ad07a 	srli	r5,r17,1
  802db0:	400897fa 	slli	r4,r8,31
  802db4:	88c0004c 	andi	r3,r17,1
  802db8:	28e2b03a 	or	r17,r5,r3
  802dbc:	4010d07a 	srli	r8,r8,1
  802dc0:	2462b03a 	or	r17,r4,r17
  802dc4:	003f7106 	br	802b8c <__alt_data_end+0xff802b8c>
  802dc8:	4088b03a 	or	r4,r8,r2
  802dcc:	20014526 	beq	r4,zero,8032e4 <__adddf3+0x7d4>
  802dd0:	01000434 	movhi	r4,16
  802dd4:	42000234 	orhi	r8,r8,8
  802dd8:	213fffc4 	addi	r4,r4,-1
  802ddc:	4110703a 	and	r8,r8,r4
  802de0:	003f8206 	br	802bec <__alt_data_end+0xff802bec>
  802de4:	18ffffc4 	addi	r3,r3,-1
  802de8:	1800491e 	bne	r3,zero,802f10 <__adddf3+0x400>
  802dec:	898bc83a 	sub	r5,r17,r6
  802df0:	8963803a 	cmpltu	r17,r17,r5
  802df4:	4251c83a 	sub	r8,r8,r9
  802df8:	4451c83a 	sub	r8,r8,r17
  802dfc:	2823883a 	mov	r17,r5
  802e00:	003f9f06 	br	802c80 <__alt_data_end+0xff802c80>
  802e04:	4984b03a 	or	r2,r9,r6
  802e08:	103f6026 	beq	r2,zero,802b8c <__alt_data_end+0xff802b8c>
  802e0c:	213fffc4 	addi	r4,r4,-1
  802e10:	2000931e 	bne	r4,zero,803060 <__adddf3+0x550>
  802e14:	898d883a 	add	r6,r17,r6
  802e18:	3463803a 	cmpltu	r17,r6,r17
  802e1c:	4251883a 	add	r8,r8,r9
  802e20:	8a11883a 	add	r8,r17,r8
  802e24:	3023883a 	mov	r17,r6
  802e28:	003fd806 	br	802d8c <__alt_data_end+0xff802d8c>
  802e2c:	1800541e 	bne	r3,zero,802f80 <__adddf3+0x470>
  802e30:	80800044 	addi	r2,r16,1
  802e34:	1081ffcc 	andi	r2,r2,2047
  802e38:	00c00044 	movi	r3,1
  802e3c:	1880a00e 	bge	r3,r2,8030c0 <__adddf3+0x5b0>
  802e40:	8989c83a 	sub	r4,r17,r6
  802e44:	8905803a 	cmpltu	r2,r17,r4
  802e48:	4267c83a 	sub	r19,r8,r9
  802e4c:	98a7c83a 	sub	r19,r19,r2
  802e50:	9880202c 	andhi	r2,r19,128
  802e54:	10006326 	beq	r2,zero,802fe4 <__adddf3+0x4d4>
  802e58:	3463c83a 	sub	r17,r6,r17
  802e5c:	4a07c83a 	sub	r3,r9,r8
  802e60:	344d803a 	cmpltu	r6,r6,r17
  802e64:	19a7c83a 	sub	r19,r3,r6
  802e68:	3825883a 	mov	r18,r7
  802e6c:	983f8a1e 	bne	r19,zero,802c98 <__alt_data_end+0xff802c98>
  802e70:	8809883a 	mov	r4,r17
  802e74:	08049480 	call	804948 <__clzsi2>
  802e78:	10800804 	addi	r2,r2,32
  802e7c:	10fffe04 	addi	r3,r2,-8
  802e80:	010007c4 	movi	r4,31
  802e84:	20ff890e 	bge	r4,r3,802cac <__alt_data_end+0xff802cac>
  802e88:	10bff604 	addi	r2,r2,-40
  802e8c:	8884983a 	sll	r2,r17,r2
  802e90:	0023883a 	mov	r17,zero
  802e94:	1c3f8c0e 	bge	r3,r16,802cc8 <__alt_data_end+0xff802cc8>
  802e98:	023fe034 	movhi	r8,65408
  802e9c:	423fffc4 	addi	r8,r8,-1
  802ea0:	80e1c83a 	sub	r16,r16,r3
  802ea4:	1210703a 	and	r8,r2,r8
  802ea8:	003f3806 	br	802b8c <__alt_data_end+0xff802b8c>
  802eac:	9007883a 	mov	r3,r18
  802eb0:	0011883a 	mov	r8,zero
  802eb4:	0005883a 	mov	r2,zero
  802eb8:	003f4c06 	br	802bec <__alt_data_end+0xff802bec>
  802ebc:	498cb03a 	or	r6,r9,r6
  802ec0:	300cc03a 	cmpne	r6,r6,zero
  802ec4:	0007883a 	mov	r3,zero
  802ec8:	003f6806 	br	802c6c <__alt_data_end+0xff802c6c>
  802ecc:	20009c1e 	bne	r4,zero,803140 <__adddf3+0x630>
  802ed0:	80800044 	addi	r2,r16,1
  802ed4:	1141ffcc 	andi	r5,r2,2047
  802ed8:	01000044 	movi	r4,1
  802edc:	2140670e 	bge	r4,r5,80307c <__adddf3+0x56c>
  802ee0:	0101ffc4 	movi	r4,2047
  802ee4:	11007f26 	beq	r2,r4,8030e4 <__adddf3+0x5d4>
  802ee8:	898d883a 	add	r6,r17,r6
  802eec:	4247883a 	add	r3,r8,r9
  802ef0:	3451803a 	cmpltu	r8,r6,r17
  802ef4:	40d1883a 	add	r8,r8,r3
  802ef8:	402297fa 	slli	r17,r8,31
  802efc:	300cd07a 	srli	r6,r6,1
  802f00:	4010d07a 	srli	r8,r8,1
  802f04:	1021883a 	mov	r16,r2
  802f08:	89a2b03a 	or	r17,r17,r6
  802f0c:	003f1f06 	br	802b8c <__alt_data_end+0xff802b8c>
  802f10:	0081ffc4 	movi	r2,2047
  802f14:	80bf481e 	bne	r16,r2,802c38 <__alt_data_end+0xff802c38>
  802f18:	003f1c06 	br	802b8c <__alt_data_end+0xff802b8c>
  802f1c:	843ff844 	addi	r16,r16,-31
  802f20:	01000804 	movi	r4,32
  802f24:	1406d83a 	srl	r3,r2,r16
  802f28:	41005026 	beq	r8,r4,80306c <__adddf3+0x55c>
  802f2c:	01001004 	movi	r4,64
  802f30:	2211c83a 	sub	r8,r4,r8
  802f34:	1204983a 	sll	r2,r2,r8
  802f38:	88a2b03a 	or	r17,r17,r2
  802f3c:	8822c03a 	cmpne	r17,r17,zero
  802f40:	1c62b03a 	or	r17,r3,r17
  802f44:	0011883a 	mov	r8,zero
  802f48:	0021883a 	mov	r16,zero
  802f4c:	003f7106 	br	802d14 <__alt_data_end+0xff802d14>
  802f50:	193ff804 	addi	r4,r3,-32
  802f54:	00800804 	movi	r2,32
  802f58:	4908d83a 	srl	r4,r9,r4
  802f5c:	18804526 	beq	r3,r2,803074 <__adddf3+0x564>
  802f60:	00801004 	movi	r2,64
  802f64:	10c5c83a 	sub	r2,r2,r3
  802f68:	4886983a 	sll	r3,r9,r2
  802f6c:	198cb03a 	or	r6,r3,r6
  802f70:	300cc03a 	cmpne	r6,r6,zero
  802f74:	218cb03a 	or	r6,r4,r6
  802f78:	0007883a 	mov	r3,zero
  802f7c:	003f3b06 	br	802c6c <__alt_data_end+0xff802c6c>
  802f80:	80002a26 	beq	r16,zero,80302c <__adddf3+0x51c>
  802f84:	0101ffc4 	movi	r4,2047
  802f88:	11006826 	beq	r2,r4,80312c <__adddf3+0x61c>
  802f8c:	00c7c83a 	sub	r3,zero,r3
  802f90:	42002034 	orhi	r8,r8,128
  802f94:	01000e04 	movi	r4,56
  802f98:	20c07c16 	blt	r4,r3,80318c <__adddf3+0x67c>
  802f9c:	010007c4 	movi	r4,31
  802fa0:	20c0da16 	blt	r4,r3,80330c <__adddf3+0x7fc>
  802fa4:	01000804 	movi	r4,32
  802fa8:	20c9c83a 	sub	r4,r4,r3
  802fac:	4114983a 	sll	r10,r8,r4
  802fb0:	88cad83a 	srl	r5,r17,r3
  802fb4:	8908983a 	sll	r4,r17,r4
  802fb8:	40c6d83a 	srl	r3,r8,r3
  802fbc:	5162b03a 	or	r17,r10,r5
  802fc0:	2008c03a 	cmpne	r4,r4,zero
  802fc4:	8922b03a 	or	r17,r17,r4
  802fc8:	3463c83a 	sub	r17,r6,r17
  802fcc:	48c7c83a 	sub	r3,r9,r3
  802fd0:	344d803a 	cmpltu	r6,r6,r17
  802fd4:	1991c83a 	sub	r8,r3,r6
  802fd8:	1021883a 	mov	r16,r2
  802fdc:	3825883a 	mov	r18,r7
  802fe0:	003f2706 	br	802c80 <__alt_data_end+0xff802c80>
  802fe4:	24d0b03a 	or	r8,r4,r19
  802fe8:	40001b1e 	bne	r8,zero,803058 <__adddf3+0x548>
  802fec:	0005883a 	mov	r2,zero
  802ff0:	0007883a 	mov	r3,zero
  802ff4:	0021883a 	mov	r16,zero
  802ff8:	003f4d06 	br	802d30 <__alt_data_end+0xff802d30>
  802ffc:	008007c4 	movi	r2,31
  803000:	11003c16 	blt	r2,r4,8030f4 <__adddf3+0x5e4>
  803004:	00800804 	movi	r2,32
  803008:	1105c83a 	sub	r2,r2,r4
  80300c:	488e983a 	sll	r7,r9,r2
  803010:	310ad83a 	srl	r5,r6,r4
  803014:	3084983a 	sll	r2,r6,r2
  803018:	4912d83a 	srl	r9,r9,r4
  80301c:	394ab03a 	or	r5,r7,r5
  803020:	1004c03a 	cmpne	r2,r2,zero
  803024:	288ab03a 	or	r5,r5,r2
  803028:	003f5306 	br	802d78 <__alt_data_end+0xff802d78>
  80302c:	4448b03a 	or	r4,r8,r17
  803030:	20003e26 	beq	r4,zero,80312c <__adddf3+0x61c>
  803034:	00c6303a 	nor	r3,zero,r3
  803038:	18003a1e 	bne	r3,zero,803124 <__adddf3+0x614>
  80303c:	3463c83a 	sub	r17,r6,r17
  803040:	4a07c83a 	sub	r3,r9,r8
  803044:	344d803a 	cmpltu	r6,r6,r17
  803048:	1991c83a 	sub	r8,r3,r6
  80304c:	1021883a 	mov	r16,r2
  803050:	3825883a 	mov	r18,r7
  803054:	003f0a06 	br	802c80 <__alt_data_end+0xff802c80>
  803058:	2023883a 	mov	r17,r4
  80305c:	003f0d06 	br	802c94 <__alt_data_end+0xff802c94>
  803060:	0081ffc4 	movi	r2,2047
  803064:	80bf3f1e 	bne	r16,r2,802d64 <__alt_data_end+0xff802d64>
  803068:	003ec806 	br	802b8c <__alt_data_end+0xff802b8c>
  80306c:	0005883a 	mov	r2,zero
  803070:	003fb106 	br	802f38 <__alt_data_end+0xff802f38>
  803074:	0007883a 	mov	r3,zero
  803078:	003fbc06 	br	802f6c <__alt_data_end+0xff802f6c>
  80307c:	4444b03a 	or	r2,r8,r17
  803080:	8000871e 	bne	r16,zero,8032a0 <__adddf3+0x790>
  803084:	1000ba26 	beq	r2,zero,803370 <__adddf3+0x860>
  803088:	4984b03a 	or	r2,r9,r6
  80308c:	103ebf26 	beq	r2,zero,802b8c <__alt_data_end+0xff802b8c>
  803090:	8985883a 	add	r2,r17,r6
  803094:	4247883a 	add	r3,r8,r9
  803098:	1451803a 	cmpltu	r8,r2,r17
  80309c:	40d1883a 	add	r8,r8,r3
  8030a0:	40c0202c 	andhi	r3,r8,128
  8030a4:	1023883a 	mov	r17,r2
  8030a8:	183f1a26 	beq	r3,zero,802d14 <__alt_data_end+0xff802d14>
  8030ac:	00bfe034 	movhi	r2,65408
  8030b0:	10bfffc4 	addi	r2,r2,-1
  8030b4:	2021883a 	mov	r16,r4
  8030b8:	4090703a 	and	r8,r8,r2
  8030bc:	003eb306 	br	802b8c <__alt_data_end+0xff802b8c>
  8030c0:	4444b03a 	or	r2,r8,r17
  8030c4:	8000291e 	bne	r16,zero,80316c <__adddf3+0x65c>
  8030c8:	10004b1e 	bne	r2,zero,8031f8 <__adddf3+0x6e8>
  8030cc:	4990b03a 	or	r8,r9,r6
  8030d0:	40008b26 	beq	r8,zero,803300 <__adddf3+0x7f0>
  8030d4:	4811883a 	mov	r8,r9
  8030d8:	3023883a 	mov	r17,r6
  8030dc:	3825883a 	mov	r18,r7
  8030e0:	003eaa06 	br	802b8c <__alt_data_end+0xff802b8c>
  8030e4:	1021883a 	mov	r16,r2
  8030e8:	0011883a 	mov	r8,zero
  8030ec:	0005883a 	mov	r2,zero
  8030f0:	003f0f06 	br	802d30 <__alt_data_end+0xff802d30>
  8030f4:	217ff804 	addi	r5,r4,-32
  8030f8:	00800804 	movi	r2,32
  8030fc:	494ad83a 	srl	r5,r9,r5
  803100:	20807d26 	beq	r4,r2,8032f8 <__adddf3+0x7e8>
  803104:	00801004 	movi	r2,64
  803108:	1109c83a 	sub	r4,r2,r4
  80310c:	4912983a 	sll	r9,r9,r4
  803110:	498cb03a 	or	r6,r9,r6
  803114:	300cc03a 	cmpne	r6,r6,zero
  803118:	298ab03a 	or	r5,r5,r6
  80311c:	0013883a 	mov	r9,zero
  803120:	003f1506 	br	802d78 <__alt_data_end+0xff802d78>
  803124:	0101ffc4 	movi	r4,2047
  803128:	113f9a1e 	bne	r2,r4,802f94 <__alt_data_end+0xff802f94>
  80312c:	4811883a 	mov	r8,r9
  803130:	3023883a 	mov	r17,r6
  803134:	1021883a 	mov	r16,r2
  803138:	3825883a 	mov	r18,r7
  80313c:	003e9306 	br	802b8c <__alt_data_end+0xff802b8c>
  803140:	8000161e 	bne	r16,zero,80319c <__adddf3+0x68c>
  803144:	444ab03a 	or	r5,r8,r17
  803148:	28005126 	beq	r5,zero,803290 <__adddf3+0x780>
  80314c:	0108303a 	nor	r4,zero,r4
  803150:	20004d1e 	bne	r4,zero,803288 <__adddf3+0x778>
  803154:	89a3883a 	add	r17,r17,r6
  803158:	4253883a 	add	r9,r8,r9
  80315c:	898d803a 	cmpltu	r6,r17,r6
  803160:	3251883a 	add	r8,r6,r9
  803164:	1021883a 	mov	r16,r2
  803168:	003f0806 	br	802d8c <__alt_data_end+0xff802d8c>
  80316c:	1000301e 	bne	r2,zero,803230 <__adddf3+0x720>
  803170:	4984b03a 	or	r2,r9,r6
  803174:	10007126 	beq	r2,zero,80333c <__adddf3+0x82c>
  803178:	4811883a 	mov	r8,r9
  80317c:	3023883a 	mov	r17,r6
  803180:	3825883a 	mov	r18,r7
  803184:	0401ffc4 	movi	r16,2047
  803188:	003e8006 	br	802b8c <__alt_data_end+0xff802b8c>
  80318c:	4462b03a 	or	r17,r8,r17
  803190:	8822c03a 	cmpne	r17,r17,zero
  803194:	0007883a 	mov	r3,zero
  803198:	003f8b06 	br	802fc8 <__alt_data_end+0xff802fc8>
  80319c:	0141ffc4 	movi	r5,2047
  8031a0:	11403b26 	beq	r2,r5,803290 <__adddf3+0x780>
  8031a4:	0109c83a 	sub	r4,zero,r4
  8031a8:	42002034 	orhi	r8,r8,128
  8031ac:	01400e04 	movi	r5,56
  8031b0:	29006716 	blt	r5,r4,803350 <__adddf3+0x840>
  8031b4:	014007c4 	movi	r5,31
  8031b8:	29007016 	blt	r5,r4,80337c <__adddf3+0x86c>
  8031bc:	01400804 	movi	r5,32
  8031c0:	290bc83a 	sub	r5,r5,r4
  8031c4:	4154983a 	sll	r10,r8,r5
  8031c8:	890ed83a 	srl	r7,r17,r4
  8031cc:	894a983a 	sll	r5,r17,r5
  8031d0:	4108d83a 	srl	r4,r8,r4
  8031d4:	51e2b03a 	or	r17,r10,r7
  8031d8:	280ac03a 	cmpne	r5,r5,zero
  8031dc:	8962b03a 	or	r17,r17,r5
  8031e0:	89a3883a 	add	r17,r17,r6
  8031e4:	2253883a 	add	r9,r4,r9
  8031e8:	898d803a 	cmpltu	r6,r17,r6
  8031ec:	3251883a 	add	r8,r6,r9
  8031f0:	1021883a 	mov	r16,r2
  8031f4:	003ee506 	br	802d8c <__alt_data_end+0xff802d8c>
  8031f8:	4984b03a 	or	r2,r9,r6
  8031fc:	103e6326 	beq	r2,zero,802b8c <__alt_data_end+0xff802b8c>
  803200:	8987c83a 	sub	r3,r17,r6
  803204:	88c9803a 	cmpltu	r4,r17,r3
  803208:	4245c83a 	sub	r2,r8,r9
  80320c:	1105c83a 	sub	r2,r2,r4
  803210:	1100202c 	andhi	r4,r2,128
  803214:	203ebb26 	beq	r4,zero,802d04 <__alt_data_end+0xff802d04>
  803218:	3463c83a 	sub	r17,r6,r17
  80321c:	4a07c83a 	sub	r3,r9,r8
  803220:	344d803a 	cmpltu	r6,r6,r17
  803224:	1991c83a 	sub	r8,r3,r6
  803228:	3825883a 	mov	r18,r7
  80322c:	003e5706 	br	802b8c <__alt_data_end+0xff802b8c>
  803230:	4984b03a 	or	r2,r9,r6
  803234:	10002e26 	beq	r2,zero,8032f0 <__adddf3+0x7e0>
  803238:	4004d0fa 	srli	r2,r8,3
  80323c:	8822d0fa 	srli	r17,r17,3
  803240:	4010977a 	slli	r8,r8,29
  803244:	10c0022c 	andhi	r3,r2,8
  803248:	4462b03a 	or	r17,r8,r17
  80324c:	18000826 	beq	r3,zero,803270 <__adddf3+0x760>
  803250:	4808d0fa 	srli	r4,r9,3
  803254:	20c0022c 	andhi	r3,r4,8
  803258:	1800051e 	bne	r3,zero,803270 <__adddf3+0x760>
  80325c:	300cd0fa 	srli	r6,r6,3
  803260:	4806977a 	slli	r3,r9,29
  803264:	2005883a 	mov	r2,r4
  803268:	3825883a 	mov	r18,r7
  80326c:	19a2b03a 	or	r17,r3,r6
  803270:	8810d77a 	srli	r8,r17,29
  803274:	100490fa 	slli	r2,r2,3
  803278:	882290fa 	slli	r17,r17,3
  80327c:	0401ffc4 	movi	r16,2047
  803280:	4090b03a 	or	r8,r8,r2
  803284:	003e4106 	br	802b8c <__alt_data_end+0xff802b8c>
  803288:	0141ffc4 	movi	r5,2047
  80328c:	117fc71e 	bne	r2,r5,8031ac <__alt_data_end+0xff8031ac>
  803290:	4811883a 	mov	r8,r9
  803294:	3023883a 	mov	r17,r6
  803298:	1021883a 	mov	r16,r2
  80329c:	003e3b06 	br	802b8c <__alt_data_end+0xff802b8c>
  8032a0:	10002f26 	beq	r2,zero,803360 <__adddf3+0x850>
  8032a4:	4984b03a 	or	r2,r9,r6
  8032a8:	10001126 	beq	r2,zero,8032f0 <__adddf3+0x7e0>
  8032ac:	4004d0fa 	srli	r2,r8,3
  8032b0:	8822d0fa 	srli	r17,r17,3
  8032b4:	4010977a 	slli	r8,r8,29
  8032b8:	10c0022c 	andhi	r3,r2,8
  8032bc:	4462b03a 	or	r17,r8,r17
  8032c0:	183feb26 	beq	r3,zero,803270 <__alt_data_end+0xff803270>
  8032c4:	4808d0fa 	srli	r4,r9,3
  8032c8:	20c0022c 	andhi	r3,r4,8
  8032cc:	183fe81e 	bne	r3,zero,803270 <__alt_data_end+0xff803270>
  8032d0:	300cd0fa 	srli	r6,r6,3
  8032d4:	4806977a 	slli	r3,r9,29
  8032d8:	2005883a 	mov	r2,r4
  8032dc:	19a2b03a 	or	r17,r3,r6
  8032e0:	003fe306 	br	803270 <__alt_data_end+0xff803270>
  8032e4:	0011883a 	mov	r8,zero
  8032e8:	0005883a 	mov	r2,zero
  8032ec:	003e3f06 	br	802bec <__alt_data_end+0xff802bec>
  8032f0:	0401ffc4 	movi	r16,2047
  8032f4:	003e2506 	br	802b8c <__alt_data_end+0xff802b8c>
  8032f8:	0013883a 	mov	r9,zero
  8032fc:	003f8406 	br	803110 <__alt_data_end+0xff803110>
  803300:	0005883a 	mov	r2,zero
  803304:	0007883a 	mov	r3,zero
  803308:	003e8906 	br	802d30 <__alt_data_end+0xff802d30>
  80330c:	197ff804 	addi	r5,r3,-32
  803310:	01000804 	movi	r4,32
  803314:	414ad83a 	srl	r5,r8,r5
  803318:	19002426 	beq	r3,r4,8033ac <__adddf3+0x89c>
  80331c:	01001004 	movi	r4,64
  803320:	20c7c83a 	sub	r3,r4,r3
  803324:	40c6983a 	sll	r3,r8,r3
  803328:	1c46b03a 	or	r3,r3,r17
  80332c:	1806c03a 	cmpne	r3,r3,zero
  803330:	28e2b03a 	or	r17,r5,r3
  803334:	0007883a 	mov	r3,zero
  803338:	003f2306 	br	802fc8 <__alt_data_end+0xff802fc8>
  80333c:	0007883a 	mov	r3,zero
  803340:	5811883a 	mov	r8,r11
  803344:	00bfffc4 	movi	r2,-1
  803348:	0401ffc4 	movi	r16,2047
  80334c:	003e7806 	br	802d30 <__alt_data_end+0xff802d30>
  803350:	4462b03a 	or	r17,r8,r17
  803354:	8822c03a 	cmpne	r17,r17,zero
  803358:	0009883a 	mov	r4,zero
  80335c:	003fa006 	br	8031e0 <__alt_data_end+0xff8031e0>
  803360:	4811883a 	mov	r8,r9
  803364:	3023883a 	mov	r17,r6
  803368:	0401ffc4 	movi	r16,2047
  80336c:	003e0706 	br	802b8c <__alt_data_end+0xff802b8c>
  803370:	4811883a 	mov	r8,r9
  803374:	3023883a 	mov	r17,r6
  803378:	003e0406 	br	802b8c <__alt_data_end+0xff802b8c>
  80337c:	21fff804 	addi	r7,r4,-32
  803380:	01400804 	movi	r5,32
  803384:	41ced83a 	srl	r7,r8,r7
  803388:	21400a26 	beq	r4,r5,8033b4 <__adddf3+0x8a4>
  80338c:	01401004 	movi	r5,64
  803390:	2909c83a 	sub	r4,r5,r4
  803394:	4108983a 	sll	r4,r8,r4
  803398:	2448b03a 	or	r4,r4,r17
  80339c:	2008c03a 	cmpne	r4,r4,zero
  8033a0:	3922b03a 	or	r17,r7,r4
  8033a4:	0009883a 	mov	r4,zero
  8033a8:	003f8d06 	br	8031e0 <__alt_data_end+0xff8031e0>
  8033ac:	0007883a 	mov	r3,zero
  8033b0:	003fdd06 	br	803328 <__alt_data_end+0xff803328>
  8033b4:	0009883a 	mov	r4,zero
  8033b8:	003ff706 	br	803398 <__alt_data_end+0xff803398>

008033bc <__eqdf2>:
  8033bc:	2804d53a 	srli	r2,r5,20
  8033c0:	3806d53a 	srli	r3,r7,20
  8033c4:	02000434 	movhi	r8,16
  8033c8:	423fffc4 	addi	r8,r8,-1
  8033cc:	1081ffcc 	andi	r2,r2,2047
  8033d0:	0281ffc4 	movi	r10,2047
  8033d4:	2a12703a 	and	r9,r5,r8
  8033d8:	18c1ffcc 	andi	r3,r3,2047
  8033dc:	3a10703a 	and	r8,r7,r8
  8033e0:	280ad7fa 	srli	r5,r5,31
  8033e4:	380ed7fa 	srli	r7,r7,31
  8033e8:	12801026 	beq	r2,r10,80342c <__eqdf2+0x70>
  8033ec:	0281ffc4 	movi	r10,2047
  8033f0:	1a800a26 	beq	r3,r10,80341c <__eqdf2+0x60>
  8033f4:	10c00226 	beq	r2,r3,803400 <__eqdf2+0x44>
  8033f8:	00800044 	movi	r2,1
  8033fc:	f800283a 	ret
  803400:	4a3ffd1e 	bne	r9,r8,8033f8 <__alt_data_end+0xff8033f8>
  803404:	21bffc1e 	bne	r4,r6,8033f8 <__alt_data_end+0xff8033f8>
  803408:	29c00c26 	beq	r5,r7,80343c <__eqdf2+0x80>
  80340c:	103ffa1e 	bne	r2,zero,8033f8 <__alt_data_end+0xff8033f8>
  803410:	2244b03a 	or	r2,r4,r9
  803414:	1004c03a 	cmpne	r2,r2,zero
  803418:	f800283a 	ret
  80341c:	3214b03a 	or	r10,r6,r8
  803420:	503ff426 	beq	r10,zero,8033f4 <__alt_data_end+0xff8033f4>
  803424:	00800044 	movi	r2,1
  803428:	f800283a 	ret
  80342c:	2254b03a 	or	r10,r4,r9
  803430:	503fee26 	beq	r10,zero,8033ec <__alt_data_end+0xff8033ec>
  803434:	00800044 	movi	r2,1
  803438:	f800283a 	ret
  80343c:	0005883a 	mov	r2,zero
  803440:	f800283a 	ret

00803444 <__gedf2>:
  803444:	2804d53a 	srli	r2,r5,20
  803448:	3806d53a 	srli	r3,r7,20
  80344c:	02000434 	movhi	r8,16
  803450:	423fffc4 	addi	r8,r8,-1
  803454:	1081ffcc 	andi	r2,r2,2047
  803458:	0241ffc4 	movi	r9,2047
  80345c:	2a14703a 	and	r10,r5,r8
  803460:	18c1ffcc 	andi	r3,r3,2047
  803464:	3a10703a 	and	r8,r7,r8
  803468:	280ad7fa 	srli	r5,r5,31
  80346c:	380ed7fa 	srli	r7,r7,31
  803470:	12401d26 	beq	r2,r9,8034e8 <__gedf2+0xa4>
  803474:	0241ffc4 	movi	r9,2047
  803478:	1a401226 	beq	r3,r9,8034c4 <__gedf2+0x80>
  80347c:	1000081e 	bne	r2,zero,8034a0 <__gedf2+0x5c>
  803480:	2296b03a 	or	r11,r4,r10
  803484:	5813003a 	cmpeq	r9,r11,zero
  803488:	1800091e 	bne	r3,zero,8034b0 <__gedf2+0x6c>
  80348c:	3218b03a 	or	r12,r6,r8
  803490:	6000071e 	bne	r12,zero,8034b0 <__gedf2+0x6c>
  803494:	0005883a 	mov	r2,zero
  803498:	5800101e 	bne	r11,zero,8034dc <__gedf2+0x98>
  80349c:	f800283a 	ret
  8034a0:	18000c1e 	bne	r3,zero,8034d4 <__gedf2+0x90>
  8034a4:	3212b03a 	or	r9,r6,r8
  8034a8:	48000c26 	beq	r9,zero,8034dc <__gedf2+0x98>
  8034ac:	0013883a 	mov	r9,zero
  8034b0:	39c03fcc 	andi	r7,r7,255
  8034b4:	48000826 	beq	r9,zero,8034d8 <__gedf2+0x94>
  8034b8:	38000926 	beq	r7,zero,8034e0 <__gedf2+0x9c>
  8034bc:	00800044 	movi	r2,1
  8034c0:	f800283a 	ret
  8034c4:	3212b03a 	or	r9,r6,r8
  8034c8:	483fec26 	beq	r9,zero,80347c <__alt_data_end+0xff80347c>
  8034cc:	00bfff84 	movi	r2,-2
  8034d0:	f800283a 	ret
  8034d4:	39c03fcc 	andi	r7,r7,255
  8034d8:	29c00626 	beq	r5,r7,8034f4 <__gedf2+0xb0>
  8034dc:	283ff726 	beq	r5,zero,8034bc <__alt_data_end+0xff8034bc>
  8034e0:	00bfffc4 	movi	r2,-1
  8034e4:	f800283a 	ret
  8034e8:	2292b03a 	or	r9,r4,r10
  8034ec:	483fe126 	beq	r9,zero,803474 <__alt_data_end+0xff803474>
  8034f0:	003ff606 	br	8034cc <__alt_data_end+0xff8034cc>
  8034f4:	18bff916 	blt	r3,r2,8034dc <__alt_data_end+0xff8034dc>
  8034f8:	10c00316 	blt	r2,r3,803508 <__gedf2+0xc4>
  8034fc:	42bff736 	bltu	r8,r10,8034dc <__alt_data_end+0xff8034dc>
  803500:	52000326 	beq	r10,r8,803510 <__gedf2+0xcc>
  803504:	5200042e 	bgeu	r10,r8,803518 <__gedf2+0xd4>
  803508:	283fec1e 	bne	r5,zero,8034bc <__alt_data_end+0xff8034bc>
  80350c:	003ff406 	br	8034e0 <__alt_data_end+0xff8034e0>
  803510:	313ff236 	bltu	r6,r4,8034dc <__alt_data_end+0xff8034dc>
  803514:	21bffc36 	bltu	r4,r6,803508 <__alt_data_end+0xff803508>
  803518:	0005883a 	mov	r2,zero
  80351c:	f800283a 	ret

00803520 <__muldf3>:
  803520:	defff304 	addi	sp,sp,-52
  803524:	2804d53a 	srli	r2,r5,20
  803528:	dd800915 	stw	r22,36(sp)
  80352c:	282cd7fa 	srli	r22,r5,31
  803530:	dc000315 	stw	r16,12(sp)
  803534:	04000434 	movhi	r16,16
  803538:	dd400815 	stw	r21,32(sp)
  80353c:	dc800515 	stw	r18,20(sp)
  803540:	843fffc4 	addi	r16,r16,-1
  803544:	dfc00c15 	stw	ra,48(sp)
  803548:	df000b15 	stw	fp,44(sp)
  80354c:	ddc00a15 	stw	r23,40(sp)
  803550:	dd000715 	stw	r20,28(sp)
  803554:	dcc00615 	stw	r19,24(sp)
  803558:	dc400415 	stw	r17,16(sp)
  80355c:	1481ffcc 	andi	r18,r2,2047
  803560:	2c20703a 	and	r16,r5,r16
  803564:	b02b883a 	mov	r21,r22
  803568:	b2403fcc 	andi	r9,r22,255
  80356c:	90006026 	beq	r18,zero,8036f0 <__muldf3+0x1d0>
  803570:	0081ffc4 	movi	r2,2047
  803574:	2029883a 	mov	r20,r4
  803578:	90803626 	beq	r18,r2,803654 <__muldf3+0x134>
  80357c:	80800434 	orhi	r2,r16,16
  803580:	100490fa 	slli	r2,r2,3
  803584:	2020d77a 	srli	r16,r4,29
  803588:	202890fa 	slli	r20,r4,3
  80358c:	94bf0044 	addi	r18,r18,-1023
  803590:	80a0b03a 	or	r16,r16,r2
  803594:	0027883a 	mov	r19,zero
  803598:	0039883a 	mov	fp,zero
  80359c:	3804d53a 	srli	r2,r7,20
  8035a0:	382ed7fa 	srli	r23,r7,31
  8035a4:	04400434 	movhi	r17,16
  8035a8:	8c7fffc4 	addi	r17,r17,-1
  8035ac:	1081ffcc 	andi	r2,r2,2047
  8035b0:	3011883a 	mov	r8,r6
  8035b4:	3c62703a 	and	r17,r7,r17
  8035b8:	ba803fcc 	andi	r10,r23,255
  8035bc:	10006d26 	beq	r2,zero,803774 <__muldf3+0x254>
  8035c0:	00c1ffc4 	movi	r3,2047
  8035c4:	10c06526 	beq	r2,r3,80375c <__muldf3+0x23c>
  8035c8:	88c00434 	orhi	r3,r17,16
  8035cc:	180690fa 	slli	r3,r3,3
  8035d0:	3022d77a 	srli	r17,r6,29
  8035d4:	301090fa 	slli	r8,r6,3
  8035d8:	10bf0044 	addi	r2,r2,-1023
  8035dc:	88e2b03a 	or	r17,r17,r3
  8035e0:	000b883a 	mov	r5,zero
  8035e4:	9085883a 	add	r2,r18,r2
  8035e8:	2cc8b03a 	or	r4,r5,r19
  8035ec:	00c003c4 	movi	r3,15
  8035f0:	bdacf03a 	xor	r22,r23,r22
  8035f4:	12c00044 	addi	r11,r2,1
  8035f8:	19009936 	bltu	r3,r4,803860 <__muldf3+0x340>
  8035fc:	200890ba 	slli	r4,r4,2
  803600:	00c02034 	movhi	r3,128
  803604:	18cd8504 	addi	r3,r3,13844
  803608:	20c9883a 	add	r4,r4,r3
  80360c:	20c00017 	ldw	r3,0(r4)
  803610:	1800683a 	jmp	r3
  803614:	00803860 	cmpeqi	r2,zero,225
  803618:	00803674 	movhi	r2,217
  80361c:	00803674 	movhi	r2,217
  803620:	00803670 	cmpltui	r2,zero,217
  803624:	0080383c 	xorhi	r2,zero,224
  803628:	0080383c 	xorhi	r2,zero,224
  80362c:	00803824 	muli	r2,zero,224
  803630:	00803670 	cmpltui	r2,zero,217
  803634:	0080383c 	xorhi	r2,zero,224
  803638:	00803824 	muli	r2,zero,224
  80363c:	0080383c 	xorhi	r2,zero,224
  803640:	00803670 	cmpltui	r2,zero,217
  803644:	0080384c 	andi	r2,zero,225
  803648:	0080384c 	andi	r2,zero,225
  80364c:	0080384c 	andi	r2,zero,225
  803650:	00803a68 	cmpgeui	r2,zero,233
  803654:	2404b03a 	or	r2,r4,r16
  803658:	10006f1e 	bne	r2,zero,803818 <__muldf3+0x2f8>
  80365c:	04c00204 	movi	r19,8
  803660:	0021883a 	mov	r16,zero
  803664:	0029883a 	mov	r20,zero
  803668:	07000084 	movi	fp,2
  80366c:	003fcb06 	br	80359c <__alt_data_end+0xff80359c>
  803670:	502d883a 	mov	r22,r10
  803674:	00800084 	movi	r2,2
  803678:	28805726 	beq	r5,r2,8037d8 <__muldf3+0x2b8>
  80367c:	008000c4 	movi	r2,3
  803680:	28816626 	beq	r5,r2,803c1c <__muldf3+0x6fc>
  803684:	00800044 	movi	r2,1
  803688:	2881411e 	bne	r5,r2,803b90 <__muldf3+0x670>
  80368c:	b02b883a 	mov	r21,r22
  803690:	0005883a 	mov	r2,zero
  803694:	000b883a 	mov	r5,zero
  803698:	0029883a 	mov	r20,zero
  80369c:	1004953a 	slli	r2,r2,20
  8036a0:	a8c03fcc 	andi	r3,r21,255
  8036a4:	04400434 	movhi	r17,16
  8036a8:	8c7fffc4 	addi	r17,r17,-1
  8036ac:	180697fa 	slli	r3,r3,31
  8036b0:	2c4a703a 	and	r5,r5,r17
  8036b4:	288ab03a 	or	r5,r5,r2
  8036b8:	28c6b03a 	or	r3,r5,r3
  8036bc:	a005883a 	mov	r2,r20
  8036c0:	dfc00c17 	ldw	ra,48(sp)
  8036c4:	df000b17 	ldw	fp,44(sp)
  8036c8:	ddc00a17 	ldw	r23,40(sp)
  8036cc:	dd800917 	ldw	r22,36(sp)
  8036d0:	dd400817 	ldw	r21,32(sp)
  8036d4:	dd000717 	ldw	r20,28(sp)
  8036d8:	dcc00617 	ldw	r19,24(sp)
  8036dc:	dc800517 	ldw	r18,20(sp)
  8036e0:	dc400417 	ldw	r17,16(sp)
  8036e4:	dc000317 	ldw	r16,12(sp)
  8036e8:	dec00d04 	addi	sp,sp,52
  8036ec:	f800283a 	ret
  8036f0:	2404b03a 	or	r2,r4,r16
  8036f4:	2027883a 	mov	r19,r4
  8036f8:	10004226 	beq	r2,zero,803804 <__muldf3+0x2e4>
  8036fc:	8000fc26 	beq	r16,zero,803af0 <__muldf3+0x5d0>
  803700:	8009883a 	mov	r4,r16
  803704:	d9800215 	stw	r6,8(sp)
  803708:	d9c00015 	stw	r7,0(sp)
  80370c:	da400115 	stw	r9,4(sp)
  803710:	08049480 	call	804948 <__clzsi2>
  803714:	d9800217 	ldw	r6,8(sp)
  803718:	d9c00017 	ldw	r7,0(sp)
  80371c:	da400117 	ldw	r9,4(sp)
  803720:	113ffd44 	addi	r4,r2,-11
  803724:	00c00704 	movi	r3,28
  803728:	1900ed16 	blt	r3,r4,803ae0 <__muldf3+0x5c0>
  80372c:	00c00744 	movi	r3,29
  803730:	147ffe04 	addi	r17,r2,-8
  803734:	1907c83a 	sub	r3,r3,r4
  803738:	8460983a 	sll	r16,r16,r17
  80373c:	98c6d83a 	srl	r3,r19,r3
  803740:	9c68983a 	sll	r20,r19,r17
  803744:	1c20b03a 	or	r16,r3,r16
  803748:	1080fcc4 	addi	r2,r2,1011
  80374c:	00a5c83a 	sub	r18,zero,r2
  803750:	0027883a 	mov	r19,zero
  803754:	0039883a 	mov	fp,zero
  803758:	003f9006 	br	80359c <__alt_data_end+0xff80359c>
  80375c:	3446b03a 	or	r3,r6,r17
  803760:	1800261e 	bne	r3,zero,8037fc <__muldf3+0x2dc>
  803764:	0023883a 	mov	r17,zero
  803768:	0011883a 	mov	r8,zero
  80376c:	01400084 	movi	r5,2
  803770:	003f9c06 	br	8035e4 <__alt_data_end+0xff8035e4>
  803774:	3446b03a 	or	r3,r6,r17
  803778:	18001c26 	beq	r3,zero,8037ec <__muldf3+0x2cc>
  80377c:	8800ce26 	beq	r17,zero,803ab8 <__muldf3+0x598>
  803780:	8809883a 	mov	r4,r17
  803784:	d9800215 	stw	r6,8(sp)
  803788:	da400115 	stw	r9,4(sp)
  80378c:	da800015 	stw	r10,0(sp)
  803790:	08049480 	call	804948 <__clzsi2>
  803794:	d9800217 	ldw	r6,8(sp)
  803798:	da400117 	ldw	r9,4(sp)
  80379c:	da800017 	ldw	r10,0(sp)
  8037a0:	113ffd44 	addi	r4,r2,-11
  8037a4:	00c00704 	movi	r3,28
  8037a8:	1900bf16 	blt	r3,r4,803aa8 <__muldf3+0x588>
  8037ac:	00c00744 	movi	r3,29
  8037b0:	123ffe04 	addi	r8,r2,-8
  8037b4:	1907c83a 	sub	r3,r3,r4
  8037b8:	8a22983a 	sll	r17,r17,r8
  8037bc:	30c6d83a 	srl	r3,r6,r3
  8037c0:	3210983a 	sll	r8,r6,r8
  8037c4:	1c62b03a 	or	r17,r3,r17
  8037c8:	1080fcc4 	addi	r2,r2,1011
  8037cc:	0085c83a 	sub	r2,zero,r2
  8037d0:	000b883a 	mov	r5,zero
  8037d4:	003f8306 	br	8035e4 <__alt_data_end+0xff8035e4>
  8037d8:	b02b883a 	mov	r21,r22
  8037dc:	0081ffc4 	movi	r2,2047
  8037e0:	000b883a 	mov	r5,zero
  8037e4:	0029883a 	mov	r20,zero
  8037e8:	003fac06 	br	80369c <__alt_data_end+0xff80369c>
  8037ec:	0023883a 	mov	r17,zero
  8037f0:	0011883a 	mov	r8,zero
  8037f4:	01400044 	movi	r5,1
  8037f8:	003f7a06 	br	8035e4 <__alt_data_end+0xff8035e4>
  8037fc:	014000c4 	movi	r5,3
  803800:	003f7806 	br	8035e4 <__alt_data_end+0xff8035e4>
  803804:	04c00104 	movi	r19,4
  803808:	0021883a 	mov	r16,zero
  80380c:	0029883a 	mov	r20,zero
  803810:	07000044 	movi	fp,1
  803814:	003f6106 	br	80359c <__alt_data_end+0xff80359c>
  803818:	04c00304 	movi	r19,12
  80381c:	070000c4 	movi	fp,3
  803820:	003f5e06 	br	80359c <__alt_data_end+0xff80359c>
  803824:	01400434 	movhi	r5,16
  803828:	002b883a 	mov	r21,zero
  80382c:	297fffc4 	addi	r5,r5,-1
  803830:	053fffc4 	movi	r20,-1
  803834:	0081ffc4 	movi	r2,2047
  803838:	003f9806 	br	80369c <__alt_data_end+0xff80369c>
  80383c:	8023883a 	mov	r17,r16
  803840:	a011883a 	mov	r8,r20
  803844:	e00b883a 	mov	r5,fp
  803848:	003f8a06 	br	803674 <__alt_data_end+0xff803674>
  80384c:	8023883a 	mov	r17,r16
  803850:	a011883a 	mov	r8,r20
  803854:	482d883a 	mov	r22,r9
  803858:	e00b883a 	mov	r5,fp
  80385c:	003f8506 	br	803674 <__alt_data_end+0xff803674>
  803860:	a00ad43a 	srli	r5,r20,16
  803864:	401ad43a 	srli	r13,r8,16
  803868:	a53fffcc 	andi	r20,r20,65535
  80386c:	423fffcc 	andi	r8,r8,65535
  803870:	4519383a 	mul	r12,r8,r20
  803874:	4147383a 	mul	r3,r8,r5
  803878:	6d09383a 	mul	r4,r13,r20
  80387c:	600cd43a 	srli	r6,r12,16
  803880:	2b5d383a 	mul	r14,r5,r13
  803884:	20c9883a 	add	r4,r4,r3
  803888:	310d883a 	add	r6,r6,r4
  80388c:	30c0022e 	bgeu	r6,r3,803898 <__muldf3+0x378>
  803890:	00c00074 	movhi	r3,1
  803894:	70dd883a 	add	r14,r14,r3
  803898:	8826d43a 	srli	r19,r17,16
  80389c:	8bffffcc 	andi	r15,r17,65535
  8038a0:	7d23383a 	mul	r17,r15,r20
  8038a4:	7949383a 	mul	r4,r15,r5
  8038a8:	9d29383a 	mul	r20,r19,r20
  8038ac:	8814d43a 	srli	r10,r17,16
  8038b0:	3012943a 	slli	r9,r6,16
  8038b4:	a129883a 	add	r20,r20,r4
  8038b8:	633fffcc 	andi	r12,r12,65535
  8038bc:	5515883a 	add	r10,r10,r20
  8038c0:	3006d43a 	srli	r3,r6,16
  8038c4:	4b13883a 	add	r9,r9,r12
  8038c8:	2ccb383a 	mul	r5,r5,r19
  8038cc:	5100022e 	bgeu	r10,r4,8038d8 <__muldf3+0x3b8>
  8038d0:	01000074 	movhi	r4,1
  8038d4:	290b883a 	add	r5,r5,r4
  8038d8:	802ad43a 	srli	r21,r16,16
  8038dc:	843fffcc 	andi	r16,r16,65535
  8038e0:	440d383a 	mul	r6,r8,r16
  8038e4:	4565383a 	mul	r18,r8,r21
  8038e8:	8349383a 	mul	r4,r16,r13
  8038ec:	500e943a 	slli	r7,r10,16
  8038f0:	3010d43a 	srli	r8,r6,16
  8038f4:	5028d43a 	srli	r20,r10,16
  8038f8:	2489883a 	add	r4,r4,r18
  8038fc:	8abfffcc 	andi	r10,r17,65535
  803900:	3a95883a 	add	r10,r7,r10
  803904:	4119883a 	add	r12,r8,r4
  803908:	a169883a 	add	r20,r20,r5
  80390c:	1a87883a 	add	r3,r3,r10
  803910:	6d5b383a 	mul	r13,r13,r21
  803914:	6480022e 	bgeu	r12,r18,803920 <__muldf3+0x400>
  803918:	01000074 	movhi	r4,1
  80391c:	691b883a 	add	r13,r13,r4
  803920:	7c25383a 	mul	r18,r15,r16
  803924:	7d4b383a 	mul	r5,r15,r21
  803928:	84cf383a 	mul	r7,r16,r19
  80392c:	901ed43a 	srli	r15,r18,16
  803930:	6008d43a 	srli	r4,r12,16
  803934:	6010943a 	slli	r8,r12,16
  803938:	394f883a 	add	r7,r7,r5
  80393c:	333fffcc 	andi	r12,r6,65535
  803940:	79df883a 	add	r15,r15,r7
  803944:	235b883a 	add	r13,r4,r13
  803948:	9d63383a 	mul	r17,r19,r21
  80394c:	4309883a 	add	r4,r8,r12
  803950:	7940022e 	bgeu	r15,r5,80395c <__muldf3+0x43c>
  803954:	01400074 	movhi	r5,1
  803958:	8963883a 	add	r17,r17,r5
  80395c:	780a943a 	slli	r5,r15,16
  803960:	91bfffcc 	andi	r6,r18,65535
  803964:	70c7883a 	add	r3,r14,r3
  803968:	298d883a 	add	r6,r5,r6
  80396c:	1a8f803a 	cmpltu	r7,r3,r10
  803970:	350b883a 	add	r5,r6,r20
  803974:	20c7883a 	add	r3,r4,r3
  803978:	3955883a 	add	r10,r7,r5
  80397c:	1909803a 	cmpltu	r4,r3,r4
  803980:	6a91883a 	add	r8,r13,r10
  803984:	780cd43a 	srli	r6,r15,16
  803988:	2219883a 	add	r12,r4,r8
  80398c:	2d0b803a 	cmpltu	r5,r5,r20
  803990:	51cf803a 	cmpltu	r7,r10,r7
  803994:	29ceb03a 	or	r7,r5,r7
  803998:	4351803a 	cmpltu	r8,r8,r13
  80399c:	610b803a 	cmpltu	r5,r12,r4
  8039a0:	4148b03a 	or	r4,r8,r5
  8039a4:	398f883a 	add	r7,r7,r6
  8039a8:	3909883a 	add	r4,r7,r4
  8039ac:	1810927a 	slli	r8,r3,9
  8039b0:	2449883a 	add	r4,r4,r17
  8039b4:	2008927a 	slli	r4,r4,9
  8039b8:	6022d5fa 	srli	r17,r12,23
  8039bc:	1806d5fa 	srli	r3,r3,23
  8039c0:	4252b03a 	or	r9,r8,r9
  8039c4:	600a927a 	slli	r5,r12,9
  8039c8:	4810c03a 	cmpne	r8,r9,zero
  8039cc:	2462b03a 	or	r17,r4,r17
  8039d0:	40c6b03a 	or	r3,r8,r3
  8039d4:	8900402c 	andhi	r4,r17,256
  8039d8:	1950b03a 	or	r8,r3,r5
  8039dc:	20000726 	beq	r4,zero,8039fc <__muldf3+0x4dc>
  8039e0:	4006d07a 	srli	r3,r8,1
  8039e4:	880497fa 	slli	r2,r17,31
  8039e8:	4200004c 	andi	r8,r8,1
  8039ec:	8822d07a 	srli	r17,r17,1
  8039f0:	1a10b03a 	or	r8,r3,r8
  8039f4:	1210b03a 	or	r8,r2,r8
  8039f8:	5805883a 	mov	r2,r11
  8039fc:	1140ffc4 	addi	r5,r2,1023
  803a00:	0140440e 	bge	zero,r5,803b14 <__muldf3+0x5f4>
  803a04:	40c001cc 	andi	r3,r8,7
  803a08:	18000726 	beq	r3,zero,803a28 <__muldf3+0x508>
  803a0c:	40c003cc 	andi	r3,r8,15
  803a10:	01000104 	movi	r4,4
  803a14:	19000426 	beq	r3,r4,803a28 <__muldf3+0x508>
  803a18:	4107883a 	add	r3,r8,r4
  803a1c:	1a11803a 	cmpltu	r8,r3,r8
  803a20:	8a23883a 	add	r17,r17,r8
  803a24:	1811883a 	mov	r8,r3
  803a28:	88c0402c 	andhi	r3,r17,256
  803a2c:	18000426 	beq	r3,zero,803a40 <__muldf3+0x520>
  803a30:	11410004 	addi	r5,r2,1024
  803a34:	00bfc034 	movhi	r2,65280
  803a38:	10bfffc4 	addi	r2,r2,-1
  803a3c:	88a2703a 	and	r17,r17,r2
  803a40:	0081ff84 	movi	r2,2046
  803a44:	117f6416 	blt	r2,r5,8037d8 <__alt_data_end+0xff8037d8>
  803a48:	8828977a 	slli	r20,r17,29
  803a4c:	4010d0fa 	srli	r8,r8,3
  803a50:	8822927a 	slli	r17,r17,9
  803a54:	2881ffcc 	andi	r2,r5,2047
  803a58:	a228b03a 	or	r20,r20,r8
  803a5c:	880ad33a 	srli	r5,r17,12
  803a60:	b02b883a 	mov	r21,r22
  803a64:	003f0d06 	br	80369c <__alt_data_end+0xff80369c>
  803a68:	8080022c 	andhi	r2,r16,8
  803a6c:	10000926 	beq	r2,zero,803a94 <__muldf3+0x574>
  803a70:	8880022c 	andhi	r2,r17,8
  803a74:	1000071e 	bne	r2,zero,803a94 <__muldf3+0x574>
  803a78:	00800434 	movhi	r2,16
  803a7c:	89400234 	orhi	r5,r17,8
  803a80:	10bfffc4 	addi	r2,r2,-1
  803a84:	b82b883a 	mov	r21,r23
  803a88:	288a703a 	and	r5,r5,r2
  803a8c:	4029883a 	mov	r20,r8
  803a90:	003f6806 	br	803834 <__alt_data_end+0xff803834>
  803a94:	00800434 	movhi	r2,16
  803a98:	81400234 	orhi	r5,r16,8
  803a9c:	10bfffc4 	addi	r2,r2,-1
  803aa0:	288a703a 	and	r5,r5,r2
  803aa4:	003f6306 	br	803834 <__alt_data_end+0xff803834>
  803aa8:	147ff604 	addi	r17,r2,-40
  803aac:	3462983a 	sll	r17,r6,r17
  803ab0:	0011883a 	mov	r8,zero
  803ab4:	003f4406 	br	8037c8 <__alt_data_end+0xff8037c8>
  803ab8:	3009883a 	mov	r4,r6
  803abc:	d9800215 	stw	r6,8(sp)
  803ac0:	da400115 	stw	r9,4(sp)
  803ac4:	da800015 	stw	r10,0(sp)
  803ac8:	08049480 	call	804948 <__clzsi2>
  803acc:	10800804 	addi	r2,r2,32
  803ad0:	da800017 	ldw	r10,0(sp)
  803ad4:	da400117 	ldw	r9,4(sp)
  803ad8:	d9800217 	ldw	r6,8(sp)
  803adc:	003f3006 	br	8037a0 <__alt_data_end+0xff8037a0>
  803ae0:	143ff604 	addi	r16,r2,-40
  803ae4:	9c20983a 	sll	r16,r19,r16
  803ae8:	0029883a 	mov	r20,zero
  803aec:	003f1606 	br	803748 <__alt_data_end+0xff803748>
  803af0:	d9800215 	stw	r6,8(sp)
  803af4:	d9c00015 	stw	r7,0(sp)
  803af8:	da400115 	stw	r9,4(sp)
  803afc:	08049480 	call	804948 <__clzsi2>
  803b00:	10800804 	addi	r2,r2,32
  803b04:	da400117 	ldw	r9,4(sp)
  803b08:	d9c00017 	ldw	r7,0(sp)
  803b0c:	d9800217 	ldw	r6,8(sp)
  803b10:	003f0306 	br	803720 <__alt_data_end+0xff803720>
  803b14:	00c00044 	movi	r3,1
  803b18:	1947c83a 	sub	r3,r3,r5
  803b1c:	00800e04 	movi	r2,56
  803b20:	10feda16 	blt	r2,r3,80368c <__alt_data_end+0xff80368c>
  803b24:	008007c4 	movi	r2,31
  803b28:	10c01b16 	blt	r2,r3,803b98 <__muldf3+0x678>
  803b2c:	00800804 	movi	r2,32
  803b30:	10c5c83a 	sub	r2,r2,r3
  803b34:	888a983a 	sll	r5,r17,r2
  803b38:	40c8d83a 	srl	r4,r8,r3
  803b3c:	4084983a 	sll	r2,r8,r2
  803b40:	88e2d83a 	srl	r17,r17,r3
  803b44:	2906b03a 	or	r3,r5,r4
  803b48:	1004c03a 	cmpne	r2,r2,zero
  803b4c:	1886b03a 	or	r3,r3,r2
  803b50:	188001cc 	andi	r2,r3,7
  803b54:	10000726 	beq	r2,zero,803b74 <__muldf3+0x654>
  803b58:	188003cc 	andi	r2,r3,15
  803b5c:	01000104 	movi	r4,4
  803b60:	11000426 	beq	r2,r4,803b74 <__muldf3+0x654>
  803b64:	1805883a 	mov	r2,r3
  803b68:	10c00104 	addi	r3,r2,4
  803b6c:	1885803a 	cmpltu	r2,r3,r2
  803b70:	88a3883a 	add	r17,r17,r2
  803b74:	8880202c 	andhi	r2,r17,128
  803b78:	10001c26 	beq	r2,zero,803bec <__muldf3+0x6cc>
  803b7c:	b02b883a 	mov	r21,r22
  803b80:	00800044 	movi	r2,1
  803b84:	000b883a 	mov	r5,zero
  803b88:	0029883a 	mov	r20,zero
  803b8c:	003ec306 	br	80369c <__alt_data_end+0xff80369c>
  803b90:	5805883a 	mov	r2,r11
  803b94:	003f9906 	br	8039fc <__alt_data_end+0xff8039fc>
  803b98:	00bff844 	movi	r2,-31
  803b9c:	1145c83a 	sub	r2,r2,r5
  803ba0:	8888d83a 	srl	r4,r17,r2
  803ba4:	00800804 	movi	r2,32
  803ba8:	18801a26 	beq	r3,r2,803c14 <__muldf3+0x6f4>
  803bac:	00801004 	movi	r2,64
  803bb0:	10c5c83a 	sub	r2,r2,r3
  803bb4:	8884983a 	sll	r2,r17,r2
  803bb8:	1204b03a 	or	r2,r2,r8
  803bbc:	1004c03a 	cmpne	r2,r2,zero
  803bc0:	2084b03a 	or	r2,r4,r2
  803bc4:	144001cc 	andi	r17,r2,7
  803bc8:	88000d1e 	bne	r17,zero,803c00 <__muldf3+0x6e0>
  803bcc:	000b883a 	mov	r5,zero
  803bd0:	1028d0fa 	srli	r20,r2,3
  803bd4:	b02b883a 	mov	r21,r22
  803bd8:	0005883a 	mov	r2,zero
  803bdc:	a468b03a 	or	r20,r20,r17
  803be0:	003eae06 	br	80369c <__alt_data_end+0xff80369c>
  803be4:	1007883a 	mov	r3,r2
  803be8:	0023883a 	mov	r17,zero
  803bec:	880a927a 	slli	r5,r17,9
  803bf0:	1805883a 	mov	r2,r3
  803bf4:	8822977a 	slli	r17,r17,29
  803bf8:	280ad33a 	srli	r5,r5,12
  803bfc:	003ff406 	br	803bd0 <__alt_data_end+0xff803bd0>
  803c00:	10c003cc 	andi	r3,r2,15
  803c04:	01000104 	movi	r4,4
  803c08:	193ff626 	beq	r3,r4,803be4 <__alt_data_end+0xff803be4>
  803c0c:	0023883a 	mov	r17,zero
  803c10:	003fd506 	br	803b68 <__alt_data_end+0xff803b68>
  803c14:	0005883a 	mov	r2,zero
  803c18:	003fe706 	br	803bb8 <__alt_data_end+0xff803bb8>
  803c1c:	00800434 	movhi	r2,16
  803c20:	89400234 	orhi	r5,r17,8
  803c24:	10bfffc4 	addi	r2,r2,-1
  803c28:	b02b883a 	mov	r21,r22
  803c2c:	288a703a 	and	r5,r5,r2
  803c30:	4029883a 	mov	r20,r8
  803c34:	003eff06 	br	803834 <__alt_data_end+0xff803834>

00803c38 <__subdf3>:
  803c38:	02000434 	movhi	r8,16
  803c3c:	423fffc4 	addi	r8,r8,-1
  803c40:	defffb04 	addi	sp,sp,-20
  803c44:	2a14703a 	and	r10,r5,r8
  803c48:	3812d53a 	srli	r9,r7,20
  803c4c:	3a10703a 	and	r8,r7,r8
  803c50:	2006d77a 	srli	r3,r4,29
  803c54:	3004d77a 	srli	r2,r6,29
  803c58:	dc000015 	stw	r16,0(sp)
  803c5c:	501490fa 	slli	r10,r10,3
  803c60:	2820d53a 	srli	r16,r5,20
  803c64:	401090fa 	slli	r8,r8,3
  803c68:	dc800215 	stw	r18,8(sp)
  803c6c:	dc400115 	stw	r17,4(sp)
  803c70:	dfc00415 	stw	ra,16(sp)
  803c74:	202290fa 	slli	r17,r4,3
  803c78:	dcc00315 	stw	r19,12(sp)
  803c7c:	4a41ffcc 	andi	r9,r9,2047
  803c80:	0101ffc4 	movi	r4,2047
  803c84:	2824d7fa 	srli	r18,r5,31
  803c88:	8401ffcc 	andi	r16,r16,2047
  803c8c:	50c6b03a 	or	r3,r10,r3
  803c90:	380ed7fa 	srli	r7,r7,31
  803c94:	408ab03a 	or	r5,r8,r2
  803c98:	300c90fa 	slli	r6,r6,3
  803c9c:	49009626 	beq	r9,r4,803ef8 <__subdf3+0x2c0>
  803ca0:	39c0005c 	xori	r7,r7,1
  803ca4:	8245c83a 	sub	r2,r16,r9
  803ca8:	3c807426 	beq	r7,r18,803e7c <__subdf3+0x244>
  803cac:	0080af0e 	bge	zero,r2,803f6c <__subdf3+0x334>
  803cb0:	48002a1e 	bne	r9,zero,803d5c <__subdf3+0x124>
  803cb4:	2988b03a 	or	r4,r5,r6
  803cb8:	20009a1e 	bne	r4,zero,803f24 <__subdf3+0x2ec>
  803cbc:	888001cc 	andi	r2,r17,7
  803cc0:	10000726 	beq	r2,zero,803ce0 <__subdf3+0xa8>
  803cc4:	888003cc 	andi	r2,r17,15
  803cc8:	01000104 	movi	r4,4
  803ccc:	11000426 	beq	r2,r4,803ce0 <__subdf3+0xa8>
  803cd0:	890b883a 	add	r5,r17,r4
  803cd4:	2c63803a 	cmpltu	r17,r5,r17
  803cd8:	1c47883a 	add	r3,r3,r17
  803cdc:	2823883a 	mov	r17,r5
  803ce0:	1880202c 	andhi	r2,r3,128
  803ce4:	10005926 	beq	r2,zero,803e4c <__subdf3+0x214>
  803ce8:	84000044 	addi	r16,r16,1
  803cec:	0081ffc4 	movi	r2,2047
  803cf0:	8080be26 	beq	r16,r2,803fec <__subdf3+0x3b4>
  803cf4:	017fe034 	movhi	r5,65408
  803cf8:	297fffc4 	addi	r5,r5,-1
  803cfc:	1946703a 	and	r3,r3,r5
  803d00:	1804977a 	slli	r2,r3,29
  803d04:	1806927a 	slli	r3,r3,9
  803d08:	8822d0fa 	srli	r17,r17,3
  803d0c:	8401ffcc 	andi	r16,r16,2047
  803d10:	180ad33a 	srli	r5,r3,12
  803d14:	9100004c 	andi	r4,r18,1
  803d18:	1444b03a 	or	r2,r2,r17
  803d1c:	80c1ffcc 	andi	r3,r16,2047
  803d20:	1820953a 	slli	r16,r3,20
  803d24:	20c03fcc 	andi	r3,r4,255
  803d28:	180897fa 	slli	r4,r3,31
  803d2c:	00c00434 	movhi	r3,16
  803d30:	18ffffc4 	addi	r3,r3,-1
  803d34:	28c6703a 	and	r3,r5,r3
  803d38:	1c06b03a 	or	r3,r3,r16
  803d3c:	1906b03a 	or	r3,r3,r4
  803d40:	dfc00417 	ldw	ra,16(sp)
  803d44:	dcc00317 	ldw	r19,12(sp)
  803d48:	dc800217 	ldw	r18,8(sp)
  803d4c:	dc400117 	ldw	r17,4(sp)
  803d50:	dc000017 	ldw	r16,0(sp)
  803d54:	dec00504 	addi	sp,sp,20
  803d58:	f800283a 	ret
  803d5c:	0101ffc4 	movi	r4,2047
  803d60:	813fd626 	beq	r16,r4,803cbc <__alt_data_end+0xff803cbc>
  803d64:	29402034 	orhi	r5,r5,128
  803d68:	01000e04 	movi	r4,56
  803d6c:	2080a316 	blt	r4,r2,803ffc <__subdf3+0x3c4>
  803d70:	010007c4 	movi	r4,31
  803d74:	2080c616 	blt	r4,r2,804090 <__subdf3+0x458>
  803d78:	01000804 	movi	r4,32
  803d7c:	2089c83a 	sub	r4,r4,r2
  803d80:	2910983a 	sll	r8,r5,r4
  803d84:	308ed83a 	srl	r7,r6,r2
  803d88:	3108983a 	sll	r4,r6,r4
  803d8c:	2884d83a 	srl	r2,r5,r2
  803d90:	41ccb03a 	or	r6,r8,r7
  803d94:	2008c03a 	cmpne	r4,r4,zero
  803d98:	310cb03a 	or	r6,r6,r4
  803d9c:	898dc83a 	sub	r6,r17,r6
  803da0:	89a3803a 	cmpltu	r17,r17,r6
  803da4:	1887c83a 	sub	r3,r3,r2
  803da8:	1c47c83a 	sub	r3,r3,r17
  803dac:	3023883a 	mov	r17,r6
  803db0:	1880202c 	andhi	r2,r3,128
  803db4:	10002326 	beq	r2,zero,803e44 <__subdf3+0x20c>
  803db8:	04c02034 	movhi	r19,128
  803dbc:	9cffffc4 	addi	r19,r19,-1
  803dc0:	1ce6703a 	and	r19,r3,r19
  803dc4:	98007a26 	beq	r19,zero,803fb0 <__subdf3+0x378>
  803dc8:	9809883a 	mov	r4,r19
  803dcc:	08049480 	call	804948 <__clzsi2>
  803dd0:	113ffe04 	addi	r4,r2,-8
  803dd4:	00c007c4 	movi	r3,31
  803dd8:	19007b16 	blt	r3,r4,803fc8 <__subdf3+0x390>
  803ddc:	00800804 	movi	r2,32
  803de0:	1105c83a 	sub	r2,r2,r4
  803de4:	8884d83a 	srl	r2,r17,r2
  803de8:	9906983a 	sll	r3,r19,r4
  803dec:	8922983a 	sll	r17,r17,r4
  803df0:	10c4b03a 	or	r2,r2,r3
  803df4:	24007816 	blt	r4,r16,803fd8 <__subdf3+0x3a0>
  803df8:	2421c83a 	sub	r16,r4,r16
  803dfc:	80c00044 	addi	r3,r16,1
  803e00:	010007c4 	movi	r4,31
  803e04:	20c09516 	blt	r4,r3,80405c <__subdf3+0x424>
  803e08:	01400804 	movi	r5,32
  803e0c:	28cbc83a 	sub	r5,r5,r3
  803e10:	88c8d83a 	srl	r4,r17,r3
  803e14:	8962983a 	sll	r17,r17,r5
  803e18:	114a983a 	sll	r5,r2,r5
  803e1c:	10c6d83a 	srl	r3,r2,r3
  803e20:	8804c03a 	cmpne	r2,r17,zero
  803e24:	290ab03a 	or	r5,r5,r4
  803e28:	28a2b03a 	or	r17,r5,r2
  803e2c:	0021883a 	mov	r16,zero
  803e30:	003fa206 	br	803cbc <__alt_data_end+0xff803cbc>
  803e34:	2090b03a 	or	r8,r4,r2
  803e38:	40018e26 	beq	r8,zero,804474 <__subdf3+0x83c>
  803e3c:	1007883a 	mov	r3,r2
  803e40:	2023883a 	mov	r17,r4
  803e44:	888001cc 	andi	r2,r17,7
  803e48:	103f9e1e 	bne	r2,zero,803cc4 <__alt_data_end+0xff803cc4>
  803e4c:	1804977a 	slli	r2,r3,29
  803e50:	8822d0fa 	srli	r17,r17,3
  803e54:	1810d0fa 	srli	r8,r3,3
  803e58:	9100004c 	andi	r4,r18,1
  803e5c:	1444b03a 	or	r2,r2,r17
  803e60:	00c1ffc4 	movi	r3,2047
  803e64:	80c02826 	beq	r16,r3,803f08 <__subdf3+0x2d0>
  803e68:	01400434 	movhi	r5,16
  803e6c:	297fffc4 	addi	r5,r5,-1
  803e70:	80e0703a 	and	r16,r16,r3
  803e74:	414a703a 	and	r5,r8,r5
  803e78:	003fa806 	br	803d1c <__alt_data_end+0xff803d1c>
  803e7c:	0080630e 	bge	zero,r2,80400c <__subdf3+0x3d4>
  803e80:	48003026 	beq	r9,zero,803f44 <__subdf3+0x30c>
  803e84:	0101ffc4 	movi	r4,2047
  803e88:	813f8c26 	beq	r16,r4,803cbc <__alt_data_end+0xff803cbc>
  803e8c:	29402034 	orhi	r5,r5,128
  803e90:	01000e04 	movi	r4,56
  803e94:	2080a90e 	bge	r4,r2,80413c <__subdf3+0x504>
  803e98:	298cb03a 	or	r6,r5,r6
  803e9c:	3012c03a 	cmpne	r9,r6,zero
  803ea0:	0005883a 	mov	r2,zero
  803ea4:	4c53883a 	add	r9,r9,r17
  803ea8:	4c63803a 	cmpltu	r17,r9,r17
  803eac:	10c7883a 	add	r3,r2,r3
  803eb0:	88c7883a 	add	r3,r17,r3
  803eb4:	4823883a 	mov	r17,r9
  803eb8:	1880202c 	andhi	r2,r3,128
  803ebc:	1000d026 	beq	r2,zero,804200 <__subdf3+0x5c8>
  803ec0:	84000044 	addi	r16,r16,1
  803ec4:	0081ffc4 	movi	r2,2047
  803ec8:	8080fe26 	beq	r16,r2,8042c4 <__subdf3+0x68c>
  803ecc:	00bfe034 	movhi	r2,65408
  803ed0:	10bfffc4 	addi	r2,r2,-1
  803ed4:	1886703a 	and	r3,r3,r2
  803ed8:	880ad07a 	srli	r5,r17,1
  803edc:	180497fa 	slli	r2,r3,31
  803ee0:	8900004c 	andi	r4,r17,1
  803ee4:	2922b03a 	or	r17,r5,r4
  803ee8:	1806d07a 	srli	r3,r3,1
  803eec:	1462b03a 	or	r17,r2,r17
  803ef0:	3825883a 	mov	r18,r7
  803ef4:	003f7106 	br	803cbc <__alt_data_end+0xff803cbc>
  803ef8:	2984b03a 	or	r2,r5,r6
  803efc:	103f6826 	beq	r2,zero,803ca0 <__alt_data_end+0xff803ca0>
  803f00:	39c03fcc 	andi	r7,r7,255
  803f04:	003f6706 	br	803ca4 <__alt_data_end+0xff803ca4>
  803f08:	4086b03a 	or	r3,r8,r2
  803f0c:	18015226 	beq	r3,zero,804458 <__subdf3+0x820>
  803f10:	00c00434 	movhi	r3,16
  803f14:	41400234 	orhi	r5,r8,8
  803f18:	18ffffc4 	addi	r3,r3,-1
  803f1c:	28ca703a 	and	r5,r5,r3
  803f20:	003f7e06 	br	803d1c <__alt_data_end+0xff803d1c>
  803f24:	10bfffc4 	addi	r2,r2,-1
  803f28:	1000491e 	bne	r2,zero,804050 <__subdf3+0x418>
  803f2c:	898fc83a 	sub	r7,r17,r6
  803f30:	89e3803a 	cmpltu	r17,r17,r7
  803f34:	1947c83a 	sub	r3,r3,r5
  803f38:	1c47c83a 	sub	r3,r3,r17
  803f3c:	3823883a 	mov	r17,r7
  803f40:	003f9b06 	br	803db0 <__alt_data_end+0xff803db0>
  803f44:	2988b03a 	or	r4,r5,r6
  803f48:	203f5c26 	beq	r4,zero,803cbc <__alt_data_end+0xff803cbc>
  803f4c:	10bfffc4 	addi	r2,r2,-1
  803f50:	1000931e 	bne	r2,zero,8041a0 <__subdf3+0x568>
  803f54:	898d883a 	add	r6,r17,r6
  803f58:	3463803a 	cmpltu	r17,r6,r17
  803f5c:	1947883a 	add	r3,r3,r5
  803f60:	88c7883a 	add	r3,r17,r3
  803f64:	3023883a 	mov	r17,r6
  803f68:	003fd306 	br	803eb8 <__alt_data_end+0xff803eb8>
  803f6c:	1000541e 	bne	r2,zero,8040c0 <__subdf3+0x488>
  803f70:	80800044 	addi	r2,r16,1
  803f74:	1081ffcc 	andi	r2,r2,2047
  803f78:	01000044 	movi	r4,1
  803f7c:	2080a20e 	bge	r4,r2,804208 <__subdf3+0x5d0>
  803f80:	8989c83a 	sub	r4,r17,r6
  803f84:	8905803a 	cmpltu	r2,r17,r4
  803f88:	1967c83a 	sub	r19,r3,r5
  803f8c:	98a7c83a 	sub	r19,r19,r2
  803f90:	9880202c 	andhi	r2,r19,128
  803f94:	10006326 	beq	r2,zero,804124 <__subdf3+0x4ec>
  803f98:	3463c83a 	sub	r17,r6,r17
  803f9c:	28c7c83a 	sub	r3,r5,r3
  803fa0:	344d803a 	cmpltu	r6,r6,r17
  803fa4:	19a7c83a 	sub	r19,r3,r6
  803fa8:	3825883a 	mov	r18,r7
  803fac:	983f861e 	bne	r19,zero,803dc8 <__alt_data_end+0xff803dc8>
  803fb0:	8809883a 	mov	r4,r17
  803fb4:	08049480 	call	804948 <__clzsi2>
  803fb8:	10800804 	addi	r2,r2,32
  803fbc:	113ffe04 	addi	r4,r2,-8
  803fc0:	00c007c4 	movi	r3,31
  803fc4:	193f850e 	bge	r3,r4,803ddc <__alt_data_end+0xff803ddc>
  803fc8:	10bff604 	addi	r2,r2,-40
  803fcc:	8884983a 	sll	r2,r17,r2
  803fd0:	0023883a 	mov	r17,zero
  803fd4:	243f880e 	bge	r4,r16,803df8 <__alt_data_end+0xff803df8>
  803fd8:	00ffe034 	movhi	r3,65408
  803fdc:	18ffffc4 	addi	r3,r3,-1
  803fe0:	8121c83a 	sub	r16,r16,r4
  803fe4:	10c6703a 	and	r3,r2,r3
  803fe8:	003f3406 	br	803cbc <__alt_data_end+0xff803cbc>
  803fec:	9100004c 	andi	r4,r18,1
  803ff0:	000b883a 	mov	r5,zero
  803ff4:	0005883a 	mov	r2,zero
  803ff8:	003f4806 	br	803d1c <__alt_data_end+0xff803d1c>
  803ffc:	298cb03a 	or	r6,r5,r6
  804000:	300cc03a 	cmpne	r6,r6,zero
  804004:	0005883a 	mov	r2,zero
  804008:	003f6406 	br	803d9c <__alt_data_end+0xff803d9c>
  80400c:	10009a1e 	bne	r2,zero,804278 <__subdf3+0x640>
  804010:	82400044 	addi	r9,r16,1
  804014:	4881ffcc 	andi	r2,r9,2047
  804018:	02800044 	movi	r10,1
  80401c:	5080670e 	bge	r10,r2,8041bc <__subdf3+0x584>
  804020:	0081ffc4 	movi	r2,2047
  804024:	4880af26 	beq	r9,r2,8042e4 <__subdf3+0x6ac>
  804028:	898d883a 	add	r6,r17,r6
  80402c:	1945883a 	add	r2,r3,r5
  804030:	3447803a 	cmpltu	r3,r6,r17
  804034:	1887883a 	add	r3,r3,r2
  804038:	182297fa 	slli	r17,r3,31
  80403c:	300cd07a 	srli	r6,r6,1
  804040:	1806d07a 	srli	r3,r3,1
  804044:	4821883a 	mov	r16,r9
  804048:	89a2b03a 	or	r17,r17,r6
  80404c:	003f1b06 	br	803cbc <__alt_data_end+0xff803cbc>
  804050:	0101ffc4 	movi	r4,2047
  804054:	813f441e 	bne	r16,r4,803d68 <__alt_data_end+0xff803d68>
  804058:	003f1806 	br	803cbc <__alt_data_end+0xff803cbc>
  80405c:	843ff844 	addi	r16,r16,-31
  804060:	01400804 	movi	r5,32
  804064:	1408d83a 	srl	r4,r2,r16
  804068:	19405026 	beq	r3,r5,8041ac <__subdf3+0x574>
  80406c:	01401004 	movi	r5,64
  804070:	28c7c83a 	sub	r3,r5,r3
  804074:	10c4983a 	sll	r2,r2,r3
  804078:	88a2b03a 	or	r17,r17,r2
  80407c:	8822c03a 	cmpne	r17,r17,zero
  804080:	2462b03a 	or	r17,r4,r17
  804084:	0007883a 	mov	r3,zero
  804088:	0021883a 	mov	r16,zero
  80408c:	003f6d06 	br	803e44 <__alt_data_end+0xff803e44>
  804090:	11fff804 	addi	r7,r2,-32
  804094:	01000804 	movi	r4,32
  804098:	29ced83a 	srl	r7,r5,r7
  80409c:	11004526 	beq	r2,r4,8041b4 <__subdf3+0x57c>
  8040a0:	01001004 	movi	r4,64
  8040a4:	2089c83a 	sub	r4,r4,r2
  8040a8:	2904983a 	sll	r2,r5,r4
  8040ac:	118cb03a 	or	r6,r2,r6
  8040b0:	300cc03a 	cmpne	r6,r6,zero
  8040b4:	398cb03a 	or	r6,r7,r6
  8040b8:	0005883a 	mov	r2,zero
  8040bc:	003f3706 	br	803d9c <__alt_data_end+0xff803d9c>
  8040c0:	80002a26 	beq	r16,zero,80416c <__subdf3+0x534>
  8040c4:	0101ffc4 	movi	r4,2047
  8040c8:	49006626 	beq	r9,r4,804264 <__subdf3+0x62c>
  8040cc:	0085c83a 	sub	r2,zero,r2
  8040d0:	18c02034 	orhi	r3,r3,128
  8040d4:	01000e04 	movi	r4,56
  8040d8:	20807e16 	blt	r4,r2,8042d4 <__subdf3+0x69c>
  8040dc:	010007c4 	movi	r4,31
  8040e0:	2080e716 	blt	r4,r2,804480 <__subdf3+0x848>
  8040e4:	01000804 	movi	r4,32
  8040e8:	2089c83a 	sub	r4,r4,r2
  8040ec:	1914983a 	sll	r10,r3,r4
  8040f0:	8890d83a 	srl	r8,r17,r2
  8040f4:	8908983a 	sll	r4,r17,r4
  8040f8:	1884d83a 	srl	r2,r3,r2
  8040fc:	5222b03a 	or	r17,r10,r8
  804100:	2006c03a 	cmpne	r3,r4,zero
  804104:	88e2b03a 	or	r17,r17,r3
  804108:	3463c83a 	sub	r17,r6,r17
  80410c:	2885c83a 	sub	r2,r5,r2
  804110:	344d803a 	cmpltu	r6,r6,r17
  804114:	1187c83a 	sub	r3,r2,r6
  804118:	4821883a 	mov	r16,r9
  80411c:	3825883a 	mov	r18,r7
  804120:	003f2306 	br	803db0 <__alt_data_end+0xff803db0>
  804124:	24d0b03a 	or	r8,r4,r19
  804128:	40001b1e 	bne	r8,zero,804198 <__subdf3+0x560>
  80412c:	0005883a 	mov	r2,zero
  804130:	0009883a 	mov	r4,zero
  804134:	0021883a 	mov	r16,zero
  804138:	003f4906 	br	803e60 <__alt_data_end+0xff803e60>
  80413c:	010007c4 	movi	r4,31
  804140:	20803a16 	blt	r4,r2,80422c <__subdf3+0x5f4>
  804144:	01000804 	movi	r4,32
  804148:	2089c83a 	sub	r4,r4,r2
  80414c:	2912983a 	sll	r9,r5,r4
  804150:	3090d83a 	srl	r8,r6,r2
  804154:	3108983a 	sll	r4,r6,r4
  804158:	2884d83a 	srl	r2,r5,r2
  80415c:	4a12b03a 	or	r9,r9,r8
  804160:	2008c03a 	cmpne	r4,r4,zero
  804164:	4912b03a 	or	r9,r9,r4
  804168:	003f4e06 	br	803ea4 <__alt_data_end+0xff803ea4>
  80416c:	1c48b03a 	or	r4,r3,r17
  804170:	20003c26 	beq	r4,zero,804264 <__subdf3+0x62c>
  804174:	0084303a 	nor	r2,zero,r2
  804178:	1000381e 	bne	r2,zero,80425c <__subdf3+0x624>
  80417c:	3463c83a 	sub	r17,r6,r17
  804180:	28c5c83a 	sub	r2,r5,r3
  804184:	344d803a 	cmpltu	r6,r6,r17
  804188:	1187c83a 	sub	r3,r2,r6
  80418c:	4821883a 	mov	r16,r9
  804190:	3825883a 	mov	r18,r7
  804194:	003f0606 	br	803db0 <__alt_data_end+0xff803db0>
  804198:	2023883a 	mov	r17,r4
  80419c:	003f0906 	br	803dc4 <__alt_data_end+0xff803dc4>
  8041a0:	0101ffc4 	movi	r4,2047
  8041a4:	813f3a1e 	bne	r16,r4,803e90 <__alt_data_end+0xff803e90>
  8041a8:	003ec406 	br	803cbc <__alt_data_end+0xff803cbc>
  8041ac:	0005883a 	mov	r2,zero
  8041b0:	003fb106 	br	804078 <__alt_data_end+0xff804078>
  8041b4:	0005883a 	mov	r2,zero
  8041b8:	003fbc06 	br	8040ac <__alt_data_end+0xff8040ac>
  8041bc:	1c44b03a 	or	r2,r3,r17
  8041c0:	80008e1e 	bne	r16,zero,8043fc <__subdf3+0x7c4>
  8041c4:	1000c826 	beq	r2,zero,8044e8 <__subdf3+0x8b0>
  8041c8:	2984b03a 	or	r2,r5,r6
  8041cc:	103ebb26 	beq	r2,zero,803cbc <__alt_data_end+0xff803cbc>
  8041d0:	8989883a 	add	r4,r17,r6
  8041d4:	1945883a 	add	r2,r3,r5
  8041d8:	2447803a 	cmpltu	r3,r4,r17
  8041dc:	1887883a 	add	r3,r3,r2
  8041e0:	1880202c 	andhi	r2,r3,128
  8041e4:	2023883a 	mov	r17,r4
  8041e8:	103f1626 	beq	r2,zero,803e44 <__alt_data_end+0xff803e44>
  8041ec:	00bfe034 	movhi	r2,65408
  8041f0:	10bfffc4 	addi	r2,r2,-1
  8041f4:	5021883a 	mov	r16,r10
  8041f8:	1886703a 	and	r3,r3,r2
  8041fc:	003eaf06 	br	803cbc <__alt_data_end+0xff803cbc>
  804200:	3825883a 	mov	r18,r7
  804204:	003f0f06 	br	803e44 <__alt_data_end+0xff803e44>
  804208:	1c44b03a 	or	r2,r3,r17
  80420c:	8000251e 	bne	r16,zero,8042a4 <__subdf3+0x66c>
  804210:	1000661e 	bne	r2,zero,8043ac <__subdf3+0x774>
  804214:	2990b03a 	or	r8,r5,r6
  804218:	40009626 	beq	r8,zero,804474 <__subdf3+0x83c>
  80421c:	2807883a 	mov	r3,r5
  804220:	3023883a 	mov	r17,r6
  804224:	3825883a 	mov	r18,r7
  804228:	003ea406 	br	803cbc <__alt_data_end+0xff803cbc>
  80422c:	127ff804 	addi	r9,r2,-32
  804230:	01000804 	movi	r4,32
  804234:	2a52d83a 	srl	r9,r5,r9
  804238:	11008c26 	beq	r2,r4,80446c <__subdf3+0x834>
  80423c:	01001004 	movi	r4,64
  804240:	2085c83a 	sub	r2,r4,r2
  804244:	2884983a 	sll	r2,r5,r2
  804248:	118cb03a 	or	r6,r2,r6
  80424c:	300cc03a 	cmpne	r6,r6,zero
  804250:	4992b03a 	or	r9,r9,r6
  804254:	0005883a 	mov	r2,zero
  804258:	003f1206 	br	803ea4 <__alt_data_end+0xff803ea4>
  80425c:	0101ffc4 	movi	r4,2047
  804260:	493f9c1e 	bne	r9,r4,8040d4 <__alt_data_end+0xff8040d4>
  804264:	2807883a 	mov	r3,r5
  804268:	3023883a 	mov	r17,r6
  80426c:	4821883a 	mov	r16,r9
  804270:	3825883a 	mov	r18,r7
  804274:	003e9106 	br	803cbc <__alt_data_end+0xff803cbc>
  804278:	80001f1e 	bne	r16,zero,8042f8 <__subdf3+0x6c0>
  80427c:	1c48b03a 	or	r4,r3,r17
  804280:	20005a26 	beq	r4,zero,8043ec <__subdf3+0x7b4>
  804284:	0084303a 	nor	r2,zero,r2
  804288:	1000561e 	bne	r2,zero,8043e4 <__subdf3+0x7ac>
  80428c:	89a3883a 	add	r17,r17,r6
  804290:	1945883a 	add	r2,r3,r5
  804294:	898d803a 	cmpltu	r6,r17,r6
  804298:	3087883a 	add	r3,r6,r2
  80429c:	4821883a 	mov	r16,r9
  8042a0:	003f0506 	br	803eb8 <__alt_data_end+0xff803eb8>
  8042a4:	10002b1e 	bne	r2,zero,804354 <__subdf3+0x71c>
  8042a8:	2984b03a 	or	r2,r5,r6
  8042ac:	10008026 	beq	r2,zero,8044b0 <__subdf3+0x878>
  8042b0:	2807883a 	mov	r3,r5
  8042b4:	3023883a 	mov	r17,r6
  8042b8:	3825883a 	mov	r18,r7
  8042bc:	0401ffc4 	movi	r16,2047
  8042c0:	003e7e06 	br	803cbc <__alt_data_end+0xff803cbc>
  8042c4:	3809883a 	mov	r4,r7
  8042c8:	0011883a 	mov	r8,zero
  8042cc:	0005883a 	mov	r2,zero
  8042d0:	003ee306 	br	803e60 <__alt_data_end+0xff803e60>
  8042d4:	1c62b03a 	or	r17,r3,r17
  8042d8:	8822c03a 	cmpne	r17,r17,zero
  8042dc:	0005883a 	mov	r2,zero
  8042e0:	003f8906 	br	804108 <__alt_data_end+0xff804108>
  8042e4:	3809883a 	mov	r4,r7
  8042e8:	4821883a 	mov	r16,r9
  8042ec:	0011883a 	mov	r8,zero
  8042f0:	0005883a 	mov	r2,zero
  8042f4:	003eda06 	br	803e60 <__alt_data_end+0xff803e60>
  8042f8:	0101ffc4 	movi	r4,2047
  8042fc:	49003b26 	beq	r9,r4,8043ec <__subdf3+0x7b4>
  804300:	0085c83a 	sub	r2,zero,r2
  804304:	18c02034 	orhi	r3,r3,128
  804308:	01000e04 	movi	r4,56
  80430c:	20806e16 	blt	r4,r2,8044c8 <__subdf3+0x890>
  804310:	010007c4 	movi	r4,31
  804314:	20807716 	blt	r4,r2,8044f4 <__subdf3+0x8bc>
  804318:	01000804 	movi	r4,32
  80431c:	2089c83a 	sub	r4,r4,r2
  804320:	1914983a 	sll	r10,r3,r4
  804324:	8890d83a 	srl	r8,r17,r2
  804328:	8908983a 	sll	r4,r17,r4
  80432c:	1884d83a 	srl	r2,r3,r2
  804330:	5222b03a 	or	r17,r10,r8
  804334:	2006c03a 	cmpne	r3,r4,zero
  804338:	88e2b03a 	or	r17,r17,r3
  80433c:	89a3883a 	add	r17,r17,r6
  804340:	1145883a 	add	r2,r2,r5
  804344:	898d803a 	cmpltu	r6,r17,r6
  804348:	3087883a 	add	r3,r6,r2
  80434c:	4821883a 	mov	r16,r9
  804350:	003ed906 	br	803eb8 <__alt_data_end+0xff803eb8>
  804354:	2984b03a 	or	r2,r5,r6
  804358:	10004226 	beq	r2,zero,804464 <__subdf3+0x82c>
  80435c:	1808d0fa 	srli	r4,r3,3
  804360:	8822d0fa 	srli	r17,r17,3
  804364:	1806977a 	slli	r3,r3,29
  804368:	2080022c 	andhi	r2,r4,8
  80436c:	1c62b03a 	or	r17,r3,r17
  804370:	10000826 	beq	r2,zero,804394 <__subdf3+0x75c>
  804374:	2812d0fa 	srli	r9,r5,3
  804378:	4880022c 	andhi	r2,r9,8
  80437c:	1000051e 	bne	r2,zero,804394 <__subdf3+0x75c>
  804380:	300cd0fa 	srli	r6,r6,3
  804384:	2804977a 	slli	r2,r5,29
  804388:	4809883a 	mov	r4,r9
  80438c:	3825883a 	mov	r18,r7
  804390:	11a2b03a 	or	r17,r2,r6
  804394:	8806d77a 	srli	r3,r17,29
  804398:	200890fa 	slli	r4,r4,3
  80439c:	882290fa 	slli	r17,r17,3
  8043a0:	0401ffc4 	movi	r16,2047
  8043a4:	1906b03a 	or	r3,r3,r4
  8043a8:	003e4406 	br	803cbc <__alt_data_end+0xff803cbc>
  8043ac:	2984b03a 	or	r2,r5,r6
  8043b0:	103e4226 	beq	r2,zero,803cbc <__alt_data_end+0xff803cbc>
  8043b4:	8989c83a 	sub	r4,r17,r6
  8043b8:	8911803a 	cmpltu	r8,r17,r4
  8043bc:	1945c83a 	sub	r2,r3,r5
  8043c0:	1205c83a 	sub	r2,r2,r8
  8043c4:	1200202c 	andhi	r8,r2,128
  8043c8:	403e9a26 	beq	r8,zero,803e34 <__alt_data_end+0xff803e34>
  8043cc:	3463c83a 	sub	r17,r6,r17
  8043d0:	28c5c83a 	sub	r2,r5,r3
  8043d4:	344d803a 	cmpltu	r6,r6,r17
  8043d8:	1187c83a 	sub	r3,r2,r6
  8043dc:	3825883a 	mov	r18,r7
  8043e0:	003e3606 	br	803cbc <__alt_data_end+0xff803cbc>
  8043e4:	0101ffc4 	movi	r4,2047
  8043e8:	493fc71e 	bne	r9,r4,804308 <__alt_data_end+0xff804308>
  8043ec:	2807883a 	mov	r3,r5
  8043f0:	3023883a 	mov	r17,r6
  8043f4:	4821883a 	mov	r16,r9
  8043f8:	003e3006 	br	803cbc <__alt_data_end+0xff803cbc>
  8043fc:	10003626 	beq	r2,zero,8044d8 <__subdf3+0x8a0>
  804400:	2984b03a 	or	r2,r5,r6
  804404:	10001726 	beq	r2,zero,804464 <__subdf3+0x82c>
  804408:	1808d0fa 	srli	r4,r3,3
  80440c:	8822d0fa 	srli	r17,r17,3
  804410:	1806977a 	slli	r3,r3,29
  804414:	2080022c 	andhi	r2,r4,8
  804418:	1c62b03a 	or	r17,r3,r17
  80441c:	10000726 	beq	r2,zero,80443c <__subdf3+0x804>
  804420:	2812d0fa 	srli	r9,r5,3
  804424:	4880022c 	andhi	r2,r9,8
  804428:	1000041e 	bne	r2,zero,80443c <__subdf3+0x804>
  80442c:	300cd0fa 	srli	r6,r6,3
  804430:	2804977a 	slli	r2,r5,29
  804434:	4809883a 	mov	r4,r9
  804438:	11a2b03a 	or	r17,r2,r6
  80443c:	8806d77a 	srli	r3,r17,29
  804440:	200890fa 	slli	r4,r4,3
  804444:	882290fa 	slli	r17,r17,3
  804448:	3825883a 	mov	r18,r7
  80444c:	1906b03a 	or	r3,r3,r4
  804450:	0401ffc4 	movi	r16,2047
  804454:	003e1906 	br	803cbc <__alt_data_end+0xff803cbc>
  804458:	000b883a 	mov	r5,zero
  80445c:	0005883a 	mov	r2,zero
  804460:	003e2e06 	br	803d1c <__alt_data_end+0xff803d1c>
  804464:	0401ffc4 	movi	r16,2047
  804468:	003e1406 	br	803cbc <__alt_data_end+0xff803cbc>
  80446c:	0005883a 	mov	r2,zero
  804470:	003f7506 	br	804248 <__alt_data_end+0xff804248>
  804474:	0005883a 	mov	r2,zero
  804478:	0009883a 	mov	r4,zero
  80447c:	003e7806 	br	803e60 <__alt_data_end+0xff803e60>
  804480:	123ff804 	addi	r8,r2,-32
  804484:	01000804 	movi	r4,32
  804488:	1a10d83a 	srl	r8,r3,r8
  80448c:	11002526 	beq	r2,r4,804524 <__subdf3+0x8ec>
  804490:	01001004 	movi	r4,64
  804494:	2085c83a 	sub	r2,r4,r2
  804498:	1884983a 	sll	r2,r3,r2
  80449c:	1444b03a 	or	r2,r2,r17
  8044a0:	1004c03a 	cmpne	r2,r2,zero
  8044a4:	40a2b03a 	or	r17,r8,r2
  8044a8:	0005883a 	mov	r2,zero
  8044ac:	003f1606 	br	804108 <__alt_data_end+0xff804108>
  8044b0:	02000434 	movhi	r8,16
  8044b4:	0009883a 	mov	r4,zero
  8044b8:	423fffc4 	addi	r8,r8,-1
  8044bc:	00bfffc4 	movi	r2,-1
  8044c0:	0401ffc4 	movi	r16,2047
  8044c4:	003e6606 	br	803e60 <__alt_data_end+0xff803e60>
  8044c8:	1c62b03a 	or	r17,r3,r17
  8044cc:	8822c03a 	cmpne	r17,r17,zero
  8044d0:	0005883a 	mov	r2,zero
  8044d4:	003f9906 	br	80433c <__alt_data_end+0xff80433c>
  8044d8:	2807883a 	mov	r3,r5
  8044dc:	3023883a 	mov	r17,r6
  8044e0:	0401ffc4 	movi	r16,2047
  8044e4:	003df506 	br	803cbc <__alt_data_end+0xff803cbc>
  8044e8:	2807883a 	mov	r3,r5
  8044ec:	3023883a 	mov	r17,r6
  8044f0:	003df206 	br	803cbc <__alt_data_end+0xff803cbc>
  8044f4:	123ff804 	addi	r8,r2,-32
  8044f8:	01000804 	movi	r4,32
  8044fc:	1a10d83a 	srl	r8,r3,r8
  804500:	11000a26 	beq	r2,r4,80452c <__subdf3+0x8f4>
  804504:	01001004 	movi	r4,64
  804508:	2085c83a 	sub	r2,r4,r2
  80450c:	1884983a 	sll	r2,r3,r2
  804510:	1444b03a 	or	r2,r2,r17
  804514:	1004c03a 	cmpne	r2,r2,zero
  804518:	40a2b03a 	or	r17,r8,r2
  80451c:	0005883a 	mov	r2,zero
  804520:	003f8606 	br	80433c <__alt_data_end+0xff80433c>
  804524:	0005883a 	mov	r2,zero
  804528:	003fdc06 	br	80449c <__alt_data_end+0xff80449c>
  80452c:	0005883a 	mov	r2,zero
  804530:	003ff706 	br	804510 <__alt_data_end+0xff804510>

00804534 <__fixdfsi>:
  804534:	280cd53a 	srli	r6,r5,20
  804538:	00c00434 	movhi	r3,16
  80453c:	18ffffc4 	addi	r3,r3,-1
  804540:	3181ffcc 	andi	r6,r6,2047
  804544:	01c0ff84 	movi	r7,1022
  804548:	28c6703a 	and	r3,r5,r3
  80454c:	280ad7fa 	srli	r5,r5,31
  804550:	3980120e 	bge	r7,r6,80459c <__fixdfsi+0x68>
  804554:	00810744 	movi	r2,1053
  804558:	11800c16 	blt	r2,r6,80458c <__fixdfsi+0x58>
  80455c:	00810cc4 	movi	r2,1075
  804560:	1185c83a 	sub	r2,r2,r6
  804564:	01c007c4 	movi	r7,31
  804568:	18c00434 	orhi	r3,r3,16
  80456c:	38800d16 	blt	r7,r2,8045a4 <__fixdfsi+0x70>
  804570:	31befb44 	addi	r6,r6,-1043
  804574:	2084d83a 	srl	r2,r4,r2
  804578:	1986983a 	sll	r3,r3,r6
  80457c:	1884b03a 	or	r2,r3,r2
  804580:	28000726 	beq	r5,zero,8045a0 <__fixdfsi+0x6c>
  804584:	0085c83a 	sub	r2,zero,r2
  804588:	f800283a 	ret
  80458c:	00a00034 	movhi	r2,32768
  804590:	10bfffc4 	addi	r2,r2,-1
  804594:	2885883a 	add	r2,r5,r2
  804598:	f800283a 	ret
  80459c:	0005883a 	mov	r2,zero
  8045a0:	f800283a 	ret
  8045a4:	008104c4 	movi	r2,1043
  8045a8:	1185c83a 	sub	r2,r2,r6
  8045ac:	1884d83a 	srl	r2,r3,r2
  8045b0:	003ff306 	br	804580 <__alt_data_end+0xff804580>

008045b4 <__floatsidf>:
  8045b4:	defffd04 	addi	sp,sp,-12
  8045b8:	dfc00215 	stw	ra,8(sp)
  8045bc:	dc400115 	stw	r17,4(sp)
  8045c0:	dc000015 	stw	r16,0(sp)
  8045c4:	20002b26 	beq	r4,zero,804674 <__floatsidf+0xc0>
  8045c8:	2023883a 	mov	r17,r4
  8045cc:	2020d7fa 	srli	r16,r4,31
  8045d0:	20002d16 	blt	r4,zero,804688 <__floatsidf+0xd4>
  8045d4:	8809883a 	mov	r4,r17
  8045d8:	08049480 	call	804948 <__clzsi2>
  8045dc:	01410784 	movi	r5,1054
  8045e0:	288bc83a 	sub	r5,r5,r2
  8045e4:	01010cc4 	movi	r4,1075
  8045e8:	2149c83a 	sub	r4,r4,r5
  8045ec:	00c007c4 	movi	r3,31
  8045f0:	1900160e 	bge	r3,r4,80464c <__floatsidf+0x98>
  8045f4:	00c104c4 	movi	r3,1043
  8045f8:	1947c83a 	sub	r3,r3,r5
  8045fc:	88c6983a 	sll	r3,r17,r3
  804600:	00800434 	movhi	r2,16
  804604:	10bfffc4 	addi	r2,r2,-1
  804608:	1886703a 	and	r3,r3,r2
  80460c:	2941ffcc 	andi	r5,r5,2047
  804610:	800d883a 	mov	r6,r16
  804614:	0005883a 	mov	r2,zero
  804618:	280a953a 	slli	r5,r5,20
  80461c:	31803fcc 	andi	r6,r6,255
  804620:	01000434 	movhi	r4,16
  804624:	300c97fa 	slli	r6,r6,31
  804628:	213fffc4 	addi	r4,r4,-1
  80462c:	1906703a 	and	r3,r3,r4
  804630:	1946b03a 	or	r3,r3,r5
  804634:	1986b03a 	or	r3,r3,r6
  804638:	dfc00217 	ldw	ra,8(sp)
  80463c:	dc400117 	ldw	r17,4(sp)
  804640:	dc000017 	ldw	r16,0(sp)
  804644:	dec00304 	addi	sp,sp,12
  804648:	f800283a 	ret
  80464c:	00c002c4 	movi	r3,11
  804650:	1887c83a 	sub	r3,r3,r2
  804654:	88c6d83a 	srl	r3,r17,r3
  804658:	8904983a 	sll	r2,r17,r4
  80465c:	01000434 	movhi	r4,16
  804660:	213fffc4 	addi	r4,r4,-1
  804664:	2941ffcc 	andi	r5,r5,2047
  804668:	1906703a 	and	r3,r3,r4
  80466c:	800d883a 	mov	r6,r16
  804670:	003fe906 	br	804618 <__alt_data_end+0xff804618>
  804674:	000d883a 	mov	r6,zero
  804678:	000b883a 	mov	r5,zero
  80467c:	0007883a 	mov	r3,zero
  804680:	0005883a 	mov	r2,zero
  804684:	003fe406 	br	804618 <__alt_data_end+0xff804618>
  804688:	0123c83a 	sub	r17,zero,r4
  80468c:	003fd106 	br	8045d4 <__alt_data_end+0xff8045d4>

00804690 <__extendsfdf2>:
  804690:	200ad5fa 	srli	r5,r4,23
  804694:	defffd04 	addi	sp,sp,-12
  804698:	dc400115 	stw	r17,4(sp)
  80469c:	29403fcc 	andi	r5,r5,255
  8046a0:	29800044 	addi	r6,r5,1
  8046a4:	04402034 	movhi	r17,128
  8046a8:	dc000015 	stw	r16,0(sp)
  8046ac:	8c7fffc4 	addi	r17,r17,-1
  8046b0:	dfc00215 	stw	ra,8(sp)
  8046b4:	31803fcc 	andi	r6,r6,255
  8046b8:	00800044 	movi	r2,1
  8046bc:	8922703a 	and	r17,r17,r4
  8046c0:	2020d7fa 	srli	r16,r4,31
  8046c4:	1180110e 	bge	r2,r6,80470c <__extendsfdf2+0x7c>
  8046c8:	880cd0fa 	srli	r6,r17,3
  8046cc:	8822977a 	slli	r17,r17,29
  8046d0:	2940e004 	addi	r5,r5,896
  8046d4:	2941ffcc 	andi	r5,r5,2047
  8046d8:	2804953a 	slli	r2,r5,20
  8046dc:	01400434 	movhi	r5,16
  8046e0:	800697fa 	slli	r3,r16,31
  8046e4:	297fffc4 	addi	r5,r5,-1
  8046e8:	314a703a 	and	r5,r6,r5
  8046ec:	288ab03a 	or	r5,r5,r2
  8046f0:	28c6b03a 	or	r3,r5,r3
  8046f4:	8805883a 	mov	r2,r17
  8046f8:	dfc00217 	ldw	ra,8(sp)
  8046fc:	dc400117 	ldw	r17,4(sp)
  804700:	dc000017 	ldw	r16,0(sp)
  804704:	dec00304 	addi	sp,sp,12
  804708:	f800283a 	ret
  80470c:	2800111e 	bne	r5,zero,804754 <__extendsfdf2+0xc4>
  804710:	88001c26 	beq	r17,zero,804784 <__extendsfdf2+0xf4>
  804714:	8809883a 	mov	r4,r17
  804718:	08049480 	call	804948 <__clzsi2>
  80471c:	00c00284 	movi	r3,10
  804720:	18801b16 	blt	r3,r2,804790 <__extendsfdf2+0x100>
  804724:	018002c4 	movi	r6,11
  804728:	308dc83a 	sub	r6,r6,r2
  80472c:	11000544 	addi	r4,r2,21
  804730:	8986d83a 	srl	r3,r17,r6
  804734:	8922983a 	sll	r17,r17,r4
  804738:	0180e244 	movi	r6,905
  80473c:	01400434 	movhi	r5,16
  804740:	3085c83a 	sub	r2,r6,r2
  804744:	297fffc4 	addi	r5,r5,-1
  804748:	194c703a 	and	r6,r3,r5
  80474c:	1141ffcc 	andi	r5,r2,2047
  804750:	003fe006 	br	8046d4 <__alt_data_end+0xff8046d4>
  804754:	88000826 	beq	r17,zero,804778 <__extendsfdf2+0xe8>
  804758:	880cd0fa 	srli	r6,r17,3
  80475c:	00800434 	movhi	r2,16
  804760:	10bfffc4 	addi	r2,r2,-1
  804764:	31800234 	orhi	r6,r6,8
  804768:	8822977a 	slli	r17,r17,29
  80476c:	308c703a 	and	r6,r6,r2
  804770:	0141ffc4 	movi	r5,2047
  804774:	003fd706 	br	8046d4 <__alt_data_end+0xff8046d4>
  804778:	0141ffc4 	movi	r5,2047
  80477c:	000d883a 	mov	r6,zero
  804780:	003fd406 	br	8046d4 <__alt_data_end+0xff8046d4>
  804784:	000b883a 	mov	r5,zero
  804788:	000d883a 	mov	r6,zero
  80478c:	003fd106 	br	8046d4 <__alt_data_end+0xff8046d4>
  804790:	11bffd44 	addi	r6,r2,-11
  804794:	8986983a 	sll	r3,r17,r6
  804798:	0023883a 	mov	r17,zero
  80479c:	003fe606 	br	804738 <__alt_data_end+0xff804738>

008047a0 <__truncdfsf2>:
  8047a0:	2810d53a 	srli	r8,r5,20
  8047a4:	01c00434 	movhi	r7,16
  8047a8:	39ffffc4 	addi	r7,r7,-1
  8047ac:	29ce703a 	and	r7,r5,r7
  8047b0:	4201ffcc 	andi	r8,r8,2047
  8047b4:	380e90fa 	slli	r7,r7,3
  8047b8:	200cd77a 	srli	r6,r4,29
  8047bc:	42400044 	addi	r9,r8,1
  8047c0:	4a41ffcc 	andi	r9,r9,2047
  8047c4:	00c00044 	movi	r3,1
  8047c8:	280ad7fa 	srli	r5,r5,31
  8047cc:	31ceb03a 	or	r7,r6,r7
  8047d0:	200490fa 	slli	r2,r4,3
  8047d4:	1a40230e 	bge	r3,r9,804864 <__truncdfsf2+0xc4>
  8047d8:	40ff2004 	addi	r3,r8,-896
  8047dc:	01803f84 	movi	r6,254
  8047e0:	30c01516 	blt	r6,r3,804838 <__truncdfsf2+0x98>
  8047e4:	00c0380e 	bge	zero,r3,8048c8 <__truncdfsf2+0x128>
  8047e8:	200c91ba 	slli	r6,r4,6
  8047ec:	380e90fa 	slli	r7,r7,3
  8047f0:	1004d77a 	srli	r2,r2,29
  8047f4:	300cc03a 	cmpne	r6,r6,zero
  8047f8:	31ccb03a 	or	r6,r6,r7
  8047fc:	308cb03a 	or	r6,r6,r2
  804800:	308001cc 	andi	r2,r6,7
  804804:	10000426 	beq	r2,zero,804818 <__truncdfsf2+0x78>
  804808:	308003cc 	andi	r2,r6,15
  80480c:	01000104 	movi	r4,4
  804810:	11000126 	beq	r2,r4,804818 <__truncdfsf2+0x78>
  804814:	31800104 	addi	r6,r6,4
  804818:	3081002c 	andhi	r2,r6,1024
  80481c:	10001626 	beq	r2,zero,804878 <__truncdfsf2+0xd8>
  804820:	18c00044 	addi	r3,r3,1
  804824:	00803fc4 	movi	r2,255
  804828:	18800326 	beq	r3,r2,804838 <__truncdfsf2+0x98>
  80482c:	300c91ba 	slli	r6,r6,6
  804830:	300cd27a 	srli	r6,r6,9
  804834:	00000206 	br	804840 <__truncdfsf2+0xa0>
  804838:	00ffffc4 	movi	r3,-1
  80483c:	000d883a 	mov	r6,zero
  804840:	18c03fcc 	andi	r3,r3,255
  804844:	180895fa 	slli	r4,r3,23
  804848:	00c02034 	movhi	r3,128
  80484c:	280a97fa 	slli	r5,r5,31
  804850:	18ffffc4 	addi	r3,r3,-1
  804854:	30c6703a 	and	r3,r6,r3
  804858:	1906b03a 	or	r3,r3,r4
  80485c:	1944b03a 	or	r2,r3,r5
  804860:	f800283a 	ret
  804864:	40000b1e 	bne	r8,zero,804894 <__truncdfsf2+0xf4>
  804868:	388cb03a 	or	r6,r7,r2
  80486c:	0007883a 	mov	r3,zero
  804870:	30000426 	beq	r6,zero,804884 <__truncdfsf2+0xe4>
  804874:	01800144 	movi	r6,5
  804878:	00803fc4 	movi	r2,255
  80487c:	300cd0fa 	srli	r6,r6,3
  804880:	18800a26 	beq	r3,r2,8048ac <__truncdfsf2+0x10c>
  804884:	00802034 	movhi	r2,128
  804888:	10bfffc4 	addi	r2,r2,-1
  80488c:	308c703a 	and	r6,r6,r2
  804890:	003feb06 	br	804840 <__alt_data_end+0xff804840>
  804894:	3888b03a 	or	r4,r7,r2
  804898:	203fe726 	beq	r4,zero,804838 <__alt_data_end+0xff804838>
  80489c:	380c90fa 	slli	r6,r7,3
  8048a0:	00c03fc4 	movi	r3,255
  8048a4:	31808034 	orhi	r6,r6,512
  8048a8:	003fd506 	br	804800 <__alt_data_end+0xff804800>
  8048ac:	303fe226 	beq	r6,zero,804838 <__alt_data_end+0xff804838>
  8048b0:	00802034 	movhi	r2,128
  8048b4:	31801034 	orhi	r6,r6,64
  8048b8:	10bfffc4 	addi	r2,r2,-1
  8048bc:	00ffffc4 	movi	r3,-1
  8048c0:	308c703a 	and	r6,r6,r2
  8048c4:	003fde06 	br	804840 <__alt_data_end+0xff804840>
  8048c8:	013ffa44 	movi	r4,-23
  8048cc:	19000e16 	blt	r3,r4,804908 <__truncdfsf2+0x168>
  8048d0:	01000784 	movi	r4,30
  8048d4:	20c9c83a 	sub	r4,r4,r3
  8048d8:	018007c4 	movi	r6,31
  8048dc:	39c02034 	orhi	r7,r7,128
  8048e0:	31000b16 	blt	r6,r4,804910 <__truncdfsf2+0x170>
  8048e4:	423f2084 	addi	r8,r8,-894
  8048e8:	120c983a 	sll	r6,r2,r8
  8048ec:	3a0e983a 	sll	r7,r7,r8
  8048f0:	1104d83a 	srl	r2,r2,r4
  8048f4:	300cc03a 	cmpne	r6,r6,zero
  8048f8:	31ceb03a 	or	r7,r6,r7
  8048fc:	388cb03a 	or	r6,r7,r2
  804900:	0007883a 	mov	r3,zero
  804904:	003fbe06 	br	804800 <__alt_data_end+0xff804800>
  804908:	0007883a 	mov	r3,zero
  80490c:	003fd906 	br	804874 <__alt_data_end+0xff804874>
  804910:	01bfff84 	movi	r6,-2
  804914:	30cdc83a 	sub	r6,r6,r3
  804918:	00c00804 	movi	r3,32
  80491c:	398cd83a 	srl	r6,r7,r6
  804920:	20c00726 	beq	r4,r3,804940 <__truncdfsf2+0x1a0>
  804924:	423f2884 	addi	r8,r8,-862
  804928:	3a0e983a 	sll	r7,r7,r8
  80492c:	3884b03a 	or	r2,r7,r2
  804930:	1004c03a 	cmpne	r2,r2,zero
  804934:	118cb03a 	or	r6,r2,r6
  804938:	0007883a 	mov	r3,zero
  80493c:	003fb006 	br	804800 <__alt_data_end+0xff804800>
  804940:	000f883a 	mov	r7,zero
  804944:	003ff906 	br	80492c <__alt_data_end+0xff80492c>

00804948 <__clzsi2>:
  804948:	00bfffd4 	movui	r2,65535
  80494c:	11000536 	bltu	r2,r4,804964 <__clzsi2+0x1c>
  804950:	00803fc4 	movi	r2,255
  804954:	11000f36 	bltu	r2,r4,804994 <__clzsi2+0x4c>
  804958:	00800804 	movi	r2,32
  80495c:	0007883a 	mov	r3,zero
  804960:	00000506 	br	804978 <__clzsi2+0x30>
  804964:	00804034 	movhi	r2,256
  804968:	10bfffc4 	addi	r2,r2,-1
  80496c:	11000c2e 	bgeu	r2,r4,8049a0 <__clzsi2+0x58>
  804970:	00800204 	movi	r2,8
  804974:	00c00604 	movi	r3,24
  804978:	20c8d83a 	srl	r4,r4,r3
  80497c:	00c02074 	movhi	r3,129
  804980:	18c7e804 	addi	r3,r3,8096
  804984:	1909883a 	add	r4,r3,r4
  804988:	20c00003 	ldbu	r3,0(r4)
  80498c:	10c5c83a 	sub	r2,r2,r3
  804990:	f800283a 	ret
  804994:	00800604 	movi	r2,24
  804998:	00c00204 	movi	r3,8
  80499c:	003ff606 	br	804978 <__alt_data_end+0xff804978>
  8049a0:	00800404 	movi	r2,16
  8049a4:	1007883a 	mov	r3,r2
  8049a8:	003ff306 	br	804978 <__alt_data_end+0xff804978>

008049ac <_printf_r>:
  8049ac:	defffd04 	addi	sp,sp,-12
  8049b0:	2805883a 	mov	r2,r5
  8049b4:	dfc00015 	stw	ra,0(sp)
  8049b8:	d9800115 	stw	r6,4(sp)
  8049bc:	d9c00215 	stw	r7,8(sp)
  8049c0:	21400217 	ldw	r5,8(r4)
  8049c4:	d9c00104 	addi	r7,sp,4
  8049c8:	100d883a 	mov	r6,r2
  8049cc:	0804b840 	call	804b84 <___vfprintf_internal_r>
  8049d0:	dfc00017 	ldw	ra,0(sp)
  8049d4:	dec00304 	addi	sp,sp,12
  8049d8:	f800283a 	ret

008049dc <printf>:
  8049dc:	defffc04 	addi	sp,sp,-16
  8049e0:	dfc00015 	stw	ra,0(sp)
  8049e4:	d9400115 	stw	r5,4(sp)
  8049e8:	d9800215 	stw	r6,8(sp)
  8049ec:	d9c00315 	stw	r7,12(sp)
  8049f0:	00802074 	movhi	r2,129
  8049f4:	108f5204 	addi	r2,r2,15688
  8049f8:	10800017 	ldw	r2,0(r2)
  8049fc:	200b883a 	mov	r5,r4
  804a00:	d9800104 	addi	r6,sp,4
  804a04:	11000217 	ldw	r4,8(r2)
  804a08:	0806d7c0 	call	806d7c <__vfprintf_internal>
  804a0c:	dfc00017 	ldw	ra,0(sp)
  804a10:	dec00404 	addi	sp,sp,16
  804a14:	f800283a 	ret

00804a18 <_puts_r>:
  804a18:	defff604 	addi	sp,sp,-40
  804a1c:	dc000715 	stw	r16,28(sp)
  804a20:	2021883a 	mov	r16,r4
  804a24:	2809883a 	mov	r4,r5
  804a28:	dc400815 	stw	r17,32(sp)
  804a2c:	dfc00915 	stw	ra,36(sp)
  804a30:	2823883a 	mov	r17,r5
  804a34:	0804aec0 	call	804aec <strlen>
  804a38:	10c00044 	addi	r3,r2,1
  804a3c:	d8800115 	stw	r2,4(sp)
  804a40:	00802074 	movhi	r2,129
  804a44:	10882804 	addi	r2,r2,8352
  804a48:	d8800215 	stw	r2,8(sp)
  804a4c:	00800044 	movi	r2,1
  804a50:	d8800315 	stw	r2,12(sp)
  804a54:	00800084 	movi	r2,2
  804a58:	dc400015 	stw	r17,0(sp)
  804a5c:	d8c00615 	stw	r3,24(sp)
  804a60:	dec00415 	stw	sp,16(sp)
  804a64:	d8800515 	stw	r2,20(sp)
  804a68:	80000226 	beq	r16,zero,804a74 <_puts_r+0x5c>
  804a6c:	80800e17 	ldw	r2,56(r16)
  804a70:	10001426 	beq	r2,zero,804ac4 <_puts_r+0xac>
  804a74:	81400217 	ldw	r5,8(r16)
  804a78:	2880030b 	ldhu	r2,12(r5)
  804a7c:	10c8000c 	andi	r3,r2,8192
  804a80:	1800061e 	bne	r3,zero,804a9c <_puts_r+0x84>
  804a84:	29001917 	ldw	r4,100(r5)
  804a88:	00f7ffc4 	movi	r3,-8193
  804a8c:	10880014 	ori	r2,r2,8192
  804a90:	20c6703a 	and	r3,r4,r3
  804a94:	2880030d 	sth	r2,12(r5)
  804a98:	28c01915 	stw	r3,100(r5)
  804a9c:	d9800404 	addi	r6,sp,16
  804aa0:	8009883a 	mov	r4,r16
  804aa4:	08092ac0 	call	8092ac <__sfvwrite_r>
  804aa8:	1000091e 	bne	r2,zero,804ad0 <_puts_r+0xb8>
  804aac:	00800284 	movi	r2,10
  804ab0:	dfc00917 	ldw	ra,36(sp)
  804ab4:	dc400817 	ldw	r17,32(sp)
  804ab8:	dc000717 	ldw	r16,28(sp)
  804abc:	dec00a04 	addi	sp,sp,40
  804ac0:	f800283a 	ret
  804ac4:	8009883a 	mov	r4,r16
  804ac8:	0808e280 	call	808e28 <__sinit>
  804acc:	003fe906 	br	804a74 <__alt_data_end+0xff804a74>
  804ad0:	00bfffc4 	movi	r2,-1
  804ad4:	003ff606 	br	804ab0 <__alt_data_end+0xff804ab0>

00804ad8 <puts>:
  804ad8:	00802074 	movhi	r2,129
  804adc:	108f5204 	addi	r2,r2,15688
  804ae0:	200b883a 	mov	r5,r4
  804ae4:	11000017 	ldw	r4,0(r2)
  804ae8:	0804a181 	jmpi	804a18 <_puts_r>

00804aec <strlen>:
  804aec:	208000cc 	andi	r2,r4,3
  804af0:	10002026 	beq	r2,zero,804b74 <strlen+0x88>
  804af4:	20800007 	ldb	r2,0(r4)
  804af8:	10002026 	beq	r2,zero,804b7c <strlen+0x90>
  804afc:	2005883a 	mov	r2,r4
  804b00:	00000206 	br	804b0c <strlen+0x20>
  804b04:	10c00007 	ldb	r3,0(r2)
  804b08:	18001826 	beq	r3,zero,804b6c <strlen+0x80>
  804b0c:	10800044 	addi	r2,r2,1
  804b10:	10c000cc 	andi	r3,r2,3
  804b14:	183ffb1e 	bne	r3,zero,804b04 <__alt_data_end+0xff804b04>
  804b18:	10c00017 	ldw	r3,0(r2)
  804b1c:	01ffbff4 	movhi	r7,65279
  804b20:	39ffbfc4 	addi	r7,r7,-257
  804b24:	00ca303a 	nor	r5,zero,r3
  804b28:	01a02074 	movhi	r6,32897
  804b2c:	19c7883a 	add	r3,r3,r7
  804b30:	31a02004 	addi	r6,r6,-32640
  804b34:	1946703a 	and	r3,r3,r5
  804b38:	1986703a 	and	r3,r3,r6
  804b3c:	1800091e 	bne	r3,zero,804b64 <strlen+0x78>
  804b40:	10800104 	addi	r2,r2,4
  804b44:	10c00017 	ldw	r3,0(r2)
  804b48:	19cb883a 	add	r5,r3,r7
  804b4c:	00c6303a 	nor	r3,zero,r3
  804b50:	28c6703a 	and	r3,r5,r3
  804b54:	1986703a 	and	r3,r3,r6
  804b58:	183ff926 	beq	r3,zero,804b40 <__alt_data_end+0xff804b40>
  804b5c:	00000106 	br	804b64 <strlen+0x78>
  804b60:	10800044 	addi	r2,r2,1
  804b64:	10c00007 	ldb	r3,0(r2)
  804b68:	183ffd1e 	bne	r3,zero,804b60 <__alt_data_end+0xff804b60>
  804b6c:	1105c83a 	sub	r2,r2,r4
  804b70:	f800283a 	ret
  804b74:	2005883a 	mov	r2,r4
  804b78:	003fe706 	br	804b18 <__alt_data_end+0xff804b18>
  804b7c:	0005883a 	mov	r2,zero
  804b80:	f800283a 	ret

00804b84 <___vfprintf_internal_r>:
  804b84:	deffb804 	addi	sp,sp,-288
  804b88:	dfc04715 	stw	ra,284(sp)
  804b8c:	ddc04515 	stw	r23,276(sp)
  804b90:	dd404315 	stw	r21,268(sp)
  804b94:	d9002c15 	stw	r4,176(sp)
  804b98:	282f883a 	mov	r23,r5
  804b9c:	302b883a 	mov	r21,r6
  804ba0:	d9c02d15 	stw	r7,180(sp)
  804ba4:	df004615 	stw	fp,280(sp)
  804ba8:	dd804415 	stw	r22,272(sp)
  804bac:	dd004215 	stw	r20,264(sp)
  804bb0:	dcc04115 	stw	r19,260(sp)
  804bb4:	dc804015 	stw	r18,256(sp)
  804bb8:	dc403f15 	stw	r17,252(sp)
  804bbc:	dc003e15 	stw	r16,248(sp)
  804bc0:	080999c0 	call	80999c <_localeconv_r>
  804bc4:	10800017 	ldw	r2,0(r2)
  804bc8:	1009883a 	mov	r4,r2
  804bcc:	d8803415 	stw	r2,208(sp)
  804bd0:	0804aec0 	call	804aec <strlen>
  804bd4:	d8803715 	stw	r2,220(sp)
  804bd8:	d8802c17 	ldw	r2,176(sp)
  804bdc:	10000226 	beq	r2,zero,804be8 <___vfprintf_internal_r+0x64>
  804be0:	10800e17 	ldw	r2,56(r2)
  804be4:	1000f926 	beq	r2,zero,804fcc <___vfprintf_internal_r+0x448>
  804be8:	b880030b 	ldhu	r2,12(r23)
  804bec:	10c8000c 	andi	r3,r2,8192
  804bf0:	1800061e 	bne	r3,zero,804c0c <___vfprintf_internal_r+0x88>
  804bf4:	b9001917 	ldw	r4,100(r23)
  804bf8:	00f7ffc4 	movi	r3,-8193
  804bfc:	10880014 	ori	r2,r2,8192
  804c00:	20c6703a 	and	r3,r4,r3
  804c04:	b880030d 	sth	r2,12(r23)
  804c08:	b8c01915 	stw	r3,100(r23)
  804c0c:	10c0020c 	andi	r3,r2,8
  804c10:	1800c126 	beq	r3,zero,804f18 <___vfprintf_internal_r+0x394>
  804c14:	b8c00417 	ldw	r3,16(r23)
  804c18:	1800bf26 	beq	r3,zero,804f18 <___vfprintf_internal_r+0x394>
  804c1c:	1080068c 	andi	r2,r2,26
  804c20:	00c00284 	movi	r3,10
  804c24:	10c0c426 	beq	r2,r3,804f38 <___vfprintf_internal_r+0x3b4>
  804c28:	d8c00404 	addi	r3,sp,16
  804c2c:	05002074 	movhi	r20,129
  804c30:	d9001e04 	addi	r4,sp,120
  804c34:	a5083984 	addi	r20,r20,8422
  804c38:	d8c01e15 	stw	r3,120(sp)
  804c3c:	d8002015 	stw	zero,128(sp)
  804c40:	d8001f15 	stw	zero,124(sp)
  804c44:	d8003315 	stw	zero,204(sp)
  804c48:	d8003615 	stw	zero,216(sp)
  804c4c:	d8003815 	stw	zero,224(sp)
  804c50:	1811883a 	mov	r8,r3
  804c54:	d8003915 	stw	zero,228(sp)
  804c58:	d8003a15 	stw	zero,232(sp)
  804c5c:	d8002f15 	stw	zero,188(sp)
  804c60:	d9002815 	stw	r4,160(sp)
  804c64:	a8800007 	ldb	r2,0(r21)
  804c68:	10027b26 	beq	r2,zero,805658 <___vfprintf_internal_r+0xad4>
  804c6c:	00c00944 	movi	r3,37
  804c70:	a821883a 	mov	r16,r21
  804c74:	10c0021e 	bne	r2,r3,804c80 <___vfprintf_internal_r+0xfc>
  804c78:	00001406 	br	804ccc <___vfprintf_internal_r+0x148>
  804c7c:	10c00326 	beq	r2,r3,804c8c <___vfprintf_internal_r+0x108>
  804c80:	84000044 	addi	r16,r16,1
  804c84:	80800007 	ldb	r2,0(r16)
  804c88:	103ffc1e 	bne	r2,zero,804c7c <__alt_data_end+0xff804c7c>
  804c8c:	8563c83a 	sub	r17,r16,r21
  804c90:	88000e26 	beq	r17,zero,804ccc <___vfprintf_internal_r+0x148>
  804c94:	d8c02017 	ldw	r3,128(sp)
  804c98:	d8801f17 	ldw	r2,124(sp)
  804c9c:	45400015 	stw	r21,0(r8)
  804ca0:	1c47883a 	add	r3,r3,r17
  804ca4:	10800044 	addi	r2,r2,1
  804ca8:	d8c02015 	stw	r3,128(sp)
  804cac:	44400115 	stw	r17,4(r8)
  804cb0:	d8801f15 	stw	r2,124(sp)
  804cb4:	00c001c4 	movi	r3,7
  804cb8:	1880a716 	blt	r3,r2,804f58 <___vfprintf_internal_r+0x3d4>
  804cbc:	42000204 	addi	r8,r8,8
  804cc0:	d9402f17 	ldw	r5,188(sp)
  804cc4:	2c4b883a 	add	r5,r5,r17
  804cc8:	d9402f15 	stw	r5,188(sp)
  804ccc:	80800007 	ldb	r2,0(r16)
  804cd0:	1000a826 	beq	r2,zero,804f74 <___vfprintf_internal_r+0x3f0>
  804cd4:	84400047 	ldb	r17,1(r16)
  804cd8:	00bfffc4 	movi	r2,-1
  804cdc:	85400044 	addi	r21,r16,1
  804ce0:	d8002785 	stb	zero,158(sp)
  804ce4:	0007883a 	mov	r3,zero
  804ce8:	000f883a 	mov	r7,zero
  804cec:	d8802915 	stw	r2,164(sp)
  804cf0:	d8003115 	stw	zero,196(sp)
  804cf4:	0025883a 	mov	r18,zero
  804cf8:	01401604 	movi	r5,88
  804cfc:	01800244 	movi	r6,9
  804d00:	02800a84 	movi	r10,42
  804d04:	02401b04 	movi	r9,108
  804d08:	ad400044 	addi	r21,r21,1
  804d0c:	88bff804 	addi	r2,r17,-32
  804d10:	28830436 	bltu	r5,r2,805924 <___vfprintf_internal_r+0xda0>
  804d14:	100490ba 	slli	r2,r2,2
  804d18:	01002034 	movhi	r4,128
  804d1c:	21134b04 	addi	r4,r4,19756
  804d20:	1105883a 	add	r2,r2,r4
  804d24:	10800017 	ldw	r2,0(r2)
  804d28:	1000683a 	jmp	r2
  804d2c:	00805844 	movi	r2,353
  804d30:	00805924 	muli	r2,zero,356
  804d34:	00805924 	muli	r2,zero,356
  804d38:	00805864 	muli	r2,zero,353
  804d3c:	00805924 	muli	r2,zero,356
  804d40:	00805924 	muli	r2,zero,356
  804d44:	00805924 	muli	r2,zero,356
  804d48:	00805924 	muli	r2,zero,356
  804d4c:	00805924 	muli	r2,zero,356
  804d50:	00805924 	muli	r2,zero,356
  804d54:	00804fd8 	cmpnei	r2,zero,319
  804d58:	00805780 	call	80578 <__alt_mem_sdram-0x77fa88>
  804d5c:	00805924 	muli	r2,zero,356
  804d60:	00804ea0 	cmpeqi	r2,zero,314
  804d64:	00805000 	call	80500 <__alt_mem_sdram-0x77fb00>
  804d68:	00805924 	muli	r2,zero,356
  804d6c:	00805040 	call	80504 <__alt_mem_sdram-0x77fafc>
  804d70:	0080504c 	andi	r2,zero,321
  804d74:	0080504c 	andi	r2,zero,321
  804d78:	0080504c 	andi	r2,zero,321
  804d7c:	0080504c 	andi	r2,zero,321
  804d80:	0080504c 	andi	r2,zero,321
  804d84:	0080504c 	andi	r2,zero,321
  804d88:	0080504c 	andi	r2,zero,321
  804d8c:	0080504c 	andi	r2,zero,321
  804d90:	0080504c 	andi	r2,zero,321
  804d94:	00805924 	muli	r2,zero,356
  804d98:	00805924 	muli	r2,zero,356
  804d9c:	00805924 	muli	r2,zero,356
  804da0:	00805924 	muli	r2,zero,356
  804da4:	00805924 	muli	r2,zero,356
  804da8:	00805924 	muli	r2,zero,356
  804dac:	00805924 	muli	r2,zero,356
  804db0:	00805924 	muli	r2,zero,356
  804db4:	00805924 	muli	r2,zero,356
  804db8:	00805924 	muli	r2,zero,356
  804dbc:	00805080 	call	80508 <__alt_mem_sdram-0x77faf8>
  804dc0:	0080513c 	xorhi	r2,zero,324
  804dc4:	00805924 	muli	r2,zero,356
  804dc8:	0080513c 	xorhi	r2,zero,324
  804dcc:	00805924 	muli	r2,zero,356
  804dd0:	00805924 	muli	r2,zero,356
  804dd4:	00805924 	muli	r2,zero,356
  804dd8:	00805924 	muli	r2,zero,356
  804ddc:	008051dc 	xori	r2,zero,327
  804de0:	00805924 	muli	r2,zero,356
  804de4:	00805924 	muli	r2,zero,356
  804de8:	008051e8 	cmpgeui	r2,zero,327
  804dec:	00805924 	muli	r2,zero,356
  804df0:	00805924 	muli	r2,zero,356
  804df4:	00805924 	muli	r2,zero,356
  804df8:	00805924 	muli	r2,zero,356
  804dfc:	00805924 	muli	r2,zero,356
  804e00:	00805660 	cmpeqi	r2,zero,345
  804e04:	00805924 	muli	r2,zero,356
  804e08:	00805924 	muli	r2,zero,356
  804e0c:	008056c0 	call	8056c <__alt_mem_sdram-0x77fa94>
  804e10:	00805924 	muli	r2,zero,356
  804e14:	00805924 	muli	r2,zero,356
  804e18:	00805924 	muli	r2,zero,356
  804e1c:	00805924 	muli	r2,zero,356
  804e20:	00805924 	muli	r2,zero,356
  804e24:	00805924 	muli	r2,zero,356
  804e28:	00805924 	muli	r2,zero,356
  804e2c:	00805924 	muli	r2,zero,356
  804e30:	00805924 	muli	r2,zero,356
  804e34:	00805924 	muli	r2,zero,356
  804e38:	008058d0 	cmplti	r2,zero,355
  804e3c:	00805870 	cmpltui	r2,zero,353
  804e40:	0080513c 	xorhi	r2,zero,324
  804e44:	0080513c 	xorhi	r2,zero,324
  804e48:	0080513c 	xorhi	r2,zero,324
  804e4c:	00805880 	call	80588 <__alt_mem_sdram-0x77fa78>
  804e50:	00805870 	cmpltui	r2,zero,353
  804e54:	00805924 	muli	r2,zero,356
  804e58:	00805924 	muli	r2,zero,356
  804e5c:	0080588c 	andi	r2,zero,354
  804e60:	00805924 	muli	r2,zero,356
  804e64:	0080589c 	xori	r2,zero,354
  804e68:	00805770 	cmpltui	r2,zero,349
  804e6c:	00804eac 	andhi	r2,zero,314
  804e70:	00805790 	cmplti	r2,zero,350
  804e74:	00805924 	muli	r2,zero,356
  804e78:	0080579c 	xori	r2,zero,350
  804e7c:	00805924 	muli	r2,zero,356
  804e80:	008057f8 	rdprs	r2,zero,351
  804e84:	00805924 	muli	r2,zero,356
  804e88:	00805924 	muli	r2,zero,356
  804e8c:	00805808 	cmpgei	r2,zero,352
  804e90:	d9003117 	ldw	r4,196(sp)
  804e94:	d8802d15 	stw	r2,180(sp)
  804e98:	0109c83a 	sub	r4,zero,r4
  804e9c:	d9003115 	stw	r4,196(sp)
  804ea0:	94800114 	ori	r18,r18,4
  804ea4:	ac400007 	ldb	r17,0(r21)
  804ea8:	003f9706 	br	804d08 <__alt_data_end+0xff804d08>
  804eac:	00800c04 	movi	r2,48
  804eb0:	d9002d17 	ldw	r4,180(sp)
  804eb4:	d9402917 	ldw	r5,164(sp)
  804eb8:	d8802705 	stb	r2,156(sp)
  804ebc:	00801e04 	movi	r2,120
  804ec0:	d8802745 	stb	r2,157(sp)
  804ec4:	d8002785 	stb	zero,158(sp)
  804ec8:	20c00104 	addi	r3,r4,4
  804ecc:	24c00017 	ldw	r19,0(r4)
  804ed0:	002d883a 	mov	r22,zero
  804ed4:	90800094 	ori	r2,r18,2
  804ed8:	28029a16 	blt	r5,zero,805944 <___vfprintf_internal_r+0xdc0>
  804edc:	00bfdfc4 	movi	r2,-129
  804ee0:	90a4703a 	and	r18,r18,r2
  804ee4:	d8c02d15 	stw	r3,180(sp)
  804ee8:	94800094 	ori	r18,r18,2
  804eec:	9802871e 	bne	r19,zero,80590c <___vfprintf_internal_r+0xd88>
  804ef0:	00802074 	movhi	r2,129
  804ef4:	10883204 	addi	r2,r2,8392
  804ef8:	d8803915 	stw	r2,228(sp)
  804efc:	04401e04 	movi	r17,120
  804f00:	d8802917 	ldw	r2,164(sp)
  804f04:	0039883a 	mov	fp,zero
  804f08:	1001e926 	beq	r2,zero,8056b0 <___vfprintf_internal_r+0xb2c>
  804f0c:	0027883a 	mov	r19,zero
  804f10:	002d883a 	mov	r22,zero
  804f14:	00020506 	br	80572c <___vfprintf_internal_r+0xba8>
  804f18:	d9002c17 	ldw	r4,176(sp)
  804f1c:	b80b883a 	mov	r5,r23
  804f20:	0806e540 	call	806e54 <__swsetup_r>
  804f24:	1005ac1e 	bne	r2,zero,8065d8 <___vfprintf_internal_r+0x1a54>
  804f28:	b880030b 	ldhu	r2,12(r23)
  804f2c:	00c00284 	movi	r3,10
  804f30:	1080068c 	andi	r2,r2,26
  804f34:	10ff3c1e 	bne	r2,r3,804c28 <__alt_data_end+0xff804c28>
  804f38:	b880038f 	ldh	r2,14(r23)
  804f3c:	103f3a16 	blt	r2,zero,804c28 <__alt_data_end+0xff804c28>
  804f40:	d9c02d17 	ldw	r7,180(sp)
  804f44:	d9002c17 	ldw	r4,176(sp)
  804f48:	a80d883a 	mov	r6,r21
  804f4c:	b80b883a 	mov	r5,r23
  804f50:	0806d980 	call	806d98 <__sbprintf>
  804f54:	00001106 	br	804f9c <___vfprintf_internal_r+0x418>
  804f58:	d9002c17 	ldw	r4,176(sp)
  804f5c:	d9801e04 	addi	r6,sp,120
  804f60:	b80b883a 	mov	r5,r23
  804f64:	080c1800 	call	80c180 <__sprint_r>
  804f68:	1000081e 	bne	r2,zero,804f8c <___vfprintf_internal_r+0x408>
  804f6c:	da000404 	addi	r8,sp,16
  804f70:	003f5306 	br	804cc0 <__alt_data_end+0xff804cc0>
  804f74:	d8802017 	ldw	r2,128(sp)
  804f78:	10000426 	beq	r2,zero,804f8c <___vfprintf_internal_r+0x408>
  804f7c:	d9002c17 	ldw	r4,176(sp)
  804f80:	d9801e04 	addi	r6,sp,120
  804f84:	b80b883a 	mov	r5,r23
  804f88:	080c1800 	call	80c180 <__sprint_r>
  804f8c:	b880030b 	ldhu	r2,12(r23)
  804f90:	1080100c 	andi	r2,r2,64
  804f94:	1005901e 	bne	r2,zero,8065d8 <___vfprintf_internal_r+0x1a54>
  804f98:	d8802f17 	ldw	r2,188(sp)
  804f9c:	dfc04717 	ldw	ra,284(sp)
  804fa0:	df004617 	ldw	fp,280(sp)
  804fa4:	ddc04517 	ldw	r23,276(sp)
  804fa8:	dd804417 	ldw	r22,272(sp)
  804fac:	dd404317 	ldw	r21,268(sp)
  804fb0:	dd004217 	ldw	r20,264(sp)
  804fb4:	dcc04117 	ldw	r19,260(sp)
  804fb8:	dc804017 	ldw	r18,256(sp)
  804fbc:	dc403f17 	ldw	r17,252(sp)
  804fc0:	dc003e17 	ldw	r16,248(sp)
  804fc4:	dec04804 	addi	sp,sp,288
  804fc8:	f800283a 	ret
  804fcc:	d9002c17 	ldw	r4,176(sp)
  804fd0:	0808e280 	call	808e28 <__sinit>
  804fd4:	003f0406 	br	804be8 <__alt_data_end+0xff804be8>
  804fd8:	d8802d17 	ldw	r2,180(sp)
  804fdc:	d9002d17 	ldw	r4,180(sp)
  804fe0:	10800017 	ldw	r2,0(r2)
  804fe4:	d8803115 	stw	r2,196(sp)
  804fe8:	20800104 	addi	r2,r4,4
  804fec:	d9003117 	ldw	r4,196(sp)
  804ff0:	203fa716 	blt	r4,zero,804e90 <__alt_data_end+0xff804e90>
  804ff4:	d8802d15 	stw	r2,180(sp)
  804ff8:	ac400007 	ldb	r17,0(r21)
  804ffc:	003f4206 	br	804d08 <__alt_data_end+0xff804d08>
  805000:	ac400007 	ldb	r17,0(r21)
  805004:	aac00044 	addi	r11,r21,1
  805008:	8a872826 	beq	r17,r10,806cac <___vfprintf_internal_r+0x2128>
  80500c:	88bff404 	addi	r2,r17,-48
  805010:	0009883a 	mov	r4,zero
  805014:	30867d36 	bltu	r6,r2,806a0c <___vfprintf_internal_r+0x1e88>
  805018:	5c400007 	ldb	r17,0(r11)
  80501c:	210002a4 	muli	r4,r4,10
  805020:	5d400044 	addi	r21,r11,1
  805024:	a817883a 	mov	r11,r21
  805028:	2089883a 	add	r4,r4,r2
  80502c:	88bff404 	addi	r2,r17,-48
  805030:	30bff92e 	bgeu	r6,r2,805018 <__alt_data_end+0xff805018>
  805034:	2005c916 	blt	r4,zero,80675c <___vfprintf_internal_r+0x1bd8>
  805038:	d9002915 	stw	r4,164(sp)
  80503c:	003f3306 	br	804d0c <__alt_data_end+0xff804d0c>
  805040:	94802014 	ori	r18,r18,128
  805044:	ac400007 	ldb	r17,0(r21)
  805048:	003f2f06 	br	804d08 <__alt_data_end+0xff804d08>
  80504c:	a809883a 	mov	r4,r21
  805050:	d8003115 	stw	zero,196(sp)
  805054:	88bff404 	addi	r2,r17,-48
  805058:	0017883a 	mov	r11,zero
  80505c:	24400007 	ldb	r17,0(r4)
  805060:	5ac002a4 	muli	r11,r11,10
  805064:	ad400044 	addi	r21,r21,1
  805068:	a809883a 	mov	r4,r21
  80506c:	12d7883a 	add	r11,r2,r11
  805070:	88bff404 	addi	r2,r17,-48
  805074:	30bff92e 	bgeu	r6,r2,80505c <__alt_data_end+0xff80505c>
  805078:	dac03115 	stw	r11,196(sp)
  80507c:	003f2306 	br	804d0c <__alt_data_end+0xff804d0c>
  805080:	18c03fcc 	andi	r3,r3,255
  805084:	18072b1e 	bne	r3,zero,806d34 <___vfprintf_internal_r+0x21b0>
  805088:	94800414 	ori	r18,r18,16
  80508c:	9080080c 	andi	r2,r18,32
  805090:	10037b26 	beq	r2,zero,805e80 <___vfprintf_internal_r+0x12fc>
  805094:	d9402d17 	ldw	r5,180(sp)
  805098:	28800117 	ldw	r2,4(r5)
  80509c:	2cc00017 	ldw	r19,0(r5)
  8050a0:	29400204 	addi	r5,r5,8
  8050a4:	d9402d15 	stw	r5,180(sp)
  8050a8:	102d883a 	mov	r22,r2
  8050ac:	10044b16 	blt	r2,zero,8061dc <___vfprintf_internal_r+0x1658>
  8050b0:	d9402917 	ldw	r5,164(sp)
  8050b4:	df002783 	ldbu	fp,158(sp)
  8050b8:	2803bc16 	blt	r5,zero,805fac <___vfprintf_internal_r+0x1428>
  8050bc:	00ffdfc4 	movi	r3,-129
  8050c0:	9d84b03a 	or	r2,r19,r22
  8050c4:	90e4703a 	and	r18,r18,r3
  8050c8:	10017726 	beq	r2,zero,8056a8 <___vfprintf_internal_r+0xb24>
  8050cc:	b0038326 	beq	r22,zero,805edc <___vfprintf_internal_r+0x1358>
  8050d0:	dc402a15 	stw	r17,168(sp)
  8050d4:	dc001e04 	addi	r16,sp,120
  8050d8:	b023883a 	mov	r17,r22
  8050dc:	402d883a 	mov	r22,r8
  8050e0:	9809883a 	mov	r4,r19
  8050e4:	880b883a 	mov	r5,r17
  8050e8:	01800284 	movi	r6,10
  8050ec:	000f883a 	mov	r7,zero
  8050f0:	080e5780 	call	80e578 <__umoddi3>
  8050f4:	10800c04 	addi	r2,r2,48
  8050f8:	843fffc4 	addi	r16,r16,-1
  8050fc:	9809883a 	mov	r4,r19
  805100:	880b883a 	mov	r5,r17
  805104:	80800005 	stb	r2,0(r16)
  805108:	01800284 	movi	r6,10
  80510c:	000f883a 	mov	r7,zero
  805110:	080e0000 	call	80e000 <__udivdi3>
  805114:	1027883a 	mov	r19,r2
  805118:	10c4b03a 	or	r2,r2,r3
  80511c:	1823883a 	mov	r17,r3
  805120:	103fef1e 	bne	r2,zero,8050e0 <__alt_data_end+0xff8050e0>
  805124:	d8c02817 	ldw	r3,160(sp)
  805128:	dc402a17 	ldw	r17,168(sp)
  80512c:	b011883a 	mov	r8,r22
  805130:	1c07c83a 	sub	r3,r3,r16
  805134:	d8c02e15 	stw	r3,184(sp)
  805138:	00005906 	br	8052a0 <___vfprintf_internal_r+0x71c>
  80513c:	18c03fcc 	andi	r3,r3,255
  805140:	1806fa1e 	bne	r3,zero,806d2c <___vfprintf_internal_r+0x21a8>
  805144:	9080020c 	andi	r2,r18,8
  805148:	10048a26 	beq	r2,zero,806374 <___vfprintf_internal_r+0x17f0>
  80514c:	d8c02d17 	ldw	r3,180(sp)
  805150:	d9002d17 	ldw	r4,180(sp)
  805154:	d9402d17 	ldw	r5,180(sp)
  805158:	18c00017 	ldw	r3,0(r3)
  80515c:	21000117 	ldw	r4,4(r4)
  805160:	29400204 	addi	r5,r5,8
  805164:	d8c03615 	stw	r3,216(sp)
  805168:	d9003815 	stw	r4,224(sp)
  80516c:	d9402d15 	stw	r5,180(sp)
  805170:	d9003617 	ldw	r4,216(sp)
  805174:	d9403817 	ldw	r5,224(sp)
  805178:	da003d15 	stw	r8,244(sp)
  80517c:	04000044 	movi	r16,1
  805180:	080bda40 	call	80bda4 <__fpclassifyd>
  805184:	da003d17 	ldw	r8,244(sp)
  805188:	14041f1e 	bne	r2,r16,806208 <___vfprintf_internal_r+0x1684>
  80518c:	d9003617 	ldw	r4,216(sp)
  805190:	d9403817 	ldw	r5,224(sp)
  805194:	000d883a 	mov	r6,zero
  805198:	000f883a 	mov	r7,zero
  80519c:	080f3980 	call	80f398 <__ledf2>
  8051a0:	da003d17 	ldw	r8,244(sp)
  8051a4:	1005be16 	blt	r2,zero,8068a0 <___vfprintf_internal_r+0x1d1c>
  8051a8:	df002783 	ldbu	fp,158(sp)
  8051ac:	008011c4 	movi	r2,71
  8051b0:	1445330e 	bge	r2,r17,806680 <___vfprintf_internal_r+0x1afc>
  8051b4:	04002074 	movhi	r16,129
  8051b8:	84082a04 	addi	r16,r16,8360
  8051bc:	00c000c4 	movi	r3,3
  8051c0:	00bfdfc4 	movi	r2,-129
  8051c4:	d8c02a15 	stw	r3,168(sp)
  8051c8:	90a4703a 	and	r18,r18,r2
  8051cc:	d8c02e15 	stw	r3,184(sp)
  8051d0:	d8002915 	stw	zero,164(sp)
  8051d4:	d8003215 	stw	zero,200(sp)
  8051d8:	00003706 	br	8052b8 <___vfprintf_internal_r+0x734>
  8051dc:	94800214 	ori	r18,r18,8
  8051e0:	ac400007 	ldb	r17,0(r21)
  8051e4:	003ec806 	br	804d08 <__alt_data_end+0xff804d08>
  8051e8:	18c03fcc 	andi	r3,r3,255
  8051ec:	1806db1e 	bne	r3,zero,806d5c <___vfprintf_internal_r+0x21d8>
  8051f0:	94800414 	ori	r18,r18,16
  8051f4:	9080080c 	andi	r2,r18,32
  8051f8:	1002d826 	beq	r2,zero,805d5c <___vfprintf_internal_r+0x11d8>
  8051fc:	d9402d17 	ldw	r5,180(sp)
  805200:	d8c02917 	ldw	r3,164(sp)
  805204:	d8002785 	stb	zero,158(sp)
  805208:	28800204 	addi	r2,r5,8
  80520c:	2cc00017 	ldw	r19,0(r5)
  805210:	2d800117 	ldw	r22,4(r5)
  805214:	18048f16 	blt	r3,zero,806454 <___vfprintf_internal_r+0x18d0>
  805218:	013fdfc4 	movi	r4,-129
  80521c:	9d86b03a 	or	r3,r19,r22
  805220:	d8802d15 	stw	r2,180(sp)
  805224:	9124703a 	and	r18,r18,r4
  805228:	1802d91e 	bne	r3,zero,805d90 <___vfprintf_internal_r+0x120c>
  80522c:	d8c02917 	ldw	r3,164(sp)
  805230:	0039883a 	mov	fp,zero
  805234:	1805c326 	beq	r3,zero,806944 <___vfprintf_internal_r+0x1dc0>
  805238:	0027883a 	mov	r19,zero
  80523c:	002d883a 	mov	r22,zero
  805240:	dc001e04 	addi	r16,sp,120
  805244:	9806d0fa 	srli	r3,r19,3
  805248:	b008977a 	slli	r4,r22,29
  80524c:	b02cd0fa 	srli	r22,r22,3
  805250:	9cc001cc 	andi	r19,r19,7
  805254:	98800c04 	addi	r2,r19,48
  805258:	843fffc4 	addi	r16,r16,-1
  80525c:	20e6b03a 	or	r19,r4,r3
  805260:	80800005 	stb	r2,0(r16)
  805264:	9d86b03a 	or	r3,r19,r22
  805268:	183ff61e 	bne	r3,zero,805244 <__alt_data_end+0xff805244>
  80526c:	90c0004c 	andi	r3,r18,1
  805270:	18013b26 	beq	r3,zero,805760 <___vfprintf_internal_r+0xbdc>
  805274:	10803fcc 	andi	r2,r2,255
  805278:	1080201c 	xori	r2,r2,128
  80527c:	10bfe004 	addi	r2,r2,-128
  805280:	00c00c04 	movi	r3,48
  805284:	10c13626 	beq	r2,r3,805760 <___vfprintf_internal_r+0xbdc>
  805288:	80ffffc5 	stb	r3,-1(r16)
  80528c:	d8c02817 	ldw	r3,160(sp)
  805290:	80bfffc4 	addi	r2,r16,-1
  805294:	1021883a 	mov	r16,r2
  805298:	1887c83a 	sub	r3,r3,r2
  80529c:	d8c02e15 	stw	r3,184(sp)
  8052a0:	d8802e17 	ldw	r2,184(sp)
  8052a4:	d9002917 	ldw	r4,164(sp)
  8052a8:	1100010e 	bge	r2,r4,8052b0 <___vfprintf_internal_r+0x72c>
  8052ac:	2005883a 	mov	r2,r4
  8052b0:	d8802a15 	stw	r2,168(sp)
  8052b4:	d8003215 	stw	zero,200(sp)
  8052b8:	e7003fcc 	andi	fp,fp,255
  8052bc:	e700201c 	xori	fp,fp,128
  8052c0:	e73fe004 	addi	fp,fp,-128
  8052c4:	e0000326 	beq	fp,zero,8052d4 <___vfprintf_internal_r+0x750>
  8052c8:	d8c02a17 	ldw	r3,168(sp)
  8052cc:	18c00044 	addi	r3,r3,1
  8052d0:	d8c02a15 	stw	r3,168(sp)
  8052d4:	90c0008c 	andi	r3,r18,2
  8052d8:	d8c02b15 	stw	r3,172(sp)
  8052dc:	18000326 	beq	r3,zero,8052ec <___vfprintf_internal_r+0x768>
  8052e0:	d8c02a17 	ldw	r3,168(sp)
  8052e4:	18c00084 	addi	r3,r3,2
  8052e8:	d8c02a15 	stw	r3,168(sp)
  8052ec:	90c0210c 	andi	r3,r18,132
  8052f0:	d8c03015 	stw	r3,192(sp)
  8052f4:	1801a31e 	bne	r3,zero,805984 <___vfprintf_internal_r+0xe00>
  8052f8:	d9003117 	ldw	r4,196(sp)
  8052fc:	d8c02a17 	ldw	r3,168(sp)
  805300:	20e7c83a 	sub	r19,r4,r3
  805304:	04c19f0e 	bge	zero,r19,805984 <___vfprintf_internal_r+0xe00>
  805308:	02400404 	movi	r9,16
  80530c:	d8c02017 	ldw	r3,128(sp)
  805310:	d8801f17 	ldw	r2,124(sp)
  805314:	4cc50d0e 	bge	r9,r19,80674c <___vfprintf_internal_r+0x1bc8>
  805318:	01402074 	movhi	r5,129
  80531c:	29483d84 	addi	r5,r5,8438
  805320:	dc403b15 	stw	r17,236(sp)
  805324:	d9403515 	stw	r5,212(sp)
  805328:	9823883a 	mov	r17,r19
  80532c:	482d883a 	mov	r22,r9
  805330:	9027883a 	mov	r19,r18
  805334:	070001c4 	movi	fp,7
  805338:	8025883a 	mov	r18,r16
  80533c:	dc002c17 	ldw	r16,176(sp)
  805340:	00000306 	br	805350 <___vfprintf_internal_r+0x7cc>
  805344:	8c7ffc04 	addi	r17,r17,-16
  805348:	42000204 	addi	r8,r8,8
  80534c:	b440130e 	bge	r22,r17,80539c <___vfprintf_internal_r+0x818>
  805350:	01002074 	movhi	r4,129
  805354:	18c00404 	addi	r3,r3,16
  805358:	10800044 	addi	r2,r2,1
  80535c:	21083d84 	addi	r4,r4,8438
  805360:	41000015 	stw	r4,0(r8)
  805364:	45800115 	stw	r22,4(r8)
  805368:	d8c02015 	stw	r3,128(sp)
  80536c:	d8801f15 	stw	r2,124(sp)
  805370:	e0bff40e 	bge	fp,r2,805344 <__alt_data_end+0xff805344>
  805374:	d9801e04 	addi	r6,sp,120
  805378:	b80b883a 	mov	r5,r23
  80537c:	8009883a 	mov	r4,r16
  805380:	080c1800 	call	80c180 <__sprint_r>
  805384:	103f011e 	bne	r2,zero,804f8c <__alt_data_end+0xff804f8c>
  805388:	8c7ffc04 	addi	r17,r17,-16
  80538c:	d8c02017 	ldw	r3,128(sp)
  805390:	d8801f17 	ldw	r2,124(sp)
  805394:	da000404 	addi	r8,sp,16
  805398:	b47fed16 	blt	r22,r17,805350 <__alt_data_end+0xff805350>
  80539c:	9021883a 	mov	r16,r18
  8053a0:	9825883a 	mov	r18,r19
  8053a4:	8827883a 	mov	r19,r17
  8053a8:	dc403b17 	ldw	r17,236(sp)
  8053ac:	d9403517 	ldw	r5,212(sp)
  8053b0:	98c7883a 	add	r3,r19,r3
  8053b4:	10800044 	addi	r2,r2,1
  8053b8:	41400015 	stw	r5,0(r8)
  8053bc:	44c00115 	stw	r19,4(r8)
  8053c0:	d8c02015 	stw	r3,128(sp)
  8053c4:	d8801f15 	stw	r2,124(sp)
  8053c8:	010001c4 	movi	r4,7
  8053cc:	2082a316 	blt	r4,r2,805e5c <___vfprintf_internal_r+0x12d8>
  8053d0:	df002787 	ldb	fp,158(sp)
  8053d4:	42000204 	addi	r8,r8,8
  8053d8:	e0000c26 	beq	fp,zero,80540c <___vfprintf_internal_r+0x888>
  8053dc:	d8801f17 	ldw	r2,124(sp)
  8053e0:	d9002784 	addi	r4,sp,158
  8053e4:	18c00044 	addi	r3,r3,1
  8053e8:	10800044 	addi	r2,r2,1
  8053ec:	41000015 	stw	r4,0(r8)
  8053f0:	01000044 	movi	r4,1
  8053f4:	41000115 	stw	r4,4(r8)
  8053f8:	d8c02015 	stw	r3,128(sp)
  8053fc:	d8801f15 	stw	r2,124(sp)
  805400:	010001c4 	movi	r4,7
  805404:	20823c16 	blt	r4,r2,805cf8 <___vfprintf_internal_r+0x1174>
  805408:	42000204 	addi	r8,r8,8
  80540c:	d8802b17 	ldw	r2,172(sp)
  805410:	10000c26 	beq	r2,zero,805444 <___vfprintf_internal_r+0x8c0>
  805414:	d8801f17 	ldw	r2,124(sp)
  805418:	d9002704 	addi	r4,sp,156
  80541c:	18c00084 	addi	r3,r3,2
  805420:	10800044 	addi	r2,r2,1
  805424:	41000015 	stw	r4,0(r8)
  805428:	01000084 	movi	r4,2
  80542c:	41000115 	stw	r4,4(r8)
  805430:	d8c02015 	stw	r3,128(sp)
  805434:	d8801f15 	stw	r2,124(sp)
  805438:	010001c4 	movi	r4,7
  80543c:	20823616 	blt	r4,r2,805d18 <___vfprintf_internal_r+0x1194>
  805440:	42000204 	addi	r8,r8,8
  805444:	d9003017 	ldw	r4,192(sp)
  805448:	00802004 	movi	r2,128
  80544c:	20819926 	beq	r4,r2,805ab4 <___vfprintf_internal_r+0xf30>
  805450:	d9402917 	ldw	r5,164(sp)
  805454:	d8802e17 	ldw	r2,184(sp)
  805458:	28adc83a 	sub	r22,r5,r2
  80545c:	0580310e 	bge	zero,r22,805524 <___vfprintf_internal_r+0x9a0>
  805460:	07000404 	movi	fp,16
  805464:	d8801f17 	ldw	r2,124(sp)
  805468:	e584140e 	bge	fp,r22,8064bc <___vfprintf_internal_r+0x1938>
  80546c:	01402074 	movhi	r5,129
  805470:	29483984 	addi	r5,r5,8422
  805474:	dc402915 	stw	r17,164(sp)
  805478:	d9402b15 	stw	r5,172(sp)
  80547c:	b023883a 	mov	r17,r22
  805480:	04c001c4 	movi	r19,7
  805484:	a82d883a 	mov	r22,r21
  805488:	902b883a 	mov	r21,r18
  80548c:	8025883a 	mov	r18,r16
  805490:	dc002c17 	ldw	r16,176(sp)
  805494:	00000306 	br	8054a4 <___vfprintf_internal_r+0x920>
  805498:	8c7ffc04 	addi	r17,r17,-16
  80549c:	42000204 	addi	r8,r8,8
  8054a0:	e440110e 	bge	fp,r17,8054e8 <___vfprintf_internal_r+0x964>
  8054a4:	18c00404 	addi	r3,r3,16
  8054a8:	10800044 	addi	r2,r2,1
  8054ac:	45000015 	stw	r20,0(r8)
  8054b0:	47000115 	stw	fp,4(r8)
  8054b4:	d8c02015 	stw	r3,128(sp)
  8054b8:	d8801f15 	stw	r2,124(sp)
  8054bc:	98bff60e 	bge	r19,r2,805498 <__alt_data_end+0xff805498>
  8054c0:	d9801e04 	addi	r6,sp,120
  8054c4:	b80b883a 	mov	r5,r23
  8054c8:	8009883a 	mov	r4,r16
  8054cc:	080c1800 	call	80c180 <__sprint_r>
  8054d0:	103eae1e 	bne	r2,zero,804f8c <__alt_data_end+0xff804f8c>
  8054d4:	8c7ffc04 	addi	r17,r17,-16
  8054d8:	d8c02017 	ldw	r3,128(sp)
  8054dc:	d8801f17 	ldw	r2,124(sp)
  8054e0:	da000404 	addi	r8,sp,16
  8054e4:	e47fef16 	blt	fp,r17,8054a4 <__alt_data_end+0xff8054a4>
  8054e8:	9021883a 	mov	r16,r18
  8054ec:	a825883a 	mov	r18,r21
  8054f0:	b02b883a 	mov	r21,r22
  8054f4:	882d883a 	mov	r22,r17
  8054f8:	dc402917 	ldw	r17,164(sp)
  8054fc:	d9002b17 	ldw	r4,172(sp)
  805500:	1d87883a 	add	r3,r3,r22
  805504:	10800044 	addi	r2,r2,1
  805508:	41000015 	stw	r4,0(r8)
  80550c:	45800115 	stw	r22,4(r8)
  805510:	d8c02015 	stw	r3,128(sp)
  805514:	d8801f15 	stw	r2,124(sp)
  805518:	010001c4 	movi	r4,7
  80551c:	2081ee16 	blt	r4,r2,805cd8 <___vfprintf_internal_r+0x1154>
  805520:	42000204 	addi	r8,r8,8
  805524:	9080400c 	andi	r2,r18,256
  805528:	1001181e 	bne	r2,zero,80598c <___vfprintf_internal_r+0xe08>
  80552c:	d9402e17 	ldw	r5,184(sp)
  805530:	d8801f17 	ldw	r2,124(sp)
  805534:	44000015 	stw	r16,0(r8)
  805538:	1947883a 	add	r3,r3,r5
  80553c:	10800044 	addi	r2,r2,1
  805540:	41400115 	stw	r5,4(r8)
  805544:	d8c02015 	stw	r3,128(sp)
  805548:	d8801f15 	stw	r2,124(sp)
  80554c:	010001c4 	movi	r4,7
  805550:	2081d316 	blt	r4,r2,805ca0 <___vfprintf_internal_r+0x111c>
  805554:	42000204 	addi	r8,r8,8
  805558:	9480010c 	andi	r18,r18,4
  80555c:	90003226 	beq	r18,zero,805628 <___vfprintf_internal_r+0xaa4>
  805560:	d9403117 	ldw	r5,196(sp)
  805564:	d8802a17 	ldw	r2,168(sp)
  805568:	28a1c83a 	sub	r16,r5,r2
  80556c:	04002e0e 	bge	zero,r16,805628 <___vfprintf_internal_r+0xaa4>
  805570:	04400404 	movi	r17,16
  805574:	d8801f17 	ldw	r2,124(sp)
  805578:	8c04a20e 	bge	r17,r16,806804 <___vfprintf_internal_r+0x1c80>
  80557c:	01402074 	movhi	r5,129
  805580:	29483d84 	addi	r5,r5,8438
  805584:	d9403515 	stw	r5,212(sp)
  805588:	048001c4 	movi	r18,7
  80558c:	dcc02c17 	ldw	r19,176(sp)
  805590:	00000306 	br	8055a0 <___vfprintf_internal_r+0xa1c>
  805594:	843ffc04 	addi	r16,r16,-16
  805598:	42000204 	addi	r8,r8,8
  80559c:	8c00130e 	bge	r17,r16,8055ec <___vfprintf_internal_r+0xa68>
  8055a0:	01002074 	movhi	r4,129
  8055a4:	18c00404 	addi	r3,r3,16
  8055a8:	10800044 	addi	r2,r2,1
  8055ac:	21083d84 	addi	r4,r4,8438
  8055b0:	41000015 	stw	r4,0(r8)
  8055b4:	44400115 	stw	r17,4(r8)
  8055b8:	d8c02015 	stw	r3,128(sp)
  8055bc:	d8801f15 	stw	r2,124(sp)
  8055c0:	90bff40e 	bge	r18,r2,805594 <__alt_data_end+0xff805594>
  8055c4:	d9801e04 	addi	r6,sp,120
  8055c8:	b80b883a 	mov	r5,r23
  8055cc:	9809883a 	mov	r4,r19
  8055d0:	080c1800 	call	80c180 <__sprint_r>
  8055d4:	103e6d1e 	bne	r2,zero,804f8c <__alt_data_end+0xff804f8c>
  8055d8:	843ffc04 	addi	r16,r16,-16
  8055dc:	d8c02017 	ldw	r3,128(sp)
  8055e0:	d8801f17 	ldw	r2,124(sp)
  8055e4:	da000404 	addi	r8,sp,16
  8055e8:	8c3fed16 	blt	r17,r16,8055a0 <__alt_data_end+0xff8055a0>
  8055ec:	d9403517 	ldw	r5,212(sp)
  8055f0:	1c07883a 	add	r3,r3,r16
  8055f4:	10800044 	addi	r2,r2,1
  8055f8:	41400015 	stw	r5,0(r8)
  8055fc:	44000115 	stw	r16,4(r8)
  805600:	d8c02015 	stw	r3,128(sp)
  805604:	d8801f15 	stw	r2,124(sp)
  805608:	010001c4 	movi	r4,7
  80560c:	2080060e 	bge	r4,r2,805628 <___vfprintf_internal_r+0xaa4>
  805610:	d9002c17 	ldw	r4,176(sp)
  805614:	d9801e04 	addi	r6,sp,120
  805618:	b80b883a 	mov	r5,r23
  80561c:	080c1800 	call	80c180 <__sprint_r>
  805620:	103e5a1e 	bne	r2,zero,804f8c <__alt_data_end+0xff804f8c>
  805624:	d8c02017 	ldw	r3,128(sp)
  805628:	d8803117 	ldw	r2,196(sp)
  80562c:	d9002a17 	ldw	r4,168(sp)
  805630:	1100010e 	bge	r2,r4,805638 <___vfprintf_internal_r+0xab4>
  805634:	2005883a 	mov	r2,r4
  805638:	d9402f17 	ldw	r5,188(sp)
  80563c:	288b883a 	add	r5,r5,r2
  805640:	d9402f15 	stw	r5,188(sp)
  805644:	18019e1e 	bne	r3,zero,805cc0 <___vfprintf_internal_r+0x113c>
  805648:	a8800007 	ldb	r2,0(r21)
  80564c:	d8001f15 	stw	zero,124(sp)
  805650:	da000404 	addi	r8,sp,16
  805654:	103d851e 	bne	r2,zero,804c6c <__alt_data_end+0xff804c6c>
  805658:	a821883a 	mov	r16,r21
  80565c:	003d9b06 	br	804ccc <__alt_data_end+0xff804ccc>
  805660:	18c03fcc 	andi	r3,r3,255
  805664:	1805c11e 	bne	r3,zero,806d6c <___vfprintf_internal_r+0x21e8>
  805668:	94800414 	ori	r18,r18,16
  80566c:	9080080c 	andi	r2,r18,32
  805670:	10020c26 	beq	r2,zero,805ea4 <___vfprintf_internal_r+0x1320>
  805674:	d8802d17 	ldw	r2,180(sp)
  805678:	d9002917 	ldw	r4,164(sp)
  80567c:	d8002785 	stb	zero,158(sp)
  805680:	10c00204 	addi	r3,r2,8
  805684:	14c00017 	ldw	r19,0(r2)
  805688:	15800117 	ldw	r22,4(r2)
  80568c:	20040f16 	blt	r4,zero,8066cc <___vfprintf_internal_r+0x1b48>
  805690:	013fdfc4 	movi	r4,-129
  805694:	9d84b03a 	or	r2,r19,r22
  805698:	d8c02d15 	stw	r3,180(sp)
  80569c:	9124703a 	and	r18,r18,r4
  8056a0:	0039883a 	mov	fp,zero
  8056a4:	103e891e 	bne	r2,zero,8050cc <__alt_data_end+0xff8050cc>
  8056a8:	d9002917 	ldw	r4,164(sp)
  8056ac:	2002c11e 	bne	r4,zero,8061b4 <___vfprintf_internal_r+0x1630>
  8056b0:	d8002915 	stw	zero,164(sp)
  8056b4:	d8002e15 	stw	zero,184(sp)
  8056b8:	dc001e04 	addi	r16,sp,120
  8056bc:	003ef806 	br	8052a0 <__alt_data_end+0xff8052a0>
  8056c0:	18c03fcc 	andi	r3,r3,255
  8056c4:	18059d1e 	bne	r3,zero,806d3c <___vfprintf_internal_r+0x21b8>
  8056c8:	01402074 	movhi	r5,129
  8056cc:	29482d04 	addi	r5,r5,8372
  8056d0:	d9403915 	stw	r5,228(sp)
  8056d4:	9080080c 	andi	r2,r18,32
  8056d8:	10005226 	beq	r2,zero,805824 <___vfprintf_internal_r+0xca0>
  8056dc:	d8802d17 	ldw	r2,180(sp)
  8056e0:	14c00017 	ldw	r19,0(r2)
  8056e4:	15800117 	ldw	r22,4(r2)
  8056e8:	10800204 	addi	r2,r2,8
  8056ec:	d8802d15 	stw	r2,180(sp)
  8056f0:	9080004c 	andi	r2,r18,1
  8056f4:	10019026 	beq	r2,zero,805d38 <___vfprintf_internal_r+0x11b4>
  8056f8:	9d84b03a 	or	r2,r19,r22
  8056fc:	10036926 	beq	r2,zero,8064a4 <___vfprintf_internal_r+0x1920>
  805700:	d8c02917 	ldw	r3,164(sp)
  805704:	00800c04 	movi	r2,48
  805708:	d8802705 	stb	r2,156(sp)
  80570c:	dc402745 	stb	r17,157(sp)
  805710:	d8002785 	stb	zero,158(sp)
  805714:	90800094 	ori	r2,r18,2
  805718:	18045d16 	blt	r3,zero,806890 <___vfprintf_internal_r+0x1d0c>
  80571c:	00bfdfc4 	movi	r2,-129
  805720:	90a4703a 	and	r18,r18,r2
  805724:	94800094 	ori	r18,r18,2
  805728:	0039883a 	mov	fp,zero
  80572c:	d9003917 	ldw	r4,228(sp)
  805730:	dc001e04 	addi	r16,sp,120
  805734:	988003cc 	andi	r2,r19,15
  805738:	b006973a 	slli	r3,r22,28
  80573c:	2085883a 	add	r2,r4,r2
  805740:	9826d13a 	srli	r19,r19,4
  805744:	10800003 	ldbu	r2,0(r2)
  805748:	b02cd13a 	srli	r22,r22,4
  80574c:	843fffc4 	addi	r16,r16,-1
  805750:	1ce6b03a 	or	r19,r3,r19
  805754:	80800005 	stb	r2,0(r16)
  805758:	9d84b03a 	or	r2,r19,r22
  80575c:	103ff51e 	bne	r2,zero,805734 <__alt_data_end+0xff805734>
  805760:	d8c02817 	ldw	r3,160(sp)
  805764:	1c07c83a 	sub	r3,r3,r16
  805768:	d8c02e15 	stw	r3,184(sp)
  80576c:	003ecc06 	br	8052a0 <__alt_data_end+0xff8052a0>
  805770:	18c03fcc 	andi	r3,r3,255
  805774:	183e9f26 	beq	r3,zero,8051f4 <__alt_data_end+0xff8051f4>
  805778:	d9c02785 	stb	r7,158(sp)
  80577c:	003e9d06 	br	8051f4 <__alt_data_end+0xff8051f4>
  805780:	00c00044 	movi	r3,1
  805784:	01c00ac4 	movi	r7,43
  805788:	ac400007 	ldb	r17,0(r21)
  80578c:	003d5e06 	br	804d08 <__alt_data_end+0xff804d08>
  805790:	94800814 	ori	r18,r18,32
  805794:	ac400007 	ldb	r17,0(r21)
  805798:	003d5b06 	br	804d08 <__alt_data_end+0xff804d08>
  80579c:	d8c02d17 	ldw	r3,180(sp)
  8057a0:	d8002785 	stb	zero,158(sp)
  8057a4:	1c000017 	ldw	r16,0(r3)
  8057a8:	1cc00104 	addi	r19,r3,4
  8057ac:	80041926 	beq	r16,zero,806814 <___vfprintf_internal_r+0x1c90>
  8057b0:	d9002917 	ldw	r4,164(sp)
  8057b4:	2003d016 	blt	r4,zero,8066f8 <___vfprintf_internal_r+0x1b74>
  8057b8:	200d883a 	mov	r6,r4
  8057bc:	000b883a 	mov	r5,zero
  8057c0:	8009883a 	mov	r4,r16
  8057c4:	da003d15 	stw	r8,244(sp)
  8057c8:	080a3940 	call	80a394 <memchr>
  8057cc:	da003d17 	ldw	r8,244(sp)
  8057d0:	10045426 	beq	r2,zero,806924 <___vfprintf_internal_r+0x1da0>
  8057d4:	1405c83a 	sub	r2,r2,r16
  8057d8:	d8802e15 	stw	r2,184(sp)
  8057dc:	1003cc16 	blt	r2,zero,806710 <___vfprintf_internal_r+0x1b8c>
  8057e0:	df002783 	ldbu	fp,158(sp)
  8057e4:	d8802a15 	stw	r2,168(sp)
  8057e8:	dcc02d15 	stw	r19,180(sp)
  8057ec:	d8002915 	stw	zero,164(sp)
  8057f0:	d8003215 	stw	zero,200(sp)
  8057f4:	003eb006 	br	8052b8 <__alt_data_end+0xff8052b8>
  8057f8:	18c03fcc 	andi	r3,r3,255
  8057fc:	183f9b26 	beq	r3,zero,80566c <__alt_data_end+0xff80566c>
  805800:	d9c02785 	stb	r7,158(sp)
  805804:	003f9906 	br	80566c <__alt_data_end+0xff80566c>
  805808:	18c03fcc 	andi	r3,r3,255
  80580c:	1805551e 	bne	r3,zero,806d64 <___vfprintf_internal_r+0x21e0>
  805810:	01402074 	movhi	r5,129
  805814:	29483204 	addi	r5,r5,8392
  805818:	d9403915 	stw	r5,228(sp)
  80581c:	9080080c 	andi	r2,r18,32
  805820:	103fae1e 	bne	r2,zero,8056dc <__alt_data_end+0xff8056dc>
  805824:	9080040c 	andi	r2,r18,16
  805828:	1002de26 	beq	r2,zero,8063a4 <___vfprintf_internal_r+0x1820>
  80582c:	d8c02d17 	ldw	r3,180(sp)
  805830:	002d883a 	mov	r22,zero
  805834:	1cc00017 	ldw	r19,0(r3)
  805838:	18c00104 	addi	r3,r3,4
  80583c:	d8c02d15 	stw	r3,180(sp)
  805840:	003fab06 	br	8056f0 <__alt_data_end+0xff8056f0>
  805844:	38803fcc 	andi	r2,r7,255
  805848:	1080201c 	xori	r2,r2,128
  80584c:	10bfe004 	addi	r2,r2,-128
  805850:	1002d21e 	bne	r2,zero,80639c <___vfprintf_internal_r+0x1818>
  805854:	00c00044 	movi	r3,1
  805858:	01c00804 	movi	r7,32
  80585c:	ac400007 	ldb	r17,0(r21)
  805860:	003d2906 	br	804d08 <__alt_data_end+0xff804d08>
  805864:	94800054 	ori	r18,r18,1
  805868:	ac400007 	ldb	r17,0(r21)
  80586c:	003d2606 	br	804d08 <__alt_data_end+0xff804d08>
  805870:	18c03fcc 	andi	r3,r3,255
  805874:	183e0526 	beq	r3,zero,80508c <__alt_data_end+0xff80508c>
  805878:	d9c02785 	stb	r7,158(sp)
  80587c:	003e0306 	br	80508c <__alt_data_end+0xff80508c>
  805880:	94801014 	ori	r18,r18,64
  805884:	ac400007 	ldb	r17,0(r21)
  805888:	003d1f06 	br	804d08 <__alt_data_end+0xff804d08>
  80588c:	ac400007 	ldb	r17,0(r21)
  805890:	8a438726 	beq	r17,r9,8066b0 <___vfprintf_internal_r+0x1b2c>
  805894:	94800414 	ori	r18,r18,16
  805898:	003d1b06 	br	804d08 <__alt_data_end+0xff804d08>
  80589c:	18c03fcc 	andi	r3,r3,255
  8058a0:	1805341e 	bne	r3,zero,806d74 <___vfprintf_internal_r+0x21f0>
  8058a4:	9080080c 	andi	r2,r18,32
  8058a8:	1002cd26 	beq	r2,zero,8063e0 <___vfprintf_internal_r+0x185c>
  8058ac:	d9402d17 	ldw	r5,180(sp)
  8058b0:	d9002f17 	ldw	r4,188(sp)
  8058b4:	28800017 	ldw	r2,0(r5)
  8058b8:	2007d7fa 	srai	r3,r4,31
  8058bc:	29400104 	addi	r5,r5,4
  8058c0:	d9402d15 	stw	r5,180(sp)
  8058c4:	11000015 	stw	r4,0(r2)
  8058c8:	10c00115 	stw	r3,4(r2)
  8058cc:	003ce506 	br	804c64 <__alt_data_end+0xff804c64>
  8058d0:	d8c02d17 	ldw	r3,180(sp)
  8058d4:	d9002d17 	ldw	r4,180(sp)
  8058d8:	d8002785 	stb	zero,158(sp)
  8058dc:	18800017 	ldw	r2,0(r3)
  8058e0:	21000104 	addi	r4,r4,4
  8058e4:	00c00044 	movi	r3,1
  8058e8:	d8c02a15 	stw	r3,168(sp)
  8058ec:	d8801405 	stb	r2,80(sp)
  8058f0:	d9002d15 	stw	r4,180(sp)
  8058f4:	d8c02e15 	stw	r3,184(sp)
  8058f8:	d8002915 	stw	zero,164(sp)
  8058fc:	d8003215 	stw	zero,200(sp)
  805900:	dc001404 	addi	r16,sp,80
  805904:	0039883a 	mov	fp,zero
  805908:	003e7206 	br	8052d4 <__alt_data_end+0xff8052d4>
  80590c:	01002074 	movhi	r4,129
  805910:	21083204 	addi	r4,r4,8392
  805914:	0039883a 	mov	fp,zero
  805918:	d9003915 	stw	r4,228(sp)
  80591c:	04401e04 	movi	r17,120
  805920:	003f8206 	br	80572c <__alt_data_end+0xff80572c>
  805924:	18c03fcc 	andi	r3,r3,255
  805928:	1805061e 	bne	r3,zero,806d44 <___vfprintf_internal_r+0x21c0>
  80592c:	883d9126 	beq	r17,zero,804f74 <__alt_data_end+0xff804f74>
  805930:	00c00044 	movi	r3,1
  805934:	d8c02a15 	stw	r3,168(sp)
  805938:	dc401405 	stb	r17,80(sp)
  80593c:	d8002785 	stb	zero,158(sp)
  805940:	003fec06 	br	8058f4 <__alt_data_end+0xff8058f4>
  805944:	01402074 	movhi	r5,129
  805948:	29483204 	addi	r5,r5,8392
  80594c:	d9403915 	stw	r5,228(sp)
  805950:	d8c02d15 	stw	r3,180(sp)
  805954:	1025883a 	mov	r18,r2
  805958:	04401e04 	movi	r17,120
  80595c:	9d84b03a 	or	r2,r19,r22
  805960:	1000fc1e 	bne	r2,zero,805d54 <___vfprintf_internal_r+0x11d0>
  805964:	0039883a 	mov	fp,zero
  805968:	00800084 	movi	r2,2
  80596c:	10803fcc 	andi	r2,r2,255
  805970:	00c00044 	movi	r3,1
  805974:	10c20f26 	beq	r2,r3,8061b4 <___vfprintf_internal_r+0x1630>
  805978:	00c00084 	movi	r3,2
  80597c:	10fd6326 	beq	r2,r3,804f0c <__alt_data_end+0xff804f0c>
  805980:	003e2d06 	br	805238 <__alt_data_end+0xff805238>
  805984:	d8c02017 	ldw	r3,128(sp)
  805988:	003e9306 	br	8053d8 <__alt_data_end+0xff8053d8>
  80598c:	00801944 	movi	r2,101
  805990:	14407e0e 	bge	r2,r17,805b8c <___vfprintf_internal_r+0x1008>
  805994:	d9003617 	ldw	r4,216(sp)
  805998:	d9403817 	ldw	r5,224(sp)
  80599c:	000d883a 	mov	r6,zero
  8059a0:	000f883a 	mov	r7,zero
  8059a4:	d8c03c15 	stw	r3,240(sp)
  8059a8:	da003d15 	stw	r8,244(sp)
  8059ac:	08033bc0 	call	8033bc <__eqdf2>
  8059b0:	d8c03c17 	ldw	r3,240(sp)
  8059b4:	da003d17 	ldw	r8,244(sp)
  8059b8:	1000f71e 	bne	r2,zero,805d98 <___vfprintf_internal_r+0x1214>
  8059bc:	d8801f17 	ldw	r2,124(sp)
  8059c0:	01002074 	movhi	r4,129
  8059c4:	21083904 	addi	r4,r4,8420
  8059c8:	18c00044 	addi	r3,r3,1
  8059cc:	10800044 	addi	r2,r2,1
  8059d0:	41000015 	stw	r4,0(r8)
  8059d4:	01000044 	movi	r4,1
  8059d8:	41000115 	stw	r4,4(r8)
  8059dc:	d8c02015 	stw	r3,128(sp)
  8059e0:	d8801f15 	stw	r2,124(sp)
  8059e4:	010001c4 	movi	r4,7
  8059e8:	2082b816 	blt	r4,r2,8064cc <___vfprintf_internal_r+0x1948>
  8059ec:	42000204 	addi	r8,r8,8
  8059f0:	d8802617 	ldw	r2,152(sp)
  8059f4:	d9403317 	ldw	r5,204(sp)
  8059f8:	11400216 	blt	r2,r5,805a04 <___vfprintf_internal_r+0xe80>
  8059fc:	9080004c 	andi	r2,r18,1
  805a00:	103ed526 	beq	r2,zero,805558 <__alt_data_end+0xff805558>
  805a04:	d8803717 	ldw	r2,220(sp)
  805a08:	d9003417 	ldw	r4,208(sp)
  805a0c:	d9403717 	ldw	r5,220(sp)
  805a10:	1887883a 	add	r3,r3,r2
  805a14:	d8801f17 	ldw	r2,124(sp)
  805a18:	41000015 	stw	r4,0(r8)
  805a1c:	41400115 	stw	r5,4(r8)
  805a20:	10800044 	addi	r2,r2,1
  805a24:	d8c02015 	stw	r3,128(sp)
  805a28:	d8801f15 	stw	r2,124(sp)
  805a2c:	010001c4 	movi	r4,7
  805a30:	20832916 	blt	r4,r2,8066d8 <___vfprintf_internal_r+0x1b54>
  805a34:	42000204 	addi	r8,r8,8
  805a38:	d8803317 	ldw	r2,204(sp)
  805a3c:	143fffc4 	addi	r16,r2,-1
  805a40:	043ec50e 	bge	zero,r16,805558 <__alt_data_end+0xff805558>
  805a44:	04400404 	movi	r17,16
  805a48:	d8801f17 	ldw	r2,124(sp)
  805a4c:	8c00880e 	bge	r17,r16,805c70 <___vfprintf_internal_r+0x10ec>
  805a50:	01402074 	movhi	r5,129
  805a54:	29483984 	addi	r5,r5,8422
  805a58:	d9402b15 	stw	r5,172(sp)
  805a5c:	058001c4 	movi	r22,7
  805a60:	dcc02c17 	ldw	r19,176(sp)
  805a64:	00000306 	br	805a74 <___vfprintf_internal_r+0xef0>
  805a68:	42000204 	addi	r8,r8,8
  805a6c:	843ffc04 	addi	r16,r16,-16
  805a70:	8c00820e 	bge	r17,r16,805c7c <___vfprintf_internal_r+0x10f8>
  805a74:	18c00404 	addi	r3,r3,16
  805a78:	10800044 	addi	r2,r2,1
  805a7c:	45000015 	stw	r20,0(r8)
  805a80:	44400115 	stw	r17,4(r8)
  805a84:	d8c02015 	stw	r3,128(sp)
  805a88:	d8801f15 	stw	r2,124(sp)
  805a8c:	b0bff60e 	bge	r22,r2,805a68 <__alt_data_end+0xff805a68>
  805a90:	d9801e04 	addi	r6,sp,120
  805a94:	b80b883a 	mov	r5,r23
  805a98:	9809883a 	mov	r4,r19
  805a9c:	080c1800 	call	80c180 <__sprint_r>
  805aa0:	103d3a1e 	bne	r2,zero,804f8c <__alt_data_end+0xff804f8c>
  805aa4:	d8c02017 	ldw	r3,128(sp)
  805aa8:	d8801f17 	ldw	r2,124(sp)
  805aac:	da000404 	addi	r8,sp,16
  805ab0:	003fee06 	br	805a6c <__alt_data_end+0xff805a6c>
  805ab4:	d9403117 	ldw	r5,196(sp)
  805ab8:	d8802a17 	ldw	r2,168(sp)
  805abc:	28adc83a 	sub	r22,r5,r2
  805ac0:	05be630e 	bge	zero,r22,805450 <__alt_data_end+0xff805450>
  805ac4:	07000404 	movi	fp,16
  805ac8:	d8801f17 	ldw	r2,124(sp)
  805acc:	e5838f0e 	bge	fp,r22,80690c <___vfprintf_internal_r+0x1d88>
  805ad0:	01402074 	movhi	r5,129
  805ad4:	29483984 	addi	r5,r5,8422
  805ad8:	dc403015 	stw	r17,192(sp)
  805adc:	d9402b15 	stw	r5,172(sp)
  805ae0:	b023883a 	mov	r17,r22
  805ae4:	04c001c4 	movi	r19,7
  805ae8:	a82d883a 	mov	r22,r21
  805aec:	902b883a 	mov	r21,r18
  805af0:	8025883a 	mov	r18,r16
  805af4:	dc002c17 	ldw	r16,176(sp)
  805af8:	00000306 	br	805b08 <___vfprintf_internal_r+0xf84>
  805afc:	8c7ffc04 	addi	r17,r17,-16
  805b00:	42000204 	addi	r8,r8,8
  805b04:	e440110e 	bge	fp,r17,805b4c <___vfprintf_internal_r+0xfc8>
  805b08:	18c00404 	addi	r3,r3,16
  805b0c:	10800044 	addi	r2,r2,1
  805b10:	45000015 	stw	r20,0(r8)
  805b14:	47000115 	stw	fp,4(r8)
  805b18:	d8c02015 	stw	r3,128(sp)
  805b1c:	d8801f15 	stw	r2,124(sp)
  805b20:	98bff60e 	bge	r19,r2,805afc <__alt_data_end+0xff805afc>
  805b24:	d9801e04 	addi	r6,sp,120
  805b28:	b80b883a 	mov	r5,r23
  805b2c:	8009883a 	mov	r4,r16
  805b30:	080c1800 	call	80c180 <__sprint_r>
  805b34:	103d151e 	bne	r2,zero,804f8c <__alt_data_end+0xff804f8c>
  805b38:	8c7ffc04 	addi	r17,r17,-16
  805b3c:	d8c02017 	ldw	r3,128(sp)
  805b40:	d8801f17 	ldw	r2,124(sp)
  805b44:	da000404 	addi	r8,sp,16
  805b48:	e47fef16 	blt	fp,r17,805b08 <__alt_data_end+0xff805b08>
  805b4c:	9021883a 	mov	r16,r18
  805b50:	a825883a 	mov	r18,r21
  805b54:	b02b883a 	mov	r21,r22
  805b58:	882d883a 	mov	r22,r17
  805b5c:	dc403017 	ldw	r17,192(sp)
  805b60:	d9002b17 	ldw	r4,172(sp)
  805b64:	1d87883a 	add	r3,r3,r22
  805b68:	10800044 	addi	r2,r2,1
  805b6c:	41000015 	stw	r4,0(r8)
  805b70:	45800115 	stw	r22,4(r8)
  805b74:	d8c02015 	stw	r3,128(sp)
  805b78:	d8801f15 	stw	r2,124(sp)
  805b7c:	010001c4 	movi	r4,7
  805b80:	20818e16 	blt	r4,r2,8061bc <___vfprintf_internal_r+0x1638>
  805b84:	42000204 	addi	r8,r8,8
  805b88:	003e3106 	br	805450 <__alt_data_end+0xff805450>
  805b8c:	d9403317 	ldw	r5,204(sp)
  805b90:	00800044 	movi	r2,1
  805b94:	18c00044 	addi	r3,r3,1
  805b98:	1141530e 	bge	r2,r5,8060e8 <___vfprintf_internal_r+0x1564>
  805b9c:	dc401f17 	ldw	r17,124(sp)
  805ba0:	00800044 	movi	r2,1
  805ba4:	40800115 	stw	r2,4(r8)
  805ba8:	8c400044 	addi	r17,r17,1
  805bac:	44000015 	stw	r16,0(r8)
  805bb0:	d8c02015 	stw	r3,128(sp)
  805bb4:	dc401f15 	stw	r17,124(sp)
  805bb8:	008001c4 	movi	r2,7
  805bbc:	14416b16 	blt	r2,r17,80616c <___vfprintf_internal_r+0x15e8>
  805bc0:	42000204 	addi	r8,r8,8
  805bc4:	d8803717 	ldw	r2,220(sp)
  805bc8:	d9003417 	ldw	r4,208(sp)
  805bcc:	8c400044 	addi	r17,r17,1
  805bd0:	10c7883a 	add	r3,r2,r3
  805bd4:	40800115 	stw	r2,4(r8)
  805bd8:	41000015 	stw	r4,0(r8)
  805bdc:	d8c02015 	stw	r3,128(sp)
  805be0:	dc401f15 	stw	r17,124(sp)
  805be4:	008001c4 	movi	r2,7
  805be8:	14416916 	blt	r2,r17,806190 <___vfprintf_internal_r+0x160c>
  805bec:	45800204 	addi	r22,r8,8
  805bf0:	d9003617 	ldw	r4,216(sp)
  805bf4:	d9403817 	ldw	r5,224(sp)
  805bf8:	000d883a 	mov	r6,zero
  805bfc:	000f883a 	mov	r7,zero
  805c00:	d8c03c15 	stw	r3,240(sp)
  805c04:	08033bc0 	call	8033bc <__eqdf2>
  805c08:	d8c03c17 	ldw	r3,240(sp)
  805c0c:	1000bc26 	beq	r2,zero,805f00 <___vfprintf_internal_r+0x137c>
  805c10:	d9403317 	ldw	r5,204(sp)
  805c14:	84000044 	addi	r16,r16,1
  805c18:	8c400044 	addi	r17,r17,1
  805c1c:	28bfffc4 	addi	r2,r5,-1
  805c20:	1887883a 	add	r3,r3,r2
  805c24:	b0800115 	stw	r2,4(r22)
  805c28:	b4000015 	stw	r16,0(r22)
  805c2c:	d8c02015 	stw	r3,128(sp)
  805c30:	dc401f15 	stw	r17,124(sp)
  805c34:	008001c4 	movi	r2,7
  805c38:	14414316 	blt	r2,r17,806148 <___vfprintf_internal_r+0x15c4>
  805c3c:	b5800204 	addi	r22,r22,8
  805c40:	d9003a17 	ldw	r4,232(sp)
  805c44:	df0022c4 	addi	fp,sp,139
  805c48:	8c400044 	addi	r17,r17,1
  805c4c:	20c7883a 	add	r3,r4,r3
  805c50:	b7000015 	stw	fp,0(r22)
  805c54:	b1000115 	stw	r4,4(r22)
  805c58:	d8c02015 	stw	r3,128(sp)
  805c5c:	dc401f15 	stw	r17,124(sp)
  805c60:	008001c4 	movi	r2,7
  805c64:	14400e16 	blt	r2,r17,805ca0 <___vfprintf_internal_r+0x111c>
  805c68:	b2000204 	addi	r8,r22,8
  805c6c:	003e3a06 	br	805558 <__alt_data_end+0xff805558>
  805c70:	01002074 	movhi	r4,129
  805c74:	21083984 	addi	r4,r4,8422
  805c78:	d9002b15 	stw	r4,172(sp)
  805c7c:	d9002b17 	ldw	r4,172(sp)
  805c80:	1c07883a 	add	r3,r3,r16
  805c84:	44000115 	stw	r16,4(r8)
  805c88:	41000015 	stw	r4,0(r8)
  805c8c:	10800044 	addi	r2,r2,1
  805c90:	d8c02015 	stw	r3,128(sp)
  805c94:	d8801f15 	stw	r2,124(sp)
  805c98:	010001c4 	movi	r4,7
  805c9c:	20be2d0e 	bge	r4,r2,805554 <__alt_data_end+0xff805554>
  805ca0:	d9002c17 	ldw	r4,176(sp)
  805ca4:	d9801e04 	addi	r6,sp,120
  805ca8:	b80b883a 	mov	r5,r23
  805cac:	080c1800 	call	80c180 <__sprint_r>
  805cb0:	103cb61e 	bne	r2,zero,804f8c <__alt_data_end+0xff804f8c>
  805cb4:	d8c02017 	ldw	r3,128(sp)
  805cb8:	da000404 	addi	r8,sp,16
  805cbc:	003e2606 	br	805558 <__alt_data_end+0xff805558>
  805cc0:	d9002c17 	ldw	r4,176(sp)
  805cc4:	d9801e04 	addi	r6,sp,120
  805cc8:	b80b883a 	mov	r5,r23
  805ccc:	080c1800 	call	80c180 <__sprint_r>
  805cd0:	103e5d26 	beq	r2,zero,805648 <__alt_data_end+0xff805648>
  805cd4:	003cad06 	br	804f8c <__alt_data_end+0xff804f8c>
  805cd8:	d9002c17 	ldw	r4,176(sp)
  805cdc:	d9801e04 	addi	r6,sp,120
  805ce0:	b80b883a 	mov	r5,r23
  805ce4:	080c1800 	call	80c180 <__sprint_r>
  805ce8:	103ca81e 	bne	r2,zero,804f8c <__alt_data_end+0xff804f8c>
  805cec:	d8c02017 	ldw	r3,128(sp)
  805cf0:	da000404 	addi	r8,sp,16
  805cf4:	003e0b06 	br	805524 <__alt_data_end+0xff805524>
  805cf8:	d9002c17 	ldw	r4,176(sp)
  805cfc:	d9801e04 	addi	r6,sp,120
  805d00:	b80b883a 	mov	r5,r23
  805d04:	080c1800 	call	80c180 <__sprint_r>
  805d08:	103ca01e 	bne	r2,zero,804f8c <__alt_data_end+0xff804f8c>
  805d0c:	d8c02017 	ldw	r3,128(sp)
  805d10:	da000404 	addi	r8,sp,16
  805d14:	003dbd06 	br	80540c <__alt_data_end+0xff80540c>
  805d18:	d9002c17 	ldw	r4,176(sp)
  805d1c:	d9801e04 	addi	r6,sp,120
  805d20:	b80b883a 	mov	r5,r23
  805d24:	080c1800 	call	80c180 <__sprint_r>
  805d28:	103c981e 	bne	r2,zero,804f8c <__alt_data_end+0xff804f8c>
  805d2c:	d8c02017 	ldw	r3,128(sp)
  805d30:	da000404 	addi	r8,sp,16
  805d34:	003dc306 	br	805444 <__alt_data_end+0xff805444>
  805d38:	d8802917 	ldw	r2,164(sp)
  805d3c:	d8002785 	stb	zero,158(sp)
  805d40:	103f0616 	blt	r2,zero,80595c <__alt_data_end+0xff80595c>
  805d44:	00ffdfc4 	movi	r3,-129
  805d48:	9d84b03a 	or	r2,r19,r22
  805d4c:	90e4703a 	and	r18,r18,r3
  805d50:	103c6b26 	beq	r2,zero,804f00 <__alt_data_end+0xff804f00>
  805d54:	0039883a 	mov	fp,zero
  805d58:	003e7406 	br	80572c <__alt_data_end+0xff80572c>
  805d5c:	9080040c 	andi	r2,r18,16
  805d60:	1001b326 	beq	r2,zero,806430 <___vfprintf_internal_r+0x18ac>
  805d64:	d9002d17 	ldw	r4,180(sp)
  805d68:	d9402917 	ldw	r5,164(sp)
  805d6c:	d8002785 	stb	zero,158(sp)
  805d70:	20800104 	addi	r2,r4,4
  805d74:	24c00017 	ldw	r19,0(r4)
  805d78:	002d883a 	mov	r22,zero
  805d7c:	2801b516 	blt	r5,zero,806454 <___vfprintf_internal_r+0x18d0>
  805d80:	00ffdfc4 	movi	r3,-129
  805d84:	d8802d15 	stw	r2,180(sp)
  805d88:	90e4703a 	and	r18,r18,r3
  805d8c:	983d2726 	beq	r19,zero,80522c <__alt_data_end+0xff80522c>
  805d90:	0039883a 	mov	fp,zero
  805d94:	003d2a06 	br	805240 <__alt_data_end+0xff805240>
  805d98:	dc402617 	ldw	r17,152(sp)
  805d9c:	0441d30e 	bge	zero,r17,8064ec <___vfprintf_internal_r+0x1968>
  805da0:	dc403217 	ldw	r17,200(sp)
  805da4:	d8803317 	ldw	r2,204(sp)
  805da8:	1440010e 	bge	r2,r17,805db0 <___vfprintf_internal_r+0x122c>
  805dac:	1023883a 	mov	r17,r2
  805db0:	04400a0e 	bge	zero,r17,805ddc <___vfprintf_internal_r+0x1258>
  805db4:	d8801f17 	ldw	r2,124(sp)
  805db8:	1c47883a 	add	r3,r3,r17
  805dbc:	44000015 	stw	r16,0(r8)
  805dc0:	10800044 	addi	r2,r2,1
  805dc4:	44400115 	stw	r17,4(r8)
  805dc8:	d8c02015 	stw	r3,128(sp)
  805dcc:	d8801f15 	stw	r2,124(sp)
  805dd0:	010001c4 	movi	r4,7
  805dd4:	20826516 	blt	r4,r2,80676c <___vfprintf_internal_r+0x1be8>
  805dd8:	42000204 	addi	r8,r8,8
  805ddc:	88026116 	blt	r17,zero,806764 <___vfprintf_internal_r+0x1be0>
  805de0:	d9003217 	ldw	r4,200(sp)
  805de4:	2463c83a 	sub	r17,r4,r17
  805de8:	04407b0e 	bge	zero,r17,805fd8 <___vfprintf_internal_r+0x1454>
  805dec:	05800404 	movi	r22,16
  805df0:	d8801f17 	ldw	r2,124(sp)
  805df4:	b4419d0e 	bge	r22,r17,80646c <___vfprintf_internal_r+0x18e8>
  805df8:	01002074 	movhi	r4,129
  805dfc:	21083984 	addi	r4,r4,8422
  805e00:	d9002b15 	stw	r4,172(sp)
  805e04:	070001c4 	movi	fp,7
  805e08:	dcc02c17 	ldw	r19,176(sp)
  805e0c:	00000306 	br	805e1c <___vfprintf_internal_r+0x1298>
  805e10:	42000204 	addi	r8,r8,8
  805e14:	8c7ffc04 	addi	r17,r17,-16
  805e18:	b441970e 	bge	r22,r17,806478 <___vfprintf_internal_r+0x18f4>
  805e1c:	18c00404 	addi	r3,r3,16
  805e20:	10800044 	addi	r2,r2,1
  805e24:	45000015 	stw	r20,0(r8)
  805e28:	45800115 	stw	r22,4(r8)
  805e2c:	d8c02015 	stw	r3,128(sp)
  805e30:	d8801f15 	stw	r2,124(sp)
  805e34:	e0bff60e 	bge	fp,r2,805e10 <__alt_data_end+0xff805e10>
  805e38:	d9801e04 	addi	r6,sp,120
  805e3c:	b80b883a 	mov	r5,r23
  805e40:	9809883a 	mov	r4,r19
  805e44:	080c1800 	call	80c180 <__sprint_r>
  805e48:	103c501e 	bne	r2,zero,804f8c <__alt_data_end+0xff804f8c>
  805e4c:	d8c02017 	ldw	r3,128(sp)
  805e50:	d8801f17 	ldw	r2,124(sp)
  805e54:	da000404 	addi	r8,sp,16
  805e58:	003fee06 	br	805e14 <__alt_data_end+0xff805e14>
  805e5c:	d9002c17 	ldw	r4,176(sp)
  805e60:	d9801e04 	addi	r6,sp,120
  805e64:	b80b883a 	mov	r5,r23
  805e68:	080c1800 	call	80c180 <__sprint_r>
  805e6c:	103c471e 	bne	r2,zero,804f8c <__alt_data_end+0xff804f8c>
  805e70:	d8c02017 	ldw	r3,128(sp)
  805e74:	df002787 	ldb	fp,158(sp)
  805e78:	da000404 	addi	r8,sp,16
  805e7c:	003d5606 	br	8053d8 <__alt_data_end+0xff8053d8>
  805e80:	9080040c 	andi	r2,r18,16
  805e84:	10016126 	beq	r2,zero,80640c <___vfprintf_internal_r+0x1888>
  805e88:	d8802d17 	ldw	r2,180(sp)
  805e8c:	14c00017 	ldw	r19,0(r2)
  805e90:	10800104 	addi	r2,r2,4
  805e94:	d8802d15 	stw	r2,180(sp)
  805e98:	982dd7fa 	srai	r22,r19,31
  805e9c:	b005883a 	mov	r2,r22
  805ea0:	003c8206 	br	8050ac <__alt_data_end+0xff8050ac>
  805ea4:	9080040c 	andi	r2,r18,16
  805ea8:	10003526 	beq	r2,zero,805f80 <___vfprintf_internal_r+0x13fc>
  805eac:	d9402d17 	ldw	r5,180(sp)
  805eb0:	d8c02917 	ldw	r3,164(sp)
  805eb4:	d8002785 	stb	zero,158(sp)
  805eb8:	28800104 	addi	r2,r5,4
  805ebc:	2cc00017 	ldw	r19,0(r5)
  805ec0:	002d883a 	mov	r22,zero
  805ec4:	18003716 	blt	r3,zero,805fa4 <___vfprintf_internal_r+0x1420>
  805ec8:	00ffdfc4 	movi	r3,-129
  805ecc:	d8802d15 	stw	r2,180(sp)
  805ed0:	90e4703a 	and	r18,r18,r3
  805ed4:	0039883a 	mov	fp,zero
  805ed8:	983df326 	beq	r19,zero,8056a8 <__alt_data_end+0xff8056a8>
  805edc:	00800244 	movi	r2,9
  805ee0:	14fc7b36 	bltu	r2,r19,8050d0 <__alt_data_end+0xff8050d0>
  805ee4:	d8c02817 	ldw	r3,160(sp)
  805ee8:	dc001dc4 	addi	r16,sp,119
  805eec:	9cc00c04 	addi	r19,r19,48
  805ef0:	1c07c83a 	sub	r3,r3,r16
  805ef4:	dcc01dc5 	stb	r19,119(sp)
  805ef8:	d8c02e15 	stw	r3,184(sp)
  805efc:	003ce806 	br	8052a0 <__alt_data_end+0xff8052a0>
  805f00:	d8803317 	ldw	r2,204(sp)
  805f04:	143fffc4 	addi	r16,r2,-1
  805f08:	043f4d0e 	bge	zero,r16,805c40 <__alt_data_end+0xff805c40>
  805f0c:	07000404 	movi	fp,16
  805f10:	e400810e 	bge	fp,r16,806118 <___vfprintf_internal_r+0x1594>
  805f14:	01402074 	movhi	r5,129
  805f18:	29483984 	addi	r5,r5,8422
  805f1c:	d9402b15 	stw	r5,172(sp)
  805f20:	01c001c4 	movi	r7,7
  805f24:	dcc02c17 	ldw	r19,176(sp)
  805f28:	00000306 	br	805f38 <___vfprintf_internal_r+0x13b4>
  805f2c:	b5800204 	addi	r22,r22,8
  805f30:	843ffc04 	addi	r16,r16,-16
  805f34:	e4007b0e 	bge	fp,r16,806124 <___vfprintf_internal_r+0x15a0>
  805f38:	18c00404 	addi	r3,r3,16
  805f3c:	8c400044 	addi	r17,r17,1
  805f40:	b5000015 	stw	r20,0(r22)
  805f44:	b7000115 	stw	fp,4(r22)
  805f48:	d8c02015 	stw	r3,128(sp)
  805f4c:	dc401f15 	stw	r17,124(sp)
  805f50:	3c7ff60e 	bge	r7,r17,805f2c <__alt_data_end+0xff805f2c>
  805f54:	d9801e04 	addi	r6,sp,120
  805f58:	b80b883a 	mov	r5,r23
  805f5c:	9809883a 	mov	r4,r19
  805f60:	d9c03c15 	stw	r7,240(sp)
  805f64:	080c1800 	call	80c180 <__sprint_r>
  805f68:	d9c03c17 	ldw	r7,240(sp)
  805f6c:	103c071e 	bne	r2,zero,804f8c <__alt_data_end+0xff804f8c>
  805f70:	d8c02017 	ldw	r3,128(sp)
  805f74:	dc401f17 	ldw	r17,124(sp)
  805f78:	dd800404 	addi	r22,sp,16
  805f7c:	003fec06 	br	805f30 <__alt_data_end+0xff805f30>
  805f80:	9080100c 	andi	r2,r18,64
  805f84:	d8002785 	stb	zero,158(sp)
  805f88:	10010e26 	beq	r2,zero,8063c4 <___vfprintf_internal_r+0x1840>
  805f8c:	d9002d17 	ldw	r4,180(sp)
  805f90:	d9402917 	ldw	r5,164(sp)
  805f94:	002d883a 	mov	r22,zero
  805f98:	20800104 	addi	r2,r4,4
  805f9c:	24c0000b 	ldhu	r19,0(r4)
  805fa0:	283fc90e 	bge	r5,zero,805ec8 <__alt_data_end+0xff805ec8>
  805fa4:	d8802d15 	stw	r2,180(sp)
  805fa8:	0039883a 	mov	fp,zero
  805fac:	9d84b03a 	or	r2,r19,r22
  805fb0:	103c461e 	bne	r2,zero,8050cc <__alt_data_end+0xff8050cc>
  805fb4:	00800044 	movi	r2,1
  805fb8:	003e6c06 	br	80596c <__alt_data_end+0xff80596c>
  805fbc:	d9002c17 	ldw	r4,176(sp)
  805fc0:	d9801e04 	addi	r6,sp,120
  805fc4:	b80b883a 	mov	r5,r23
  805fc8:	080c1800 	call	80c180 <__sprint_r>
  805fcc:	103bef1e 	bne	r2,zero,804f8c <__alt_data_end+0xff804f8c>
  805fd0:	d8c02017 	ldw	r3,128(sp)
  805fd4:	da000404 	addi	r8,sp,16
  805fd8:	d9003217 	ldw	r4,200(sp)
  805fdc:	d8802617 	ldw	r2,152(sp)
  805fe0:	d9403317 	ldw	r5,204(sp)
  805fe4:	8123883a 	add	r17,r16,r4
  805fe8:	11400216 	blt	r2,r5,805ff4 <___vfprintf_internal_r+0x1470>
  805fec:	9100004c 	andi	r4,r18,1
  805ff0:	20000d26 	beq	r4,zero,806028 <___vfprintf_internal_r+0x14a4>
  805ff4:	d9003717 	ldw	r4,220(sp)
  805ff8:	d9403417 	ldw	r5,208(sp)
  805ffc:	1907883a 	add	r3,r3,r4
  806000:	d9001f17 	ldw	r4,124(sp)
  806004:	41400015 	stw	r5,0(r8)
  806008:	d9403717 	ldw	r5,220(sp)
  80600c:	21000044 	addi	r4,r4,1
  806010:	d8c02015 	stw	r3,128(sp)
  806014:	41400115 	stw	r5,4(r8)
  806018:	d9001f15 	stw	r4,124(sp)
  80601c:	014001c4 	movi	r5,7
  806020:	2901e816 	blt	r5,r4,8067c4 <___vfprintf_internal_r+0x1c40>
  806024:	42000204 	addi	r8,r8,8
  806028:	d9003317 	ldw	r4,204(sp)
  80602c:	8121883a 	add	r16,r16,r4
  806030:	2085c83a 	sub	r2,r4,r2
  806034:	8461c83a 	sub	r16,r16,r17
  806038:	1400010e 	bge	r2,r16,806040 <___vfprintf_internal_r+0x14bc>
  80603c:	1021883a 	mov	r16,r2
  806040:	04000a0e 	bge	zero,r16,80606c <___vfprintf_internal_r+0x14e8>
  806044:	d9001f17 	ldw	r4,124(sp)
  806048:	1c07883a 	add	r3,r3,r16
  80604c:	44400015 	stw	r17,0(r8)
  806050:	21000044 	addi	r4,r4,1
  806054:	44000115 	stw	r16,4(r8)
  806058:	d8c02015 	stw	r3,128(sp)
  80605c:	d9001f15 	stw	r4,124(sp)
  806060:	014001c4 	movi	r5,7
  806064:	2901fb16 	blt	r5,r4,806854 <___vfprintf_internal_r+0x1cd0>
  806068:	42000204 	addi	r8,r8,8
  80606c:	8001f716 	blt	r16,zero,80684c <___vfprintf_internal_r+0x1cc8>
  806070:	1421c83a 	sub	r16,r2,r16
  806074:	043d380e 	bge	zero,r16,805558 <__alt_data_end+0xff805558>
  806078:	04400404 	movi	r17,16
  80607c:	d8801f17 	ldw	r2,124(sp)
  806080:	8c3efb0e 	bge	r17,r16,805c70 <__alt_data_end+0xff805c70>
  806084:	01402074 	movhi	r5,129
  806088:	29483984 	addi	r5,r5,8422
  80608c:	d9402b15 	stw	r5,172(sp)
  806090:	058001c4 	movi	r22,7
  806094:	dcc02c17 	ldw	r19,176(sp)
  806098:	00000306 	br	8060a8 <___vfprintf_internal_r+0x1524>
  80609c:	42000204 	addi	r8,r8,8
  8060a0:	843ffc04 	addi	r16,r16,-16
  8060a4:	8c3ef50e 	bge	r17,r16,805c7c <__alt_data_end+0xff805c7c>
  8060a8:	18c00404 	addi	r3,r3,16
  8060ac:	10800044 	addi	r2,r2,1
  8060b0:	45000015 	stw	r20,0(r8)
  8060b4:	44400115 	stw	r17,4(r8)
  8060b8:	d8c02015 	stw	r3,128(sp)
  8060bc:	d8801f15 	stw	r2,124(sp)
  8060c0:	b0bff60e 	bge	r22,r2,80609c <__alt_data_end+0xff80609c>
  8060c4:	d9801e04 	addi	r6,sp,120
  8060c8:	b80b883a 	mov	r5,r23
  8060cc:	9809883a 	mov	r4,r19
  8060d0:	080c1800 	call	80c180 <__sprint_r>
  8060d4:	103bad1e 	bne	r2,zero,804f8c <__alt_data_end+0xff804f8c>
  8060d8:	d8c02017 	ldw	r3,128(sp)
  8060dc:	d8801f17 	ldw	r2,124(sp)
  8060e0:	da000404 	addi	r8,sp,16
  8060e4:	003fee06 	br	8060a0 <__alt_data_end+0xff8060a0>
  8060e8:	9088703a 	and	r4,r18,r2
  8060ec:	203eab1e 	bne	r4,zero,805b9c <__alt_data_end+0xff805b9c>
  8060f0:	dc401f17 	ldw	r17,124(sp)
  8060f4:	40800115 	stw	r2,4(r8)
  8060f8:	44000015 	stw	r16,0(r8)
  8060fc:	8c400044 	addi	r17,r17,1
  806100:	d8c02015 	stw	r3,128(sp)
  806104:	dc401f15 	stw	r17,124(sp)
  806108:	008001c4 	movi	r2,7
  80610c:	14400e16 	blt	r2,r17,806148 <___vfprintf_internal_r+0x15c4>
  806110:	45800204 	addi	r22,r8,8
  806114:	003eca06 	br	805c40 <__alt_data_end+0xff805c40>
  806118:	01002074 	movhi	r4,129
  80611c:	21083984 	addi	r4,r4,8422
  806120:	d9002b15 	stw	r4,172(sp)
  806124:	d8802b17 	ldw	r2,172(sp)
  806128:	1c07883a 	add	r3,r3,r16
  80612c:	8c400044 	addi	r17,r17,1
  806130:	b0800015 	stw	r2,0(r22)
  806134:	b4000115 	stw	r16,4(r22)
  806138:	d8c02015 	stw	r3,128(sp)
  80613c:	dc401f15 	stw	r17,124(sp)
  806140:	008001c4 	movi	r2,7
  806144:	147ebd0e 	bge	r2,r17,805c3c <__alt_data_end+0xff805c3c>
  806148:	d9002c17 	ldw	r4,176(sp)
  80614c:	d9801e04 	addi	r6,sp,120
  806150:	b80b883a 	mov	r5,r23
  806154:	080c1800 	call	80c180 <__sprint_r>
  806158:	103b8c1e 	bne	r2,zero,804f8c <__alt_data_end+0xff804f8c>
  80615c:	d8c02017 	ldw	r3,128(sp)
  806160:	dc401f17 	ldw	r17,124(sp)
  806164:	dd800404 	addi	r22,sp,16
  806168:	003eb506 	br	805c40 <__alt_data_end+0xff805c40>
  80616c:	d9002c17 	ldw	r4,176(sp)
  806170:	d9801e04 	addi	r6,sp,120
  806174:	b80b883a 	mov	r5,r23
  806178:	080c1800 	call	80c180 <__sprint_r>
  80617c:	103b831e 	bne	r2,zero,804f8c <__alt_data_end+0xff804f8c>
  806180:	d8c02017 	ldw	r3,128(sp)
  806184:	dc401f17 	ldw	r17,124(sp)
  806188:	da000404 	addi	r8,sp,16
  80618c:	003e8d06 	br	805bc4 <__alt_data_end+0xff805bc4>
  806190:	d9002c17 	ldw	r4,176(sp)
  806194:	d9801e04 	addi	r6,sp,120
  806198:	b80b883a 	mov	r5,r23
  80619c:	080c1800 	call	80c180 <__sprint_r>
  8061a0:	103b7a1e 	bne	r2,zero,804f8c <__alt_data_end+0xff804f8c>
  8061a4:	d8c02017 	ldw	r3,128(sp)
  8061a8:	dc401f17 	ldw	r17,124(sp)
  8061ac:	dd800404 	addi	r22,sp,16
  8061b0:	003e8f06 	br	805bf0 <__alt_data_end+0xff805bf0>
  8061b4:	0027883a 	mov	r19,zero
  8061b8:	003f4a06 	br	805ee4 <__alt_data_end+0xff805ee4>
  8061bc:	d9002c17 	ldw	r4,176(sp)
  8061c0:	d9801e04 	addi	r6,sp,120
  8061c4:	b80b883a 	mov	r5,r23
  8061c8:	080c1800 	call	80c180 <__sprint_r>
  8061cc:	103b6f1e 	bne	r2,zero,804f8c <__alt_data_end+0xff804f8c>
  8061d0:	d8c02017 	ldw	r3,128(sp)
  8061d4:	da000404 	addi	r8,sp,16
  8061d8:	003c9d06 	br	805450 <__alt_data_end+0xff805450>
  8061dc:	04e7c83a 	sub	r19,zero,r19
  8061e0:	9804c03a 	cmpne	r2,r19,zero
  8061e4:	05adc83a 	sub	r22,zero,r22
  8061e8:	b0adc83a 	sub	r22,r22,r2
  8061ec:	d8802917 	ldw	r2,164(sp)
  8061f0:	07000b44 	movi	fp,45
  8061f4:	df002785 	stb	fp,158(sp)
  8061f8:	10017b16 	blt	r2,zero,8067e8 <___vfprintf_internal_r+0x1c64>
  8061fc:	00bfdfc4 	movi	r2,-129
  806200:	90a4703a 	and	r18,r18,r2
  806204:	003bb106 	br	8050cc <__alt_data_end+0xff8050cc>
  806208:	d9003617 	ldw	r4,216(sp)
  80620c:	d9403817 	ldw	r5,224(sp)
  806210:	da003d15 	stw	r8,244(sp)
  806214:	080bda40 	call	80bda4 <__fpclassifyd>
  806218:	da003d17 	ldw	r8,244(sp)
  80621c:	1000f026 	beq	r2,zero,8065e0 <___vfprintf_internal_r+0x1a5c>
  806220:	d9002917 	ldw	r4,164(sp)
  806224:	05bff7c4 	movi	r22,-33
  806228:	00bfffc4 	movi	r2,-1
  80622c:	8dac703a 	and	r22,r17,r22
  806230:	20820026 	beq	r4,r2,806a34 <___vfprintf_internal_r+0x1eb0>
  806234:	008011c4 	movi	r2,71
  806238:	b081f726 	beq	r22,r2,806a18 <___vfprintf_internal_r+0x1e94>
  80623c:	d9003817 	ldw	r4,224(sp)
  806240:	90c04014 	ori	r3,r18,256
  806244:	d8c02b15 	stw	r3,172(sp)
  806248:	20021516 	blt	r4,zero,806aa0 <___vfprintf_internal_r+0x1f1c>
  80624c:	dcc03817 	ldw	r19,224(sp)
  806250:	d8002a05 	stb	zero,168(sp)
  806254:	00801984 	movi	r2,102
  806258:	8881f926 	beq	r17,r2,806a40 <___vfprintf_internal_r+0x1ebc>
  80625c:	00801184 	movi	r2,70
  806260:	88821c26 	beq	r17,r2,806ad4 <___vfprintf_internal_r+0x1f50>
  806264:	00801144 	movi	r2,69
  806268:	b081ef26 	beq	r22,r2,806a28 <___vfprintf_internal_r+0x1ea4>
  80626c:	d8c02917 	ldw	r3,164(sp)
  806270:	d8802104 	addi	r2,sp,132
  806274:	d8800315 	stw	r2,12(sp)
  806278:	d9403617 	ldw	r5,216(sp)
  80627c:	d8802504 	addi	r2,sp,148
  806280:	d9002c17 	ldw	r4,176(sp)
  806284:	d8800215 	stw	r2,8(sp)
  806288:	d8802604 	addi	r2,sp,152
  80628c:	d8c00015 	stw	r3,0(sp)
  806290:	d8800115 	stw	r2,4(sp)
  806294:	01c00084 	movi	r7,2
  806298:	980d883a 	mov	r6,r19
  80629c:	d8c03c15 	stw	r3,240(sp)
  8062a0:	da003d15 	stw	r8,244(sp)
  8062a4:	08071a80 	call	8071a8 <_dtoa_r>
  8062a8:	1021883a 	mov	r16,r2
  8062ac:	008019c4 	movi	r2,103
  8062b0:	d8c03c17 	ldw	r3,240(sp)
  8062b4:	da003d17 	ldw	r8,244(sp)
  8062b8:	88817126 	beq	r17,r2,806880 <___vfprintf_internal_r+0x1cfc>
  8062bc:	008011c4 	movi	r2,71
  8062c0:	88829226 	beq	r17,r2,806d0c <___vfprintf_internal_r+0x2188>
  8062c4:	80f9883a 	add	fp,r16,r3
  8062c8:	d9003617 	ldw	r4,216(sp)
  8062cc:	000d883a 	mov	r6,zero
  8062d0:	000f883a 	mov	r7,zero
  8062d4:	980b883a 	mov	r5,r19
  8062d8:	da003d15 	stw	r8,244(sp)
  8062dc:	08033bc0 	call	8033bc <__eqdf2>
  8062e0:	da003d17 	ldw	r8,244(sp)
  8062e4:	10018d26 	beq	r2,zero,80691c <___vfprintf_internal_r+0x1d98>
  8062e8:	d8802117 	ldw	r2,132(sp)
  8062ec:	1700062e 	bgeu	r2,fp,806308 <___vfprintf_internal_r+0x1784>
  8062f0:	01000c04 	movi	r4,48
  8062f4:	10c00044 	addi	r3,r2,1
  8062f8:	d8c02115 	stw	r3,132(sp)
  8062fc:	11000005 	stb	r4,0(r2)
  806300:	d8802117 	ldw	r2,132(sp)
  806304:	173ffb36 	bltu	r2,fp,8062f4 <__alt_data_end+0xff8062f4>
  806308:	1405c83a 	sub	r2,r2,r16
  80630c:	d8803315 	stw	r2,204(sp)
  806310:	008011c4 	movi	r2,71
  806314:	b0817626 	beq	r22,r2,8068f0 <___vfprintf_internal_r+0x1d6c>
  806318:	00801944 	movi	r2,101
  80631c:	1442810e 	bge	r2,r17,806d24 <___vfprintf_internal_r+0x21a0>
  806320:	d8c02617 	ldw	r3,152(sp)
  806324:	00801984 	movi	r2,102
  806328:	d8c03215 	stw	r3,200(sp)
  80632c:	8881fe26 	beq	r17,r2,806b28 <___vfprintf_internal_r+0x1fa4>
  806330:	d8c03217 	ldw	r3,200(sp)
  806334:	d9003317 	ldw	r4,204(sp)
  806338:	1901dd16 	blt	r3,r4,806ab0 <___vfprintf_internal_r+0x1f2c>
  80633c:	9480004c 	andi	r18,r18,1
  806340:	90022b1e 	bne	r18,zero,806bf0 <___vfprintf_internal_r+0x206c>
  806344:	1805883a 	mov	r2,r3
  806348:	18028016 	blt	r3,zero,806d4c <___vfprintf_internal_r+0x21c8>
  80634c:	d8c03217 	ldw	r3,200(sp)
  806350:	044019c4 	movi	r17,103
  806354:	d8c02e15 	stw	r3,184(sp)
  806358:	df002a07 	ldb	fp,168(sp)
  80635c:	e001531e 	bne	fp,zero,8068ac <___vfprintf_internal_r+0x1d28>
  806360:	df002783 	ldbu	fp,158(sp)
  806364:	d8802a15 	stw	r2,168(sp)
  806368:	dc802b17 	ldw	r18,172(sp)
  80636c:	d8002915 	stw	zero,164(sp)
  806370:	003bd106 	br	8052b8 <__alt_data_end+0xff8052b8>
  806374:	d8802d17 	ldw	r2,180(sp)
  806378:	d8c02d17 	ldw	r3,180(sp)
  80637c:	d9002d17 	ldw	r4,180(sp)
  806380:	10800017 	ldw	r2,0(r2)
  806384:	18c00117 	ldw	r3,4(r3)
  806388:	21000204 	addi	r4,r4,8
  80638c:	d8803615 	stw	r2,216(sp)
  806390:	d8c03815 	stw	r3,224(sp)
  806394:	d9002d15 	stw	r4,180(sp)
  806398:	003b7506 	br	805170 <__alt_data_end+0xff805170>
  80639c:	ac400007 	ldb	r17,0(r21)
  8063a0:	003a5906 	br	804d08 <__alt_data_end+0xff804d08>
  8063a4:	9080100c 	andi	r2,r18,64
  8063a8:	1000a826 	beq	r2,zero,80664c <___vfprintf_internal_r+0x1ac8>
  8063ac:	d9002d17 	ldw	r4,180(sp)
  8063b0:	002d883a 	mov	r22,zero
  8063b4:	24c0000b 	ldhu	r19,0(r4)
  8063b8:	21000104 	addi	r4,r4,4
  8063bc:	d9002d15 	stw	r4,180(sp)
  8063c0:	003ccb06 	br	8056f0 <__alt_data_end+0xff8056f0>
  8063c4:	d8c02d17 	ldw	r3,180(sp)
  8063c8:	d9002917 	ldw	r4,164(sp)
  8063cc:	002d883a 	mov	r22,zero
  8063d0:	18800104 	addi	r2,r3,4
  8063d4:	1cc00017 	ldw	r19,0(r3)
  8063d8:	203ebb0e 	bge	r4,zero,805ec8 <__alt_data_end+0xff805ec8>
  8063dc:	003ef106 	br	805fa4 <__alt_data_end+0xff805fa4>
  8063e0:	9080040c 	andi	r2,r18,16
  8063e4:	1000921e 	bne	r2,zero,806630 <___vfprintf_internal_r+0x1aac>
  8063e8:	9480100c 	andi	r18,r18,64
  8063ec:	90013926 	beq	r18,zero,8068d4 <___vfprintf_internal_r+0x1d50>
  8063f0:	d9002d17 	ldw	r4,180(sp)
  8063f4:	d9402f17 	ldw	r5,188(sp)
  8063f8:	20800017 	ldw	r2,0(r4)
  8063fc:	21000104 	addi	r4,r4,4
  806400:	d9002d15 	stw	r4,180(sp)
  806404:	1140000d 	sth	r5,0(r2)
  806408:	003a1606 	br	804c64 <__alt_data_end+0xff804c64>
  80640c:	9080100c 	andi	r2,r18,64
  806410:	10008026 	beq	r2,zero,806614 <___vfprintf_internal_r+0x1a90>
  806414:	d8c02d17 	ldw	r3,180(sp)
  806418:	1cc0000f 	ldh	r19,0(r3)
  80641c:	18c00104 	addi	r3,r3,4
  806420:	d8c02d15 	stw	r3,180(sp)
  806424:	982dd7fa 	srai	r22,r19,31
  806428:	b005883a 	mov	r2,r22
  80642c:	003b1f06 	br	8050ac <__alt_data_end+0xff8050ac>
  806430:	9080100c 	andi	r2,r18,64
  806434:	d8002785 	stb	zero,158(sp)
  806438:	10008a1e 	bne	r2,zero,806664 <___vfprintf_internal_r+0x1ae0>
  80643c:	d9402d17 	ldw	r5,180(sp)
  806440:	d8c02917 	ldw	r3,164(sp)
  806444:	002d883a 	mov	r22,zero
  806448:	28800104 	addi	r2,r5,4
  80644c:	2cc00017 	ldw	r19,0(r5)
  806450:	183e4b0e 	bge	r3,zero,805d80 <__alt_data_end+0xff805d80>
  806454:	9d86b03a 	or	r3,r19,r22
  806458:	d8802d15 	stw	r2,180(sp)
  80645c:	183e4c1e 	bne	r3,zero,805d90 <__alt_data_end+0xff805d90>
  806460:	0039883a 	mov	fp,zero
  806464:	0005883a 	mov	r2,zero
  806468:	003d4006 	br	80596c <__alt_data_end+0xff80596c>
  80646c:	01402074 	movhi	r5,129
  806470:	29483984 	addi	r5,r5,8422
  806474:	d9402b15 	stw	r5,172(sp)
  806478:	d9402b17 	ldw	r5,172(sp)
  80647c:	1c47883a 	add	r3,r3,r17
  806480:	10800044 	addi	r2,r2,1
  806484:	41400015 	stw	r5,0(r8)
  806488:	44400115 	stw	r17,4(r8)
  80648c:	d8c02015 	stw	r3,128(sp)
  806490:	d8801f15 	stw	r2,124(sp)
  806494:	010001c4 	movi	r4,7
  806498:	20bec816 	blt	r4,r2,805fbc <__alt_data_end+0xff805fbc>
  80649c:	42000204 	addi	r8,r8,8
  8064a0:	003ecd06 	br	805fd8 <__alt_data_end+0xff805fd8>
  8064a4:	d9002917 	ldw	r4,164(sp)
  8064a8:	d8002785 	stb	zero,158(sp)
  8064ac:	203d2d16 	blt	r4,zero,805964 <__alt_data_end+0xff805964>
  8064b0:	00bfdfc4 	movi	r2,-129
  8064b4:	90a4703a 	and	r18,r18,r2
  8064b8:	003a9106 	br	804f00 <__alt_data_end+0xff804f00>
  8064bc:	01002074 	movhi	r4,129
  8064c0:	21083984 	addi	r4,r4,8422
  8064c4:	d9002b15 	stw	r4,172(sp)
  8064c8:	003c0c06 	br	8054fc <__alt_data_end+0xff8054fc>
  8064cc:	d9002c17 	ldw	r4,176(sp)
  8064d0:	d9801e04 	addi	r6,sp,120
  8064d4:	b80b883a 	mov	r5,r23
  8064d8:	080c1800 	call	80c180 <__sprint_r>
  8064dc:	103aab1e 	bne	r2,zero,804f8c <__alt_data_end+0xff804f8c>
  8064e0:	d8c02017 	ldw	r3,128(sp)
  8064e4:	da000404 	addi	r8,sp,16
  8064e8:	003d4106 	br	8059f0 <__alt_data_end+0xff8059f0>
  8064ec:	d8801f17 	ldw	r2,124(sp)
  8064f0:	01402074 	movhi	r5,129
  8064f4:	01000044 	movi	r4,1
  8064f8:	18c00044 	addi	r3,r3,1
  8064fc:	10800044 	addi	r2,r2,1
  806500:	29483904 	addi	r5,r5,8420
  806504:	41000115 	stw	r4,4(r8)
  806508:	41400015 	stw	r5,0(r8)
  80650c:	d8c02015 	stw	r3,128(sp)
  806510:	d8801f15 	stw	r2,124(sp)
  806514:	010001c4 	movi	r4,7
  806518:	20805c16 	blt	r4,r2,80668c <___vfprintf_internal_r+0x1b08>
  80651c:	42000204 	addi	r8,r8,8
  806520:	8800041e 	bne	r17,zero,806534 <___vfprintf_internal_r+0x19b0>
  806524:	d8803317 	ldw	r2,204(sp)
  806528:	1000021e 	bne	r2,zero,806534 <___vfprintf_internal_r+0x19b0>
  80652c:	9080004c 	andi	r2,r18,1
  806530:	103c0926 	beq	r2,zero,805558 <__alt_data_end+0xff805558>
  806534:	d9003717 	ldw	r4,220(sp)
  806538:	d8801f17 	ldw	r2,124(sp)
  80653c:	d9403417 	ldw	r5,208(sp)
  806540:	20c7883a 	add	r3,r4,r3
  806544:	10800044 	addi	r2,r2,1
  806548:	41000115 	stw	r4,4(r8)
  80654c:	41400015 	stw	r5,0(r8)
  806550:	d8c02015 	stw	r3,128(sp)
  806554:	d8801f15 	stw	r2,124(sp)
  806558:	010001c4 	movi	r4,7
  80655c:	20812116 	blt	r4,r2,8069e4 <___vfprintf_internal_r+0x1e60>
  806560:	42000204 	addi	r8,r8,8
  806564:	0463c83a 	sub	r17,zero,r17
  806568:	0440730e 	bge	zero,r17,806738 <___vfprintf_internal_r+0x1bb4>
  80656c:	05800404 	movi	r22,16
  806570:	b440860e 	bge	r22,r17,80678c <___vfprintf_internal_r+0x1c08>
  806574:	01402074 	movhi	r5,129
  806578:	29483984 	addi	r5,r5,8422
  80657c:	d9402b15 	stw	r5,172(sp)
  806580:	070001c4 	movi	fp,7
  806584:	dcc02c17 	ldw	r19,176(sp)
  806588:	00000306 	br	806598 <___vfprintf_internal_r+0x1a14>
  80658c:	42000204 	addi	r8,r8,8
  806590:	8c7ffc04 	addi	r17,r17,-16
  806594:	b440800e 	bge	r22,r17,806798 <___vfprintf_internal_r+0x1c14>
  806598:	18c00404 	addi	r3,r3,16
  80659c:	10800044 	addi	r2,r2,1
  8065a0:	45000015 	stw	r20,0(r8)
  8065a4:	45800115 	stw	r22,4(r8)
  8065a8:	d8c02015 	stw	r3,128(sp)
  8065ac:	d8801f15 	stw	r2,124(sp)
  8065b0:	e0bff60e 	bge	fp,r2,80658c <__alt_data_end+0xff80658c>
  8065b4:	d9801e04 	addi	r6,sp,120
  8065b8:	b80b883a 	mov	r5,r23
  8065bc:	9809883a 	mov	r4,r19
  8065c0:	080c1800 	call	80c180 <__sprint_r>
  8065c4:	103a711e 	bne	r2,zero,804f8c <__alt_data_end+0xff804f8c>
  8065c8:	d8c02017 	ldw	r3,128(sp)
  8065cc:	d8801f17 	ldw	r2,124(sp)
  8065d0:	da000404 	addi	r8,sp,16
  8065d4:	003fee06 	br	806590 <__alt_data_end+0xff806590>
  8065d8:	00bfffc4 	movi	r2,-1
  8065dc:	003a6f06 	br	804f9c <__alt_data_end+0xff804f9c>
  8065e0:	008011c4 	movi	r2,71
  8065e4:	1440b816 	blt	r2,r17,8068c8 <___vfprintf_internal_r+0x1d44>
  8065e8:	04002074 	movhi	r16,129
  8065ec:	84082b04 	addi	r16,r16,8364
  8065f0:	00c000c4 	movi	r3,3
  8065f4:	00bfdfc4 	movi	r2,-129
  8065f8:	d8c02a15 	stw	r3,168(sp)
  8065fc:	90a4703a 	and	r18,r18,r2
  806600:	df002783 	ldbu	fp,158(sp)
  806604:	d8c02e15 	stw	r3,184(sp)
  806608:	d8002915 	stw	zero,164(sp)
  80660c:	d8003215 	stw	zero,200(sp)
  806610:	003b2906 	br	8052b8 <__alt_data_end+0xff8052b8>
  806614:	d9002d17 	ldw	r4,180(sp)
  806618:	24c00017 	ldw	r19,0(r4)
  80661c:	21000104 	addi	r4,r4,4
  806620:	d9002d15 	stw	r4,180(sp)
  806624:	982dd7fa 	srai	r22,r19,31
  806628:	b005883a 	mov	r2,r22
  80662c:	003a9f06 	br	8050ac <__alt_data_end+0xff8050ac>
  806630:	d9402d17 	ldw	r5,180(sp)
  806634:	d8c02f17 	ldw	r3,188(sp)
  806638:	28800017 	ldw	r2,0(r5)
  80663c:	29400104 	addi	r5,r5,4
  806640:	d9402d15 	stw	r5,180(sp)
  806644:	10c00015 	stw	r3,0(r2)
  806648:	00398606 	br	804c64 <__alt_data_end+0xff804c64>
  80664c:	d9402d17 	ldw	r5,180(sp)
  806650:	002d883a 	mov	r22,zero
  806654:	2cc00017 	ldw	r19,0(r5)
  806658:	29400104 	addi	r5,r5,4
  80665c:	d9402d15 	stw	r5,180(sp)
  806660:	003c2306 	br	8056f0 <__alt_data_end+0xff8056f0>
  806664:	d8c02d17 	ldw	r3,180(sp)
  806668:	d9002917 	ldw	r4,164(sp)
  80666c:	002d883a 	mov	r22,zero
  806670:	18800104 	addi	r2,r3,4
  806674:	1cc0000b 	ldhu	r19,0(r3)
  806678:	203dc10e 	bge	r4,zero,805d80 <__alt_data_end+0xff805d80>
  80667c:	003f7506 	br	806454 <__alt_data_end+0xff806454>
  806680:	04002074 	movhi	r16,129
  806684:	84082904 	addi	r16,r16,8356
  806688:	003acc06 	br	8051bc <__alt_data_end+0xff8051bc>
  80668c:	d9002c17 	ldw	r4,176(sp)
  806690:	d9801e04 	addi	r6,sp,120
  806694:	b80b883a 	mov	r5,r23
  806698:	080c1800 	call	80c180 <__sprint_r>
  80669c:	103a3b1e 	bne	r2,zero,804f8c <__alt_data_end+0xff804f8c>
  8066a0:	dc402617 	ldw	r17,152(sp)
  8066a4:	d8c02017 	ldw	r3,128(sp)
  8066a8:	da000404 	addi	r8,sp,16
  8066ac:	003f9c06 	br	806520 <__alt_data_end+0xff806520>
  8066b0:	ac400043 	ldbu	r17,1(r21)
  8066b4:	94800814 	ori	r18,r18,32
  8066b8:	ad400044 	addi	r21,r21,1
  8066bc:	8c403fcc 	andi	r17,r17,255
  8066c0:	8c40201c 	xori	r17,r17,128
  8066c4:	8c7fe004 	addi	r17,r17,-128
  8066c8:	00398f06 	br	804d08 <__alt_data_end+0xff804d08>
  8066cc:	d8c02d15 	stw	r3,180(sp)
  8066d0:	0039883a 	mov	fp,zero
  8066d4:	003e3506 	br	805fac <__alt_data_end+0xff805fac>
  8066d8:	d9002c17 	ldw	r4,176(sp)
  8066dc:	d9801e04 	addi	r6,sp,120
  8066e0:	b80b883a 	mov	r5,r23
  8066e4:	080c1800 	call	80c180 <__sprint_r>
  8066e8:	103a281e 	bne	r2,zero,804f8c <__alt_data_end+0xff804f8c>
  8066ec:	d8c02017 	ldw	r3,128(sp)
  8066f0:	da000404 	addi	r8,sp,16
  8066f4:	003cd006 	br	805a38 <__alt_data_end+0xff805a38>
  8066f8:	8009883a 	mov	r4,r16
  8066fc:	da003d15 	stw	r8,244(sp)
  806700:	0804aec0 	call	804aec <strlen>
  806704:	d8802e15 	stw	r2,184(sp)
  806708:	da003d17 	ldw	r8,244(sp)
  80670c:	103c340e 	bge	r2,zero,8057e0 <__alt_data_end+0xff8057e0>
  806710:	0005883a 	mov	r2,zero
  806714:	003c3206 	br	8057e0 <__alt_data_end+0xff8057e0>
  806718:	d9002c17 	ldw	r4,176(sp)
  80671c:	d9801e04 	addi	r6,sp,120
  806720:	b80b883a 	mov	r5,r23
  806724:	080c1800 	call	80c180 <__sprint_r>
  806728:	103a181e 	bne	r2,zero,804f8c <__alt_data_end+0xff804f8c>
  80672c:	d8c02017 	ldw	r3,128(sp)
  806730:	d8801f17 	ldw	r2,124(sp)
  806734:	da000404 	addi	r8,sp,16
  806738:	d9403317 	ldw	r5,204(sp)
  80673c:	10800044 	addi	r2,r2,1
  806740:	44000015 	stw	r16,0(r8)
  806744:	28c7883a 	add	r3,r5,r3
  806748:	003b7d06 	br	805540 <__alt_data_end+0xff805540>
  80674c:	01002074 	movhi	r4,129
  806750:	21083d84 	addi	r4,r4,8438
  806754:	d9003515 	stw	r4,212(sp)
  806758:	003b1406 	br	8053ac <__alt_data_end+0xff8053ac>
  80675c:	013fffc4 	movi	r4,-1
  806760:	003a3506 	br	805038 <__alt_data_end+0xff805038>
  806764:	0023883a 	mov	r17,zero
  806768:	003d9d06 	br	805de0 <__alt_data_end+0xff805de0>
  80676c:	d9002c17 	ldw	r4,176(sp)
  806770:	d9801e04 	addi	r6,sp,120
  806774:	b80b883a 	mov	r5,r23
  806778:	080c1800 	call	80c180 <__sprint_r>
  80677c:	103a031e 	bne	r2,zero,804f8c <__alt_data_end+0xff804f8c>
  806780:	d8c02017 	ldw	r3,128(sp)
  806784:	da000404 	addi	r8,sp,16
  806788:	003d9406 	br	805ddc <__alt_data_end+0xff805ddc>
  80678c:	01002074 	movhi	r4,129
  806790:	21083984 	addi	r4,r4,8422
  806794:	d9002b15 	stw	r4,172(sp)
  806798:	d9002b17 	ldw	r4,172(sp)
  80679c:	1c47883a 	add	r3,r3,r17
  8067a0:	10800044 	addi	r2,r2,1
  8067a4:	41000015 	stw	r4,0(r8)
  8067a8:	44400115 	stw	r17,4(r8)
  8067ac:	d8c02015 	stw	r3,128(sp)
  8067b0:	d8801f15 	stw	r2,124(sp)
  8067b4:	010001c4 	movi	r4,7
  8067b8:	20bfd716 	blt	r4,r2,806718 <__alt_data_end+0xff806718>
  8067bc:	42000204 	addi	r8,r8,8
  8067c0:	003fdd06 	br	806738 <__alt_data_end+0xff806738>
  8067c4:	d9002c17 	ldw	r4,176(sp)
  8067c8:	d9801e04 	addi	r6,sp,120
  8067cc:	b80b883a 	mov	r5,r23
  8067d0:	080c1800 	call	80c180 <__sprint_r>
  8067d4:	1039ed1e 	bne	r2,zero,804f8c <__alt_data_end+0xff804f8c>
  8067d8:	d8802617 	ldw	r2,152(sp)
  8067dc:	d8c02017 	ldw	r3,128(sp)
  8067e0:	da000404 	addi	r8,sp,16
  8067e4:	003e1006 	br	806028 <__alt_data_end+0xff806028>
  8067e8:	00800044 	movi	r2,1
  8067ec:	10803fcc 	andi	r2,r2,255
  8067f0:	00c00044 	movi	r3,1
  8067f4:	10fa3526 	beq	r2,r3,8050cc <__alt_data_end+0xff8050cc>
  8067f8:	00c00084 	movi	r3,2
  8067fc:	10fbcb26 	beq	r2,r3,80572c <__alt_data_end+0xff80572c>
  806800:	003a8f06 	br	805240 <__alt_data_end+0xff805240>
  806804:	01002074 	movhi	r4,129
  806808:	21083d84 	addi	r4,r4,8438
  80680c:	d9003515 	stw	r4,212(sp)
  806810:	003b7606 	br	8055ec <__alt_data_end+0xff8055ec>
  806814:	d8802917 	ldw	r2,164(sp)
  806818:	00c00184 	movi	r3,6
  80681c:	1880012e 	bgeu	r3,r2,806824 <___vfprintf_internal_r+0x1ca0>
  806820:	1805883a 	mov	r2,r3
  806824:	d8802e15 	stw	r2,184(sp)
  806828:	1000ef16 	blt	r2,zero,806be8 <___vfprintf_internal_r+0x2064>
  80682c:	04002074 	movhi	r16,129
  806830:	d8802a15 	stw	r2,168(sp)
  806834:	dcc02d15 	stw	r19,180(sp)
  806838:	d8002915 	stw	zero,164(sp)
  80683c:	d8003215 	stw	zero,200(sp)
  806840:	84083704 	addi	r16,r16,8412
  806844:	0039883a 	mov	fp,zero
  806848:	003aa206 	br	8052d4 <__alt_data_end+0xff8052d4>
  80684c:	0021883a 	mov	r16,zero
  806850:	003e0706 	br	806070 <__alt_data_end+0xff806070>
  806854:	d9002c17 	ldw	r4,176(sp)
  806858:	d9801e04 	addi	r6,sp,120
  80685c:	b80b883a 	mov	r5,r23
  806860:	080c1800 	call	80c180 <__sprint_r>
  806864:	1039c91e 	bne	r2,zero,804f8c <__alt_data_end+0xff804f8c>
  806868:	d8802617 	ldw	r2,152(sp)
  80686c:	d9403317 	ldw	r5,204(sp)
  806870:	d8c02017 	ldw	r3,128(sp)
  806874:	da000404 	addi	r8,sp,16
  806878:	2885c83a 	sub	r2,r5,r2
  80687c:	003dfb06 	br	80606c <__alt_data_end+0xff80606c>
  806880:	9080004c 	andi	r2,r18,1
  806884:	103e8f1e 	bne	r2,zero,8062c4 <__alt_data_end+0xff8062c4>
  806888:	d8802117 	ldw	r2,132(sp)
  80688c:	003e9e06 	br	806308 <__alt_data_end+0xff806308>
  806890:	1025883a 	mov	r18,r2
  806894:	0039883a 	mov	fp,zero
  806898:	00800084 	movi	r2,2
  80689c:	003fd306 	br	8067ec <__alt_data_end+0xff8067ec>
  8068a0:	07000b44 	movi	fp,45
  8068a4:	df002785 	stb	fp,158(sp)
  8068a8:	003a4006 	br	8051ac <__alt_data_end+0xff8051ac>
  8068ac:	00c00b44 	movi	r3,45
  8068b0:	d8c02785 	stb	r3,158(sp)
  8068b4:	d8802a15 	stw	r2,168(sp)
  8068b8:	dc802b17 	ldw	r18,172(sp)
  8068bc:	d8002915 	stw	zero,164(sp)
  8068c0:	07000b44 	movi	fp,45
  8068c4:	003a8006 	br	8052c8 <__alt_data_end+0xff8052c8>
  8068c8:	04002074 	movhi	r16,129
  8068cc:	84082c04 	addi	r16,r16,8368
  8068d0:	003f4706 	br	8065f0 <__alt_data_end+0xff8065f0>
  8068d4:	d8c02d17 	ldw	r3,180(sp)
  8068d8:	d9002f17 	ldw	r4,188(sp)
  8068dc:	18800017 	ldw	r2,0(r3)
  8068e0:	18c00104 	addi	r3,r3,4
  8068e4:	d8c02d15 	stw	r3,180(sp)
  8068e8:	11000015 	stw	r4,0(r2)
  8068ec:	0038dd06 	br	804c64 <__alt_data_end+0xff804c64>
  8068f0:	dd802617 	ldw	r22,152(sp)
  8068f4:	00bfff44 	movi	r2,-3
  8068f8:	b0801c16 	blt	r22,r2,80696c <___vfprintf_internal_r+0x1de8>
  8068fc:	d9402917 	ldw	r5,164(sp)
  806900:	2d801a16 	blt	r5,r22,80696c <___vfprintf_internal_r+0x1de8>
  806904:	dd803215 	stw	r22,200(sp)
  806908:	003e8906 	br	806330 <__alt_data_end+0xff806330>
  80690c:	01002074 	movhi	r4,129
  806910:	21083984 	addi	r4,r4,8422
  806914:	d9002b15 	stw	r4,172(sp)
  806918:	003c9106 	br	805b60 <__alt_data_end+0xff805b60>
  80691c:	e005883a 	mov	r2,fp
  806920:	003e7906 	br	806308 <__alt_data_end+0xff806308>
  806924:	d9402917 	ldw	r5,164(sp)
  806928:	df002783 	ldbu	fp,158(sp)
  80692c:	dcc02d15 	stw	r19,180(sp)
  806930:	d9402a15 	stw	r5,168(sp)
  806934:	d9402e15 	stw	r5,184(sp)
  806938:	d8002915 	stw	zero,164(sp)
  80693c:	d8003215 	stw	zero,200(sp)
  806940:	003a5d06 	br	8052b8 <__alt_data_end+0xff8052b8>
  806944:	9080004c 	andi	r2,r18,1
  806948:	0039883a 	mov	fp,zero
  80694c:	10000426 	beq	r2,zero,806960 <___vfprintf_internal_r+0x1ddc>
  806950:	00800c04 	movi	r2,48
  806954:	dc001dc4 	addi	r16,sp,119
  806958:	d8801dc5 	stb	r2,119(sp)
  80695c:	003b8006 	br	805760 <__alt_data_end+0xff805760>
  806960:	d8002e15 	stw	zero,184(sp)
  806964:	dc001e04 	addi	r16,sp,120
  806968:	003a4d06 	br	8052a0 <__alt_data_end+0xff8052a0>
  80696c:	8c7fff84 	addi	r17,r17,-2
  806970:	b5bfffc4 	addi	r22,r22,-1
  806974:	dd802615 	stw	r22,152(sp)
  806978:	dc4022c5 	stb	r17,139(sp)
  80697c:	b000bf16 	blt	r22,zero,806c7c <___vfprintf_internal_r+0x20f8>
  806980:	00800ac4 	movi	r2,43
  806984:	d8802305 	stb	r2,140(sp)
  806988:	00800244 	movi	r2,9
  80698c:	15807016 	blt	r2,r22,806b50 <___vfprintf_internal_r+0x1fcc>
  806990:	00800c04 	movi	r2,48
  806994:	b5800c04 	addi	r22,r22,48
  806998:	d8802345 	stb	r2,141(sp)
  80699c:	dd802385 	stb	r22,142(sp)
  8069a0:	d88023c4 	addi	r2,sp,143
  8069a4:	df0022c4 	addi	fp,sp,139
  8069a8:	d8c03317 	ldw	r3,204(sp)
  8069ac:	1739c83a 	sub	fp,r2,fp
  8069b0:	d9003317 	ldw	r4,204(sp)
  8069b4:	e0c7883a 	add	r3,fp,r3
  8069b8:	df003a15 	stw	fp,232(sp)
  8069bc:	d8c02e15 	stw	r3,184(sp)
  8069c0:	00800044 	movi	r2,1
  8069c4:	1100b30e 	bge	r2,r4,806c94 <___vfprintf_internal_r+0x2110>
  8069c8:	d8c02e17 	ldw	r3,184(sp)
  8069cc:	18c00044 	addi	r3,r3,1
  8069d0:	d8c02e15 	stw	r3,184(sp)
  8069d4:	1805883a 	mov	r2,r3
  8069d8:	1800ac16 	blt	r3,zero,806c8c <___vfprintf_internal_r+0x2108>
  8069dc:	d8003215 	stw	zero,200(sp)
  8069e0:	003e5d06 	br	806358 <__alt_data_end+0xff806358>
  8069e4:	d9002c17 	ldw	r4,176(sp)
  8069e8:	d9801e04 	addi	r6,sp,120
  8069ec:	b80b883a 	mov	r5,r23
  8069f0:	080c1800 	call	80c180 <__sprint_r>
  8069f4:	1039651e 	bne	r2,zero,804f8c <__alt_data_end+0xff804f8c>
  8069f8:	dc402617 	ldw	r17,152(sp)
  8069fc:	d8c02017 	ldw	r3,128(sp)
  806a00:	d8801f17 	ldw	r2,124(sp)
  806a04:	da000404 	addi	r8,sp,16
  806a08:	003ed606 	br	806564 <__alt_data_end+0xff806564>
  806a0c:	582b883a 	mov	r21,r11
  806a10:	d8002915 	stw	zero,164(sp)
  806a14:	0038bd06 	br	804d0c <__alt_data_end+0xff804d0c>
  806a18:	d8802917 	ldw	r2,164(sp)
  806a1c:	103e071e 	bne	r2,zero,80623c <__alt_data_end+0xff80623c>
  806a20:	dc002915 	stw	r16,164(sp)
  806a24:	003e0506 	br	80623c <__alt_data_end+0xff80623c>
  806a28:	d9002917 	ldw	r4,164(sp)
  806a2c:	20c00044 	addi	r3,r4,1
  806a30:	003e0f06 	br	806270 <__alt_data_end+0xff806270>
  806a34:	01400184 	movi	r5,6
  806a38:	d9402915 	stw	r5,164(sp)
  806a3c:	003dff06 	br	80623c <__alt_data_end+0xff80623c>
  806a40:	d8802104 	addi	r2,sp,132
  806a44:	d8800315 	stw	r2,12(sp)
  806a48:	d8802504 	addi	r2,sp,148
  806a4c:	d8800215 	stw	r2,8(sp)
  806a50:	d8802604 	addi	r2,sp,152
  806a54:	d8800115 	stw	r2,4(sp)
  806a58:	d8802917 	ldw	r2,164(sp)
  806a5c:	d9403617 	ldw	r5,216(sp)
  806a60:	d9002c17 	ldw	r4,176(sp)
  806a64:	d8800015 	stw	r2,0(sp)
  806a68:	01c000c4 	movi	r7,3
  806a6c:	980d883a 	mov	r6,r19
  806a70:	da003d15 	stw	r8,244(sp)
  806a74:	08071a80 	call	8071a8 <_dtoa_r>
  806a78:	d8c02917 	ldw	r3,164(sp)
  806a7c:	da003d17 	ldw	r8,244(sp)
  806a80:	1021883a 	mov	r16,r2
  806a84:	10f9883a 	add	fp,r2,r3
  806a88:	81000007 	ldb	r4,0(r16)
  806a8c:	00800c04 	movi	r2,48
  806a90:	20805e26 	beq	r4,r2,806c0c <___vfprintf_internal_r+0x2088>
  806a94:	d8c02617 	ldw	r3,152(sp)
  806a98:	e0f9883a 	add	fp,fp,r3
  806a9c:	003e0a06 	br	8062c8 <__alt_data_end+0xff8062c8>
  806aa0:	00c00b44 	movi	r3,45
  806aa4:	24e0003c 	xorhi	r19,r4,32768
  806aa8:	d8c02a05 	stb	r3,168(sp)
  806aac:	003de906 	br	806254 <__alt_data_end+0xff806254>
  806ab0:	d8c03217 	ldw	r3,200(sp)
  806ab4:	00c07a0e 	bge	zero,r3,806ca0 <___vfprintf_internal_r+0x211c>
  806ab8:	00800044 	movi	r2,1
  806abc:	d9003317 	ldw	r4,204(sp)
  806ac0:	1105883a 	add	r2,r2,r4
  806ac4:	d8802e15 	stw	r2,184(sp)
  806ac8:	10004e16 	blt	r2,zero,806c04 <___vfprintf_internal_r+0x2080>
  806acc:	044019c4 	movi	r17,103
  806ad0:	003e2106 	br	806358 <__alt_data_end+0xff806358>
  806ad4:	d9002917 	ldw	r4,164(sp)
  806ad8:	d8802104 	addi	r2,sp,132
  806adc:	d8800315 	stw	r2,12(sp)
  806ae0:	d9000015 	stw	r4,0(sp)
  806ae4:	d8802504 	addi	r2,sp,148
  806ae8:	d9403617 	ldw	r5,216(sp)
  806aec:	d9002c17 	ldw	r4,176(sp)
  806af0:	d8800215 	stw	r2,8(sp)
  806af4:	d8802604 	addi	r2,sp,152
  806af8:	d8800115 	stw	r2,4(sp)
  806afc:	01c000c4 	movi	r7,3
  806b00:	980d883a 	mov	r6,r19
  806b04:	da003d15 	stw	r8,244(sp)
  806b08:	08071a80 	call	8071a8 <_dtoa_r>
  806b0c:	d8c02917 	ldw	r3,164(sp)
  806b10:	da003d17 	ldw	r8,244(sp)
  806b14:	1021883a 	mov	r16,r2
  806b18:	00801184 	movi	r2,70
  806b1c:	80f9883a 	add	fp,r16,r3
  806b20:	88bfd926 	beq	r17,r2,806a88 <__alt_data_end+0xff806a88>
  806b24:	003de806 	br	8062c8 <__alt_data_end+0xff8062c8>
  806b28:	d9002917 	ldw	r4,164(sp)
  806b2c:	00c04d0e 	bge	zero,r3,806c64 <___vfprintf_internal_r+0x20e0>
  806b30:	2000441e 	bne	r4,zero,806c44 <___vfprintf_internal_r+0x20c0>
  806b34:	9480004c 	andi	r18,r18,1
  806b38:	9000421e 	bne	r18,zero,806c44 <___vfprintf_internal_r+0x20c0>
  806b3c:	1805883a 	mov	r2,r3
  806b40:	18007016 	blt	r3,zero,806d04 <___vfprintf_internal_r+0x2180>
  806b44:	d8c03217 	ldw	r3,200(sp)
  806b48:	d8c02e15 	stw	r3,184(sp)
  806b4c:	003e0206 	br	806358 <__alt_data_end+0xff806358>
  806b50:	df0022c4 	addi	fp,sp,139
  806b54:	dc002915 	stw	r16,164(sp)
  806b58:	4027883a 	mov	r19,r8
  806b5c:	e021883a 	mov	r16,fp
  806b60:	b009883a 	mov	r4,r22
  806b64:	01400284 	movi	r5,10
  806b68:	080284c0 	call	80284c <__modsi3>
  806b6c:	10800c04 	addi	r2,r2,48
  806b70:	843fffc4 	addi	r16,r16,-1
  806b74:	b009883a 	mov	r4,r22
  806b78:	01400284 	movi	r5,10
  806b7c:	80800005 	stb	r2,0(r16)
  806b80:	08027c80 	call	8027c8 <__divsi3>
  806b84:	102d883a 	mov	r22,r2
  806b88:	00800244 	movi	r2,9
  806b8c:	15bff416 	blt	r2,r22,806b60 <__alt_data_end+0xff806b60>
  806b90:	9811883a 	mov	r8,r19
  806b94:	b0800c04 	addi	r2,r22,48
  806b98:	8027883a 	mov	r19,r16
  806b9c:	997fffc4 	addi	r5,r19,-1
  806ba0:	98bfffc5 	stb	r2,-1(r19)
  806ba4:	dc002917 	ldw	r16,164(sp)
  806ba8:	2f006a2e 	bgeu	r5,fp,806d54 <___vfprintf_internal_r+0x21d0>
  806bac:	d9c02384 	addi	r7,sp,142
  806bb0:	3ccfc83a 	sub	r7,r7,r19
  806bb4:	d9002344 	addi	r4,sp,141
  806bb8:	e1cf883a 	add	r7,fp,r7
  806bbc:	00000106 	br	806bc4 <___vfprintf_internal_r+0x2040>
  806bc0:	28800003 	ldbu	r2,0(r5)
  806bc4:	20800005 	stb	r2,0(r4)
  806bc8:	21000044 	addi	r4,r4,1
  806bcc:	29400044 	addi	r5,r5,1
  806bd0:	393ffb1e 	bne	r7,r4,806bc0 <__alt_data_end+0xff806bc0>
  806bd4:	d8802304 	addi	r2,sp,140
  806bd8:	14c5c83a 	sub	r2,r2,r19
  806bdc:	d8c02344 	addi	r3,sp,141
  806be0:	1885883a 	add	r2,r3,r2
  806be4:	003f7006 	br	8069a8 <__alt_data_end+0xff8069a8>
  806be8:	0005883a 	mov	r2,zero
  806bec:	003f0f06 	br	80682c <__alt_data_end+0xff80682c>
  806bf0:	d8c03217 	ldw	r3,200(sp)
  806bf4:	18c00044 	addi	r3,r3,1
  806bf8:	d8c02e15 	stw	r3,184(sp)
  806bfc:	1805883a 	mov	r2,r3
  806c00:	183fb20e 	bge	r3,zero,806acc <__alt_data_end+0xff806acc>
  806c04:	0005883a 	mov	r2,zero
  806c08:	003fb006 	br	806acc <__alt_data_end+0xff806acc>
  806c0c:	d9003617 	ldw	r4,216(sp)
  806c10:	000d883a 	mov	r6,zero
  806c14:	000f883a 	mov	r7,zero
  806c18:	980b883a 	mov	r5,r19
  806c1c:	d8c03c15 	stw	r3,240(sp)
  806c20:	da003d15 	stw	r8,244(sp)
  806c24:	08033bc0 	call	8033bc <__eqdf2>
  806c28:	d8c03c17 	ldw	r3,240(sp)
  806c2c:	da003d17 	ldw	r8,244(sp)
  806c30:	103f9826 	beq	r2,zero,806a94 <__alt_data_end+0xff806a94>
  806c34:	00800044 	movi	r2,1
  806c38:	10c7c83a 	sub	r3,r2,r3
  806c3c:	d8c02615 	stw	r3,152(sp)
  806c40:	003f9506 	br	806a98 <__alt_data_end+0xff806a98>
  806c44:	d9002917 	ldw	r4,164(sp)
  806c48:	d8c03217 	ldw	r3,200(sp)
  806c4c:	20800044 	addi	r2,r4,1
  806c50:	1885883a 	add	r2,r3,r2
  806c54:	d8802e15 	stw	r2,184(sp)
  806c58:	103dbf0e 	bge	r2,zero,806358 <__alt_data_end+0xff806358>
  806c5c:	0005883a 	mov	r2,zero
  806c60:	003dbd06 	br	806358 <__alt_data_end+0xff806358>
  806c64:	2000211e 	bne	r4,zero,806cec <___vfprintf_internal_r+0x2168>
  806c68:	9480004c 	andi	r18,r18,1
  806c6c:	90001f1e 	bne	r18,zero,806cec <___vfprintf_internal_r+0x2168>
  806c70:	00800044 	movi	r2,1
  806c74:	d8802e15 	stw	r2,184(sp)
  806c78:	003db706 	br	806358 <__alt_data_end+0xff806358>
  806c7c:	00800b44 	movi	r2,45
  806c80:	05adc83a 	sub	r22,zero,r22
  806c84:	d8802305 	stb	r2,140(sp)
  806c88:	003f3f06 	br	806988 <__alt_data_end+0xff806988>
  806c8c:	0005883a 	mov	r2,zero
  806c90:	003f5206 	br	8069dc <__alt_data_end+0xff8069dc>
  806c94:	90a4703a 	and	r18,r18,r2
  806c98:	903f4e26 	beq	r18,zero,8069d4 <__alt_data_end+0xff8069d4>
  806c9c:	003f4a06 	br	8069c8 <__alt_data_end+0xff8069c8>
  806ca0:	00800084 	movi	r2,2
  806ca4:	10c5c83a 	sub	r2,r2,r3
  806ca8:	003f8406 	br	806abc <__alt_data_end+0xff806abc>
  806cac:	d8802d17 	ldw	r2,180(sp)
  806cb0:	d9002d17 	ldw	r4,180(sp)
  806cb4:	ac400043 	ldbu	r17,1(r21)
  806cb8:	10800017 	ldw	r2,0(r2)
  806cbc:	582b883a 	mov	r21,r11
  806cc0:	d8802915 	stw	r2,164(sp)
  806cc4:	20800104 	addi	r2,r4,4
  806cc8:	d9002917 	ldw	r4,164(sp)
  806ccc:	d8802d15 	stw	r2,180(sp)
  806cd0:	203e7a0e 	bge	r4,zero,8066bc <__alt_data_end+0xff8066bc>
  806cd4:	8c403fcc 	andi	r17,r17,255
  806cd8:	00bfffc4 	movi	r2,-1
  806cdc:	8c40201c 	xori	r17,r17,128
  806ce0:	d8802915 	stw	r2,164(sp)
  806ce4:	8c7fe004 	addi	r17,r17,-128
  806ce8:	00380706 	br	804d08 <__alt_data_end+0xff804d08>
  806cec:	d8c02917 	ldw	r3,164(sp)
  806cf0:	18c00084 	addi	r3,r3,2
  806cf4:	d8c02e15 	stw	r3,184(sp)
  806cf8:	1805883a 	mov	r2,r3
  806cfc:	183d960e 	bge	r3,zero,806358 <__alt_data_end+0xff806358>
  806d00:	003fd606 	br	806c5c <__alt_data_end+0xff806c5c>
  806d04:	0005883a 	mov	r2,zero
  806d08:	003f8e06 	br	806b44 <__alt_data_end+0xff806b44>
  806d0c:	9080004c 	andi	r2,r18,1
  806d10:	103f811e 	bne	r2,zero,806b18 <__alt_data_end+0xff806b18>
  806d14:	d8802117 	ldw	r2,132(sp)
  806d18:	1405c83a 	sub	r2,r2,r16
  806d1c:	d8803315 	stw	r2,204(sp)
  806d20:	b47ef326 	beq	r22,r17,8068f0 <__alt_data_end+0xff8068f0>
  806d24:	dd802617 	ldw	r22,152(sp)
  806d28:	003f1106 	br	806970 <__alt_data_end+0xff806970>
  806d2c:	d9c02785 	stb	r7,158(sp)
  806d30:	00390406 	br	805144 <__alt_data_end+0xff805144>
  806d34:	d9c02785 	stb	r7,158(sp)
  806d38:	0038d306 	br	805088 <__alt_data_end+0xff805088>
  806d3c:	d9c02785 	stb	r7,158(sp)
  806d40:	003a6106 	br	8056c8 <__alt_data_end+0xff8056c8>
  806d44:	d9c02785 	stb	r7,158(sp)
  806d48:	003af806 	br	80592c <__alt_data_end+0xff80592c>
  806d4c:	0005883a 	mov	r2,zero
  806d50:	003d7e06 	br	80634c <__alt_data_end+0xff80634c>
  806d54:	d8802344 	addi	r2,sp,141
  806d58:	003f1306 	br	8069a8 <__alt_data_end+0xff8069a8>
  806d5c:	d9c02785 	stb	r7,158(sp)
  806d60:	00392306 	br	8051f0 <__alt_data_end+0xff8051f0>
  806d64:	d9c02785 	stb	r7,158(sp)
  806d68:	003aa906 	br	805810 <__alt_data_end+0xff805810>
  806d6c:	d9c02785 	stb	r7,158(sp)
  806d70:	003a3d06 	br	805668 <__alt_data_end+0xff805668>
  806d74:	d9c02785 	stb	r7,158(sp)
  806d78:	003aca06 	br	8058a4 <__alt_data_end+0xff8058a4>

00806d7c <__vfprintf_internal>:
  806d7c:	00802074 	movhi	r2,129
  806d80:	108f5204 	addi	r2,r2,15688
  806d84:	300f883a 	mov	r7,r6
  806d88:	280d883a 	mov	r6,r5
  806d8c:	200b883a 	mov	r5,r4
  806d90:	11000017 	ldw	r4,0(r2)
  806d94:	0804b841 	jmpi	804b84 <___vfprintf_internal_r>

00806d98 <__sbprintf>:
  806d98:	2880030b 	ldhu	r2,12(r5)
  806d9c:	2ac01917 	ldw	r11,100(r5)
  806da0:	2a80038b 	ldhu	r10,14(r5)
  806da4:	2a400717 	ldw	r9,28(r5)
  806da8:	2a000917 	ldw	r8,36(r5)
  806dac:	defee204 	addi	sp,sp,-1144
  806db0:	00c10004 	movi	r3,1024
  806db4:	dc011a15 	stw	r16,1128(sp)
  806db8:	10bfff4c 	andi	r2,r2,65533
  806dbc:	2821883a 	mov	r16,r5
  806dc0:	d8cb883a 	add	r5,sp,r3
  806dc4:	dc811c15 	stw	r18,1136(sp)
  806dc8:	dc411b15 	stw	r17,1132(sp)
  806dcc:	dfc11d15 	stw	ra,1140(sp)
  806dd0:	2025883a 	mov	r18,r4
  806dd4:	d881030d 	sth	r2,1036(sp)
  806dd8:	dac11915 	stw	r11,1124(sp)
  806ddc:	da81038d 	sth	r10,1038(sp)
  806de0:	da410715 	stw	r9,1052(sp)
  806de4:	da010915 	stw	r8,1060(sp)
  806de8:	dec10015 	stw	sp,1024(sp)
  806dec:	dec10415 	stw	sp,1040(sp)
  806df0:	d8c10215 	stw	r3,1032(sp)
  806df4:	d8c10515 	stw	r3,1044(sp)
  806df8:	d8010615 	stw	zero,1048(sp)
  806dfc:	0804b840 	call	804b84 <___vfprintf_internal_r>
  806e00:	1023883a 	mov	r17,r2
  806e04:	10000416 	blt	r2,zero,806e18 <__sbprintf+0x80>
  806e08:	d9410004 	addi	r5,sp,1024
  806e0c:	9009883a 	mov	r4,r18
  806e10:	0808a4c0 	call	808a4c <_fflush_r>
  806e14:	10000d1e 	bne	r2,zero,806e4c <__sbprintf+0xb4>
  806e18:	d881030b 	ldhu	r2,1036(sp)
  806e1c:	1080100c 	andi	r2,r2,64
  806e20:	10000326 	beq	r2,zero,806e30 <__sbprintf+0x98>
  806e24:	8080030b 	ldhu	r2,12(r16)
  806e28:	10801014 	ori	r2,r2,64
  806e2c:	8080030d 	sth	r2,12(r16)
  806e30:	8805883a 	mov	r2,r17
  806e34:	dfc11d17 	ldw	ra,1140(sp)
  806e38:	dc811c17 	ldw	r18,1136(sp)
  806e3c:	dc411b17 	ldw	r17,1132(sp)
  806e40:	dc011a17 	ldw	r16,1128(sp)
  806e44:	dec11e04 	addi	sp,sp,1144
  806e48:	f800283a 	ret
  806e4c:	047fffc4 	movi	r17,-1
  806e50:	003ff106 	br	806e18 <__alt_data_end+0xff806e18>

00806e54 <__swsetup_r>:
  806e54:	00802074 	movhi	r2,129
  806e58:	defffd04 	addi	sp,sp,-12
  806e5c:	108f5204 	addi	r2,r2,15688
  806e60:	dc400115 	stw	r17,4(sp)
  806e64:	2023883a 	mov	r17,r4
  806e68:	11000017 	ldw	r4,0(r2)
  806e6c:	dc000015 	stw	r16,0(sp)
  806e70:	dfc00215 	stw	ra,8(sp)
  806e74:	2821883a 	mov	r16,r5
  806e78:	20000226 	beq	r4,zero,806e84 <__swsetup_r+0x30>
  806e7c:	20800e17 	ldw	r2,56(r4)
  806e80:	10003126 	beq	r2,zero,806f48 <__swsetup_r+0xf4>
  806e84:	8080030b 	ldhu	r2,12(r16)
  806e88:	10c0020c 	andi	r3,r2,8
  806e8c:	1009883a 	mov	r4,r2
  806e90:	18000f26 	beq	r3,zero,806ed0 <__swsetup_r+0x7c>
  806e94:	80c00417 	ldw	r3,16(r16)
  806e98:	18001526 	beq	r3,zero,806ef0 <__swsetup_r+0x9c>
  806e9c:	1100004c 	andi	r4,r2,1
  806ea0:	20001c1e 	bne	r4,zero,806f14 <__swsetup_r+0xc0>
  806ea4:	1080008c 	andi	r2,r2,2
  806ea8:	1000291e 	bne	r2,zero,806f50 <__swsetup_r+0xfc>
  806eac:	80800517 	ldw	r2,20(r16)
  806eb0:	80800215 	stw	r2,8(r16)
  806eb4:	18001c26 	beq	r3,zero,806f28 <__swsetup_r+0xd4>
  806eb8:	0005883a 	mov	r2,zero
  806ebc:	dfc00217 	ldw	ra,8(sp)
  806ec0:	dc400117 	ldw	r17,4(sp)
  806ec4:	dc000017 	ldw	r16,0(sp)
  806ec8:	dec00304 	addi	sp,sp,12
  806ecc:	f800283a 	ret
  806ed0:	2080040c 	andi	r2,r4,16
  806ed4:	10002e26 	beq	r2,zero,806f90 <__swsetup_r+0x13c>
  806ed8:	2080010c 	andi	r2,r4,4
  806edc:	10001e1e 	bne	r2,zero,806f58 <__swsetup_r+0x104>
  806ee0:	80c00417 	ldw	r3,16(r16)
  806ee4:	20800214 	ori	r2,r4,8
  806ee8:	8080030d 	sth	r2,12(r16)
  806eec:	183feb1e 	bne	r3,zero,806e9c <__alt_data_end+0xff806e9c>
  806ef0:	1100a00c 	andi	r4,r2,640
  806ef4:	01408004 	movi	r5,512
  806ef8:	217fe826 	beq	r4,r5,806e9c <__alt_data_end+0xff806e9c>
  806efc:	800b883a 	mov	r5,r16
  806f00:	8809883a 	mov	r4,r17
  806f04:	08099cc0 	call	8099cc <__smakebuf_r>
  806f08:	8080030b 	ldhu	r2,12(r16)
  806f0c:	80c00417 	ldw	r3,16(r16)
  806f10:	003fe206 	br	806e9c <__alt_data_end+0xff806e9c>
  806f14:	80800517 	ldw	r2,20(r16)
  806f18:	80000215 	stw	zero,8(r16)
  806f1c:	0085c83a 	sub	r2,zero,r2
  806f20:	80800615 	stw	r2,24(r16)
  806f24:	183fe41e 	bne	r3,zero,806eb8 <__alt_data_end+0xff806eb8>
  806f28:	80c0030b 	ldhu	r3,12(r16)
  806f2c:	0005883a 	mov	r2,zero
  806f30:	1900200c 	andi	r4,r3,128
  806f34:	203fe126 	beq	r4,zero,806ebc <__alt_data_end+0xff806ebc>
  806f38:	18c01014 	ori	r3,r3,64
  806f3c:	80c0030d 	sth	r3,12(r16)
  806f40:	00bfffc4 	movi	r2,-1
  806f44:	003fdd06 	br	806ebc <__alt_data_end+0xff806ebc>
  806f48:	0808e280 	call	808e28 <__sinit>
  806f4c:	003fcd06 	br	806e84 <__alt_data_end+0xff806e84>
  806f50:	0005883a 	mov	r2,zero
  806f54:	003fd606 	br	806eb0 <__alt_data_end+0xff806eb0>
  806f58:	81400c17 	ldw	r5,48(r16)
  806f5c:	28000626 	beq	r5,zero,806f78 <__swsetup_r+0x124>
  806f60:	80801004 	addi	r2,r16,64
  806f64:	28800326 	beq	r5,r2,806f74 <__swsetup_r+0x120>
  806f68:	8809883a 	mov	r4,r17
  806f6c:	0808f9c0 	call	808f9c <_free_r>
  806f70:	8100030b 	ldhu	r4,12(r16)
  806f74:	80000c15 	stw	zero,48(r16)
  806f78:	80c00417 	ldw	r3,16(r16)
  806f7c:	00bff6c4 	movi	r2,-37
  806f80:	1108703a 	and	r4,r2,r4
  806f84:	80000115 	stw	zero,4(r16)
  806f88:	80c00015 	stw	r3,0(r16)
  806f8c:	003fd506 	br	806ee4 <__alt_data_end+0xff806ee4>
  806f90:	00800244 	movi	r2,9
  806f94:	88800015 	stw	r2,0(r17)
  806f98:	20801014 	ori	r2,r4,64
  806f9c:	8080030d 	sth	r2,12(r16)
  806fa0:	00bfffc4 	movi	r2,-1
  806fa4:	003fc506 	br	806ebc <__alt_data_end+0xff806ebc>

00806fa8 <quorem>:
  806fa8:	defff704 	addi	sp,sp,-36
  806fac:	dc800215 	stw	r18,8(sp)
  806fb0:	20800417 	ldw	r2,16(r4)
  806fb4:	2c800417 	ldw	r18,16(r5)
  806fb8:	dfc00815 	stw	ra,32(sp)
  806fbc:	ddc00715 	stw	r23,28(sp)
  806fc0:	dd800615 	stw	r22,24(sp)
  806fc4:	dd400515 	stw	r21,20(sp)
  806fc8:	dd000415 	stw	r20,16(sp)
  806fcc:	dcc00315 	stw	r19,12(sp)
  806fd0:	dc400115 	stw	r17,4(sp)
  806fd4:	dc000015 	stw	r16,0(sp)
  806fd8:	14807116 	blt	r2,r18,8071a0 <quorem+0x1f8>
  806fdc:	94bfffc4 	addi	r18,r18,-1
  806fe0:	94ad883a 	add	r22,r18,r18
  806fe4:	b5ad883a 	add	r22,r22,r22
  806fe8:	2c400504 	addi	r17,r5,20
  806fec:	8da9883a 	add	r20,r17,r22
  806ff0:	25400504 	addi	r21,r4,20
  806ff4:	282f883a 	mov	r23,r5
  806ff8:	adad883a 	add	r22,r21,r22
  806ffc:	a1400017 	ldw	r5,0(r20)
  807000:	2021883a 	mov	r16,r4
  807004:	b1000017 	ldw	r4,0(r22)
  807008:	29400044 	addi	r5,r5,1
  80700c:	08028c00 	call	8028c0 <__udivsi3>
  807010:	1027883a 	mov	r19,r2
  807014:	10002c26 	beq	r2,zero,8070c8 <quorem+0x120>
  807018:	a813883a 	mov	r9,r21
  80701c:	880b883a 	mov	r5,r17
  807020:	0009883a 	mov	r4,zero
  807024:	000d883a 	mov	r6,zero
  807028:	2a000017 	ldw	r8,0(r5)
  80702c:	49c00017 	ldw	r7,0(r9)
  807030:	29400104 	addi	r5,r5,4
  807034:	40bfffcc 	andi	r2,r8,65535
  807038:	14c5383a 	mul	r2,r2,r19
  80703c:	4010d43a 	srli	r8,r8,16
  807040:	38ffffcc 	andi	r3,r7,65535
  807044:	1105883a 	add	r2,r2,r4
  807048:	1008d43a 	srli	r4,r2,16
  80704c:	44d1383a 	mul	r8,r8,r19
  807050:	198d883a 	add	r6,r3,r6
  807054:	10ffffcc 	andi	r3,r2,65535
  807058:	30c7c83a 	sub	r3,r6,r3
  80705c:	380ed43a 	srli	r7,r7,16
  807060:	4105883a 	add	r2,r8,r4
  807064:	180dd43a 	srai	r6,r3,16
  807068:	113fffcc 	andi	r4,r2,65535
  80706c:	390fc83a 	sub	r7,r7,r4
  807070:	398d883a 	add	r6,r7,r6
  807074:	300e943a 	slli	r7,r6,16
  807078:	18ffffcc 	andi	r3,r3,65535
  80707c:	1008d43a 	srli	r4,r2,16
  807080:	38ceb03a 	or	r7,r7,r3
  807084:	49c00015 	stw	r7,0(r9)
  807088:	300dd43a 	srai	r6,r6,16
  80708c:	4a400104 	addi	r9,r9,4
  807090:	a17fe52e 	bgeu	r20,r5,807028 <__alt_data_end+0xff807028>
  807094:	b0800017 	ldw	r2,0(r22)
  807098:	10000b1e 	bne	r2,zero,8070c8 <quorem+0x120>
  80709c:	b0bfff04 	addi	r2,r22,-4
  8070a0:	a880082e 	bgeu	r21,r2,8070c4 <quorem+0x11c>
  8070a4:	b0ffff17 	ldw	r3,-4(r22)
  8070a8:	18000326 	beq	r3,zero,8070b8 <quorem+0x110>
  8070ac:	00000506 	br	8070c4 <quorem+0x11c>
  8070b0:	10c00017 	ldw	r3,0(r2)
  8070b4:	1800031e 	bne	r3,zero,8070c4 <quorem+0x11c>
  8070b8:	10bfff04 	addi	r2,r2,-4
  8070bc:	94bfffc4 	addi	r18,r18,-1
  8070c0:	a8bffb36 	bltu	r21,r2,8070b0 <__alt_data_end+0xff8070b0>
  8070c4:	84800415 	stw	r18,16(r16)
  8070c8:	b80b883a 	mov	r5,r23
  8070cc:	8009883a 	mov	r4,r16
  8070d0:	080b10c0 	call	80b10c <__mcmp>
  8070d4:	10002616 	blt	r2,zero,807170 <quorem+0x1c8>
  8070d8:	9cc00044 	addi	r19,r19,1
  8070dc:	a805883a 	mov	r2,r21
  8070e0:	000b883a 	mov	r5,zero
  8070e4:	11000017 	ldw	r4,0(r2)
  8070e8:	89800017 	ldw	r6,0(r17)
  8070ec:	10800104 	addi	r2,r2,4
  8070f0:	20ffffcc 	andi	r3,r4,65535
  8070f4:	194b883a 	add	r5,r3,r5
  8070f8:	30ffffcc 	andi	r3,r6,65535
  8070fc:	28c7c83a 	sub	r3,r5,r3
  807100:	300cd43a 	srli	r6,r6,16
  807104:	2008d43a 	srli	r4,r4,16
  807108:	180bd43a 	srai	r5,r3,16
  80710c:	18ffffcc 	andi	r3,r3,65535
  807110:	2189c83a 	sub	r4,r4,r6
  807114:	2149883a 	add	r4,r4,r5
  807118:	200c943a 	slli	r6,r4,16
  80711c:	8c400104 	addi	r17,r17,4
  807120:	200bd43a 	srai	r5,r4,16
  807124:	30c6b03a 	or	r3,r6,r3
  807128:	10ffff15 	stw	r3,-4(r2)
  80712c:	a47fed2e 	bgeu	r20,r17,8070e4 <__alt_data_end+0xff8070e4>
  807130:	9485883a 	add	r2,r18,r18
  807134:	1085883a 	add	r2,r2,r2
  807138:	a887883a 	add	r3,r21,r2
  80713c:	18800017 	ldw	r2,0(r3)
  807140:	10000b1e 	bne	r2,zero,807170 <quorem+0x1c8>
  807144:	18bfff04 	addi	r2,r3,-4
  807148:	a880082e 	bgeu	r21,r2,80716c <quorem+0x1c4>
  80714c:	18ffff17 	ldw	r3,-4(r3)
  807150:	18000326 	beq	r3,zero,807160 <quorem+0x1b8>
  807154:	00000506 	br	80716c <quorem+0x1c4>
  807158:	10c00017 	ldw	r3,0(r2)
  80715c:	1800031e 	bne	r3,zero,80716c <quorem+0x1c4>
  807160:	10bfff04 	addi	r2,r2,-4
  807164:	94bfffc4 	addi	r18,r18,-1
  807168:	a8bffb36 	bltu	r21,r2,807158 <__alt_data_end+0xff807158>
  80716c:	84800415 	stw	r18,16(r16)
  807170:	9805883a 	mov	r2,r19
  807174:	dfc00817 	ldw	ra,32(sp)
  807178:	ddc00717 	ldw	r23,28(sp)
  80717c:	dd800617 	ldw	r22,24(sp)
  807180:	dd400517 	ldw	r21,20(sp)
  807184:	dd000417 	ldw	r20,16(sp)
  807188:	dcc00317 	ldw	r19,12(sp)
  80718c:	dc800217 	ldw	r18,8(sp)
  807190:	dc400117 	ldw	r17,4(sp)
  807194:	dc000017 	ldw	r16,0(sp)
  807198:	dec00904 	addi	sp,sp,36
  80719c:	f800283a 	ret
  8071a0:	0005883a 	mov	r2,zero
  8071a4:	003ff306 	br	807174 <__alt_data_end+0xff807174>

008071a8 <_dtoa_r>:
  8071a8:	20801017 	ldw	r2,64(r4)
  8071ac:	deffde04 	addi	sp,sp,-136
  8071b0:	df002015 	stw	fp,128(sp)
  8071b4:	dcc01b15 	stw	r19,108(sp)
  8071b8:	dc801a15 	stw	r18,104(sp)
  8071bc:	dc401915 	stw	r17,100(sp)
  8071c0:	dc001815 	stw	r16,96(sp)
  8071c4:	dfc02115 	stw	ra,132(sp)
  8071c8:	ddc01f15 	stw	r23,124(sp)
  8071cc:	dd801e15 	stw	r22,120(sp)
  8071d0:	dd401d15 	stw	r21,116(sp)
  8071d4:	dd001c15 	stw	r20,112(sp)
  8071d8:	d9c00315 	stw	r7,12(sp)
  8071dc:	2039883a 	mov	fp,r4
  8071e0:	3023883a 	mov	r17,r6
  8071e4:	2825883a 	mov	r18,r5
  8071e8:	dc002417 	ldw	r16,144(sp)
  8071ec:	3027883a 	mov	r19,r6
  8071f0:	10000826 	beq	r2,zero,807214 <_dtoa_r+0x6c>
  8071f4:	21801117 	ldw	r6,68(r4)
  8071f8:	00c00044 	movi	r3,1
  8071fc:	100b883a 	mov	r5,r2
  807200:	1986983a 	sll	r3,r3,r6
  807204:	11800115 	stw	r6,4(r2)
  807208:	10c00215 	stw	r3,8(r2)
  80720c:	080a8ec0 	call	80a8ec <_Bfree>
  807210:	e0001015 	stw	zero,64(fp)
  807214:	88002e16 	blt	r17,zero,8072d0 <_dtoa_r+0x128>
  807218:	80000015 	stw	zero,0(r16)
  80721c:	889ffc2c 	andhi	r2,r17,32752
  807220:	00dffc34 	movhi	r3,32752
  807224:	10c01c26 	beq	r2,r3,807298 <_dtoa_r+0xf0>
  807228:	000d883a 	mov	r6,zero
  80722c:	000f883a 	mov	r7,zero
  807230:	9009883a 	mov	r4,r18
  807234:	980b883a 	mov	r5,r19
  807238:	08033bc0 	call	8033bc <__eqdf2>
  80723c:	10002b1e 	bne	r2,zero,8072ec <_dtoa_r+0x144>
  807240:	d9c02317 	ldw	r7,140(sp)
  807244:	00800044 	movi	r2,1
  807248:	38800015 	stw	r2,0(r7)
  80724c:	d8802517 	ldw	r2,148(sp)
  807250:	10019e26 	beq	r2,zero,8078cc <_dtoa_r+0x724>
  807254:	d8c02517 	ldw	r3,148(sp)
  807258:	00802074 	movhi	r2,129
  80725c:	10883944 	addi	r2,r2,8421
  807260:	18800015 	stw	r2,0(r3)
  807264:	10bfffc4 	addi	r2,r2,-1
  807268:	dfc02117 	ldw	ra,132(sp)
  80726c:	df002017 	ldw	fp,128(sp)
  807270:	ddc01f17 	ldw	r23,124(sp)
  807274:	dd801e17 	ldw	r22,120(sp)
  807278:	dd401d17 	ldw	r21,116(sp)
  80727c:	dd001c17 	ldw	r20,112(sp)
  807280:	dcc01b17 	ldw	r19,108(sp)
  807284:	dc801a17 	ldw	r18,104(sp)
  807288:	dc401917 	ldw	r17,100(sp)
  80728c:	dc001817 	ldw	r16,96(sp)
  807290:	dec02204 	addi	sp,sp,136
  807294:	f800283a 	ret
  807298:	d8c02317 	ldw	r3,140(sp)
  80729c:	0089c3c4 	movi	r2,9999
  8072a0:	18800015 	stw	r2,0(r3)
  8072a4:	90017726 	beq	r18,zero,807884 <_dtoa_r+0x6dc>
  8072a8:	00802074 	movhi	r2,129
  8072ac:	10884504 	addi	r2,r2,8468
  8072b0:	d9002517 	ldw	r4,148(sp)
  8072b4:	203fec26 	beq	r4,zero,807268 <__alt_data_end+0xff807268>
  8072b8:	10c000c7 	ldb	r3,3(r2)
  8072bc:	1801781e 	bne	r3,zero,8078a0 <_dtoa_r+0x6f8>
  8072c0:	10c000c4 	addi	r3,r2,3
  8072c4:	d9802517 	ldw	r6,148(sp)
  8072c8:	30c00015 	stw	r3,0(r6)
  8072cc:	003fe606 	br	807268 <__alt_data_end+0xff807268>
  8072d0:	04e00034 	movhi	r19,32768
  8072d4:	9cffffc4 	addi	r19,r19,-1
  8072d8:	00800044 	movi	r2,1
  8072dc:	8ce6703a 	and	r19,r17,r19
  8072e0:	80800015 	stw	r2,0(r16)
  8072e4:	9823883a 	mov	r17,r19
  8072e8:	003fcc06 	br	80721c <__alt_data_end+0xff80721c>
  8072ec:	d8800204 	addi	r2,sp,8
  8072f0:	d8800015 	stw	r2,0(sp)
  8072f4:	d9c00104 	addi	r7,sp,4
  8072f8:	900b883a 	mov	r5,r18
  8072fc:	980d883a 	mov	r6,r19
  807300:	e009883a 	mov	r4,fp
  807304:	8820d53a 	srli	r16,r17,20
  807308:	080b4d80 	call	80b4d8 <__d2b>
  80730c:	d8800915 	stw	r2,36(sp)
  807310:	8001651e 	bne	r16,zero,8078a8 <_dtoa_r+0x700>
  807314:	dd800217 	ldw	r22,8(sp)
  807318:	dc000117 	ldw	r16,4(sp)
  80731c:	00800804 	movi	r2,32
  807320:	b421883a 	add	r16,r22,r16
  807324:	80c10c84 	addi	r3,r16,1074
  807328:	10c2d10e 	bge	r2,r3,807e70 <_dtoa_r+0xcc8>
  80732c:	00801004 	movi	r2,64
  807330:	81010484 	addi	r4,r16,1042
  807334:	10c7c83a 	sub	r3,r2,r3
  807338:	9108d83a 	srl	r4,r18,r4
  80733c:	88e2983a 	sll	r17,r17,r3
  807340:	2448b03a 	or	r4,r4,r17
  807344:	080f48c0 	call	80f48c <__floatunsidf>
  807348:	017f8434 	movhi	r5,65040
  80734c:	01800044 	movi	r6,1
  807350:	1009883a 	mov	r4,r2
  807354:	194b883a 	add	r5,r3,r5
  807358:	843fffc4 	addi	r16,r16,-1
  80735c:	d9801115 	stw	r6,68(sp)
  807360:	000d883a 	mov	r6,zero
  807364:	01cffe34 	movhi	r7,16376
  807368:	0803c380 	call	803c38 <__subdf3>
  80736c:	0198dbf4 	movhi	r6,25455
  807370:	01cff4f4 	movhi	r7,16339
  807374:	3190d844 	addi	r6,r6,17249
  807378:	39e1e9c4 	addi	r7,r7,-30809
  80737c:	1009883a 	mov	r4,r2
  807380:	180b883a 	mov	r5,r3
  807384:	08035200 	call	803520 <__muldf3>
  807388:	01a2d874 	movhi	r6,35681
  80738c:	01cff1f4 	movhi	r7,16327
  807390:	31b22cc4 	addi	r6,r6,-14157
  807394:	39e28a04 	addi	r7,r7,-30168
  807398:	180b883a 	mov	r5,r3
  80739c:	1009883a 	mov	r4,r2
  8073a0:	0802b100 	call	802b10 <__adddf3>
  8073a4:	8009883a 	mov	r4,r16
  8073a8:	1029883a 	mov	r20,r2
  8073ac:	1823883a 	mov	r17,r3
  8073b0:	08045b40 	call	8045b4 <__floatsidf>
  8073b4:	019427f4 	movhi	r6,20639
  8073b8:	01cff4f4 	movhi	r7,16339
  8073bc:	319e7ec4 	addi	r6,r6,31227
  8073c0:	39d104c4 	addi	r7,r7,17427
  8073c4:	1009883a 	mov	r4,r2
  8073c8:	180b883a 	mov	r5,r3
  8073cc:	08035200 	call	803520 <__muldf3>
  8073d0:	100d883a 	mov	r6,r2
  8073d4:	180f883a 	mov	r7,r3
  8073d8:	a009883a 	mov	r4,r20
  8073dc:	880b883a 	mov	r5,r17
  8073e0:	0802b100 	call	802b10 <__adddf3>
  8073e4:	1009883a 	mov	r4,r2
  8073e8:	180b883a 	mov	r5,r3
  8073ec:	1029883a 	mov	r20,r2
  8073f0:	1823883a 	mov	r17,r3
  8073f4:	08045340 	call	804534 <__fixdfsi>
  8073f8:	000d883a 	mov	r6,zero
  8073fc:	000f883a 	mov	r7,zero
  807400:	a009883a 	mov	r4,r20
  807404:	880b883a 	mov	r5,r17
  807408:	d8800515 	stw	r2,20(sp)
  80740c:	080f3980 	call	80f398 <__ledf2>
  807410:	10028716 	blt	r2,zero,807e30 <_dtoa_r+0xc88>
  807414:	d8c00517 	ldw	r3,20(sp)
  807418:	00800584 	movi	r2,22
  80741c:	10c27536 	bltu	r2,r3,807df4 <_dtoa_r+0xc4c>
  807420:	180490fa 	slli	r2,r3,3
  807424:	00c02074 	movhi	r3,129
  807428:	18c86104 	addi	r3,r3,8580
  80742c:	1885883a 	add	r2,r3,r2
  807430:	11000017 	ldw	r4,0(r2)
  807434:	11400117 	ldw	r5,4(r2)
  807438:	900d883a 	mov	r6,r18
  80743c:	980f883a 	mov	r7,r19
  807440:	08034440 	call	803444 <__gedf2>
  807444:	00828d0e 	bge	zero,r2,807e7c <_dtoa_r+0xcd4>
  807448:	d9000517 	ldw	r4,20(sp)
  80744c:	d8000e15 	stw	zero,56(sp)
  807450:	213fffc4 	addi	r4,r4,-1
  807454:	d9000515 	stw	r4,20(sp)
  807458:	b42dc83a 	sub	r22,r22,r16
  80745c:	b5bfffc4 	addi	r22,r22,-1
  807460:	b0026f16 	blt	r22,zero,807e20 <_dtoa_r+0xc78>
  807464:	d8000815 	stw	zero,32(sp)
  807468:	d9c00517 	ldw	r7,20(sp)
  80746c:	38026416 	blt	r7,zero,807e00 <_dtoa_r+0xc58>
  807470:	b1ed883a 	add	r22,r22,r7
  807474:	d9c00d15 	stw	r7,52(sp)
  807478:	d8000a15 	stw	zero,40(sp)
  80747c:	d9800317 	ldw	r6,12(sp)
  807480:	00800244 	movi	r2,9
  807484:	11811436 	bltu	r2,r6,8078d8 <_dtoa_r+0x730>
  807488:	00800144 	movi	r2,5
  80748c:	1184e10e 	bge	r2,r6,808814 <_dtoa_r+0x166c>
  807490:	31bfff04 	addi	r6,r6,-4
  807494:	d9800315 	stw	r6,12(sp)
  807498:	0023883a 	mov	r17,zero
  80749c:	d9800317 	ldw	r6,12(sp)
  8074a0:	008000c4 	movi	r2,3
  8074a4:	30836726 	beq	r6,r2,808244 <_dtoa_r+0x109c>
  8074a8:	1183410e 	bge	r2,r6,8081b0 <_dtoa_r+0x1008>
  8074ac:	d9c00317 	ldw	r7,12(sp)
  8074b0:	00800104 	movi	r2,4
  8074b4:	38827c26 	beq	r7,r2,807ea8 <_dtoa_r+0xd00>
  8074b8:	00800144 	movi	r2,5
  8074bc:	3884c41e 	bne	r7,r2,8087d0 <_dtoa_r+0x1628>
  8074c0:	00800044 	movi	r2,1
  8074c4:	d8800b15 	stw	r2,44(sp)
  8074c8:	d8c00517 	ldw	r3,20(sp)
  8074cc:	d9002217 	ldw	r4,136(sp)
  8074d0:	1907883a 	add	r3,r3,r4
  8074d4:	19800044 	addi	r6,r3,1
  8074d8:	d8c00c15 	stw	r3,48(sp)
  8074dc:	d9800615 	stw	r6,24(sp)
  8074e0:	0183a40e 	bge	zero,r6,808374 <_dtoa_r+0x11cc>
  8074e4:	d9800617 	ldw	r6,24(sp)
  8074e8:	3021883a 	mov	r16,r6
  8074ec:	e0001115 	stw	zero,68(fp)
  8074f0:	008005c4 	movi	r2,23
  8074f4:	1184c92e 	bgeu	r2,r6,80881c <_dtoa_r+0x1674>
  8074f8:	00c00044 	movi	r3,1
  8074fc:	00800104 	movi	r2,4
  807500:	1085883a 	add	r2,r2,r2
  807504:	11000504 	addi	r4,r2,20
  807508:	180b883a 	mov	r5,r3
  80750c:	18c00044 	addi	r3,r3,1
  807510:	313ffb2e 	bgeu	r6,r4,807500 <__alt_data_end+0xff807500>
  807514:	e1401115 	stw	r5,68(fp)
  807518:	e009883a 	mov	r4,fp
  80751c:	080a8440 	call	80a844 <_Balloc>
  807520:	d8800715 	stw	r2,28(sp)
  807524:	e0801015 	stw	r2,64(fp)
  807528:	00800384 	movi	r2,14
  80752c:	1400f736 	bltu	r2,r16,80790c <_dtoa_r+0x764>
  807530:	8800f626 	beq	r17,zero,80790c <_dtoa_r+0x764>
  807534:	d9c00517 	ldw	r7,20(sp)
  807538:	01c39a0e 	bge	zero,r7,8083a4 <_dtoa_r+0x11fc>
  80753c:	388003cc 	andi	r2,r7,15
  807540:	100490fa 	slli	r2,r2,3
  807544:	382bd13a 	srai	r21,r7,4
  807548:	00c02074 	movhi	r3,129
  80754c:	18c86104 	addi	r3,r3,8580
  807550:	1885883a 	add	r2,r3,r2
  807554:	a8c0040c 	andi	r3,r21,16
  807558:	12400017 	ldw	r9,0(r2)
  80755c:	12000117 	ldw	r8,4(r2)
  807560:	18037926 	beq	r3,zero,808348 <_dtoa_r+0x11a0>
  807564:	00802074 	movhi	r2,129
  807568:	10885704 	addi	r2,r2,8540
  80756c:	11800817 	ldw	r6,32(r2)
  807570:	11c00917 	ldw	r7,36(r2)
  807574:	9009883a 	mov	r4,r18
  807578:	980b883a 	mov	r5,r19
  80757c:	da001715 	stw	r8,92(sp)
  807580:	da401615 	stw	r9,88(sp)
  807584:	080eab00 	call	80eab0 <__divdf3>
  807588:	da001717 	ldw	r8,92(sp)
  80758c:	da401617 	ldw	r9,88(sp)
  807590:	ad4003cc 	andi	r21,r21,15
  807594:	040000c4 	movi	r16,3
  807598:	1023883a 	mov	r17,r2
  80759c:	1829883a 	mov	r20,r3
  8075a0:	a8001126 	beq	r21,zero,8075e8 <_dtoa_r+0x440>
  8075a4:	05c02074 	movhi	r23,129
  8075a8:	bdc85704 	addi	r23,r23,8540
  8075ac:	4805883a 	mov	r2,r9
  8075b0:	4007883a 	mov	r3,r8
  8075b4:	a980004c 	andi	r6,r21,1
  8075b8:	1009883a 	mov	r4,r2
  8075bc:	a82bd07a 	srai	r21,r21,1
  8075c0:	180b883a 	mov	r5,r3
  8075c4:	30000426 	beq	r6,zero,8075d8 <_dtoa_r+0x430>
  8075c8:	b9800017 	ldw	r6,0(r23)
  8075cc:	b9c00117 	ldw	r7,4(r23)
  8075d0:	84000044 	addi	r16,r16,1
  8075d4:	08035200 	call	803520 <__muldf3>
  8075d8:	bdc00204 	addi	r23,r23,8
  8075dc:	a83ff51e 	bne	r21,zero,8075b4 <__alt_data_end+0xff8075b4>
  8075e0:	1013883a 	mov	r9,r2
  8075e4:	1811883a 	mov	r8,r3
  8075e8:	480d883a 	mov	r6,r9
  8075ec:	400f883a 	mov	r7,r8
  8075f0:	8809883a 	mov	r4,r17
  8075f4:	a00b883a 	mov	r5,r20
  8075f8:	080eab00 	call	80eab0 <__divdf3>
  8075fc:	d8800f15 	stw	r2,60(sp)
  807600:	d8c01015 	stw	r3,64(sp)
  807604:	d8c00e17 	ldw	r3,56(sp)
  807608:	18000626 	beq	r3,zero,807624 <_dtoa_r+0x47c>
  80760c:	d9000f17 	ldw	r4,60(sp)
  807610:	d9401017 	ldw	r5,64(sp)
  807614:	000d883a 	mov	r6,zero
  807618:	01cffc34 	movhi	r7,16368
  80761c:	080f3980 	call	80f398 <__ledf2>
  807620:	10040b16 	blt	r2,zero,808650 <_dtoa_r+0x14a8>
  807624:	8009883a 	mov	r4,r16
  807628:	08045b40 	call	8045b4 <__floatsidf>
  80762c:	d9800f17 	ldw	r6,60(sp)
  807630:	d9c01017 	ldw	r7,64(sp)
  807634:	1009883a 	mov	r4,r2
  807638:	180b883a 	mov	r5,r3
  80763c:	08035200 	call	803520 <__muldf3>
  807640:	000d883a 	mov	r6,zero
  807644:	01d00734 	movhi	r7,16412
  807648:	1009883a 	mov	r4,r2
  80764c:	180b883a 	mov	r5,r3
  807650:	0802b100 	call	802b10 <__adddf3>
  807654:	1021883a 	mov	r16,r2
  807658:	d8800617 	ldw	r2,24(sp)
  80765c:	047f3034 	movhi	r17,64704
  807660:	1c63883a 	add	r17,r3,r17
  807664:	10031826 	beq	r2,zero,8082c8 <_dtoa_r+0x1120>
  807668:	d8c00517 	ldw	r3,20(sp)
  80766c:	db000617 	ldw	r12,24(sp)
  807670:	d8c01315 	stw	r3,76(sp)
  807674:	d9000b17 	ldw	r4,44(sp)
  807678:	20038f26 	beq	r4,zero,8084b8 <_dtoa_r+0x1310>
  80767c:	60bfffc4 	addi	r2,r12,-1
  807680:	100490fa 	slli	r2,r2,3
  807684:	00c02074 	movhi	r3,129
  807688:	18c86104 	addi	r3,r3,8580
  80768c:	1885883a 	add	r2,r3,r2
  807690:	11800017 	ldw	r6,0(r2)
  807694:	11c00117 	ldw	r7,4(r2)
  807698:	d8800717 	ldw	r2,28(sp)
  80769c:	0009883a 	mov	r4,zero
  8076a0:	014ff834 	movhi	r5,16352
  8076a4:	db001615 	stw	r12,88(sp)
  8076a8:	15c00044 	addi	r23,r2,1
  8076ac:	080eab00 	call	80eab0 <__divdf3>
  8076b0:	800d883a 	mov	r6,r16
  8076b4:	880f883a 	mov	r7,r17
  8076b8:	1009883a 	mov	r4,r2
  8076bc:	180b883a 	mov	r5,r3
  8076c0:	0803c380 	call	803c38 <__subdf3>
  8076c4:	d9401017 	ldw	r5,64(sp)
  8076c8:	d9000f17 	ldw	r4,60(sp)
  8076cc:	102b883a 	mov	r21,r2
  8076d0:	d8c01215 	stw	r3,72(sp)
  8076d4:	08045340 	call	804534 <__fixdfsi>
  8076d8:	1009883a 	mov	r4,r2
  8076dc:	1029883a 	mov	r20,r2
  8076e0:	08045b40 	call	8045b4 <__floatsidf>
  8076e4:	d9000f17 	ldw	r4,60(sp)
  8076e8:	d9401017 	ldw	r5,64(sp)
  8076ec:	100d883a 	mov	r6,r2
  8076f0:	180f883a 	mov	r7,r3
  8076f4:	0803c380 	call	803c38 <__subdf3>
  8076f8:	1823883a 	mov	r17,r3
  8076fc:	d8c00717 	ldw	r3,28(sp)
  807700:	d9401217 	ldw	r5,72(sp)
  807704:	a2000c04 	addi	r8,r20,48
  807708:	1021883a 	mov	r16,r2
  80770c:	1a000005 	stb	r8,0(r3)
  807710:	800d883a 	mov	r6,r16
  807714:	880f883a 	mov	r7,r17
  807718:	a809883a 	mov	r4,r21
  80771c:	4029883a 	mov	r20,r8
  807720:	08034440 	call	803444 <__gedf2>
  807724:	00841d16 	blt	zero,r2,80879c <_dtoa_r+0x15f4>
  807728:	800d883a 	mov	r6,r16
  80772c:	880f883a 	mov	r7,r17
  807730:	0009883a 	mov	r4,zero
  807734:	014ffc34 	movhi	r5,16368
  807738:	0803c380 	call	803c38 <__subdf3>
  80773c:	d9401217 	ldw	r5,72(sp)
  807740:	100d883a 	mov	r6,r2
  807744:	180f883a 	mov	r7,r3
  807748:	a809883a 	mov	r4,r21
  80774c:	08034440 	call	803444 <__gedf2>
  807750:	db001617 	ldw	r12,88(sp)
  807754:	00840e16 	blt	zero,r2,808790 <_dtoa_r+0x15e8>
  807758:	00800044 	movi	r2,1
  80775c:	13006b0e 	bge	r2,r12,80790c <_dtoa_r+0x764>
  807760:	d9000717 	ldw	r4,28(sp)
  807764:	dd800f15 	stw	r22,60(sp)
  807768:	dcc01015 	stw	r19,64(sp)
  80776c:	2319883a 	add	r12,r4,r12
  807770:	dcc01217 	ldw	r19,72(sp)
  807774:	602d883a 	mov	r22,r12
  807778:	dc801215 	stw	r18,72(sp)
  80777c:	b825883a 	mov	r18,r23
  807780:	00000906 	br	8077a8 <_dtoa_r+0x600>
  807784:	0803c380 	call	803c38 <__subdf3>
  807788:	a80d883a 	mov	r6,r21
  80778c:	980f883a 	mov	r7,r19
  807790:	1009883a 	mov	r4,r2
  807794:	180b883a 	mov	r5,r3
  807798:	080f3980 	call	80f398 <__ledf2>
  80779c:	1003e816 	blt	r2,zero,808740 <_dtoa_r+0x1598>
  8077a0:	b825883a 	mov	r18,r23
  8077a4:	bd83e926 	beq	r23,r22,80874c <_dtoa_r+0x15a4>
  8077a8:	a809883a 	mov	r4,r21
  8077ac:	980b883a 	mov	r5,r19
  8077b0:	000d883a 	mov	r6,zero
  8077b4:	01d00934 	movhi	r7,16420
  8077b8:	08035200 	call	803520 <__muldf3>
  8077bc:	000d883a 	mov	r6,zero
  8077c0:	01d00934 	movhi	r7,16420
  8077c4:	8009883a 	mov	r4,r16
  8077c8:	880b883a 	mov	r5,r17
  8077cc:	102b883a 	mov	r21,r2
  8077d0:	1827883a 	mov	r19,r3
  8077d4:	08035200 	call	803520 <__muldf3>
  8077d8:	180b883a 	mov	r5,r3
  8077dc:	1009883a 	mov	r4,r2
  8077e0:	1821883a 	mov	r16,r3
  8077e4:	1023883a 	mov	r17,r2
  8077e8:	08045340 	call	804534 <__fixdfsi>
  8077ec:	1009883a 	mov	r4,r2
  8077f0:	1029883a 	mov	r20,r2
  8077f4:	08045b40 	call	8045b4 <__floatsidf>
  8077f8:	8809883a 	mov	r4,r17
  8077fc:	800b883a 	mov	r5,r16
  807800:	100d883a 	mov	r6,r2
  807804:	180f883a 	mov	r7,r3
  807808:	0803c380 	call	803c38 <__subdf3>
  80780c:	a5000c04 	addi	r20,r20,48
  807810:	a80d883a 	mov	r6,r21
  807814:	980f883a 	mov	r7,r19
  807818:	1009883a 	mov	r4,r2
  80781c:	180b883a 	mov	r5,r3
  807820:	95000005 	stb	r20,0(r18)
  807824:	1021883a 	mov	r16,r2
  807828:	1823883a 	mov	r17,r3
  80782c:	080f3980 	call	80f398 <__ledf2>
  807830:	bdc00044 	addi	r23,r23,1
  807834:	800d883a 	mov	r6,r16
  807838:	880f883a 	mov	r7,r17
  80783c:	0009883a 	mov	r4,zero
  807840:	014ffc34 	movhi	r5,16368
  807844:	103fcf0e 	bge	r2,zero,807784 <__alt_data_end+0xff807784>
  807848:	d8c01317 	ldw	r3,76(sp)
  80784c:	d8c00515 	stw	r3,20(sp)
  807850:	d9400917 	ldw	r5,36(sp)
  807854:	e009883a 	mov	r4,fp
  807858:	080a8ec0 	call	80a8ec <_Bfree>
  80785c:	d9000517 	ldw	r4,20(sp)
  807860:	d9802317 	ldw	r6,140(sp)
  807864:	d9c02517 	ldw	r7,148(sp)
  807868:	b8000005 	stb	zero,0(r23)
  80786c:	20800044 	addi	r2,r4,1
  807870:	30800015 	stw	r2,0(r6)
  807874:	3802aa26 	beq	r7,zero,808320 <_dtoa_r+0x1178>
  807878:	3dc00015 	stw	r23,0(r7)
  80787c:	d8800717 	ldw	r2,28(sp)
  807880:	003e7906 	br	807268 <__alt_data_end+0xff807268>
  807884:	00800434 	movhi	r2,16
  807888:	10bfffc4 	addi	r2,r2,-1
  80788c:	88a2703a 	and	r17,r17,r2
  807890:	883e851e 	bne	r17,zero,8072a8 <__alt_data_end+0xff8072a8>
  807894:	00802074 	movhi	r2,129
  807898:	10884204 	addi	r2,r2,8456
  80789c:	003e8406 	br	8072b0 <__alt_data_end+0xff8072b0>
  8078a0:	10c00204 	addi	r3,r2,8
  8078a4:	003e8706 	br	8072c4 <__alt_data_end+0xff8072c4>
  8078a8:	01400434 	movhi	r5,16
  8078ac:	297fffc4 	addi	r5,r5,-1
  8078b0:	994a703a 	and	r5,r19,r5
  8078b4:	9009883a 	mov	r4,r18
  8078b8:	843f0044 	addi	r16,r16,-1023
  8078bc:	294ffc34 	orhi	r5,r5,16368
  8078c0:	dd800217 	ldw	r22,8(sp)
  8078c4:	d8001115 	stw	zero,68(sp)
  8078c8:	003ea506 	br	807360 <__alt_data_end+0xff807360>
  8078cc:	00802074 	movhi	r2,129
  8078d0:	10883904 	addi	r2,r2,8420
  8078d4:	003e6406 	br	807268 <__alt_data_end+0xff807268>
  8078d8:	e0001115 	stw	zero,68(fp)
  8078dc:	000b883a 	mov	r5,zero
  8078e0:	e009883a 	mov	r4,fp
  8078e4:	080a8440 	call	80a844 <_Balloc>
  8078e8:	01bfffc4 	movi	r6,-1
  8078ec:	01c00044 	movi	r7,1
  8078f0:	d8800715 	stw	r2,28(sp)
  8078f4:	d9800c15 	stw	r6,48(sp)
  8078f8:	e0801015 	stw	r2,64(fp)
  8078fc:	d8000315 	stw	zero,12(sp)
  807900:	d9c00b15 	stw	r7,44(sp)
  807904:	d9800615 	stw	r6,24(sp)
  807908:	d8002215 	stw	zero,136(sp)
  80790c:	d8800117 	ldw	r2,4(sp)
  807910:	10008916 	blt	r2,zero,807b38 <_dtoa_r+0x990>
  807914:	d9000517 	ldw	r4,20(sp)
  807918:	00c00384 	movi	r3,14
  80791c:	19008616 	blt	r3,r4,807b38 <_dtoa_r+0x990>
  807920:	200490fa 	slli	r2,r4,3
  807924:	00c02074 	movhi	r3,129
  807928:	d9802217 	ldw	r6,136(sp)
  80792c:	18c86104 	addi	r3,r3,8580
  807930:	1885883a 	add	r2,r3,r2
  807934:	14000017 	ldw	r16,0(r2)
  807938:	14400117 	ldw	r17,4(r2)
  80793c:	30016316 	blt	r6,zero,807ecc <_dtoa_r+0xd24>
  807940:	800d883a 	mov	r6,r16
  807944:	880f883a 	mov	r7,r17
  807948:	9009883a 	mov	r4,r18
  80794c:	980b883a 	mov	r5,r19
  807950:	080eab00 	call	80eab0 <__divdf3>
  807954:	180b883a 	mov	r5,r3
  807958:	1009883a 	mov	r4,r2
  80795c:	08045340 	call	804534 <__fixdfsi>
  807960:	1009883a 	mov	r4,r2
  807964:	102b883a 	mov	r21,r2
  807968:	08045b40 	call	8045b4 <__floatsidf>
  80796c:	800d883a 	mov	r6,r16
  807970:	880f883a 	mov	r7,r17
  807974:	1009883a 	mov	r4,r2
  807978:	180b883a 	mov	r5,r3
  80797c:	08035200 	call	803520 <__muldf3>
  807980:	100d883a 	mov	r6,r2
  807984:	180f883a 	mov	r7,r3
  807988:	9009883a 	mov	r4,r18
  80798c:	980b883a 	mov	r5,r19
  807990:	0803c380 	call	803c38 <__subdf3>
  807994:	d9c00717 	ldw	r7,28(sp)
  807998:	1009883a 	mov	r4,r2
  80799c:	a8800c04 	addi	r2,r21,48
  8079a0:	38800005 	stb	r2,0(r7)
  8079a4:	3dc00044 	addi	r23,r7,1
  8079a8:	d9c00617 	ldw	r7,24(sp)
  8079ac:	01800044 	movi	r6,1
  8079b0:	180b883a 	mov	r5,r3
  8079b4:	2005883a 	mov	r2,r4
  8079b8:	39803826 	beq	r7,r6,807a9c <_dtoa_r+0x8f4>
  8079bc:	000d883a 	mov	r6,zero
  8079c0:	01d00934 	movhi	r7,16420
  8079c4:	08035200 	call	803520 <__muldf3>
  8079c8:	000d883a 	mov	r6,zero
  8079cc:	000f883a 	mov	r7,zero
  8079d0:	1009883a 	mov	r4,r2
  8079d4:	180b883a 	mov	r5,r3
  8079d8:	1025883a 	mov	r18,r2
  8079dc:	1827883a 	mov	r19,r3
  8079e0:	08033bc0 	call	8033bc <__eqdf2>
  8079e4:	103f9a26 	beq	r2,zero,807850 <__alt_data_end+0xff807850>
  8079e8:	d9c00617 	ldw	r7,24(sp)
  8079ec:	d8c00717 	ldw	r3,28(sp)
  8079f0:	b829883a 	mov	r20,r23
  8079f4:	38bfffc4 	addi	r2,r7,-1
  8079f8:	18ad883a 	add	r22,r3,r2
  8079fc:	00000a06 	br	807a28 <_dtoa_r+0x880>
  807a00:	08035200 	call	803520 <__muldf3>
  807a04:	000d883a 	mov	r6,zero
  807a08:	000f883a 	mov	r7,zero
  807a0c:	1009883a 	mov	r4,r2
  807a10:	180b883a 	mov	r5,r3
  807a14:	1025883a 	mov	r18,r2
  807a18:	1827883a 	mov	r19,r3
  807a1c:	b829883a 	mov	r20,r23
  807a20:	08033bc0 	call	8033bc <__eqdf2>
  807a24:	103f8a26 	beq	r2,zero,807850 <__alt_data_end+0xff807850>
  807a28:	800d883a 	mov	r6,r16
  807a2c:	880f883a 	mov	r7,r17
  807a30:	9009883a 	mov	r4,r18
  807a34:	980b883a 	mov	r5,r19
  807a38:	080eab00 	call	80eab0 <__divdf3>
  807a3c:	180b883a 	mov	r5,r3
  807a40:	1009883a 	mov	r4,r2
  807a44:	08045340 	call	804534 <__fixdfsi>
  807a48:	1009883a 	mov	r4,r2
  807a4c:	102b883a 	mov	r21,r2
  807a50:	08045b40 	call	8045b4 <__floatsidf>
  807a54:	800d883a 	mov	r6,r16
  807a58:	880f883a 	mov	r7,r17
  807a5c:	1009883a 	mov	r4,r2
  807a60:	180b883a 	mov	r5,r3
  807a64:	08035200 	call	803520 <__muldf3>
  807a68:	100d883a 	mov	r6,r2
  807a6c:	180f883a 	mov	r7,r3
  807a70:	9009883a 	mov	r4,r18
  807a74:	980b883a 	mov	r5,r19
  807a78:	0803c380 	call	803c38 <__subdf3>
  807a7c:	aa000c04 	addi	r8,r21,48
  807a80:	a2000005 	stb	r8,0(r20)
  807a84:	000d883a 	mov	r6,zero
  807a88:	01d00934 	movhi	r7,16420
  807a8c:	1009883a 	mov	r4,r2
  807a90:	180b883a 	mov	r5,r3
  807a94:	a5c00044 	addi	r23,r20,1
  807a98:	b53fd91e 	bne	r22,r20,807a00 <__alt_data_end+0xff807a00>
  807a9c:	100d883a 	mov	r6,r2
  807aa0:	180f883a 	mov	r7,r3
  807aa4:	1009883a 	mov	r4,r2
  807aa8:	180b883a 	mov	r5,r3
  807aac:	0802b100 	call	802b10 <__adddf3>
  807ab0:	100d883a 	mov	r6,r2
  807ab4:	180f883a 	mov	r7,r3
  807ab8:	8009883a 	mov	r4,r16
  807abc:	880b883a 	mov	r5,r17
  807ac0:	1027883a 	mov	r19,r2
  807ac4:	1825883a 	mov	r18,r3
  807ac8:	080f3980 	call	80f398 <__ledf2>
  807acc:	10000816 	blt	r2,zero,807af0 <_dtoa_r+0x948>
  807ad0:	980d883a 	mov	r6,r19
  807ad4:	900f883a 	mov	r7,r18
  807ad8:	8009883a 	mov	r4,r16
  807adc:	880b883a 	mov	r5,r17
  807ae0:	08033bc0 	call	8033bc <__eqdf2>
  807ae4:	103f5a1e 	bne	r2,zero,807850 <__alt_data_end+0xff807850>
  807ae8:	ad40004c 	andi	r21,r21,1
  807aec:	a83f5826 	beq	r21,zero,807850 <__alt_data_end+0xff807850>
  807af0:	bd3fffc3 	ldbu	r20,-1(r23)
  807af4:	b8bfffc4 	addi	r2,r23,-1
  807af8:	1007883a 	mov	r3,r2
  807afc:	01400e44 	movi	r5,57
  807b00:	d9800717 	ldw	r6,28(sp)
  807b04:	00000506 	br	807b1c <_dtoa_r+0x974>
  807b08:	18ffffc4 	addi	r3,r3,-1
  807b0c:	11824726 	beq	r2,r6,80842c <_dtoa_r+0x1284>
  807b10:	1d000003 	ldbu	r20,0(r3)
  807b14:	102f883a 	mov	r23,r2
  807b18:	10bfffc4 	addi	r2,r2,-1
  807b1c:	a1003fcc 	andi	r4,r20,255
  807b20:	2100201c 	xori	r4,r4,128
  807b24:	213fe004 	addi	r4,r4,-128
  807b28:	217ff726 	beq	r4,r5,807b08 <__alt_data_end+0xff807b08>
  807b2c:	a2000044 	addi	r8,r20,1
  807b30:	12000005 	stb	r8,0(r2)
  807b34:	003f4606 	br	807850 <__alt_data_end+0xff807850>
  807b38:	d9000b17 	ldw	r4,44(sp)
  807b3c:	2000c826 	beq	r4,zero,807e60 <_dtoa_r+0xcb8>
  807b40:	d9800317 	ldw	r6,12(sp)
  807b44:	00c00044 	movi	r3,1
  807b48:	1980f90e 	bge	r3,r6,807f30 <_dtoa_r+0xd88>
  807b4c:	d8800617 	ldw	r2,24(sp)
  807b50:	d8c00a17 	ldw	r3,40(sp)
  807b54:	157fffc4 	addi	r21,r2,-1
  807b58:	1d41f316 	blt	r3,r21,808328 <_dtoa_r+0x1180>
  807b5c:	1d6bc83a 	sub	r21,r3,r21
  807b60:	d9c00617 	ldw	r7,24(sp)
  807b64:	3802aa16 	blt	r7,zero,808610 <_dtoa_r+0x1468>
  807b68:	dd000817 	ldw	r20,32(sp)
  807b6c:	d8800617 	ldw	r2,24(sp)
  807b70:	d8c00817 	ldw	r3,32(sp)
  807b74:	01400044 	movi	r5,1
  807b78:	e009883a 	mov	r4,fp
  807b7c:	1887883a 	add	r3,r3,r2
  807b80:	d8c00815 	stw	r3,32(sp)
  807b84:	b0ad883a 	add	r22,r22,r2
  807b88:	080ac500 	call	80ac50 <__i2b>
  807b8c:	1023883a 	mov	r17,r2
  807b90:	a0000826 	beq	r20,zero,807bb4 <_dtoa_r+0xa0c>
  807b94:	0580070e 	bge	zero,r22,807bb4 <_dtoa_r+0xa0c>
  807b98:	a005883a 	mov	r2,r20
  807b9c:	b500b916 	blt	r22,r20,807e84 <_dtoa_r+0xcdc>
  807ba0:	d9000817 	ldw	r4,32(sp)
  807ba4:	a0a9c83a 	sub	r20,r20,r2
  807ba8:	b0adc83a 	sub	r22,r22,r2
  807bac:	2089c83a 	sub	r4,r4,r2
  807bb0:	d9000815 	stw	r4,32(sp)
  807bb4:	d9800a17 	ldw	r6,40(sp)
  807bb8:	0181810e 	bge	zero,r6,8081c0 <_dtoa_r+0x1018>
  807bbc:	d9c00b17 	ldw	r7,44(sp)
  807bc0:	3800b326 	beq	r7,zero,807e90 <_dtoa_r+0xce8>
  807bc4:	a800b226 	beq	r21,zero,807e90 <_dtoa_r+0xce8>
  807bc8:	880b883a 	mov	r5,r17
  807bcc:	a80d883a 	mov	r6,r21
  807bd0:	e009883a 	mov	r4,fp
  807bd4:	080ae840 	call	80ae84 <__pow5mult>
  807bd8:	d9800917 	ldw	r6,36(sp)
  807bdc:	100b883a 	mov	r5,r2
  807be0:	e009883a 	mov	r4,fp
  807be4:	1023883a 	mov	r17,r2
  807be8:	080ac8c0 	call	80ac8c <__multiply>
  807bec:	1021883a 	mov	r16,r2
  807bf0:	d8800a17 	ldw	r2,40(sp)
  807bf4:	d9400917 	ldw	r5,36(sp)
  807bf8:	e009883a 	mov	r4,fp
  807bfc:	1545c83a 	sub	r2,r2,r21
  807c00:	d8800a15 	stw	r2,40(sp)
  807c04:	080a8ec0 	call	80a8ec <_Bfree>
  807c08:	d8c00a17 	ldw	r3,40(sp)
  807c0c:	18009f1e 	bne	r3,zero,807e8c <_dtoa_r+0xce4>
  807c10:	05c00044 	movi	r23,1
  807c14:	e009883a 	mov	r4,fp
  807c18:	b80b883a 	mov	r5,r23
  807c1c:	080ac500 	call	80ac50 <__i2b>
  807c20:	d9000d17 	ldw	r4,52(sp)
  807c24:	102b883a 	mov	r21,r2
  807c28:	2000ce26 	beq	r4,zero,807f64 <_dtoa_r+0xdbc>
  807c2c:	200d883a 	mov	r6,r4
  807c30:	100b883a 	mov	r5,r2
  807c34:	e009883a 	mov	r4,fp
  807c38:	080ae840 	call	80ae84 <__pow5mult>
  807c3c:	d9800317 	ldw	r6,12(sp)
  807c40:	102b883a 	mov	r21,r2
  807c44:	b981810e 	bge	r23,r6,80824c <_dtoa_r+0x10a4>
  807c48:	0027883a 	mov	r19,zero
  807c4c:	a8800417 	ldw	r2,16(r21)
  807c50:	05c00804 	movi	r23,32
  807c54:	10800104 	addi	r2,r2,4
  807c58:	1085883a 	add	r2,r2,r2
  807c5c:	1085883a 	add	r2,r2,r2
  807c60:	a885883a 	add	r2,r21,r2
  807c64:	11000017 	ldw	r4,0(r2)
  807c68:	080ab380 	call	80ab38 <__hi0bits>
  807c6c:	b885c83a 	sub	r2,r23,r2
  807c70:	1585883a 	add	r2,r2,r22
  807c74:	108007cc 	andi	r2,r2,31
  807c78:	1000b326 	beq	r2,zero,807f48 <_dtoa_r+0xda0>
  807c7c:	00c00804 	movi	r3,32
  807c80:	1887c83a 	sub	r3,r3,r2
  807c84:	01000104 	movi	r4,4
  807c88:	20c2cd0e 	bge	r4,r3,8087c0 <_dtoa_r+0x1618>
  807c8c:	00c00704 	movi	r3,28
  807c90:	1885c83a 	sub	r2,r3,r2
  807c94:	d8c00817 	ldw	r3,32(sp)
  807c98:	a0a9883a 	add	r20,r20,r2
  807c9c:	b0ad883a 	add	r22,r22,r2
  807ca0:	1887883a 	add	r3,r3,r2
  807ca4:	d8c00815 	stw	r3,32(sp)
  807ca8:	d9800817 	ldw	r6,32(sp)
  807cac:	0180040e 	bge	zero,r6,807cc0 <_dtoa_r+0xb18>
  807cb0:	800b883a 	mov	r5,r16
  807cb4:	e009883a 	mov	r4,fp
  807cb8:	080afc40 	call	80afc4 <__lshift>
  807cbc:	1021883a 	mov	r16,r2
  807cc0:	0580050e 	bge	zero,r22,807cd8 <_dtoa_r+0xb30>
  807cc4:	a80b883a 	mov	r5,r21
  807cc8:	b00d883a 	mov	r6,r22
  807ccc:	e009883a 	mov	r4,fp
  807cd0:	080afc40 	call	80afc4 <__lshift>
  807cd4:	102b883a 	mov	r21,r2
  807cd8:	d9c00e17 	ldw	r7,56(sp)
  807cdc:	3801211e 	bne	r7,zero,808164 <_dtoa_r+0xfbc>
  807ce0:	d9800617 	ldw	r6,24(sp)
  807ce4:	0181380e 	bge	zero,r6,8081c8 <_dtoa_r+0x1020>
  807ce8:	d8c00b17 	ldw	r3,44(sp)
  807cec:	1800ab1e 	bne	r3,zero,807f9c <_dtoa_r+0xdf4>
  807cf0:	dc800717 	ldw	r18,28(sp)
  807cf4:	dcc00617 	ldw	r19,24(sp)
  807cf8:	9029883a 	mov	r20,r18
  807cfc:	00000206 	br	807d08 <_dtoa_r+0xb60>
  807d00:	080a9140 	call	80a914 <__multadd>
  807d04:	1021883a 	mov	r16,r2
  807d08:	a80b883a 	mov	r5,r21
  807d0c:	8009883a 	mov	r4,r16
  807d10:	0806fa80 	call	806fa8 <quorem>
  807d14:	10800c04 	addi	r2,r2,48
  807d18:	90800005 	stb	r2,0(r18)
  807d1c:	94800044 	addi	r18,r18,1
  807d20:	9507c83a 	sub	r3,r18,r20
  807d24:	000f883a 	mov	r7,zero
  807d28:	01800284 	movi	r6,10
  807d2c:	800b883a 	mov	r5,r16
  807d30:	e009883a 	mov	r4,fp
  807d34:	1cfff216 	blt	r3,r19,807d00 <__alt_data_end+0xff807d00>
  807d38:	1011883a 	mov	r8,r2
  807d3c:	d8800617 	ldw	r2,24(sp)
  807d40:	0082370e 	bge	zero,r2,808620 <_dtoa_r+0x1478>
  807d44:	d9000717 	ldw	r4,28(sp)
  807d48:	0025883a 	mov	r18,zero
  807d4c:	20af883a 	add	r23,r4,r2
  807d50:	01800044 	movi	r6,1
  807d54:	800b883a 	mov	r5,r16
  807d58:	e009883a 	mov	r4,fp
  807d5c:	da001715 	stw	r8,92(sp)
  807d60:	080afc40 	call	80afc4 <__lshift>
  807d64:	a80b883a 	mov	r5,r21
  807d68:	1009883a 	mov	r4,r2
  807d6c:	d8800915 	stw	r2,36(sp)
  807d70:	080b10c0 	call	80b10c <__mcmp>
  807d74:	da001717 	ldw	r8,92(sp)
  807d78:	0081800e 	bge	zero,r2,80837c <_dtoa_r+0x11d4>
  807d7c:	b93fffc3 	ldbu	r4,-1(r23)
  807d80:	b8bfffc4 	addi	r2,r23,-1
  807d84:	1007883a 	mov	r3,r2
  807d88:	01800e44 	movi	r6,57
  807d8c:	d9c00717 	ldw	r7,28(sp)
  807d90:	00000506 	br	807da8 <_dtoa_r+0xc00>
  807d94:	18ffffc4 	addi	r3,r3,-1
  807d98:	11c12326 	beq	r2,r7,808228 <_dtoa_r+0x1080>
  807d9c:	19000003 	ldbu	r4,0(r3)
  807da0:	102f883a 	mov	r23,r2
  807da4:	10bfffc4 	addi	r2,r2,-1
  807da8:	21403fcc 	andi	r5,r4,255
  807dac:	2940201c 	xori	r5,r5,128
  807db0:	297fe004 	addi	r5,r5,-128
  807db4:	29bff726 	beq	r5,r6,807d94 <__alt_data_end+0xff807d94>
  807db8:	21000044 	addi	r4,r4,1
  807dbc:	11000005 	stb	r4,0(r2)
  807dc0:	a80b883a 	mov	r5,r21
  807dc4:	e009883a 	mov	r4,fp
  807dc8:	080a8ec0 	call	80a8ec <_Bfree>
  807dcc:	883ea026 	beq	r17,zero,807850 <__alt_data_end+0xff807850>
  807dd0:	90000426 	beq	r18,zero,807de4 <_dtoa_r+0xc3c>
  807dd4:	94400326 	beq	r18,r17,807de4 <_dtoa_r+0xc3c>
  807dd8:	900b883a 	mov	r5,r18
  807ddc:	e009883a 	mov	r4,fp
  807de0:	080a8ec0 	call	80a8ec <_Bfree>
  807de4:	880b883a 	mov	r5,r17
  807de8:	e009883a 	mov	r4,fp
  807dec:	080a8ec0 	call	80a8ec <_Bfree>
  807df0:	003e9706 	br	807850 <__alt_data_end+0xff807850>
  807df4:	01800044 	movi	r6,1
  807df8:	d9800e15 	stw	r6,56(sp)
  807dfc:	003d9606 	br	807458 <__alt_data_end+0xff807458>
  807e00:	d8800817 	ldw	r2,32(sp)
  807e04:	d8c00517 	ldw	r3,20(sp)
  807e08:	d8000d15 	stw	zero,52(sp)
  807e0c:	10c5c83a 	sub	r2,r2,r3
  807e10:	00c9c83a 	sub	r4,zero,r3
  807e14:	d8800815 	stw	r2,32(sp)
  807e18:	d9000a15 	stw	r4,40(sp)
  807e1c:	003d9706 	br	80747c <__alt_data_end+0xff80747c>
  807e20:	05adc83a 	sub	r22,zero,r22
  807e24:	dd800815 	stw	r22,32(sp)
  807e28:	002d883a 	mov	r22,zero
  807e2c:	003d8e06 	br	807468 <__alt_data_end+0xff807468>
  807e30:	d9000517 	ldw	r4,20(sp)
  807e34:	08045b40 	call	8045b4 <__floatsidf>
  807e38:	100d883a 	mov	r6,r2
  807e3c:	180f883a 	mov	r7,r3
  807e40:	a009883a 	mov	r4,r20
  807e44:	880b883a 	mov	r5,r17
  807e48:	08033bc0 	call	8033bc <__eqdf2>
  807e4c:	103d7126 	beq	r2,zero,807414 <__alt_data_end+0xff807414>
  807e50:	d9c00517 	ldw	r7,20(sp)
  807e54:	39ffffc4 	addi	r7,r7,-1
  807e58:	d9c00515 	stw	r7,20(sp)
  807e5c:	003d6d06 	br	807414 <__alt_data_end+0xff807414>
  807e60:	dd400a17 	ldw	r21,40(sp)
  807e64:	dd000817 	ldw	r20,32(sp)
  807e68:	0023883a 	mov	r17,zero
  807e6c:	003f4806 	br	807b90 <__alt_data_end+0xff807b90>
  807e70:	10e3c83a 	sub	r17,r2,r3
  807e74:	9448983a 	sll	r4,r18,r17
  807e78:	003d3206 	br	807344 <__alt_data_end+0xff807344>
  807e7c:	d8000e15 	stw	zero,56(sp)
  807e80:	003d7506 	br	807458 <__alt_data_end+0xff807458>
  807e84:	b005883a 	mov	r2,r22
  807e88:	003f4506 	br	807ba0 <__alt_data_end+0xff807ba0>
  807e8c:	dc000915 	stw	r16,36(sp)
  807e90:	d9800a17 	ldw	r6,40(sp)
  807e94:	d9400917 	ldw	r5,36(sp)
  807e98:	e009883a 	mov	r4,fp
  807e9c:	080ae840 	call	80ae84 <__pow5mult>
  807ea0:	1021883a 	mov	r16,r2
  807ea4:	003f5a06 	br	807c10 <__alt_data_end+0xff807c10>
  807ea8:	01c00044 	movi	r7,1
  807eac:	d9c00b15 	stw	r7,44(sp)
  807eb0:	d8802217 	ldw	r2,136(sp)
  807eb4:	0081280e 	bge	zero,r2,808358 <_dtoa_r+0x11b0>
  807eb8:	100d883a 	mov	r6,r2
  807ebc:	1021883a 	mov	r16,r2
  807ec0:	d8800c15 	stw	r2,48(sp)
  807ec4:	d8800615 	stw	r2,24(sp)
  807ec8:	003d8806 	br	8074ec <__alt_data_end+0xff8074ec>
  807ecc:	d8800617 	ldw	r2,24(sp)
  807ed0:	00be9b16 	blt	zero,r2,807940 <__alt_data_end+0xff807940>
  807ed4:	10010f1e 	bne	r2,zero,808314 <_dtoa_r+0x116c>
  807ed8:	880b883a 	mov	r5,r17
  807edc:	000d883a 	mov	r6,zero
  807ee0:	01d00534 	movhi	r7,16404
  807ee4:	8009883a 	mov	r4,r16
  807ee8:	08035200 	call	803520 <__muldf3>
  807eec:	900d883a 	mov	r6,r18
  807ef0:	980f883a 	mov	r7,r19
  807ef4:	1009883a 	mov	r4,r2
  807ef8:	180b883a 	mov	r5,r3
  807efc:	08034440 	call	803444 <__gedf2>
  807f00:	002b883a 	mov	r21,zero
  807f04:	0023883a 	mov	r17,zero
  807f08:	1000bf16 	blt	r2,zero,808208 <_dtoa_r+0x1060>
  807f0c:	d9802217 	ldw	r6,136(sp)
  807f10:	ddc00717 	ldw	r23,28(sp)
  807f14:	018c303a 	nor	r6,zero,r6
  807f18:	d9800515 	stw	r6,20(sp)
  807f1c:	a80b883a 	mov	r5,r21
  807f20:	e009883a 	mov	r4,fp
  807f24:	080a8ec0 	call	80a8ec <_Bfree>
  807f28:	883e4926 	beq	r17,zero,807850 <__alt_data_end+0xff807850>
  807f2c:	003fad06 	br	807de4 <__alt_data_end+0xff807de4>
  807f30:	d9c01117 	ldw	r7,68(sp)
  807f34:	3801bc26 	beq	r7,zero,808628 <_dtoa_r+0x1480>
  807f38:	10810cc4 	addi	r2,r2,1075
  807f3c:	dd400a17 	ldw	r21,40(sp)
  807f40:	dd000817 	ldw	r20,32(sp)
  807f44:	003f0a06 	br	807b70 <__alt_data_end+0xff807b70>
  807f48:	00800704 	movi	r2,28
  807f4c:	d9000817 	ldw	r4,32(sp)
  807f50:	a0a9883a 	add	r20,r20,r2
  807f54:	b0ad883a 	add	r22,r22,r2
  807f58:	2089883a 	add	r4,r4,r2
  807f5c:	d9000815 	stw	r4,32(sp)
  807f60:	003f5106 	br	807ca8 <__alt_data_end+0xff807ca8>
  807f64:	d8c00317 	ldw	r3,12(sp)
  807f68:	b8c1fc0e 	bge	r23,r3,80875c <_dtoa_r+0x15b4>
  807f6c:	0027883a 	mov	r19,zero
  807f70:	b805883a 	mov	r2,r23
  807f74:	003f3e06 	br	807c70 <__alt_data_end+0xff807c70>
  807f78:	880b883a 	mov	r5,r17
  807f7c:	e009883a 	mov	r4,fp
  807f80:	000f883a 	mov	r7,zero
  807f84:	01800284 	movi	r6,10
  807f88:	080a9140 	call	80a914 <__multadd>
  807f8c:	d9000c17 	ldw	r4,48(sp)
  807f90:	1023883a 	mov	r17,r2
  807f94:	0102040e 	bge	zero,r4,8087a8 <_dtoa_r+0x1600>
  807f98:	d9000615 	stw	r4,24(sp)
  807f9c:	0500050e 	bge	zero,r20,807fb4 <_dtoa_r+0xe0c>
  807fa0:	880b883a 	mov	r5,r17
  807fa4:	a00d883a 	mov	r6,r20
  807fa8:	e009883a 	mov	r4,fp
  807fac:	080afc40 	call	80afc4 <__lshift>
  807fb0:	1023883a 	mov	r17,r2
  807fb4:	9801241e 	bne	r19,zero,808448 <_dtoa_r+0x12a0>
  807fb8:	8829883a 	mov	r20,r17
  807fbc:	d9000617 	ldw	r4,24(sp)
  807fc0:	dcc00717 	ldw	r19,28(sp)
  807fc4:	9480004c 	andi	r18,r18,1
  807fc8:	20bfffc4 	addi	r2,r4,-1
  807fcc:	9885883a 	add	r2,r19,r2
  807fd0:	d8800415 	stw	r2,16(sp)
  807fd4:	dc800615 	stw	r18,24(sp)
  807fd8:	a80b883a 	mov	r5,r21
  807fdc:	8009883a 	mov	r4,r16
  807fe0:	0806fa80 	call	806fa8 <quorem>
  807fe4:	880b883a 	mov	r5,r17
  807fe8:	8009883a 	mov	r4,r16
  807fec:	102f883a 	mov	r23,r2
  807ff0:	080b10c0 	call	80b10c <__mcmp>
  807ff4:	a80b883a 	mov	r5,r21
  807ff8:	a00d883a 	mov	r6,r20
  807ffc:	e009883a 	mov	r4,fp
  808000:	102d883a 	mov	r22,r2
  808004:	080b16c0 	call	80b16c <__mdiff>
  808008:	1007883a 	mov	r3,r2
  80800c:	10800317 	ldw	r2,12(r2)
  808010:	bc800c04 	addi	r18,r23,48
  808014:	180b883a 	mov	r5,r3
  808018:	10004e1e 	bne	r2,zero,808154 <_dtoa_r+0xfac>
  80801c:	8009883a 	mov	r4,r16
  808020:	d8c01615 	stw	r3,88(sp)
  808024:	080b10c0 	call	80b10c <__mcmp>
  808028:	d8c01617 	ldw	r3,88(sp)
  80802c:	e009883a 	mov	r4,fp
  808030:	d8801615 	stw	r2,88(sp)
  808034:	180b883a 	mov	r5,r3
  808038:	080a8ec0 	call	80a8ec <_Bfree>
  80803c:	d8801617 	ldw	r2,88(sp)
  808040:	1000041e 	bne	r2,zero,808054 <_dtoa_r+0xeac>
  808044:	d9800317 	ldw	r6,12(sp)
  808048:	3000021e 	bne	r6,zero,808054 <_dtoa_r+0xeac>
  80804c:	d8c00617 	ldw	r3,24(sp)
  808050:	18003726 	beq	r3,zero,808130 <_dtoa_r+0xf88>
  808054:	b0002016 	blt	r22,zero,8080d8 <_dtoa_r+0xf30>
  808058:	b000041e 	bne	r22,zero,80806c <_dtoa_r+0xec4>
  80805c:	d9000317 	ldw	r4,12(sp)
  808060:	2000021e 	bne	r4,zero,80806c <_dtoa_r+0xec4>
  808064:	d8c00617 	ldw	r3,24(sp)
  808068:	18001b26 	beq	r3,zero,8080d8 <_dtoa_r+0xf30>
  80806c:	00810716 	blt	zero,r2,80848c <_dtoa_r+0x12e4>
  808070:	d8c00417 	ldw	r3,16(sp)
  808074:	9d800044 	addi	r22,r19,1
  808078:	9c800005 	stb	r18,0(r19)
  80807c:	b02f883a 	mov	r23,r22
  808080:	98c10626 	beq	r19,r3,80849c <_dtoa_r+0x12f4>
  808084:	800b883a 	mov	r5,r16
  808088:	000f883a 	mov	r7,zero
  80808c:	01800284 	movi	r6,10
  808090:	e009883a 	mov	r4,fp
  808094:	080a9140 	call	80a914 <__multadd>
  808098:	1021883a 	mov	r16,r2
  80809c:	000f883a 	mov	r7,zero
  8080a0:	01800284 	movi	r6,10
  8080a4:	880b883a 	mov	r5,r17
  8080a8:	e009883a 	mov	r4,fp
  8080ac:	8d002526 	beq	r17,r20,808144 <_dtoa_r+0xf9c>
  8080b0:	080a9140 	call	80a914 <__multadd>
  8080b4:	a00b883a 	mov	r5,r20
  8080b8:	000f883a 	mov	r7,zero
  8080bc:	01800284 	movi	r6,10
  8080c0:	e009883a 	mov	r4,fp
  8080c4:	1023883a 	mov	r17,r2
  8080c8:	080a9140 	call	80a914 <__multadd>
  8080cc:	1029883a 	mov	r20,r2
  8080d0:	b027883a 	mov	r19,r22
  8080d4:	003fc006 	br	807fd8 <__alt_data_end+0xff807fd8>
  8080d8:	9011883a 	mov	r8,r18
  8080dc:	00800e0e 	bge	zero,r2,808118 <_dtoa_r+0xf70>
  8080e0:	800b883a 	mov	r5,r16
  8080e4:	01800044 	movi	r6,1
  8080e8:	e009883a 	mov	r4,fp
  8080ec:	da001715 	stw	r8,92(sp)
  8080f0:	080afc40 	call	80afc4 <__lshift>
  8080f4:	a80b883a 	mov	r5,r21
  8080f8:	1009883a 	mov	r4,r2
  8080fc:	1021883a 	mov	r16,r2
  808100:	080b10c0 	call	80b10c <__mcmp>
  808104:	da001717 	ldw	r8,92(sp)
  808108:	0081960e 	bge	zero,r2,808764 <_dtoa_r+0x15bc>
  80810c:	00800e44 	movi	r2,57
  808110:	40817026 	beq	r8,r2,8086d4 <_dtoa_r+0x152c>
  808114:	ba000c44 	addi	r8,r23,49
  808118:	8825883a 	mov	r18,r17
  80811c:	9dc00044 	addi	r23,r19,1
  808120:	9a000005 	stb	r8,0(r19)
  808124:	a023883a 	mov	r17,r20
  808128:	dc000915 	stw	r16,36(sp)
  80812c:	003f2406 	br	807dc0 <__alt_data_end+0xff807dc0>
  808130:	00800e44 	movi	r2,57
  808134:	9011883a 	mov	r8,r18
  808138:	90816626 	beq	r18,r2,8086d4 <_dtoa_r+0x152c>
  80813c:	05bff516 	blt	zero,r22,808114 <__alt_data_end+0xff808114>
  808140:	003ff506 	br	808118 <__alt_data_end+0xff808118>
  808144:	080a9140 	call	80a914 <__multadd>
  808148:	1023883a 	mov	r17,r2
  80814c:	1029883a 	mov	r20,r2
  808150:	003fdf06 	br	8080d0 <__alt_data_end+0xff8080d0>
  808154:	e009883a 	mov	r4,fp
  808158:	080a8ec0 	call	80a8ec <_Bfree>
  80815c:	00800044 	movi	r2,1
  808160:	003fbc06 	br	808054 <__alt_data_end+0xff808054>
  808164:	a80b883a 	mov	r5,r21
  808168:	8009883a 	mov	r4,r16
  80816c:	080b10c0 	call	80b10c <__mcmp>
  808170:	103edb0e 	bge	r2,zero,807ce0 <__alt_data_end+0xff807ce0>
  808174:	800b883a 	mov	r5,r16
  808178:	000f883a 	mov	r7,zero
  80817c:	01800284 	movi	r6,10
  808180:	e009883a 	mov	r4,fp
  808184:	080a9140 	call	80a914 <__multadd>
  808188:	1021883a 	mov	r16,r2
  80818c:	d8800517 	ldw	r2,20(sp)
  808190:	d8c00b17 	ldw	r3,44(sp)
  808194:	10bfffc4 	addi	r2,r2,-1
  808198:	d8800515 	stw	r2,20(sp)
  80819c:	183f761e 	bne	r3,zero,807f78 <__alt_data_end+0xff807f78>
  8081a0:	d9000c17 	ldw	r4,48(sp)
  8081a4:	0101730e 	bge	zero,r4,808774 <_dtoa_r+0x15cc>
  8081a8:	d9000615 	stw	r4,24(sp)
  8081ac:	003ed006 	br	807cf0 <__alt_data_end+0xff807cf0>
  8081b0:	00800084 	movi	r2,2
  8081b4:	3081861e 	bne	r6,r2,8087d0 <_dtoa_r+0x1628>
  8081b8:	d8000b15 	stw	zero,44(sp)
  8081bc:	003f3c06 	br	807eb0 <__alt_data_end+0xff807eb0>
  8081c0:	dc000917 	ldw	r16,36(sp)
  8081c4:	003e9206 	br	807c10 <__alt_data_end+0xff807c10>
  8081c8:	d9c00317 	ldw	r7,12(sp)
  8081cc:	00800084 	movi	r2,2
  8081d0:	11fec50e 	bge	r2,r7,807ce8 <__alt_data_end+0xff807ce8>
  8081d4:	d9000617 	ldw	r4,24(sp)
  8081d8:	20013c1e 	bne	r4,zero,8086cc <_dtoa_r+0x1524>
  8081dc:	a80b883a 	mov	r5,r21
  8081e0:	000f883a 	mov	r7,zero
  8081e4:	01800144 	movi	r6,5
  8081e8:	e009883a 	mov	r4,fp
  8081ec:	080a9140 	call	80a914 <__multadd>
  8081f0:	100b883a 	mov	r5,r2
  8081f4:	8009883a 	mov	r4,r16
  8081f8:	102b883a 	mov	r21,r2
  8081fc:	080b10c0 	call	80b10c <__mcmp>
  808200:	dc000915 	stw	r16,36(sp)
  808204:	00bf410e 	bge	zero,r2,807f0c <__alt_data_end+0xff807f0c>
  808208:	d9c00717 	ldw	r7,28(sp)
  80820c:	00800c44 	movi	r2,49
  808210:	38800005 	stb	r2,0(r7)
  808214:	d8800517 	ldw	r2,20(sp)
  808218:	3dc00044 	addi	r23,r7,1
  80821c:	10800044 	addi	r2,r2,1
  808220:	d8800515 	stw	r2,20(sp)
  808224:	003f3d06 	br	807f1c <__alt_data_end+0xff807f1c>
  808228:	d9800517 	ldw	r6,20(sp)
  80822c:	d9c00717 	ldw	r7,28(sp)
  808230:	00800c44 	movi	r2,49
  808234:	31800044 	addi	r6,r6,1
  808238:	d9800515 	stw	r6,20(sp)
  80823c:	38800005 	stb	r2,0(r7)
  808240:	003edf06 	br	807dc0 <__alt_data_end+0xff807dc0>
  808244:	d8000b15 	stw	zero,44(sp)
  808248:	003c9f06 	br	8074c8 <__alt_data_end+0xff8074c8>
  80824c:	903e7e1e 	bne	r18,zero,807c48 <__alt_data_end+0xff807c48>
  808250:	00800434 	movhi	r2,16
  808254:	10bfffc4 	addi	r2,r2,-1
  808258:	9884703a 	and	r2,r19,r2
  80825c:	1000ea1e 	bne	r2,zero,808608 <_dtoa_r+0x1460>
  808260:	9cdffc2c 	andhi	r19,r19,32752
  808264:	9800e826 	beq	r19,zero,808608 <_dtoa_r+0x1460>
  808268:	d9c00817 	ldw	r7,32(sp)
  80826c:	b5800044 	addi	r22,r22,1
  808270:	04c00044 	movi	r19,1
  808274:	39c00044 	addi	r7,r7,1
  808278:	d9c00815 	stw	r7,32(sp)
  80827c:	d8800d17 	ldw	r2,52(sp)
  808280:	103e721e 	bne	r2,zero,807c4c <__alt_data_end+0xff807c4c>
  808284:	00800044 	movi	r2,1
  808288:	003e7906 	br	807c70 <__alt_data_end+0xff807c70>
  80828c:	8009883a 	mov	r4,r16
  808290:	08045b40 	call	8045b4 <__floatsidf>
  808294:	d9800f17 	ldw	r6,60(sp)
  808298:	d9c01017 	ldw	r7,64(sp)
  80829c:	1009883a 	mov	r4,r2
  8082a0:	180b883a 	mov	r5,r3
  8082a4:	08035200 	call	803520 <__muldf3>
  8082a8:	000d883a 	mov	r6,zero
  8082ac:	01d00734 	movhi	r7,16412
  8082b0:	1009883a 	mov	r4,r2
  8082b4:	180b883a 	mov	r5,r3
  8082b8:	0802b100 	call	802b10 <__adddf3>
  8082bc:	047f3034 	movhi	r17,64704
  8082c0:	1021883a 	mov	r16,r2
  8082c4:	1c63883a 	add	r17,r3,r17
  8082c8:	d9000f17 	ldw	r4,60(sp)
  8082cc:	d9401017 	ldw	r5,64(sp)
  8082d0:	000d883a 	mov	r6,zero
  8082d4:	01d00534 	movhi	r7,16404
  8082d8:	0803c380 	call	803c38 <__subdf3>
  8082dc:	800d883a 	mov	r6,r16
  8082e0:	880f883a 	mov	r7,r17
  8082e4:	1009883a 	mov	r4,r2
  8082e8:	180b883a 	mov	r5,r3
  8082ec:	102b883a 	mov	r21,r2
  8082f0:	1829883a 	mov	r20,r3
  8082f4:	08034440 	call	803444 <__gedf2>
  8082f8:	00806c16 	blt	zero,r2,8084ac <_dtoa_r+0x1304>
  8082fc:	89e0003c 	xorhi	r7,r17,32768
  808300:	800d883a 	mov	r6,r16
  808304:	a809883a 	mov	r4,r21
  808308:	a00b883a 	mov	r5,r20
  80830c:	080f3980 	call	80f398 <__ledf2>
  808310:	103d7e0e 	bge	r2,zero,80790c <__alt_data_end+0xff80790c>
  808314:	002b883a 	mov	r21,zero
  808318:	0023883a 	mov	r17,zero
  80831c:	003efb06 	br	807f0c <__alt_data_end+0xff807f0c>
  808320:	d8800717 	ldw	r2,28(sp)
  808324:	003bd006 	br	807268 <__alt_data_end+0xff807268>
  808328:	d9000a17 	ldw	r4,40(sp)
  80832c:	d9800d17 	ldw	r6,52(sp)
  808330:	dd400a15 	stw	r21,40(sp)
  808334:	a905c83a 	sub	r2,r21,r4
  808338:	308d883a 	add	r6,r6,r2
  80833c:	d9800d15 	stw	r6,52(sp)
  808340:	002b883a 	mov	r21,zero
  808344:	003e0606 	br	807b60 <__alt_data_end+0xff807b60>
  808348:	9023883a 	mov	r17,r18
  80834c:	9829883a 	mov	r20,r19
  808350:	04000084 	movi	r16,2
  808354:	003c9206 	br	8075a0 <__alt_data_end+0xff8075a0>
  808358:	04000044 	movi	r16,1
  80835c:	dc000c15 	stw	r16,48(sp)
  808360:	dc000615 	stw	r16,24(sp)
  808364:	dc002215 	stw	r16,136(sp)
  808368:	e0001115 	stw	zero,68(fp)
  80836c:	000b883a 	mov	r5,zero
  808370:	003c6906 	br	807518 <__alt_data_end+0xff807518>
  808374:	3021883a 	mov	r16,r6
  808378:	003ffb06 	br	808368 <__alt_data_end+0xff808368>
  80837c:	1000021e 	bne	r2,zero,808388 <_dtoa_r+0x11e0>
  808380:	4200004c 	andi	r8,r8,1
  808384:	403e7d1e 	bne	r8,zero,807d7c <__alt_data_end+0xff807d7c>
  808388:	01000c04 	movi	r4,48
  80838c:	00000106 	br	808394 <_dtoa_r+0x11ec>
  808390:	102f883a 	mov	r23,r2
  808394:	b8bfffc4 	addi	r2,r23,-1
  808398:	10c00007 	ldb	r3,0(r2)
  80839c:	193ffc26 	beq	r3,r4,808390 <__alt_data_end+0xff808390>
  8083a0:	003e8706 	br	807dc0 <__alt_data_end+0xff807dc0>
  8083a4:	d8800517 	ldw	r2,20(sp)
  8083a8:	00a3c83a 	sub	r17,zero,r2
  8083ac:	8800a426 	beq	r17,zero,808640 <_dtoa_r+0x1498>
  8083b0:	888003cc 	andi	r2,r17,15
  8083b4:	100490fa 	slli	r2,r2,3
  8083b8:	00c02074 	movhi	r3,129
  8083bc:	18c86104 	addi	r3,r3,8580
  8083c0:	1885883a 	add	r2,r3,r2
  8083c4:	11800017 	ldw	r6,0(r2)
  8083c8:	11c00117 	ldw	r7,4(r2)
  8083cc:	9009883a 	mov	r4,r18
  8083d0:	980b883a 	mov	r5,r19
  8083d4:	8823d13a 	srai	r17,r17,4
  8083d8:	08035200 	call	803520 <__muldf3>
  8083dc:	d8800f15 	stw	r2,60(sp)
  8083e0:	d8c01015 	stw	r3,64(sp)
  8083e4:	8800e826 	beq	r17,zero,808788 <_dtoa_r+0x15e0>
  8083e8:	05002074 	movhi	r20,129
  8083ec:	a5085704 	addi	r20,r20,8540
  8083f0:	04000084 	movi	r16,2
  8083f4:	8980004c 	andi	r6,r17,1
  8083f8:	1009883a 	mov	r4,r2
  8083fc:	8823d07a 	srai	r17,r17,1
  808400:	180b883a 	mov	r5,r3
  808404:	30000426 	beq	r6,zero,808418 <_dtoa_r+0x1270>
  808408:	a1800017 	ldw	r6,0(r20)
  80840c:	a1c00117 	ldw	r7,4(r20)
  808410:	84000044 	addi	r16,r16,1
  808414:	08035200 	call	803520 <__muldf3>
  808418:	a5000204 	addi	r20,r20,8
  80841c:	883ff51e 	bne	r17,zero,8083f4 <__alt_data_end+0xff8083f4>
  808420:	d8800f15 	stw	r2,60(sp)
  808424:	d8c01015 	stw	r3,64(sp)
  808428:	003c7606 	br	807604 <__alt_data_end+0xff807604>
  80842c:	00c00c04 	movi	r3,48
  808430:	10c00005 	stb	r3,0(r2)
  808434:	d8c00517 	ldw	r3,20(sp)
  808438:	bd3fffc3 	ldbu	r20,-1(r23)
  80843c:	18c00044 	addi	r3,r3,1
  808440:	d8c00515 	stw	r3,20(sp)
  808444:	003db906 	br	807b2c <__alt_data_end+0xff807b2c>
  808448:	89400117 	ldw	r5,4(r17)
  80844c:	e009883a 	mov	r4,fp
  808450:	080a8440 	call	80a844 <_Balloc>
  808454:	89800417 	ldw	r6,16(r17)
  808458:	89400304 	addi	r5,r17,12
  80845c:	11000304 	addi	r4,r2,12
  808460:	31800084 	addi	r6,r6,2
  808464:	318d883a 	add	r6,r6,r6
  808468:	318d883a 	add	r6,r6,r6
  80846c:	1027883a 	mov	r19,r2
  808470:	080a4780 	call	80a478 <memcpy>
  808474:	01800044 	movi	r6,1
  808478:	980b883a 	mov	r5,r19
  80847c:	e009883a 	mov	r4,fp
  808480:	080afc40 	call	80afc4 <__lshift>
  808484:	1029883a 	mov	r20,r2
  808488:	003ecc06 	br	807fbc <__alt_data_end+0xff807fbc>
  80848c:	00800e44 	movi	r2,57
  808490:	90809026 	beq	r18,r2,8086d4 <_dtoa_r+0x152c>
  808494:	92000044 	addi	r8,r18,1
  808498:	003f1f06 	br	808118 <__alt_data_end+0xff808118>
  80849c:	9011883a 	mov	r8,r18
  8084a0:	8825883a 	mov	r18,r17
  8084a4:	a023883a 	mov	r17,r20
  8084a8:	003e2906 	br	807d50 <__alt_data_end+0xff807d50>
  8084ac:	002b883a 	mov	r21,zero
  8084b0:	0023883a 	mov	r17,zero
  8084b4:	003f5406 	br	808208 <__alt_data_end+0xff808208>
  8084b8:	61bfffc4 	addi	r6,r12,-1
  8084bc:	300490fa 	slli	r2,r6,3
  8084c0:	00c02074 	movhi	r3,129
  8084c4:	18c86104 	addi	r3,r3,8580
  8084c8:	1885883a 	add	r2,r3,r2
  8084cc:	11000017 	ldw	r4,0(r2)
  8084d0:	11400117 	ldw	r5,4(r2)
  8084d4:	d8800717 	ldw	r2,28(sp)
  8084d8:	880f883a 	mov	r7,r17
  8084dc:	d9801215 	stw	r6,72(sp)
  8084e0:	800d883a 	mov	r6,r16
  8084e4:	db001615 	stw	r12,88(sp)
  8084e8:	15c00044 	addi	r23,r2,1
  8084ec:	08035200 	call	803520 <__muldf3>
  8084f0:	d9401017 	ldw	r5,64(sp)
  8084f4:	d9000f17 	ldw	r4,60(sp)
  8084f8:	d8c01515 	stw	r3,84(sp)
  8084fc:	d8801415 	stw	r2,80(sp)
  808500:	08045340 	call	804534 <__fixdfsi>
  808504:	1009883a 	mov	r4,r2
  808508:	1021883a 	mov	r16,r2
  80850c:	08045b40 	call	8045b4 <__floatsidf>
  808510:	d9000f17 	ldw	r4,60(sp)
  808514:	d9401017 	ldw	r5,64(sp)
  808518:	100d883a 	mov	r6,r2
  80851c:	180f883a 	mov	r7,r3
  808520:	0803c380 	call	803c38 <__subdf3>
  808524:	1829883a 	mov	r20,r3
  808528:	d8c00717 	ldw	r3,28(sp)
  80852c:	84000c04 	addi	r16,r16,48
  808530:	1023883a 	mov	r17,r2
  808534:	1c000005 	stb	r16,0(r3)
  808538:	db001617 	ldw	r12,88(sp)
  80853c:	00800044 	movi	r2,1
  808540:	60802226 	beq	r12,r2,8085cc <_dtoa_r+0x1424>
  808544:	d9c00717 	ldw	r7,28(sp)
  808548:	8805883a 	mov	r2,r17
  80854c:	b82b883a 	mov	r21,r23
  808550:	3b19883a 	add	r12,r7,r12
  808554:	6023883a 	mov	r17,r12
  808558:	a007883a 	mov	r3,r20
  80855c:	dc800f15 	stw	r18,60(sp)
  808560:	000d883a 	mov	r6,zero
  808564:	01d00934 	movhi	r7,16420
  808568:	1009883a 	mov	r4,r2
  80856c:	180b883a 	mov	r5,r3
  808570:	08035200 	call	803520 <__muldf3>
  808574:	180b883a 	mov	r5,r3
  808578:	1009883a 	mov	r4,r2
  80857c:	1829883a 	mov	r20,r3
  808580:	1025883a 	mov	r18,r2
  808584:	08045340 	call	804534 <__fixdfsi>
  808588:	1009883a 	mov	r4,r2
  80858c:	1021883a 	mov	r16,r2
  808590:	08045b40 	call	8045b4 <__floatsidf>
  808594:	100d883a 	mov	r6,r2
  808598:	180f883a 	mov	r7,r3
  80859c:	9009883a 	mov	r4,r18
  8085a0:	a00b883a 	mov	r5,r20
  8085a4:	84000c04 	addi	r16,r16,48
  8085a8:	0803c380 	call	803c38 <__subdf3>
  8085ac:	ad400044 	addi	r21,r21,1
  8085b0:	ac3fffc5 	stb	r16,-1(r21)
  8085b4:	ac7fea1e 	bne	r21,r17,808560 <__alt_data_end+0xff808560>
  8085b8:	1023883a 	mov	r17,r2
  8085bc:	d8801217 	ldw	r2,72(sp)
  8085c0:	dc800f17 	ldw	r18,60(sp)
  8085c4:	1829883a 	mov	r20,r3
  8085c8:	b8af883a 	add	r23,r23,r2
  8085cc:	d9001417 	ldw	r4,80(sp)
  8085d0:	d9401517 	ldw	r5,84(sp)
  8085d4:	000d883a 	mov	r6,zero
  8085d8:	01cff834 	movhi	r7,16352
  8085dc:	0802b100 	call	802b10 <__adddf3>
  8085e0:	880d883a 	mov	r6,r17
  8085e4:	a00f883a 	mov	r7,r20
  8085e8:	1009883a 	mov	r4,r2
  8085ec:	180b883a 	mov	r5,r3
  8085f0:	080f3980 	call	80f398 <__ledf2>
  8085f4:	10003e0e 	bge	r2,zero,8086f0 <_dtoa_r+0x1548>
  8085f8:	d9001317 	ldw	r4,76(sp)
  8085fc:	bd3fffc3 	ldbu	r20,-1(r23)
  808600:	d9000515 	stw	r4,20(sp)
  808604:	003d3b06 	br	807af4 <__alt_data_end+0xff807af4>
  808608:	0027883a 	mov	r19,zero
  80860c:	003f1b06 	br	80827c <__alt_data_end+0xff80827c>
  808610:	d8800817 	ldw	r2,32(sp)
  808614:	11e9c83a 	sub	r20,r2,r7
  808618:	0005883a 	mov	r2,zero
  80861c:	003d5406 	br	807b70 <__alt_data_end+0xff807b70>
  808620:	00800044 	movi	r2,1
  808624:	003dc706 	br	807d44 <__alt_data_end+0xff807d44>
  808628:	d8c00217 	ldw	r3,8(sp)
  80862c:	00800d84 	movi	r2,54
  808630:	dd400a17 	ldw	r21,40(sp)
  808634:	10c5c83a 	sub	r2,r2,r3
  808638:	dd000817 	ldw	r20,32(sp)
  80863c:	003d4c06 	br	807b70 <__alt_data_end+0xff807b70>
  808640:	dc800f15 	stw	r18,60(sp)
  808644:	dcc01015 	stw	r19,64(sp)
  808648:	04000084 	movi	r16,2
  80864c:	003bed06 	br	807604 <__alt_data_end+0xff807604>
  808650:	d9000617 	ldw	r4,24(sp)
  808654:	203f0d26 	beq	r4,zero,80828c <__alt_data_end+0xff80828c>
  808658:	d9800c17 	ldw	r6,48(sp)
  80865c:	01bcab0e 	bge	zero,r6,80790c <__alt_data_end+0xff80790c>
  808660:	d9401017 	ldw	r5,64(sp)
  808664:	d9000f17 	ldw	r4,60(sp)
  808668:	000d883a 	mov	r6,zero
  80866c:	01d00934 	movhi	r7,16420
  808670:	08035200 	call	803520 <__muldf3>
  808674:	81000044 	addi	r4,r16,1
  808678:	d8800f15 	stw	r2,60(sp)
  80867c:	d8c01015 	stw	r3,64(sp)
  808680:	08045b40 	call	8045b4 <__floatsidf>
  808684:	d9800f17 	ldw	r6,60(sp)
  808688:	d9c01017 	ldw	r7,64(sp)
  80868c:	1009883a 	mov	r4,r2
  808690:	180b883a 	mov	r5,r3
  808694:	08035200 	call	803520 <__muldf3>
  808698:	01d00734 	movhi	r7,16412
  80869c:	000d883a 	mov	r6,zero
  8086a0:	1009883a 	mov	r4,r2
  8086a4:	180b883a 	mov	r5,r3
  8086a8:	0802b100 	call	802b10 <__adddf3>
  8086ac:	d9c00517 	ldw	r7,20(sp)
  8086b0:	047f3034 	movhi	r17,64704
  8086b4:	1021883a 	mov	r16,r2
  8086b8:	39ffffc4 	addi	r7,r7,-1
  8086bc:	d9c01315 	stw	r7,76(sp)
  8086c0:	1c63883a 	add	r17,r3,r17
  8086c4:	db000c17 	ldw	r12,48(sp)
  8086c8:	003bea06 	br	807674 <__alt_data_end+0xff807674>
  8086cc:	dc000915 	stw	r16,36(sp)
  8086d0:	003e0e06 	br	807f0c <__alt_data_end+0xff807f0c>
  8086d4:	01000e44 	movi	r4,57
  8086d8:	8825883a 	mov	r18,r17
  8086dc:	9dc00044 	addi	r23,r19,1
  8086e0:	99000005 	stb	r4,0(r19)
  8086e4:	a023883a 	mov	r17,r20
  8086e8:	dc000915 	stw	r16,36(sp)
  8086ec:	003da406 	br	807d80 <__alt_data_end+0xff807d80>
  8086f0:	d9801417 	ldw	r6,80(sp)
  8086f4:	d9c01517 	ldw	r7,84(sp)
  8086f8:	0009883a 	mov	r4,zero
  8086fc:	014ff834 	movhi	r5,16352
  808700:	0803c380 	call	803c38 <__subdf3>
  808704:	880d883a 	mov	r6,r17
  808708:	a00f883a 	mov	r7,r20
  80870c:	1009883a 	mov	r4,r2
  808710:	180b883a 	mov	r5,r3
  808714:	08034440 	call	803444 <__gedf2>
  808718:	00bc7c0e 	bge	zero,r2,80790c <__alt_data_end+0xff80790c>
  80871c:	01000c04 	movi	r4,48
  808720:	00000106 	br	808728 <_dtoa_r+0x1580>
  808724:	102f883a 	mov	r23,r2
  808728:	b8bfffc4 	addi	r2,r23,-1
  80872c:	10c00007 	ldb	r3,0(r2)
  808730:	193ffc26 	beq	r3,r4,808724 <__alt_data_end+0xff808724>
  808734:	d9801317 	ldw	r6,76(sp)
  808738:	d9800515 	stw	r6,20(sp)
  80873c:	003c4406 	br	807850 <__alt_data_end+0xff807850>
  808740:	d9801317 	ldw	r6,76(sp)
  808744:	d9800515 	stw	r6,20(sp)
  808748:	003cea06 	br	807af4 <__alt_data_end+0xff807af4>
  80874c:	dd800f17 	ldw	r22,60(sp)
  808750:	dcc01017 	ldw	r19,64(sp)
  808754:	dc801217 	ldw	r18,72(sp)
  808758:	003c6c06 	br	80790c <__alt_data_end+0xff80790c>
  80875c:	903e031e 	bne	r18,zero,807f6c <__alt_data_end+0xff807f6c>
  808760:	003ebb06 	br	808250 <__alt_data_end+0xff808250>
  808764:	103e6c1e 	bne	r2,zero,808118 <__alt_data_end+0xff808118>
  808768:	4080004c 	andi	r2,r8,1
  80876c:	103e6a26 	beq	r2,zero,808118 <__alt_data_end+0xff808118>
  808770:	003e6606 	br	80810c <__alt_data_end+0xff80810c>
  808774:	d8c00317 	ldw	r3,12(sp)
  808778:	00800084 	movi	r2,2
  80877c:	10c02916 	blt	r2,r3,808824 <_dtoa_r+0x167c>
  808780:	d9000c17 	ldw	r4,48(sp)
  808784:	003e8806 	br	8081a8 <__alt_data_end+0xff8081a8>
  808788:	04000084 	movi	r16,2
  80878c:	003b9d06 	br	807604 <__alt_data_end+0xff807604>
  808790:	d9001317 	ldw	r4,76(sp)
  808794:	d9000515 	stw	r4,20(sp)
  808798:	003cd606 	br	807af4 <__alt_data_end+0xff807af4>
  80879c:	d8801317 	ldw	r2,76(sp)
  8087a0:	d8800515 	stw	r2,20(sp)
  8087a4:	003c2a06 	br	807850 <__alt_data_end+0xff807850>
  8087a8:	d9800317 	ldw	r6,12(sp)
  8087ac:	00800084 	movi	r2,2
  8087b0:	11801516 	blt	r2,r6,808808 <_dtoa_r+0x1660>
  8087b4:	d9c00c17 	ldw	r7,48(sp)
  8087b8:	d9c00615 	stw	r7,24(sp)
  8087bc:	003df706 	br	807f9c <__alt_data_end+0xff807f9c>
  8087c0:	193d3926 	beq	r3,r4,807ca8 <__alt_data_end+0xff807ca8>
  8087c4:	00c00f04 	movi	r3,60
  8087c8:	1885c83a 	sub	r2,r3,r2
  8087cc:	003ddf06 	br	807f4c <__alt_data_end+0xff807f4c>
  8087d0:	e009883a 	mov	r4,fp
  8087d4:	e0001115 	stw	zero,68(fp)
  8087d8:	000b883a 	mov	r5,zero
  8087dc:	080a8440 	call	80a844 <_Balloc>
  8087e0:	d8800715 	stw	r2,28(sp)
  8087e4:	d8c00717 	ldw	r3,28(sp)
  8087e8:	00bfffc4 	movi	r2,-1
  8087ec:	01000044 	movi	r4,1
  8087f0:	d8800c15 	stw	r2,48(sp)
  8087f4:	e0c01015 	stw	r3,64(fp)
  8087f8:	d9000b15 	stw	r4,44(sp)
  8087fc:	d8800615 	stw	r2,24(sp)
  808800:	d8002215 	stw	zero,136(sp)
  808804:	003c4106 	br	80790c <__alt_data_end+0xff80790c>
  808808:	d8c00c17 	ldw	r3,48(sp)
  80880c:	d8c00615 	stw	r3,24(sp)
  808810:	003e7006 	br	8081d4 <__alt_data_end+0xff8081d4>
  808814:	04400044 	movi	r17,1
  808818:	003b2006 	br	80749c <__alt_data_end+0xff80749c>
  80881c:	000b883a 	mov	r5,zero
  808820:	003b3d06 	br	807518 <__alt_data_end+0xff807518>
  808824:	d8800c17 	ldw	r2,48(sp)
  808828:	d8800615 	stw	r2,24(sp)
  80882c:	003e6906 	br	8081d4 <__alt_data_end+0xff8081d4>

00808830 <__sflush_r>:
  808830:	2880030b 	ldhu	r2,12(r5)
  808834:	defffb04 	addi	sp,sp,-20
  808838:	dcc00315 	stw	r19,12(sp)
  80883c:	dc400115 	stw	r17,4(sp)
  808840:	dfc00415 	stw	ra,16(sp)
  808844:	dc800215 	stw	r18,8(sp)
  808848:	dc000015 	stw	r16,0(sp)
  80884c:	10c0020c 	andi	r3,r2,8
  808850:	2823883a 	mov	r17,r5
  808854:	2027883a 	mov	r19,r4
  808858:	1800311e 	bne	r3,zero,808920 <__sflush_r+0xf0>
  80885c:	28c00117 	ldw	r3,4(r5)
  808860:	10820014 	ori	r2,r2,2048
  808864:	2880030d 	sth	r2,12(r5)
  808868:	00c04b0e 	bge	zero,r3,808998 <__sflush_r+0x168>
  80886c:	8a000a17 	ldw	r8,40(r17)
  808870:	40002326 	beq	r8,zero,808900 <__sflush_r+0xd0>
  808874:	9c000017 	ldw	r16,0(r19)
  808878:	10c4000c 	andi	r3,r2,4096
  80887c:	98000015 	stw	zero,0(r19)
  808880:	18004826 	beq	r3,zero,8089a4 <__sflush_r+0x174>
  808884:	89801417 	ldw	r6,80(r17)
  808888:	10c0010c 	andi	r3,r2,4
  80888c:	18000626 	beq	r3,zero,8088a8 <__sflush_r+0x78>
  808890:	88c00117 	ldw	r3,4(r17)
  808894:	88800c17 	ldw	r2,48(r17)
  808898:	30cdc83a 	sub	r6,r6,r3
  80889c:	10000226 	beq	r2,zero,8088a8 <__sflush_r+0x78>
  8088a0:	88800f17 	ldw	r2,60(r17)
  8088a4:	308dc83a 	sub	r6,r6,r2
  8088a8:	89400717 	ldw	r5,28(r17)
  8088ac:	000f883a 	mov	r7,zero
  8088b0:	9809883a 	mov	r4,r19
  8088b4:	403ee83a 	callr	r8
  8088b8:	00ffffc4 	movi	r3,-1
  8088bc:	10c04426 	beq	r2,r3,8089d0 <__sflush_r+0x1a0>
  8088c0:	88c0030b 	ldhu	r3,12(r17)
  8088c4:	89000417 	ldw	r4,16(r17)
  8088c8:	88000115 	stw	zero,4(r17)
  8088cc:	197dffcc 	andi	r5,r3,63487
  8088d0:	8940030d 	sth	r5,12(r17)
  8088d4:	89000015 	stw	r4,0(r17)
  8088d8:	18c4000c 	andi	r3,r3,4096
  8088dc:	18002c1e 	bne	r3,zero,808990 <__sflush_r+0x160>
  8088e0:	89400c17 	ldw	r5,48(r17)
  8088e4:	9c000015 	stw	r16,0(r19)
  8088e8:	28000526 	beq	r5,zero,808900 <__sflush_r+0xd0>
  8088ec:	88801004 	addi	r2,r17,64
  8088f0:	28800226 	beq	r5,r2,8088fc <__sflush_r+0xcc>
  8088f4:	9809883a 	mov	r4,r19
  8088f8:	0808f9c0 	call	808f9c <_free_r>
  8088fc:	88000c15 	stw	zero,48(r17)
  808900:	0005883a 	mov	r2,zero
  808904:	dfc00417 	ldw	ra,16(sp)
  808908:	dcc00317 	ldw	r19,12(sp)
  80890c:	dc800217 	ldw	r18,8(sp)
  808910:	dc400117 	ldw	r17,4(sp)
  808914:	dc000017 	ldw	r16,0(sp)
  808918:	dec00504 	addi	sp,sp,20
  80891c:	f800283a 	ret
  808920:	2c800417 	ldw	r18,16(r5)
  808924:	903ff626 	beq	r18,zero,808900 <__alt_data_end+0xff808900>
  808928:	2c000017 	ldw	r16,0(r5)
  80892c:	108000cc 	andi	r2,r2,3
  808930:	2c800015 	stw	r18,0(r5)
  808934:	84a1c83a 	sub	r16,r16,r18
  808938:	1000131e 	bne	r2,zero,808988 <__sflush_r+0x158>
  80893c:	28800517 	ldw	r2,20(r5)
  808940:	88800215 	stw	r2,8(r17)
  808944:	04000316 	blt	zero,r16,808954 <__sflush_r+0x124>
  808948:	003fed06 	br	808900 <__alt_data_end+0xff808900>
  80894c:	90a5883a 	add	r18,r18,r2
  808950:	043feb0e 	bge	zero,r16,808900 <__alt_data_end+0xff808900>
  808954:	88800917 	ldw	r2,36(r17)
  808958:	89400717 	ldw	r5,28(r17)
  80895c:	800f883a 	mov	r7,r16
  808960:	900d883a 	mov	r6,r18
  808964:	9809883a 	mov	r4,r19
  808968:	103ee83a 	callr	r2
  80896c:	80a1c83a 	sub	r16,r16,r2
  808970:	00bff616 	blt	zero,r2,80894c <__alt_data_end+0xff80894c>
  808974:	88c0030b 	ldhu	r3,12(r17)
  808978:	00bfffc4 	movi	r2,-1
  80897c:	18c01014 	ori	r3,r3,64
  808980:	88c0030d 	sth	r3,12(r17)
  808984:	003fdf06 	br	808904 <__alt_data_end+0xff808904>
  808988:	0005883a 	mov	r2,zero
  80898c:	003fec06 	br	808940 <__alt_data_end+0xff808940>
  808990:	88801415 	stw	r2,80(r17)
  808994:	003fd206 	br	8088e0 <__alt_data_end+0xff8088e0>
  808998:	28c00f17 	ldw	r3,60(r5)
  80899c:	00ffb316 	blt	zero,r3,80886c <__alt_data_end+0xff80886c>
  8089a0:	003fd706 	br	808900 <__alt_data_end+0xff808900>
  8089a4:	89400717 	ldw	r5,28(r17)
  8089a8:	000d883a 	mov	r6,zero
  8089ac:	01c00044 	movi	r7,1
  8089b0:	9809883a 	mov	r4,r19
  8089b4:	403ee83a 	callr	r8
  8089b8:	100d883a 	mov	r6,r2
  8089bc:	00bfffc4 	movi	r2,-1
  8089c0:	30801426 	beq	r6,r2,808a14 <__sflush_r+0x1e4>
  8089c4:	8880030b 	ldhu	r2,12(r17)
  8089c8:	8a000a17 	ldw	r8,40(r17)
  8089cc:	003fae06 	br	808888 <__alt_data_end+0xff808888>
  8089d0:	98c00017 	ldw	r3,0(r19)
  8089d4:	183fba26 	beq	r3,zero,8088c0 <__alt_data_end+0xff8088c0>
  8089d8:	01000744 	movi	r4,29
  8089dc:	19000626 	beq	r3,r4,8089f8 <__sflush_r+0x1c8>
  8089e0:	01000584 	movi	r4,22
  8089e4:	19000426 	beq	r3,r4,8089f8 <__sflush_r+0x1c8>
  8089e8:	88c0030b 	ldhu	r3,12(r17)
  8089ec:	18c01014 	ori	r3,r3,64
  8089f0:	88c0030d 	sth	r3,12(r17)
  8089f4:	003fc306 	br	808904 <__alt_data_end+0xff808904>
  8089f8:	8880030b 	ldhu	r2,12(r17)
  8089fc:	88c00417 	ldw	r3,16(r17)
  808a00:	88000115 	stw	zero,4(r17)
  808a04:	10bdffcc 	andi	r2,r2,63487
  808a08:	8880030d 	sth	r2,12(r17)
  808a0c:	88c00015 	stw	r3,0(r17)
  808a10:	003fb306 	br	8088e0 <__alt_data_end+0xff8088e0>
  808a14:	98800017 	ldw	r2,0(r19)
  808a18:	103fea26 	beq	r2,zero,8089c4 <__alt_data_end+0xff8089c4>
  808a1c:	00c00744 	movi	r3,29
  808a20:	10c00226 	beq	r2,r3,808a2c <__sflush_r+0x1fc>
  808a24:	00c00584 	movi	r3,22
  808a28:	10c0031e 	bne	r2,r3,808a38 <__sflush_r+0x208>
  808a2c:	9c000015 	stw	r16,0(r19)
  808a30:	0005883a 	mov	r2,zero
  808a34:	003fb306 	br	808904 <__alt_data_end+0xff808904>
  808a38:	88c0030b 	ldhu	r3,12(r17)
  808a3c:	3005883a 	mov	r2,r6
  808a40:	18c01014 	ori	r3,r3,64
  808a44:	88c0030d 	sth	r3,12(r17)
  808a48:	003fae06 	br	808904 <__alt_data_end+0xff808904>

00808a4c <_fflush_r>:
  808a4c:	defffd04 	addi	sp,sp,-12
  808a50:	dc000115 	stw	r16,4(sp)
  808a54:	dfc00215 	stw	ra,8(sp)
  808a58:	2021883a 	mov	r16,r4
  808a5c:	20000226 	beq	r4,zero,808a68 <_fflush_r+0x1c>
  808a60:	20800e17 	ldw	r2,56(r4)
  808a64:	10000c26 	beq	r2,zero,808a98 <_fflush_r+0x4c>
  808a68:	2880030f 	ldh	r2,12(r5)
  808a6c:	1000051e 	bne	r2,zero,808a84 <_fflush_r+0x38>
  808a70:	0005883a 	mov	r2,zero
  808a74:	dfc00217 	ldw	ra,8(sp)
  808a78:	dc000117 	ldw	r16,4(sp)
  808a7c:	dec00304 	addi	sp,sp,12
  808a80:	f800283a 	ret
  808a84:	8009883a 	mov	r4,r16
  808a88:	dfc00217 	ldw	ra,8(sp)
  808a8c:	dc000117 	ldw	r16,4(sp)
  808a90:	dec00304 	addi	sp,sp,12
  808a94:	08088301 	jmpi	808830 <__sflush_r>
  808a98:	d9400015 	stw	r5,0(sp)
  808a9c:	0808e280 	call	808e28 <__sinit>
  808aa0:	d9400017 	ldw	r5,0(sp)
  808aa4:	003ff006 	br	808a68 <__alt_data_end+0xff808a68>

00808aa8 <fflush>:
  808aa8:	20000526 	beq	r4,zero,808ac0 <fflush+0x18>
  808aac:	00802074 	movhi	r2,129
  808ab0:	108f5204 	addi	r2,r2,15688
  808ab4:	200b883a 	mov	r5,r4
  808ab8:	11000017 	ldw	r4,0(r2)
  808abc:	0808a4c1 	jmpi	808a4c <_fflush_r>
  808ac0:	00802074 	movhi	r2,129
  808ac4:	108f5104 	addi	r2,r2,15684
  808ac8:	11000017 	ldw	r4,0(r2)
  808acc:	01402074 	movhi	r5,129
  808ad0:	29629304 	addi	r5,r5,-30132
  808ad4:	080982c1 	jmpi	80982c <_fwalk_reent>

00808ad8 <__fp_unlock>:
  808ad8:	0005883a 	mov	r2,zero
  808adc:	f800283a 	ret

00808ae0 <_cleanup_r>:
  808ae0:	01402074 	movhi	r5,129
  808ae4:	29761104 	addi	r5,r5,-10172
  808ae8:	080982c1 	jmpi	80982c <_fwalk_reent>

00808aec <__sinit.part.1>:
  808aec:	defff704 	addi	sp,sp,-36
  808af0:	00c02074 	movhi	r3,129
  808af4:	dfc00815 	stw	ra,32(sp)
  808af8:	ddc00715 	stw	r23,28(sp)
  808afc:	dd800615 	stw	r22,24(sp)
  808b00:	dd400515 	stw	r21,20(sp)
  808b04:	dd000415 	stw	r20,16(sp)
  808b08:	dcc00315 	stw	r19,12(sp)
  808b0c:	dc800215 	stw	r18,8(sp)
  808b10:	dc400115 	stw	r17,4(sp)
  808b14:	dc000015 	stw	r16,0(sp)
  808b18:	18e2b804 	addi	r3,r3,-29984
  808b1c:	24000117 	ldw	r16,4(r4)
  808b20:	20c00f15 	stw	r3,60(r4)
  808b24:	2080bb04 	addi	r2,r4,748
  808b28:	00c000c4 	movi	r3,3
  808b2c:	20c0b915 	stw	r3,740(r4)
  808b30:	2080ba15 	stw	r2,744(r4)
  808b34:	2000b815 	stw	zero,736(r4)
  808b38:	05c00204 	movi	r23,8
  808b3c:	00800104 	movi	r2,4
  808b40:	2025883a 	mov	r18,r4
  808b44:	b80d883a 	mov	r6,r23
  808b48:	81001704 	addi	r4,r16,92
  808b4c:	000b883a 	mov	r5,zero
  808b50:	80000015 	stw	zero,0(r16)
  808b54:	80000115 	stw	zero,4(r16)
  808b58:	80000215 	stw	zero,8(r16)
  808b5c:	8080030d 	sth	r2,12(r16)
  808b60:	80001915 	stw	zero,100(r16)
  808b64:	8000038d 	sth	zero,14(r16)
  808b68:	80000415 	stw	zero,16(r16)
  808b6c:	80000515 	stw	zero,20(r16)
  808b70:	80000615 	stw	zero,24(r16)
  808b74:	080a71c0 	call	80a71c <memset>
  808b78:	05802074 	movhi	r22,129
  808b7c:	94400217 	ldw	r17,8(r18)
  808b80:	05402074 	movhi	r21,129
  808b84:	05002074 	movhi	r20,129
  808b88:	04c02074 	movhi	r19,129
  808b8c:	b5af9b04 	addi	r22,r22,-16788
  808b90:	ad6fb204 	addi	r21,r21,-16696
  808b94:	a52fd104 	addi	r20,r20,-16572
  808b98:	9cefe804 	addi	r19,r19,-16480
  808b9c:	85800815 	stw	r22,32(r16)
  808ba0:	85400915 	stw	r21,36(r16)
  808ba4:	85000a15 	stw	r20,40(r16)
  808ba8:	84c00b15 	stw	r19,44(r16)
  808bac:	84000715 	stw	r16,28(r16)
  808bb0:	00800284 	movi	r2,10
  808bb4:	8880030d 	sth	r2,12(r17)
  808bb8:	00800044 	movi	r2,1
  808bbc:	b80d883a 	mov	r6,r23
  808bc0:	89001704 	addi	r4,r17,92
  808bc4:	000b883a 	mov	r5,zero
  808bc8:	88000015 	stw	zero,0(r17)
  808bcc:	88000115 	stw	zero,4(r17)
  808bd0:	88000215 	stw	zero,8(r17)
  808bd4:	88001915 	stw	zero,100(r17)
  808bd8:	8880038d 	sth	r2,14(r17)
  808bdc:	88000415 	stw	zero,16(r17)
  808be0:	88000515 	stw	zero,20(r17)
  808be4:	88000615 	stw	zero,24(r17)
  808be8:	080a71c0 	call	80a71c <memset>
  808bec:	94000317 	ldw	r16,12(r18)
  808bf0:	00800484 	movi	r2,18
  808bf4:	8c400715 	stw	r17,28(r17)
  808bf8:	8d800815 	stw	r22,32(r17)
  808bfc:	8d400915 	stw	r21,36(r17)
  808c00:	8d000a15 	stw	r20,40(r17)
  808c04:	8cc00b15 	stw	r19,44(r17)
  808c08:	8080030d 	sth	r2,12(r16)
  808c0c:	00800084 	movi	r2,2
  808c10:	80000015 	stw	zero,0(r16)
  808c14:	80000115 	stw	zero,4(r16)
  808c18:	80000215 	stw	zero,8(r16)
  808c1c:	80001915 	stw	zero,100(r16)
  808c20:	8080038d 	sth	r2,14(r16)
  808c24:	80000415 	stw	zero,16(r16)
  808c28:	80000515 	stw	zero,20(r16)
  808c2c:	80000615 	stw	zero,24(r16)
  808c30:	b80d883a 	mov	r6,r23
  808c34:	000b883a 	mov	r5,zero
  808c38:	81001704 	addi	r4,r16,92
  808c3c:	080a71c0 	call	80a71c <memset>
  808c40:	00800044 	movi	r2,1
  808c44:	84000715 	stw	r16,28(r16)
  808c48:	85800815 	stw	r22,32(r16)
  808c4c:	85400915 	stw	r21,36(r16)
  808c50:	85000a15 	stw	r20,40(r16)
  808c54:	84c00b15 	stw	r19,44(r16)
  808c58:	90800e15 	stw	r2,56(r18)
  808c5c:	dfc00817 	ldw	ra,32(sp)
  808c60:	ddc00717 	ldw	r23,28(sp)
  808c64:	dd800617 	ldw	r22,24(sp)
  808c68:	dd400517 	ldw	r21,20(sp)
  808c6c:	dd000417 	ldw	r20,16(sp)
  808c70:	dcc00317 	ldw	r19,12(sp)
  808c74:	dc800217 	ldw	r18,8(sp)
  808c78:	dc400117 	ldw	r17,4(sp)
  808c7c:	dc000017 	ldw	r16,0(sp)
  808c80:	dec00904 	addi	sp,sp,36
  808c84:	f800283a 	ret

00808c88 <__fp_lock>:
  808c88:	0005883a 	mov	r2,zero
  808c8c:	f800283a 	ret

00808c90 <__sfmoreglue>:
  808c90:	defffc04 	addi	sp,sp,-16
  808c94:	dc400115 	stw	r17,4(sp)
  808c98:	2c7fffc4 	addi	r17,r5,-1
  808c9c:	8c401a24 	muli	r17,r17,104
  808ca0:	dc800215 	stw	r18,8(sp)
  808ca4:	2825883a 	mov	r18,r5
  808ca8:	89401d04 	addi	r5,r17,116
  808cac:	dc000015 	stw	r16,0(sp)
  808cb0:	dfc00315 	stw	ra,12(sp)
  808cb4:	0809b880 	call	809b88 <_malloc_r>
  808cb8:	1021883a 	mov	r16,r2
  808cbc:	10000726 	beq	r2,zero,808cdc <__sfmoreglue+0x4c>
  808cc0:	11000304 	addi	r4,r2,12
  808cc4:	10000015 	stw	zero,0(r2)
  808cc8:	14800115 	stw	r18,4(r2)
  808ccc:	11000215 	stw	r4,8(r2)
  808cd0:	89801a04 	addi	r6,r17,104
  808cd4:	000b883a 	mov	r5,zero
  808cd8:	080a71c0 	call	80a71c <memset>
  808cdc:	8005883a 	mov	r2,r16
  808ce0:	dfc00317 	ldw	ra,12(sp)
  808ce4:	dc800217 	ldw	r18,8(sp)
  808ce8:	dc400117 	ldw	r17,4(sp)
  808cec:	dc000017 	ldw	r16,0(sp)
  808cf0:	dec00404 	addi	sp,sp,16
  808cf4:	f800283a 	ret

00808cf8 <__sfp>:
  808cf8:	defffb04 	addi	sp,sp,-20
  808cfc:	dc000015 	stw	r16,0(sp)
  808d00:	04002074 	movhi	r16,129
  808d04:	840f5104 	addi	r16,r16,15684
  808d08:	dcc00315 	stw	r19,12(sp)
  808d0c:	2027883a 	mov	r19,r4
  808d10:	81000017 	ldw	r4,0(r16)
  808d14:	dfc00415 	stw	ra,16(sp)
  808d18:	dc800215 	stw	r18,8(sp)
  808d1c:	20800e17 	ldw	r2,56(r4)
  808d20:	dc400115 	stw	r17,4(sp)
  808d24:	1000021e 	bne	r2,zero,808d30 <__sfp+0x38>
  808d28:	0808aec0 	call	808aec <__sinit.part.1>
  808d2c:	81000017 	ldw	r4,0(r16)
  808d30:	2480b804 	addi	r18,r4,736
  808d34:	047fffc4 	movi	r17,-1
  808d38:	91000117 	ldw	r4,4(r18)
  808d3c:	94000217 	ldw	r16,8(r18)
  808d40:	213fffc4 	addi	r4,r4,-1
  808d44:	20000a16 	blt	r4,zero,808d70 <__sfp+0x78>
  808d48:	8080030f 	ldh	r2,12(r16)
  808d4c:	10000c26 	beq	r2,zero,808d80 <__sfp+0x88>
  808d50:	80c01d04 	addi	r3,r16,116
  808d54:	00000206 	br	808d60 <__sfp+0x68>
  808d58:	18bfe60f 	ldh	r2,-104(r3)
  808d5c:	10000826 	beq	r2,zero,808d80 <__sfp+0x88>
  808d60:	213fffc4 	addi	r4,r4,-1
  808d64:	1c3ffd04 	addi	r16,r3,-12
  808d68:	18c01a04 	addi	r3,r3,104
  808d6c:	247ffa1e 	bne	r4,r17,808d58 <__alt_data_end+0xff808d58>
  808d70:	90800017 	ldw	r2,0(r18)
  808d74:	10001d26 	beq	r2,zero,808dec <__sfp+0xf4>
  808d78:	1025883a 	mov	r18,r2
  808d7c:	003fee06 	br	808d38 <__alt_data_end+0xff808d38>
  808d80:	00bfffc4 	movi	r2,-1
  808d84:	8080038d 	sth	r2,14(r16)
  808d88:	00800044 	movi	r2,1
  808d8c:	8080030d 	sth	r2,12(r16)
  808d90:	80001915 	stw	zero,100(r16)
  808d94:	80000015 	stw	zero,0(r16)
  808d98:	80000215 	stw	zero,8(r16)
  808d9c:	80000115 	stw	zero,4(r16)
  808da0:	80000415 	stw	zero,16(r16)
  808da4:	80000515 	stw	zero,20(r16)
  808da8:	80000615 	stw	zero,24(r16)
  808dac:	01800204 	movi	r6,8
  808db0:	000b883a 	mov	r5,zero
  808db4:	81001704 	addi	r4,r16,92
  808db8:	080a71c0 	call	80a71c <memset>
  808dbc:	8005883a 	mov	r2,r16
  808dc0:	80000c15 	stw	zero,48(r16)
  808dc4:	80000d15 	stw	zero,52(r16)
  808dc8:	80001115 	stw	zero,68(r16)
  808dcc:	80001215 	stw	zero,72(r16)
  808dd0:	dfc00417 	ldw	ra,16(sp)
  808dd4:	dcc00317 	ldw	r19,12(sp)
  808dd8:	dc800217 	ldw	r18,8(sp)
  808ddc:	dc400117 	ldw	r17,4(sp)
  808de0:	dc000017 	ldw	r16,0(sp)
  808de4:	dec00504 	addi	sp,sp,20
  808de8:	f800283a 	ret
  808dec:	01400104 	movi	r5,4
  808df0:	9809883a 	mov	r4,r19
  808df4:	0808c900 	call	808c90 <__sfmoreglue>
  808df8:	90800015 	stw	r2,0(r18)
  808dfc:	103fde1e 	bne	r2,zero,808d78 <__alt_data_end+0xff808d78>
  808e00:	00800304 	movi	r2,12
  808e04:	98800015 	stw	r2,0(r19)
  808e08:	0005883a 	mov	r2,zero
  808e0c:	003ff006 	br	808dd0 <__alt_data_end+0xff808dd0>

00808e10 <_cleanup>:
  808e10:	00802074 	movhi	r2,129
  808e14:	108f5104 	addi	r2,r2,15684
  808e18:	11000017 	ldw	r4,0(r2)
  808e1c:	01402074 	movhi	r5,129
  808e20:	29761104 	addi	r5,r5,-10172
  808e24:	080982c1 	jmpi	80982c <_fwalk_reent>

00808e28 <__sinit>:
  808e28:	20800e17 	ldw	r2,56(r4)
  808e2c:	10000126 	beq	r2,zero,808e34 <__sinit+0xc>
  808e30:	f800283a 	ret
  808e34:	0808aec1 	jmpi	808aec <__sinit.part.1>

00808e38 <__sfp_lock_acquire>:
  808e38:	f800283a 	ret

00808e3c <__sfp_lock_release>:
  808e3c:	f800283a 	ret

00808e40 <__sinit_lock_acquire>:
  808e40:	f800283a 	ret

00808e44 <__sinit_lock_release>:
  808e44:	f800283a 	ret

00808e48 <__fp_lock_all>:
  808e48:	00802074 	movhi	r2,129
  808e4c:	108f5204 	addi	r2,r2,15688
  808e50:	11000017 	ldw	r4,0(r2)
  808e54:	01402074 	movhi	r5,129
  808e58:	29632204 	addi	r5,r5,-29560
  808e5c:	08097681 	jmpi	809768 <_fwalk>

00808e60 <__fp_unlock_all>:
  808e60:	00802074 	movhi	r2,129
  808e64:	108f5204 	addi	r2,r2,15688
  808e68:	11000017 	ldw	r4,0(r2)
  808e6c:	01402074 	movhi	r5,129
  808e70:	2962b604 	addi	r5,r5,-29992
  808e74:	08097681 	jmpi	809768 <_fwalk>

00808e78 <_malloc_trim_r>:
  808e78:	defffb04 	addi	sp,sp,-20
  808e7c:	dcc00315 	stw	r19,12(sp)
  808e80:	04c02074 	movhi	r19,129
  808e84:	dc800215 	stw	r18,8(sp)
  808e88:	dc400115 	stw	r17,4(sp)
  808e8c:	dc000015 	stw	r16,0(sp)
  808e90:	dfc00415 	stw	ra,16(sp)
  808e94:	2821883a 	mov	r16,r5
  808e98:	9cc9cd04 	addi	r19,r19,10036
  808e9c:	2025883a 	mov	r18,r4
  808ea0:	080fab00 	call	80fab0 <__malloc_lock>
  808ea4:	98800217 	ldw	r2,8(r19)
  808ea8:	14400117 	ldw	r17,4(r2)
  808eac:	00bfff04 	movi	r2,-4
  808eb0:	88a2703a 	and	r17,r17,r2
  808eb4:	8c21c83a 	sub	r16,r17,r16
  808eb8:	8403fbc4 	addi	r16,r16,4079
  808ebc:	8020d33a 	srli	r16,r16,12
  808ec0:	0083ffc4 	movi	r2,4095
  808ec4:	843fffc4 	addi	r16,r16,-1
  808ec8:	8020933a 	slli	r16,r16,12
  808ecc:	1400060e 	bge	r2,r16,808ee8 <_malloc_trim_r+0x70>
  808ed0:	000b883a 	mov	r5,zero
  808ed4:	9009883a 	mov	r4,r18
  808ed8:	080be180 	call	80be18 <_sbrk_r>
  808edc:	98c00217 	ldw	r3,8(r19)
  808ee0:	1c47883a 	add	r3,r3,r17
  808ee4:	10c00a26 	beq	r2,r3,808f10 <_malloc_trim_r+0x98>
  808ee8:	9009883a 	mov	r4,r18
  808eec:	080fad40 	call	80fad4 <__malloc_unlock>
  808ef0:	0005883a 	mov	r2,zero
  808ef4:	dfc00417 	ldw	ra,16(sp)
  808ef8:	dcc00317 	ldw	r19,12(sp)
  808efc:	dc800217 	ldw	r18,8(sp)
  808f00:	dc400117 	ldw	r17,4(sp)
  808f04:	dc000017 	ldw	r16,0(sp)
  808f08:	dec00504 	addi	sp,sp,20
  808f0c:	f800283a 	ret
  808f10:	040bc83a 	sub	r5,zero,r16
  808f14:	9009883a 	mov	r4,r18
  808f18:	080be180 	call	80be18 <_sbrk_r>
  808f1c:	00ffffc4 	movi	r3,-1
  808f20:	10c00d26 	beq	r2,r3,808f58 <_malloc_trim_r+0xe0>
  808f24:	00c02074 	movhi	r3,129
  808f28:	18d62a04 	addi	r3,r3,22696
  808f2c:	18800017 	ldw	r2,0(r3)
  808f30:	99000217 	ldw	r4,8(r19)
  808f34:	8c23c83a 	sub	r17,r17,r16
  808f38:	8c400054 	ori	r17,r17,1
  808f3c:	1421c83a 	sub	r16,r2,r16
  808f40:	24400115 	stw	r17,4(r4)
  808f44:	9009883a 	mov	r4,r18
  808f48:	1c000015 	stw	r16,0(r3)
  808f4c:	080fad40 	call	80fad4 <__malloc_unlock>
  808f50:	00800044 	movi	r2,1
  808f54:	003fe706 	br	808ef4 <__alt_data_end+0xff808ef4>
  808f58:	000b883a 	mov	r5,zero
  808f5c:	9009883a 	mov	r4,r18
  808f60:	080be180 	call	80be18 <_sbrk_r>
  808f64:	99000217 	ldw	r4,8(r19)
  808f68:	014003c4 	movi	r5,15
  808f6c:	1107c83a 	sub	r3,r2,r4
  808f70:	28ffdd0e 	bge	r5,r3,808ee8 <__alt_data_end+0xff808ee8>
  808f74:	01402074 	movhi	r5,129
  808f78:	294f5404 	addi	r5,r5,15696
  808f7c:	29400017 	ldw	r5,0(r5)
  808f80:	18c00054 	ori	r3,r3,1
  808f84:	20c00115 	stw	r3,4(r4)
  808f88:	00c02074 	movhi	r3,129
  808f8c:	1145c83a 	sub	r2,r2,r5
  808f90:	18d62a04 	addi	r3,r3,22696
  808f94:	18800015 	stw	r2,0(r3)
  808f98:	003fd306 	br	808ee8 <__alt_data_end+0xff808ee8>

00808f9c <_free_r>:
  808f9c:	28004126 	beq	r5,zero,8090a4 <_free_r+0x108>
  808fa0:	defffd04 	addi	sp,sp,-12
  808fa4:	dc400115 	stw	r17,4(sp)
  808fa8:	dc000015 	stw	r16,0(sp)
  808fac:	2023883a 	mov	r17,r4
  808fb0:	2821883a 	mov	r16,r5
  808fb4:	dfc00215 	stw	ra,8(sp)
  808fb8:	080fab00 	call	80fab0 <__malloc_lock>
  808fbc:	81ffff17 	ldw	r7,-4(r16)
  808fc0:	00bfff84 	movi	r2,-2
  808fc4:	01002074 	movhi	r4,129
  808fc8:	81bffe04 	addi	r6,r16,-8
  808fcc:	3884703a 	and	r2,r7,r2
  808fd0:	2109cd04 	addi	r4,r4,10036
  808fd4:	308b883a 	add	r5,r6,r2
  808fd8:	2a400117 	ldw	r9,4(r5)
  808fdc:	22000217 	ldw	r8,8(r4)
  808fe0:	00ffff04 	movi	r3,-4
  808fe4:	48c6703a 	and	r3,r9,r3
  808fe8:	2a005726 	beq	r5,r8,809148 <_free_r+0x1ac>
  808fec:	28c00115 	stw	r3,4(r5)
  808ff0:	39c0004c 	andi	r7,r7,1
  808ff4:	3800091e 	bne	r7,zero,80901c <_free_r+0x80>
  808ff8:	823ffe17 	ldw	r8,-8(r16)
  808ffc:	22400204 	addi	r9,r4,8
  809000:	320dc83a 	sub	r6,r6,r8
  809004:	31c00217 	ldw	r7,8(r6)
  809008:	1205883a 	add	r2,r2,r8
  80900c:	3a406526 	beq	r7,r9,8091a4 <_free_r+0x208>
  809010:	32000317 	ldw	r8,12(r6)
  809014:	3a000315 	stw	r8,12(r7)
  809018:	41c00215 	stw	r7,8(r8)
  80901c:	28cf883a 	add	r7,r5,r3
  809020:	39c00117 	ldw	r7,4(r7)
  809024:	39c0004c 	andi	r7,r7,1
  809028:	38003a26 	beq	r7,zero,809114 <_free_r+0x178>
  80902c:	10c00054 	ori	r3,r2,1
  809030:	30c00115 	stw	r3,4(r6)
  809034:	3087883a 	add	r3,r6,r2
  809038:	18800015 	stw	r2,0(r3)
  80903c:	00c07fc4 	movi	r3,511
  809040:	18801936 	bltu	r3,r2,8090a8 <_free_r+0x10c>
  809044:	1004d0fa 	srli	r2,r2,3
  809048:	01c00044 	movi	r7,1
  80904c:	21400117 	ldw	r5,4(r4)
  809050:	10c00044 	addi	r3,r2,1
  809054:	18c7883a 	add	r3,r3,r3
  809058:	1005d0ba 	srai	r2,r2,2
  80905c:	18c7883a 	add	r3,r3,r3
  809060:	18c7883a 	add	r3,r3,r3
  809064:	1907883a 	add	r3,r3,r4
  809068:	3884983a 	sll	r2,r7,r2
  80906c:	19c00017 	ldw	r7,0(r3)
  809070:	1a3ffe04 	addi	r8,r3,-8
  809074:	1144b03a 	or	r2,r2,r5
  809078:	32000315 	stw	r8,12(r6)
  80907c:	31c00215 	stw	r7,8(r6)
  809080:	20800115 	stw	r2,4(r4)
  809084:	19800015 	stw	r6,0(r3)
  809088:	39800315 	stw	r6,12(r7)
  80908c:	8809883a 	mov	r4,r17
  809090:	dfc00217 	ldw	ra,8(sp)
  809094:	dc400117 	ldw	r17,4(sp)
  809098:	dc000017 	ldw	r16,0(sp)
  80909c:	dec00304 	addi	sp,sp,12
  8090a0:	080fad41 	jmpi	80fad4 <__malloc_unlock>
  8090a4:	f800283a 	ret
  8090a8:	100ad27a 	srli	r5,r2,9
  8090ac:	00c00104 	movi	r3,4
  8090b0:	19404a36 	bltu	r3,r5,8091dc <_free_r+0x240>
  8090b4:	100ad1ba 	srli	r5,r2,6
  8090b8:	28c00e44 	addi	r3,r5,57
  8090bc:	18c7883a 	add	r3,r3,r3
  8090c0:	29400e04 	addi	r5,r5,56
  8090c4:	18c7883a 	add	r3,r3,r3
  8090c8:	18c7883a 	add	r3,r3,r3
  8090cc:	1909883a 	add	r4,r3,r4
  8090d0:	20c00017 	ldw	r3,0(r4)
  8090d4:	01c02074 	movhi	r7,129
  8090d8:	213ffe04 	addi	r4,r4,-8
  8090dc:	39c9cd04 	addi	r7,r7,10036
  8090e0:	20c04426 	beq	r4,r3,8091f4 <_free_r+0x258>
  8090e4:	01ffff04 	movi	r7,-4
  8090e8:	19400117 	ldw	r5,4(r3)
  8090ec:	29ca703a 	and	r5,r5,r7
  8090f0:	1140022e 	bgeu	r2,r5,8090fc <_free_r+0x160>
  8090f4:	18c00217 	ldw	r3,8(r3)
  8090f8:	20fffb1e 	bne	r4,r3,8090e8 <__alt_data_end+0xff8090e8>
  8090fc:	19000317 	ldw	r4,12(r3)
  809100:	31000315 	stw	r4,12(r6)
  809104:	30c00215 	stw	r3,8(r6)
  809108:	21800215 	stw	r6,8(r4)
  80910c:	19800315 	stw	r6,12(r3)
  809110:	003fde06 	br	80908c <__alt_data_end+0xff80908c>
  809114:	29c00217 	ldw	r7,8(r5)
  809118:	10c5883a 	add	r2,r2,r3
  80911c:	00c02074 	movhi	r3,129
  809120:	18c9cf04 	addi	r3,r3,10044
  809124:	38c03b26 	beq	r7,r3,809214 <_free_r+0x278>
  809128:	2a000317 	ldw	r8,12(r5)
  80912c:	11400054 	ori	r5,r2,1
  809130:	3087883a 	add	r3,r6,r2
  809134:	3a000315 	stw	r8,12(r7)
  809138:	41c00215 	stw	r7,8(r8)
  80913c:	31400115 	stw	r5,4(r6)
  809140:	18800015 	stw	r2,0(r3)
  809144:	003fbd06 	br	80903c <__alt_data_end+0xff80903c>
  809148:	39c0004c 	andi	r7,r7,1
  80914c:	10c5883a 	add	r2,r2,r3
  809150:	3800071e 	bne	r7,zero,809170 <_free_r+0x1d4>
  809154:	81fffe17 	ldw	r7,-8(r16)
  809158:	31cdc83a 	sub	r6,r6,r7
  80915c:	30c00317 	ldw	r3,12(r6)
  809160:	31400217 	ldw	r5,8(r6)
  809164:	11c5883a 	add	r2,r2,r7
  809168:	28c00315 	stw	r3,12(r5)
  80916c:	19400215 	stw	r5,8(r3)
  809170:	10c00054 	ori	r3,r2,1
  809174:	30c00115 	stw	r3,4(r6)
  809178:	00c02074 	movhi	r3,129
  80917c:	18cf5504 	addi	r3,r3,15700
  809180:	18c00017 	ldw	r3,0(r3)
  809184:	21800215 	stw	r6,8(r4)
  809188:	10ffc036 	bltu	r2,r3,80908c <__alt_data_end+0xff80908c>
  80918c:	00802074 	movhi	r2,129
  809190:	10962104 	addi	r2,r2,22660
  809194:	11400017 	ldw	r5,0(r2)
  809198:	8809883a 	mov	r4,r17
  80919c:	0808e780 	call	808e78 <_malloc_trim_r>
  8091a0:	003fba06 	br	80908c <__alt_data_end+0xff80908c>
  8091a4:	28c9883a 	add	r4,r5,r3
  8091a8:	21000117 	ldw	r4,4(r4)
  8091ac:	2100004c 	andi	r4,r4,1
  8091b0:	2000391e 	bne	r4,zero,809298 <_free_r+0x2fc>
  8091b4:	29c00217 	ldw	r7,8(r5)
  8091b8:	29000317 	ldw	r4,12(r5)
  8091bc:	1885883a 	add	r2,r3,r2
  8091c0:	10c00054 	ori	r3,r2,1
  8091c4:	39000315 	stw	r4,12(r7)
  8091c8:	21c00215 	stw	r7,8(r4)
  8091cc:	30c00115 	stw	r3,4(r6)
  8091d0:	308d883a 	add	r6,r6,r2
  8091d4:	30800015 	stw	r2,0(r6)
  8091d8:	003fac06 	br	80908c <__alt_data_end+0xff80908c>
  8091dc:	00c00504 	movi	r3,20
  8091e0:	19401536 	bltu	r3,r5,809238 <_free_r+0x29c>
  8091e4:	28c01704 	addi	r3,r5,92
  8091e8:	18c7883a 	add	r3,r3,r3
  8091ec:	294016c4 	addi	r5,r5,91
  8091f0:	003fb406 	br	8090c4 <__alt_data_end+0xff8090c4>
  8091f4:	280bd0ba 	srai	r5,r5,2
  8091f8:	00c00044 	movi	r3,1
  8091fc:	38800117 	ldw	r2,4(r7)
  809200:	194a983a 	sll	r5,r3,r5
  809204:	2007883a 	mov	r3,r4
  809208:	2884b03a 	or	r2,r5,r2
  80920c:	38800115 	stw	r2,4(r7)
  809210:	003fbb06 	br	809100 <__alt_data_end+0xff809100>
  809214:	21800515 	stw	r6,20(r4)
  809218:	21800415 	stw	r6,16(r4)
  80921c:	10c00054 	ori	r3,r2,1
  809220:	31c00315 	stw	r7,12(r6)
  809224:	31c00215 	stw	r7,8(r6)
  809228:	30c00115 	stw	r3,4(r6)
  80922c:	308d883a 	add	r6,r6,r2
  809230:	30800015 	stw	r2,0(r6)
  809234:	003f9506 	br	80908c <__alt_data_end+0xff80908c>
  809238:	00c01504 	movi	r3,84
  80923c:	19400536 	bltu	r3,r5,809254 <_free_r+0x2b8>
  809240:	100ad33a 	srli	r5,r2,12
  809244:	28c01bc4 	addi	r3,r5,111
  809248:	18c7883a 	add	r3,r3,r3
  80924c:	29401b84 	addi	r5,r5,110
  809250:	003f9c06 	br	8090c4 <__alt_data_end+0xff8090c4>
  809254:	00c05504 	movi	r3,340
  809258:	19400536 	bltu	r3,r5,809270 <_free_r+0x2d4>
  80925c:	100ad3fa 	srli	r5,r2,15
  809260:	28c01e04 	addi	r3,r5,120
  809264:	18c7883a 	add	r3,r3,r3
  809268:	29401dc4 	addi	r5,r5,119
  80926c:	003f9506 	br	8090c4 <__alt_data_end+0xff8090c4>
  809270:	00c15504 	movi	r3,1364
  809274:	19400536 	bltu	r3,r5,80928c <_free_r+0x2f0>
  809278:	100ad4ba 	srli	r5,r2,18
  80927c:	28c01f44 	addi	r3,r5,125
  809280:	18c7883a 	add	r3,r3,r3
  809284:	29401f04 	addi	r5,r5,124
  809288:	003f8e06 	br	8090c4 <__alt_data_end+0xff8090c4>
  80928c:	00c03f84 	movi	r3,254
  809290:	01401f84 	movi	r5,126
  809294:	003f8b06 	br	8090c4 <__alt_data_end+0xff8090c4>
  809298:	10c00054 	ori	r3,r2,1
  80929c:	30c00115 	stw	r3,4(r6)
  8092a0:	308d883a 	add	r6,r6,r2
  8092a4:	30800015 	stw	r2,0(r6)
  8092a8:	003f7806 	br	80908c <__alt_data_end+0xff80908c>

008092ac <__sfvwrite_r>:
  8092ac:	30800217 	ldw	r2,8(r6)
  8092b0:	10006726 	beq	r2,zero,809450 <__sfvwrite_r+0x1a4>
  8092b4:	28c0030b 	ldhu	r3,12(r5)
  8092b8:	defff404 	addi	sp,sp,-48
  8092bc:	dd400715 	stw	r21,28(sp)
  8092c0:	dd000615 	stw	r20,24(sp)
  8092c4:	dc000215 	stw	r16,8(sp)
  8092c8:	dfc00b15 	stw	ra,44(sp)
  8092cc:	df000a15 	stw	fp,40(sp)
  8092d0:	ddc00915 	stw	r23,36(sp)
  8092d4:	dd800815 	stw	r22,32(sp)
  8092d8:	dcc00515 	stw	r19,20(sp)
  8092dc:	dc800415 	stw	r18,16(sp)
  8092e0:	dc400315 	stw	r17,12(sp)
  8092e4:	1880020c 	andi	r2,r3,8
  8092e8:	2821883a 	mov	r16,r5
  8092ec:	202b883a 	mov	r21,r4
  8092f0:	3029883a 	mov	r20,r6
  8092f4:	10002726 	beq	r2,zero,809394 <__sfvwrite_r+0xe8>
  8092f8:	28800417 	ldw	r2,16(r5)
  8092fc:	10002526 	beq	r2,zero,809394 <__sfvwrite_r+0xe8>
  809300:	1880008c 	andi	r2,r3,2
  809304:	a4400017 	ldw	r17,0(r20)
  809308:	10002a26 	beq	r2,zero,8093b4 <__sfvwrite_r+0x108>
  80930c:	05a00034 	movhi	r22,32768
  809310:	0027883a 	mov	r19,zero
  809314:	0025883a 	mov	r18,zero
  809318:	b5bf0004 	addi	r22,r22,-1024
  80931c:	980d883a 	mov	r6,r19
  809320:	a809883a 	mov	r4,r21
  809324:	90004626 	beq	r18,zero,809440 <__sfvwrite_r+0x194>
  809328:	900f883a 	mov	r7,r18
  80932c:	b480022e 	bgeu	r22,r18,809338 <__sfvwrite_r+0x8c>
  809330:	01e00034 	movhi	r7,32768
  809334:	39ff0004 	addi	r7,r7,-1024
  809338:	80800917 	ldw	r2,36(r16)
  80933c:	81400717 	ldw	r5,28(r16)
  809340:	103ee83a 	callr	r2
  809344:	0080570e 	bge	zero,r2,8094a4 <__sfvwrite_r+0x1f8>
  809348:	a0c00217 	ldw	r3,8(r20)
  80934c:	98a7883a 	add	r19,r19,r2
  809350:	90a5c83a 	sub	r18,r18,r2
  809354:	1885c83a 	sub	r2,r3,r2
  809358:	a0800215 	stw	r2,8(r20)
  80935c:	103fef1e 	bne	r2,zero,80931c <__alt_data_end+0xff80931c>
  809360:	0005883a 	mov	r2,zero
  809364:	dfc00b17 	ldw	ra,44(sp)
  809368:	df000a17 	ldw	fp,40(sp)
  80936c:	ddc00917 	ldw	r23,36(sp)
  809370:	dd800817 	ldw	r22,32(sp)
  809374:	dd400717 	ldw	r21,28(sp)
  809378:	dd000617 	ldw	r20,24(sp)
  80937c:	dcc00517 	ldw	r19,20(sp)
  809380:	dc800417 	ldw	r18,16(sp)
  809384:	dc400317 	ldw	r17,12(sp)
  809388:	dc000217 	ldw	r16,8(sp)
  80938c:	dec00c04 	addi	sp,sp,48
  809390:	f800283a 	ret
  809394:	800b883a 	mov	r5,r16
  809398:	a809883a 	mov	r4,r21
  80939c:	0806e540 	call	806e54 <__swsetup_r>
  8093a0:	1000eb1e 	bne	r2,zero,809750 <__sfvwrite_r+0x4a4>
  8093a4:	80c0030b 	ldhu	r3,12(r16)
  8093a8:	a4400017 	ldw	r17,0(r20)
  8093ac:	1880008c 	andi	r2,r3,2
  8093b0:	103fd61e 	bne	r2,zero,80930c <__alt_data_end+0xff80930c>
  8093b4:	1880004c 	andi	r2,r3,1
  8093b8:	10003f1e 	bne	r2,zero,8094b8 <__sfvwrite_r+0x20c>
  8093bc:	0039883a 	mov	fp,zero
  8093c0:	0025883a 	mov	r18,zero
  8093c4:	90001a26 	beq	r18,zero,809430 <__sfvwrite_r+0x184>
  8093c8:	1880800c 	andi	r2,r3,512
  8093cc:	84c00217 	ldw	r19,8(r16)
  8093d0:	10002126 	beq	r2,zero,809458 <__sfvwrite_r+0x1ac>
  8093d4:	982f883a 	mov	r23,r19
  8093d8:	94c09336 	bltu	r18,r19,809628 <__sfvwrite_r+0x37c>
  8093dc:	1881200c 	andi	r2,r3,1152
  8093e0:	10009e1e 	bne	r2,zero,80965c <__sfvwrite_r+0x3b0>
  8093e4:	81000017 	ldw	r4,0(r16)
  8093e8:	b80d883a 	mov	r6,r23
  8093ec:	e00b883a 	mov	r5,fp
  8093f0:	080a5c00 	call	80a5c0 <memmove>
  8093f4:	80c00217 	ldw	r3,8(r16)
  8093f8:	81000017 	ldw	r4,0(r16)
  8093fc:	9005883a 	mov	r2,r18
  809400:	1ce7c83a 	sub	r19,r3,r19
  809404:	25cf883a 	add	r7,r4,r23
  809408:	84c00215 	stw	r19,8(r16)
  80940c:	81c00015 	stw	r7,0(r16)
  809410:	a0c00217 	ldw	r3,8(r20)
  809414:	e0b9883a 	add	fp,fp,r2
  809418:	90a5c83a 	sub	r18,r18,r2
  80941c:	18a7c83a 	sub	r19,r3,r2
  809420:	a4c00215 	stw	r19,8(r20)
  809424:	983fce26 	beq	r19,zero,809360 <__alt_data_end+0xff809360>
  809428:	80c0030b 	ldhu	r3,12(r16)
  80942c:	903fe61e 	bne	r18,zero,8093c8 <__alt_data_end+0xff8093c8>
  809430:	8f000017 	ldw	fp,0(r17)
  809434:	8c800117 	ldw	r18,4(r17)
  809438:	8c400204 	addi	r17,r17,8
  80943c:	003fe106 	br	8093c4 <__alt_data_end+0xff8093c4>
  809440:	8cc00017 	ldw	r19,0(r17)
  809444:	8c800117 	ldw	r18,4(r17)
  809448:	8c400204 	addi	r17,r17,8
  80944c:	003fb306 	br	80931c <__alt_data_end+0xff80931c>
  809450:	0005883a 	mov	r2,zero
  809454:	f800283a 	ret
  809458:	81000017 	ldw	r4,0(r16)
  80945c:	80800417 	ldw	r2,16(r16)
  809460:	11005736 	bltu	r2,r4,8095c0 <__sfvwrite_r+0x314>
  809464:	85c00517 	ldw	r23,20(r16)
  809468:	95c05536 	bltu	r18,r23,8095c0 <__sfvwrite_r+0x314>
  80946c:	00a00034 	movhi	r2,32768
  809470:	10bfffc4 	addi	r2,r2,-1
  809474:	9009883a 	mov	r4,r18
  809478:	1480012e 	bgeu	r2,r18,809480 <__sfvwrite_r+0x1d4>
  80947c:	1009883a 	mov	r4,r2
  809480:	b80b883a 	mov	r5,r23
  809484:	08027c80 	call	8027c8 <__divsi3>
  809488:	15cf383a 	mul	r7,r2,r23
  80948c:	81400717 	ldw	r5,28(r16)
  809490:	80800917 	ldw	r2,36(r16)
  809494:	e00d883a 	mov	r6,fp
  809498:	a809883a 	mov	r4,r21
  80949c:	103ee83a 	callr	r2
  8094a0:	00bfdb16 	blt	zero,r2,809410 <__alt_data_end+0xff809410>
  8094a4:	8080030b 	ldhu	r2,12(r16)
  8094a8:	10801014 	ori	r2,r2,64
  8094ac:	8080030d 	sth	r2,12(r16)
  8094b0:	00bfffc4 	movi	r2,-1
  8094b4:	003fab06 	br	809364 <__alt_data_end+0xff809364>
  8094b8:	0027883a 	mov	r19,zero
  8094bc:	0011883a 	mov	r8,zero
  8094c0:	0039883a 	mov	fp,zero
  8094c4:	0025883a 	mov	r18,zero
  8094c8:	90001f26 	beq	r18,zero,809548 <__sfvwrite_r+0x29c>
  8094cc:	40005a26 	beq	r8,zero,809638 <__sfvwrite_r+0x38c>
  8094d0:	982d883a 	mov	r22,r19
  8094d4:	94c0012e 	bgeu	r18,r19,8094dc <__sfvwrite_r+0x230>
  8094d8:	902d883a 	mov	r22,r18
  8094dc:	81000017 	ldw	r4,0(r16)
  8094e0:	80800417 	ldw	r2,16(r16)
  8094e4:	b02f883a 	mov	r23,r22
  8094e8:	81c00517 	ldw	r7,20(r16)
  8094ec:	1100032e 	bgeu	r2,r4,8094fc <__sfvwrite_r+0x250>
  8094f0:	80c00217 	ldw	r3,8(r16)
  8094f4:	38c7883a 	add	r3,r7,r3
  8094f8:	1d801816 	blt	r3,r22,80955c <__sfvwrite_r+0x2b0>
  8094fc:	b1c03e16 	blt	r22,r7,8095f8 <__sfvwrite_r+0x34c>
  809500:	80800917 	ldw	r2,36(r16)
  809504:	81400717 	ldw	r5,28(r16)
  809508:	e00d883a 	mov	r6,fp
  80950c:	da000115 	stw	r8,4(sp)
  809510:	a809883a 	mov	r4,r21
  809514:	103ee83a 	callr	r2
  809518:	102f883a 	mov	r23,r2
  80951c:	da000117 	ldw	r8,4(sp)
  809520:	00bfe00e 	bge	zero,r2,8094a4 <__alt_data_end+0xff8094a4>
  809524:	9de7c83a 	sub	r19,r19,r23
  809528:	98001f26 	beq	r19,zero,8095a8 <__sfvwrite_r+0x2fc>
  80952c:	a0800217 	ldw	r2,8(r20)
  809530:	e5f9883a 	add	fp,fp,r23
  809534:	95e5c83a 	sub	r18,r18,r23
  809538:	15efc83a 	sub	r23,r2,r23
  80953c:	a5c00215 	stw	r23,8(r20)
  809540:	b83f8726 	beq	r23,zero,809360 <__alt_data_end+0xff809360>
  809544:	903fe11e 	bne	r18,zero,8094cc <__alt_data_end+0xff8094cc>
  809548:	8f000017 	ldw	fp,0(r17)
  80954c:	8c800117 	ldw	r18,4(r17)
  809550:	0011883a 	mov	r8,zero
  809554:	8c400204 	addi	r17,r17,8
  809558:	003fdb06 	br	8094c8 <__alt_data_end+0xff8094c8>
  80955c:	180d883a 	mov	r6,r3
  809560:	e00b883a 	mov	r5,fp
  809564:	da000115 	stw	r8,4(sp)
  809568:	d8c00015 	stw	r3,0(sp)
  80956c:	080a5c00 	call	80a5c0 <memmove>
  809570:	d8c00017 	ldw	r3,0(sp)
  809574:	80800017 	ldw	r2,0(r16)
  809578:	800b883a 	mov	r5,r16
  80957c:	a809883a 	mov	r4,r21
  809580:	10c5883a 	add	r2,r2,r3
  809584:	80800015 	stw	r2,0(r16)
  809588:	d8c00015 	stw	r3,0(sp)
  80958c:	0808a4c0 	call	808a4c <_fflush_r>
  809590:	d8c00017 	ldw	r3,0(sp)
  809594:	da000117 	ldw	r8,4(sp)
  809598:	103fc21e 	bne	r2,zero,8094a4 <__alt_data_end+0xff8094a4>
  80959c:	182f883a 	mov	r23,r3
  8095a0:	9de7c83a 	sub	r19,r19,r23
  8095a4:	983fe11e 	bne	r19,zero,80952c <__alt_data_end+0xff80952c>
  8095a8:	800b883a 	mov	r5,r16
  8095ac:	a809883a 	mov	r4,r21
  8095b0:	0808a4c0 	call	808a4c <_fflush_r>
  8095b4:	103fbb1e 	bne	r2,zero,8094a4 <__alt_data_end+0xff8094a4>
  8095b8:	0011883a 	mov	r8,zero
  8095bc:	003fdb06 	br	80952c <__alt_data_end+0xff80952c>
  8095c0:	94c0012e 	bgeu	r18,r19,8095c8 <__sfvwrite_r+0x31c>
  8095c4:	9027883a 	mov	r19,r18
  8095c8:	980d883a 	mov	r6,r19
  8095cc:	e00b883a 	mov	r5,fp
  8095d0:	080a5c00 	call	80a5c0 <memmove>
  8095d4:	80800217 	ldw	r2,8(r16)
  8095d8:	80c00017 	ldw	r3,0(r16)
  8095dc:	14c5c83a 	sub	r2,r2,r19
  8095e0:	1cc7883a 	add	r3,r3,r19
  8095e4:	80800215 	stw	r2,8(r16)
  8095e8:	80c00015 	stw	r3,0(r16)
  8095ec:	10004326 	beq	r2,zero,8096fc <__sfvwrite_r+0x450>
  8095f0:	9805883a 	mov	r2,r19
  8095f4:	003f8606 	br	809410 <__alt_data_end+0xff809410>
  8095f8:	b00d883a 	mov	r6,r22
  8095fc:	e00b883a 	mov	r5,fp
  809600:	da000115 	stw	r8,4(sp)
  809604:	080a5c00 	call	80a5c0 <memmove>
  809608:	80800217 	ldw	r2,8(r16)
  80960c:	80c00017 	ldw	r3,0(r16)
  809610:	da000117 	ldw	r8,4(sp)
  809614:	1585c83a 	sub	r2,r2,r22
  809618:	1dad883a 	add	r22,r3,r22
  80961c:	80800215 	stw	r2,8(r16)
  809620:	85800015 	stw	r22,0(r16)
  809624:	003fbf06 	br	809524 <__alt_data_end+0xff809524>
  809628:	81000017 	ldw	r4,0(r16)
  80962c:	9027883a 	mov	r19,r18
  809630:	902f883a 	mov	r23,r18
  809634:	003f6c06 	br	8093e8 <__alt_data_end+0xff8093e8>
  809638:	900d883a 	mov	r6,r18
  80963c:	01400284 	movi	r5,10
  809640:	e009883a 	mov	r4,fp
  809644:	080a3940 	call	80a394 <memchr>
  809648:	10003e26 	beq	r2,zero,809744 <__sfvwrite_r+0x498>
  80964c:	10800044 	addi	r2,r2,1
  809650:	1727c83a 	sub	r19,r2,fp
  809654:	02000044 	movi	r8,1
  809658:	003f9d06 	br	8094d0 <__alt_data_end+0xff8094d0>
  80965c:	80800517 	ldw	r2,20(r16)
  809660:	81400417 	ldw	r5,16(r16)
  809664:	81c00017 	ldw	r7,0(r16)
  809668:	10a7883a 	add	r19,r2,r2
  80966c:	9885883a 	add	r2,r19,r2
  809670:	1026d7fa 	srli	r19,r2,31
  809674:	396dc83a 	sub	r22,r7,r5
  809678:	b1000044 	addi	r4,r22,1
  80967c:	9885883a 	add	r2,r19,r2
  809680:	1027d07a 	srai	r19,r2,1
  809684:	2485883a 	add	r2,r4,r18
  809688:	980d883a 	mov	r6,r19
  80968c:	9880022e 	bgeu	r19,r2,809698 <__sfvwrite_r+0x3ec>
  809690:	1027883a 	mov	r19,r2
  809694:	100d883a 	mov	r6,r2
  809698:	18c1000c 	andi	r3,r3,1024
  80969c:	18001c26 	beq	r3,zero,809710 <__sfvwrite_r+0x464>
  8096a0:	300b883a 	mov	r5,r6
  8096a4:	a809883a 	mov	r4,r21
  8096a8:	0809b880 	call	809b88 <_malloc_r>
  8096ac:	102f883a 	mov	r23,r2
  8096b0:	10002926 	beq	r2,zero,809758 <__sfvwrite_r+0x4ac>
  8096b4:	81400417 	ldw	r5,16(r16)
  8096b8:	b00d883a 	mov	r6,r22
  8096bc:	1009883a 	mov	r4,r2
  8096c0:	080a4780 	call	80a478 <memcpy>
  8096c4:	8080030b 	ldhu	r2,12(r16)
  8096c8:	00fedfc4 	movi	r3,-1153
  8096cc:	10c4703a 	and	r2,r2,r3
  8096d0:	10802014 	ori	r2,r2,128
  8096d4:	8080030d 	sth	r2,12(r16)
  8096d8:	bd89883a 	add	r4,r23,r22
  8096dc:	9d8fc83a 	sub	r7,r19,r22
  8096e0:	85c00415 	stw	r23,16(r16)
  8096e4:	84c00515 	stw	r19,20(r16)
  8096e8:	81000015 	stw	r4,0(r16)
  8096ec:	9027883a 	mov	r19,r18
  8096f0:	81c00215 	stw	r7,8(r16)
  8096f4:	902f883a 	mov	r23,r18
  8096f8:	003f3b06 	br	8093e8 <__alt_data_end+0xff8093e8>
  8096fc:	800b883a 	mov	r5,r16
  809700:	a809883a 	mov	r4,r21
  809704:	0808a4c0 	call	808a4c <_fflush_r>
  809708:	103fb926 	beq	r2,zero,8095f0 <__alt_data_end+0xff8095f0>
  80970c:	003f6506 	br	8094a4 <__alt_data_end+0xff8094a4>
  809710:	a809883a 	mov	r4,r21
  809714:	080b8400 	call	80b840 <_realloc_r>
  809718:	102f883a 	mov	r23,r2
  80971c:	103fee1e 	bne	r2,zero,8096d8 <__alt_data_end+0xff8096d8>
  809720:	81400417 	ldw	r5,16(r16)
  809724:	a809883a 	mov	r4,r21
  809728:	0808f9c0 	call	808f9c <_free_r>
  80972c:	8080030b 	ldhu	r2,12(r16)
  809730:	00ffdfc4 	movi	r3,-129
  809734:	1884703a 	and	r2,r3,r2
  809738:	00c00304 	movi	r3,12
  80973c:	a8c00015 	stw	r3,0(r21)
  809740:	003f5906 	br	8094a8 <__alt_data_end+0xff8094a8>
  809744:	94c00044 	addi	r19,r18,1
  809748:	02000044 	movi	r8,1
  80974c:	003f6006 	br	8094d0 <__alt_data_end+0xff8094d0>
  809750:	00bfffc4 	movi	r2,-1
  809754:	003f0306 	br	809364 <__alt_data_end+0xff809364>
  809758:	00800304 	movi	r2,12
  80975c:	a8800015 	stw	r2,0(r21)
  809760:	8080030b 	ldhu	r2,12(r16)
  809764:	003f5006 	br	8094a8 <__alt_data_end+0xff8094a8>

00809768 <_fwalk>:
  809768:	defff704 	addi	sp,sp,-36
  80976c:	dd000415 	stw	r20,16(sp)
  809770:	dfc00815 	stw	ra,32(sp)
  809774:	ddc00715 	stw	r23,28(sp)
  809778:	dd800615 	stw	r22,24(sp)
  80977c:	dd400515 	stw	r21,20(sp)
  809780:	dcc00315 	stw	r19,12(sp)
  809784:	dc800215 	stw	r18,8(sp)
  809788:	dc400115 	stw	r17,4(sp)
  80978c:	dc000015 	stw	r16,0(sp)
  809790:	2500b804 	addi	r20,r4,736
  809794:	a0002326 	beq	r20,zero,809824 <_fwalk+0xbc>
  809798:	282b883a 	mov	r21,r5
  80979c:	002f883a 	mov	r23,zero
  8097a0:	05800044 	movi	r22,1
  8097a4:	04ffffc4 	movi	r19,-1
  8097a8:	a4400117 	ldw	r17,4(r20)
  8097ac:	a4800217 	ldw	r18,8(r20)
  8097b0:	8c7fffc4 	addi	r17,r17,-1
  8097b4:	88000d16 	blt	r17,zero,8097ec <_fwalk+0x84>
  8097b8:	94000304 	addi	r16,r18,12
  8097bc:	94800384 	addi	r18,r18,14
  8097c0:	8080000b 	ldhu	r2,0(r16)
  8097c4:	8c7fffc4 	addi	r17,r17,-1
  8097c8:	813ffd04 	addi	r4,r16,-12
  8097cc:	b080042e 	bgeu	r22,r2,8097e0 <_fwalk+0x78>
  8097d0:	9080000f 	ldh	r2,0(r18)
  8097d4:	14c00226 	beq	r2,r19,8097e0 <_fwalk+0x78>
  8097d8:	a83ee83a 	callr	r21
  8097dc:	b8aeb03a 	or	r23,r23,r2
  8097e0:	84001a04 	addi	r16,r16,104
  8097e4:	94801a04 	addi	r18,r18,104
  8097e8:	8cfff51e 	bne	r17,r19,8097c0 <__alt_data_end+0xff8097c0>
  8097ec:	a5000017 	ldw	r20,0(r20)
  8097f0:	a03fed1e 	bne	r20,zero,8097a8 <__alt_data_end+0xff8097a8>
  8097f4:	b805883a 	mov	r2,r23
  8097f8:	dfc00817 	ldw	ra,32(sp)
  8097fc:	ddc00717 	ldw	r23,28(sp)
  809800:	dd800617 	ldw	r22,24(sp)
  809804:	dd400517 	ldw	r21,20(sp)
  809808:	dd000417 	ldw	r20,16(sp)
  80980c:	dcc00317 	ldw	r19,12(sp)
  809810:	dc800217 	ldw	r18,8(sp)
  809814:	dc400117 	ldw	r17,4(sp)
  809818:	dc000017 	ldw	r16,0(sp)
  80981c:	dec00904 	addi	sp,sp,36
  809820:	f800283a 	ret
  809824:	002f883a 	mov	r23,zero
  809828:	003ff206 	br	8097f4 <__alt_data_end+0xff8097f4>

0080982c <_fwalk_reent>:
  80982c:	defff704 	addi	sp,sp,-36
  809830:	dd000415 	stw	r20,16(sp)
  809834:	dfc00815 	stw	ra,32(sp)
  809838:	ddc00715 	stw	r23,28(sp)
  80983c:	dd800615 	stw	r22,24(sp)
  809840:	dd400515 	stw	r21,20(sp)
  809844:	dcc00315 	stw	r19,12(sp)
  809848:	dc800215 	stw	r18,8(sp)
  80984c:	dc400115 	stw	r17,4(sp)
  809850:	dc000015 	stw	r16,0(sp)
  809854:	2500b804 	addi	r20,r4,736
  809858:	a0002326 	beq	r20,zero,8098e8 <_fwalk_reent+0xbc>
  80985c:	282b883a 	mov	r21,r5
  809860:	2027883a 	mov	r19,r4
  809864:	002f883a 	mov	r23,zero
  809868:	05800044 	movi	r22,1
  80986c:	04bfffc4 	movi	r18,-1
  809870:	a4400117 	ldw	r17,4(r20)
  809874:	a4000217 	ldw	r16,8(r20)
  809878:	8c7fffc4 	addi	r17,r17,-1
  80987c:	88000c16 	blt	r17,zero,8098b0 <_fwalk_reent+0x84>
  809880:	84000304 	addi	r16,r16,12
  809884:	8080000b 	ldhu	r2,0(r16)
  809888:	8c7fffc4 	addi	r17,r17,-1
  80988c:	817ffd04 	addi	r5,r16,-12
  809890:	b080052e 	bgeu	r22,r2,8098a8 <_fwalk_reent+0x7c>
  809894:	8080008f 	ldh	r2,2(r16)
  809898:	9809883a 	mov	r4,r19
  80989c:	14800226 	beq	r2,r18,8098a8 <_fwalk_reent+0x7c>
  8098a0:	a83ee83a 	callr	r21
  8098a4:	b8aeb03a 	or	r23,r23,r2
  8098a8:	84001a04 	addi	r16,r16,104
  8098ac:	8cbff51e 	bne	r17,r18,809884 <__alt_data_end+0xff809884>
  8098b0:	a5000017 	ldw	r20,0(r20)
  8098b4:	a03fee1e 	bne	r20,zero,809870 <__alt_data_end+0xff809870>
  8098b8:	b805883a 	mov	r2,r23
  8098bc:	dfc00817 	ldw	ra,32(sp)
  8098c0:	ddc00717 	ldw	r23,28(sp)
  8098c4:	dd800617 	ldw	r22,24(sp)
  8098c8:	dd400517 	ldw	r21,20(sp)
  8098cc:	dd000417 	ldw	r20,16(sp)
  8098d0:	dcc00317 	ldw	r19,12(sp)
  8098d4:	dc800217 	ldw	r18,8(sp)
  8098d8:	dc400117 	ldw	r17,4(sp)
  8098dc:	dc000017 	ldw	r16,0(sp)
  8098e0:	dec00904 	addi	sp,sp,36
  8098e4:	f800283a 	ret
  8098e8:	002f883a 	mov	r23,zero
  8098ec:	003ff206 	br	8098b8 <__alt_data_end+0xff8098b8>

008098f0 <_setlocale_r>:
  8098f0:	30001b26 	beq	r6,zero,809960 <_setlocale_r+0x70>
  8098f4:	01402074 	movhi	r5,129
  8098f8:	defffe04 	addi	sp,sp,-8
  8098fc:	29484704 	addi	r5,r5,8476
  809900:	3009883a 	mov	r4,r6
  809904:	dc000015 	stw	r16,0(sp)
  809908:	dfc00115 	stw	ra,4(sp)
  80990c:	3021883a 	mov	r16,r6
  809910:	080bfa80 	call	80bfa8 <strcmp>
  809914:	1000061e 	bne	r2,zero,809930 <_setlocale_r+0x40>
  809918:	00802074 	movhi	r2,129
  80991c:	10884604 	addi	r2,r2,8472
  809920:	dfc00117 	ldw	ra,4(sp)
  809924:	dc000017 	ldw	r16,0(sp)
  809928:	dec00204 	addi	sp,sp,8
  80992c:	f800283a 	ret
  809930:	01402074 	movhi	r5,129
  809934:	29484604 	addi	r5,r5,8472
  809938:	8009883a 	mov	r4,r16
  80993c:	080bfa80 	call	80bfa8 <strcmp>
  809940:	103ff526 	beq	r2,zero,809918 <__alt_data_end+0xff809918>
  809944:	01402074 	movhi	r5,129
  809948:	29483104 	addi	r5,r5,8388
  80994c:	8009883a 	mov	r4,r16
  809950:	080bfa80 	call	80bfa8 <strcmp>
  809954:	103ff026 	beq	r2,zero,809918 <__alt_data_end+0xff809918>
  809958:	0005883a 	mov	r2,zero
  80995c:	003ff006 	br	809920 <__alt_data_end+0xff809920>
  809960:	00802074 	movhi	r2,129
  809964:	10884604 	addi	r2,r2,8472
  809968:	f800283a 	ret

0080996c <__locale_charset>:
  80996c:	00802074 	movhi	r2,129
  809970:	1089b704 	addi	r2,r2,9948
  809974:	f800283a 	ret

00809978 <__locale_mb_cur_max>:
  809978:	00802074 	movhi	r2,129
  80997c:	108f5304 	addi	r2,r2,15692
  809980:	10800017 	ldw	r2,0(r2)
  809984:	f800283a 	ret

00809988 <__locale_msgcharset>:
  809988:	00802074 	movhi	r2,129
  80998c:	1089af04 	addi	r2,r2,9916
  809990:	f800283a 	ret

00809994 <__locale_cjk_lang>:
  809994:	0005883a 	mov	r2,zero
  809998:	f800283a 	ret

0080999c <_localeconv_r>:
  80999c:	00802074 	movhi	r2,129
  8099a0:	1089bf04 	addi	r2,r2,9980
  8099a4:	f800283a 	ret

008099a8 <setlocale>:
  8099a8:	00802074 	movhi	r2,129
  8099ac:	108f5204 	addi	r2,r2,15688
  8099b0:	280d883a 	mov	r6,r5
  8099b4:	200b883a 	mov	r5,r4
  8099b8:	11000017 	ldw	r4,0(r2)
  8099bc:	08098f01 	jmpi	8098f0 <_setlocale_r>

008099c0 <localeconv>:
  8099c0:	00802074 	movhi	r2,129
  8099c4:	1089bf04 	addi	r2,r2,9980
  8099c8:	f800283a 	ret

008099cc <__smakebuf_r>:
  8099cc:	2880030b 	ldhu	r2,12(r5)
  8099d0:	10c0008c 	andi	r3,r2,2
  8099d4:	1800411e 	bne	r3,zero,809adc <__smakebuf_r+0x110>
  8099d8:	deffec04 	addi	sp,sp,-80
  8099dc:	dc000f15 	stw	r16,60(sp)
  8099e0:	2821883a 	mov	r16,r5
  8099e4:	2940038f 	ldh	r5,14(r5)
  8099e8:	dc401015 	stw	r17,64(sp)
  8099ec:	dfc01315 	stw	ra,76(sp)
  8099f0:	dcc01215 	stw	r19,72(sp)
  8099f4:	dc801115 	stw	r18,68(sp)
  8099f8:	2023883a 	mov	r17,r4
  8099fc:	28001c16 	blt	r5,zero,809a70 <__smakebuf_r+0xa4>
  809a00:	d80d883a 	mov	r6,sp
  809a04:	080db500 	call	80db50 <_fstat_r>
  809a08:	10001816 	blt	r2,zero,809a6c <__smakebuf_r+0xa0>
  809a0c:	d8800117 	ldw	r2,4(sp)
  809a10:	00e00014 	movui	r3,32768
  809a14:	10bc000c 	andi	r2,r2,61440
  809a18:	14c80020 	cmpeqi	r19,r2,8192
  809a1c:	10c03726 	beq	r2,r3,809afc <__smakebuf_r+0x130>
  809a20:	80c0030b 	ldhu	r3,12(r16)
  809a24:	18c20014 	ori	r3,r3,2048
  809a28:	80c0030d 	sth	r3,12(r16)
  809a2c:	00c80004 	movi	r3,8192
  809a30:	10c0521e 	bne	r2,r3,809b7c <__smakebuf_r+0x1b0>
  809a34:	8140038f 	ldh	r5,14(r16)
  809a38:	8809883a 	mov	r4,r17
  809a3c:	080dbac0 	call	80dbac <_isatty_r>
  809a40:	10004c26 	beq	r2,zero,809b74 <__smakebuf_r+0x1a8>
  809a44:	8080030b 	ldhu	r2,12(r16)
  809a48:	80c010c4 	addi	r3,r16,67
  809a4c:	80c00015 	stw	r3,0(r16)
  809a50:	10800054 	ori	r2,r2,1
  809a54:	8080030d 	sth	r2,12(r16)
  809a58:	00800044 	movi	r2,1
  809a5c:	80c00415 	stw	r3,16(r16)
  809a60:	80800515 	stw	r2,20(r16)
  809a64:	04810004 	movi	r18,1024
  809a68:	00000706 	br	809a88 <__smakebuf_r+0xbc>
  809a6c:	8080030b 	ldhu	r2,12(r16)
  809a70:	10c0200c 	andi	r3,r2,128
  809a74:	18001f1e 	bne	r3,zero,809af4 <__smakebuf_r+0x128>
  809a78:	04810004 	movi	r18,1024
  809a7c:	10820014 	ori	r2,r2,2048
  809a80:	8080030d 	sth	r2,12(r16)
  809a84:	0027883a 	mov	r19,zero
  809a88:	900b883a 	mov	r5,r18
  809a8c:	8809883a 	mov	r4,r17
  809a90:	0809b880 	call	809b88 <_malloc_r>
  809a94:	10002c26 	beq	r2,zero,809b48 <__smakebuf_r+0x17c>
  809a98:	80c0030b 	ldhu	r3,12(r16)
  809a9c:	01002074 	movhi	r4,129
  809aa0:	2122b804 	addi	r4,r4,-29984
  809aa4:	89000f15 	stw	r4,60(r17)
  809aa8:	18c02014 	ori	r3,r3,128
  809aac:	80c0030d 	sth	r3,12(r16)
  809ab0:	80800015 	stw	r2,0(r16)
  809ab4:	80800415 	stw	r2,16(r16)
  809ab8:	84800515 	stw	r18,20(r16)
  809abc:	98001a1e 	bne	r19,zero,809b28 <__smakebuf_r+0x15c>
  809ac0:	dfc01317 	ldw	ra,76(sp)
  809ac4:	dcc01217 	ldw	r19,72(sp)
  809ac8:	dc801117 	ldw	r18,68(sp)
  809acc:	dc401017 	ldw	r17,64(sp)
  809ad0:	dc000f17 	ldw	r16,60(sp)
  809ad4:	dec01404 	addi	sp,sp,80
  809ad8:	f800283a 	ret
  809adc:	288010c4 	addi	r2,r5,67
  809ae0:	28800015 	stw	r2,0(r5)
  809ae4:	28800415 	stw	r2,16(r5)
  809ae8:	00800044 	movi	r2,1
  809aec:	28800515 	stw	r2,20(r5)
  809af0:	f800283a 	ret
  809af4:	04801004 	movi	r18,64
  809af8:	003fe006 	br	809a7c <__alt_data_end+0xff809a7c>
  809afc:	81000a17 	ldw	r4,40(r16)
  809b00:	00c02074 	movhi	r3,129
  809b04:	18efd104 	addi	r3,r3,-16572
  809b08:	20ffc51e 	bne	r4,r3,809a20 <__alt_data_end+0xff809a20>
  809b0c:	8080030b 	ldhu	r2,12(r16)
  809b10:	04810004 	movi	r18,1024
  809b14:	84801315 	stw	r18,76(r16)
  809b18:	1484b03a 	or	r2,r2,r18
  809b1c:	8080030d 	sth	r2,12(r16)
  809b20:	0027883a 	mov	r19,zero
  809b24:	003fd806 	br	809a88 <__alt_data_end+0xff809a88>
  809b28:	8140038f 	ldh	r5,14(r16)
  809b2c:	8809883a 	mov	r4,r17
  809b30:	080dbac0 	call	80dbac <_isatty_r>
  809b34:	103fe226 	beq	r2,zero,809ac0 <__alt_data_end+0xff809ac0>
  809b38:	8080030b 	ldhu	r2,12(r16)
  809b3c:	10800054 	ori	r2,r2,1
  809b40:	8080030d 	sth	r2,12(r16)
  809b44:	003fde06 	br	809ac0 <__alt_data_end+0xff809ac0>
  809b48:	8080030b 	ldhu	r2,12(r16)
  809b4c:	10c0800c 	andi	r3,r2,512
  809b50:	183fdb1e 	bne	r3,zero,809ac0 <__alt_data_end+0xff809ac0>
  809b54:	10800094 	ori	r2,r2,2
  809b58:	80c010c4 	addi	r3,r16,67
  809b5c:	8080030d 	sth	r2,12(r16)
  809b60:	00800044 	movi	r2,1
  809b64:	80c00015 	stw	r3,0(r16)
  809b68:	80c00415 	stw	r3,16(r16)
  809b6c:	80800515 	stw	r2,20(r16)
  809b70:	003fd306 	br	809ac0 <__alt_data_end+0xff809ac0>
  809b74:	04810004 	movi	r18,1024
  809b78:	003fc306 	br	809a88 <__alt_data_end+0xff809a88>
  809b7c:	0027883a 	mov	r19,zero
  809b80:	04810004 	movi	r18,1024
  809b84:	003fc006 	br	809a88 <__alt_data_end+0xff809a88>

00809b88 <_malloc_r>:
  809b88:	defff504 	addi	sp,sp,-44
  809b8c:	dc800315 	stw	r18,12(sp)
  809b90:	dfc00a15 	stw	ra,40(sp)
  809b94:	df000915 	stw	fp,36(sp)
  809b98:	ddc00815 	stw	r23,32(sp)
  809b9c:	dd800715 	stw	r22,28(sp)
  809ba0:	dd400615 	stw	r21,24(sp)
  809ba4:	dd000515 	stw	r20,20(sp)
  809ba8:	dcc00415 	stw	r19,16(sp)
  809bac:	dc400215 	stw	r17,8(sp)
  809bb0:	dc000115 	stw	r16,4(sp)
  809bb4:	288002c4 	addi	r2,r5,11
  809bb8:	00c00584 	movi	r3,22
  809bbc:	2025883a 	mov	r18,r4
  809bc0:	18807f2e 	bgeu	r3,r2,809dc0 <_malloc_r+0x238>
  809bc4:	047ffe04 	movi	r17,-8
  809bc8:	1462703a 	and	r17,r2,r17
  809bcc:	8800a316 	blt	r17,zero,809e5c <_malloc_r+0x2d4>
  809bd0:	8940a236 	bltu	r17,r5,809e5c <_malloc_r+0x2d4>
  809bd4:	080fab00 	call	80fab0 <__malloc_lock>
  809bd8:	00807dc4 	movi	r2,503
  809bdc:	1441e92e 	bgeu	r2,r17,80a384 <_malloc_r+0x7fc>
  809be0:	8804d27a 	srli	r2,r17,9
  809be4:	1000a126 	beq	r2,zero,809e6c <_malloc_r+0x2e4>
  809be8:	00c00104 	movi	r3,4
  809bec:	18811e36 	bltu	r3,r2,80a068 <_malloc_r+0x4e0>
  809bf0:	8804d1ba 	srli	r2,r17,6
  809bf4:	12000e44 	addi	r8,r2,57
  809bf8:	11c00e04 	addi	r7,r2,56
  809bfc:	4209883a 	add	r4,r8,r8
  809c00:	04c02074 	movhi	r19,129
  809c04:	2109883a 	add	r4,r4,r4
  809c08:	9cc9cd04 	addi	r19,r19,10036
  809c0c:	2109883a 	add	r4,r4,r4
  809c10:	9909883a 	add	r4,r19,r4
  809c14:	24000117 	ldw	r16,4(r4)
  809c18:	213ffe04 	addi	r4,r4,-8
  809c1c:	24009726 	beq	r4,r16,809e7c <_malloc_r+0x2f4>
  809c20:	80800117 	ldw	r2,4(r16)
  809c24:	01bfff04 	movi	r6,-4
  809c28:	014003c4 	movi	r5,15
  809c2c:	1184703a 	and	r2,r2,r6
  809c30:	1447c83a 	sub	r3,r2,r17
  809c34:	28c00716 	blt	r5,r3,809c54 <_malloc_r+0xcc>
  809c38:	1800920e 	bge	r3,zero,809e84 <_malloc_r+0x2fc>
  809c3c:	84000317 	ldw	r16,12(r16)
  809c40:	24008e26 	beq	r4,r16,809e7c <_malloc_r+0x2f4>
  809c44:	80800117 	ldw	r2,4(r16)
  809c48:	1184703a 	and	r2,r2,r6
  809c4c:	1447c83a 	sub	r3,r2,r17
  809c50:	28fff90e 	bge	r5,r3,809c38 <__alt_data_end+0xff809c38>
  809c54:	3809883a 	mov	r4,r7
  809c58:	01802074 	movhi	r6,129
  809c5c:	9c000417 	ldw	r16,16(r19)
  809c60:	3189cd04 	addi	r6,r6,10036
  809c64:	32000204 	addi	r8,r6,8
  809c68:	82013426 	beq	r16,r8,80a13c <_malloc_r+0x5b4>
  809c6c:	80c00117 	ldw	r3,4(r16)
  809c70:	00bfff04 	movi	r2,-4
  809c74:	188e703a 	and	r7,r3,r2
  809c78:	3c45c83a 	sub	r2,r7,r17
  809c7c:	00c003c4 	movi	r3,15
  809c80:	18811f16 	blt	r3,r2,80a100 <_malloc_r+0x578>
  809c84:	32000515 	stw	r8,20(r6)
  809c88:	32000415 	stw	r8,16(r6)
  809c8c:	10007f0e 	bge	r2,zero,809e8c <_malloc_r+0x304>
  809c90:	00807fc4 	movi	r2,511
  809c94:	11c0fd36 	bltu	r2,r7,80a08c <_malloc_r+0x504>
  809c98:	3806d0fa 	srli	r3,r7,3
  809c9c:	01c00044 	movi	r7,1
  809ca0:	30800117 	ldw	r2,4(r6)
  809ca4:	19400044 	addi	r5,r3,1
  809ca8:	294b883a 	add	r5,r5,r5
  809cac:	1807d0ba 	srai	r3,r3,2
  809cb0:	294b883a 	add	r5,r5,r5
  809cb4:	294b883a 	add	r5,r5,r5
  809cb8:	298b883a 	add	r5,r5,r6
  809cbc:	38c6983a 	sll	r3,r7,r3
  809cc0:	29c00017 	ldw	r7,0(r5)
  809cc4:	2a7ffe04 	addi	r9,r5,-8
  809cc8:	1886b03a 	or	r3,r3,r2
  809ccc:	82400315 	stw	r9,12(r16)
  809cd0:	81c00215 	stw	r7,8(r16)
  809cd4:	30c00115 	stw	r3,4(r6)
  809cd8:	2c000015 	stw	r16,0(r5)
  809cdc:	3c000315 	stw	r16,12(r7)
  809ce0:	2005d0ba 	srai	r2,r4,2
  809ce4:	01400044 	movi	r5,1
  809ce8:	288a983a 	sll	r5,r5,r2
  809cec:	19406f36 	bltu	r3,r5,809eac <_malloc_r+0x324>
  809cf0:	28c4703a 	and	r2,r5,r3
  809cf4:	10000a1e 	bne	r2,zero,809d20 <_malloc_r+0x198>
  809cf8:	00bfff04 	movi	r2,-4
  809cfc:	294b883a 	add	r5,r5,r5
  809d00:	2088703a 	and	r4,r4,r2
  809d04:	28c4703a 	and	r2,r5,r3
  809d08:	21000104 	addi	r4,r4,4
  809d0c:	1000041e 	bne	r2,zero,809d20 <_malloc_r+0x198>
  809d10:	294b883a 	add	r5,r5,r5
  809d14:	28c4703a 	and	r2,r5,r3
  809d18:	21000104 	addi	r4,r4,4
  809d1c:	103ffc26 	beq	r2,zero,809d10 <__alt_data_end+0xff809d10>
  809d20:	02bfff04 	movi	r10,-4
  809d24:	024003c4 	movi	r9,15
  809d28:	21800044 	addi	r6,r4,1
  809d2c:	318d883a 	add	r6,r6,r6
  809d30:	318d883a 	add	r6,r6,r6
  809d34:	318d883a 	add	r6,r6,r6
  809d38:	998d883a 	add	r6,r19,r6
  809d3c:	333ffe04 	addi	r12,r6,-8
  809d40:	2017883a 	mov	r11,r4
  809d44:	31800104 	addi	r6,r6,4
  809d48:	34000017 	ldw	r16,0(r6)
  809d4c:	31fffd04 	addi	r7,r6,-12
  809d50:	81c0041e 	bne	r16,r7,809d64 <_malloc_r+0x1dc>
  809d54:	0000fb06 	br	80a144 <_malloc_r+0x5bc>
  809d58:	1801030e 	bge	r3,zero,80a168 <_malloc_r+0x5e0>
  809d5c:	84000317 	ldw	r16,12(r16)
  809d60:	81c0f826 	beq	r16,r7,80a144 <_malloc_r+0x5bc>
  809d64:	80800117 	ldw	r2,4(r16)
  809d68:	1284703a 	and	r2,r2,r10
  809d6c:	1447c83a 	sub	r3,r2,r17
  809d70:	48fff90e 	bge	r9,r3,809d58 <__alt_data_end+0xff809d58>
  809d74:	80800317 	ldw	r2,12(r16)
  809d78:	81000217 	ldw	r4,8(r16)
  809d7c:	89400054 	ori	r5,r17,1
  809d80:	81400115 	stw	r5,4(r16)
  809d84:	20800315 	stw	r2,12(r4)
  809d88:	11000215 	stw	r4,8(r2)
  809d8c:	8463883a 	add	r17,r16,r17
  809d90:	9c400515 	stw	r17,20(r19)
  809d94:	9c400415 	stw	r17,16(r19)
  809d98:	18800054 	ori	r2,r3,1
  809d9c:	88800115 	stw	r2,4(r17)
  809da0:	8a000315 	stw	r8,12(r17)
  809da4:	8a000215 	stw	r8,8(r17)
  809da8:	88e3883a 	add	r17,r17,r3
  809dac:	88c00015 	stw	r3,0(r17)
  809db0:	9009883a 	mov	r4,r18
  809db4:	080fad40 	call	80fad4 <__malloc_unlock>
  809db8:	80800204 	addi	r2,r16,8
  809dbc:	00001b06 	br	809e2c <_malloc_r+0x2a4>
  809dc0:	04400404 	movi	r17,16
  809dc4:	89402536 	bltu	r17,r5,809e5c <_malloc_r+0x2d4>
  809dc8:	080fab00 	call	80fab0 <__malloc_lock>
  809dcc:	00800184 	movi	r2,6
  809dd0:	01000084 	movi	r4,2
  809dd4:	04c02074 	movhi	r19,129
  809dd8:	1085883a 	add	r2,r2,r2
  809ddc:	9cc9cd04 	addi	r19,r19,10036
  809de0:	1085883a 	add	r2,r2,r2
  809de4:	9885883a 	add	r2,r19,r2
  809de8:	14000117 	ldw	r16,4(r2)
  809dec:	10fffe04 	addi	r3,r2,-8
  809df0:	80c0d926 	beq	r16,r3,80a158 <_malloc_r+0x5d0>
  809df4:	80c00117 	ldw	r3,4(r16)
  809df8:	81000317 	ldw	r4,12(r16)
  809dfc:	00bfff04 	movi	r2,-4
  809e00:	1884703a 	and	r2,r3,r2
  809e04:	81400217 	ldw	r5,8(r16)
  809e08:	8085883a 	add	r2,r16,r2
  809e0c:	10c00117 	ldw	r3,4(r2)
  809e10:	29000315 	stw	r4,12(r5)
  809e14:	21400215 	stw	r5,8(r4)
  809e18:	18c00054 	ori	r3,r3,1
  809e1c:	10c00115 	stw	r3,4(r2)
  809e20:	9009883a 	mov	r4,r18
  809e24:	080fad40 	call	80fad4 <__malloc_unlock>
  809e28:	80800204 	addi	r2,r16,8
  809e2c:	dfc00a17 	ldw	ra,40(sp)
  809e30:	df000917 	ldw	fp,36(sp)
  809e34:	ddc00817 	ldw	r23,32(sp)
  809e38:	dd800717 	ldw	r22,28(sp)
  809e3c:	dd400617 	ldw	r21,24(sp)
  809e40:	dd000517 	ldw	r20,20(sp)
  809e44:	dcc00417 	ldw	r19,16(sp)
  809e48:	dc800317 	ldw	r18,12(sp)
  809e4c:	dc400217 	ldw	r17,8(sp)
  809e50:	dc000117 	ldw	r16,4(sp)
  809e54:	dec00b04 	addi	sp,sp,44
  809e58:	f800283a 	ret
  809e5c:	00800304 	movi	r2,12
  809e60:	90800015 	stw	r2,0(r18)
  809e64:	0005883a 	mov	r2,zero
  809e68:	003ff006 	br	809e2c <__alt_data_end+0xff809e2c>
  809e6c:	01002004 	movi	r4,128
  809e70:	02001004 	movi	r8,64
  809e74:	01c00fc4 	movi	r7,63
  809e78:	003f6106 	br	809c00 <__alt_data_end+0xff809c00>
  809e7c:	4009883a 	mov	r4,r8
  809e80:	003f7506 	br	809c58 <__alt_data_end+0xff809c58>
  809e84:	81000317 	ldw	r4,12(r16)
  809e88:	003fde06 	br	809e04 <__alt_data_end+0xff809e04>
  809e8c:	81c5883a 	add	r2,r16,r7
  809e90:	11400117 	ldw	r5,4(r2)
  809e94:	9009883a 	mov	r4,r18
  809e98:	29400054 	ori	r5,r5,1
  809e9c:	11400115 	stw	r5,4(r2)
  809ea0:	080fad40 	call	80fad4 <__malloc_unlock>
  809ea4:	80800204 	addi	r2,r16,8
  809ea8:	003fe006 	br	809e2c <__alt_data_end+0xff809e2c>
  809eac:	9c000217 	ldw	r16,8(r19)
  809eb0:	00bfff04 	movi	r2,-4
  809eb4:	85800117 	ldw	r22,4(r16)
  809eb8:	b0ac703a 	and	r22,r22,r2
  809ebc:	b4400336 	bltu	r22,r17,809ecc <_malloc_r+0x344>
  809ec0:	b445c83a 	sub	r2,r22,r17
  809ec4:	00c003c4 	movi	r3,15
  809ec8:	18805d16 	blt	r3,r2,80a040 <_malloc_r+0x4b8>
  809ecc:	05c02074 	movhi	r23,129
  809ed0:	00802074 	movhi	r2,129
  809ed4:	10962104 	addi	r2,r2,22660
  809ed8:	bdcf5404 	addi	r23,r23,15696
  809edc:	15400017 	ldw	r21,0(r2)
  809ee0:	b8c00017 	ldw	r3,0(r23)
  809ee4:	00bfffc4 	movi	r2,-1
  809ee8:	858d883a 	add	r6,r16,r22
  809eec:	8d6b883a 	add	r21,r17,r21
  809ef0:	1880ea26 	beq	r3,r2,80a29c <_malloc_r+0x714>
  809ef4:	ad4403c4 	addi	r21,r21,4111
  809ef8:	00bc0004 	movi	r2,-4096
  809efc:	a8aa703a 	and	r21,r21,r2
  809f00:	a80b883a 	mov	r5,r21
  809f04:	9009883a 	mov	r4,r18
  809f08:	d9800015 	stw	r6,0(sp)
  809f0c:	080be180 	call	80be18 <_sbrk_r>
  809f10:	1029883a 	mov	r20,r2
  809f14:	00bfffc4 	movi	r2,-1
  809f18:	d9800017 	ldw	r6,0(sp)
  809f1c:	a080e826 	beq	r20,r2,80a2c0 <_malloc_r+0x738>
  809f20:	a180a636 	bltu	r20,r6,80a1bc <_malloc_r+0x634>
  809f24:	07002074 	movhi	fp,129
  809f28:	e7162a04 	addi	fp,fp,22696
  809f2c:	e0800017 	ldw	r2,0(fp)
  809f30:	a887883a 	add	r3,r21,r2
  809f34:	e0c00015 	stw	r3,0(fp)
  809f38:	3500e626 	beq	r6,r20,80a2d4 <_malloc_r+0x74c>
  809f3c:	b9000017 	ldw	r4,0(r23)
  809f40:	00bfffc4 	movi	r2,-1
  809f44:	2080ee26 	beq	r4,r2,80a300 <_malloc_r+0x778>
  809f48:	a185c83a 	sub	r2,r20,r6
  809f4c:	10c5883a 	add	r2,r2,r3
  809f50:	e0800015 	stw	r2,0(fp)
  809f54:	a0c001cc 	andi	r3,r20,7
  809f58:	1800bc26 	beq	r3,zero,80a24c <_malloc_r+0x6c4>
  809f5c:	a0e9c83a 	sub	r20,r20,r3
  809f60:	00840204 	movi	r2,4104
  809f64:	a5000204 	addi	r20,r20,8
  809f68:	10c7c83a 	sub	r3,r2,r3
  809f6c:	a545883a 	add	r2,r20,r21
  809f70:	1083ffcc 	andi	r2,r2,4095
  809f74:	18abc83a 	sub	r21,r3,r2
  809f78:	a80b883a 	mov	r5,r21
  809f7c:	9009883a 	mov	r4,r18
  809f80:	080be180 	call	80be18 <_sbrk_r>
  809f84:	00ffffc4 	movi	r3,-1
  809f88:	10c0e126 	beq	r2,r3,80a310 <_malloc_r+0x788>
  809f8c:	1505c83a 	sub	r2,r2,r20
  809f90:	1545883a 	add	r2,r2,r21
  809f94:	10800054 	ori	r2,r2,1
  809f98:	e0c00017 	ldw	r3,0(fp)
  809f9c:	9d000215 	stw	r20,8(r19)
  809fa0:	a0800115 	stw	r2,4(r20)
  809fa4:	a8c7883a 	add	r3,r21,r3
  809fa8:	e0c00015 	stw	r3,0(fp)
  809fac:	84c00e26 	beq	r16,r19,809fe8 <_malloc_r+0x460>
  809fb0:	018003c4 	movi	r6,15
  809fb4:	3580a72e 	bgeu	r6,r22,80a254 <_malloc_r+0x6cc>
  809fb8:	81400117 	ldw	r5,4(r16)
  809fbc:	013ffe04 	movi	r4,-8
  809fc0:	b0bffd04 	addi	r2,r22,-12
  809fc4:	1104703a 	and	r2,r2,r4
  809fc8:	2900004c 	andi	r4,r5,1
  809fcc:	2088b03a 	or	r4,r4,r2
  809fd0:	81000115 	stw	r4,4(r16)
  809fd4:	01400144 	movi	r5,5
  809fd8:	8089883a 	add	r4,r16,r2
  809fdc:	21400115 	stw	r5,4(r4)
  809fe0:	21400215 	stw	r5,8(r4)
  809fe4:	3080cd36 	bltu	r6,r2,80a31c <_malloc_r+0x794>
  809fe8:	00802074 	movhi	r2,129
  809fec:	10962004 	addi	r2,r2,22656
  809ff0:	11000017 	ldw	r4,0(r2)
  809ff4:	20c0012e 	bgeu	r4,r3,809ffc <_malloc_r+0x474>
  809ff8:	10c00015 	stw	r3,0(r2)
  809ffc:	00802074 	movhi	r2,129
  80a000:	10961f04 	addi	r2,r2,22652
  80a004:	11000017 	ldw	r4,0(r2)
  80a008:	9c000217 	ldw	r16,8(r19)
  80a00c:	20c0012e 	bgeu	r4,r3,80a014 <_malloc_r+0x48c>
  80a010:	10c00015 	stw	r3,0(r2)
  80a014:	80c00117 	ldw	r3,4(r16)
  80a018:	00bfff04 	movi	r2,-4
  80a01c:	1886703a 	and	r3,r3,r2
  80a020:	1c45c83a 	sub	r2,r3,r17
  80a024:	1c400236 	bltu	r3,r17,80a030 <_malloc_r+0x4a8>
  80a028:	00c003c4 	movi	r3,15
  80a02c:	18800416 	blt	r3,r2,80a040 <_malloc_r+0x4b8>
  80a030:	9009883a 	mov	r4,r18
  80a034:	080fad40 	call	80fad4 <__malloc_unlock>
  80a038:	0005883a 	mov	r2,zero
  80a03c:	003f7b06 	br	809e2c <__alt_data_end+0xff809e2c>
  80a040:	88c00054 	ori	r3,r17,1
  80a044:	80c00115 	stw	r3,4(r16)
  80a048:	8463883a 	add	r17,r16,r17
  80a04c:	10800054 	ori	r2,r2,1
  80a050:	9c400215 	stw	r17,8(r19)
  80a054:	88800115 	stw	r2,4(r17)
  80a058:	9009883a 	mov	r4,r18
  80a05c:	080fad40 	call	80fad4 <__malloc_unlock>
  80a060:	80800204 	addi	r2,r16,8
  80a064:	003f7106 	br	809e2c <__alt_data_end+0xff809e2c>
  80a068:	00c00504 	movi	r3,20
  80a06c:	18804a2e 	bgeu	r3,r2,80a198 <_malloc_r+0x610>
  80a070:	00c01504 	movi	r3,84
  80a074:	18806e36 	bltu	r3,r2,80a230 <_malloc_r+0x6a8>
  80a078:	8804d33a 	srli	r2,r17,12
  80a07c:	12001bc4 	addi	r8,r2,111
  80a080:	11c01b84 	addi	r7,r2,110
  80a084:	4209883a 	add	r4,r8,r8
  80a088:	003edd06 	br	809c00 <__alt_data_end+0xff809c00>
  80a08c:	3804d27a 	srli	r2,r7,9
  80a090:	00c00104 	movi	r3,4
  80a094:	1880442e 	bgeu	r3,r2,80a1a8 <_malloc_r+0x620>
  80a098:	00c00504 	movi	r3,20
  80a09c:	18808136 	bltu	r3,r2,80a2a4 <_malloc_r+0x71c>
  80a0a0:	11401704 	addi	r5,r2,92
  80a0a4:	10c016c4 	addi	r3,r2,91
  80a0a8:	294b883a 	add	r5,r5,r5
  80a0ac:	294b883a 	add	r5,r5,r5
  80a0b0:	294b883a 	add	r5,r5,r5
  80a0b4:	994b883a 	add	r5,r19,r5
  80a0b8:	28800017 	ldw	r2,0(r5)
  80a0bc:	01802074 	movhi	r6,129
  80a0c0:	297ffe04 	addi	r5,r5,-8
  80a0c4:	3189cd04 	addi	r6,r6,10036
  80a0c8:	28806526 	beq	r5,r2,80a260 <_malloc_r+0x6d8>
  80a0cc:	01bfff04 	movi	r6,-4
  80a0d0:	10c00117 	ldw	r3,4(r2)
  80a0d4:	1986703a 	and	r3,r3,r6
  80a0d8:	38c0022e 	bgeu	r7,r3,80a0e4 <_malloc_r+0x55c>
  80a0dc:	10800217 	ldw	r2,8(r2)
  80a0e0:	28bffb1e 	bne	r5,r2,80a0d0 <__alt_data_end+0xff80a0d0>
  80a0e4:	11400317 	ldw	r5,12(r2)
  80a0e8:	98c00117 	ldw	r3,4(r19)
  80a0ec:	81400315 	stw	r5,12(r16)
  80a0f0:	80800215 	stw	r2,8(r16)
  80a0f4:	2c000215 	stw	r16,8(r5)
  80a0f8:	14000315 	stw	r16,12(r2)
  80a0fc:	003ef806 	br	809ce0 <__alt_data_end+0xff809ce0>
  80a100:	88c00054 	ori	r3,r17,1
  80a104:	80c00115 	stw	r3,4(r16)
  80a108:	8463883a 	add	r17,r16,r17
  80a10c:	34400515 	stw	r17,20(r6)
  80a110:	34400415 	stw	r17,16(r6)
  80a114:	10c00054 	ori	r3,r2,1
  80a118:	8a000315 	stw	r8,12(r17)
  80a11c:	8a000215 	stw	r8,8(r17)
  80a120:	88c00115 	stw	r3,4(r17)
  80a124:	88a3883a 	add	r17,r17,r2
  80a128:	88800015 	stw	r2,0(r17)
  80a12c:	9009883a 	mov	r4,r18
  80a130:	080fad40 	call	80fad4 <__malloc_unlock>
  80a134:	80800204 	addi	r2,r16,8
  80a138:	003f3c06 	br	809e2c <__alt_data_end+0xff809e2c>
  80a13c:	30c00117 	ldw	r3,4(r6)
  80a140:	003ee706 	br	809ce0 <__alt_data_end+0xff809ce0>
  80a144:	5ac00044 	addi	r11,r11,1
  80a148:	588000cc 	andi	r2,r11,3
  80a14c:	31800204 	addi	r6,r6,8
  80a150:	103efd1e 	bne	r2,zero,809d48 <__alt_data_end+0xff809d48>
  80a154:	00002406 	br	80a1e8 <_malloc_r+0x660>
  80a158:	14000317 	ldw	r16,12(r2)
  80a15c:	143f251e 	bne	r2,r16,809df4 <__alt_data_end+0xff809df4>
  80a160:	21000084 	addi	r4,r4,2
  80a164:	003ebc06 	br	809c58 <__alt_data_end+0xff809c58>
  80a168:	8085883a 	add	r2,r16,r2
  80a16c:	10c00117 	ldw	r3,4(r2)
  80a170:	81000317 	ldw	r4,12(r16)
  80a174:	81400217 	ldw	r5,8(r16)
  80a178:	18c00054 	ori	r3,r3,1
  80a17c:	10c00115 	stw	r3,4(r2)
  80a180:	29000315 	stw	r4,12(r5)
  80a184:	21400215 	stw	r5,8(r4)
  80a188:	9009883a 	mov	r4,r18
  80a18c:	080fad40 	call	80fad4 <__malloc_unlock>
  80a190:	80800204 	addi	r2,r16,8
  80a194:	003f2506 	br	809e2c <__alt_data_end+0xff809e2c>
  80a198:	12001704 	addi	r8,r2,92
  80a19c:	11c016c4 	addi	r7,r2,91
  80a1a0:	4209883a 	add	r4,r8,r8
  80a1a4:	003e9606 	br	809c00 <__alt_data_end+0xff809c00>
  80a1a8:	3804d1ba 	srli	r2,r7,6
  80a1ac:	11400e44 	addi	r5,r2,57
  80a1b0:	10c00e04 	addi	r3,r2,56
  80a1b4:	294b883a 	add	r5,r5,r5
  80a1b8:	003fbc06 	br	80a0ac <__alt_data_end+0xff80a0ac>
  80a1bc:	84ff5926 	beq	r16,r19,809f24 <__alt_data_end+0xff809f24>
  80a1c0:	00802074 	movhi	r2,129
  80a1c4:	1089cd04 	addi	r2,r2,10036
  80a1c8:	14000217 	ldw	r16,8(r2)
  80a1cc:	00bfff04 	movi	r2,-4
  80a1d0:	80c00117 	ldw	r3,4(r16)
  80a1d4:	1886703a 	and	r3,r3,r2
  80a1d8:	003f9106 	br	80a020 <__alt_data_end+0xff80a020>
  80a1dc:	60800217 	ldw	r2,8(r12)
  80a1e0:	213fffc4 	addi	r4,r4,-1
  80a1e4:	1300651e 	bne	r2,r12,80a37c <_malloc_r+0x7f4>
  80a1e8:	208000cc 	andi	r2,r4,3
  80a1ec:	633ffe04 	addi	r12,r12,-8
  80a1f0:	103ffa1e 	bne	r2,zero,80a1dc <__alt_data_end+0xff80a1dc>
  80a1f4:	98800117 	ldw	r2,4(r19)
  80a1f8:	0146303a 	nor	r3,zero,r5
  80a1fc:	1884703a 	and	r2,r3,r2
  80a200:	98800115 	stw	r2,4(r19)
  80a204:	294b883a 	add	r5,r5,r5
  80a208:	117f2836 	bltu	r2,r5,809eac <__alt_data_end+0xff809eac>
  80a20c:	283f2726 	beq	r5,zero,809eac <__alt_data_end+0xff809eac>
  80a210:	2886703a 	and	r3,r5,r2
  80a214:	5809883a 	mov	r4,r11
  80a218:	183ec31e 	bne	r3,zero,809d28 <__alt_data_end+0xff809d28>
  80a21c:	294b883a 	add	r5,r5,r5
  80a220:	2886703a 	and	r3,r5,r2
  80a224:	21000104 	addi	r4,r4,4
  80a228:	183ffc26 	beq	r3,zero,80a21c <__alt_data_end+0xff80a21c>
  80a22c:	003ebe06 	br	809d28 <__alt_data_end+0xff809d28>
  80a230:	00c05504 	movi	r3,340
  80a234:	18801236 	bltu	r3,r2,80a280 <_malloc_r+0x6f8>
  80a238:	8804d3fa 	srli	r2,r17,15
  80a23c:	12001e04 	addi	r8,r2,120
  80a240:	11c01dc4 	addi	r7,r2,119
  80a244:	4209883a 	add	r4,r8,r8
  80a248:	003e6d06 	br	809c00 <__alt_data_end+0xff809c00>
  80a24c:	00c40004 	movi	r3,4096
  80a250:	003f4606 	br	809f6c <__alt_data_end+0xff809f6c>
  80a254:	00800044 	movi	r2,1
  80a258:	a0800115 	stw	r2,4(r20)
  80a25c:	003f7406 	br	80a030 <__alt_data_end+0xff80a030>
  80a260:	1805d0ba 	srai	r2,r3,2
  80a264:	01c00044 	movi	r7,1
  80a268:	30c00117 	ldw	r3,4(r6)
  80a26c:	388e983a 	sll	r7,r7,r2
  80a270:	2805883a 	mov	r2,r5
  80a274:	38c6b03a 	or	r3,r7,r3
  80a278:	30c00115 	stw	r3,4(r6)
  80a27c:	003f9b06 	br	80a0ec <__alt_data_end+0xff80a0ec>
  80a280:	00c15504 	movi	r3,1364
  80a284:	18801a36 	bltu	r3,r2,80a2f0 <_malloc_r+0x768>
  80a288:	8804d4ba 	srli	r2,r17,18
  80a28c:	12001f44 	addi	r8,r2,125
  80a290:	11c01f04 	addi	r7,r2,124
  80a294:	4209883a 	add	r4,r8,r8
  80a298:	003e5906 	br	809c00 <__alt_data_end+0xff809c00>
  80a29c:	ad400404 	addi	r21,r21,16
  80a2a0:	003f1706 	br	809f00 <__alt_data_end+0xff809f00>
  80a2a4:	00c01504 	movi	r3,84
  80a2a8:	18802336 	bltu	r3,r2,80a338 <_malloc_r+0x7b0>
  80a2ac:	3804d33a 	srli	r2,r7,12
  80a2b0:	11401bc4 	addi	r5,r2,111
  80a2b4:	10c01b84 	addi	r3,r2,110
  80a2b8:	294b883a 	add	r5,r5,r5
  80a2bc:	003f7b06 	br	80a0ac <__alt_data_end+0xff80a0ac>
  80a2c0:	9c000217 	ldw	r16,8(r19)
  80a2c4:	00bfff04 	movi	r2,-4
  80a2c8:	80c00117 	ldw	r3,4(r16)
  80a2cc:	1886703a 	and	r3,r3,r2
  80a2d0:	003f5306 	br	80a020 <__alt_data_end+0xff80a020>
  80a2d4:	3083ffcc 	andi	r2,r6,4095
  80a2d8:	103f181e 	bne	r2,zero,809f3c <__alt_data_end+0xff809f3c>
  80a2dc:	99000217 	ldw	r4,8(r19)
  80a2e0:	b545883a 	add	r2,r22,r21
  80a2e4:	10800054 	ori	r2,r2,1
  80a2e8:	20800115 	stw	r2,4(r4)
  80a2ec:	003f3e06 	br	809fe8 <__alt_data_end+0xff809fe8>
  80a2f0:	01003f84 	movi	r4,254
  80a2f4:	02001fc4 	movi	r8,127
  80a2f8:	01c01f84 	movi	r7,126
  80a2fc:	003e4006 	br	809c00 <__alt_data_end+0xff809c00>
  80a300:	00802074 	movhi	r2,129
  80a304:	108f5404 	addi	r2,r2,15696
  80a308:	15000015 	stw	r20,0(r2)
  80a30c:	003f1106 	br	809f54 <__alt_data_end+0xff809f54>
  80a310:	00800044 	movi	r2,1
  80a314:	002b883a 	mov	r21,zero
  80a318:	003f1f06 	br	809f98 <__alt_data_end+0xff809f98>
  80a31c:	81400204 	addi	r5,r16,8
  80a320:	9009883a 	mov	r4,r18
  80a324:	0808f9c0 	call	808f9c <_free_r>
  80a328:	00802074 	movhi	r2,129
  80a32c:	10962a04 	addi	r2,r2,22696
  80a330:	10c00017 	ldw	r3,0(r2)
  80a334:	003f2c06 	br	809fe8 <__alt_data_end+0xff809fe8>
  80a338:	00c05504 	movi	r3,340
  80a33c:	18800536 	bltu	r3,r2,80a354 <_malloc_r+0x7cc>
  80a340:	3804d3fa 	srli	r2,r7,15
  80a344:	11401e04 	addi	r5,r2,120
  80a348:	10c01dc4 	addi	r3,r2,119
  80a34c:	294b883a 	add	r5,r5,r5
  80a350:	003f5606 	br	80a0ac <__alt_data_end+0xff80a0ac>
  80a354:	00c15504 	movi	r3,1364
  80a358:	18800536 	bltu	r3,r2,80a370 <_malloc_r+0x7e8>
  80a35c:	3804d4ba 	srli	r2,r7,18
  80a360:	11401f44 	addi	r5,r2,125
  80a364:	10c01f04 	addi	r3,r2,124
  80a368:	294b883a 	add	r5,r5,r5
  80a36c:	003f4f06 	br	80a0ac <__alt_data_end+0xff80a0ac>
  80a370:	01403f84 	movi	r5,254
  80a374:	00c01f84 	movi	r3,126
  80a378:	003f4c06 	br	80a0ac <__alt_data_end+0xff80a0ac>
  80a37c:	98800117 	ldw	r2,4(r19)
  80a380:	003fa006 	br	80a204 <__alt_data_end+0xff80a204>
  80a384:	8808d0fa 	srli	r4,r17,3
  80a388:	20800044 	addi	r2,r4,1
  80a38c:	1085883a 	add	r2,r2,r2
  80a390:	003e9006 	br	809dd4 <__alt_data_end+0xff809dd4>

0080a394 <memchr>:
  80a394:	208000cc 	andi	r2,r4,3
  80a398:	280f883a 	mov	r7,r5
  80a39c:	10003426 	beq	r2,zero,80a470 <memchr+0xdc>
  80a3a0:	30bfffc4 	addi	r2,r6,-1
  80a3a4:	30001a26 	beq	r6,zero,80a410 <memchr+0x7c>
  80a3a8:	20c00003 	ldbu	r3,0(r4)
  80a3ac:	29803fcc 	andi	r6,r5,255
  80a3b0:	30c0051e 	bne	r6,r3,80a3c8 <memchr+0x34>
  80a3b4:	00001806 	br	80a418 <memchr+0x84>
  80a3b8:	10001526 	beq	r2,zero,80a410 <memchr+0x7c>
  80a3bc:	20c00003 	ldbu	r3,0(r4)
  80a3c0:	10bfffc4 	addi	r2,r2,-1
  80a3c4:	30c01426 	beq	r6,r3,80a418 <memchr+0x84>
  80a3c8:	21000044 	addi	r4,r4,1
  80a3cc:	20c000cc 	andi	r3,r4,3
  80a3d0:	183ff91e 	bne	r3,zero,80a3b8 <__alt_data_end+0xff80a3b8>
  80a3d4:	020000c4 	movi	r8,3
  80a3d8:	40801136 	bltu	r8,r2,80a420 <memchr+0x8c>
  80a3dc:	10000c26 	beq	r2,zero,80a410 <memchr+0x7c>
  80a3e0:	20c00003 	ldbu	r3,0(r4)
  80a3e4:	29403fcc 	andi	r5,r5,255
  80a3e8:	28c00b26 	beq	r5,r3,80a418 <memchr+0x84>
  80a3ec:	20c00044 	addi	r3,r4,1
  80a3f0:	39803fcc 	andi	r6,r7,255
  80a3f4:	2089883a 	add	r4,r4,r2
  80a3f8:	00000306 	br	80a408 <memchr+0x74>
  80a3fc:	18c00044 	addi	r3,r3,1
  80a400:	197fffc3 	ldbu	r5,-1(r3)
  80a404:	31400526 	beq	r6,r5,80a41c <memchr+0x88>
  80a408:	1805883a 	mov	r2,r3
  80a40c:	20fffb1e 	bne	r4,r3,80a3fc <__alt_data_end+0xff80a3fc>
  80a410:	0005883a 	mov	r2,zero
  80a414:	f800283a 	ret
  80a418:	2005883a 	mov	r2,r4
  80a41c:	f800283a 	ret
  80a420:	28c03fcc 	andi	r3,r5,255
  80a424:	1812923a 	slli	r9,r3,8
  80a428:	02ffbff4 	movhi	r11,65279
  80a42c:	02a02074 	movhi	r10,32897
  80a430:	48d2b03a 	or	r9,r9,r3
  80a434:	4806943a 	slli	r3,r9,16
  80a438:	5affbfc4 	addi	r11,r11,-257
  80a43c:	52a02004 	addi	r10,r10,-32640
  80a440:	48d2b03a 	or	r9,r9,r3
  80a444:	20c00017 	ldw	r3,0(r4)
  80a448:	48c6f03a 	xor	r3,r9,r3
  80a44c:	1acd883a 	add	r6,r3,r11
  80a450:	00c6303a 	nor	r3,zero,r3
  80a454:	30c6703a 	and	r3,r6,r3
  80a458:	1a86703a 	and	r3,r3,r10
  80a45c:	183fe01e 	bne	r3,zero,80a3e0 <__alt_data_end+0xff80a3e0>
  80a460:	10bfff04 	addi	r2,r2,-4
  80a464:	21000104 	addi	r4,r4,4
  80a468:	40bff636 	bltu	r8,r2,80a444 <__alt_data_end+0xff80a444>
  80a46c:	003fdb06 	br	80a3dc <__alt_data_end+0xff80a3dc>
  80a470:	3005883a 	mov	r2,r6
  80a474:	003fd706 	br	80a3d4 <__alt_data_end+0xff80a3d4>

0080a478 <memcpy>:
  80a478:	defffd04 	addi	sp,sp,-12
  80a47c:	dfc00215 	stw	ra,8(sp)
  80a480:	dc400115 	stw	r17,4(sp)
  80a484:	dc000015 	stw	r16,0(sp)
  80a488:	00c003c4 	movi	r3,15
  80a48c:	2005883a 	mov	r2,r4
  80a490:	1980452e 	bgeu	r3,r6,80a5a8 <memcpy+0x130>
  80a494:	2906b03a 	or	r3,r5,r4
  80a498:	18c000cc 	andi	r3,r3,3
  80a49c:	1800441e 	bne	r3,zero,80a5b0 <memcpy+0x138>
  80a4a0:	347ffc04 	addi	r17,r6,-16
  80a4a4:	8822d13a 	srli	r17,r17,4
  80a4a8:	28c00104 	addi	r3,r5,4
  80a4ac:	23400104 	addi	r13,r4,4
  80a4b0:	8820913a 	slli	r16,r17,4
  80a4b4:	2b000204 	addi	r12,r5,8
  80a4b8:	22c00204 	addi	r11,r4,8
  80a4bc:	84000504 	addi	r16,r16,20
  80a4c0:	2a800304 	addi	r10,r5,12
  80a4c4:	22400304 	addi	r9,r4,12
  80a4c8:	2c21883a 	add	r16,r5,r16
  80a4cc:	2811883a 	mov	r8,r5
  80a4d0:	200f883a 	mov	r7,r4
  80a4d4:	41000017 	ldw	r4,0(r8)
  80a4d8:	1fc00017 	ldw	ra,0(r3)
  80a4dc:	63c00017 	ldw	r15,0(r12)
  80a4e0:	39000015 	stw	r4,0(r7)
  80a4e4:	53800017 	ldw	r14,0(r10)
  80a4e8:	6fc00015 	stw	ra,0(r13)
  80a4ec:	5bc00015 	stw	r15,0(r11)
  80a4f0:	4b800015 	stw	r14,0(r9)
  80a4f4:	18c00404 	addi	r3,r3,16
  80a4f8:	39c00404 	addi	r7,r7,16
  80a4fc:	42000404 	addi	r8,r8,16
  80a500:	6b400404 	addi	r13,r13,16
  80a504:	63000404 	addi	r12,r12,16
  80a508:	5ac00404 	addi	r11,r11,16
  80a50c:	52800404 	addi	r10,r10,16
  80a510:	4a400404 	addi	r9,r9,16
  80a514:	1c3fef1e 	bne	r3,r16,80a4d4 <__alt_data_end+0xff80a4d4>
  80a518:	89c00044 	addi	r7,r17,1
  80a51c:	380e913a 	slli	r7,r7,4
  80a520:	310003cc 	andi	r4,r6,15
  80a524:	02c000c4 	movi	r11,3
  80a528:	11c7883a 	add	r3,r2,r7
  80a52c:	29cb883a 	add	r5,r5,r7
  80a530:	5900212e 	bgeu	r11,r4,80a5b8 <memcpy+0x140>
  80a534:	1813883a 	mov	r9,r3
  80a538:	2811883a 	mov	r8,r5
  80a53c:	200f883a 	mov	r7,r4
  80a540:	42800017 	ldw	r10,0(r8)
  80a544:	4a400104 	addi	r9,r9,4
  80a548:	39ffff04 	addi	r7,r7,-4
  80a54c:	4abfff15 	stw	r10,-4(r9)
  80a550:	42000104 	addi	r8,r8,4
  80a554:	59fffa36 	bltu	r11,r7,80a540 <__alt_data_end+0xff80a540>
  80a558:	213fff04 	addi	r4,r4,-4
  80a55c:	2008d0ba 	srli	r4,r4,2
  80a560:	318000cc 	andi	r6,r6,3
  80a564:	21000044 	addi	r4,r4,1
  80a568:	2109883a 	add	r4,r4,r4
  80a56c:	2109883a 	add	r4,r4,r4
  80a570:	1907883a 	add	r3,r3,r4
  80a574:	290b883a 	add	r5,r5,r4
  80a578:	30000626 	beq	r6,zero,80a594 <memcpy+0x11c>
  80a57c:	198d883a 	add	r6,r3,r6
  80a580:	29c00003 	ldbu	r7,0(r5)
  80a584:	18c00044 	addi	r3,r3,1
  80a588:	29400044 	addi	r5,r5,1
  80a58c:	19ffffc5 	stb	r7,-1(r3)
  80a590:	19bffb1e 	bne	r3,r6,80a580 <__alt_data_end+0xff80a580>
  80a594:	dfc00217 	ldw	ra,8(sp)
  80a598:	dc400117 	ldw	r17,4(sp)
  80a59c:	dc000017 	ldw	r16,0(sp)
  80a5a0:	dec00304 	addi	sp,sp,12
  80a5a4:	f800283a 	ret
  80a5a8:	2007883a 	mov	r3,r4
  80a5ac:	003ff206 	br	80a578 <__alt_data_end+0xff80a578>
  80a5b0:	2007883a 	mov	r3,r4
  80a5b4:	003ff106 	br	80a57c <__alt_data_end+0xff80a57c>
  80a5b8:	200d883a 	mov	r6,r4
  80a5bc:	003fee06 	br	80a578 <__alt_data_end+0xff80a578>

0080a5c0 <memmove>:
  80a5c0:	2005883a 	mov	r2,r4
  80a5c4:	29000b2e 	bgeu	r5,r4,80a5f4 <memmove+0x34>
  80a5c8:	298f883a 	add	r7,r5,r6
  80a5cc:	21c0092e 	bgeu	r4,r7,80a5f4 <memmove+0x34>
  80a5d0:	2187883a 	add	r3,r4,r6
  80a5d4:	198bc83a 	sub	r5,r3,r6
  80a5d8:	30004826 	beq	r6,zero,80a6fc <memmove+0x13c>
  80a5dc:	39ffffc4 	addi	r7,r7,-1
  80a5e0:	39000003 	ldbu	r4,0(r7)
  80a5e4:	18ffffc4 	addi	r3,r3,-1
  80a5e8:	19000005 	stb	r4,0(r3)
  80a5ec:	28fffb1e 	bne	r5,r3,80a5dc <__alt_data_end+0xff80a5dc>
  80a5f0:	f800283a 	ret
  80a5f4:	00c003c4 	movi	r3,15
  80a5f8:	1980412e 	bgeu	r3,r6,80a700 <memmove+0x140>
  80a5fc:	2886b03a 	or	r3,r5,r2
  80a600:	18c000cc 	andi	r3,r3,3
  80a604:	1800401e 	bne	r3,zero,80a708 <memmove+0x148>
  80a608:	33fffc04 	addi	r15,r6,-16
  80a60c:	781ed13a 	srli	r15,r15,4
  80a610:	28c00104 	addi	r3,r5,4
  80a614:	13400104 	addi	r13,r2,4
  80a618:	781c913a 	slli	r14,r15,4
  80a61c:	2b000204 	addi	r12,r5,8
  80a620:	12c00204 	addi	r11,r2,8
  80a624:	73800504 	addi	r14,r14,20
  80a628:	2a800304 	addi	r10,r5,12
  80a62c:	12400304 	addi	r9,r2,12
  80a630:	2b9d883a 	add	r14,r5,r14
  80a634:	2811883a 	mov	r8,r5
  80a638:	100f883a 	mov	r7,r2
  80a63c:	41000017 	ldw	r4,0(r8)
  80a640:	39c00404 	addi	r7,r7,16
  80a644:	18c00404 	addi	r3,r3,16
  80a648:	393ffc15 	stw	r4,-16(r7)
  80a64c:	193ffc17 	ldw	r4,-16(r3)
  80a650:	6b400404 	addi	r13,r13,16
  80a654:	5ac00404 	addi	r11,r11,16
  80a658:	693ffc15 	stw	r4,-16(r13)
  80a65c:	61000017 	ldw	r4,0(r12)
  80a660:	4a400404 	addi	r9,r9,16
  80a664:	42000404 	addi	r8,r8,16
  80a668:	593ffc15 	stw	r4,-16(r11)
  80a66c:	51000017 	ldw	r4,0(r10)
  80a670:	63000404 	addi	r12,r12,16
  80a674:	52800404 	addi	r10,r10,16
  80a678:	493ffc15 	stw	r4,-16(r9)
  80a67c:	1bbfef1e 	bne	r3,r14,80a63c <__alt_data_end+0xff80a63c>
  80a680:	79000044 	addi	r4,r15,1
  80a684:	2008913a 	slli	r4,r4,4
  80a688:	328003cc 	andi	r10,r6,15
  80a68c:	02c000c4 	movi	r11,3
  80a690:	1107883a 	add	r3,r2,r4
  80a694:	290b883a 	add	r5,r5,r4
  80a698:	5a801e2e 	bgeu	r11,r10,80a714 <memmove+0x154>
  80a69c:	1813883a 	mov	r9,r3
  80a6a0:	2811883a 	mov	r8,r5
  80a6a4:	500f883a 	mov	r7,r10
  80a6a8:	41000017 	ldw	r4,0(r8)
  80a6ac:	4a400104 	addi	r9,r9,4
  80a6b0:	39ffff04 	addi	r7,r7,-4
  80a6b4:	493fff15 	stw	r4,-4(r9)
  80a6b8:	42000104 	addi	r8,r8,4
  80a6bc:	59fffa36 	bltu	r11,r7,80a6a8 <__alt_data_end+0xff80a6a8>
  80a6c0:	513fff04 	addi	r4,r10,-4
  80a6c4:	2008d0ba 	srli	r4,r4,2
  80a6c8:	318000cc 	andi	r6,r6,3
  80a6cc:	21000044 	addi	r4,r4,1
  80a6d0:	2109883a 	add	r4,r4,r4
  80a6d4:	2109883a 	add	r4,r4,r4
  80a6d8:	1907883a 	add	r3,r3,r4
  80a6dc:	290b883a 	add	r5,r5,r4
  80a6e0:	30000b26 	beq	r6,zero,80a710 <memmove+0x150>
  80a6e4:	198d883a 	add	r6,r3,r6
  80a6e8:	29c00003 	ldbu	r7,0(r5)
  80a6ec:	18c00044 	addi	r3,r3,1
  80a6f0:	29400044 	addi	r5,r5,1
  80a6f4:	19ffffc5 	stb	r7,-1(r3)
  80a6f8:	19bffb1e 	bne	r3,r6,80a6e8 <__alt_data_end+0xff80a6e8>
  80a6fc:	f800283a 	ret
  80a700:	1007883a 	mov	r3,r2
  80a704:	003ff606 	br	80a6e0 <__alt_data_end+0xff80a6e0>
  80a708:	1007883a 	mov	r3,r2
  80a70c:	003ff506 	br	80a6e4 <__alt_data_end+0xff80a6e4>
  80a710:	f800283a 	ret
  80a714:	500d883a 	mov	r6,r10
  80a718:	003ff106 	br	80a6e0 <__alt_data_end+0xff80a6e0>

0080a71c <memset>:
  80a71c:	20c000cc 	andi	r3,r4,3
  80a720:	2005883a 	mov	r2,r4
  80a724:	18004426 	beq	r3,zero,80a838 <memset+0x11c>
  80a728:	31ffffc4 	addi	r7,r6,-1
  80a72c:	30004026 	beq	r6,zero,80a830 <memset+0x114>
  80a730:	2813883a 	mov	r9,r5
  80a734:	200d883a 	mov	r6,r4
  80a738:	2007883a 	mov	r3,r4
  80a73c:	00000406 	br	80a750 <memset+0x34>
  80a740:	3a3fffc4 	addi	r8,r7,-1
  80a744:	31800044 	addi	r6,r6,1
  80a748:	38003926 	beq	r7,zero,80a830 <memset+0x114>
  80a74c:	400f883a 	mov	r7,r8
  80a750:	18c00044 	addi	r3,r3,1
  80a754:	32400005 	stb	r9,0(r6)
  80a758:	1a0000cc 	andi	r8,r3,3
  80a75c:	403ff81e 	bne	r8,zero,80a740 <__alt_data_end+0xff80a740>
  80a760:	010000c4 	movi	r4,3
  80a764:	21c02d2e 	bgeu	r4,r7,80a81c <memset+0x100>
  80a768:	29003fcc 	andi	r4,r5,255
  80a76c:	200c923a 	slli	r6,r4,8
  80a770:	3108b03a 	or	r4,r6,r4
  80a774:	200c943a 	slli	r6,r4,16
  80a778:	218cb03a 	or	r6,r4,r6
  80a77c:	010003c4 	movi	r4,15
  80a780:	21c0182e 	bgeu	r4,r7,80a7e4 <memset+0xc8>
  80a784:	3b3ffc04 	addi	r12,r7,-16
  80a788:	6018d13a 	srli	r12,r12,4
  80a78c:	1a000104 	addi	r8,r3,4
  80a790:	1ac00204 	addi	r11,r3,8
  80a794:	6008913a 	slli	r4,r12,4
  80a798:	1a800304 	addi	r10,r3,12
  80a79c:	1813883a 	mov	r9,r3
  80a7a0:	21000504 	addi	r4,r4,20
  80a7a4:	1909883a 	add	r4,r3,r4
  80a7a8:	49800015 	stw	r6,0(r9)
  80a7ac:	41800015 	stw	r6,0(r8)
  80a7b0:	59800015 	stw	r6,0(r11)
  80a7b4:	51800015 	stw	r6,0(r10)
  80a7b8:	42000404 	addi	r8,r8,16
  80a7bc:	4a400404 	addi	r9,r9,16
  80a7c0:	5ac00404 	addi	r11,r11,16
  80a7c4:	52800404 	addi	r10,r10,16
  80a7c8:	413ff71e 	bne	r8,r4,80a7a8 <__alt_data_end+0xff80a7a8>
  80a7cc:	63000044 	addi	r12,r12,1
  80a7d0:	6018913a 	slli	r12,r12,4
  80a7d4:	39c003cc 	andi	r7,r7,15
  80a7d8:	010000c4 	movi	r4,3
  80a7dc:	1b07883a 	add	r3,r3,r12
  80a7e0:	21c00e2e 	bgeu	r4,r7,80a81c <memset+0x100>
  80a7e4:	1813883a 	mov	r9,r3
  80a7e8:	3811883a 	mov	r8,r7
  80a7ec:	010000c4 	movi	r4,3
  80a7f0:	49800015 	stw	r6,0(r9)
  80a7f4:	423fff04 	addi	r8,r8,-4
  80a7f8:	4a400104 	addi	r9,r9,4
  80a7fc:	223ffc36 	bltu	r4,r8,80a7f0 <__alt_data_end+0xff80a7f0>
  80a800:	393fff04 	addi	r4,r7,-4
  80a804:	2008d0ba 	srli	r4,r4,2
  80a808:	39c000cc 	andi	r7,r7,3
  80a80c:	21000044 	addi	r4,r4,1
  80a810:	2109883a 	add	r4,r4,r4
  80a814:	2109883a 	add	r4,r4,r4
  80a818:	1907883a 	add	r3,r3,r4
  80a81c:	38000526 	beq	r7,zero,80a834 <memset+0x118>
  80a820:	19cf883a 	add	r7,r3,r7
  80a824:	19400005 	stb	r5,0(r3)
  80a828:	18c00044 	addi	r3,r3,1
  80a82c:	38fffd1e 	bne	r7,r3,80a824 <__alt_data_end+0xff80a824>
  80a830:	f800283a 	ret
  80a834:	f800283a 	ret
  80a838:	2007883a 	mov	r3,r4
  80a83c:	300f883a 	mov	r7,r6
  80a840:	003fc706 	br	80a760 <__alt_data_end+0xff80a760>

0080a844 <_Balloc>:
  80a844:	20801317 	ldw	r2,76(r4)
  80a848:	defffc04 	addi	sp,sp,-16
  80a84c:	dc400115 	stw	r17,4(sp)
  80a850:	dc000015 	stw	r16,0(sp)
  80a854:	dfc00315 	stw	ra,12(sp)
  80a858:	dc800215 	stw	r18,8(sp)
  80a85c:	2023883a 	mov	r17,r4
  80a860:	2821883a 	mov	r16,r5
  80a864:	10000f26 	beq	r2,zero,80a8a4 <_Balloc+0x60>
  80a868:	8407883a 	add	r3,r16,r16
  80a86c:	18c7883a 	add	r3,r3,r3
  80a870:	10c7883a 	add	r3,r2,r3
  80a874:	18800017 	ldw	r2,0(r3)
  80a878:	10001126 	beq	r2,zero,80a8c0 <_Balloc+0x7c>
  80a87c:	11000017 	ldw	r4,0(r2)
  80a880:	19000015 	stw	r4,0(r3)
  80a884:	10000415 	stw	zero,16(r2)
  80a888:	10000315 	stw	zero,12(r2)
  80a88c:	dfc00317 	ldw	ra,12(sp)
  80a890:	dc800217 	ldw	r18,8(sp)
  80a894:	dc400117 	ldw	r17,4(sp)
  80a898:	dc000017 	ldw	r16,0(sp)
  80a89c:	dec00404 	addi	sp,sp,16
  80a8a0:	f800283a 	ret
  80a8a4:	01800844 	movi	r6,33
  80a8a8:	01400104 	movi	r5,4
  80a8ac:	080d7800 	call	80d780 <_calloc_r>
  80a8b0:	88801315 	stw	r2,76(r17)
  80a8b4:	103fec1e 	bne	r2,zero,80a868 <__alt_data_end+0xff80a868>
  80a8b8:	0005883a 	mov	r2,zero
  80a8bc:	003ff306 	br	80a88c <__alt_data_end+0xff80a88c>
  80a8c0:	01400044 	movi	r5,1
  80a8c4:	2c24983a 	sll	r18,r5,r16
  80a8c8:	8809883a 	mov	r4,r17
  80a8cc:	91800144 	addi	r6,r18,5
  80a8d0:	318d883a 	add	r6,r6,r6
  80a8d4:	318d883a 	add	r6,r6,r6
  80a8d8:	080d7800 	call	80d780 <_calloc_r>
  80a8dc:	103ff626 	beq	r2,zero,80a8b8 <__alt_data_end+0xff80a8b8>
  80a8e0:	14000115 	stw	r16,4(r2)
  80a8e4:	14800215 	stw	r18,8(r2)
  80a8e8:	003fe606 	br	80a884 <__alt_data_end+0xff80a884>

0080a8ec <_Bfree>:
  80a8ec:	28000826 	beq	r5,zero,80a910 <_Bfree+0x24>
  80a8f0:	28c00117 	ldw	r3,4(r5)
  80a8f4:	20801317 	ldw	r2,76(r4)
  80a8f8:	18c7883a 	add	r3,r3,r3
  80a8fc:	18c7883a 	add	r3,r3,r3
  80a900:	10c5883a 	add	r2,r2,r3
  80a904:	10c00017 	ldw	r3,0(r2)
  80a908:	28c00015 	stw	r3,0(r5)
  80a90c:	11400015 	stw	r5,0(r2)
  80a910:	f800283a 	ret

0080a914 <__multadd>:
  80a914:	defffa04 	addi	sp,sp,-24
  80a918:	dc800315 	stw	r18,12(sp)
  80a91c:	dc400215 	stw	r17,8(sp)
  80a920:	dc000115 	stw	r16,4(sp)
  80a924:	2823883a 	mov	r17,r5
  80a928:	2c000417 	ldw	r16,16(r5)
  80a92c:	dfc00515 	stw	ra,20(sp)
  80a930:	dcc00415 	stw	r19,16(sp)
  80a934:	2025883a 	mov	r18,r4
  80a938:	29400504 	addi	r5,r5,20
  80a93c:	0011883a 	mov	r8,zero
  80a940:	28c00017 	ldw	r3,0(r5)
  80a944:	29400104 	addi	r5,r5,4
  80a948:	42000044 	addi	r8,r8,1
  80a94c:	18bfffcc 	andi	r2,r3,65535
  80a950:	1185383a 	mul	r2,r2,r6
  80a954:	1806d43a 	srli	r3,r3,16
  80a958:	11cf883a 	add	r7,r2,r7
  80a95c:	3808d43a 	srli	r4,r7,16
  80a960:	1987383a 	mul	r3,r3,r6
  80a964:	38bfffcc 	andi	r2,r7,65535
  80a968:	1907883a 	add	r3,r3,r4
  80a96c:	1808943a 	slli	r4,r3,16
  80a970:	180ed43a 	srli	r7,r3,16
  80a974:	2085883a 	add	r2,r4,r2
  80a978:	28bfff15 	stw	r2,-4(r5)
  80a97c:	443ff016 	blt	r8,r16,80a940 <__alt_data_end+0xff80a940>
  80a980:	38000926 	beq	r7,zero,80a9a8 <__multadd+0x94>
  80a984:	88800217 	ldw	r2,8(r17)
  80a988:	80800f0e 	bge	r16,r2,80a9c8 <__multadd+0xb4>
  80a98c:	80800144 	addi	r2,r16,5
  80a990:	1085883a 	add	r2,r2,r2
  80a994:	1085883a 	add	r2,r2,r2
  80a998:	8885883a 	add	r2,r17,r2
  80a99c:	11c00015 	stw	r7,0(r2)
  80a9a0:	84000044 	addi	r16,r16,1
  80a9a4:	8c000415 	stw	r16,16(r17)
  80a9a8:	8805883a 	mov	r2,r17
  80a9ac:	dfc00517 	ldw	ra,20(sp)
  80a9b0:	dcc00417 	ldw	r19,16(sp)
  80a9b4:	dc800317 	ldw	r18,12(sp)
  80a9b8:	dc400217 	ldw	r17,8(sp)
  80a9bc:	dc000117 	ldw	r16,4(sp)
  80a9c0:	dec00604 	addi	sp,sp,24
  80a9c4:	f800283a 	ret
  80a9c8:	89400117 	ldw	r5,4(r17)
  80a9cc:	9009883a 	mov	r4,r18
  80a9d0:	d9c00015 	stw	r7,0(sp)
  80a9d4:	29400044 	addi	r5,r5,1
  80a9d8:	080a8440 	call	80a844 <_Balloc>
  80a9dc:	89800417 	ldw	r6,16(r17)
  80a9e0:	89400304 	addi	r5,r17,12
  80a9e4:	11000304 	addi	r4,r2,12
  80a9e8:	31800084 	addi	r6,r6,2
  80a9ec:	318d883a 	add	r6,r6,r6
  80a9f0:	318d883a 	add	r6,r6,r6
  80a9f4:	1027883a 	mov	r19,r2
  80a9f8:	080a4780 	call	80a478 <memcpy>
  80a9fc:	d9c00017 	ldw	r7,0(sp)
  80aa00:	88000a26 	beq	r17,zero,80aa2c <__multadd+0x118>
  80aa04:	88c00117 	ldw	r3,4(r17)
  80aa08:	90801317 	ldw	r2,76(r18)
  80aa0c:	18c7883a 	add	r3,r3,r3
  80aa10:	18c7883a 	add	r3,r3,r3
  80aa14:	10c5883a 	add	r2,r2,r3
  80aa18:	10c00017 	ldw	r3,0(r2)
  80aa1c:	88c00015 	stw	r3,0(r17)
  80aa20:	14400015 	stw	r17,0(r2)
  80aa24:	9823883a 	mov	r17,r19
  80aa28:	003fd806 	br	80a98c <__alt_data_end+0xff80a98c>
  80aa2c:	9823883a 	mov	r17,r19
  80aa30:	003fd606 	br	80a98c <__alt_data_end+0xff80a98c>

0080aa34 <__s2b>:
  80aa34:	defff904 	addi	sp,sp,-28
  80aa38:	dc400115 	stw	r17,4(sp)
  80aa3c:	dc000015 	stw	r16,0(sp)
  80aa40:	2023883a 	mov	r17,r4
  80aa44:	2821883a 	mov	r16,r5
  80aa48:	39000204 	addi	r4,r7,8
  80aa4c:	01400244 	movi	r5,9
  80aa50:	dcc00315 	stw	r19,12(sp)
  80aa54:	dc800215 	stw	r18,8(sp)
  80aa58:	dfc00615 	stw	ra,24(sp)
  80aa5c:	dd400515 	stw	r21,20(sp)
  80aa60:	dd000415 	stw	r20,16(sp)
  80aa64:	3825883a 	mov	r18,r7
  80aa68:	3027883a 	mov	r19,r6
  80aa6c:	08027c80 	call	8027c8 <__divsi3>
  80aa70:	00c00044 	movi	r3,1
  80aa74:	000b883a 	mov	r5,zero
  80aa78:	1880030e 	bge	r3,r2,80aa88 <__s2b+0x54>
  80aa7c:	18c7883a 	add	r3,r3,r3
  80aa80:	29400044 	addi	r5,r5,1
  80aa84:	18bffd16 	blt	r3,r2,80aa7c <__alt_data_end+0xff80aa7c>
  80aa88:	8809883a 	mov	r4,r17
  80aa8c:	080a8440 	call	80a844 <_Balloc>
  80aa90:	d8c00717 	ldw	r3,28(sp)
  80aa94:	10c00515 	stw	r3,20(r2)
  80aa98:	00c00044 	movi	r3,1
  80aa9c:	10c00415 	stw	r3,16(r2)
  80aaa0:	00c00244 	movi	r3,9
  80aaa4:	1cc0210e 	bge	r3,r19,80ab2c <__s2b+0xf8>
  80aaa8:	80eb883a 	add	r21,r16,r3
  80aaac:	a829883a 	mov	r20,r21
  80aab0:	84e1883a 	add	r16,r16,r19
  80aab4:	a1c00007 	ldb	r7,0(r20)
  80aab8:	01800284 	movi	r6,10
  80aabc:	a5000044 	addi	r20,r20,1
  80aac0:	100b883a 	mov	r5,r2
  80aac4:	39fff404 	addi	r7,r7,-48
  80aac8:	8809883a 	mov	r4,r17
  80aacc:	080a9140 	call	80a914 <__multadd>
  80aad0:	a43ff81e 	bne	r20,r16,80aab4 <__alt_data_end+0xff80aab4>
  80aad4:	ace1883a 	add	r16,r21,r19
  80aad8:	843ffe04 	addi	r16,r16,-8
  80aadc:	9c800a0e 	bge	r19,r18,80ab08 <__s2b+0xd4>
  80aae0:	94e5c83a 	sub	r18,r18,r19
  80aae4:	84a5883a 	add	r18,r16,r18
  80aae8:	81c00007 	ldb	r7,0(r16)
  80aaec:	01800284 	movi	r6,10
  80aaf0:	84000044 	addi	r16,r16,1
  80aaf4:	100b883a 	mov	r5,r2
  80aaf8:	39fff404 	addi	r7,r7,-48
  80aafc:	8809883a 	mov	r4,r17
  80ab00:	080a9140 	call	80a914 <__multadd>
  80ab04:	84bff81e 	bne	r16,r18,80aae8 <__alt_data_end+0xff80aae8>
  80ab08:	dfc00617 	ldw	ra,24(sp)
  80ab0c:	dd400517 	ldw	r21,20(sp)
  80ab10:	dd000417 	ldw	r20,16(sp)
  80ab14:	dcc00317 	ldw	r19,12(sp)
  80ab18:	dc800217 	ldw	r18,8(sp)
  80ab1c:	dc400117 	ldw	r17,4(sp)
  80ab20:	dc000017 	ldw	r16,0(sp)
  80ab24:	dec00704 	addi	sp,sp,28
  80ab28:	f800283a 	ret
  80ab2c:	84000284 	addi	r16,r16,10
  80ab30:	1827883a 	mov	r19,r3
  80ab34:	003fe906 	br	80aadc <__alt_data_end+0xff80aadc>

0080ab38 <__hi0bits>:
  80ab38:	20bfffec 	andhi	r2,r4,65535
  80ab3c:	1000141e 	bne	r2,zero,80ab90 <__hi0bits+0x58>
  80ab40:	2008943a 	slli	r4,r4,16
  80ab44:	00800404 	movi	r2,16
  80ab48:	20ffc02c 	andhi	r3,r4,65280
  80ab4c:	1800021e 	bne	r3,zero,80ab58 <__hi0bits+0x20>
  80ab50:	2008923a 	slli	r4,r4,8
  80ab54:	10800204 	addi	r2,r2,8
  80ab58:	20fc002c 	andhi	r3,r4,61440
  80ab5c:	1800021e 	bne	r3,zero,80ab68 <__hi0bits+0x30>
  80ab60:	2008913a 	slli	r4,r4,4
  80ab64:	10800104 	addi	r2,r2,4
  80ab68:	20f0002c 	andhi	r3,r4,49152
  80ab6c:	1800031e 	bne	r3,zero,80ab7c <__hi0bits+0x44>
  80ab70:	2109883a 	add	r4,r4,r4
  80ab74:	10800084 	addi	r2,r2,2
  80ab78:	2109883a 	add	r4,r4,r4
  80ab7c:	20000316 	blt	r4,zero,80ab8c <__hi0bits+0x54>
  80ab80:	2110002c 	andhi	r4,r4,16384
  80ab84:	2000041e 	bne	r4,zero,80ab98 <__hi0bits+0x60>
  80ab88:	00800804 	movi	r2,32
  80ab8c:	f800283a 	ret
  80ab90:	0005883a 	mov	r2,zero
  80ab94:	003fec06 	br	80ab48 <__alt_data_end+0xff80ab48>
  80ab98:	10800044 	addi	r2,r2,1
  80ab9c:	f800283a 	ret

0080aba0 <__lo0bits>:
  80aba0:	20c00017 	ldw	r3,0(r4)
  80aba4:	188001cc 	andi	r2,r3,7
  80aba8:	10000826 	beq	r2,zero,80abcc <__lo0bits+0x2c>
  80abac:	1880004c 	andi	r2,r3,1
  80abb0:	1000211e 	bne	r2,zero,80ac38 <__lo0bits+0x98>
  80abb4:	1880008c 	andi	r2,r3,2
  80abb8:	1000211e 	bne	r2,zero,80ac40 <__lo0bits+0xa0>
  80abbc:	1806d0ba 	srli	r3,r3,2
  80abc0:	00800084 	movi	r2,2
  80abc4:	20c00015 	stw	r3,0(r4)
  80abc8:	f800283a 	ret
  80abcc:	18bfffcc 	andi	r2,r3,65535
  80abd0:	10001326 	beq	r2,zero,80ac20 <__lo0bits+0x80>
  80abd4:	0005883a 	mov	r2,zero
  80abd8:	19403fcc 	andi	r5,r3,255
  80abdc:	2800021e 	bne	r5,zero,80abe8 <__lo0bits+0x48>
  80abe0:	1806d23a 	srli	r3,r3,8
  80abe4:	10800204 	addi	r2,r2,8
  80abe8:	194003cc 	andi	r5,r3,15
  80abec:	2800021e 	bne	r5,zero,80abf8 <__lo0bits+0x58>
  80abf0:	1806d13a 	srli	r3,r3,4
  80abf4:	10800104 	addi	r2,r2,4
  80abf8:	194000cc 	andi	r5,r3,3
  80abfc:	2800021e 	bne	r5,zero,80ac08 <__lo0bits+0x68>
  80ac00:	1806d0ba 	srli	r3,r3,2
  80ac04:	10800084 	addi	r2,r2,2
  80ac08:	1940004c 	andi	r5,r3,1
  80ac0c:	2800081e 	bne	r5,zero,80ac30 <__lo0bits+0x90>
  80ac10:	1806d07a 	srli	r3,r3,1
  80ac14:	1800051e 	bne	r3,zero,80ac2c <__lo0bits+0x8c>
  80ac18:	00800804 	movi	r2,32
  80ac1c:	f800283a 	ret
  80ac20:	1806d43a 	srli	r3,r3,16
  80ac24:	00800404 	movi	r2,16
  80ac28:	003feb06 	br	80abd8 <__alt_data_end+0xff80abd8>
  80ac2c:	10800044 	addi	r2,r2,1
  80ac30:	20c00015 	stw	r3,0(r4)
  80ac34:	f800283a 	ret
  80ac38:	0005883a 	mov	r2,zero
  80ac3c:	f800283a 	ret
  80ac40:	1806d07a 	srli	r3,r3,1
  80ac44:	00800044 	movi	r2,1
  80ac48:	20c00015 	stw	r3,0(r4)
  80ac4c:	f800283a 	ret

0080ac50 <__i2b>:
  80ac50:	defffd04 	addi	sp,sp,-12
  80ac54:	dc000015 	stw	r16,0(sp)
  80ac58:	04000044 	movi	r16,1
  80ac5c:	dc400115 	stw	r17,4(sp)
  80ac60:	2823883a 	mov	r17,r5
  80ac64:	800b883a 	mov	r5,r16
  80ac68:	dfc00215 	stw	ra,8(sp)
  80ac6c:	080a8440 	call	80a844 <_Balloc>
  80ac70:	14400515 	stw	r17,20(r2)
  80ac74:	14000415 	stw	r16,16(r2)
  80ac78:	dfc00217 	ldw	ra,8(sp)
  80ac7c:	dc400117 	ldw	r17,4(sp)
  80ac80:	dc000017 	ldw	r16,0(sp)
  80ac84:	dec00304 	addi	sp,sp,12
  80ac88:	f800283a 	ret

0080ac8c <__multiply>:
  80ac8c:	defffa04 	addi	sp,sp,-24
  80ac90:	dcc00315 	stw	r19,12(sp)
  80ac94:	dc800215 	stw	r18,8(sp)
  80ac98:	34c00417 	ldw	r19,16(r6)
  80ac9c:	2c800417 	ldw	r18,16(r5)
  80aca0:	dd000415 	stw	r20,16(sp)
  80aca4:	dc400115 	stw	r17,4(sp)
  80aca8:	dfc00515 	stw	ra,20(sp)
  80acac:	dc000015 	stw	r16,0(sp)
  80acb0:	2829883a 	mov	r20,r5
  80acb4:	3023883a 	mov	r17,r6
  80acb8:	94c0050e 	bge	r18,r19,80acd0 <__multiply+0x44>
  80acbc:	9007883a 	mov	r3,r18
  80acc0:	3029883a 	mov	r20,r6
  80acc4:	9825883a 	mov	r18,r19
  80acc8:	2823883a 	mov	r17,r5
  80accc:	1827883a 	mov	r19,r3
  80acd0:	a0800217 	ldw	r2,8(r20)
  80acd4:	94e1883a 	add	r16,r18,r19
  80acd8:	a1400117 	ldw	r5,4(r20)
  80acdc:	1400010e 	bge	r2,r16,80ace4 <__multiply+0x58>
  80ace0:	29400044 	addi	r5,r5,1
  80ace4:	080a8440 	call	80a844 <_Balloc>
  80ace8:	8415883a 	add	r10,r16,r16
  80acec:	12c00504 	addi	r11,r2,20
  80acf0:	5295883a 	add	r10,r10,r10
  80acf4:	5a95883a 	add	r10,r11,r10
  80acf8:	5807883a 	mov	r3,r11
  80acfc:	5a80032e 	bgeu	r11,r10,80ad0c <__multiply+0x80>
  80ad00:	18000015 	stw	zero,0(r3)
  80ad04:	18c00104 	addi	r3,r3,4
  80ad08:	1abffd36 	bltu	r3,r10,80ad00 <__alt_data_end+0xff80ad00>
  80ad0c:	9ce7883a 	add	r19,r19,r19
  80ad10:	94a5883a 	add	r18,r18,r18
  80ad14:	89800504 	addi	r6,r17,20
  80ad18:	9ce7883a 	add	r19,r19,r19
  80ad1c:	a3400504 	addi	r13,r20,20
  80ad20:	94a5883a 	add	r18,r18,r18
  80ad24:	34d9883a 	add	r12,r6,r19
  80ad28:	6c93883a 	add	r9,r13,r18
  80ad2c:	3300422e 	bgeu	r6,r12,80ae38 <__multiply+0x1ac>
  80ad30:	37c00017 	ldw	ra,0(r6)
  80ad34:	fbffffcc 	andi	r15,ra,65535
  80ad38:	78001b26 	beq	r15,zero,80ada8 <__multiply+0x11c>
  80ad3c:	5811883a 	mov	r8,r11
  80ad40:	681d883a 	mov	r14,r13
  80ad44:	000f883a 	mov	r7,zero
  80ad48:	71000017 	ldw	r4,0(r14)
  80ad4c:	40c00017 	ldw	r3,0(r8)
  80ad50:	73800104 	addi	r14,r14,4
  80ad54:	217fffcc 	andi	r5,r4,65535
  80ad58:	2bcb383a 	mul	r5,r5,r15
  80ad5c:	2008d43a 	srli	r4,r4,16
  80ad60:	1c7fffcc 	andi	r17,r3,65535
  80ad64:	2c4b883a 	add	r5,r5,r17
  80ad68:	29cb883a 	add	r5,r5,r7
  80ad6c:	23c9383a 	mul	r4,r4,r15
  80ad70:	1806d43a 	srli	r3,r3,16
  80ad74:	280ed43a 	srli	r7,r5,16
  80ad78:	297fffcc 	andi	r5,r5,65535
  80ad7c:	20c7883a 	add	r3,r4,r3
  80ad80:	19c7883a 	add	r3,r3,r7
  80ad84:	1808943a 	slli	r4,r3,16
  80ad88:	4023883a 	mov	r17,r8
  80ad8c:	180ed43a 	srli	r7,r3,16
  80ad90:	214ab03a 	or	r5,r4,r5
  80ad94:	41400015 	stw	r5,0(r8)
  80ad98:	42000104 	addi	r8,r8,4
  80ad9c:	727fea36 	bltu	r14,r9,80ad48 <__alt_data_end+0xff80ad48>
  80ada0:	89c00115 	stw	r7,4(r17)
  80ada4:	37c00017 	ldw	ra,0(r6)
  80ada8:	f83ed43a 	srli	ra,ra,16
  80adac:	f8001f26 	beq	ra,zero,80ae2c <__multiply+0x1a0>
  80adb0:	58c00017 	ldw	r3,0(r11)
  80adb4:	681d883a 	mov	r14,r13
  80adb8:	581f883a 	mov	r15,r11
  80adbc:	1811883a 	mov	r8,r3
  80adc0:	5825883a 	mov	r18,r11
  80adc4:	000f883a 	mov	r7,zero
  80adc8:	00000106 	br	80add0 <__multiply+0x144>
  80adcc:	8825883a 	mov	r18,r17
  80add0:	7140000b 	ldhu	r5,0(r14)
  80add4:	4010d43a 	srli	r8,r8,16
  80add8:	193fffcc 	andi	r4,r3,65535
  80addc:	2fcb383a 	mul	r5,r5,ra
  80ade0:	7bc00104 	addi	r15,r15,4
  80ade4:	73800104 	addi	r14,r14,4
  80ade8:	2a0b883a 	add	r5,r5,r8
  80adec:	29cb883a 	add	r5,r5,r7
  80adf0:	2806943a 	slli	r3,r5,16
  80adf4:	94400104 	addi	r17,r18,4
  80adf8:	280ad43a 	srli	r5,r5,16
  80adfc:	1908b03a 	or	r4,r3,r4
  80ae00:	793fff15 	stw	r4,-4(r15)
  80ae04:	70ffff17 	ldw	r3,-4(r14)
  80ae08:	8a000017 	ldw	r8,0(r17)
  80ae0c:	1806d43a 	srli	r3,r3,16
  80ae10:	413fffcc 	andi	r4,r8,65535
  80ae14:	1fc7383a 	mul	r3,r3,ra
  80ae18:	1907883a 	add	r3,r3,r4
  80ae1c:	1947883a 	add	r3,r3,r5
  80ae20:	180ed43a 	srli	r7,r3,16
  80ae24:	727fe936 	bltu	r14,r9,80adcc <__alt_data_end+0xff80adcc>
  80ae28:	90c00115 	stw	r3,4(r18)
  80ae2c:	31800104 	addi	r6,r6,4
  80ae30:	5ac00104 	addi	r11,r11,4
  80ae34:	333fbe36 	bltu	r6,r12,80ad30 <__alt_data_end+0xff80ad30>
  80ae38:	0400090e 	bge	zero,r16,80ae60 <__multiply+0x1d4>
  80ae3c:	50ffff17 	ldw	r3,-4(r10)
  80ae40:	52bfff04 	addi	r10,r10,-4
  80ae44:	18000326 	beq	r3,zero,80ae54 <__multiply+0x1c8>
  80ae48:	00000506 	br	80ae60 <__multiply+0x1d4>
  80ae4c:	50c00017 	ldw	r3,0(r10)
  80ae50:	1800031e 	bne	r3,zero,80ae60 <__multiply+0x1d4>
  80ae54:	843fffc4 	addi	r16,r16,-1
  80ae58:	52bfff04 	addi	r10,r10,-4
  80ae5c:	803ffb1e 	bne	r16,zero,80ae4c <__alt_data_end+0xff80ae4c>
  80ae60:	14000415 	stw	r16,16(r2)
  80ae64:	dfc00517 	ldw	ra,20(sp)
  80ae68:	dd000417 	ldw	r20,16(sp)
  80ae6c:	dcc00317 	ldw	r19,12(sp)
  80ae70:	dc800217 	ldw	r18,8(sp)
  80ae74:	dc400117 	ldw	r17,4(sp)
  80ae78:	dc000017 	ldw	r16,0(sp)
  80ae7c:	dec00604 	addi	sp,sp,24
  80ae80:	f800283a 	ret

0080ae84 <__pow5mult>:
  80ae84:	defffa04 	addi	sp,sp,-24
  80ae88:	dcc00315 	stw	r19,12(sp)
  80ae8c:	dc000015 	stw	r16,0(sp)
  80ae90:	dfc00515 	stw	ra,20(sp)
  80ae94:	dd000415 	stw	r20,16(sp)
  80ae98:	dc800215 	stw	r18,8(sp)
  80ae9c:	dc400115 	stw	r17,4(sp)
  80aea0:	308000cc 	andi	r2,r6,3
  80aea4:	3021883a 	mov	r16,r6
  80aea8:	2027883a 	mov	r19,r4
  80aeac:	10002f1e 	bne	r2,zero,80af6c <__pow5mult+0xe8>
  80aeb0:	2825883a 	mov	r18,r5
  80aeb4:	8021d0ba 	srai	r16,r16,2
  80aeb8:	80001a26 	beq	r16,zero,80af24 <__pow5mult+0xa0>
  80aebc:	9c401217 	ldw	r17,72(r19)
  80aec0:	8800061e 	bne	r17,zero,80aedc <__pow5mult+0x58>
  80aec4:	00003406 	br	80af98 <__pow5mult+0x114>
  80aec8:	8021d07a 	srai	r16,r16,1
  80aecc:	80001526 	beq	r16,zero,80af24 <__pow5mult+0xa0>
  80aed0:	88800017 	ldw	r2,0(r17)
  80aed4:	10001c26 	beq	r2,zero,80af48 <__pow5mult+0xc4>
  80aed8:	1023883a 	mov	r17,r2
  80aedc:	8080004c 	andi	r2,r16,1
  80aee0:	103ff926 	beq	r2,zero,80aec8 <__alt_data_end+0xff80aec8>
  80aee4:	880d883a 	mov	r6,r17
  80aee8:	900b883a 	mov	r5,r18
  80aeec:	9809883a 	mov	r4,r19
  80aef0:	080ac8c0 	call	80ac8c <__multiply>
  80aef4:	90001b26 	beq	r18,zero,80af64 <__pow5mult+0xe0>
  80aef8:	91000117 	ldw	r4,4(r18)
  80aefc:	98c01317 	ldw	r3,76(r19)
  80af00:	8021d07a 	srai	r16,r16,1
  80af04:	2109883a 	add	r4,r4,r4
  80af08:	2109883a 	add	r4,r4,r4
  80af0c:	1907883a 	add	r3,r3,r4
  80af10:	19000017 	ldw	r4,0(r3)
  80af14:	91000015 	stw	r4,0(r18)
  80af18:	1c800015 	stw	r18,0(r3)
  80af1c:	1025883a 	mov	r18,r2
  80af20:	803feb1e 	bne	r16,zero,80aed0 <__alt_data_end+0xff80aed0>
  80af24:	9005883a 	mov	r2,r18
  80af28:	dfc00517 	ldw	ra,20(sp)
  80af2c:	dd000417 	ldw	r20,16(sp)
  80af30:	dcc00317 	ldw	r19,12(sp)
  80af34:	dc800217 	ldw	r18,8(sp)
  80af38:	dc400117 	ldw	r17,4(sp)
  80af3c:	dc000017 	ldw	r16,0(sp)
  80af40:	dec00604 	addi	sp,sp,24
  80af44:	f800283a 	ret
  80af48:	880d883a 	mov	r6,r17
  80af4c:	880b883a 	mov	r5,r17
  80af50:	9809883a 	mov	r4,r19
  80af54:	080ac8c0 	call	80ac8c <__multiply>
  80af58:	88800015 	stw	r2,0(r17)
  80af5c:	10000015 	stw	zero,0(r2)
  80af60:	003fdd06 	br	80aed8 <__alt_data_end+0xff80aed8>
  80af64:	1025883a 	mov	r18,r2
  80af68:	003fd706 	br	80aec8 <__alt_data_end+0xff80aec8>
  80af6c:	10bfffc4 	addi	r2,r2,-1
  80af70:	1085883a 	add	r2,r2,r2
  80af74:	00c02074 	movhi	r3,129
  80af78:	18c84a04 	addi	r3,r3,8488
  80af7c:	1085883a 	add	r2,r2,r2
  80af80:	1885883a 	add	r2,r3,r2
  80af84:	11800017 	ldw	r6,0(r2)
  80af88:	000f883a 	mov	r7,zero
  80af8c:	080a9140 	call	80a914 <__multadd>
  80af90:	1025883a 	mov	r18,r2
  80af94:	003fc706 	br	80aeb4 <__alt_data_end+0xff80aeb4>
  80af98:	05000044 	movi	r20,1
  80af9c:	a00b883a 	mov	r5,r20
  80afa0:	9809883a 	mov	r4,r19
  80afa4:	080a8440 	call	80a844 <_Balloc>
  80afa8:	1023883a 	mov	r17,r2
  80afac:	00809c44 	movi	r2,625
  80afb0:	88800515 	stw	r2,20(r17)
  80afb4:	8d000415 	stw	r20,16(r17)
  80afb8:	9c401215 	stw	r17,72(r19)
  80afbc:	88000015 	stw	zero,0(r17)
  80afc0:	003fc606 	br	80aedc <__alt_data_end+0xff80aedc>

0080afc4 <__lshift>:
  80afc4:	defff904 	addi	sp,sp,-28
  80afc8:	dd400515 	stw	r21,20(sp)
  80afcc:	dcc00315 	stw	r19,12(sp)
  80afd0:	302bd17a 	srai	r21,r6,5
  80afd4:	2cc00417 	ldw	r19,16(r5)
  80afd8:	28800217 	ldw	r2,8(r5)
  80afdc:	dd000415 	stw	r20,16(sp)
  80afe0:	ace7883a 	add	r19,r21,r19
  80afe4:	dc800215 	stw	r18,8(sp)
  80afe8:	dc400115 	stw	r17,4(sp)
  80afec:	dc000015 	stw	r16,0(sp)
  80aff0:	dfc00615 	stw	ra,24(sp)
  80aff4:	9c000044 	addi	r16,r19,1
  80aff8:	2823883a 	mov	r17,r5
  80affc:	3029883a 	mov	r20,r6
  80b000:	2025883a 	mov	r18,r4
  80b004:	29400117 	ldw	r5,4(r5)
  80b008:	1400030e 	bge	r2,r16,80b018 <__lshift+0x54>
  80b00c:	1085883a 	add	r2,r2,r2
  80b010:	29400044 	addi	r5,r5,1
  80b014:	143ffd16 	blt	r2,r16,80b00c <__alt_data_end+0xff80b00c>
  80b018:	9009883a 	mov	r4,r18
  80b01c:	080a8440 	call	80a844 <_Balloc>
  80b020:	10c00504 	addi	r3,r2,20
  80b024:	0540070e 	bge	zero,r21,80b044 <__lshift+0x80>
  80b028:	ad6b883a 	add	r21,r21,r21
  80b02c:	ad6b883a 	add	r21,r21,r21
  80b030:	1809883a 	mov	r4,r3
  80b034:	1d47883a 	add	r3,r3,r21
  80b038:	20000015 	stw	zero,0(r4)
  80b03c:	21000104 	addi	r4,r4,4
  80b040:	193ffd1e 	bne	r3,r4,80b038 <__alt_data_end+0xff80b038>
  80b044:	8a000417 	ldw	r8,16(r17)
  80b048:	89000504 	addi	r4,r17,20
  80b04c:	a18007cc 	andi	r6,r20,31
  80b050:	4211883a 	add	r8,r8,r8
  80b054:	4211883a 	add	r8,r8,r8
  80b058:	2211883a 	add	r8,r4,r8
  80b05c:	30002326 	beq	r6,zero,80b0ec <__lshift+0x128>
  80b060:	02400804 	movi	r9,32
  80b064:	4993c83a 	sub	r9,r9,r6
  80b068:	000b883a 	mov	r5,zero
  80b06c:	21c00017 	ldw	r7,0(r4)
  80b070:	1815883a 	mov	r10,r3
  80b074:	18c00104 	addi	r3,r3,4
  80b078:	398e983a 	sll	r7,r7,r6
  80b07c:	21000104 	addi	r4,r4,4
  80b080:	394ab03a 	or	r5,r7,r5
  80b084:	197fff15 	stw	r5,-4(r3)
  80b088:	217fff17 	ldw	r5,-4(r4)
  80b08c:	2a4ad83a 	srl	r5,r5,r9
  80b090:	223ff636 	bltu	r4,r8,80b06c <__alt_data_end+0xff80b06c>
  80b094:	51400115 	stw	r5,4(r10)
  80b098:	28001a1e 	bne	r5,zero,80b104 <__lshift+0x140>
  80b09c:	843fffc4 	addi	r16,r16,-1
  80b0a0:	14000415 	stw	r16,16(r2)
  80b0a4:	88000826 	beq	r17,zero,80b0c8 <__lshift+0x104>
  80b0a8:	89000117 	ldw	r4,4(r17)
  80b0ac:	90c01317 	ldw	r3,76(r18)
  80b0b0:	2109883a 	add	r4,r4,r4
  80b0b4:	2109883a 	add	r4,r4,r4
  80b0b8:	1907883a 	add	r3,r3,r4
  80b0bc:	19000017 	ldw	r4,0(r3)
  80b0c0:	89000015 	stw	r4,0(r17)
  80b0c4:	1c400015 	stw	r17,0(r3)
  80b0c8:	dfc00617 	ldw	ra,24(sp)
  80b0cc:	dd400517 	ldw	r21,20(sp)
  80b0d0:	dd000417 	ldw	r20,16(sp)
  80b0d4:	dcc00317 	ldw	r19,12(sp)
  80b0d8:	dc800217 	ldw	r18,8(sp)
  80b0dc:	dc400117 	ldw	r17,4(sp)
  80b0e0:	dc000017 	ldw	r16,0(sp)
  80b0e4:	dec00704 	addi	sp,sp,28
  80b0e8:	f800283a 	ret
  80b0ec:	21400017 	ldw	r5,0(r4)
  80b0f0:	18c00104 	addi	r3,r3,4
  80b0f4:	21000104 	addi	r4,r4,4
  80b0f8:	197fff15 	stw	r5,-4(r3)
  80b0fc:	223ffb36 	bltu	r4,r8,80b0ec <__alt_data_end+0xff80b0ec>
  80b100:	003fe606 	br	80b09c <__alt_data_end+0xff80b09c>
  80b104:	9c000084 	addi	r16,r19,2
  80b108:	003fe406 	br	80b09c <__alt_data_end+0xff80b09c>

0080b10c <__mcmp>:
  80b10c:	20800417 	ldw	r2,16(r4)
  80b110:	28c00417 	ldw	r3,16(r5)
  80b114:	10c5c83a 	sub	r2,r2,r3
  80b118:	1000111e 	bne	r2,zero,80b160 <__mcmp+0x54>
  80b11c:	18c7883a 	add	r3,r3,r3
  80b120:	18c7883a 	add	r3,r3,r3
  80b124:	21000504 	addi	r4,r4,20
  80b128:	29400504 	addi	r5,r5,20
  80b12c:	20c5883a 	add	r2,r4,r3
  80b130:	28cb883a 	add	r5,r5,r3
  80b134:	00000106 	br	80b13c <__mcmp+0x30>
  80b138:	20800a2e 	bgeu	r4,r2,80b164 <__mcmp+0x58>
  80b13c:	10bfff04 	addi	r2,r2,-4
  80b140:	297fff04 	addi	r5,r5,-4
  80b144:	11800017 	ldw	r6,0(r2)
  80b148:	28c00017 	ldw	r3,0(r5)
  80b14c:	30fffa26 	beq	r6,r3,80b138 <__alt_data_end+0xff80b138>
  80b150:	30c00236 	bltu	r6,r3,80b15c <__mcmp+0x50>
  80b154:	00800044 	movi	r2,1
  80b158:	f800283a 	ret
  80b15c:	00bfffc4 	movi	r2,-1
  80b160:	f800283a 	ret
  80b164:	0005883a 	mov	r2,zero
  80b168:	f800283a 	ret

0080b16c <__mdiff>:
  80b16c:	28c00417 	ldw	r3,16(r5)
  80b170:	30800417 	ldw	r2,16(r6)
  80b174:	defffa04 	addi	sp,sp,-24
  80b178:	dcc00315 	stw	r19,12(sp)
  80b17c:	dc800215 	stw	r18,8(sp)
  80b180:	dfc00515 	stw	ra,20(sp)
  80b184:	dd000415 	stw	r20,16(sp)
  80b188:	dc400115 	stw	r17,4(sp)
  80b18c:	dc000015 	stw	r16,0(sp)
  80b190:	1887c83a 	sub	r3,r3,r2
  80b194:	2825883a 	mov	r18,r5
  80b198:	3027883a 	mov	r19,r6
  80b19c:	1800141e 	bne	r3,zero,80b1f0 <__mdiff+0x84>
  80b1a0:	1085883a 	add	r2,r2,r2
  80b1a4:	1085883a 	add	r2,r2,r2
  80b1a8:	2a000504 	addi	r8,r5,20
  80b1ac:	34000504 	addi	r16,r6,20
  80b1b0:	4087883a 	add	r3,r8,r2
  80b1b4:	8085883a 	add	r2,r16,r2
  80b1b8:	00000106 	br	80b1c0 <__mdiff+0x54>
  80b1bc:	40c0592e 	bgeu	r8,r3,80b324 <__mdiff+0x1b8>
  80b1c0:	18ffff04 	addi	r3,r3,-4
  80b1c4:	10bfff04 	addi	r2,r2,-4
  80b1c8:	19c00017 	ldw	r7,0(r3)
  80b1cc:	11400017 	ldw	r5,0(r2)
  80b1d0:	397ffa26 	beq	r7,r5,80b1bc <__alt_data_end+0xff80b1bc>
  80b1d4:	3940592e 	bgeu	r7,r5,80b33c <__mdiff+0x1d0>
  80b1d8:	9005883a 	mov	r2,r18
  80b1dc:	4023883a 	mov	r17,r8
  80b1e0:	9825883a 	mov	r18,r19
  80b1e4:	05000044 	movi	r20,1
  80b1e8:	1027883a 	mov	r19,r2
  80b1ec:	00000406 	br	80b200 <__mdiff+0x94>
  80b1f0:	18005616 	blt	r3,zero,80b34c <__mdiff+0x1e0>
  80b1f4:	34400504 	addi	r17,r6,20
  80b1f8:	2c000504 	addi	r16,r5,20
  80b1fc:	0029883a 	mov	r20,zero
  80b200:	91400117 	ldw	r5,4(r18)
  80b204:	080a8440 	call	80a844 <_Balloc>
  80b208:	92400417 	ldw	r9,16(r18)
  80b20c:	9b000417 	ldw	r12,16(r19)
  80b210:	12c00504 	addi	r11,r2,20
  80b214:	4a51883a 	add	r8,r9,r9
  80b218:	6319883a 	add	r12,r12,r12
  80b21c:	4211883a 	add	r8,r8,r8
  80b220:	6319883a 	add	r12,r12,r12
  80b224:	15000315 	stw	r20,12(r2)
  80b228:	8211883a 	add	r8,r16,r8
  80b22c:	8b19883a 	add	r12,r17,r12
  80b230:	0007883a 	mov	r3,zero
  80b234:	81400017 	ldw	r5,0(r16)
  80b238:	89c00017 	ldw	r7,0(r17)
  80b23c:	59800104 	addi	r6,r11,4
  80b240:	293fffcc 	andi	r4,r5,65535
  80b244:	20c7883a 	add	r3,r4,r3
  80b248:	393fffcc 	andi	r4,r7,65535
  80b24c:	1909c83a 	sub	r4,r3,r4
  80b250:	280ad43a 	srli	r5,r5,16
  80b254:	380ed43a 	srli	r7,r7,16
  80b258:	2007d43a 	srai	r3,r4,16
  80b25c:	213fffcc 	andi	r4,r4,65535
  80b260:	29cbc83a 	sub	r5,r5,r7
  80b264:	28c7883a 	add	r3,r5,r3
  80b268:	180a943a 	slli	r5,r3,16
  80b26c:	8c400104 	addi	r17,r17,4
  80b270:	84000104 	addi	r16,r16,4
  80b274:	2908b03a 	or	r4,r5,r4
  80b278:	59000015 	stw	r4,0(r11)
  80b27c:	1807d43a 	srai	r3,r3,16
  80b280:	3015883a 	mov	r10,r6
  80b284:	3017883a 	mov	r11,r6
  80b288:	8b3fea36 	bltu	r17,r12,80b234 <__alt_data_end+0xff80b234>
  80b28c:	8200162e 	bgeu	r16,r8,80b2e8 <__mdiff+0x17c>
  80b290:	8017883a 	mov	r11,r16
  80b294:	59400017 	ldw	r5,0(r11)
  80b298:	31800104 	addi	r6,r6,4
  80b29c:	5ac00104 	addi	r11,r11,4
  80b2a0:	293fffcc 	andi	r4,r5,65535
  80b2a4:	20c7883a 	add	r3,r4,r3
  80b2a8:	280ed43a 	srli	r7,r5,16
  80b2ac:	180bd43a 	srai	r5,r3,16
  80b2b0:	193fffcc 	andi	r4,r3,65535
  80b2b4:	3947883a 	add	r3,r7,r5
  80b2b8:	180a943a 	slli	r5,r3,16
  80b2bc:	1807d43a 	srai	r3,r3,16
  80b2c0:	2908b03a 	or	r4,r5,r4
  80b2c4:	313fff15 	stw	r4,-4(r6)
  80b2c8:	5a3ff236 	bltu	r11,r8,80b294 <__alt_data_end+0xff80b294>
  80b2cc:	0406303a 	nor	r3,zero,r16
  80b2d0:	1a07883a 	add	r3,r3,r8
  80b2d4:	1806d0ba 	srli	r3,r3,2
  80b2d8:	18c00044 	addi	r3,r3,1
  80b2dc:	18c7883a 	add	r3,r3,r3
  80b2e0:	18c7883a 	add	r3,r3,r3
  80b2e4:	50d5883a 	add	r10,r10,r3
  80b2e8:	50ffff04 	addi	r3,r10,-4
  80b2ec:	2000041e 	bne	r4,zero,80b300 <__mdiff+0x194>
  80b2f0:	18ffff04 	addi	r3,r3,-4
  80b2f4:	19000017 	ldw	r4,0(r3)
  80b2f8:	4a7fffc4 	addi	r9,r9,-1
  80b2fc:	203ffc26 	beq	r4,zero,80b2f0 <__alt_data_end+0xff80b2f0>
  80b300:	12400415 	stw	r9,16(r2)
  80b304:	dfc00517 	ldw	ra,20(sp)
  80b308:	dd000417 	ldw	r20,16(sp)
  80b30c:	dcc00317 	ldw	r19,12(sp)
  80b310:	dc800217 	ldw	r18,8(sp)
  80b314:	dc400117 	ldw	r17,4(sp)
  80b318:	dc000017 	ldw	r16,0(sp)
  80b31c:	dec00604 	addi	sp,sp,24
  80b320:	f800283a 	ret
  80b324:	000b883a 	mov	r5,zero
  80b328:	080a8440 	call	80a844 <_Balloc>
  80b32c:	00c00044 	movi	r3,1
  80b330:	10c00415 	stw	r3,16(r2)
  80b334:	10000515 	stw	zero,20(r2)
  80b338:	003ff206 	br	80b304 <__alt_data_end+0xff80b304>
  80b33c:	8023883a 	mov	r17,r16
  80b340:	0029883a 	mov	r20,zero
  80b344:	4021883a 	mov	r16,r8
  80b348:	003fad06 	br	80b200 <__alt_data_end+0xff80b200>
  80b34c:	9005883a 	mov	r2,r18
  80b350:	94400504 	addi	r17,r18,20
  80b354:	9c000504 	addi	r16,r19,20
  80b358:	9825883a 	mov	r18,r19
  80b35c:	05000044 	movi	r20,1
  80b360:	1027883a 	mov	r19,r2
  80b364:	003fa606 	br	80b200 <__alt_data_end+0xff80b200>

0080b368 <__ulp>:
  80b368:	295ffc2c 	andhi	r5,r5,32752
  80b36c:	00bf3034 	movhi	r2,64704
  80b370:	2887883a 	add	r3,r5,r2
  80b374:	00c0020e 	bge	zero,r3,80b380 <__ulp+0x18>
  80b378:	0005883a 	mov	r2,zero
  80b37c:	f800283a 	ret
  80b380:	00c7c83a 	sub	r3,zero,r3
  80b384:	1807d53a 	srai	r3,r3,20
  80b388:	008004c4 	movi	r2,19
  80b38c:	10c00b0e 	bge	r2,r3,80b3bc <__ulp+0x54>
  80b390:	18bffb04 	addi	r2,r3,-20
  80b394:	01000784 	movi	r4,30
  80b398:	0007883a 	mov	r3,zero
  80b39c:	20800516 	blt	r4,r2,80b3b4 <__ulp+0x4c>
  80b3a0:	010007c4 	movi	r4,31
  80b3a4:	2089c83a 	sub	r4,r4,r2
  80b3a8:	00800044 	movi	r2,1
  80b3ac:	1104983a 	sll	r2,r2,r4
  80b3b0:	f800283a 	ret
  80b3b4:	00800044 	movi	r2,1
  80b3b8:	f800283a 	ret
  80b3bc:	01400234 	movhi	r5,8
  80b3c0:	28c7d83a 	sra	r3,r5,r3
  80b3c4:	0005883a 	mov	r2,zero
  80b3c8:	f800283a 	ret

0080b3cc <__b2d>:
  80b3cc:	defffa04 	addi	sp,sp,-24
  80b3d0:	dc000015 	stw	r16,0(sp)
  80b3d4:	24000417 	ldw	r16,16(r4)
  80b3d8:	dc400115 	stw	r17,4(sp)
  80b3dc:	24400504 	addi	r17,r4,20
  80b3e0:	8421883a 	add	r16,r16,r16
  80b3e4:	8421883a 	add	r16,r16,r16
  80b3e8:	8c21883a 	add	r16,r17,r16
  80b3ec:	dc800215 	stw	r18,8(sp)
  80b3f0:	84bfff17 	ldw	r18,-4(r16)
  80b3f4:	dd000415 	stw	r20,16(sp)
  80b3f8:	dcc00315 	stw	r19,12(sp)
  80b3fc:	9009883a 	mov	r4,r18
  80b400:	2829883a 	mov	r20,r5
  80b404:	dfc00515 	stw	ra,20(sp)
  80b408:	080ab380 	call	80ab38 <__hi0bits>
  80b40c:	00c00804 	movi	r3,32
  80b410:	1889c83a 	sub	r4,r3,r2
  80b414:	a1000015 	stw	r4,0(r20)
  80b418:	01000284 	movi	r4,10
  80b41c:	84ffff04 	addi	r19,r16,-4
  80b420:	20801216 	blt	r4,r2,80b46c <__b2d+0xa0>
  80b424:	018002c4 	movi	r6,11
  80b428:	308dc83a 	sub	r6,r6,r2
  80b42c:	9186d83a 	srl	r3,r18,r6
  80b430:	18cffc34 	orhi	r3,r3,16368
  80b434:	8cc0212e 	bgeu	r17,r19,80b4bc <__b2d+0xf0>
  80b438:	813ffe17 	ldw	r4,-8(r16)
  80b43c:	218cd83a 	srl	r6,r4,r6
  80b440:	10800544 	addi	r2,r2,21
  80b444:	9084983a 	sll	r2,r18,r2
  80b448:	1184b03a 	or	r2,r2,r6
  80b44c:	dfc00517 	ldw	ra,20(sp)
  80b450:	dd000417 	ldw	r20,16(sp)
  80b454:	dcc00317 	ldw	r19,12(sp)
  80b458:	dc800217 	ldw	r18,8(sp)
  80b45c:	dc400117 	ldw	r17,4(sp)
  80b460:	dc000017 	ldw	r16,0(sp)
  80b464:	dec00604 	addi	sp,sp,24
  80b468:	f800283a 	ret
  80b46c:	8cc00f2e 	bgeu	r17,r19,80b4ac <__b2d+0xe0>
  80b470:	117ffd44 	addi	r5,r2,-11
  80b474:	80bffe17 	ldw	r2,-8(r16)
  80b478:	28000e26 	beq	r5,zero,80b4b4 <__b2d+0xe8>
  80b47c:	1949c83a 	sub	r4,r3,r5
  80b480:	9164983a 	sll	r18,r18,r5
  80b484:	1106d83a 	srl	r3,r2,r4
  80b488:	81bffe04 	addi	r6,r16,-8
  80b48c:	948ffc34 	orhi	r18,r18,16368
  80b490:	90c6b03a 	or	r3,r18,r3
  80b494:	89800e2e 	bgeu	r17,r6,80b4d0 <__b2d+0x104>
  80b498:	81bffd17 	ldw	r6,-12(r16)
  80b49c:	1144983a 	sll	r2,r2,r5
  80b4a0:	310ad83a 	srl	r5,r6,r4
  80b4a4:	2884b03a 	or	r2,r5,r2
  80b4a8:	003fe806 	br	80b44c <__alt_data_end+0xff80b44c>
  80b4ac:	10bffd44 	addi	r2,r2,-11
  80b4b0:	1000041e 	bne	r2,zero,80b4c4 <__b2d+0xf8>
  80b4b4:	90cffc34 	orhi	r3,r18,16368
  80b4b8:	003fe406 	br	80b44c <__alt_data_end+0xff80b44c>
  80b4bc:	000d883a 	mov	r6,zero
  80b4c0:	003fdf06 	br	80b440 <__alt_data_end+0xff80b440>
  80b4c4:	90a4983a 	sll	r18,r18,r2
  80b4c8:	0005883a 	mov	r2,zero
  80b4cc:	003ff906 	br	80b4b4 <__alt_data_end+0xff80b4b4>
  80b4d0:	1144983a 	sll	r2,r2,r5
  80b4d4:	003fdd06 	br	80b44c <__alt_data_end+0xff80b44c>

0080b4d8 <__d2b>:
  80b4d8:	defff804 	addi	sp,sp,-32
  80b4dc:	dc000215 	stw	r16,8(sp)
  80b4e0:	3021883a 	mov	r16,r6
  80b4e4:	dc400315 	stw	r17,12(sp)
  80b4e8:	8022907a 	slli	r17,r16,1
  80b4ec:	dd000615 	stw	r20,24(sp)
  80b4f0:	2829883a 	mov	r20,r5
  80b4f4:	01400044 	movi	r5,1
  80b4f8:	dcc00515 	stw	r19,20(sp)
  80b4fc:	dc800415 	stw	r18,16(sp)
  80b500:	dfc00715 	stw	ra,28(sp)
  80b504:	3825883a 	mov	r18,r7
  80b508:	8822d57a 	srli	r17,r17,21
  80b50c:	080a8440 	call	80a844 <_Balloc>
  80b510:	1027883a 	mov	r19,r2
  80b514:	00800434 	movhi	r2,16
  80b518:	10bfffc4 	addi	r2,r2,-1
  80b51c:	808c703a 	and	r6,r16,r2
  80b520:	88000126 	beq	r17,zero,80b528 <__d2b+0x50>
  80b524:	31800434 	orhi	r6,r6,16
  80b528:	d9800015 	stw	r6,0(sp)
  80b52c:	a0002426 	beq	r20,zero,80b5c0 <__d2b+0xe8>
  80b530:	d9000104 	addi	r4,sp,4
  80b534:	dd000115 	stw	r20,4(sp)
  80b538:	080aba00 	call	80aba0 <__lo0bits>
  80b53c:	d8c00017 	ldw	r3,0(sp)
  80b540:	10002f1e 	bne	r2,zero,80b600 <__d2b+0x128>
  80b544:	d9000117 	ldw	r4,4(sp)
  80b548:	99000515 	stw	r4,20(r19)
  80b54c:	1821003a 	cmpeq	r16,r3,zero
  80b550:	01000084 	movi	r4,2
  80b554:	2421c83a 	sub	r16,r4,r16
  80b558:	98c00615 	stw	r3,24(r19)
  80b55c:	9c000415 	stw	r16,16(r19)
  80b560:	88001f1e 	bne	r17,zero,80b5e0 <__d2b+0x108>
  80b564:	10bef384 	addi	r2,r2,-1074
  80b568:	90800015 	stw	r2,0(r18)
  80b56c:	00900034 	movhi	r2,16384
  80b570:	10bfffc4 	addi	r2,r2,-1
  80b574:	8085883a 	add	r2,r16,r2
  80b578:	1085883a 	add	r2,r2,r2
  80b57c:	1085883a 	add	r2,r2,r2
  80b580:	9885883a 	add	r2,r19,r2
  80b584:	11000517 	ldw	r4,20(r2)
  80b588:	8020917a 	slli	r16,r16,5
  80b58c:	080ab380 	call	80ab38 <__hi0bits>
  80b590:	d8c00817 	ldw	r3,32(sp)
  80b594:	8085c83a 	sub	r2,r16,r2
  80b598:	18800015 	stw	r2,0(r3)
  80b59c:	9805883a 	mov	r2,r19
  80b5a0:	dfc00717 	ldw	ra,28(sp)
  80b5a4:	dd000617 	ldw	r20,24(sp)
  80b5a8:	dcc00517 	ldw	r19,20(sp)
  80b5ac:	dc800417 	ldw	r18,16(sp)
  80b5b0:	dc400317 	ldw	r17,12(sp)
  80b5b4:	dc000217 	ldw	r16,8(sp)
  80b5b8:	dec00804 	addi	sp,sp,32
  80b5bc:	f800283a 	ret
  80b5c0:	d809883a 	mov	r4,sp
  80b5c4:	080aba00 	call	80aba0 <__lo0bits>
  80b5c8:	d8c00017 	ldw	r3,0(sp)
  80b5cc:	04000044 	movi	r16,1
  80b5d0:	9c000415 	stw	r16,16(r19)
  80b5d4:	98c00515 	stw	r3,20(r19)
  80b5d8:	10800804 	addi	r2,r2,32
  80b5dc:	883fe126 	beq	r17,zero,80b564 <__alt_data_end+0xff80b564>
  80b5e0:	00c00d44 	movi	r3,53
  80b5e4:	8c7ef344 	addi	r17,r17,-1075
  80b5e8:	88a3883a 	add	r17,r17,r2
  80b5ec:	1885c83a 	sub	r2,r3,r2
  80b5f0:	d8c00817 	ldw	r3,32(sp)
  80b5f4:	94400015 	stw	r17,0(r18)
  80b5f8:	18800015 	stw	r2,0(r3)
  80b5fc:	003fe706 	br	80b59c <__alt_data_end+0xff80b59c>
  80b600:	01000804 	movi	r4,32
  80b604:	2089c83a 	sub	r4,r4,r2
  80b608:	1908983a 	sll	r4,r3,r4
  80b60c:	d9400117 	ldw	r5,4(sp)
  80b610:	1886d83a 	srl	r3,r3,r2
  80b614:	2148b03a 	or	r4,r4,r5
  80b618:	99000515 	stw	r4,20(r19)
  80b61c:	d8c00015 	stw	r3,0(sp)
  80b620:	003fca06 	br	80b54c <__alt_data_end+0xff80b54c>

0080b624 <__ratio>:
  80b624:	defff904 	addi	sp,sp,-28
  80b628:	dc400315 	stw	r17,12(sp)
  80b62c:	2823883a 	mov	r17,r5
  80b630:	d9400104 	addi	r5,sp,4
  80b634:	dfc00615 	stw	ra,24(sp)
  80b638:	dcc00515 	stw	r19,20(sp)
  80b63c:	dc800415 	stw	r18,16(sp)
  80b640:	2027883a 	mov	r19,r4
  80b644:	dc000215 	stw	r16,8(sp)
  80b648:	080b3cc0 	call	80b3cc <__b2d>
  80b64c:	d80b883a 	mov	r5,sp
  80b650:	8809883a 	mov	r4,r17
  80b654:	1025883a 	mov	r18,r2
  80b658:	1821883a 	mov	r16,r3
  80b65c:	080b3cc0 	call	80b3cc <__b2d>
  80b660:	8a000417 	ldw	r8,16(r17)
  80b664:	99000417 	ldw	r4,16(r19)
  80b668:	d9400117 	ldw	r5,4(sp)
  80b66c:	2209c83a 	sub	r4,r4,r8
  80b670:	2010917a 	slli	r8,r4,5
  80b674:	d9000017 	ldw	r4,0(sp)
  80b678:	2909c83a 	sub	r4,r5,r4
  80b67c:	4109883a 	add	r4,r8,r4
  80b680:	01000e0e 	bge	zero,r4,80b6bc <__ratio+0x98>
  80b684:	2008953a 	slli	r4,r4,20
  80b688:	2421883a 	add	r16,r4,r16
  80b68c:	100d883a 	mov	r6,r2
  80b690:	180f883a 	mov	r7,r3
  80b694:	9009883a 	mov	r4,r18
  80b698:	800b883a 	mov	r5,r16
  80b69c:	080eab00 	call	80eab0 <__divdf3>
  80b6a0:	dfc00617 	ldw	ra,24(sp)
  80b6a4:	dcc00517 	ldw	r19,20(sp)
  80b6a8:	dc800417 	ldw	r18,16(sp)
  80b6ac:	dc400317 	ldw	r17,12(sp)
  80b6b0:	dc000217 	ldw	r16,8(sp)
  80b6b4:	dec00704 	addi	sp,sp,28
  80b6b8:	f800283a 	ret
  80b6bc:	2008953a 	slli	r4,r4,20
  80b6c0:	1907c83a 	sub	r3,r3,r4
  80b6c4:	003ff106 	br	80b68c <__alt_data_end+0xff80b68c>

0080b6c8 <_mprec_log10>:
  80b6c8:	defffe04 	addi	sp,sp,-8
  80b6cc:	dc000015 	stw	r16,0(sp)
  80b6d0:	dfc00115 	stw	ra,4(sp)
  80b6d4:	008005c4 	movi	r2,23
  80b6d8:	2021883a 	mov	r16,r4
  80b6dc:	11000d0e 	bge	r2,r4,80b714 <_mprec_log10+0x4c>
  80b6e0:	0005883a 	mov	r2,zero
  80b6e4:	00cffc34 	movhi	r3,16368
  80b6e8:	843fffc4 	addi	r16,r16,-1
  80b6ec:	000d883a 	mov	r6,zero
  80b6f0:	01d00934 	movhi	r7,16420
  80b6f4:	1009883a 	mov	r4,r2
  80b6f8:	180b883a 	mov	r5,r3
  80b6fc:	08035200 	call	803520 <__muldf3>
  80b700:	803ff91e 	bne	r16,zero,80b6e8 <__alt_data_end+0xff80b6e8>
  80b704:	dfc00117 	ldw	ra,4(sp)
  80b708:	dc000017 	ldw	r16,0(sp)
  80b70c:	dec00204 	addi	sp,sp,8
  80b710:	f800283a 	ret
  80b714:	202090fa 	slli	r16,r4,3
  80b718:	00802074 	movhi	r2,129
  80b71c:	10886104 	addi	r2,r2,8580
  80b720:	1421883a 	add	r16,r2,r16
  80b724:	80800017 	ldw	r2,0(r16)
  80b728:	80c00117 	ldw	r3,4(r16)
  80b72c:	dfc00117 	ldw	ra,4(sp)
  80b730:	dc000017 	ldw	r16,0(sp)
  80b734:	dec00204 	addi	sp,sp,8
  80b738:	f800283a 	ret

0080b73c <__copybits>:
  80b73c:	297fffc4 	addi	r5,r5,-1
  80b740:	280fd17a 	srai	r7,r5,5
  80b744:	30c00417 	ldw	r3,16(r6)
  80b748:	30800504 	addi	r2,r6,20
  80b74c:	39c00044 	addi	r7,r7,1
  80b750:	18c7883a 	add	r3,r3,r3
  80b754:	39cf883a 	add	r7,r7,r7
  80b758:	18c7883a 	add	r3,r3,r3
  80b75c:	39cf883a 	add	r7,r7,r7
  80b760:	10c7883a 	add	r3,r2,r3
  80b764:	21cf883a 	add	r7,r4,r7
  80b768:	10c00d2e 	bgeu	r2,r3,80b7a0 <__copybits+0x64>
  80b76c:	200b883a 	mov	r5,r4
  80b770:	12000017 	ldw	r8,0(r2)
  80b774:	29400104 	addi	r5,r5,4
  80b778:	10800104 	addi	r2,r2,4
  80b77c:	2a3fff15 	stw	r8,-4(r5)
  80b780:	10fffb36 	bltu	r2,r3,80b770 <__alt_data_end+0xff80b770>
  80b784:	1985c83a 	sub	r2,r3,r6
  80b788:	10bffac4 	addi	r2,r2,-21
  80b78c:	1004d0ba 	srli	r2,r2,2
  80b790:	10800044 	addi	r2,r2,1
  80b794:	1085883a 	add	r2,r2,r2
  80b798:	1085883a 	add	r2,r2,r2
  80b79c:	2089883a 	add	r4,r4,r2
  80b7a0:	21c0032e 	bgeu	r4,r7,80b7b0 <__copybits+0x74>
  80b7a4:	20000015 	stw	zero,0(r4)
  80b7a8:	21000104 	addi	r4,r4,4
  80b7ac:	21fffd36 	bltu	r4,r7,80b7a4 <__alt_data_end+0xff80b7a4>
  80b7b0:	f800283a 	ret

0080b7b4 <__any_on>:
  80b7b4:	20c00417 	ldw	r3,16(r4)
  80b7b8:	2805d17a 	srai	r2,r5,5
  80b7bc:	21000504 	addi	r4,r4,20
  80b7c0:	18800d0e 	bge	r3,r2,80b7f8 <__any_on+0x44>
  80b7c4:	18c7883a 	add	r3,r3,r3
  80b7c8:	18c7883a 	add	r3,r3,r3
  80b7cc:	20c7883a 	add	r3,r4,r3
  80b7d0:	20c0192e 	bgeu	r4,r3,80b838 <__any_on+0x84>
  80b7d4:	18bfff17 	ldw	r2,-4(r3)
  80b7d8:	18ffff04 	addi	r3,r3,-4
  80b7dc:	1000041e 	bne	r2,zero,80b7f0 <__any_on+0x3c>
  80b7e0:	20c0142e 	bgeu	r4,r3,80b834 <__any_on+0x80>
  80b7e4:	18ffff04 	addi	r3,r3,-4
  80b7e8:	19400017 	ldw	r5,0(r3)
  80b7ec:	283ffc26 	beq	r5,zero,80b7e0 <__alt_data_end+0xff80b7e0>
  80b7f0:	00800044 	movi	r2,1
  80b7f4:	f800283a 	ret
  80b7f8:	10c00a0e 	bge	r2,r3,80b824 <__any_on+0x70>
  80b7fc:	1085883a 	add	r2,r2,r2
  80b800:	1085883a 	add	r2,r2,r2
  80b804:	294007cc 	andi	r5,r5,31
  80b808:	2087883a 	add	r3,r4,r2
  80b80c:	283ff026 	beq	r5,zero,80b7d0 <__alt_data_end+0xff80b7d0>
  80b810:	19800017 	ldw	r6,0(r3)
  80b814:	3144d83a 	srl	r2,r6,r5
  80b818:	114a983a 	sll	r5,r2,r5
  80b81c:	317ff41e 	bne	r6,r5,80b7f0 <__alt_data_end+0xff80b7f0>
  80b820:	003feb06 	br	80b7d0 <__alt_data_end+0xff80b7d0>
  80b824:	1085883a 	add	r2,r2,r2
  80b828:	1085883a 	add	r2,r2,r2
  80b82c:	2087883a 	add	r3,r4,r2
  80b830:	003fe706 	br	80b7d0 <__alt_data_end+0xff80b7d0>
  80b834:	f800283a 	ret
  80b838:	0005883a 	mov	r2,zero
  80b83c:	f800283a 	ret

0080b840 <_realloc_r>:
  80b840:	defff604 	addi	sp,sp,-40
  80b844:	dc800215 	stw	r18,8(sp)
  80b848:	dfc00915 	stw	ra,36(sp)
  80b84c:	df000815 	stw	fp,32(sp)
  80b850:	ddc00715 	stw	r23,28(sp)
  80b854:	dd800615 	stw	r22,24(sp)
  80b858:	dd400515 	stw	r21,20(sp)
  80b85c:	dd000415 	stw	r20,16(sp)
  80b860:	dcc00315 	stw	r19,12(sp)
  80b864:	dc400115 	stw	r17,4(sp)
  80b868:	dc000015 	stw	r16,0(sp)
  80b86c:	3025883a 	mov	r18,r6
  80b870:	2800b726 	beq	r5,zero,80bb50 <_realloc_r+0x310>
  80b874:	282b883a 	mov	r21,r5
  80b878:	2029883a 	mov	r20,r4
  80b87c:	080fab00 	call	80fab0 <__malloc_lock>
  80b880:	a8bfff17 	ldw	r2,-4(r21)
  80b884:	043fff04 	movi	r16,-4
  80b888:	90c002c4 	addi	r3,r18,11
  80b88c:	01000584 	movi	r4,22
  80b890:	acfffe04 	addi	r19,r21,-8
  80b894:	1420703a 	and	r16,r2,r16
  80b898:	20c0332e 	bgeu	r4,r3,80b968 <_realloc_r+0x128>
  80b89c:	047ffe04 	movi	r17,-8
  80b8a0:	1c62703a 	and	r17,r3,r17
  80b8a4:	8807883a 	mov	r3,r17
  80b8a8:	88005816 	blt	r17,zero,80ba0c <_realloc_r+0x1cc>
  80b8ac:	8c805736 	bltu	r17,r18,80ba0c <_realloc_r+0x1cc>
  80b8b0:	80c0300e 	bge	r16,r3,80b974 <_realloc_r+0x134>
  80b8b4:	07002074 	movhi	fp,129
  80b8b8:	e709cd04 	addi	fp,fp,10036
  80b8bc:	e1c00217 	ldw	r7,8(fp)
  80b8c0:	9c09883a 	add	r4,r19,r16
  80b8c4:	22000117 	ldw	r8,4(r4)
  80b8c8:	21c06326 	beq	r4,r7,80ba58 <_realloc_r+0x218>
  80b8cc:	017fff84 	movi	r5,-2
  80b8d0:	414a703a 	and	r5,r8,r5
  80b8d4:	214b883a 	add	r5,r4,r5
  80b8d8:	29800117 	ldw	r6,4(r5)
  80b8dc:	3180004c 	andi	r6,r6,1
  80b8e0:	30003f26 	beq	r6,zero,80b9e0 <_realloc_r+0x1a0>
  80b8e4:	1080004c 	andi	r2,r2,1
  80b8e8:	10008326 	beq	r2,zero,80baf8 <_realloc_r+0x2b8>
  80b8ec:	900b883a 	mov	r5,r18
  80b8f0:	a009883a 	mov	r4,r20
  80b8f4:	0809b880 	call	809b88 <_malloc_r>
  80b8f8:	1025883a 	mov	r18,r2
  80b8fc:	10011e26 	beq	r2,zero,80bd78 <_realloc_r+0x538>
  80b900:	a93fff17 	ldw	r4,-4(r21)
  80b904:	10fffe04 	addi	r3,r2,-8
  80b908:	00bfff84 	movi	r2,-2
  80b90c:	2084703a 	and	r2,r4,r2
  80b910:	9885883a 	add	r2,r19,r2
  80b914:	1880ee26 	beq	r3,r2,80bcd0 <_realloc_r+0x490>
  80b918:	81bfff04 	addi	r6,r16,-4
  80b91c:	00800904 	movi	r2,36
  80b920:	1180b836 	bltu	r2,r6,80bc04 <_realloc_r+0x3c4>
  80b924:	00c004c4 	movi	r3,19
  80b928:	19809636 	bltu	r3,r6,80bb84 <_realloc_r+0x344>
  80b92c:	9005883a 	mov	r2,r18
  80b930:	a807883a 	mov	r3,r21
  80b934:	19000017 	ldw	r4,0(r3)
  80b938:	11000015 	stw	r4,0(r2)
  80b93c:	19000117 	ldw	r4,4(r3)
  80b940:	11000115 	stw	r4,4(r2)
  80b944:	18c00217 	ldw	r3,8(r3)
  80b948:	10c00215 	stw	r3,8(r2)
  80b94c:	a80b883a 	mov	r5,r21
  80b950:	a009883a 	mov	r4,r20
  80b954:	0808f9c0 	call	808f9c <_free_r>
  80b958:	a009883a 	mov	r4,r20
  80b95c:	080fad40 	call	80fad4 <__malloc_unlock>
  80b960:	9005883a 	mov	r2,r18
  80b964:	00001206 	br	80b9b0 <_realloc_r+0x170>
  80b968:	00c00404 	movi	r3,16
  80b96c:	1823883a 	mov	r17,r3
  80b970:	003fce06 	br	80b8ac <__alt_data_end+0xff80b8ac>
  80b974:	a825883a 	mov	r18,r21
  80b978:	8445c83a 	sub	r2,r16,r17
  80b97c:	00c003c4 	movi	r3,15
  80b980:	18802636 	bltu	r3,r2,80ba1c <_realloc_r+0x1dc>
  80b984:	99800117 	ldw	r6,4(r19)
  80b988:	9c07883a 	add	r3,r19,r16
  80b98c:	3180004c 	andi	r6,r6,1
  80b990:	3420b03a 	or	r16,r6,r16
  80b994:	9c000115 	stw	r16,4(r19)
  80b998:	18800117 	ldw	r2,4(r3)
  80b99c:	10800054 	ori	r2,r2,1
  80b9a0:	18800115 	stw	r2,4(r3)
  80b9a4:	a009883a 	mov	r4,r20
  80b9a8:	080fad40 	call	80fad4 <__malloc_unlock>
  80b9ac:	9005883a 	mov	r2,r18
  80b9b0:	dfc00917 	ldw	ra,36(sp)
  80b9b4:	df000817 	ldw	fp,32(sp)
  80b9b8:	ddc00717 	ldw	r23,28(sp)
  80b9bc:	dd800617 	ldw	r22,24(sp)
  80b9c0:	dd400517 	ldw	r21,20(sp)
  80b9c4:	dd000417 	ldw	r20,16(sp)
  80b9c8:	dcc00317 	ldw	r19,12(sp)
  80b9cc:	dc800217 	ldw	r18,8(sp)
  80b9d0:	dc400117 	ldw	r17,4(sp)
  80b9d4:	dc000017 	ldw	r16,0(sp)
  80b9d8:	dec00a04 	addi	sp,sp,40
  80b9dc:	f800283a 	ret
  80b9e0:	017fff04 	movi	r5,-4
  80b9e4:	414a703a 	and	r5,r8,r5
  80b9e8:	814d883a 	add	r6,r16,r5
  80b9ec:	30c01f16 	blt	r6,r3,80ba6c <_realloc_r+0x22c>
  80b9f0:	20800317 	ldw	r2,12(r4)
  80b9f4:	20c00217 	ldw	r3,8(r4)
  80b9f8:	a825883a 	mov	r18,r21
  80b9fc:	3021883a 	mov	r16,r6
  80ba00:	18800315 	stw	r2,12(r3)
  80ba04:	10c00215 	stw	r3,8(r2)
  80ba08:	003fdb06 	br	80b978 <__alt_data_end+0xff80b978>
  80ba0c:	00800304 	movi	r2,12
  80ba10:	a0800015 	stw	r2,0(r20)
  80ba14:	0005883a 	mov	r2,zero
  80ba18:	003fe506 	br	80b9b0 <__alt_data_end+0xff80b9b0>
  80ba1c:	98c00117 	ldw	r3,4(r19)
  80ba20:	9c4b883a 	add	r5,r19,r17
  80ba24:	11000054 	ori	r4,r2,1
  80ba28:	18c0004c 	andi	r3,r3,1
  80ba2c:	1c62b03a 	or	r17,r3,r17
  80ba30:	9c400115 	stw	r17,4(r19)
  80ba34:	29000115 	stw	r4,4(r5)
  80ba38:	2885883a 	add	r2,r5,r2
  80ba3c:	10c00117 	ldw	r3,4(r2)
  80ba40:	29400204 	addi	r5,r5,8
  80ba44:	a009883a 	mov	r4,r20
  80ba48:	18c00054 	ori	r3,r3,1
  80ba4c:	10c00115 	stw	r3,4(r2)
  80ba50:	0808f9c0 	call	808f9c <_free_r>
  80ba54:	003fd306 	br	80b9a4 <__alt_data_end+0xff80b9a4>
  80ba58:	017fff04 	movi	r5,-4
  80ba5c:	414a703a 	and	r5,r8,r5
  80ba60:	89800404 	addi	r6,r17,16
  80ba64:	8151883a 	add	r8,r16,r5
  80ba68:	4180590e 	bge	r8,r6,80bbd0 <_realloc_r+0x390>
  80ba6c:	1080004c 	andi	r2,r2,1
  80ba70:	103f9e1e 	bne	r2,zero,80b8ec <__alt_data_end+0xff80b8ec>
  80ba74:	adbffe17 	ldw	r22,-8(r21)
  80ba78:	00bfff04 	movi	r2,-4
  80ba7c:	9dadc83a 	sub	r22,r19,r22
  80ba80:	b1800117 	ldw	r6,4(r22)
  80ba84:	3084703a 	and	r2,r6,r2
  80ba88:	20002026 	beq	r4,zero,80bb0c <_realloc_r+0x2cc>
  80ba8c:	80af883a 	add	r23,r16,r2
  80ba90:	b96f883a 	add	r23,r23,r5
  80ba94:	21c05f26 	beq	r4,r7,80bc14 <_realloc_r+0x3d4>
  80ba98:	b8c01c16 	blt	r23,r3,80bb0c <_realloc_r+0x2cc>
  80ba9c:	20800317 	ldw	r2,12(r4)
  80baa0:	20c00217 	ldw	r3,8(r4)
  80baa4:	81bfff04 	addi	r6,r16,-4
  80baa8:	01000904 	movi	r4,36
  80baac:	18800315 	stw	r2,12(r3)
  80bab0:	10c00215 	stw	r3,8(r2)
  80bab4:	b0c00217 	ldw	r3,8(r22)
  80bab8:	b0800317 	ldw	r2,12(r22)
  80babc:	b4800204 	addi	r18,r22,8
  80bac0:	18800315 	stw	r2,12(r3)
  80bac4:	10c00215 	stw	r3,8(r2)
  80bac8:	21801b36 	bltu	r4,r6,80bb38 <_realloc_r+0x2f8>
  80bacc:	008004c4 	movi	r2,19
  80bad0:	1180352e 	bgeu	r2,r6,80bba8 <_realloc_r+0x368>
  80bad4:	a8800017 	ldw	r2,0(r21)
  80bad8:	b0800215 	stw	r2,8(r22)
  80badc:	a8800117 	ldw	r2,4(r21)
  80bae0:	b0800315 	stw	r2,12(r22)
  80bae4:	008006c4 	movi	r2,27
  80bae8:	11807f36 	bltu	r2,r6,80bce8 <_realloc_r+0x4a8>
  80baec:	b0800404 	addi	r2,r22,16
  80baf0:	ad400204 	addi	r21,r21,8
  80baf4:	00002d06 	br	80bbac <_realloc_r+0x36c>
  80baf8:	adbffe17 	ldw	r22,-8(r21)
  80bafc:	00bfff04 	movi	r2,-4
  80bb00:	9dadc83a 	sub	r22,r19,r22
  80bb04:	b1000117 	ldw	r4,4(r22)
  80bb08:	2084703a 	and	r2,r4,r2
  80bb0c:	b03f7726 	beq	r22,zero,80b8ec <__alt_data_end+0xff80b8ec>
  80bb10:	80af883a 	add	r23,r16,r2
  80bb14:	b8ff7516 	blt	r23,r3,80b8ec <__alt_data_end+0xff80b8ec>
  80bb18:	b0800317 	ldw	r2,12(r22)
  80bb1c:	b0c00217 	ldw	r3,8(r22)
  80bb20:	81bfff04 	addi	r6,r16,-4
  80bb24:	01000904 	movi	r4,36
  80bb28:	18800315 	stw	r2,12(r3)
  80bb2c:	10c00215 	stw	r3,8(r2)
  80bb30:	b4800204 	addi	r18,r22,8
  80bb34:	21bfe52e 	bgeu	r4,r6,80bacc <__alt_data_end+0xff80bacc>
  80bb38:	a80b883a 	mov	r5,r21
  80bb3c:	9009883a 	mov	r4,r18
  80bb40:	080a5c00 	call	80a5c0 <memmove>
  80bb44:	b821883a 	mov	r16,r23
  80bb48:	b027883a 	mov	r19,r22
  80bb4c:	003f8a06 	br	80b978 <__alt_data_end+0xff80b978>
  80bb50:	300b883a 	mov	r5,r6
  80bb54:	dfc00917 	ldw	ra,36(sp)
  80bb58:	df000817 	ldw	fp,32(sp)
  80bb5c:	ddc00717 	ldw	r23,28(sp)
  80bb60:	dd800617 	ldw	r22,24(sp)
  80bb64:	dd400517 	ldw	r21,20(sp)
  80bb68:	dd000417 	ldw	r20,16(sp)
  80bb6c:	dcc00317 	ldw	r19,12(sp)
  80bb70:	dc800217 	ldw	r18,8(sp)
  80bb74:	dc400117 	ldw	r17,4(sp)
  80bb78:	dc000017 	ldw	r16,0(sp)
  80bb7c:	dec00a04 	addi	sp,sp,40
  80bb80:	0809b881 	jmpi	809b88 <_malloc_r>
  80bb84:	a8c00017 	ldw	r3,0(r21)
  80bb88:	90c00015 	stw	r3,0(r18)
  80bb8c:	a8c00117 	ldw	r3,4(r21)
  80bb90:	90c00115 	stw	r3,4(r18)
  80bb94:	00c006c4 	movi	r3,27
  80bb98:	19804536 	bltu	r3,r6,80bcb0 <_realloc_r+0x470>
  80bb9c:	90800204 	addi	r2,r18,8
  80bba0:	a8c00204 	addi	r3,r21,8
  80bba4:	003f6306 	br	80b934 <__alt_data_end+0xff80b934>
  80bba8:	9005883a 	mov	r2,r18
  80bbac:	a8c00017 	ldw	r3,0(r21)
  80bbb0:	b821883a 	mov	r16,r23
  80bbb4:	b027883a 	mov	r19,r22
  80bbb8:	10c00015 	stw	r3,0(r2)
  80bbbc:	a8c00117 	ldw	r3,4(r21)
  80bbc0:	10c00115 	stw	r3,4(r2)
  80bbc4:	a8c00217 	ldw	r3,8(r21)
  80bbc8:	10c00215 	stw	r3,8(r2)
  80bbcc:	003f6a06 	br	80b978 <__alt_data_end+0xff80b978>
  80bbd0:	9c67883a 	add	r19,r19,r17
  80bbd4:	4445c83a 	sub	r2,r8,r17
  80bbd8:	e4c00215 	stw	r19,8(fp)
  80bbdc:	10800054 	ori	r2,r2,1
  80bbe0:	98800115 	stw	r2,4(r19)
  80bbe4:	a8bfff17 	ldw	r2,-4(r21)
  80bbe8:	a009883a 	mov	r4,r20
  80bbec:	1080004c 	andi	r2,r2,1
  80bbf0:	1462b03a 	or	r17,r2,r17
  80bbf4:	ac7fff15 	stw	r17,-4(r21)
  80bbf8:	080fad40 	call	80fad4 <__malloc_unlock>
  80bbfc:	a805883a 	mov	r2,r21
  80bc00:	003f6b06 	br	80b9b0 <__alt_data_end+0xff80b9b0>
  80bc04:	a80b883a 	mov	r5,r21
  80bc08:	9009883a 	mov	r4,r18
  80bc0c:	080a5c00 	call	80a5c0 <memmove>
  80bc10:	003f4e06 	br	80b94c <__alt_data_end+0xff80b94c>
  80bc14:	89000404 	addi	r4,r17,16
  80bc18:	b93fbc16 	blt	r23,r4,80bb0c <__alt_data_end+0xff80bb0c>
  80bc1c:	b0800317 	ldw	r2,12(r22)
  80bc20:	b0c00217 	ldw	r3,8(r22)
  80bc24:	81bfff04 	addi	r6,r16,-4
  80bc28:	01000904 	movi	r4,36
  80bc2c:	18800315 	stw	r2,12(r3)
  80bc30:	10c00215 	stw	r3,8(r2)
  80bc34:	b4800204 	addi	r18,r22,8
  80bc38:	21804336 	bltu	r4,r6,80bd48 <_realloc_r+0x508>
  80bc3c:	008004c4 	movi	r2,19
  80bc40:	11803f2e 	bgeu	r2,r6,80bd40 <_realloc_r+0x500>
  80bc44:	a8800017 	ldw	r2,0(r21)
  80bc48:	b0800215 	stw	r2,8(r22)
  80bc4c:	a8800117 	ldw	r2,4(r21)
  80bc50:	b0800315 	stw	r2,12(r22)
  80bc54:	008006c4 	movi	r2,27
  80bc58:	11803f36 	bltu	r2,r6,80bd58 <_realloc_r+0x518>
  80bc5c:	b0800404 	addi	r2,r22,16
  80bc60:	ad400204 	addi	r21,r21,8
  80bc64:	a8c00017 	ldw	r3,0(r21)
  80bc68:	10c00015 	stw	r3,0(r2)
  80bc6c:	a8c00117 	ldw	r3,4(r21)
  80bc70:	10c00115 	stw	r3,4(r2)
  80bc74:	a8c00217 	ldw	r3,8(r21)
  80bc78:	10c00215 	stw	r3,8(r2)
  80bc7c:	b447883a 	add	r3,r22,r17
  80bc80:	bc45c83a 	sub	r2,r23,r17
  80bc84:	e0c00215 	stw	r3,8(fp)
  80bc88:	10800054 	ori	r2,r2,1
  80bc8c:	18800115 	stw	r2,4(r3)
  80bc90:	b0800117 	ldw	r2,4(r22)
  80bc94:	a009883a 	mov	r4,r20
  80bc98:	1080004c 	andi	r2,r2,1
  80bc9c:	1462b03a 	or	r17,r2,r17
  80bca0:	b4400115 	stw	r17,4(r22)
  80bca4:	080fad40 	call	80fad4 <__malloc_unlock>
  80bca8:	9005883a 	mov	r2,r18
  80bcac:	003f4006 	br	80b9b0 <__alt_data_end+0xff80b9b0>
  80bcb0:	a8c00217 	ldw	r3,8(r21)
  80bcb4:	90c00215 	stw	r3,8(r18)
  80bcb8:	a8c00317 	ldw	r3,12(r21)
  80bcbc:	90c00315 	stw	r3,12(r18)
  80bcc0:	30801126 	beq	r6,r2,80bd08 <_realloc_r+0x4c8>
  80bcc4:	90800404 	addi	r2,r18,16
  80bcc8:	a8c00404 	addi	r3,r21,16
  80bccc:	003f1906 	br	80b934 <__alt_data_end+0xff80b934>
  80bcd0:	90ffff17 	ldw	r3,-4(r18)
  80bcd4:	00bfff04 	movi	r2,-4
  80bcd8:	a825883a 	mov	r18,r21
  80bcdc:	1884703a 	and	r2,r3,r2
  80bce0:	80a1883a 	add	r16,r16,r2
  80bce4:	003f2406 	br	80b978 <__alt_data_end+0xff80b978>
  80bce8:	a8800217 	ldw	r2,8(r21)
  80bcec:	b0800415 	stw	r2,16(r22)
  80bcf0:	a8800317 	ldw	r2,12(r21)
  80bcf4:	b0800515 	stw	r2,20(r22)
  80bcf8:	31000a26 	beq	r6,r4,80bd24 <_realloc_r+0x4e4>
  80bcfc:	b0800604 	addi	r2,r22,24
  80bd00:	ad400404 	addi	r21,r21,16
  80bd04:	003fa906 	br	80bbac <__alt_data_end+0xff80bbac>
  80bd08:	a9000417 	ldw	r4,16(r21)
  80bd0c:	90800604 	addi	r2,r18,24
  80bd10:	a8c00604 	addi	r3,r21,24
  80bd14:	91000415 	stw	r4,16(r18)
  80bd18:	a9000517 	ldw	r4,20(r21)
  80bd1c:	91000515 	stw	r4,20(r18)
  80bd20:	003f0406 	br	80b934 <__alt_data_end+0xff80b934>
  80bd24:	a8c00417 	ldw	r3,16(r21)
  80bd28:	ad400604 	addi	r21,r21,24
  80bd2c:	b0800804 	addi	r2,r22,32
  80bd30:	b0c00615 	stw	r3,24(r22)
  80bd34:	a8ffff17 	ldw	r3,-4(r21)
  80bd38:	b0c00715 	stw	r3,28(r22)
  80bd3c:	003f9b06 	br	80bbac <__alt_data_end+0xff80bbac>
  80bd40:	9005883a 	mov	r2,r18
  80bd44:	003fc706 	br	80bc64 <__alt_data_end+0xff80bc64>
  80bd48:	a80b883a 	mov	r5,r21
  80bd4c:	9009883a 	mov	r4,r18
  80bd50:	080a5c00 	call	80a5c0 <memmove>
  80bd54:	003fc906 	br	80bc7c <__alt_data_end+0xff80bc7c>
  80bd58:	a8800217 	ldw	r2,8(r21)
  80bd5c:	b0800415 	stw	r2,16(r22)
  80bd60:	a8800317 	ldw	r2,12(r21)
  80bd64:	b0800515 	stw	r2,20(r22)
  80bd68:	31000726 	beq	r6,r4,80bd88 <_realloc_r+0x548>
  80bd6c:	b0800604 	addi	r2,r22,24
  80bd70:	ad400404 	addi	r21,r21,16
  80bd74:	003fbb06 	br	80bc64 <__alt_data_end+0xff80bc64>
  80bd78:	a009883a 	mov	r4,r20
  80bd7c:	080fad40 	call	80fad4 <__malloc_unlock>
  80bd80:	0005883a 	mov	r2,zero
  80bd84:	003f0a06 	br	80b9b0 <__alt_data_end+0xff80b9b0>
  80bd88:	a8c00417 	ldw	r3,16(r21)
  80bd8c:	ad400604 	addi	r21,r21,24
  80bd90:	b0800804 	addi	r2,r22,32
  80bd94:	b0c00615 	stw	r3,24(r22)
  80bd98:	a8ffff17 	ldw	r3,-4(r21)
  80bd9c:	b0c00715 	stw	r3,28(r22)
  80bda0:	003fb006 	br	80bc64 <__alt_data_end+0xff80bc64>

0080bda4 <__fpclassifyd>:
  80bda4:	00a00034 	movhi	r2,32768
  80bda8:	10bfffc4 	addi	r2,r2,-1
  80bdac:	2884703a 	and	r2,r5,r2
  80bdb0:	10000726 	beq	r2,zero,80bdd0 <__fpclassifyd+0x2c>
  80bdb4:	00fffc34 	movhi	r3,65520
  80bdb8:	019ff834 	movhi	r6,32736
  80bdbc:	28c7883a 	add	r3,r5,r3
  80bdc0:	31bfffc4 	addi	r6,r6,-1
  80bdc4:	30c00536 	bltu	r6,r3,80bddc <__fpclassifyd+0x38>
  80bdc8:	00800104 	movi	r2,4
  80bdcc:	f800283a 	ret
  80bdd0:	2000021e 	bne	r4,zero,80bddc <__fpclassifyd+0x38>
  80bdd4:	00800084 	movi	r2,2
  80bdd8:	f800283a 	ret
  80bddc:	00dffc34 	movhi	r3,32752
  80bde0:	019ff834 	movhi	r6,32736
  80bde4:	28cb883a 	add	r5,r5,r3
  80bde8:	31bfffc4 	addi	r6,r6,-1
  80bdec:	317ff62e 	bgeu	r6,r5,80bdc8 <__alt_data_end+0xff80bdc8>
  80bdf0:	01400434 	movhi	r5,16
  80bdf4:	297fffc4 	addi	r5,r5,-1
  80bdf8:	28800236 	bltu	r5,r2,80be04 <__fpclassifyd+0x60>
  80bdfc:	008000c4 	movi	r2,3
  80be00:	f800283a 	ret
  80be04:	10c00226 	beq	r2,r3,80be10 <__fpclassifyd+0x6c>
  80be08:	0005883a 	mov	r2,zero
  80be0c:	f800283a 	ret
  80be10:	2005003a 	cmpeq	r2,r4,zero
  80be14:	f800283a 	ret

0080be18 <_sbrk_r>:
  80be18:	defffd04 	addi	sp,sp,-12
  80be1c:	dc000015 	stw	r16,0(sp)
  80be20:	04002074 	movhi	r16,129
  80be24:	dc400115 	stw	r17,4(sp)
  80be28:	84162204 	addi	r16,r16,22664
  80be2c:	2023883a 	mov	r17,r4
  80be30:	2809883a 	mov	r4,r5
  80be34:	dfc00215 	stw	ra,8(sp)
  80be38:	80000015 	stw	zero,0(r16)
  80be3c:	080fc940 	call	80fc94 <sbrk>
  80be40:	00ffffc4 	movi	r3,-1
  80be44:	10c00526 	beq	r2,r3,80be5c <_sbrk_r+0x44>
  80be48:	dfc00217 	ldw	ra,8(sp)
  80be4c:	dc400117 	ldw	r17,4(sp)
  80be50:	dc000017 	ldw	r16,0(sp)
  80be54:	dec00304 	addi	sp,sp,12
  80be58:	f800283a 	ret
  80be5c:	80c00017 	ldw	r3,0(r16)
  80be60:	183ff926 	beq	r3,zero,80be48 <__alt_data_end+0xff80be48>
  80be64:	88c00015 	stw	r3,0(r17)
  80be68:	003ff706 	br	80be48 <__alt_data_end+0xff80be48>

0080be6c <__sread>:
  80be6c:	defffe04 	addi	sp,sp,-8
  80be70:	dc000015 	stw	r16,0(sp)
  80be74:	2821883a 	mov	r16,r5
  80be78:	2940038f 	ldh	r5,14(r5)
  80be7c:	dfc00115 	stw	ra,4(sp)
  80be80:	080dc600 	call	80dc60 <_read_r>
  80be84:	10000716 	blt	r2,zero,80bea4 <__sread+0x38>
  80be88:	80c01417 	ldw	r3,80(r16)
  80be8c:	1887883a 	add	r3,r3,r2
  80be90:	80c01415 	stw	r3,80(r16)
  80be94:	dfc00117 	ldw	ra,4(sp)
  80be98:	dc000017 	ldw	r16,0(sp)
  80be9c:	dec00204 	addi	sp,sp,8
  80bea0:	f800283a 	ret
  80bea4:	80c0030b 	ldhu	r3,12(r16)
  80bea8:	18fbffcc 	andi	r3,r3,61439
  80beac:	80c0030d 	sth	r3,12(r16)
  80beb0:	dfc00117 	ldw	ra,4(sp)
  80beb4:	dc000017 	ldw	r16,0(sp)
  80beb8:	dec00204 	addi	sp,sp,8
  80bebc:	f800283a 	ret

0080bec0 <__seofread>:
  80bec0:	0005883a 	mov	r2,zero
  80bec4:	f800283a 	ret

0080bec8 <__swrite>:
  80bec8:	2880030b 	ldhu	r2,12(r5)
  80becc:	defffb04 	addi	sp,sp,-20
  80bed0:	dcc00315 	stw	r19,12(sp)
  80bed4:	dc800215 	stw	r18,8(sp)
  80bed8:	dc400115 	stw	r17,4(sp)
  80bedc:	dc000015 	stw	r16,0(sp)
  80bee0:	dfc00415 	stw	ra,16(sp)
  80bee4:	10c0400c 	andi	r3,r2,256
  80bee8:	2821883a 	mov	r16,r5
  80beec:	2023883a 	mov	r17,r4
  80bef0:	3025883a 	mov	r18,r6
  80bef4:	3827883a 	mov	r19,r7
  80bef8:	18000526 	beq	r3,zero,80bf10 <__swrite+0x48>
  80befc:	2940038f 	ldh	r5,14(r5)
  80bf00:	01c00084 	movi	r7,2
  80bf04:	000d883a 	mov	r6,zero
  80bf08:	080dc000 	call	80dc00 <_lseek_r>
  80bf0c:	8080030b 	ldhu	r2,12(r16)
  80bf10:	8140038f 	ldh	r5,14(r16)
  80bf14:	10bbffcc 	andi	r2,r2,61439
  80bf18:	980f883a 	mov	r7,r19
  80bf1c:	900d883a 	mov	r6,r18
  80bf20:	8809883a 	mov	r4,r17
  80bf24:	8080030d 	sth	r2,12(r16)
  80bf28:	dfc00417 	ldw	ra,16(sp)
  80bf2c:	dcc00317 	ldw	r19,12(sp)
  80bf30:	dc800217 	ldw	r18,8(sp)
  80bf34:	dc400117 	ldw	r17,4(sp)
  80bf38:	dc000017 	ldw	r16,0(sp)
  80bf3c:	dec00504 	addi	sp,sp,20
  80bf40:	080d6cc1 	jmpi	80d6cc <_write_r>

0080bf44 <__sseek>:
  80bf44:	defffe04 	addi	sp,sp,-8
  80bf48:	dc000015 	stw	r16,0(sp)
  80bf4c:	2821883a 	mov	r16,r5
  80bf50:	2940038f 	ldh	r5,14(r5)
  80bf54:	dfc00115 	stw	ra,4(sp)
  80bf58:	080dc000 	call	80dc00 <_lseek_r>
  80bf5c:	00ffffc4 	movi	r3,-1
  80bf60:	10c00826 	beq	r2,r3,80bf84 <__sseek+0x40>
  80bf64:	80c0030b 	ldhu	r3,12(r16)
  80bf68:	80801415 	stw	r2,80(r16)
  80bf6c:	18c40014 	ori	r3,r3,4096
  80bf70:	80c0030d 	sth	r3,12(r16)
  80bf74:	dfc00117 	ldw	ra,4(sp)
  80bf78:	dc000017 	ldw	r16,0(sp)
  80bf7c:	dec00204 	addi	sp,sp,8
  80bf80:	f800283a 	ret
  80bf84:	80c0030b 	ldhu	r3,12(r16)
  80bf88:	18fbffcc 	andi	r3,r3,61439
  80bf8c:	80c0030d 	sth	r3,12(r16)
  80bf90:	dfc00117 	ldw	ra,4(sp)
  80bf94:	dc000017 	ldw	r16,0(sp)
  80bf98:	dec00204 	addi	sp,sp,8
  80bf9c:	f800283a 	ret

0080bfa0 <__sclose>:
  80bfa0:	2940038f 	ldh	r5,14(r5)
  80bfa4:	080d72c1 	jmpi	80d72c <_close_r>

0080bfa8 <strcmp>:
  80bfa8:	2144b03a 	or	r2,r4,r5
  80bfac:	108000cc 	andi	r2,r2,3
  80bfb0:	1000171e 	bne	r2,zero,80c010 <strcmp+0x68>
  80bfb4:	20800017 	ldw	r2,0(r4)
  80bfb8:	28c00017 	ldw	r3,0(r5)
  80bfbc:	10c0141e 	bne	r2,r3,80c010 <strcmp+0x68>
  80bfc0:	027fbff4 	movhi	r9,65279
  80bfc4:	4a7fbfc4 	addi	r9,r9,-257
  80bfc8:	0086303a 	nor	r3,zero,r2
  80bfcc:	02202074 	movhi	r8,32897
  80bfd0:	1245883a 	add	r2,r2,r9
  80bfd4:	42202004 	addi	r8,r8,-32640
  80bfd8:	10c4703a 	and	r2,r2,r3
  80bfdc:	1204703a 	and	r2,r2,r8
  80bfe0:	10000226 	beq	r2,zero,80bfec <strcmp+0x44>
  80bfe4:	00002306 	br	80c074 <strcmp+0xcc>
  80bfe8:	1000221e 	bne	r2,zero,80c074 <strcmp+0xcc>
  80bfec:	21000104 	addi	r4,r4,4
  80bff0:	20c00017 	ldw	r3,0(r4)
  80bff4:	29400104 	addi	r5,r5,4
  80bff8:	29800017 	ldw	r6,0(r5)
  80bffc:	1a4f883a 	add	r7,r3,r9
  80c000:	00c4303a 	nor	r2,zero,r3
  80c004:	3884703a 	and	r2,r7,r2
  80c008:	1204703a 	and	r2,r2,r8
  80c00c:	19bff626 	beq	r3,r6,80bfe8 <__alt_data_end+0xff80bfe8>
  80c010:	20800003 	ldbu	r2,0(r4)
  80c014:	10c03fcc 	andi	r3,r2,255
  80c018:	18c0201c 	xori	r3,r3,128
  80c01c:	18ffe004 	addi	r3,r3,-128
  80c020:	18000c26 	beq	r3,zero,80c054 <strcmp+0xac>
  80c024:	29800007 	ldb	r6,0(r5)
  80c028:	19800326 	beq	r3,r6,80c038 <strcmp+0x90>
  80c02c:	00001306 	br	80c07c <strcmp+0xd4>
  80c030:	29800007 	ldb	r6,0(r5)
  80c034:	11800b1e 	bne	r2,r6,80c064 <strcmp+0xbc>
  80c038:	21000044 	addi	r4,r4,1
  80c03c:	20c00003 	ldbu	r3,0(r4)
  80c040:	29400044 	addi	r5,r5,1
  80c044:	18803fcc 	andi	r2,r3,255
  80c048:	1080201c 	xori	r2,r2,128
  80c04c:	10bfe004 	addi	r2,r2,-128
  80c050:	103ff71e 	bne	r2,zero,80c030 <__alt_data_end+0xff80c030>
  80c054:	0007883a 	mov	r3,zero
  80c058:	28800003 	ldbu	r2,0(r5)
  80c05c:	1885c83a 	sub	r2,r3,r2
  80c060:	f800283a 	ret
  80c064:	28800003 	ldbu	r2,0(r5)
  80c068:	18c03fcc 	andi	r3,r3,255
  80c06c:	1885c83a 	sub	r2,r3,r2
  80c070:	f800283a 	ret
  80c074:	0005883a 	mov	r2,zero
  80c078:	f800283a 	ret
  80c07c:	10c03fcc 	andi	r3,r2,255
  80c080:	003ff506 	br	80c058 <__alt_data_end+0xff80c058>

0080c084 <__sprint_r.part.0>:
  80c084:	28801917 	ldw	r2,100(r5)
  80c088:	defff604 	addi	sp,sp,-40
  80c08c:	dd400515 	stw	r21,20(sp)
  80c090:	dfc00915 	stw	ra,36(sp)
  80c094:	df000815 	stw	fp,32(sp)
  80c098:	ddc00715 	stw	r23,28(sp)
  80c09c:	dd800615 	stw	r22,24(sp)
  80c0a0:	dd000415 	stw	r20,16(sp)
  80c0a4:	dcc00315 	stw	r19,12(sp)
  80c0a8:	dc800215 	stw	r18,8(sp)
  80c0ac:	dc400115 	stw	r17,4(sp)
  80c0b0:	dc000015 	stw	r16,0(sp)
  80c0b4:	1088000c 	andi	r2,r2,8192
  80c0b8:	302b883a 	mov	r21,r6
  80c0bc:	10002e26 	beq	r2,zero,80c178 <__sprint_r.part.0+0xf4>
  80c0c0:	30800217 	ldw	r2,8(r6)
  80c0c4:	35800017 	ldw	r22,0(r6)
  80c0c8:	10002926 	beq	r2,zero,80c170 <__sprint_r.part.0+0xec>
  80c0cc:	2827883a 	mov	r19,r5
  80c0d0:	2029883a 	mov	r20,r4
  80c0d4:	b5c00104 	addi	r23,r22,4
  80c0d8:	04bfffc4 	movi	r18,-1
  80c0dc:	bc400017 	ldw	r17,0(r23)
  80c0e0:	b4000017 	ldw	r16,0(r22)
  80c0e4:	0039883a 	mov	fp,zero
  80c0e8:	8822d0ba 	srli	r17,r17,2
  80c0ec:	8800031e 	bne	r17,zero,80c0fc <__sprint_r.part.0+0x78>
  80c0f0:	00001806 	br	80c154 <__sprint_r.part.0+0xd0>
  80c0f4:	84000104 	addi	r16,r16,4
  80c0f8:	8f001526 	beq	r17,fp,80c150 <__sprint_r.part.0+0xcc>
  80c0fc:	81400017 	ldw	r5,0(r16)
  80c100:	980d883a 	mov	r6,r19
  80c104:	a009883a 	mov	r4,r20
  80c108:	080daac0 	call	80daac <_fputwc_r>
  80c10c:	e7000044 	addi	fp,fp,1
  80c110:	14bff81e 	bne	r2,r18,80c0f4 <__alt_data_end+0xff80c0f4>
  80c114:	9005883a 	mov	r2,r18
  80c118:	a8000215 	stw	zero,8(r21)
  80c11c:	a8000115 	stw	zero,4(r21)
  80c120:	dfc00917 	ldw	ra,36(sp)
  80c124:	df000817 	ldw	fp,32(sp)
  80c128:	ddc00717 	ldw	r23,28(sp)
  80c12c:	dd800617 	ldw	r22,24(sp)
  80c130:	dd400517 	ldw	r21,20(sp)
  80c134:	dd000417 	ldw	r20,16(sp)
  80c138:	dcc00317 	ldw	r19,12(sp)
  80c13c:	dc800217 	ldw	r18,8(sp)
  80c140:	dc400117 	ldw	r17,4(sp)
  80c144:	dc000017 	ldw	r16,0(sp)
  80c148:	dec00a04 	addi	sp,sp,40
  80c14c:	f800283a 	ret
  80c150:	a8800217 	ldw	r2,8(r21)
  80c154:	8c63883a 	add	r17,r17,r17
  80c158:	8c63883a 	add	r17,r17,r17
  80c15c:	1445c83a 	sub	r2,r2,r17
  80c160:	a8800215 	stw	r2,8(r21)
  80c164:	b5800204 	addi	r22,r22,8
  80c168:	bdc00204 	addi	r23,r23,8
  80c16c:	103fdb1e 	bne	r2,zero,80c0dc <__alt_data_end+0xff80c0dc>
  80c170:	0005883a 	mov	r2,zero
  80c174:	003fe806 	br	80c118 <__alt_data_end+0xff80c118>
  80c178:	08092ac0 	call	8092ac <__sfvwrite_r>
  80c17c:	003fe606 	br	80c118 <__alt_data_end+0xff80c118>

0080c180 <__sprint_r>:
  80c180:	30c00217 	ldw	r3,8(r6)
  80c184:	18000126 	beq	r3,zero,80c18c <__sprint_r+0xc>
  80c188:	080c0841 	jmpi	80c084 <__sprint_r.part.0>
  80c18c:	30000115 	stw	zero,4(r6)
  80c190:	0005883a 	mov	r2,zero
  80c194:	f800283a 	ret

0080c198 <___vfiprintf_internal_r>:
  80c198:	deffc904 	addi	sp,sp,-220
  80c19c:	df003515 	stw	fp,212(sp)
  80c1a0:	dd003115 	stw	r20,196(sp)
  80c1a4:	dfc03615 	stw	ra,216(sp)
  80c1a8:	ddc03415 	stw	r23,208(sp)
  80c1ac:	dd803315 	stw	r22,204(sp)
  80c1b0:	dd403215 	stw	r21,200(sp)
  80c1b4:	dcc03015 	stw	r19,192(sp)
  80c1b8:	dc802f15 	stw	r18,188(sp)
  80c1bc:	dc402e15 	stw	r17,184(sp)
  80c1c0:	dc002d15 	stw	r16,180(sp)
  80c1c4:	d9002015 	stw	r4,128(sp)
  80c1c8:	d9c02215 	stw	r7,136(sp)
  80c1cc:	2829883a 	mov	r20,r5
  80c1d0:	3039883a 	mov	fp,r6
  80c1d4:	20000226 	beq	r4,zero,80c1e0 <___vfiprintf_internal_r+0x48>
  80c1d8:	20800e17 	ldw	r2,56(r4)
  80c1dc:	1000cf26 	beq	r2,zero,80c51c <___vfiprintf_internal_r+0x384>
  80c1e0:	a080030b 	ldhu	r2,12(r20)
  80c1e4:	10c8000c 	andi	r3,r2,8192
  80c1e8:	1800061e 	bne	r3,zero,80c204 <___vfiprintf_internal_r+0x6c>
  80c1ec:	a1001917 	ldw	r4,100(r20)
  80c1f0:	00f7ffc4 	movi	r3,-8193
  80c1f4:	10880014 	ori	r2,r2,8192
  80c1f8:	20c6703a 	and	r3,r4,r3
  80c1fc:	a080030d 	sth	r2,12(r20)
  80c200:	a0c01915 	stw	r3,100(r20)
  80c204:	10c0020c 	andi	r3,r2,8
  80c208:	1800a926 	beq	r3,zero,80c4b0 <___vfiprintf_internal_r+0x318>
  80c20c:	a0c00417 	ldw	r3,16(r20)
  80c210:	1800a726 	beq	r3,zero,80c4b0 <___vfiprintf_internal_r+0x318>
  80c214:	1080068c 	andi	r2,r2,26
  80c218:	00c00284 	movi	r3,10
  80c21c:	10c0ac26 	beq	r2,r3,80c4d0 <___vfiprintf_internal_r+0x338>
  80c220:	da801a04 	addi	r10,sp,104
  80c224:	da801e15 	stw	r10,120(sp)
  80c228:	d8801e17 	ldw	r2,120(sp)
  80c22c:	da8019c4 	addi	r10,sp,103
  80c230:	05802074 	movhi	r22,129
  80c234:	05c02074 	movhi	r23,129
  80c238:	da801f15 	stw	r10,124(sp)
  80c23c:	1295c83a 	sub	r10,r2,r10
  80c240:	b5889704 	addi	r22,r22,8796
  80c244:	bdc89304 	addi	r23,r23,8780
  80c248:	dec01a15 	stw	sp,104(sp)
  80c24c:	d8001c15 	stw	zero,112(sp)
  80c250:	d8001b15 	stw	zero,108(sp)
  80c254:	d8002615 	stw	zero,152(sp)
  80c258:	d8002315 	stw	zero,140(sp)
  80c25c:	da802715 	stw	r10,156(sp)
  80c260:	d811883a 	mov	r8,sp
  80c264:	dd002115 	stw	r20,132(sp)
  80c268:	e021883a 	mov	r16,fp
  80c26c:	80800007 	ldb	r2,0(r16)
  80c270:	1003ea26 	beq	r2,zero,80d21c <___vfiprintf_internal_r+0x1084>
  80c274:	00c00944 	movi	r3,37
  80c278:	8025883a 	mov	r18,r16
  80c27c:	10c0021e 	bne	r2,r3,80c288 <___vfiprintf_internal_r+0xf0>
  80c280:	00001606 	br	80c2dc <___vfiprintf_internal_r+0x144>
  80c284:	10c00326 	beq	r2,r3,80c294 <___vfiprintf_internal_r+0xfc>
  80c288:	94800044 	addi	r18,r18,1
  80c28c:	90800007 	ldb	r2,0(r18)
  80c290:	103ffc1e 	bne	r2,zero,80c284 <__alt_data_end+0xff80c284>
  80c294:	9423c83a 	sub	r17,r18,r16
  80c298:	88001026 	beq	r17,zero,80c2dc <___vfiprintf_internal_r+0x144>
  80c29c:	d8c01c17 	ldw	r3,112(sp)
  80c2a0:	d8801b17 	ldw	r2,108(sp)
  80c2a4:	44000015 	stw	r16,0(r8)
  80c2a8:	88c7883a 	add	r3,r17,r3
  80c2ac:	10800044 	addi	r2,r2,1
  80c2b0:	44400115 	stw	r17,4(r8)
  80c2b4:	d8c01c15 	stw	r3,112(sp)
  80c2b8:	d8801b15 	stw	r2,108(sp)
  80c2bc:	010001c4 	movi	r4,7
  80c2c0:	2080760e 	bge	r4,r2,80c49c <___vfiprintf_internal_r+0x304>
  80c2c4:	1803821e 	bne	r3,zero,80d0d0 <___vfiprintf_internal_r+0xf38>
  80c2c8:	da802317 	ldw	r10,140(sp)
  80c2cc:	d8001b15 	stw	zero,108(sp)
  80c2d0:	d811883a 	mov	r8,sp
  80c2d4:	5455883a 	add	r10,r10,r17
  80c2d8:	da802315 	stw	r10,140(sp)
  80c2dc:	90800007 	ldb	r2,0(r18)
  80c2e0:	10044626 	beq	r2,zero,80d3fc <___vfiprintf_internal_r+0x1264>
  80c2e4:	90c00047 	ldb	r3,1(r18)
  80c2e8:	94000044 	addi	r16,r18,1
  80c2ec:	d8001d85 	stb	zero,118(sp)
  80c2f0:	0009883a 	mov	r4,zero
  80c2f4:	000f883a 	mov	r7,zero
  80c2f8:	027fffc4 	movi	r9,-1
  80c2fc:	0023883a 	mov	r17,zero
  80c300:	0029883a 	mov	r20,zero
  80c304:	01401604 	movi	r5,88
  80c308:	01800244 	movi	r6,9
  80c30c:	03400a84 	movi	r13,42
  80c310:	03001b04 	movi	r12,108
  80c314:	84000044 	addi	r16,r16,1
  80c318:	18bff804 	addi	r2,r3,-32
  80c31c:	28827336 	bltu	r5,r2,80ccec <___vfiprintf_internal_r+0xb54>
  80c320:	100490ba 	slli	r2,r2,2
  80c324:	02802074 	movhi	r10,129
  80c328:	52b0ce04 	addi	r10,r10,-15560
  80c32c:	1285883a 	add	r2,r2,r10
  80c330:	10800017 	ldw	r2,0(r2)
  80c334:	1000683a 	jmp	r2
  80c338:	0080ca20 	cmpeqi	r2,zero,808
  80c33c:	0080ccec 	andhi	r2,zero,819
  80c340:	0080ccec 	andhi	r2,zero,819
  80c344:	0080ca40 	call	80ca4 <__alt_mem_sdram-0x77f35c>
  80c348:	0080ccec 	andhi	r2,zero,819
  80c34c:	0080ccec 	andhi	r2,zero,819
  80c350:	0080ccec 	andhi	r2,zero,819
  80c354:	0080ccec 	andhi	r2,zero,819
  80c358:	0080ccec 	andhi	r2,zero,819
  80c35c:	0080ccec 	andhi	r2,zero,819
  80c360:	0080cc28 	cmpgeui	r2,zero,816
  80c364:	0080cc44 	movi	r2,817
  80c368:	0080ccec 	andhi	r2,zero,819
  80c36c:	0080c52c 	andhi	r2,zero,788
  80c370:	0080cc54 	movui	r2,817
  80c374:	0080ccec 	andhi	r2,zero,819
  80c378:	0080ca4c 	andi	r2,zero,809
  80c37c:	0080ca58 	cmpnei	r2,zero,809
  80c380:	0080ca58 	cmpnei	r2,zero,809
  80c384:	0080ca58 	cmpnei	r2,zero,809
  80c388:	0080ca58 	cmpnei	r2,zero,809
  80c38c:	0080ca58 	cmpnei	r2,zero,809
  80c390:	0080ca58 	cmpnei	r2,zero,809
  80c394:	0080ca58 	cmpnei	r2,zero,809
  80c398:	0080ca58 	cmpnei	r2,zero,809
  80c39c:	0080ca58 	cmpnei	r2,zero,809
  80c3a0:	0080ccec 	andhi	r2,zero,819
  80c3a4:	0080ccec 	andhi	r2,zero,819
  80c3a8:	0080ccec 	andhi	r2,zero,819
  80c3ac:	0080ccec 	andhi	r2,zero,819
  80c3b0:	0080ccec 	andhi	r2,zero,819
  80c3b4:	0080ccec 	andhi	r2,zero,819
  80c3b8:	0080ccec 	andhi	r2,zero,819
  80c3bc:	0080ccec 	andhi	r2,zero,819
  80c3c0:	0080ccec 	andhi	r2,zero,819
  80c3c4:	0080ccec 	andhi	r2,zero,819
  80c3c8:	0080ca84 	movi	r2,810
  80c3cc:	0080ccec 	andhi	r2,zero,819
  80c3d0:	0080ccec 	andhi	r2,zero,819
  80c3d4:	0080ccec 	andhi	r2,zero,819
  80c3d8:	0080ccec 	andhi	r2,zero,819
  80c3dc:	0080ccec 	andhi	r2,zero,819
  80c3e0:	0080ccec 	andhi	r2,zero,819
  80c3e4:	0080ccec 	andhi	r2,zero,819
  80c3e8:	0080ccec 	andhi	r2,zero,819
  80c3ec:	0080ccec 	andhi	r2,zero,819
  80c3f0:	0080ccec 	andhi	r2,zero,819
  80c3f4:	0080cabc 	xorhi	r2,zero,810
  80c3f8:	0080ccec 	andhi	r2,zero,819
  80c3fc:	0080ccec 	andhi	r2,zero,819
  80c400:	0080ccec 	andhi	r2,zero,819
  80c404:	0080ccec 	andhi	r2,zero,819
  80c408:	0080ccec 	andhi	r2,zero,819
  80c40c:	0080cb14 	movui	r2,812
  80c410:	0080ccec 	andhi	r2,zero,819
  80c414:	0080ccec 	andhi	r2,zero,819
  80c418:	0080cb84 	movi	r2,814
  80c41c:	0080ccec 	andhi	r2,zero,819
  80c420:	0080ccec 	andhi	r2,zero,819
  80c424:	0080ccec 	andhi	r2,zero,819
  80c428:	0080ccec 	andhi	r2,zero,819
  80c42c:	0080ccec 	andhi	r2,zero,819
  80c430:	0080ccec 	andhi	r2,zero,819
  80c434:	0080ccec 	andhi	r2,zero,819
  80c438:	0080ccec 	andhi	r2,zero,819
  80c43c:	0080ccec 	andhi	r2,zero,819
  80c440:	0080ccec 	andhi	r2,zero,819
  80c444:	0080c930 	cmpltui	r2,zero,804
  80c448:	0080c95c 	xori	r2,zero,805
  80c44c:	0080ccec 	andhi	r2,zero,819
  80c450:	0080ccec 	andhi	r2,zero,819
  80c454:	0080ccec 	andhi	r2,zero,819
  80c458:	0080cc94 	movui	r2,818
  80c45c:	0080c95c 	xori	r2,zero,805
  80c460:	0080ccec 	andhi	r2,zero,819
  80c464:	0080ccec 	andhi	r2,zero,819
  80c468:	0080c7f0 	cmpltui	r2,zero,799
  80c46c:	0080ccec 	andhi	r2,zero,819
  80c470:	0080c800 	call	80c80 <__alt_mem_sdram-0x77f380>
  80c474:	0080c83c 	xorhi	r2,zero,800
  80c478:	0080c538 	rdprs	r2,zero,788
  80c47c:	0080c7e4 	muli	r2,zero,799
  80c480:	0080ccec 	andhi	r2,zero,819
  80c484:	0080cbc0 	call	80cbc <__alt_mem_sdram-0x77f344>
  80c488:	0080ccec 	andhi	r2,zero,819
  80c48c:	0080cc18 	cmpnei	r2,zero,816
  80c490:	0080ccec 	andhi	r2,zero,819
  80c494:	0080ccec 	andhi	r2,zero,819
  80c498:	0080c8dc 	xori	r2,zero,803
  80c49c:	42000204 	addi	r8,r8,8
  80c4a0:	da802317 	ldw	r10,140(sp)
  80c4a4:	5455883a 	add	r10,r10,r17
  80c4a8:	da802315 	stw	r10,140(sp)
  80c4ac:	003f8b06 	br	80c2dc <__alt_data_end+0xff80c2dc>
  80c4b0:	d9002017 	ldw	r4,128(sp)
  80c4b4:	a00b883a 	mov	r5,r20
  80c4b8:	0806e540 	call	806e54 <__swsetup_r>
  80c4bc:	1003b11e 	bne	r2,zero,80d384 <___vfiprintf_internal_r+0x11ec>
  80c4c0:	a080030b 	ldhu	r2,12(r20)
  80c4c4:	00c00284 	movi	r3,10
  80c4c8:	1080068c 	andi	r2,r2,26
  80c4cc:	10ff541e 	bne	r2,r3,80c220 <__alt_data_end+0xff80c220>
  80c4d0:	a080038f 	ldh	r2,14(r20)
  80c4d4:	103f5216 	blt	r2,zero,80c220 <__alt_data_end+0xff80c220>
  80c4d8:	d9c02217 	ldw	r7,136(sp)
  80c4dc:	d9002017 	ldw	r4,128(sp)
  80c4e0:	e00d883a 	mov	r6,fp
  80c4e4:	a00b883a 	mov	r5,r20
  80c4e8:	080d6100 	call	80d610 <__sbprintf>
  80c4ec:	dfc03617 	ldw	ra,216(sp)
  80c4f0:	df003517 	ldw	fp,212(sp)
  80c4f4:	ddc03417 	ldw	r23,208(sp)
  80c4f8:	dd803317 	ldw	r22,204(sp)
  80c4fc:	dd403217 	ldw	r21,200(sp)
  80c500:	dd003117 	ldw	r20,196(sp)
  80c504:	dcc03017 	ldw	r19,192(sp)
  80c508:	dc802f17 	ldw	r18,188(sp)
  80c50c:	dc402e17 	ldw	r17,184(sp)
  80c510:	dc002d17 	ldw	r16,180(sp)
  80c514:	dec03704 	addi	sp,sp,220
  80c518:	f800283a 	ret
  80c51c:	0808e280 	call	808e28 <__sinit>
  80c520:	003f2f06 	br	80c1e0 <__alt_data_end+0xff80c1e0>
  80c524:	0463c83a 	sub	r17,zero,r17
  80c528:	d8802215 	stw	r2,136(sp)
  80c52c:	a5000114 	ori	r20,r20,4
  80c530:	80c00007 	ldb	r3,0(r16)
  80c534:	003f7706 	br	80c314 <__alt_data_end+0xff80c314>
  80c538:	00800c04 	movi	r2,48
  80c53c:	da802217 	ldw	r10,136(sp)
  80c540:	d8801d05 	stb	r2,116(sp)
  80c544:	00801e04 	movi	r2,120
  80c548:	d8801d45 	stb	r2,117(sp)
  80c54c:	d8001d85 	stb	zero,118(sp)
  80c550:	50c00104 	addi	r3,r10,4
  80c554:	54800017 	ldw	r18,0(r10)
  80c558:	0027883a 	mov	r19,zero
  80c55c:	a0800094 	ori	r2,r20,2
  80c560:	48030b16 	blt	r9,zero,80d190 <___vfiprintf_internal_r+0xff8>
  80c564:	00bfdfc4 	movi	r2,-129
  80c568:	a096703a 	and	r11,r20,r2
  80c56c:	d8c02215 	stw	r3,136(sp)
  80c570:	5d000094 	ori	r20,r11,2
  80c574:	90032b1e 	bne	r18,zero,80d224 <___vfiprintf_internal_r+0x108c>
  80c578:	00802074 	movhi	r2,129
  80c57c:	10883204 	addi	r2,r2,8392
  80c580:	d8802615 	stw	r2,152(sp)
  80c584:	0039883a 	mov	fp,zero
  80c588:	48017b1e 	bne	r9,zero,80cb78 <___vfiprintf_internal_r+0x9e0>
  80c58c:	0013883a 	mov	r9,zero
  80c590:	0027883a 	mov	r19,zero
  80c594:	dd401a04 	addi	r21,sp,104
  80c598:	4825883a 	mov	r18,r9
  80c59c:	4cc0010e 	bge	r9,r19,80c5a4 <___vfiprintf_internal_r+0x40c>
  80c5a0:	9825883a 	mov	r18,r19
  80c5a4:	e7003fcc 	andi	fp,fp,255
  80c5a8:	e700201c 	xori	fp,fp,128
  80c5ac:	e73fe004 	addi	fp,fp,-128
  80c5b0:	e0000126 	beq	fp,zero,80c5b8 <___vfiprintf_internal_r+0x420>
  80c5b4:	94800044 	addi	r18,r18,1
  80c5b8:	a380008c 	andi	r14,r20,2
  80c5bc:	70000126 	beq	r14,zero,80c5c4 <___vfiprintf_internal_r+0x42c>
  80c5c0:	94800084 	addi	r18,r18,2
  80c5c4:	a700210c 	andi	fp,r20,132
  80c5c8:	e001df1e 	bne	fp,zero,80cd48 <___vfiprintf_internal_r+0xbb0>
  80c5cc:	8c87c83a 	sub	r3,r17,r18
  80c5d0:	00c1dd0e 	bge	zero,r3,80cd48 <___vfiprintf_internal_r+0xbb0>
  80c5d4:	01c00404 	movi	r7,16
  80c5d8:	d8801c17 	ldw	r2,112(sp)
  80c5dc:	38c3ad0e 	bge	r7,r3,80d494 <___vfiprintf_internal_r+0x12fc>
  80c5e0:	02802074 	movhi	r10,129
  80c5e4:	52889704 	addi	r10,r10,8796
  80c5e8:	dc002915 	stw	r16,164(sp)
  80c5ec:	d9801b17 	ldw	r6,108(sp)
  80c5f0:	da802415 	stw	r10,144(sp)
  80c5f4:	03c001c4 	movi	r15,7
  80c5f8:	da402515 	stw	r9,148(sp)
  80c5fc:	db802815 	stw	r14,160(sp)
  80c600:	1821883a 	mov	r16,r3
  80c604:	00000506 	br	80c61c <___vfiprintf_internal_r+0x484>
  80c608:	31400084 	addi	r5,r6,2
  80c60c:	42000204 	addi	r8,r8,8
  80c610:	200d883a 	mov	r6,r4
  80c614:	843ffc04 	addi	r16,r16,-16
  80c618:	3c000d0e 	bge	r7,r16,80c650 <___vfiprintf_internal_r+0x4b8>
  80c61c:	10800404 	addi	r2,r2,16
  80c620:	31000044 	addi	r4,r6,1
  80c624:	45800015 	stw	r22,0(r8)
  80c628:	41c00115 	stw	r7,4(r8)
  80c62c:	d8801c15 	stw	r2,112(sp)
  80c630:	d9001b15 	stw	r4,108(sp)
  80c634:	793ff40e 	bge	r15,r4,80c608 <__alt_data_end+0xff80c608>
  80c638:	1001b51e 	bne	r2,zero,80cd10 <___vfiprintf_internal_r+0xb78>
  80c63c:	843ffc04 	addi	r16,r16,-16
  80c640:	000d883a 	mov	r6,zero
  80c644:	01400044 	movi	r5,1
  80c648:	d811883a 	mov	r8,sp
  80c64c:	3c3ff316 	blt	r7,r16,80c61c <__alt_data_end+0xff80c61c>
  80c650:	8007883a 	mov	r3,r16
  80c654:	da402517 	ldw	r9,148(sp)
  80c658:	db802817 	ldw	r14,160(sp)
  80c65c:	dc002917 	ldw	r16,164(sp)
  80c660:	da802417 	ldw	r10,144(sp)
  80c664:	1885883a 	add	r2,r3,r2
  80c668:	40c00115 	stw	r3,4(r8)
  80c66c:	42800015 	stw	r10,0(r8)
  80c670:	d8801c15 	stw	r2,112(sp)
  80c674:	d9401b15 	stw	r5,108(sp)
  80c678:	00c001c4 	movi	r3,7
  80c67c:	19426016 	blt	r3,r5,80d000 <___vfiprintf_internal_r+0xe68>
  80c680:	d8c01d87 	ldb	r3,118(sp)
  80c684:	42000204 	addi	r8,r8,8
  80c688:	29000044 	addi	r4,r5,1
  80c68c:	1801b31e 	bne	r3,zero,80cd5c <___vfiprintf_internal_r+0xbc4>
  80c690:	7001c026 	beq	r14,zero,80cd94 <___vfiprintf_internal_r+0xbfc>
  80c694:	d8c01d04 	addi	r3,sp,116
  80c698:	10800084 	addi	r2,r2,2
  80c69c:	40c00015 	stw	r3,0(r8)
  80c6a0:	00c00084 	movi	r3,2
  80c6a4:	40c00115 	stw	r3,4(r8)
  80c6a8:	d8801c15 	stw	r2,112(sp)
  80c6ac:	d9001b15 	stw	r4,108(sp)
  80c6b0:	00c001c4 	movi	r3,7
  80c6b4:	1902650e 	bge	r3,r4,80d04c <___vfiprintf_internal_r+0xeb4>
  80c6b8:	10029a1e 	bne	r2,zero,80d124 <___vfiprintf_internal_r+0xf8c>
  80c6bc:	00c02004 	movi	r3,128
  80c6c0:	01000044 	movi	r4,1
  80c6c4:	000b883a 	mov	r5,zero
  80c6c8:	d811883a 	mov	r8,sp
  80c6cc:	e0c1b31e 	bne	fp,r3,80cd9c <___vfiprintf_internal_r+0xc04>
  80c6d0:	8cb9c83a 	sub	fp,r17,r18
  80c6d4:	0701b10e 	bge	zero,fp,80cd9c <___vfiprintf_internal_r+0xc04>
  80c6d8:	01c00404 	movi	r7,16
  80c6dc:	3f03890e 	bge	r7,fp,80d504 <___vfiprintf_internal_r+0x136c>
  80c6e0:	00c02074 	movhi	r3,129
  80c6e4:	18c89304 	addi	r3,r3,8780
  80c6e8:	d8c02415 	stw	r3,144(sp)
  80c6ec:	8007883a 	mov	r3,r16
  80c6f0:	034001c4 	movi	r13,7
  80c6f4:	e021883a 	mov	r16,fp
  80c6f8:	da402515 	stw	r9,148(sp)
  80c6fc:	1839883a 	mov	fp,r3
  80c700:	00000506 	br	80c718 <___vfiprintf_internal_r+0x580>
  80c704:	29800084 	addi	r6,r5,2
  80c708:	42000204 	addi	r8,r8,8
  80c70c:	180b883a 	mov	r5,r3
  80c710:	843ffc04 	addi	r16,r16,-16
  80c714:	3c000d0e 	bge	r7,r16,80c74c <___vfiprintf_internal_r+0x5b4>
  80c718:	10800404 	addi	r2,r2,16
  80c71c:	28c00044 	addi	r3,r5,1
  80c720:	45c00015 	stw	r23,0(r8)
  80c724:	41c00115 	stw	r7,4(r8)
  80c728:	d8801c15 	stw	r2,112(sp)
  80c72c:	d8c01b15 	stw	r3,108(sp)
  80c730:	68fff40e 	bge	r13,r3,80c704 <__alt_data_end+0xff80c704>
  80c734:	1002241e 	bne	r2,zero,80cfc8 <___vfiprintf_internal_r+0xe30>
  80c738:	843ffc04 	addi	r16,r16,-16
  80c73c:	01800044 	movi	r6,1
  80c740:	000b883a 	mov	r5,zero
  80c744:	d811883a 	mov	r8,sp
  80c748:	3c3ff316 	blt	r7,r16,80c718 <__alt_data_end+0xff80c718>
  80c74c:	da402517 	ldw	r9,148(sp)
  80c750:	e007883a 	mov	r3,fp
  80c754:	8039883a 	mov	fp,r16
  80c758:	1821883a 	mov	r16,r3
  80c75c:	d8c02417 	ldw	r3,144(sp)
  80c760:	1705883a 	add	r2,r2,fp
  80c764:	47000115 	stw	fp,4(r8)
  80c768:	40c00015 	stw	r3,0(r8)
  80c76c:	d8801c15 	stw	r2,112(sp)
  80c770:	d9801b15 	stw	r6,108(sp)
  80c774:	00c001c4 	movi	r3,7
  80c778:	19827616 	blt	r3,r6,80d154 <___vfiprintf_internal_r+0xfbc>
  80c77c:	4cf9c83a 	sub	fp,r9,r19
  80c780:	42000204 	addi	r8,r8,8
  80c784:	31000044 	addi	r4,r6,1
  80c788:	300b883a 	mov	r5,r6
  80c78c:	07018516 	blt	zero,fp,80cda4 <___vfiprintf_internal_r+0xc0c>
  80c790:	9885883a 	add	r2,r19,r2
  80c794:	45400015 	stw	r21,0(r8)
  80c798:	44c00115 	stw	r19,4(r8)
  80c79c:	d8801c15 	stw	r2,112(sp)
  80c7a0:	d9001b15 	stw	r4,108(sp)
  80c7a4:	00c001c4 	movi	r3,7
  80c7a8:	1901dd0e 	bge	r3,r4,80cf20 <___vfiprintf_internal_r+0xd88>
  80c7ac:	1002401e 	bne	r2,zero,80d0b0 <___vfiprintf_internal_r+0xf18>
  80c7b0:	d8001b15 	stw	zero,108(sp)
  80c7b4:	a2c0010c 	andi	r11,r20,4
  80c7b8:	58000226 	beq	r11,zero,80c7c4 <___vfiprintf_internal_r+0x62c>
  80c7bc:	8ca7c83a 	sub	r19,r17,r18
  80c7c0:	04c2f216 	blt	zero,r19,80d38c <___vfiprintf_internal_r+0x11f4>
  80c7c4:	8c80010e 	bge	r17,r18,80c7cc <___vfiprintf_internal_r+0x634>
  80c7c8:	9023883a 	mov	r17,r18
  80c7cc:	da802317 	ldw	r10,140(sp)
  80c7d0:	5455883a 	add	r10,r10,r17
  80c7d4:	da802315 	stw	r10,140(sp)
  80c7d8:	d8001b15 	stw	zero,108(sp)
  80c7dc:	d811883a 	mov	r8,sp
  80c7e0:	003ea206 	br	80c26c <__alt_data_end+0xff80c26c>
  80c7e4:	a5000814 	ori	r20,r20,32
  80c7e8:	80c00007 	ldb	r3,0(r16)
  80c7ec:	003ec906 	br	80c314 <__alt_data_end+0xff80c314>
  80c7f0:	80c00007 	ldb	r3,0(r16)
  80c7f4:	1b030926 	beq	r3,r12,80d41c <___vfiprintf_internal_r+0x1284>
  80c7f8:	a5000414 	ori	r20,r20,16
  80c7fc:	003ec506 	br	80c314 <__alt_data_end+0xff80c314>
  80c800:	21003fcc 	andi	r4,r4,255
  80c804:	20035e1e 	bne	r4,zero,80d580 <___vfiprintf_internal_r+0x13e8>
  80c808:	a080080c 	andi	r2,r20,32
  80c80c:	1002a526 	beq	r2,zero,80d2a4 <___vfiprintf_internal_r+0x110c>
  80c810:	da802217 	ldw	r10,136(sp)
  80c814:	50800017 	ldw	r2,0(r10)
  80c818:	da802317 	ldw	r10,140(sp)
  80c81c:	5007d7fa 	srai	r3,r10,31
  80c820:	da802217 	ldw	r10,136(sp)
  80c824:	10c00115 	stw	r3,4(r2)
  80c828:	52800104 	addi	r10,r10,4
  80c82c:	da802215 	stw	r10,136(sp)
  80c830:	da802317 	ldw	r10,140(sp)
  80c834:	12800015 	stw	r10,0(r2)
  80c838:	003e8c06 	br	80c26c <__alt_data_end+0xff80c26c>
  80c83c:	21003fcc 	andi	r4,r4,255
  80c840:	2003511e 	bne	r4,zero,80d588 <___vfiprintf_internal_r+0x13f0>
  80c844:	a080080c 	andi	r2,r20,32
  80c848:	1000a126 	beq	r2,zero,80cad0 <___vfiprintf_internal_r+0x938>
  80c84c:	da802217 	ldw	r10,136(sp)
  80c850:	d8001d85 	stb	zero,118(sp)
  80c854:	50800204 	addi	r2,r10,8
  80c858:	54800017 	ldw	r18,0(r10)
  80c85c:	54c00117 	ldw	r19,4(r10)
  80c860:	4802b416 	blt	r9,zero,80d334 <___vfiprintf_internal_r+0x119c>
  80c864:	013fdfc4 	movi	r4,-129
  80c868:	94c6b03a 	or	r3,r18,r19
  80c86c:	d8802215 	stw	r2,136(sp)
  80c870:	a128703a 	and	r20,r20,r4
  80c874:	1800a226 	beq	r3,zero,80cb00 <___vfiprintf_internal_r+0x968>
  80c878:	0039883a 	mov	fp,zero
  80c87c:	dd401a04 	addi	r21,sp,104
  80c880:	9006d0fa 	srli	r3,r18,3
  80c884:	9808977a 	slli	r4,r19,29
  80c888:	9826d0fa 	srli	r19,r19,3
  80c88c:	948001cc 	andi	r18,r18,7
  80c890:	90800c04 	addi	r2,r18,48
  80c894:	ad7fffc4 	addi	r21,r21,-1
  80c898:	20e4b03a 	or	r18,r4,r3
  80c89c:	a8800005 	stb	r2,0(r21)
  80c8a0:	94c6b03a 	or	r3,r18,r19
  80c8a4:	183ff61e 	bne	r3,zero,80c880 <__alt_data_end+0xff80c880>
  80c8a8:	a0c0004c 	andi	r3,r20,1
  80c8ac:	18005926 	beq	r3,zero,80ca14 <___vfiprintf_internal_r+0x87c>
  80c8b0:	10803fcc 	andi	r2,r2,255
  80c8b4:	1080201c 	xori	r2,r2,128
  80c8b8:	10bfe004 	addi	r2,r2,-128
  80c8bc:	00c00c04 	movi	r3,48
  80c8c0:	10c05426 	beq	r2,r3,80ca14 <___vfiprintf_internal_r+0x87c>
  80c8c4:	da801e17 	ldw	r10,120(sp)
  80c8c8:	a8bfffc4 	addi	r2,r21,-1
  80c8cc:	a8ffffc5 	stb	r3,-1(r21)
  80c8d0:	50a7c83a 	sub	r19,r10,r2
  80c8d4:	102b883a 	mov	r21,r2
  80c8d8:	003f2f06 	br	80c598 <__alt_data_end+0xff80c598>
  80c8dc:	21003fcc 	andi	r4,r4,255
  80c8e0:	2003421e 	bne	r4,zero,80d5ec <___vfiprintf_internal_r+0x1454>
  80c8e4:	00802074 	movhi	r2,129
  80c8e8:	10883204 	addi	r2,r2,8392
  80c8ec:	d8802615 	stw	r2,152(sp)
  80c8f0:	a080080c 	andi	r2,r20,32
  80c8f4:	1000aa26 	beq	r2,zero,80cba0 <___vfiprintf_internal_r+0xa08>
  80c8f8:	da802217 	ldw	r10,136(sp)
  80c8fc:	54800017 	ldw	r18,0(r10)
  80c900:	54c00117 	ldw	r19,4(r10)
  80c904:	52800204 	addi	r10,r10,8
  80c908:	da802215 	stw	r10,136(sp)
  80c90c:	a080004c 	andi	r2,r20,1
  80c910:	1001d226 	beq	r2,zero,80d05c <___vfiprintf_internal_r+0xec4>
  80c914:	94c4b03a 	or	r2,r18,r19
  80c918:	1002351e 	bne	r2,zero,80d1f0 <___vfiprintf_internal_r+0x1058>
  80c91c:	d8001d85 	stb	zero,118(sp)
  80c920:	48022216 	blt	r9,zero,80d1ac <___vfiprintf_internal_r+0x1014>
  80c924:	00bfdfc4 	movi	r2,-129
  80c928:	a0a8703a 	and	r20,r20,r2
  80c92c:	003f1506 	br	80c584 <__alt_data_end+0xff80c584>
  80c930:	da802217 	ldw	r10,136(sp)
  80c934:	04800044 	movi	r18,1
  80c938:	d8001d85 	stb	zero,118(sp)
  80c93c:	50800017 	ldw	r2,0(r10)
  80c940:	52800104 	addi	r10,r10,4
  80c944:	da802215 	stw	r10,136(sp)
  80c948:	d8801005 	stb	r2,64(sp)
  80c94c:	9027883a 	mov	r19,r18
  80c950:	dd401004 	addi	r21,sp,64
  80c954:	0013883a 	mov	r9,zero
  80c958:	003f1706 	br	80c5b8 <__alt_data_end+0xff80c5b8>
  80c95c:	21003fcc 	andi	r4,r4,255
  80c960:	2003201e 	bne	r4,zero,80d5e4 <___vfiprintf_internal_r+0x144c>
  80c964:	a080080c 	andi	r2,r20,32
  80c968:	10004b26 	beq	r2,zero,80ca98 <___vfiprintf_internal_r+0x900>
  80c96c:	da802217 	ldw	r10,136(sp)
  80c970:	50800117 	ldw	r2,4(r10)
  80c974:	54800017 	ldw	r18,0(r10)
  80c978:	52800204 	addi	r10,r10,8
  80c97c:	da802215 	stw	r10,136(sp)
  80c980:	1027883a 	mov	r19,r2
  80c984:	10022c16 	blt	r2,zero,80d238 <___vfiprintf_internal_r+0x10a0>
  80c988:	df001d83 	ldbu	fp,118(sp)
  80c98c:	48007216 	blt	r9,zero,80cb58 <___vfiprintf_internal_r+0x9c0>
  80c990:	00ffdfc4 	movi	r3,-129
  80c994:	94c4b03a 	or	r2,r18,r19
  80c998:	a0e8703a 	and	r20,r20,r3
  80c99c:	1000cc26 	beq	r2,zero,80ccd0 <___vfiprintf_internal_r+0xb38>
  80c9a0:	98021026 	beq	r19,zero,80d1e4 <___vfiprintf_internal_r+0x104c>
  80c9a4:	dc402415 	stw	r17,144(sp)
  80c9a8:	dc002515 	stw	r16,148(sp)
  80c9ac:	9823883a 	mov	r17,r19
  80c9b0:	9021883a 	mov	r16,r18
  80c9b4:	dd401a04 	addi	r21,sp,104
  80c9b8:	4825883a 	mov	r18,r9
  80c9bc:	4027883a 	mov	r19,r8
  80c9c0:	8009883a 	mov	r4,r16
  80c9c4:	880b883a 	mov	r5,r17
  80c9c8:	01800284 	movi	r6,10
  80c9cc:	000f883a 	mov	r7,zero
  80c9d0:	080e5780 	call	80e578 <__umoddi3>
  80c9d4:	10800c04 	addi	r2,r2,48
  80c9d8:	ad7fffc4 	addi	r21,r21,-1
  80c9dc:	8009883a 	mov	r4,r16
  80c9e0:	880b883a 	mov	r5,r17
  80c9e4:	a8800005 	stb	r2,0(r21)
  80c9e8:	01800284 	movi	r6,10
  80c9ec:	000f883a 	mov	r7,zero
  80c9f0:	080e0000 	call	80e000 <__udivdi3>
  80c9f4:	1021883a 	mov	r16,r2
  80c9f8:	10c4b03a 	or	r2,r2,r3
  80c9fc:	1823883a 	mov	r17,r3
  80ca00:	103fef1e 	bne	r2,zero,80c9c0 <__alt_data_end+0xff80c9c0>
  80ca04:	dc402417 	ldw	r17,144(sp)
  80ca08:	dc002517 	ldw	r16,148(sp)
  80ca0c:	9013883a 	mov	r9,r18
  80ca10:	9811883a 	mov	r8,r19
  80ca14:	da801e17 	ldw	r10,120(sp)
  80ca18:	5567c83a 	sub	r19,r10,r21
  80ca1c:	003ede06 	br	80c598 <__alt_data_end+0xff80c598>
  80ca20:	38803fcc 	andi	r2,r7,255
  80ca24:	1080201c 	xori	r2,r2,128
  80ca28:	10bfe004 	addi	r2,r2,-128
  80ca2c:	1002371e 	bne	r2,zero,80d30c <___vfiprintf_internal_r+0x1174>
  80ca30:	01000044 	movi	r4,1
  80ca34:	01c00804 	movi	r7,32
  80ca38:	80c00007 	ldb	r3,0(r16)
  80ca3c:	003e3506 	br	80c314 <__alt_data_end+0xff80c314>
  80ca40:	a5000054 	ori	r20,r20,1
  80ca44:	80c00007 	ldb	r3,0(r16)
  80ca48:	003e3206 	br	80c314 <__alt_data_end+0xff80c314>
  80ca4c:	a5002014 	ori	r20,r20,128
  80ca50:	80c00007 	ldb	r3,0(r16)
  80ca54:	003e2f06 	br	80c314 <__alt_data_end+0xff80c314>
  80ca58:	8015883a 	mov	r10,r16
  80ca5c:	0023883a 	mov	r17,zero
  80ca60:	18bff404 	addi	r2,r3,-48
  80ca64:	50c00007 	ldb	r3,0(r10)
  80ca68:	8c4002a4 	muli	r17,r17,10
  80ca6c:	84000044 	addi	r16,r16,1
  80ca70:	8015883a 	mov	r10,r16
  80ca74:	1463883a 	add	r17,r2,r17
  80ca78:	18bff404 	addi	r2,r3,-48
  80ca7c:	30bff92e 	bgeu	r6,r2,80ca64 <__alt_data_end+0xff80ca64>
  80ca80:	003e2506 	br	80c318 <__alt_data_end+0xff80c318>
  80ca84:	21003fcc 	andi	r4,r4,255
  80ca88:	2002d41e 	bne	r4,zero,80d5dc <___vfiprintf_internal_r+0x1444>
  80ca8c:	a5000414 	ori	r20,r20,16
  80ca90:	a080080c 	andi	r2,r20,32
  80ca94:	103fb51e 	bne	r2,zero,80c96c <__alt_data_end+0xff80c96c>
  80ca98:	a080040c 	andi	r2,r20,16
  80ca9c:	1001f826 	beq	r2,zero,80d280 <___vfiprintf_internal_r+0x10e8>
  80caa0:	da802217 	ldw	r10,136(sp)
  80caa4:	54800017 	ldw	r18,0(r10)
  80caa8:	52800104 	addi	r10,r10,4
  80caac:	da802215 	stw	r10,136(sp)
  80cab0:	9027d7fa 	srai	r19,r18,31
  80cab4:	9805883a 	mov	r2,r19
  80cab8:	003fb206 	br	80c984 <__alt_data_end+0xff80c984>
  80cabc:	21003fcc 	andi	r4,r4,255
  80cac0:	2002c41e 	bne	r4,zero,80d5d4 <___vfiprintf_internal_r+0x143c>
  80cac4:	a5000414 	ori	r20,r20,16
  80cac8:	a080080c 	andi	r2,r20,32
  80cacc:	103f5f1e 	bne	r2,zero,80c84c <__alt_data_end+0xff80c84c>
  80cad0:	a080040c 	andi	r2,r20,16
  80cad4:	10020f26 	beq	r2,zero,80d314 <___vfiprintf_internal_r+0x117c>
  80cad8:	da802217 	ldw	r10,136(sp)
  80cadc:	d8001d85 	stb	zero,118(sp)
  80cae0:	0027883a 	mov	r19,zero
  80cae4:	50800104 	addi	r2,r10,4
  80cae8:	54800017 	ldw	r18,0(r10)
  80caec:	48021116 	blt	r9,zero,80d334 <___vfiprintf_internal_r+0x119c>
  80caf0:	00ffdfc4 	movi	r3,-129
  80caf4:	d8802215 	stw	r2,136(sp)
  80caf8:	a0e8703a 	and	r20,r20,r3
  80cafc:	903f5e1e 	bne	r18,zero,80c878 <__alt_data_end+0xff80c878>
  80cb00:	0039883a 	mov	fp,zero
  80cb04:	4802a626 	beq	r9,zero,80d5a0 <___vfiprintf_internal_r+0x1408>
  80cb08:	0025883a 	mov	r18,zero
  80cb0c:	0027883a 	mov	r19,zero
  80cb10:	003f5a06 	br	80c87c <__alt_data_end+0xff80c87c>
  80cb14:	21003fcc 	andi	r4,r4,255
  80cb18:	20029f1e 	bne	r4,zero,80d598 <___vfiprintf_internal_r+0x1400>
  80cb1c:	a5000414 	ori	r20,r20,16
  80cb20:	a080080c 	andi	r2,r20,32
  80cb24:	10005e1e 	bne	r2,zero,80cca0 <___vfiprintf_internal_r+0xb08>
  80cb28:	a080040c 	andi	r2,r20,16
  80cb2c:	1001a21e 	bne	r2,zero,80d1b8 <___vfiprintf_internal_r+0x1020>
  80cb30:	a080100c 	andi	r2,r20,64
  80cb34:	d8001d85 	stb	zero,118(sp)
  80cb38:	da802217 	ldw	r10,136(sp)
  80cb3c:	1002231e 	bne	r2,zero,80d3cc <___vfiprintf_internal_r+0x1234>
  80cb40:	50800104 	addi	r2,r10,4
  80cb44:	54800017 	ldw	r18,0(r10)
  80cb48:	0027883a 	mov	r19,zero
  80cb4c:	4801a00e 	bge	r9,zero,80d1d0 <___vfiprintf_internal_r+0x1038>
  80cb50:	d8802215 	stw	r2,136(sp)
  80cb54:	0039883a 	mov	fp,zero
  80cb58:	94c4b03a 	or	r2,r18,r19
  80cb5c:	103f901e 	bne	r2,zero,80c9a0 <__alt_data_end+0xff80c9a0>
  80cb60:	00800044 	movi	r2,1
  80cb64:	10803fcc 	andi	r2,r2,255
  80cb68:	00c00044 	movi	r3,1
  80cb6c:	10c05926 	beq	r2,r3,80ccd4 <___vfiprintf_internal_r+0xb3c>
  80cb70:	00c00084 	movi	r3,2
  80cb74:	10ffe41e 	bne	r2,r3,80cb08 <__alt_data_end+0xff80cb08>
  80cb78:	0025883a 	mov	r18,zero
  80cb7c:	0027883a 	mov	r19,zero
  80cb80:	00013d06 	br	80d078 <___vfiprintf_internal_r+0xee0>
  80cb84:	21003fcc 	andi	r4,r4,255
  80cb88:	2002811e 	bne	r4,zero,80d590 <___vfiprintf_internal_r+0x13f8>
  80cb8c:	00802074 	movhi	r2,129
  80cb90:	10882d04 	addi	r2,r2,8372
  80cb94:	d8802615 	stw	r2,152(sp)
  80cb98:	a080080c 	andi	r2,r20,32
  80cb9c:	103f561e 	bne	r2,zero,80c8f8 <__alt_data_end+0xff80c8f8>
  80cba0:	a080040c 	andi	r2,r20,16
  80cba4:	1001d126 	beq	r2,zero,80d2ec <___vfiprintf_internal_r+0x1154>
  80cba8:	da802217 	ldw	r10,136(sp)
  80cbac:	0027883a 	mov	r19,zero
  80cbb0:	54800017 	ldw	r18,0(r10)
  80cbb4:	52800104 	addi	r10,r10,4
  80cbb8:	da802215 	stw	r10,136(sp)
  80cbbc:	003f5306 	br	80c90c <__alt_data_end+0xff80c90c>
  80cbc0:	da802217 	ldw	r10,136(sp)
  80cbc4:	d8001d85 	stb	zero,118(sp)
  80cbc8:	55400017 	ldw	r21,0(r10)
  80cbcc:	50c00104 	addi	r3,r10,4
  80cbd0:	a8024226 	beq	r21,zero,80d4dc <___vfiprintf_internal_r+0x1344>
  80cbd4:	48021816 	blt	r9,zero,80d438 <___vfiprintf_internal_r+0x12a0>
  80cbd8:	480d883a 	mov	r6,r9
  80cbdc:	000b883a 	mov	r5,zero
  80cbe0:	a809883a 	mov	r4,r21
  80cbe4:	d8c02a15 	stw	r3,168(sp)
  80cbe8:	da002b15 	stw	r8,172(sp)
  80cbec:	da402c15 	stw	r9,176(sp)
  80cbf0:	080a3940 	call	80a394 <memchr>
  80cbf4:	d8c02a17 	ldw	r3,168(sp)
  80cbf8:	da002b17 	ldw	r8,172(sp)
  80cbfc:	da402c17 	ldw	r9,176(sp)
  80cc00:	10024826 	beq	r2,zero,80d524 <___vfiprintf_internal_r+0x138c>
  80cc04:	1567c83a 	sub	r19,r2,r21
  80cc08:	df001d83 	ldbu	fp,118(sp)
  80cc0c:	d8c02215 	stw	r3,136(sp)
  80cc10:	0013883a 	mov	r9,zero
  80cc14:	003e6006 	br	80c598 <__alt_data_end+0xff80c598>
  80cc18:	21003fcc 	andi	r4,r4,255
  80cc1c:	203fc026 	beq	r4,zero,80cb20 <__alt_data_end+0xff80cb20>
  80cc20:	d9c01d85 	stb	r7,118(sp)
  80cc24:	003fbe06 	br	80cb20 <__alt_data_end+0xff80cb20>
  80cc28:	da802217 	ldw	r10,136(sp)
  80cc2c:	54400017 	ldw	r17,0(r10)
  80cc30:	50800104 	addi	r2,r10,4
  80cc34:	883e3b16 	blt	r17,zero,80c524 <__alt_data_end+0xff80c524>
  80cc38:	d8802215 	stw	r2,136(sp)
  80cc3c:	80c00007 	ldb	r3,0(r16)
  80cc40:	003db406 	br	80c314 <__alt_data_end+0xff80c314>
  80cc44:	01000044 	movi	r4,1
  80cc48:	01c00ac4 	movi	r7,43
  80cc4c:	80c00007 	ldb	r3,0(r16)
  80cc50:	003db006 	br	80c314 <__alt_data_end+0xff80c314>
  80cc54:	80c00007 	ldb	r3,0(r16)
  80cc58:	82800044 	addi	r10,r16,1
  80cc5c:	1b423c26 	beq	r3,r13,80d550 <___vfiprintf_internal_r+0x13b8>
  80cc60:	18bff404 	addi	r2,r3,-48
  80cc64:	0013883a 	mov	r9,zero
  80cc68:	30822b36 	bltu	r6,r2,80d518 <___vfiprintf_internal_r+0x1380>
  80cc6c:	50c00007 	ldb	r3,0(r10)
  80cc70:	4a4002a4 	muli	r9,r9,10
  80cc74:	54000044 	addi	r16,r10,1
  80cc78:	8015883a 	mov	r10,r16
  80cc7c:	4893883a 	add	r9,r9,r2
  80cc80:	18bff404 	addi	r2,r3,-48
  80cc84:	30bff92e 	bgeu	r6,r2,80cc6c <__alt_data_end+0xff80cc6c>
  80cc88:	483da30e 	bge	r9,zero,80c318 <__alt_data_end+0xff80c318>
  80cc8c:	027fffc4 	movi	r9,-1
  80cc90:	003da106 	br	80c318 <__alt_data_end+0xff80c318>
  80cc94:	a5001014 	ori	r20,r20,64
  80cc98:	80c00007 	ldb	r3,0(r16)
  80cc9c:	003d9d06 	br	80c314 <__alt_data_end+0xff80c314>
  80cca0:	da802217 	ldw	r10,136(sp)
  80cca4:	d8001d85 	stb	zero,118(sp)
  80cca8:	50c00204 	addi	r3,r10,8
  80ccac:	54800017 	ldw	r18,0(r10)
  80ccb0:	54c00117 	ldw	r19,4(r10)
  80ccb4:	4801ca16 	blt	r9,zero,80d3e0 <___vfiprintf_internal_r+0x1248>
  80ccb8:	013fdfc4 	movi	r4,-129
  80ccbc:	94c4b03a 	or	r2,r18,r19
  80ccc0:	d8c02215 	stw	r3,136(sp)
  80ccc4:	a128703a 	and	r20,r20,r4
  80ccc8:	0039883a 	mov	fp,zero
  80cccc:	103f341e 	bne	r2,zero,80c9a0 <__alt_data_end+0xff80c9a0>
  80ccd0:	483e2e26 	beq	r9,zero,80c58c <__alt_data_end+0xff80c58c>
  80ccd4:	0025883a 	mov	r18,zero
  80ccd8:	94800c04 	addi	r18,r18,48
  80ccdc:	dc8019c5 	stb	r18,103(sp)
  80cce0:	dcc02717 	ldw	r19,156(sp)
  80cce4:	dd4019c4 	addi	r21,sp,103
  80cce8:	003e2b06 	br	80c598 <__alt_data_end+0xff80c598>
  80ccec:	21003fcc 	andi	r4,r4,255
  80ccf0:	2002361e 	bne	r4,zero,80d5cc <___vfiprintf_internal_r+0x1434>
  80ccf4:	1801c126 	beq	r3,zero,80d3fc <___vfiprintf_internal_r+0x1264>
  80ccf8:	04800044 	movi	r18,1
  80ccfc:	d8c01005 	stb	r3,64(sp)
  80cd00:	d8001d85 	stb	zero,118(sp)
  80cd04:	9027883a 	mov	r19,r18
  80cd08:	dd401004 	addi	r21,sp,64
  80cd0c:	003f1106 	br	80c954 <__alt_data_end+0xff80c954>
  80cd10:	d9402117 	ldw	r5,132(sp)
  80cd14:	d9002017 	ldw	r4,128(sp)
  80cd18:	d9801a04 	addi	r6,sp,104
  80cd1c:	d9c02b15 	stw	r7,172(sp)
  80cd20:	dbc02a15 	stw	r15,168(sp)
  80cd24:	080c0840 	call	80c084 <__sprint_r.part.0>
  80cd28:	d9c02b17 	ldw	r7,172(sp)
  80cd2c:	dbc02a17 	ldw	r15,168(sp)
  80cd30:	10006d1e 	bne	r2,zero,80cee8 <___vfiprintf_internal_r+0xd50>
  80cd34:	d9801b17 	ldw	r6,108(sp)
  80cd38:	d8801c17 	ldw	r2,112(sp)
  80cd3c:	d811883a 	mov	r8,sp
  80cd40:	31400044 	addi	r5,r6,1
  80cd44:	003e3306 	br	80c614 <__alt_data_end+0xff80c614>
  80cd48:	d9401b17 	ldw	r5,108(sp)
  80cd4c:	d8801c17 	ldw	r2,112(sp)
  80cd50:	29000044 	addi	r4,r5,1
  80cd54:	d8c01d87 	ldb	r3,118(sp)
  80cd58:	183e4d26 	beq	r3,zero,80c690 <__alt_data_end+0xff80c690>
  80cd5c:	00c00044 	movi	r3,1
  80cd60:	d9401d84 	addi	r5,sp,118
  80cd64:	10c5883a 	add	r2,r2,r3
  80cd68:	41400015 	stw	r5,0(r8)
  80cd6c:	40c00115 	stw	r3,4(r8)
  80cd70:	d8801c15 	stw	r2,112(sp)
  80cd74:	d9001b15 	stw	r4,108(sp)
  80cd78:	014001c4 	movi	r5,7
  80cd7c:	2900a90e 	bge	r5,r4,80d024 <___vfiprintf_internal_r+0xe8c>
  80cd80:	1000da1e 	bne	r2,zero,80d0ec <___vfiprintf_internal_r+0xf54>
  80cd84:	7000ab1e 	bne	r14,zero,80d034 <___vfiprintf_internal_r+0xe9c>
  80cd88:	000b883a 	mov	r5,zero
  80cd8c:	1809883a 	mov	r4,r3
  80cd90:	d811883a 	mov	r8,sp
  80cd94:	00c02004 	movi	r3,128
  80cd98:	e0fe4d26 	beq	fp,r3,80c6d0 <__alt_data_end+0xff80c6d0>
  80cd9c:	4cf9c83a 	sub	fp,r9,r19
  80cda0:	073e7b0e 	bge	zero,fp,80c790 <__alt_data_end+0xff80c790>
  80cda4:	01c00404 	movi	r7,16
  80cda8:	3f01900e 	bge	r7,fp,80d3ec <___vfiprintf_internal_r+0x1254>
  80cdac:	00c02074 	movhi	r3,129
  80cdb0:	18c89304 	addi	r3,r3,8780
  80cdb4:	d8c02415 	stw	r3,144(sp)
  80cdb8:	034001c4 	movi	r13,7
  80cdbc:	00000506 	br	80cdd4 <___vfiprintf_internal_r+0xc3c>
  80cdc0:	29000084 	addi	r4,r5,2
  80cdc4:	42000204 	addi	r8,r8,8
  80cdc8:	180b883a 	mov	r5,r3
  80cdcc:	e73ffc04 	addi	fp,fp,-16
  80cdd0:	3f000d0e 	bge	r7,fp,80ce08 <___vfiprintf_internal_r+0xc70>
  80cdd4:	10800404 	addi	r2,r2,16
  80cdd8:	28c00044 	addi	r3,r5,1
  80cddc:	45c00015 	stw	r23,0(r8)
  80cde0:	41c00115 	stw	r7,4(r8)
  80cde4:	d8801c15 	stw	r2,112(sp)
  80cde8:	d8c01b15 	stw	r3,108(sp)
  80cdec:	68fff40e 	bge	r13,r3,80cdc0 <__alt_data_end+0xff80cdc0>
  80cdf0:	1000101e 	bne	r2,zero,80ce34 <___vfiprintf_internal_r+0xc9c>
  80cdf4:	e73ffc04 	addi	fp,fp,-16
  80cdf8:	01000044 	movi	r4,1
  80cdfc:	000b883a 	mov	r5,zero
  80ce00:	d811883a 	mov	r8,sp
  80ce04:	3f3ff316 	blt	r7,fp,80cdd4 <__alt_data_end+0xff80cdd4>
  80ce08:	da802417 	ldw	r10,144(sp)
  80ce0c:	1705883a 	add	r2,r2,fp
  80ce10:	47000115 	stw	fp,4(r8)
  80ce14:	42800015 	stw	r10,0(r8)
  80ce18:	d8801c15 	stw	r2,112(sp)
  80ce1c:	d9001b15 	stw	r4,108(sp)
  80ce20:	00c001c4 	movi	r3,7
  80ce24:	19003616 	blt	r3,r4,80cf00 <___vfiprintf_internal_r+0xd68>
  80ce28:	42000204 	addi	r8,r8,8
  80ce2c:	21000044 	addi	r4,r4,1
  80ce30:	003e5706 	br	80c790 <__alt_data_end+0xff80c790>
  80ce34:	d9402117 	ldw	r5,132(sp)
  80ce38:	d9002017 	ldw	r4,128(sp)
  80ce3c:	d9801a04 	addi	r6,sp,104
  80ce40:	d9c02b15 	stw	r7,172(sp)
  80ce44:	db402a15 	stw	r13,168(sp)
  80ce48:	080c0840 	call	80c084 <__sprint_r.part.0>
  80ce4c:	d9c02b17 	ldw	r7,172(sp)
  80ce50:	db402a17 	ldw	r13,168(sp)
  80ce54:	1000241e 	bne	r2,zero,80cee8 <___vfiprintf_internal_r+0xd50>
  80ce58:	d9401b17 	ldw	r5,108(sp)
  80ce5c:	d8801c17 	ldw	r2,112(sp)
  80ce60:	d811883a 	mov	r8,sp
  80ce64:	29000044 	addi	r4,r5,1
  80ce68:	003fd806 	br	80cdcc <__alt_data_end+0xff80cdcc>
  80ce6c:	d9401b17 	ldw	r5,108(sp)
  80ce70:	00c02074 	movhi	r3,129
  80ce74:	18c89704 	addi	r3,r3,8796
  80ce78:	d8c02415 	stw	r3,144(sp)
  80ce7c:	29400044 	addi	r5,r5,1
  80ce80:	d8c02417 	ldw	r3,144(sp)
  80ce84:	14c5883a 	add	r2,r2,r19
  80ce88:	44c00115 	stw	r19,4(r8)
  80ce8c:	40c00015 	stw	r3,0(r8)
  80ce90:	d8801c15 	stw	r2,112(sp)
  80ce94:	d9401b15 	stw	r5,108(sp)
  80ce98:	00c001c4 	movi	r3,7
  80ce9c:	1940070e 	bge	r3,r5,80cebc <___vfiprintf_internal_r+0xd24>
  80cea0:	103e4826 	beq	r2,zero,80c7c4 <__alt_data_end+0xff80c7c4>
  80cea4:	d9402117 	ldw	r5,132(sp)
  80cea8:	d9002017 	ldw	r4,128(sp)
  80ceac:	d9801a04 	addi	r6,sp,104
  80ceb0:	080c0840 	call	80c084 <__sprint_r.part.0>
  80ceb4:	10000c1e 	bne	r2,zero,80cee8 <___vfiprintf_internal_r+0xd50>
  80ceb8:	d8801c17 	ldw	r2,112(sp)
  80cebc:	8c80010e 	bge	r17,r18,80cec4 <___vfiprintf_internal_r+0xd2c>
  80cec0:	9023883a 	mov	r17,r18
  80cec4:	da802317 	ldw	r10,140(sp)
  80cec8:	5455883a 	add	r10,r10,r17
  80cecc:	da802315 	stw	r10,140(sp)
  80ced0:	103e4126 	beq	r2,zero,80c7d8 <__alt_data_end+0xff80c7d8>
  80ced4:	d9402117 	ldw	r5,132(sp)
  80ced8:	d9002017 	ldw	r4,128(sp)
  80cedc:	d9801a04 	addi	r6,sp,104
  80cee0:	080c0840 	call	80c084 <__sprint_r.part.0>
  80cee4:	103e3c26 	beq	r2,zero,80c7d8 <__alt_data_end+0xff80c7d8>
  80cee8:	dd002117 	ldw	r20,132(sp)
  80ceec:	a080030b 	ldhu	r2,12(r20)
  80cef0:	1080100c 	andi	r2,r2,64
  80cef4:	1001231e 	bne	r2,zero,80d384 <___vfiprintf_internal_r+0x11ec>
  80cef8:	d8802317 	ldw	r2,140(sp)
  80cefc:	003d7b06 	br	80c4ec <__alt_data_end+0xff80c4ec>
  80cf00:	1000991e 	bne	r2,zero,80d168 <___vfiprintf_internal_r+0xfd0>
  80cf04:	00c00044 	movi	r3,1
  80cf08:	9805883a 	mov	r2,r19
  80cf0c:	dd400015 	stw	r21,0(sp)
  80cf10:	dcc00115 	stw	r19,4(sp)
  80cf14:	dcc01c15 	stw	r19,112(sp)
  80cf18:	d8c01b15 	stw	r3,108(sp)
  80cf1c:	d811883a 	mov	r8,sp
  80cf20:	42000204 	addi	r8,r8,8
  80cf24:	a2c0010c 	andi	r11,r20,4
  80cf28:	583fe426 	beq	r11,zero,80cebc <__alt_data_end+0xff80cebc>
  80cf2c:	8ca7c83a 	sub	r19,r17,r18
  80cf30:	04ffe20e 	bge	zero,r19,80cebc <__alt_data_end+0xff80cebc>
  80cf34:	01c00404 	movi	r7,16
  80cf38:	3cffcc0e 	bge	r7,r19,80ce6c <__alt_data_end+0xff80ce6c>
  80cf3c:	02802074 	movhi	r10,129
  80cf40:	52889704 	addi	r10,r10,8796
  80cf44:	d9001b17 	ldw	r4,108(sp)
  80cf48:	da802415 	stw	r10,144(sp)
  80cf4c:	382b883a 	mov	r21,r7
  80cf50:	050001c4 	movi	r20,7
  80cf54:	df002017 	ldw	fp,128(sp)
  80cf58:	00000506 	br	80cf70 <___vfiprintf_internal_r+0xdd8>
  80cf5c:	21400084 	addi	r5,r4,2
  80cf60:	42000204 	addi	r8,r8,8
  80cf64:	1809883a 	mov	r4,r3
  80cf68:	9cfffc04 	addi	r19,r19,-16
  80cf6c:	acffc40e 	bge	r21,r19,80ce80 <__alt_data_end+0xff80ce80>
  80cf70:	10800404 	addi	r2,r2,16
  80cf74:	20c00044 	addi	r3,r4,1
  80cf78:	45800015 	stw	r22,0(r8)
  80cf7c:	45400115 	stw	r21,4(r8)
  80cf80:	d8801c15 	stw	r2,112(sp)
  80cf84:	d8c01b15 	stw	r3,108(sp)
  80cf88:	a0fff40e 	bge	r20,r3,80cf5c <__alt_data_end+0xff80cf5c>
  80cf8c:	1000041e 	bne	r2,zero,80cfa0 <___vfiprintf_internal_r+0xe08>
  80cf90:	01400044 	movi	r5,1
  80cf94:	0009883a 	mov	r4,zero
  80cf98:	d811883a 	mov	r8,sp
  80cf9c:	003ff206 	br	80cf68 <__alt_data_end+0xff80cf68>
  80cfa0:	d9402117 	ldw	r5,132(sp)
  80cfa4:	d9801a04 	addi	r6,sp,104
  80cfa8:	e009883a 	mov	r4,fp
  80cfac:	080c0840 	call	80c084 <__sprint_r.part.0>
  80cfb0:	103fcd1e 	bne	r2,zero,80cee8 <__alt_data_end+0xff80cee8>
  80cfb4:	d9001b17 	ldw	r4,108(sp)
  80cfb8:	d8801c17 	ldw	r2,112(sp)
  80cfbc:	d811883a 	mov	r8,sp
  80cfc0:	21400044 	addi	r5,r4,1
  80cfc4:	003fe806 	br	80cf68 <__alt_data_end+0xff80cf68>
  80cfc8:	d9402117 	ldw	r5,132(sp)
  80cfcc:	d9002017 	ldw	r4,128(sp)
  80cfd0:	d9801a04 	addi	r6,sp,104
  80cfd4:	d9c02b15 	stw	r7,172(sp)
  80cfd8:	db402a15 	stw	r13,168(sp)
  80cfdc:	080c0840 	call	80c084 <__sprint_r.part.0>
  80cfe0:	d9c02b17 	ldw	r7,172(sp)
  80cfe4:	db402a17 	ldw	r13,168(sp)
  80cfe8:	103fbf1e 	bne	r2,zero,80cee8 <__alt_data_end+0xff80cee8>
  80cfec:	d9401b17 	ldw	r5,108(sp)
  80cff0:	d8801c17 	ldw	r2,112(sp)
  80cff4:	d811883a 	mov	r8,sp
  80cff8:	29800044 	addi	r6,r5,1
  80cffc:	003dc406 	br	80c710 <__alt_data_end+0xff80c710>
  80d000:	1000d21e 	bne	r2,zero,80d34c <___vfiprintf_internal_r+0x11b4>
  80d004:	d8c01d87 	ldb	r3,118(sp)
  80d008:	18009526 	beq	r3,zero,80d260 <___vfiprintf_internal_r+0x10c8>
  80d00c:	00800044 	movi	r2,1
  80d010:	d8c01d84 	addi	r3,sp,118
  80d014:	1009883a 	mov	r4,r2
  80d018:	d8c00015 	stw	r3,0(sp)
  80d01c:	d8800115 	stw	r2,4(sp)
  80d020:	d811883a 	mov	r8,sp
  80d024:	200b883a 	mov	r5,r4
  80d028:	42000204 	addi	r8,r8,8
  80d02c:	21000044 	addi	r4,r4,1
  80d030:	003d9706 	br	80c690 <__alt_data_end+0xff80c690>
  80d034:	d9001d04 	addi	r4,sp,116
  80d038:	00800084 	movi	r2,2
  80d03c:	d9000015 	stw	r4,0(sp)
  80d040:	d8800115 	stw	r2,4(sp)
  80d044:	1809883a 	mov	r4,r3
  80d048:	d811883a 	mov	r8,sp
  80d04c:	200b883a 	mov	r5,r4
  80d050:	42000204 	addi	r8,r8,8
  80d054:	21000044 	addi	r4,r4,1
  80d058:	003f4e06 	br	80cd94 <__alt_data_end+0xff80cd94>
  80d05c:	d8001d85 	stb	zero,118(sp)
  80d060:	48005016 	blt	r9,zero,80d1a4 <___vfiprintf_internal_r+0x100c>
  80d064:	00ffdfc4 	movi	r3,-129
  80d068:	94c4b03a 	or	r2,r18,r19
  80d06c:	a0e8703a 	and	r20,r20,r3
  80d070:	103d4426 	beq	r2,zero,80c584 <__alt_data_end+0xff80c584>
  80d074:	0039883a 	mov	fp,zero
  80d078:	d9002617 	ldw	r4,152(sp)
  80d07c:	dd401a04 	addi	r21,sp,104
  80d080:	908003cc 	andi	r2,r18,15
  80d084:	9806973a 	slli	r3,r19,28
  80d088:	2085883a 	add	r2,r4,r2
  80d08c:	9024d13a 	srli	r18,r18,4
  80d090:	10800003 	ldbu	r2,0(r2)
  80d094:	9826d13a 	srli	r19,r19,4
  80d098:	ad7fffc4 	addi	r21,r21,-1
  80d09c:	1ca4b03a 	or	r18,r3,r18
  80d0a0:	a8800005 	stb	r2,0(r21)
  80d0a4:	94c4b03a 	or	r2,r18,r19
  80d0a8:	103ff51e 	bne	r2,zero,80d080 <__alt_data_end+0xff80d080>
  80d0ac:	003e5906 	br	80ca14 <__alt_data_end+0xff80ca14>
  80d0b0:	d9402117 	ldw	r5,132(sp)
  80d0b4:	d9002017 	ldw	r4,128(sp)
  80d0b8:	d9801a04 	addi	r6,sp,104
  80d0bc:	080c0840 	call	80c084 <__sprint_r.part.0>
  80d0c0:	103f891e 	bne	r2,zero,80cee8 <__alt_data_end+0xff80cee8>
  80d0c4:	d8801c17 	ldw	r2,112(sp)
  80d0c8:	d811883a 	mov	r8,sp
  80d0cc:	003f9506 	br	80cf24 <__alt_data_end+0xff80cf24>
  80d0d0:	d9402117 	ldw	r5,132(sp)
  80d0d4:	d9002017 	ldw	r4,128(sp)
  80d0d8:	d9801a04 	addi	r6,sp,104
  80d0dc:	080c0840 	call	80c084 <__sprint_r.part.0>
  80d0e0:	103f811e 	bne	r2,zero,80cee8 <__alt_data_end+0xff80cee8>
  80d0e4:	d811883a 	mov	r8,sp
  80d0e8:	003ced06 	br	80c4a0 <__alt_data_end+0xff80c4a0>
  80d0ec:	d9402117 	ldw	r5,132(sp)
  80d0f0:	d9002017 	ldw	r4,128(sp)
  80d0f4:	d9801a04 	addi	r6,sp,104
  80d0f8:	da402c15 	stw	r9,176(sp)
  80d0fc:	db802a15 	stw	r14,168(sp)
  80d100:	080c0840 	call	80c084 <__sprint_r.part.0>
  80d104:	da402c17 	ldw	r9,176(sp)
  80d108:	db802a17 	ldw	r14,168(sp)
  80d10c:	103f761e 	bne	r2,zero,80cee8 <__alt_data_end+0xff80cee8>
  80d110:	d9401b17 	ldw	r5,108(sp)
  80d114:	d8801c17 	ldw	r2,112(sp)
  80d118:	d811883a 	mov	r8,sp
  80d11c:	29000044 	addi	r4,r5,1
  80d120:	003d5b06 	br	80c690 <__alt_data_end+0xff80c690>
  80d124:	d9402117 	ldw	r5,132(sp)
  80d128:	d9002017 	ldw	r4,128(sp)
  80d12c:	d9801a04 	addi	r6,sp,104
  80d130:	da402c15 	stw	r9,176(sp)
  80d134:	080c0840 	call	80c084 <__sprint_r.part.0>
  80d138:	da402c17 	ldw	r9,176(sp)
  80d13c:	103f6a1e 	bne	r2,zero,80cee8 <__alt_data_end+0xff80cee8>
  80d140:	d9401b17 	ldw	r5,108(sp)
  80d144:	d8801c17 	ldw	r2,112(sp)
  80d148:	d811883a 	mov	r8,sp
  80d14c:	29000044 	addi	r4,r5,1
  80d150:	003f1006 	br	80cd94 <__alt_data_end+0xff80cd94>
  80d154:	1000c31e 	bne	r2,zero,80d464 <___vfiprintf_internal_r+0x12cc>
  80d158:	01000044 	movi	r4,1
  80d15c:	000b883a 	mov	r5,zero
  80d160:	d811883a 	mov	r8,sp
  80d164:	003f0d06 	br	80cd9c <__alt_data_end+0xff80cd9c>
  80d168:	d9402117 	ldw	r5,132(sp)
  80d16c:	d9002017 	ldw	r4,128(sp)
  80d170:	d9801a04 	addi	r6,sp,104
  80d174:	080c0840 	call	80c084 <__sprint_r.part.0>
  80d178:	103f5b1e 	bne	r2,zero,80cee8 <__alt_data_end+0xff80cee8>
  80d17c:	d9001b17 	ldw	r4,108(sp)
  80d180:	d8801c17 	ldw	r2,112(sp)
  80d184:	d811883a 	mov	r8,sp
  80d188:	21000044 	addi	r4,r4,1
  80d18c:	003d8006 	br	80c790 <__alt_data_end+0xff80c790>
  80d190:	01002074 	movhi	r4,129
  80d194:	21083204 	addi	r4,r4,8392
  80d198:	d9002615 	stw	r4,152(sp)
  80d19c:	d8c02215 	stw	r3,136(sp)
  80d1a0:	1029883a 	mov	r20,r2
  80d1a4:	94c4b03a 	or	r2,r18,r19
  80d1a8:	103fb21e 	bne	r2,zero,80d074 <__alt_data_end+0xff80d074>
  80d1ac:	0039883a 	mov	fp,zero
  80d1b0:	00800084 	movi	r2,2
  80d1b4:	003e6b06 	br	80cb64 <__alt_data_end+0xff80cb64>
  80d1b8:	da802217 	ldw	r10,136(sp)
  80d1bc:	d8001d85 	stb	zero,118(sp)
  80d1c0:	0027883a 	mov	r19,zero
  80d1c4:	50800104 	addi	r2,r10,4
  80d1c8:	54800017 	ldw	r18,0(r10)
  80d1cc:	483e6016 	blt	r9,zero,80cb50 <__alt_data_end+0xff80cb50>
  80d1d0:	00ffdfc4 	movi	r3,-129
  80d1d4:	d8802215 	stw	r2,136(sp)
  80d1d8:	a0e8703a 	and	r20,r20,r3
  80d1dc:	0039883a 	mov	fp,zero
  80d1e0:	903ebb26 	beq	r18,zero,80ccd0 <__alt_data_end+0xff80ccd0>
  80d1e4:	00800244 	movi	r2,9
  80d1e8:	14bdee36 	bltu	r2,r18,80c9a4 <__alt_data_end+0xff80c9a4>
  80d1ec:	003eba06 	br	80ccd8 <__alt_data_end+0xff80ccd8>
  80d1f0:	00800c04 	movi	r2,48
  80d1f4:	d8c01d45 	stb	r3,117(sp)
  80d1f8:	d8801d05 	stb	r2,116(sp)
  80d1fc:	d8001d85 	stb	zero,118(sp)
  80d200:	a0c00094 	ori	r3,r20,2
  80d204:	4800a916 	blt	r9,zero,80d4ac <___vfiprintf_internal_r+0x1314>
  80d208:	00bfdfc4 	movi	r2,-129
  80d20c:	a096703a 	and	r11,r20,r2
  80d210:	5d000094 	ori	r20,r11,2
  80d214:	0039883a 	mov	fp,zero
  80d218:	003f9706 	br	80d078 <__alt_data_end+0xff80d078>
  80d21c:	8025883a 	mov	r18,r16
  80d220:	003c2e06 	br	80c2dc <__alt_data_end+0xff80c2dc>
  80d224:	00802074 	movhi	r2,129
  80d228:	10883204 	addi	r2,r2,8392
  80d22c:	0039883a 	mov	fp,zero
  80d230:	d8802615 	stw	r2,152(sp)
  80d234:	003f9006 	br	80d078 <__alt_data_end+0xff80d078>
  80d238:	04a5c83a 	sub	r18,zero,r18
  80d23c:	07000b44 	movi	fp,45
  80d240:	9004c03a 	cmpne	r2,r18,zero
  80d244:	04e7c83a 	sub	r19,zero,r19
  80d248:	df001d85 	stb	fp,118(sp)
  80d24c:	98a7c83a 	sub	r19,r19,r2
  80d250:	48009f16 	blt	r9,zero,80d4d0 <___vfiprintf_internal_r+0x1338>
  80d254:	00bfdfc4 	movi	r2,-129
  80d258:	a0a8703a 	and	r20,r20,r2
  80d25c:	003dd006 	br	80c9a0 <__alt_data_end+0xff80c9a0>
  80d260:	70004c26 	beq	r14,zero,80d394 <___vfiprintf_internal_r+0x11fc>
  80d264:	00800084 	movi	r2,2
  80d268:	d8c01d04 	addi	r3,sp,116
  80d26c:	d8c00015 	stw	r3,0(sp)
  80d270:	d8800115 	stw	r2,4(sp)
  80d274:	01000044 	movi	r4,1
  80d278:	d811883a 	mov	r8,sp
  80d27c:	003f7306 	br	80d04c <__alt_data_end+0xff80d04c>
  80d280:	a080100c 	andi	r2,r20,64
  80d284:	da802217 	ldw	r10,136(sp)
  80d288:	103e0626 	beq	r2,zero,80caa4 <__alt_data_end+0xff80caa4>
  80d28c:	5480000f 	ldh	r18,0(r10)
  80d290:	52800104 	addi	r10,r10,4
  80d294:	da802215 	stw	r10,136(sp)
  80d298:	9027d7fa 	srai	r19,r18,31
  80d29c:	9805883a 	mov	r2,r19
  80d2a0:	003db806 	br	80c984 <__alt_data_end+0xff80c984>
  80d2a4:	a080040c 	andi	r2,r20,16
  80d2a8:	1000091e 	bne	r2,zero,80d2d0 <___vfiprintf_internal_r+0x1138>
  80d2ac:	a2c0100c 	andi	r11,r20,64
  80d2b0:	58000726 	beq	r11,zero,80d2d0 <___vfiprintf_internal_r+0x1138>
  80d2b4:	da802217 	ldw	r10,136(sp)
  80d2b8:	50800017 	ldw	r2,0(r10)
  80d2bc:	52800104 	addi	r10,r10,4
  80d2c0:	da802215 	stw	r10,136(sp)
  80d2c4:	da802317 	ldw	r10,140(sp)
  80d2c8:	1280000d 	sth	r10,0(r2)
  80d2cc:	003be706 	br	80c26c <__alt_data_end+0xff80c26c>
  80d2d0:	da802217 	ldw	r10,136(sp)
  80d2d4:	50800017 	ldw	r2,0(r10)
  80d2d8:	52800104 	addi	r10,r10,4
  80d2dc:	da802215 	stw	r10,136(sp)
  80d2e0:	da802317 	ldw	r10,140(sp)
  80d2e4:	12800015 	stw	r10,0(r2)
  80d2e8:	003be006 	br	80c26c <__alt_data_end+0xff80c26c>
  80d2ec:	a080100c 	andi	r2,r20,64
  80d2f0:	da802217 	ldw	r10,136(sp)
  80d2f4:	10003026 	beq	r2,zero,80d3b8 <___vfiprintf_internal_r+0x1220>
  80d2f8:	5480000b 	ldhu	r18,0(r10)
  80d2fc:	52800104 	addi	r10,r10,4
  80d300:	0027883a 	mov	r19,zero
  80d304:	da802215 	stw	r10,136(sp)
  80d308:	003d8006 	br	80c90c <__alt_data_end+0xff80c90c>
  80d30c:	80c00007 	ldb	r3,0(r16)
  80d310:	003c0006 	br	80c314 <__alt_data_end+0xff80c314>
  80d314:	a080100c 	andi	r2,r20,64
  80d318:	d8001d85 	stb	zero,118(sp)
  80d31c:	da802217 	ldw	r10,136(sp)
  80d320:	1000201e 	bne	r2,zero,80d3a4 <___vfiprintf_internal_r+0x120c>
  80d324:	50800104 	addi	r2,r10,4
  80d328:	54800017 	ldw	r18,0(r10)
  80d32c:	0027883a 	mov	r19,zero
  80d330:	483def0e 	bge	r9,zero,80caf0 <__alt_data_end+0xff80caf0>
  80d334:	94c6b03a 	or	r3,r18,r19
  80d338:	d8802215 	stw	r2,136(sp)
  80d33c:	183d4e1e 	bne	r3,zero,80c878 <__alt_data_end+0xff80c878>
  80d340:	0039883a 	mov	fp,zero
  80d344:	0005883a 	mov	r2,zero
  80d348:	003e0606 	br	80cb64 <__alt_data_end+0xff80cb64>
  80d34c:	d9402117 	ldw	r5,132(sp)
  80d350:	d9002017 	ldw	r4,128(sp)
  80d354:	d9801a04 	addi	r6,sp,104
  80d358:	da402c15 	stw	r9,176(sp)
  80d35c:	db802a15 	stw	r14,168(sp)
  80d360:	080c0840 	call	80c084 <__sprint_r.part.0>
  80d364:	da402c17 	ldw	r9,176(sp)
  80d368:	db802a17 	ldw	r14,168(sp)
  80d36c:	103ede1e 	bne	r2,zero,80cee8 <__alt_data_end+0xff80cee8>
  80d370:	d9401b17 	ldw	r5,108(sp)
  80d374:	d8801c17 	ldw	r2,112(sp)
  80d378:	d811883a 	mov	r8,sp
  80d37c:	29000044 	addi	r4,r5,1
  80d380:	003e7406 	br	80cd54 <__alt_data_end+0xff80cd54>
  80d384:	00bfffc4 	movi	r2,-1
  80d388:	003c5806 	br	80c4ec <__alt_data_end+0xff80c4ec>
  80d38c:	d811883a 	mov	r8,sp
  80d390:	003ee806 	br	80cf34 <__alt_data_end+0xff80cf34>
  80d394:	000b883a 	mov	r5,zero
  80d398:	01000044 	movi	r4,1
  80d39c:	d811883a 	mov	r8,sp
  80d3a0:	003e7c06 	br	80cd94 <__alt_data_end+0xff80cd94>
  80d3a4:	50800104 	addi	r2,r10,4
  80d3a8:	5480000b 	ldhu	r18,0(r10)
  80d3ac:	0027883a 	mov	r19,zero
  80d3b0:	483dcf0e 	bge	r9,zero,80caf0 <__alt_data_end+0xff80caf0>
  80d3b4:	003fdf06 	br	80d334 <__alt_data_end+0xff80d334>
  80d3b8:	54800017 	ldw	r18,0(r10)
  80d3bc:	52800104 	addi	r10,r10,4
  80d3c0:	0027883a 	mov	r19,zero
  80d3c4:	da802215 	stw	r10,136(sp)
  80d3c8:	003d5006 	br	80c90c <__alt_data_end+0xff80c90c>
  80d3cc:	50800104 	addi	r2,r10,4
  80d3d0:	5480000b 	ldhu	r18,0(r10)
  80d3d4:	0027883a 	mov	r19,zero
  80d3d8:	483f7d0e 	bge	r9,zero,80d1d0 <__alt_data_end+0xff80d1d0>
  80d3dc:	003ddc06 	br	80cb50 <__alt_data_end+0xff80cb50>
  80d3e0:	d8c02215 	stw	r3,136(sp)
  80d3e4:	0039883a 	mov	fp,zero
  80d3e8:	003ddb06 	br	80cb58 <__alt_data_end+0xff80cb58>
  80d3ec:	02802074 	movhi	r10,129
  80d3f0:	52889304 	addi	r10,r10,8780
  80d3f4:	da802415 	stw	r10,144(sp)
  80d3f8:	003e8306 	br	80ce08 <__alt_data_end+0xff80ce08>
  80d3fc:	d8801c17 	ldw	r2,112(sp)
  80d400:	dd002117 	ldw	r20,132(sp)
  80d404:	103eb926 	beq	r2,zero,80ceec <__alt_data_end+0xff80ceec>
  80d408:	d9002017 	ldw	r4,128(sp)
  80d40c:	d9801a04 	addi	r6,sp,104
  80d410:	a00b883a 	mov	r5,r20
  80d414:	080c0840 	call	80c084 <__sprint_r.part.0>
  80d418:	003eb406 	br	80ceec <__alt_data_end+0xff80ceec>
  80d41c:	80c00043 	ldbu	r3,1(r16)
  80d420:	a5000814 	ori	r20,r20,32
  80d424:	84000044 	addi	r16,r16,1
  80d428:	18c03fcc 	andi	r3,r3,255
  80d42c:	18c0201c 	xori	r3,r3,128
  80d430:	18ffe004 	addi	r3,r3,-128
  80d434:	003bb706 	br	80c314 <__alt_data_end+0xff80c314>
  80d438:	a809883a 	mov	r4,r21
  80d43c:	d8c02a15 	stw	r3,168(sp)
  80d440:	da002b15 	stw	r8,172(sp)
  80d444:	0804aec0 	call	804aec <strlen>
  80d448:	d8c02a17 	ldw	r3,168(sp)
  80d44c:	1027883a 	mov	r19,r2
  80d450:	df001d83 	ldbu	fp,118(sp)
  80d454:	d8c02215 	stw	r3,136(sp)
  80d458:	0013883a 	mov	r9,zero
  80d45c:	da002b17 	ldw	r8,172(sp)
  80d460:	003c4d06 	br	80c598 <__alt_data_end+0xff80c598>
  80d464:	d9402117 	ldw	r5,132(sp)
  80d468:	d9002017 	ldw	r4,128(sp)
  80d46c:	d9801a04 	addi	r6,sp,104
  80d470:	da402c15 	stw	r9,176(sp)
  80d474:	080c0840 	call	80c084 <__sprint_r.part.0>
  80d478:	da402c17 	ldw	r9,176(sp)
  80d47c:	103e9a1e 	bne	r2,zero,80cee8 <__alt_data_end+0xff80cee8>
  80d480:	d9401b17 	ldw	r5,108(sp)
  80d484:	d8801c17 	ldw	r2,112(sp)
  80d488:	d811883a 	mov	r8,sp
  80d48c:	29000044 	addi	r4,r5,1
  80d490:	003e4206 	br	80cd9c <__alt_data_end+0xff80cd9c>
  80d494:	d9401b17 	ldw	r5,108(sp)
  80d498:	01002074 	movhi	r4,129
  80d49c:	21089704 	addi	r4,r4,8796
  80d4a0:	d9002415 	stw	r4,144(sp)
  80d4a4:	29400044 	addi	r5,r5,1
  80d4a8:	003c6d06 	br	80c660 <__alt_data_end+0xff80c660>
  80d4ac:	0039883a 	mov	fp,zero
  80d4b0:	00800084 	movi	r2,2
  80d4b4:	10803fcc 	andi	r2,r2,255
  80d4b8:	01000044 	movi	r4,1
  80d4bc:	11001e26 	beq	r2,r4,80d538 <___vfiprintf_internal_r+0x13a0>
  80d4c0:	01000084 	movi	r4,2
  80d4c4:	11001e1e 	bne	r2,r4,80d540 <___vfiprintf_internal_r+0x13a8>
  80d4c8:	1829883a 	mov	r20,r3
  80d4cc:	003eea06 	br	80d078 <__alt_data_end+0xff80d078>
  80d4d0:	a007883a 	mov	r3,r20
  80d4d4:	00800044 	movi	r2,1
  80d4d8:	003ff606 	br	80d4b4 <__alt_data_end+0xff80d4b4>
  80d4dc:	00800184 	movi	r2,6
  80d4e0:	1240012e 	bgeu	r2,r9,80d4e8 <___vfiprintf_internal_r+0x1350>
  80d4e4:	1013883a 	mov	r9,r2
  80d4e8:	4827883a 	mov	r19,r9
  80d4ec:	4825883a 	mov	r18,r9
  80d4f0:	48001516 	blt	r9,zero,80d548 <___vfiprintf_internal_r+0x13b0>
  80d4f4:	05402074 	movhi	r21,129
  80d4f8:	d8c02215 	stw	r3,136(sp)
  80d4fc:	ad483704 	addi	r21,r21,8412
  80d500:	003d1406 	br	80c954 <__alt_data_end+0xff80c954>
  80d504:	02802074 	movhi	r10,129
  80d508:	52889304 	addi	r10,r10,8780
  80d50c:	da802415 	stw	r10,144(sp)
  80d510:	200d883a 	mov	r6,r4
  80d514:	003c9106 	br	80c75c <__alt_data_end+0xff80c75c>
  80d518:	5021883a 	mov	r16,r10
  80d51c:	0013883a 	mov	r9,zero
  80d520:	003b7d06 	br	80c318 <__alt_data_end+0xff80c318>
  80d524:	4827883a 	mov	r19,r9
  80d528:	df001d83 	ldbu	fp,118(sp)
  80d52c:	d8c02215 	stw	r3,136(sp)
  80d530:	0013883a 	mov	r9,zero
  80d534:	003c1806 	br	80c598 <__alt_data_end+0xff80c598>
  80d538:	1829883a 	mov	r20,r3
  80d53c:	003d1806 	br	80c9a0 <__alt_data_end+0xff80c9a0>
  80d540:	1829883a 	mov	r20,r3
  80d544:	003ccd06 	br	80c87c <__alt_data_end+0xff80c87c>
  80d548:	0025883a 	mov	r18,zero
  80d54c:	003fe906 	br	80d4f4 <__alt_data_end+0xff80d4f4>
  80d550:	d8802217 	ldw	r2,136(sp)
  80d554:	80c00043 	ldbu	r3,1(r16)
  80d558:	5021883a 	mov	r16,r10
  80d55c:	12400017 	ldw	r9,0(r2)
  80d560:	10800104 	addi	r2,r2,4
  80d564:	d8802215 	stw	r2,136(sp)
  80d568:	483faf0e 	bge	r9,zero,80d428 <__alt_data_end+0xff80d428>
  80d56c:	18c03fcc 	andi	r3,r3,255
  80d570:	18c0201c 	xori	r3,r3,128
  80d574:	027fffc4 	movi	r9,-1
  80d578:	18ffe004 	addi	r3,r3,-128
  80d57c:	003b6506 	br	80c314 <__alt_data_end+0xff80c314>
  80d580:	d9c01d85 	stb	r7,118(sp)
  80d584:	003ca006 	br	80c808 <__alt_data_end+0xff80c808>
  80d588:	d9c01d85 	stb	r7,118(sp)
  80d58c:	003cad06 	br	80c844 <__alt_data_end+0xff80c844>
  80d590:	d9c01d85 	stb	r7,118(sp)
  80d594:	003d7d06 	br	80cb8c <__alt_data_end+0xff80cb8c>
  80d598:	d9c01d85 	stb	r7,118(sp)
  80d59c:	003d5f06 	br	80cb1c <__alt_data_end+0xff80cb1c>
  80d5a0:	a080004c 	andi	r2,r20,1
  80d5a4:	0039883a 	mov	fp,zero
  80d5a8:	10000526 	beq	r2,zero,80d5c0 <___vfiprintf_internal_r+0x1428>
  80d5ac:	00800c04 	movi	r2,48
  80d5b0:	d88019c5 	stb	r2,103(sp)
  80d5b4:	dcc02717 	ldw	r19,156(sp)
  80d5b8:	dd4019c4 	addi	r21,sp,103
  80d5bc:	003bf606 	br	80c598 <__alt_data_end+0xff80c598>
  80d5c0:	0027883a 	mov	r19,zero
  80d5c4:	dd401a04 	addi	r21,sp,104
  80d5c8:	003bf306 	br	80c598 <__alt_data_end+0xff80c598>
  80d5cc:	d9c01d85 	stb	r7,118(sp)
  80d5d0:	003dc806 	br	80ccf4 <__alt_data_end+0xff80ccf4>
  80d5d4:	d9c01d85 	stb	r7,118(sp)
  80d5d8:	003d3a06 	br	80cac4 <__alt_data_end+0xff80cac4>
  80d5dc:	d9c01d85 	stb	r7,118(sp)
  80d5e0:	003d2a06 	br	80ca8c <__alt_data_end+0xff80ca8c>
  80d5e4:	d9c01d85 	stb	r7,118(sp)
  80d5e8:	003cde06 	br	80c964 <__alt_data_end+0xff80c964>
  80d5ec:	d9c01d85 	stb	r7,118(sp)
  80d5f0:	003cbc06 	br	80c8e4 <__alt_data_end+0xff80c8e4>

0080d5f4 <__vfiprintf_internal>:
  80d5f4:	00802074 	movhi	r2,129
  80d5f8:	108f5204 	addi	r2,r2,15688
  80d5fc:	300f883a 	mov	r7,r6
  80d600:	280d883a 	mov	r6,r5
  80d604:	200b883a 	mov	r5,r4
  80d608:	11000017 	ldw	r4,0(r2)
  80d60c:	080c1981 	jmpi	80c198 <___vfiprintf_internal_r>

0080d610 <__sbprintf>:
  80d610:	2880030b 	ldhu	r2,12(r5)
  80d614:	2ac01917 	ldw	r11,100(r5)
  80d618:	2a80038b 	ldhu	r10,14(r5)
  80d61c:	2a400717 	ldw	r9,28(r5)
  80d620:	2a000917 	ldw	r8,36(r5)
  80d624:	defee204 	addi	sp,sp,-1144
  80d628:	00c10004 	movi	r3,1024
  80d62c:	dc011a15 	stw	r16,1128(sp)
  80d630:	10bfff4c 	andi	r2,r2,65533
  80d634:	2821883a 	mov	r16,r5
  80d638:	d8cb883a 	add	r5,sp,r3
  80d63c:	dc811c15 	stw	r18,1136(sp)
  80d640:	dc411b15 	stw	r17,1132(sp)
  80d644:	dfc11d15 	stw	ra,1140(sp)
  80d648:	2025883a 	mov	r18,r4
  80d64c:	d881030d 	sth	r2,1036(sp)
  80d650:	dac11915 	stw	r11,1124(sp)
  80d654:	da81038d 	sth	r10,1038(sp)
  80d658:	da410715 	stw	r9,1052(sp)
  80d65c:	da010915 	stw	r8,1060(sp)
  80d660:	dec10015 	stw	sp,1024(sp)
  80d664:	dec10415 	stw	sp,1040(sp)
  80d668:	d8c10215 	stw	r3,1032(sp)
  80d66c:	d8c10515 	stw	r3,1044(sp)
  80d670:	d8010615 	stw	zero,1048(sp)
  80d674:	080c1980 	call	80c198 <___vfiprintf_internal_r>
  80d678:	1023883a 	mov	r17,r2
  80d67c:	10000416 	blt	r2,zero,80d690 <__sbprintf+0x80>
  80d680:	d9410004 	addi	r5,sp,1024
  80d684:	9009883a 	mov	r4,r18
  80d688:	0808a4c0 	call	808a4c <_fflush_r>
  80d68c:	10000d1e 	bne	r2,zero,80d6c4 <__sbprintf+0xb4>
  80d690:	d881030b 	ldhu	r2,1036(sp)
  80d694:	1080100c 	andi	r2,r2,64
  80d698:	10000326 	beq	r2,zero,80d6a8 <__sbprintf+0x98>
  80d69c:	8080030b 	ldhu	r2,12(r16)
  80d6a0:	10801014 	ori	r2,r2,64
  80d6a4:	8080030d 	sth	r2,12(r16)
  80d6a8:	8805883a 	mov	r2,r17
  80d6ac:	dfc11d17 	ldw	ra,1140(sp)
  80d6b0:	dc811c17 	ldw	r18,1136(sp)
  80d6b4:	dc411b17 	ldw	r17,1132(sp)
  80d6b8:	dc011a17 	ldw	r16,1128(sp)
  80d6bc:	dec11e04 	addi	sp,sp,1144
  80d6c0:	f800283a 	ret
  80d6c4:	047fffc4 	movi	r17,-1
  80d6c8:	003ff106 	br	80d690 <__alt_data_end+0xff80d690>

0080d6cc <_write_r>:
  80d6cc:	defffd04 	addi	sp,sp,-12
  80d6d0:	2805883a 	mov	r2,r5
  80d6d4:	dc000015 	stw	r16,0(sp)
  80d6d8:	04002074 	movhi	r16,129
  80d6dc:	dc400115 	stw	r17,4(sp)
  80d6e0:	300b883a 	mov	r5,r6
  80d6e4:	84162204 	addi	r16,r16,22664
  80d6e8:	2023883a 	mov	r17,r4
  80d6ec:	380d883a 	mov	r6,r7
  80d6f0:	1009883a 	mov	r4,r2
  80d6f4:	dfc00215 	stw	ra,8(sp)
  80d6f8:	80000015 	stw	zero,0(r16)
  80d6fc:	080fe340 	call	80fe34 <write>
  80d700:	00ffffc4 	movi	r3,-1
  80d704:	10c00526 	beq	r2,r3,80d71c <_write_r+0x50>
  80d708:	dfc00217 	ldw	ra,8(sp)
  80d70c:	dc400117 	ldw	r17,4(sp)
  80d710:	dc000017 	ldw	r16,0(sp)
  80d714:	dec00304 	addi	sp,sp,12
  80d718:	f800283a 	ret
  80d71c:	80c00017 	ldw	r3,0(r16)
  80d720:	183ff926 	beq	r3,zero,80d708 <__alt_data_end+0xff80d708>
  80d724:	88c00015 	stw	r3,0(r17)
  80d728:	003ff706 	br	80d708 <__alt_data_end+0xff80d708>

0080d72c <_close_r>:
  80d72c:	defffd04 	addi	sp,sp,-12
  80d730:	dc000015 	stw	r16,0(sp)
  80d734:	04002074 	movhi	r16,129
  80d738:	dc400115 	stw	r17,4(sp)
  80d73c:	84162204 	addi	r16,r16,22664
  80d740:	2023883a 	mov	r17,r4
  80d744:	2809883a 	mov	r4,r5
  80d748:	dfc00215 	stw	ra,8(sp)
  80d74c:	80000015 	stw	zero,0(r16)
  80d750:	080f5700 	call	80f570 <close>
  80d754:	00ffffc4 	movi	r3,-1
  80d758:	10c00526 	beq	r2,r3,80d770 <_close_r+0x44>
  80d75c:	dfc00217 	ldw	ra,8(sp)
  80d760:	dc400117 	ldw	r17,4(sp)
  80d764:	dc000017 	ldw	r16,0(sp)
  80d768:	dec00304 	addi	sp,sp,12
  80d76c:	f800283a 	ret
  80d770:	80c00017 	ldw	r3,0(r16)
  80d774:	183ff926 	beq	r3,zero,80d75c <__alt_data_end+0xff80d75c>
  80d778:	88c00015 	stw	r3,0(r17)
  80d77c:	003ff706 	br	80d75c <__alt_data_end+0xff80d75c>

0080d780 <_calloc_r>:
  80d780:	298b383a 	mul	r5,r5,r6
  80d784:	defffe04 	addi	sp,sp,-8
  80d788:	dfc00115 	stw	ra,4(sp)
  80d78c:	dc000015 	stw	r16,0(sp)
  80d790:	0809b880 	call	809b88 <_malloc_r>
  80d794:	10002926 	beq	r2,zero,80d83c <_calloc_r+0xbc>
  80d798:	11bfff17 	ldw	r6,-4(r2)
  80d79c:	1021883a 	mov	r16,r2
  80d7a0:	00bfff04 	movi	r2,-4
  80d7a4:	308c703a 	and	r6,r6,r2
  80d7a8:	00c00904 	movi	r3,36
  80d7ac:	308d883a 	add	r6,r6,r2
  80d7b0:	19801636 	bltu	r3,r6,80d80c <_calloc_r+0x8c>
  80d7b4:	008004c4 	movi	r2,19
  80d7b8:	11800b2e 	bgeu	r2,r6,80d7e8 <_calloc_r+0x68>
  80d7bc:	80000015 	stw	zero,0(r16)
  80d7c0:	80000115 	stw	zero,4(r16)
  80d7c4:	008006c4 	movi	r2,27
  80d7c8:	11801a2e 	bgeu	r2,r6,80d834 <_calloc_r+0xb4>
  80d7cc:	80000215 	stw	zero,8(r16)
  80d7d0:	80000315 	stw	zero,12(r16)
  80d7d4:	30c0151e 	bne	r6,r3,80d82c <_calloc_r+0xac>
  80d7d8:	80000415 	stw	zero,16(r16)
  80d7dc:	80800604 	addi	r2,r16,24
  80d7e0:	80000515 	stw	zero,20(r16)
  80d7e4:	00000106 	br	80d7ec <_calloc_r+0x6c>
  80d7e8:	8005883a 	mov	r2,r16
  80d7ec:	10000015 	stw	zero,0(r2)
  80d7f0:	10000115 	stw	zero,4(r2)
  80d7f4:	10000215 	stw	zero,8(r2)
  80d7f8:	8005883a 	mov	r2,r16
  80d7fc:	dfc00117 	ldw	ra,4(sp)
  80d800:	dc000017 	ldw	r16,0(sp)
  80d804:	dec00204 	addi	sp,sp,8
  80d808:	f800283a 	ret
  80d80c:	000b883a 	mov	r5,zero
  80d810:	8009883a 	mov	r4,r16
  80d814:	080a71c0 	call	80a71c <memset>
  80d818:	8005883a 	mov	r2,r16
  80d81c:	dfc00117 	ldw	ra,4(sp)
  80d820:	dc000017 	ldw	r16,0(sp)
  80d824:	dec00204 	addi	sp,sp,8
  80d828:	f800283a 	ret
  80d82c:	80800404 	addi	r2,r16,16
  80d830:	003fee06 	br	80d7ec <__alt_data_end+0xff80d7ec>
  80d834:	80800204 	addi	r2,r16,8
  80d838:	003fec06 	br	80d7ec <__alt_data_end+0xff80d7ec>
  80d83c:	0005883a 	mov	r2,zero
  80d840:	003fee06 	br	80d7fc <__alt_data_end+0xff80d7fc>

0080d844 <_fclose_r>:
  80d844:	28003926 	beq	r5,zero,80d92c <_fclose_r+0xe8>
  80d848:	defffc04 	addi	sp,sp,-16
  80d84c:	dc400115 	stw	r17,4(sp)
  80d850:	dc000015 	stw	r16,0(sp)
  80d854:	dfc00315 	stw	ra,12(sp)
  80d858:	dc800215 	stw	r18,8(sp)
  80d85c:	2023883a 	mov	r17,r4
  80d860:	2821883a 	mov	r16,r5
  80d864:	20000226 	beq	r4,zero,80d870 <_fclose_r+0x2c>
  80d868:	20800e17 	ldw	r2,56(r4)
  80d86c:	10002726 	beq	r2,zero,80d90c <_fclose_r+0xc8>
  80d870:	8080030f 	ldh	r2,12(r16)
  80d874:	1000071e 	bne	r2,zero,80d894 <_fclose_r+0x50>
  80d878:	0005883a 	mov	r2,zero
  80d87c:	dfc00317 	ldw	ra,12(sp)
  80d880:	dc800217 	ldw	r18,8(sp)
  80d884:	dc400117 	ldw	r17,4(sp)
  80d888:	dc000017 	ldw	r16,0(sp)
  80d88c:	dec00404 	addi	sp,sp,16
  80d890:	f800283a 	ret
  80d894:	800b883a 	mov	r5,r16
  80d898:	8809883a 	mov	r4,r17
  80d89c:	08088300 	call	808830 <__sflush_r>
  80d8a0:	1025883a 	mov	r18,r2
  80d8a4:	80800b17 	ldw	r2,44(r16)
  80d8a8:	10000426 	beq	r2,zero,80d8bc <_fclose_r+0x78>
  80d8ac:	81400717 	ldw	r5,28(r16)
  80d8b0:	8809883a 	mov	r4,r17
  80d8b4:	103ee83a 	callr	r2
  80d8b8:	10001616 	blt	r2,zero,80d914 <_fclose_r+0xd0>
  80d8bc:	8080030b 	ldhu	r2,12(r16)
  80d8c0:	1080200c 	andi	r2,r2,128
  80d8c4:	1000151e 	bne	r2,zero,80d91c <_fclose_r+0xd8>
  80d8c8:	81400c17 	ldw	r5,48(r16)
  80d8cc:	28000526 	beq	r5,zero,80d8e4 <_fclose_r+0xa0>
  80d8d0:	80801004 	addi	r2,r16,64
  80d8d4:	28800226 	beq	r5,r2,80d8e0 <_fclose_r+0x9c>
  80d8d8:	8809883a 	mov	r4,r17
  80d8dc:	0808f9c0 	call	808f9c <_free_r>
  80d8e0:	80000c15 	stw	zero,48(r16)
  80d8e4:	81401117 	ldw	r5,68(r16)
  80d8e8:	28000326 	beq	r5,zero,80d8f8 <_fclose_r+0xb4>
  80d8ec:	8809883a 	mov	r4,r17
  80d8f0:	0808f9c0 	call	808f9c <_free_r>
  80d8f4:	80001115 	stw	zero,68(r16)
  80d8f8:	0808e380 	call	808e38 <__sfp_lock_acquire>
  80d8fc:	8000030d 	sth	zero,12(r16)
  80d900:	0808e3c0 	call	808e3c <__sfp_lock_release>
  80d904:	9005883a 	mov	r2,r18
  80d908:	003fdc06 	br	80d87c <__alt_data_end+0xff80d87c>
  80d90c:	0808e280 	call	808e28 <__sinit>
  80d910:	003fd706 	br	80d870 <__alt_data_end+0xff80d870>
  80d914:	04bfffc4 	movi	r18,-1
  80d918:	003fe806 	br	80d8bc <__alt_data_end+0xff80d8bc>
  80d91c:	81400417 	ldw	r5,16(r16)
  80d920:	8809883a 	mov	r4,r17
  80d924:	0808f9c0 	call	808f9c <_free_r>
  80d928:	003fe706 	br	80d8c8 <__alt_data_end+0xff80d8c8>
  80d92c:	0005883a 	mov	r2,zero
  80d930:	f800283a 	ret

0080d934 <fclose>:
  80d934:	00802074 	movhi	r2,129
  80d938:	108f5204 	addi	r2,r2,15688
  80d93c:	200b883a 	mov	r5,r4
  80d940:	11000017 	ldw	r4,0(r2)
  80d944:	080d8441 	jmpi	80d844 <_fclose_r>

0080d948 <__fputwc>:
  80d948:	defff804 	addi	sp,sp,-32
  80d94c:	dcc00415 	stw	r19,16(sp)
  80d950:	dc800315 	stw	r18,12(sp)
  80d954:	dc000115 	stw	r16,4(sp)
  80d958:	dfc00715 	stw	ra,28(sp)
  80d95c:	dd400615 	stw	r21,24(sp)
  80d960:	dd000515 	stw	r20,20(sp)
  80d964:	dc400215 	stw	r17,8(sp)
  80d968:	2027883a 	mov	r19,r4
  80d96c:	2825883a 	mov	r18,r5
  80d970:	3021883a 	mov	r16,r6
  80d974:	08099780 	call	809978 <__locale_mb_cur_max>
  80d978:	00c00044 	movi	r3,1
  80d97c:	10c03e26 	beq	r2,r3,80da78 <__fputwc+0x130>
  80d980:	81c01704 	addi	r7,r16,92
  80d984:	900d883a 	mov	r6,r18
  80d988:	d80b883a 	mov	r5,sp
  80d98c:	9809883a 	mov	r4,r19
  80d990:	080de180 	call	80de18 <_wcrtomb_r>
  80d994:	1029883a 	mov	r20,r2
  80d998:	00bfffc4 	movi	r2,-1
  80d99c:	a0802026 	beq	r20,r2,80da20 <__fputwc+0xd8>
  80d9a0:	d9400003 	ldbu	r5,0(sp)
  80d9a4:	a0001c26 	beq	r20,zero,80da18 <__fputwc+0xd0>
  80d9a8:	0023883a 	mov	r17,zero
  80d9ac:	05400284 	movi	r21,10
  80d9b0:	00000906 	br	80d9d8 <__fputwc+0x90>
  80d9b4:	80800017 	ldw	r2,0(r16)
  80d9b8:	11400005 	stb	r5,0(r2)
  80d9bc:	80c00017 	ldw	r3,0(r16)
  80d9c0:	18c00044 	addi	r3,r3,1
  80d9c4:	80c00015 	stw	r3,0(r16)
  80d9c8:	8c400044 	addi	r17,r17,1
  80d9cc:	dc45883a 	add	r2,sp,r17
  80d9d0:	8d00112e 	bgeu	r17,r20,80da18 <__fputwc+0xd0>
  80d9d4:	11400003 	ldbu	r5,0(r2)
  80d9d8:	80c00217 	ldw	r3,8(r16)
  80d9dc:	18ffffc4 	addi	r3,r3,-1
  80d9e0:	80c00215 	stw	r3,8(r16)
  80d9e4:	183ff30e 	bge	r3,zero,80d9b4 <__alt_data_end+0xff80d9b4>
  80d9e8:	80800617 	ldw	r2,24(r16)
  80d9ec:	18801916 	blt	r3,r2,80da54 <__fputwc+0x10c>
  80d9f0:	80800017 	ldw	r2,0(r16)
  80d9f4:	11400005 	stb	r5,0(r2)
  80d9f8:	80800017 	ldw	r2,0(r16)
  80d9fc:	10c00003 	ldbu	r3,0(r2)
  80da00:	10800044 	addi	r2,r2,1
  80da04:	1d402326 	beq	r3,r21,80da94 <__fputwc+0x14c>
  80da08:	80800015 	stw	r2,0(r16)
  80da0c:	8c400044 	addi	r17,r17,1
  80da10:	dc45883a 	add	r2,sp,r17
  80da14:	8d3fef36 	bltu	r17,r20,80d9d4 <__alt_data_end+0xff80d9d4>
  80da18:	9005883a 	mov	r2,r18
  80da1c:	00000406 	br	80da30 <__fputwc+0xe8>
  80da20:	80c0030b 	ldhu	r3,12(r16)
  80da24:	a005883a 	mov	r2,r20
  80da28:	18c01014 	ori	r3,r3,64
  80da2c:	80c0030d 	sth	r3,12(r16)
  80da30:	dfc00717 	ldw	ra,28(sp)
  80da34:	dd400617 	ldw	r21,24(sp)
  80da38:	dd000517 	ldw	r20,20(sp)
  80da3c:	dcc00417 	ldw	r19,16(sp)
  80da40:	dc800317 	ldw	r18,12(sp)
  80da44:	dc400217 	ldw	r17,8(sp)
  80da48:	dc000117 	ldw	r16,4(sp)
  80da4c:	dec00804 	addi	sp,sp,32
  80da50:	f800283a 	ret
  80da54:	800d883a 	mov	r6,r16
  80da58:	29403fcc 	andi	r5,r5,255
  80da5c:	9809883a 	mov	r4,r19
  80da60:	080dcc00 	call	80dcc0 <__swbuf_r>
  80da64:	10bfffe0 	cmpeqi	r2,r2,-1
  80da68:	10803fcc 	andi	r2,r2,255
  80da6c:	103fd626 	beq	r2,zero,80d9c8 <__alt_data_end+0xff80d9c8>
  80da70:	00bfffc4 	movi	r2,-1
  80da74:	003fee06 	br	80da30 <__alt_data_end+0xff80da30>
  80da78:	90ffffc4 	addi	r3,r18,-1
  80da7c:	01003f84 	movi	r4,254
  80da80:	20ffbf36 	bltu	r4,r3,80d980 <__alt_data_end+0xff80d980>
  80da84:	900b883a 	mov	r5,r18
  80da88:	dc800005 	stb	r18,0(sp)
  80da8c:	1029883a 	mov	r20,r2
  80da90:	003fc506 	br	80d9a8 <__alt_data_end+0xff80d9a8>
  80da94:	800d883a 	mov	r6,r16
  80da98:	a80b883a 	mov	r5,r21
  80da9c:	9809883a 	mov	r4,r19
  80daa0:	080dcc00 	call	80dcc0 <__swbuf_r>
  80daa4:	10bfffe0 	cmpeqi	r2,r2,-1
  80daa8:	003fef06 	br	80da68 <__alt_data_end+0xff80da68>

0080daac <_fputwc_r>:
  80daac:	3080030b 	ldhu	r2,12(r6)
  80dab0:	10c8000c 	andi	r3,r2,8192
  80dab4:	1800051e 	bne	r3,zero,80dacc <_fputwc_r+0x20>
  80dab8:	30c01917 	ldw	r3,100(r6)
  80dabc:	10880014 	ori	r2,r2,8192
  80dac0:	3080030d 	sth	r2,12(r6)
  80dac4:	18880014 	ori	r2,r3,8192
  80dac8:	30801915 	stw	r2,100(r6)
  80dacc:	080d9481 	jmpi	80d948 <__fputwc>

0080dad0 <fputwc>:
  80dad0:	00802074 	movhi	r2,129
  80dad4:	defffc04 	addi	sp,sp,-16
  80dad8:	108f5204 	addi	r2,r2,15688
  80dadc:	dc000115 	stw	r16,4(sp)
  80dae0:	14000017 	ldw	r16,0(r2)
  80dae4:	dc400215 	stw	r17,8(sp)
  80dae8:	dfc00315 	stw	ra,12(sp)
  80daec:	2023883a 	mov	r17,r4
  80daf0:	80000226 	beq	r16,zero,80dafc <fputwc+0x2c>
  80daf4:	80800e17 	ldw	r2,56(r16)
  80daf8:	10001026 	beq	r2,zero,80db3c <fputwc+0x6c>
  80dafc:	2880030b 	ldhu	r2,12(r5)
  80db00:	10c8000c 	andi	r3,r2,8192
  80db04:	1800051e 	bne	r3,zero,80db1c <fputwc+0x4c>
  80db08:	28c01917 	ldw	r3,100(r5)
  80db0c:	10880014 	ori	r2,r2,8192
  80db10:	2880030d 	sth	r2,12(r5)
  80db14:	18880014 	ori	r2,r3,8192
  80db18:	28801915 	stw	r2,100(r5)
  80db1c:	280d883a 	mov	r6,r5
  80db20:	8009883a 	mov	r4,r16
  80db24:	880b883a 	mov	r5,r17
  80db28:	dfc00317 	ldw	ra,12(sp)
  80db2c:	dc400217 	ldw	r17,8(sp)
  80db30:	dc000117 	ldw	r16,4(sp)
  80db34:	dec00404 	addi	sp,sp,16
  80db38:	080d9481 	jmpi	80d948 <__fputwc>
  80db3c:	8009883a 	mov	r4,r16
  80db40:	d9400015 	stw	r5,0(sp)
  80db44:	0808e280 	call	808e28 <__sinit>
  80db48:	d9400017 	ldw	r5,0(sp)
  80db4c:	003feb06 	br	80dafc <__alt_data_end+0xff80dafc>

0080db50 <_fstat_r>:
  80db50:	defffd04 	addi	sp,sp,-12
  80db54:	2805883a 	mov	r2,r5
  80db58:	dc000015 	stw	r16,0(sp)
  80db5c:	04002074 	movhi	r16,129
  80db60:	dc400115 	stw	r17,4(sp)
  80db64:	84162204 	addi	r16,r16,22664
  80db68:	2023883a 	mov	r17,r4
  80db6c:	300b883a 	mov	r5,r6
  80db70:	1009883a 	mov	r4,r2
  80db74:	dfc00215 	stw	ra,8(sp)
  80db78:	80000015 	stw	zero,0(r16)
  80db7c:	080f6a80 	call	80f6a8 <fstat>
  80db80:	00ffffc4 	movi	r3,-1
  80db84:	10c00526 	beq	r2,r3,80db9c <_fstat_r+0x4c>
  80db88:	dfc00217 	ldw	ra,8(sp)
  80db8c:	dc400117 	ldw	r17,4(sp)
  80db90:	dc000017 	ldw	r16,0(sp)
  80db94:	dec00304 	addi	sp,sp,12
  80db98:	f800283a 	ret
  80db9c:	80c00017 	ldw	r3,0(r16)
  80dba0:	183ff926 	beq	r3,zero,80db88 <__alt_data_end+0xff80db88>
  80dba4:	88c00015 	stw	r3,0(r17)
  80dba8:	003ff706 	br	80db88 <__alt_data_end+0xff80db88>

0080dbac <_isatty_r>:
  80dbac:	defffd04 	addi	sp,sp,-12
  80dbb0:	dc000015 	stw	r16,0(sp)
  80dbb4:	04002074 	movhi	r16,129
  80dbb8:	dc400115 	stw	r17,4(sp)
  80dbbc:	84162204 	addi	r16,r16,22664
  80dbc0:	2023883a 	mov	r17,r4
  80dbc4:	2809883a 	mov	r4,r5
  80dbc8:	dfc00215 	stw	ra,8(sp)
  80dbcc:	80000015 	stw	zero,0(r16)
  80dbd0:	080f7940 	call	80f794 <isatty>
  80dbd4:	00ffffc4 	movi	r3,-1
  80dbd8:	10c00526 	beq	r2,r3,80dbf0 <_isatty_r+0x44>
  80dbdc:	dfc00217 	ldw	ra,8(sp)
  80dbe0:	dc400117 	ldw	r17,4(sp)
  80dbe4:	dc000017 	ldw	r16,0(sp)
  80dbe8:	dec00304 	addi	sp,sp,12
  80dbec:	f800283a 	ret
  80dbf0:	80c00017 	ldw	r3,0(r16)
  80dbf4:	183ff926 	beq	r3,zero,80dbdc <__alt_data_end+0xff80dbdc>
  80dbf8:	88c00015 	stw	r3,0(r17)
  80dbfc:	003ff706 	br	80dbdc <__alt_data_end+0xff80dbdc>

0080dc00 <_lseek_r>:
  80dc00:	defffd04 	addi	sp,sp,-12
  80dc04:	2805883a 	mov	r2,r5
  80dc08:	dc000015 	stw	r16,0(sp)
  80dc0c:	04002074 	movhi	r16,129
  80dc10:	dc400115 	stw	r17,4(sp)
  80dc14:	300b883a 	mov	r5,r6
  80dc18:	84162204 	addi	r16,r16,22664
  80dc1c:	2023883a 	mov	r17,r4
  80dc20:	380d883a 	mov	r6,r7
  80dc24:	1009883a 	mov	r4,r2
  80dc28:	dfc00215 	stw	ra,8(sp)
  80dc2c:	80000015 	stw	zero,0(r16)
  80dc30:	080f9600 	call	80f960 <lseek>
  80dc34:	00ffffc4 	movi	r3,-1
  80dc38:	10c00526 	beq	r2,r3,80dc50 <_lseek_r+0x50>
  80dc3c:	dfc00217 	ldw	ra,8(sp)
  80dc40:	dc400117 	ldw	r17,4(sp)
  80dc44:	dc000017 	ldw	r16,0(sp)
  80dc48:	dec00304 	addi	sp,sp,12
  80dc4c:	f800283a 	ret
  80dc50:	80c00017 	ldw	r3,0(r16)
  80dc54:	183ff926 	beq	r3,zero,80dc3c <__alt_data_end+0xff80dc3c>
  80dc58:	88c00015 	stw	r3,0(r17)
  80dc5c:	003ff706 	br	80dc3c <__alt_data_end+0xff80dc3c>

0080dc60 <_read_r>:
  80dc60:	defffd04 	addi	sp,sp,-12
  80dc64:	2805883a 	mov	r2,r5
  80dc68:	dc000015 	stw	r16,0(sp)
  80dc6c:	04002074 	movhi	r16,129
  80dc70:	dc400115 	stw	r17,4(sp)
  80dc74:	300b883a 	mov	r5,r6
  80dc78:	84162204 	addi	r16,r16,22664
  80dc7c:	2023883a 	mov	r17,r4
  80dc80:	380d883a 	mov	r6,r7
  80dc84:	1009883a 	mov	r4,r2
  80dc88:	dfc00215 	stw	ra,8(sp)
  80dc8c:	80000015 	stw	zero,0(r16)
  80dc90:	080fb340 	call	80fb34 <read>
  80dc94:	00ffffc4 	movi	r3,-1
  80dc98:	10c00526 	beq	r2,r3,80dcb0 <_read_r+0x50>
  80dc9c:	dfc00217 	ldw	ra,8(sp)
  80dca0:	dc400117 	ldw	r17,4(sp)
  80dca4:	dc000017 	ldw	r16,0(sp)
  80dca8:	dec00304 	addi	sp,sp,12
  80dcac:	f800283a 	ret
  80dcb0:	80c00017 	ldw	r3,0(r16)
  80dcb4:	183ff926 	beq	r3,zero,80dc9c <__alt_data_end+0xff80dc9c>
  80dcb8:	88c00015 	stw	r3,0(r17)
  80dcbc:	003ff706 	br	80dc9c <__alt_data_end+0xff80dc9c>

0080dcc0 <__swbuf_r>:
  80dcc0:	defffb04 	addi	sp,sp,-20
  80dcc4:	dcc00315 	stw	r19,12(sp)
  80dcc8:	dc800215 	stw	r18,8(sp)
  80dccc:	dc000015 	stw	r16,0(sp)
  80dcd0:	dfc00415 	stw	ra,16(sp)
  80dcd4:	dc400115 	stw	r17,4(sp)
  80dcd8:	2025883a 	mov	r18,r4
  80dcdc:	2827883a 	mov	r19,r5
  80dce0:	3021883a 	mov	r16,r6
  80dce4:	20000226 	beq	r4,zero,80dcf0 <__swbuf_r+0x30>
  80dce8:	20800e17 	ldw	r2,56(r4)
  80dcec:	10004226 	beq	r2,zero,80ddf8 <__swbuf_r+0x138>
  80dcf0:	80800617 	ldw	r2,24(r16)
  80dcf4:	8100030b 	ldhu	r4,12(r16)
  80dcf8:	80800215 	stw	r2,8(r16)
  80dcfc:	2080020c 	andi	r2,r4,8
  80dd00:	10003626 	beq	r2,zero,80dddc <__swbuf_r+0x11c>
  80dd04:	80c00417 	ldw	r3,16(r16)
  80dd08:	18003426 	beq	r3,zero,80dddc <__swbuf_r+0x11c>
  80dd0c:	2088000c 	andi	r2,r4,8192
  80dd10:	9c403fcc 	andi	r17,r19,255
  80dd14:	10001a26 	beq	r2,zero,80dd80 <__swbuf_r+0xc0>
  80dd18:	80800017 	ldw	r2,0(r16)
  80dd1c:	81000517 	ldw	r4,20(r16)
  80dd20:	10c7c83a 	sub	r3,r2,r3
  80dd24:	1900200e 	bge	r3,r4,80dda8 <__swbuf_r+0xe8>
  80dd28:	18c00044 	addi	r3,r3,1
  80dd2c:	81000217 	ldw	r4,8(r16)
  80dd30:	11400044 	addi	r5,r2,1
  80dd34:	81400015 	stw	r5,0(r16)
  80dd38:	213fffc4 	addi	r4,r4,-1
  80dd3c:	81000215 	stw	r4,8(r16)
  80dd40:	14c00005 	stb	r19,0(r2)
  80dd44:	80800517 	ldw	r2,20(r16)
  80dd48:	10c01e26 	beq	r2,r3,80ddc4 <__swbuf_r+0x104>
  80dd4c:	8080030b 	ldhu	r2,12(r16)
  80dd50:	1080004c 	andi	r2,r2,1
  80dd54:	10000226 	beq	r2,zero,80dd60 <__swbuf_r+0xa0>
  80dd58:	00800284 	movi	r2,10
  80dd5c:	88801926 	beq	r17,r2,80ddc4 <__swbuf_r+0x104>
  80dd60:	8805883a 	mov	r2,r17
  80dd64:	dfc00417 	ldw	ra,16(sp)
  80dd68:	dcc00317 	ldw	r19,12(sp)
  80dd6c:	dc800217 	ldw	r18,8(sp)
  80dd70:	dc400117 	ldw	r17,4(sp)
  80dd74:	dc000017 	ldw	r16,0(sp)
  80dd78:	dec00504 	addi	sp,sp,20
  80dd7c:	f800283a 	ret
  80dd80:	81401917 	ldw	r5,100(r16)
  80dd84:	00b7ffc4 	movi	r2,-8193
  80dd88:	21080014 	ori	r4,r4,8192
  80dd8c:	2884703a 	and	r2,r5,r2
  80dd90:	80801915 	stw	r2,100(r16)
  80dd94:	80800017 	ldw	r2,0(r16)
  80dd98:	8100030d 	sth	r4,12(r16)
  80dd9c:	81000517 	ldw	r4,20(r16)
  80dda0:	10c7c83a 	sub	r3,r2,r3
  80dda4:	193fe016 	blt	r3,r4,80dd28 <__alt_data_end+0xff80dd28>
  80dda8:	800b883a 	mov	r5,r16
  80ddac:	9009883a 	mov	r4,r18
  80ddb0:	0808a4c0 	call	808a4c <_fflush_r>
  80ddb4:	1000071e 	bne	r2,zero,80ddd4 <__swbuf_r+0x114>
  80ddb8:	80800017 	ldw	r2,0(r16)
  80ddbc:	00c00044 	movi	r3,1
  80ddc0:	003fda06 	br	80dd2c <__alt_data_end+0xff80dd2c>
  80ddc4:	800b883a 	mov	r5,r16
  80ddc8:	9009883a 	mov	r4,r18
  80ddcc:	0808a4c0 	call	808a4c <_fflush_r>
  80ddd0:	103fe326 	beq	r2,zero,80dd60 <__alt_data_end+0xff80dd60>
  80ddd4:	00bfffc4 	movi	r2,-1
  80ddd8:	003fe206 	br	80dd64 <__alt_data_end+0xff80dd64>
  80dddc:	800b883a 	mov	r5,r16
  80dde0:	9009883a 	mov	r4,r18
  80dde4:	0806e540 	call	806e54 <__swsetup_r>
  80dde8:	103ffa1e 	bne	r2,zero,80ddd4 <__alt_data_end+0xff80ddd4>
  80ddec:	8100030b 	ldhu	r4,12(r16)
  80ddf0:	80c00417 	ldw	r3,16(r16)
  80ddf4:	003fc506 	br	80dd0c <__alt_data_end+0xff80dd0c>
  80ddf8:	0808e280 	call	808e28 <__sinit>
  80ddfc:	003fbc06 	br	80dcf0 <__alt_data_end+0xff80dcf0>

0080de00 <__swbuf>:
  80de00:	00802074 	movhi	r2,129
  80de04:	108f5204 	addi	r2,r2,15688
  80de08:	280d883a 	mov	r6,r5
  80de0c:	200b883a 	mov	r5,r4
  80de10:	11000017 	ldw	r4,0(r2)
  80de14:	080dcc01 	jmpi	80dcc0 <__swbuf_r>

0080de18 <_wcrtomb_r>:
  80de18:	defff604 	addi	sp,sp,-40
  80de1c:	00802074 	movhi	r2,129
  80de20:	dc800815 	stw	r18,32(sp)
  80de24:	dc400715 	stw	r17,28(sp)
  80de28:	dc000615 	stw	r16,24(sp)
  80de2c:	108f5604 	addi	r2,r2,15704
  80de30:	dfc00915 	stw	ra,36(sp)
  80de34:	2021883a 	mov	r16,r4
  80de38:	3823883a 	mov	r17,r7
  80de3c:	14800017 	ldw	r18,0(r2)
  80de40:	28001426 	beq	r5,zero,80de94 <_wcrtomb_r+0x7c>
  80de44:	d9400415 	stw	r5,16(sp)
  80de48:	d9800515 	stw	r6,20(sp)
  80de4c:	080996c0 	call	80996c <__locale_charset>
  80de50:	d9800517 	ldw	r6,20(sp)
  80de54:	d9400417 	ldw	r5,16(sp)
  80de58:	100f883a 	mov	r7,r2
  80de5c:	dc400015 	stw	r17,0(sp)
  80de60:	8009883a 	mov	r4,r16
  80de64:	903ee83a 	callr	r18
  80de68:	00ffffc4 	movi	r3,-1
  80de6c:	10c0031e 	bne	r2,r3,80de7c <_wcrtomb_r+0x64>
  80de70:	88000015 	stw	zero,0(r17)
  80de74:	00c02284 	movi	r3,138
  80de78:	80c00015 	stw	r3,0(r16)
  80de7c:	dfc00917 	ldw	ra,36(sp)
  80de80:	dc800817 	ldw	r18,32(sp)
  80de84:	dc400717 	ldw	r17,28(sp)
  80de88:	dc000617 	ldw	r16,24(sp)
  80de8c:	dec00a04 	addi	sp,sp,40
  80de90:	f800283a 	ret
  80de94:	080996c0 	call	80996c <__locale_charset>
  80de98:	100f883a 	mov	r7,r2
  80de9c:	dc400015 	stw	r17,0(sp)
  80dea0:	000d883a 	mov	r6,zero
  80dea4:	d9400104 	addi	r5,sp,4
  80dea8:	8009883a 	mov	r4,r16
  80deac:	903ee83a 	callr	r18
  80deb0:	003fed06 	br	80de68 <__alt_data_end+0xff80de68>

0080deb4 <wcrtomb>:
  80deb4:	defff604 	addi	sp,sp,-40
  80deb8:	00802074 	movhi	r2,129
  80debc:	dc800615 	stw	r18,24(sp)
  80dec0:	dc400515 	stw	r17,20(sp)
  80dec4:	108f5204 	addi	r2,r2,15688
  80dec8:	dfc00915 	stw	ra,36(sp)
  80decc:	dd000815 	stw	r20,32(sp)
  80ded0:	dcc00715 	stw	r19,28(sp)
  80ded4:	dc000415 	stw	r16,16(sp)
  80ded8:	3025883a 	mov	r18,r6
  80dedc:	14400017 	ldw	r17,0(r2)
  80dee0:	20001926 	beq	r4,zero,80df48 <wcrtomb+0x94>
  80dee4:	00802074 	movhi	r2,129
  80dee8:	108f5604 	addi	r2,r2,15704
  80deec:	15000017 	ldw	r20,0(r2)
  80def0:	2021883a 	mov	r16,r4
  80def4:	2827883a 	mov	r19,r5
  80def8:	080996c0 	call	80996c <__locale_charset>
  80defc:	100f883a 	mov	r7,r2
  80df00:	dc800015 	stw	r18,0(sp)
  80df04:	980d883a 	mov	r6,r19
  80df08:	800b883a 	mov	r5,r16
  80df0c:	8809883a 	mov	r4,r17
  80df10:	a03ee83a 	callr	r20
  80df14:	00ffffc4 	movi	r3,-1
  80df18:	10c0031e 	bne	r2,r3,80df28 <wcrtomb+0x74>
  80df1c:	90000015 	stw	zero,0(r18)
  80df20:	00c02284 	movi	r3,138
  80df24:	88c00015 	stw	r3,0(r17)
  80df28:	dfc00917 	ldw	ra,36(sp)
  80df2c:	dd000817 	ldw	r20,32(sp)
  80df30:	dcc00717 	ldw	r19,28(sp)
  80df34:	dc800617 	ldw	r18,24(sp)
  80df38:	dc400517 	ldw	r17,20(sp)
  80df3c:	dc000417 	ldw	r16,16(sp)
  80df40:	dec00a04 	addi	sp,sp,40
  80df44:	f800283a 	ret
  80df48:	00802074 	movhi	r2,129
  80df4c:	108f5604 	addi	r2,r2,15704
  80df50:	14000017 	ldw	r16,0(r2)
  80df54:	080996c0 	call	80996c <__locale_charset>
  80df58:	100f883a 	mov	r7,r2
  80df5c:	dc800015 	stw	r18,0(sp)
  80df60:	000d883a 	mov	r6,zero
  80df64:	d9400104 	addi	r5,sp,4
  80df68:	8809883a 	mov	r4,r17
  80df6c:	803ee83a 	callr	r16
  80df70:	003fe806 	br	80df14 <__alt_data_end+0xff80df14>

0080df74 <__ascii_wctomb>:
  80df74:	28000526 	beq	r5,zero,80df8c <__ascii_wctomb+0x18>
  80df78:	00803fc4 	movi	r2,255
  80df7c:	11800536 	bltu	r2,r6,80df94 <__ascii_wctomb+0x20>
  80df80:	29800005 	stb	r6,0(r5)
  80df84:	00800044 	movi	r2,1
  80df88:	f800283a 	ret
  80df8c:	0005883a 	mov	r2,zero
  80df90:	f800283a 	ret
  80df94:	00802284 	movi	r2,138
  80df98:	20800015 	stw	r2,0(r4)
  80df9c:	00bfffc4 	movi	r2,-1
  80dfa0:	f800283a 	ret

0080dfa4 <_wctomb_r>:
  80dfa4:	00802074 	movhi	r2,129
  80dfa8:	defff904 	addi	sp,sp,-28
  80dfac:	108f5604 	addi	r2,r2,15704
  80dfb0:	dfc00615 	stw	ra,24(sp)
  80dfb4:	dc400515 	stw	r17,20(sp)
  80dfb8:	dc000415 	stw	r16,16(sp)
  80dfbc:	3823883a 	mov	r17,r7
  80dfc0:	14000017 	ldw	r16,0(r2)
  80dfc4:	d9000115 	stw	r4,4(sp)
  80dfc8:	d9400215 	stw	r5,8(sp)
  80dfcc:	d9800315 	stw	r6,12(sp)
  80dfd0:	080996c0 	call	80996c <__locale_charset>
  80dfd4:	d9800317 	ldw	r6,12(sp)
  80dfd8:	d9400217 	ldw	r5,8(sp)
  80dfdc:	d9000117 	ldw	r4,4(sp)
  80dfe0:	100f883a 	mov	r7,r2
  80dfe4:	dc400015 	stw	r17,0(sp)
  80dfe8:	803ee83a 	callr	r16
  80dfec:	dfc00617 	ldw	ra,24(sp)
  80dff0:	dc400517 	ldw	r17,20(sp)
  80dff4:	dc000417 	ldw	r16,16(sp)
  80dff8:	dec00704 	addi	sp,sp,28
  80dffc:	f800283a 	ret

0080e000 <__udivdi3>:
  80e000:	defff504 	addi	sp,sp,-44
  80e004:	dcc00415 	stw	r19,16(sp)
  80e008:	dc000115 	stw	r16,4(sp)
  80e00c:	dfc00a15 	stw	ra,40(sp)
  80e010:	df000915 	stw	fp,36(sp)
  80e014:	ddc00815 	stw	r23,32(sp)
  80e018:	dd800715 	stw	r22,28(sp)
  80e01c:	dd400615 	stw	r21,24(sp)
  80e020:	dd000515 	stw	r20,20(sp)
  80e024:	dc800315 	stw	r18,12(sp)
  80e028:	dc400215 	stw	r17,8(sp)
  80e02c:	2027883a 	mov	r19,r4
  80e030:	2821883a 	mov	r16,r5
  80e034:	3800411e 	bne	r7,zero,80e13c <__udivdi3+0x13c>
  80e038:	3023883a 	mov	r17,r6
  80e03c:	2025883a 	mov	r18,r4
  80e040:	2980522e 	bgeu	r5,r6,80e18c <__udivdi3+0x18c>
  80e044:	00bfffd4 	movui	r2,65535
  80e048:	282d883a 	mov	r22,r5
  80e04c:	1180a836 	bltu	r2,r6,80e2f0 <__udivdi3+0x2f0>
  80e050:	00803fc4 	movi	r2,255
  80e054:	1185803a 	cmpltu	r2,r2,r6
  80e058:	100490fa 	slli	r2,r2,3
  80e05c:	3086d83a 	srl	r3,r6,r2
  80e060:	01002074 	movhi	r4,129
  80e064:	2107e804 	addi	r4,r4,8096
  80e068:	20c7883a 	add	r3,r4,r3
  80e06c:	18c00003 	ldbu	r3,0(r3)
  80e070:	1885883a 	add	r2,r3,r2
  80e074:	00c00804 	movi	r3,32
  80e078:	1887c83a 	sub	r3,r3,r2
  80e07c:	18000526 	beq	r3,zero,80e094 <__udivdi3+0x94>
  80e080:	80e0983a 	sll	r16,r16,r3
  80e084:	9884d83a 	srl	r2,r19,r2
  80e088:	30e2983a 	sll	r17,r6,r3
  80e08c:	98e4983a 	sll	r18,r19,r3
  80e090:	142cb03a 	or	r22,r2,r16
  80e094:	882ad43a 	srli	r21,r17,16
  80e098:	b009883a 	mov	r4,r22
  80e09c:	8d3fffcc 	andi	r20,r17,65535
  80e0a0:	a80b883a 	mov	r5,r21
  80e0a4:	08029240 	call	802924 <__umodsi3>
  80e0a8:	b009883a 	mov	r4,r22
  80e0ac:	a80b883a 	mov	r5,r21
  80e0b0:	1027883a 	mov	r19,r2
  80e0b4:	08028c00 	call	8028c0 <__udivsi3>
  80e0b8:	102d883a 	mov	r22,r2
  80e0bc:	9826943a 	slli	r19,r19,16
  80e0c0:	9004d43a 	srli	r2,r18,16
  80e0c4:	a5a1383a 	mul	r16,r20,r22
  80e0c8:	14c4b03a 	or	r2,r2,r19
  80e0cc:	1400052e 	bgeu	r2,r16,80e0e4 <__udivdi3+0xe4>
  80e0d0:	1445883a 	add	r2,r2,r17
  80e0d4:	b0ffffc4 	addi	r3,r22,-1
  80e0d8:	14400136 	bltu	r2,r17,80e0e0 <__udivdi3+0xe0>
  80e0dc:	14012336 	bltu	r2,r16,80e56c <__udivdi3+0x56c>
  80e0e0:	182d883a 	mov	r22,r3
  80e0e4:	1421c83a 	sub	r16,r2,r16
  80e0e8:	a80b883a 	mov	r5,r21
  80e0ec:	8009883a 	mov	r4,r16
  80e0f0:	08029240 	call	802924 <__umodsi3>
  80e0f4:	1027883a 	mov	r19,r2
  80e0f8:	a80b883a 	mov	r5,r21
  80e0fc:	8009883a 	mov	r4,r16
  80e100:	08028c00 	call	8028c0 <__udivsi3>
  80e104:	9826943a 	slli	r19,r19,16
  80e108:	a0a9383a 	mul	r20,r20,r2
  80e10c:	94bfffcc 	andi	r18,r18,65535
  80e110:	94e4b03a 	or	r18,r18,r19
  80e114:	9500052e 	bgeu	r18,r20,80e12c <__udivdi3+0x12c>
  80e118:	8ca5883a 	add	r18,r17,r18
  80e11c:	10ffffc4 	addi	r3,r2,-1
  80e120:	9440f136 	bltu	r18,r17,80e4e8 <__udivdi3+0x4e8>
  80e124:	9500f02e 	bgeu	r18,r20,80e4e8 <__udivdi3+0x4e8>
  80e128:	10bfff84 	addi	r2,r2,-2
  80e12c:	b00c943a 	slli	r6,r22,16
  80e130:	0007883a 	mov	r3,zero
  80e134:	3084b03a 	or	r2,r6,r2
  80e138:	00005906 	br	80e2a0 <__udivdi3+0x2a0>
  80e13c:	29c05636 	bltu	r5,r7,80e298 <__udivdi3+0x298>
  80e140:	00bfffd4 	movui	r2,65535
  80e144:	11c0622e 	bgeu	r2,r7,80e2d0 <__udivdi3+0x2d0>
  80e148:	00804034 	movhi	r2,256
  80e14c:	10bfffc4 	addi	r2,r2,-1
  80e150:	11c0ee36 	bltu	r2,r7,80e50c <__udivdi3+0x50c>
  80e154:	00800404 	movi	r2,16
  80e158:	3886d83a 	srl	r3,r7,r2
  80e15c:	01002074 	movhi	r4,129
  80e160:	2107e804 	addi	r4,r4,8096
  80e164:	20c7883a 	add	r3,r4,r3
  80e168:	18c00003 	ldbu	r3,0(r3)
  80e16c:	05400804 	movi	r21,32
  80e170:	1885883a 	add	r2,r3,r2
  80e174:	a8abc83a 	sub	r21,r21,r2
  80e178:	a800621e 	bne	r21,zero,80e304 <__udivdi3+0x304>
  80e17c:	3c00e936 	bltu	r7,r16,80e524 <__udivdi3+0x524>
  80e180:	9985403a 	cmpgeu	r2,r19,r6
  80e184:	0007883a 	mov	r3,zero
  80e188:	00004506 	br	80e2a0 <__udivdi3+0x2a0>
  80e18c:	3000041e 	bne	r6,zero,80e1a0 <__udivdi3+0x1a0>
  80e190:	000b883a 	mov	r5,zero
  80e194:	01000044 	movi	r4,1
  80e198:	08028c00 	call	8028c0 <__udivsi3>
  80e19c:	1023883a 	mov	r17,r2
  80e1a0:	00bfffd4 	movui	r2,65535
  80e1a4:	14404e2e 	bgeu	r2,r17,80e2e0 <__udivdi3+0x2e0>
  80e1a8:	00804034 	movhi	r2,256
  80e1ac:	10bfffc4 	addi	r2,r2,-1
  80e1b0:	1440d836 	bltu	r2,r17,80e514 <__udivdi3+0x514>
  80e1b4:	00800404 	movi	r2,16
  80e1b8:	8886d83a 	srl	r3,r17,r2
  80e1bc:	01002074 	movhi	r4,129
  80e1c0:	2107e804 	addi	r4,r4,8096
  80e1c4:	20c7883a 	add	r3,r4,r3
  80e1c8:	18c00003 	ldbu	r3,0(r3)
  80e1cc:	1885883a 	add	r2,r3,r2
  80e1d0:	00c00804 	movi	r3,32
  80e1d4:	1887c83a 	sub	r3,r3,r2
  80e1d8:	18008f1e 	bne	r3,zero,80e418 <__udivdi3+0x418>
  80e1dc:	882ad43a 	srli	r21,r17,16
  80e1e0:	8461c83a 	sub	r16,r16,r17
  80e1e4:	8d3fffcc 	andi	r20,r17,65535
  80e1e8:	00c00044 	movi	r3,1
  80e1ec:	8009883a 	mov	r4,r16
  80e1f0:	a80b883a 	mov	r5,r21
  80e1f4:	d8c00015 	stw	r3,0(sp)
  80e1f8:	08029240 	call	802924 <__umodsi3>
  80e1fc:	8009883a 	mov	r4,r16
  80e200:	a80b883a 	mov	r5,r21
  80e204:	1027883a 	mov	r19,r2
  80e208:	08028c00 	call	8028c0 <__udivsi3>
  80e20c:	9826943a 	slli	r19,r19,16
  80e210:	9008d43a 	srli	r4,r18,16
  80e214:	1521383a 	mul	r16,r2,r20
  80e218:	102d883a 	mov	r22,r2
  80e21c:	24c8b03a 	or	r4,r4,r19
  80e220:	d8c00017 	ldw	r3,0(sp)
  80e224:	2400052e 	bgeu	r4,r16,80e23c <__udivdi3+0x23c>
  80e228:	2449883a 	add	r4,r4,r17
  80e22c:	b0bfffc4 	addi	r2,r22,-1
  80e230:	24400136 	bltu	r4,r17,80e238 <__udivdi3+0x238>
  80e234:	2400ca36 	bltu	r4,r16,80e560 <__udivdi3+0x560>
  80e238:	102d883a 	mov	r22,r2
  80e23c:	2421c83a 	sub	r16,r4,r16
  80e240:	a80b883a 	mov	r5,r21
  80e244:	8009883a 	mov	r4,r16
  80e248:	d8c00015 	stw	r3,0(sp)
  80e24c:	08029240 	call	802924 <__umodsi3>
  80e250:	1027883a 	mov	r19,r2
  80e254:	a80b883a 	mov	r5,r21
  80e258:	8009883a 	mov	r4,r16
  80e25c:	08028c00 	call	8028c0 <__udivsi3>
  80e260:	9826943a 	slli	r19,r19,16
  80e264:	1529383a 	mul	r20,r2,r20
  80e268:	94bfffcc 	andi	r18,r18,65535
  80e26c:	94e4b03a 	or	r18,r18,r19
  80e270:	d8c00017 	ldw	r3,0(sp)
  80e274:	9500052e 	bgeu	r18,r20,80e28c <__udivdi3+0x28c>
  80e278:	8ca5883a 	add	r18,r17,r18
  80e27c:	113fffc4 	addi	r4,r2,-1
  80e280:	94409736 	bltu	r18,r17,80e4e0 <__udivdi3+0x4e0>
  80e284:	9500962e 	bgeu	r18,r20,80e4e0 <__udivdi3+0x4e0>
  80e288:	10bfff84 	addi	r2,r2,-2
  80e28c:	b00c943a 	slli	r6,r22,16
  80e290:	3084b03a 	or	r2,r6,r2
  80e294:	00000206 	br	80e2a0 <__udivdi3+0x2a0>
  80e298:	0007883a 	mov	r3,zero
  80e29c:	0005883a 	mov	r2,zero
  80e2a0:	dfc00a17 	ldw	ra,40(sp)
  80e2a4:	df000917 	ldw	fp,36(sp)
  80e2a8:	ddc00817 	ldw	r23,32(sp)
  80e2ac:	dd800717 	ldw	r22,28(sp)
  80e2b0:	dd400617 	ldw	r21,24(sp)
  80e2b4:	dd000517 	ldw	r20,20(sp)
  80e2b8:	dcc00417 	ldw	r19,16(sp)
  80e2bc:	dc800317 	ldw	r18,12(sp)
  80e2c0:	dc400217 	ldw	r17,8(sp)
  80e2c4:	dc000117 	ldw	r16,4(sp)
  80e2c8:	dec00b04 	addi	sp,sp,44
  80e2cc:	f800283a 	ret
  80e2d0:	00803fc4 	movi	r2,255
  80e2d4:	11c5803a 	cmpltu	r2,r2,r7
  80e2d8:	100490fa 	slli	r2,r2,3
  80e2dc:	003f9e06 	br	80e158 <__alt_data_end+0xff80e158>
  80e2e0:	00803fc4 	movi	r2,255
  80e2e4:	1445803a 	cmpltu	r2,r2,r17
  80e2e8:	100490fa 	slli	r2,r2,3
  80e2ec:	003fb206 	br	80e1b8 <__alt_data_end+0xff80e1b8>
  80e2f0:	00804034 	movhi	r2,256
  80e2f4:	10bfffc4 	addi	r2,r2,-1
  80e2f8:	11808836 	bltu	r2,r6,80e51c <__udivdi3+0x51c>
  80e2fc:	00800404 	movi	r2,16
  80e300:	003f5606 	br	80e05c <__alt_data_end+0xff80e05c>
  80e304:	30aed83a 	srl	r23,r6,r2
  80e308:	3d4e983a 	sll	r7,r7,r21
  80e30c:	80acd83a 	srl	r22,r16,r2
  80e310:	9884d83a 	srl	r2,r19,r2
  80e314:	3deeb03a 	or	r23,r7,r23
  80e318:	b824d43a 	srli	r18,r23,16
  80e31c:	8560983a 	sll	r16,r16,r21
  80e320:	b009883a 	mov	r4,r22
  80e324:	900b883a 	mov	r5,r18
  80e328:	3568983a 	sll	r20,r6,r21
  80e32c:	1420b03a 	or	r16,r2,r16
  80e330:	08029240 	call	802924 <__umodsi3>
  80e334:	b009883a 	mov	r4,r22
  80e338:	900b883a 	mov	r5,r18
  80e33c:	1023883a 	mov	r17,r2
  80e340:	08028c00 	call	8028c0 <__udivsi3>
  80e344:	8808943a 	slli	r4,r17,16
  80e348:	bf3fffcc 	andi	fp,r23,65535
  80e34c:	8006d43a 	srli	r3,r16,16
  80e350:	e0a3383a 	mul	r17,fp,r2
  80e354:	100d883a 	mov	r6,r2
  80e358:	1906b03a 	or	r3,r3,r4
  80e35c:	1c40042e 	bgeu	r3,r17,80e370 <__udivdi3+0x370>
  80e360:	1dc7883a 	add	r3,r3,r23
  80e364:	10bfffc4 	addi	r2,r2,-1
  80e368:	1dc0752e 	bgeu	r3,r23,80e540 <__udivdi3+0x540>
  80e36c:	100d883a 	mov	r6,r2
  80e370:	1c63c83a 	sub	r17,r3,r17
  80e374:	900b883a 	mov	r5,r18
  80e378:	8809883a 	mov	r4,r17
  80e37c:	d9800015 	stw	r6,0(sp)
  80e380:	08029240 	call	802924 <__umodsi3>
  80e384:	102d883a 	mov	r22,r2
  80e388:	8809883a 	mov	r4,r17
  80e38c:	900b883a 	mov	r5,r18
  80e390:	08028c00 	call	8028c0 <__udivsi3>
  80e394:	b02c943a 	slli	r22,r22,16
  80e398:	e089383a 	mul	r4,fp,r2
  80e39c:	843fffcc 	andi	r16,r16,65535
  80e3a0:	85a0b03a 	or	r16,r16,r22
  80e3a4:	d9800017 	ldw	r6,0(sp)
  80e3a8:	8100042e 	bgeu	r16,r4,80e3bc <__udivdi3+0x3bc>
  80e3ac:	85e1883a 	add	r16,r16,r23
  80e3b0:	10ffffc4 	addi	r3,r2,-1
  80e3b4:	85c05e2e 	bgeu	r16,r23,80e530 <__udivdi3+0x530>
  80e3b8:	1805883a 	mov	r2,r3
  80e3bc:	300c943a 	slli	r6,r6,16
  80e3c0:	a17fffcc 	andi	r5,r20,65535
  80e3c4:	a028d43a 	srli	r20,r20,16
  80e3c8:	3084b03a 	or	r2,r6,r2
  80e3cc:	10ffffcc 	andi	r3,r2,65535
  80e3d0:	100cd43a 	srli	r6,r2,16
  80e3d4:	194f383a 	mul	r7,r3,r5
  80e3d8:	1d07383a 	mul	r3,r3,r20
  80e3dc:	314b383a 	mul	r5,r6,r5
  80e3e0:	3810d43a 	srli	r8,r7,16
  80e3e4:	8121c83a 	sub	r16,r16,r4
  80e3e8:	1947883a 	add	r3,r3,r5
  80e3ec:	40c7883a 	add	r3,r8,r3
  80e3f0:	350d383a 	mul	r6,r6,r20
  80e3f4:	1940022e 	bgeu	r3,r5,80e400 <__udivdi3+0x400>
  80e3f8:	01000074 	movhi	r4,1
  80e3fc:	310d883a 	add	r6,r6,r4
  80e400:	1828d43a 	srli	r20,r3,16
  80e404:	a18d883a 	add	r6,r20,r6
  80e408:	81803e36 	bltu	r16,r6,80e504 <__udivdi3+0x504>
  80e40c:	81803826 	beq	r16,r6,80e4f0 <__udivdi3+0x4f0>
  80e410:	0007883a 	mov	r3,zero
  80e414:	003fa206 	br	80e2a0 <__alt_data_end+0xff80e2a0>
  80e418:	88e2983a 	sll	r17,r17,r3
  80e41c:	80a8d83a 	srl	r20,r16,r2
  80e420:	80e0983a 	sll	r16,r16,r3
  80e424:	882ad43a 	srli	r21,r17,16
  80e428:	9884d83a 	srl	r2,r19,r2
  80e42c:	a009883a 	mov	r4,r20
  80e430:	a80b883a 	mov	r5,r21
  80e434:	142eb03a 	or	r23,r2,r16
  80e438:	98e4983a 	sll	r18,r19,r3
  80e43c:	08029240 	call	802924 <__umodsi3>
  80e440:	a009883a 	mov	r4,r20
  80e444:	a80b883a 	mov	r5,r21
  80e448:	1021883a 	mov	r16,r2
  80e44c:	08028c00 	call	8028c0 <__udivsi3>
  80e450:	1039883a 	mov	fp,r2
  80e454:	8d3fffcc 	andi	r20,r17,65535
  80e458:	8020943a 	slli	r16,r16,16
  80e45c:	b804d43a 	srli	r2,r23,16
  80e460:	a72d383a 	mul	r22,r20,fp
  80e464:	1404b03a 	or	r2,r2,r16
  80e468:	1580062e 	bgeu	r2,r22,80e484 <__udivdi3+0x484>
  80e46c:	1445883a 	add	r2,r2,r17
  80e470:	e0ffffc4 	addi	r3,fp,-1
  80e474:	14403836 	bltu	r2,r17,80e558 <__udivdi3+0x558>
  80e478:	1580372e 	bgeu	r2,r22,80e558 <__udivdi3+0x558>
  80e47c:	e73fff84 	addi	fp,fp,-2
  80e480:	1445883a 	add	r2,r2,r17
  80e484:	15adc83a 	sub	r22,r2,r22
  80e488:	a80b883a 	mov	r5,r21
  80e48c:	b009883a 	mov	r4,r22
  80e490:	08029240 	call	802924 <__umodsi3>
  80e494:	1027883a 	mov	r19,r2
  80e498:	b009883a 	mov	r4,r22
  80e49c:	a80b883a 	mov	r5,r21
  80e4a0:	08028c00 	call	8028c0 <__udivsi3>
  80e4a4:	9826943a 	slli	r19,r19,16
  80e4a8:	a0a1383a 	mul	r16,r20,r2
  80e4ac:	b93fffcc 	andi	r4,r23,65535
  80e4b0:	24c8b03a 	or	r4,r4,r19
  80e4b4:	2400062e 	bgeu	r4,r16,80e4d0 <__udivdi3+0x4d0>
  80e4b8:	2449883a 	add	r4,r4,r17
  80e4bc:	10ffffc4 	addi	r3,r2,-1
  80e4c0:	24402336 	bltu	r4,r17,80e550 <__udivdi3+0x550>
  80e4c4:	2400222e 	bgeu	r4,r16,80e550 <__udivdi3+0x550>
  80e4c8:	10bfff84 	addi	r2,r2,-2
  80e4cc:	2449883a 	add	r4,r4,r17
  80e4d0:	e038943a 	slli	fp,fp,16
  80e4d4:	2421c83a 	sub	r16,r4,r16
  80e4d8:	e086b03a 	or	r3,fp,r2
  80e4dc:	003f4306 	br	80e1ec <__alt_data_end+0xff80e1ec>
  80e4e0:	2005883a 	mov	r2,r4
  80e4e4:	003f6906 	br	80e28c <__alt_data_end+0xff80e28c>
  80e4e8:	1805883a 	mov	r2,r3
  80e4ec:	003f0f06 	br	80e12c <__alt_data_end+0xff80e12c>
  80e4f0:	1806943a 	slli	r3,r3,16
  80e4f4:	9d66983a 	sll	r19,r19,r21
  80e4f8:	39ffffcc 	andi	r7,r7,65535
  80e4fc:	19c7883a 	add	r3,r3,r7
  80e500:	98ffc32e 	bgeu	r19,r3,80e410 <__alt_data_end+0xff80e410>
  80e504:	10bfffc4 	addi	r2,r2,-1
  80e508:	003fc106 	br	80e410 <__alt_data_end+0xff80e410>
  80e50c:	00800604 	movi	r2,24
  80e510:	003f1106 	br	80e158 <__alt_data_end+0xff80e158>
  80e514:	00800604 	movi	r2,24
  80e518:	003f2706 	br	80e1b8 <__alt_data_end+0xff80e1b8>
  80e51c:	00800604 	movi	r2,24
  80e520:	003ece06 	br	80e05c <__alt_data_end+0xff80e05c>
  80e524:	0007883a 	mov	r3,zero
  80e528:	00800044 	movi	r2,1
  80e52c:	003f5c06 	br	80e2a0 <__alt_data_end+0xff80e2a0>
  80e530:	813fa12e 	bgeu	r16,r4,80e3b8 <__alt_data_end+0xff80e3b8>
  80e534:	10bfff84 	addi	r2,r2,-2
  80e538:	85e1883a 	add	r16,r16,r23
  80e53c:	003f9f06 	br	80e3bc <__alt_data_end+0xff80e3bc>
  80e540:	1c7f8a2e 	bgeu	r3,r17,80e36c <__alt_data_end+0xff80e36c>
  80e544:	31bfff84 	addi	r6,r6,-2
  80e548:	1dc7883a 	add	r3,r3,r23
  80e54c:	003f8806 	br	80e370 <__alt_data_end+0xff80e370>
  80e550:	1805883a 	mov	r2,r3
  80e554:	003fde06 	br	80e4d0 <__alt_data_end+0xff80e4d0>
  80e558:	1839883a 	mov	fp,r3
  80e55c:	003fc906 	br	80e484 <__alt_data_end+0xff80e484>
  80e560:	b5bfff84 	addi	r22,r22,-2
  80e564:	2449883a 	add	r4,r4,r17
  80e568:	003f3406 	br	80e23c <__alt_data_end+0xff80e23c>
  80e56c:	b5bfff84 	addi	r22,r22,-2
  80e570:	1445883a 	add	r2,r2,r17
  80e574:	003edb06 	br	80e0e4 <__alt_data_end+0xff80e0e4>

0080e578 <__umoddi3>:
  80e578:	defff404 	addi	sp,sp,-48
  80e57c:	df000a15 	stw	fp,40(sp)
  80e580:	dc400315 	stw	r17,12(sp)
  80e584:	dc000215 	stw	r16,8(sp)
  80e588:	dfc00b15 	stw	ra,44(sp)
  80e58c:	ddc00915 	stw	r23,36(sp)
  80e590:	dd800815 	stw	r22,32(sp)
  80e594:	dd400715 	stw	r21,28(sp)
  80e598:	dd000615 	stw	r20,24(sp)
  80e59c:	dcc00515 	stw	r19,20(sp)
  80e5a0:	dc800415 	stw	r18,16(sp)
  80e5a4:	2021883a 	mov	r16,r4
  80e5a8:	2823883a 	mov	r17,r5
  80e5ac:	2839883a 	mov	fp,r5
  80e5b0:	38003c1e 	bne	r7,zero,80e6a4 <__umoddi3+0x12c>
  80e5b4:	3027883a 	mov	r19,r6
  80e5b8:	2029883a 	mov	r20,r4
  80e5bc:	2980512e 	bgeu	r5,r6,80e704 <__umoddi3+0x18c>
  80e5c0:	00bfffd4 	movui	r2,65535
  80e5c4:	11809a36 	bltu	r2,r6,80e830 <__umoddi3+0x2b8>
  80e5c8:	01003fc4 	movi	r4,255
  80e5cc:	2189803a 	cmpltu	r4,r4,r6
  80e5d0:	200890fa 	slli	r4,r4,3
  80e5d4:	3104d83a 	srl	r2,r6,r4
  80e5d8:	00c02074 	movhi	r3,129
  80e5dc:	18c7e804 	addi	r3,r3,8096
  80e5e0:	1885883a 	add	r2,r3,r2
  80e5e4:	10c00003 	ldbu	r3,0(r2)
  80e5e8:	00800804 	movi	r2,32
  80e5ec:	1909883a 	add	r4,r3,r4
  80e5f0:	1125c83a 	sub	r18,r2,r4
  80e5f4:	90000526 	beq	r18,zero,80e60c <__umoddi3+0x94>
  80e5f8:	8ca2983a 	sll	r17,r17,r18
  80e5fc:	8108d83a 	srl	r4,r16,r4
  80e600:	34a6983a 	sll	r19,r6,r18
  80e604:	84a8983a 	sll	r20,r16,r18
  80e608:	2478b03a 	or	fp,r4,r17
  80e60c:	982ed43a 	srli	r23,r19,16
  80e610:	e009883a 	mov	r4,fp
  80e614:	9dbfffcc 	andi	r22,r19,65535
  80e618:	b80b883a 	mov	r5,r23
  80e61c:	08029240 	call	802924 <__umodsi3>
  80e620:	e009883a 	mov	r4,fp
  80e624:	b80b883a 	mov	r5,r23
  80e628:	102b883a 	mov	r21,r2
  80e62c:	08028c00 	call	8028c0 <__udivsi3>
  80e630:	a806943a 	slli	r3,r21,16
  80e634:	a008d43a 	srli	r4,r20,16
  80e638:	b085383a 	mul	r2,r22,r2
  80e63c:	20c8b03a 	or	r4,r4,r3
  80e640:	2080032e 	bgeu	r4,r2,80e650 <__umoddi3+0xd8>
  80e644:	24c9883a 	add	r4,r4,r19
  80e648:	24c00136 	bltu	r4,r19,80e650 <__umoddi3+0xd8>
  80e64c:	20811036 	bltu	r4,r2,80ea90 <__umoddi3+0x518>
  80e650:	20abc83a 	sub	r21,r4,r2
  80e654:	b80b883a 	mov	r5,r23
  80e658:	a809883a 	mov	r4,r21
  80e65c:	08029240 	call	802924 <__umodsi3>
  80e660:	1023883a 	mov	r17,r2
  80e664:	b80b883a 	mov	r5,r23
  80e668:	a809883a 	mov	r4,r21
  80e66c:	08028c00 	call	8028c0 <__udivsi3>
  80e670:	8822943a 	slli	r17,r17,16
  80e674:	b085383a 	mul	r2,r22,r2
  80e678:	a0ffffcc 	andi	r3,r20,65535
  80e67c:	1c46b03a 	or	r3,r3,r17
  80e680:	1880042e 	bgeu	r3,r2,80e694 <__umoddi3+0x11c>
  80e684:	1cc7883a 	add	r3,r3,r19
  80e688:	1cc00236 	bltu	r3,r19,80e694 <__umoddi3+0x11c>
  80e68c:	1880012e 	bgeu	r3,r2,80e694 <__umoddi3+0x11c>
  80e690:	1cc7883a 	add	r3,r3,r19
  80e694:	1885c83a 	sub	r2,r3,r2
  80e698:	1484d83a 	srl	r2,r2,r18
  80e69c:	0007883a 	mov	r3,zero
  80e6a0:	00004f06 	br	80e7e0 <__umoddi3+0x268>
  80e6a4:	29c04c36 	bltu	r5,r7,80e7d8 <__umoddi3+0x260>
  80e6a8:	00bfffd4 	movui	r2,65535
  80e6ac:	11c0582e 	bgeu	r2,r7,80e810 <__umoddi3+0x298>
  80e6b0:	00804034 	movhi	r2,256
  80e6b4:	10bfffc4 	addi	r2,r2,-1
  80e6b8:	11c0e736 	bltu	r2,r7,80ea58 <__umoddi3+0x4e0>
  80e6bc:	01000404 	movi	r4,16
  80e6c0:	3904d83a 	srl	r2,r7,r4
  80e6c4:	00c02074 	movhi	r3,129
  80e6c8:	18c7e804 	addi	r3,r3,8096
  80e6cc:	1885883a 	add	r2,r3,r2
  80e6d0:	14c00003 	ldbu	r19,0(r2)
  80e6d4:	00c00804 	movi	r3,32
  80e6d8:	9927883a 	add	r19,r19,r4
  80e6dc:	1ce9c83a 	sub	r20,r3,r19
  80e6e0:	a000581e 	bne	r20,zero,80e844 <__umoddi3+0x2cc>
  80e6e4:	3c400136 	bltu	r7,r17,80e6ec <__umoddi3+0x174>
  80e6e8:	8180eb36 	bltu	r16,r6,80ea98 <__umoddi3+0x520>
  80e6ec:	8185c83a 	sub	r2,r16,r6
  80e6f0:	89e3c83a 	sub	r17,r17,r7
  80e6f4:	8089803a 	cmpltu	r4,r16,r2
  80e6f8:	8939c83a 	sub	fp,r17,r4
  80e6fc:	e007883a 	mov	r3,fp
  80e700:	00003706 	br	80e7e0 <__umoddi3+0x268>
  80e704:	3000041e 	bne	r6,zero,80e718 <__umoddi3+0x1a0>
  80e708:	000b883a 	mov	r5,zero
  80e70c:	01000044 	movi	r4,1
  80e710:	08028c00 	call	8028c0 <__udivsi3>
  80e714:	1027883a 	mov	r19,r2
  80e718:	00bfffd4 	movui	r2,65535
  80e71c:	14c0402e 	bgeu	r2,r19,80e820 <__umoddi3+0x2a8>
  80e720:	00804034 	movhi	r2,256
  80e724:	10bfffc4 	addi	r2,r2,-1
  80e728:	14c0cd36 	bltu	r2,r19,80ea60 <__umoddi3+0x4e8>
  80e72c:	00800404 	movi	r2,16
  80e730:	9886d83a 	srl	r3,r19,r2
  80e734:	01002074 	movhi	r4,129
  80e738:	2107e804 	addi	r4,r4,8096
  80e73c:	20c7883a 	add	r3,r4,r3
  80e740:	18c00003 	ldbu	r3,0(r3)
  80e744:	1887883a 	add	r3,r3,r2
  80e748:	00800804 	movi	r2,32
  80e74c:	10e5c83a 	sub	r18,r2,r3
  80e750:	9000901e 	bne	r18,zero,80e994 <__umoddi3+0x41c>
  80e754:	982cd43a 	srli	r22,r19,16
  80e758:	8ce3c83a 	sub	r17,r17,r19
  80e75c:	9d7fffcc 	andi	r21,r19,65535
  80e760:	b00b883a 	mov	r5,r22
  80e764:	8809883a 	mov	r4,r17
  80e768:	08029240 	call	802924 <__umodsi3>
  80e76c:	8809883a 	mov	r4,r17
  80e770:	b00b883a 	mov	r5,r22
  80e774:	1021883a 	mov	r16,r2
  80e778:	08028c00 	call	8028c0 <__udivsi3>
  80e77c:	8006943a 	slli	r3,r16,16
  80e780:	a008d43a 	srli	r4,r20,16
  80e784:	1545383a 	mul	r2,r2,r21
  80e788:	20c8b03a 	or	r4,r4,r3
  80e78c:	2080042e 	bgeu	r4,r2,80e7a0 <__umoddi3+0x228>
  80e790:	24c9883a 	add	r4,r4,r19
  80e794:	24c00236 	bltu	r4,r19,80e7a0 <__umoddi3+0x228>
  80e798:	2080012e 	bgeu	r4,r2,80e7a0 <__umoddi3+0x228>
  80e79c:	24c9883a 	add	r4,r4,r19
  80e7a0:	20a1c83a 	sub	r16,r4,r2
  80e7a4:	b00b883a 	mov	r5,r22
  80e7a8:	8009883a 	mov	r4,r16
  80e7ac:	08029240 	call	802924 <__umodsi3>
  80e7b0:	1023883a 	mov	r17,r2
  80e7b4:	b00b883a 	mov	r5,r22
  80e7b8:	8009883a 	mov	r4,r16
  80e7bc:	08028c00 	call	8028c0 <__udivsi3>
  80e7c0:	8822943a 	slli	r17,r17,16
  80e7c4:	1545383a 	mul	r2,r2,r21
  80e7c8:	a53fffcc 	andi	r20,r20,65535
  80e7cc:	a446b03a 	or	r3,r20,r17
  80e7d0:	18bfb02e 	bgeu	r3,r2,80e694 <__alt_data_end+0xff80e694>
  80e7d4:	003fab06 	br	80e684 <__alt_data_end+0xff80e684>
  80e7d8:	2005883a 	mov	r2,r4
  80e7dc:	2807883a 	mov	r3,r5
  80e7e0:	dfc00b17 	ldw	ra,44(sp)
  80e7e4:	df000a17 	ldw	fp,40(sp)
  80e7e8:	ddc00917 	ldw	r23,36(sp)
  80e7ec:	dd800817 	ldw	r22,32(sp)
  80e7f0:	dd400717 	ldw	r21,28(sp)
  80e7f4:	dd000617 	ldw	r20,24(sp)
  80e7f8:	dcc00517 	ldw	r19,20(sp)
  80e7fc:	dc800417 	ldw	r18,16(sp)
  80e800:	dc400317 	ldw	r17,12(sp)
  80e804:	dc000217 	ldw	r16,8(sp)
  80e808:	dec00c04 	addi	sp,sp,48
  80e80c:	f800283a 	ret
  80e810:	04c03fc4 	movi	r19,255
  80e814:	99c9803a 	cmpltu	r4,r19,r7
  80e818:	200890fa 	slli	r4,r4,3
  80e81c:	003fa806 	br	80e6c0 <__alt_data_end+0xff80e6c0>
  80e820:	00803fc4 	movi	r2,255
  80e824:	14c5803a 	cmpltu	r2,r2,r19
  80e828:	100490fa 	slli	r2,r2,3
  80e82c:	003fc006 	br	80e730 <__alt_data_end+0xff80e730>
  80e830:	00804034 	movhi	r2,256
  80e834:	10bfffc4 	addi	r2,r2,-1
  80e838:	11808b36 	bltu	r2,r6,80ea68 <__umoddi3+0x4f0>
  80e83c:	01000404 	movi	r4,16
  80e840:	003f6406 	br	80e5d4 <__alt_data_end+0xff80e5d4>
  80e844:	34c4d83a 	srl	r2,r6,r19
  80e848:	3d0e983a 	sll	r7,r7,r20
  80e84c:	8cf8d83a 	srl	fp,r17,r19
  80e850:	8d10983a 	sll	r8,r17,r20
  80e854:	38aab03a 	or	r21,r7,r2
  80e858:	a82cd43a 	srli	r22,r21,16
  80e85c:	84e2d83a 	srl	r17,r16,r19
  80e860:	e009883a 	mov	r4,fp
  80e864:	b00b883a 	mov	r5,r22
  80e868:	8a22b03a 	or	r17,r17,r8
  80e86c:	3524983a 	sll	r18,r6,r20
  80e870:	08029240 	call	802924 <__umodsi3>
  80e874:	e009883a 	mov	r4,fp
  80e878:	b00b883a 	mov	r5,r22
  80e87c:	102f883a 	mov	r23,r2
  80e880:	08028c00 	call	8028c0 <__udivsi3>
  80e884:	100d883a 	mov	r6,r2
  80e888:	b808943a 	slli	r4,r23,16
  80e88c:	aa3fffcc 	andi	r8,r21,65535
  80e890:	8804d43a 	srli	r2,r17,16
  80e894:	41af383a 	mul	r23,r8,r6
  80e898:	8520983a 	sll	r16,r16,r20
  80e89c:	1104b03a 	or	r2,r2,r4
  80e8a0:	15c0042e 	bgeu	r2,r23,80e8b4 <__umoddi3+0x33c>
  80e8a4:	1545883a 	add	r2,r2,r21
  80e8a8:	30ffffc4 	addi	r3,r6,-1
  80e8ac:	1540742e 	bgeu	r2,r21,80ea80 <__umoddi3+0x508>
  80e8b0:	180d883a 	mov	r6,r3
  80e8b4:	15efc83a 	sub	r23,r2,r23
  80e8b8:	b00b883a 	mov	r5,r22
  80e8bc:	b809883a 	mov	r4,r23
  80e8c0:	d9800115 	stw	r6,4(sp)
  80e8c4:	da000015 	stw	r8,0(sp)
  80e8c8:	08029240 	call	802924 <__umodsi3>
  80e8cc:	b00b883a 	mov	r5,r22
  80e8d0:	b809883a 	mov	r4,r23
  80e8d4:	1039883a 	mov	fp,r2
  80e8d8:	08028c00 	call	8028c0 <__udivsi3>
  80e8dc:	da000017 	ldw	r8,0(sp)
  80e8e0:	e038943a 	slli	fp,fp,16
  80e8e4:	100b883a 	mov	r5,r2
  80e8e8:	4089383a 	mul	r4,r8,r2
  80e8ec:	8a3fffcc 	andi	r8,r17,65535
  80e8f0:	4710b03a 	or	r8,r8,fp
  80e8f4:	d9800117 	ldw	r6,4(sp)
  80e8f8:	4100042e 	bgeu	r8,r4,80e90c <__umoddi3+0x394>
  80e8fc:	4551883a 	add	r8,r8,r21
  80e900:	10bfffc4 	addi	r2,r2,-1
  80e904:	45405a2e 	bgeu	r8,r21,80ea70 <__umoddi3+0x4f8>
  80e908:	100b883a 	mov	r5,r2
  80e90c:	300c943a 	slli	r6,r6,16
  80e910:	91ffffcc 	andi	r7,r18,65535
  80e914:	9004d43a 	srli	r2,r18,16
  80e918:	314cb03a 	or	r6,r6,r5
  80e91c:	317fffcc 	andi	r5,r6,65535
  80e920:	300cd43a 	srli	r6,r6,16
  80e924:	29d3383a 	mul	r9,r5,r7
  80e928:	288b383a 	mul	r5,r5,r2
  80e92c:	31cf383a 	mul	r7,r6,r7
  80e930:	4806d43a 	srli	r3,r9,16
  80e934:	4111c83a 	sub	r8,r8,r4
  80e938:	29cb883a 	add	r5,r5,r7
  80e93c:	194b883a 	add	r5,r3,r5
  80e940:	3085383a 	mul	r2,r6,r2
  80e944:	29c0022e 	bgeu	r5,r7,80e950 <__umoddi3+0x3d8>
  80e948:	00c00074 	movhi	r3,1
  80e94c:	10c5883a 	add	r2,r2,r3
  80e950:	2808d43a 	srli	r4,r5,16
  80e954:	280a943a 	slli	r5,r5,16
  80e958:	4a7fffcc 	andi	r9,r9,65535
  80e95c:	2085883a 	add	r2,r4,r2
  80e960:	2a4b883a 	add	r5,r5,r9
  80e964:	40803636 	bltu	r8,r2,80ea40 <__umoddi3+0x4c8>
  80e968:	40804d26 	beq	r8,r2,80eaa0 <__umoddi3+0x528>
  80e96c:	4089c83a 	sub	r4,r8,r2
  80e970:	280f883a 	mov	r7,r5
  80e974:	81cfc83a 	sub	r7,r16,r7
  80e978:	81c7803a 	cmpltu	r3,r16,r7
  80e97c:	20c7c83a 	sub	r3,r4,r3
  80e980:	1cc4983a 	sll	r2,r3,r19
  80e984:	3d0ed83a 	srl	r7,r7,r20
  80e988:	1d06d83a 	srl	r3,r3,r20
  80e98c:	11c4b03a 	or	r2,r2,r7
  80e990:	003f9306 	br	80e7e0 <__alt_data_end+0xff80e7e0>
  80e994:	9ca6983a 	sll	r19,r19,r18
  80e998:	88e8d83a 	srl	r20,r17,r3
  80e99c:	80c4d83a 	srl	r2,r16,r3
  80e9a0:	982cd43a 	srli	r22,r19,16
  80e9a4:	8ca2983a 	sll	r17,r17,r18
  80e9a8:	a009883a 	mov	r4,r20
  80e9ac:	b00b883a 	mov	r5,r22
  80e9b0:	1478b03a 	or	fp,r2,r17
  80e9b4:	08029240 	call	802924 <__umodsi3>
  80e9b8:	a009883a 	mov	r4,r20
  80e9bc:	b00b883a 	mov	r5,r22
  80e9c0:	1023883a 	mov	r17,r2
  80e9c4:	08028c00 	call	8028c0 <__udivsi3>
  80e9c8:	9d7fffcc 	andi	r21,r19,65535
  80e9cc:	880a943a 	slli	r5,r17,16
  80e9d0:	e008d43a 	srli	r4,fp,16
  80e9d4:	a885383a 	mul	r2,r21,r2
  80e9d8:	84a8983a 	sll	r20,r16,r18
  80e9dc:	2148b03a 	or	r4,r4,r5
  80e9e0:	2080042e 	bgeu	r4,r2,80e9f4 <__umoddi3+0x47c>
  80e9e4:	24c9883a 	add	r4,r4,r19
  80e9e8:	24c00236 	bltu	r4,r19,80e9f4 <__umoddi3+0x47c>
  80e9ec:	2080012e 	bgeu	r4,r2,80e9f4 <__umoddi3+0x47c>
  80e9f0:	24c9883a 	add	r4,r4,r19
  80e9f4:	20a3c83a 	sub	r17,r4,r2
  80e9f8:	b00b883a 	mov	r5,r22
  80e9fc:	8809883a 	mov	r4,r17
  80ea00:	08029240 	call	802924 <__umodsi3>
  80ea04:	102f883a 	mov	r23,r2
  80ea08:	8809883a 	mov	r4,r17
  80ea0c:	b00b883a 	mov	r5,r22
  80ea10:	08028c00 	call	8028c0 <__udivsi3>
  80ea14:	b82e943a 	slli	r23,r23,16
  80ea18:	a885383a 	mul	r2,r21,r2
  80ea1c:	e13fffcc 	andi	r4,fp,65535
  80ea20:	25c8b03a 	or	r4,r4,r23
  80ea24:	2080042e 	bgeu	r4,r2,80ea38 <__umoddi3+0x4c0>
  80ea28:	24c9883a 	add	r4,r4,r19
  80ea2c:	24c00236 	bltu	r4,r19,80ea38 <__umoddi3+0x4c0>
  80ea30:	2080012e 	bgeu	r4,r2,80ea38 <__umoddi3+0x4c0>
  80ea34:	24c9883a 	add	r4,r4,r19
  80ea38:	20a3c83a 	sub	r17,r4,r2
  80ea3c:	003f4806 	br	80e760 <__alt_data_end+0xff80e760>
  80ea40:	2c8fc83a 	sub	r7,r5,r18
  80ea44:	1545c83a 	sub	r2,r2,r21
  80ea48:	29cb803a 	cmpltu	r5,r5,r7
  80ea4c:	1145c83a 	sub	r2,r2,r5
  80ea50:	4089c83a 	sub	r4,r8,r2
  80ea54:	003fc706 	br	80e974 <__alt_data_end+0xff80e974>
  80ea58:	01000604 	movi	r4,24
  80ea5c:	003f1806 	br	80e6c0 <__alt_data_end+0xff80e6c0>
  80ea60:	00800604 	movi	r2,24
  80ea64:	003f3206 	br	80e730 <__alt_data_end+0xff80e730>
  80ea68:	01000604 	movi	r4,24
  80ea6c:	003ed906 	br	80e5d4 <__alt_data_end+0xff80e5d4>
  80ea70:	413fa52e 	bgeu	r8,r4,80e908 <__alt_data_end+0xff80e908>
  80ea74:	297fff84 	addi	r5,r5,-2
  80ea78:	4551883a 	add	r8,r8,r21
  80ea7c:	003fa306 	br	80e90c <__alt_data_end+0xff80e90c>
  80ea80:	15ff8b2e 	bgeu	r2,r23,80e8b0 <__alt_data_end+0xff80e8b0>
  80ea84:	31bfff84 	addi	r6,r6,-2
  80ea88:	1545883a 	add	r2,r2,r21
  80ea8c:	003f8906 	br	80e8b4 <__alt_data_end+0xff80e8b4>
  80ea90:	24c9883a 	add	r4,r4,r19
  80ea94:	003eee06 	br	80e650 <__alt_data_end+0xff80e650>
  80ea98:	8005883a 	mov	r2,r16
  80ea9c:	003f1706 	br	80e6fc <__alt_data_end+0xff80e6fc>
  80eaa0:	817fe736 	bltu	r16,r5,80ea40 <__alt_data_end+0xff80ea40>
  80eaa4:	280f883a 	mov	r7,r5
  80eaa8:	0009883a 	mov	r4,zero
  80eaac:	003fb106 	br	80e974 <__alt_data_end+0xff80e974>

0080eab0 <__divdf3>:
  80eab0:	defff204 	addi	sp,sp,-56
  80eab4:	dd400915 	stw	r21,36(sp)
  80eab8:	282ad53a 	srli	r21,r5,20
  80eabc:	dd000815 	stw	r20,32(sp)
  80eac0:	2828d7fa 	srli	r20,r5,31
  80eac4:	dc000415 	stw	r16,16(sp)
  80eac8:	04000434 	movhi	r16,16
  80eacc:	df000c15 	stw	fp,48(sp)
  80ead0:	843fffc4 	addi	r16,r16,-1
  80ead4:	dfc00d15 	stw	ra,52(sp)
  80ead8:	ddc00b15 	stw	r23,44(sp)
  80eadc:	dd800a15 	stw	r22,40(sp)
  80eae0:	dcc00715 	stw	r19,28(sp)
  80eae4:	dc800615 	stw	r18,24(sp)
  80eae8:	dc400515 	stw	r17,20(sp)
  80eaec:	ad41ffcc 	andi	r21,r21,2047
  80eaf0:	2c20703a 	and	r16,r5,r16
  80eaf4:	a7003fcc 	andi	fp,r20,255
  80eaf8:	a8006126 	beq	r21,zero,80ec80 <__divdf3+0x1d0>
  80eafc:	0081ffc4 	movi	r2,2047
  80eb00:	2025883a 	mov	r18,r4
  80eb04:	a8803726 	beq	r21,r2,80ebe4 <__divdf3+0x134>
  80eb08:	80800434 	orhi	r2,r16,16
  80eb0c:	100490fa 	slli	r2,r2,3
  80eb10:	2020d77a 	srli	r16,r4,29
  80eb14:	202490fa 	slli	r18,r4,3
  80eb18:	ad7f0044 	addi	r21,r21,-1023
  80eb1c:	80a0b03a 	or	r16,r16,r2
  80eb20:	0027883a 	mov	r19,zero
  80eb24:	0013883a 	mov	r9,zero
  80eb28:	3804d53a 	srli	r2,r7,20
  80eb2c:	382cd7fa 	srli	r22,r7,31
  80eb30:	04400434 	movhi	r17,16
  80eb34:	8c7fffc4 	addi	r17,r17,-1
  80eb38:	1081ffcc 	andi	r2,r2,2047
  80eb3c:	3011883a 	mov	r8,r6
  80eb40:	3c62703a 	and	r17,r7,r17
  80eb44:	b5c03fcc 	andi	r23,r22,255
  80eb48:	10006c26 	beq	r2,zero,80ecfc <__divdf3+0x24c>
  80eb4c:	00c1ffc4 	movi	r3,2047
  80eb50:	10c06426 	beq	r2,r3,80ece4 <__divdf3+0x234>
  80eb54:	88c00434 	orhi	r3,r17,16
  80eb58:	180690fa 	slli	r3,r3,3
  80eb5c:	3022d77a 	srli	r17,r6,29
  80eb60:	301090fa 	slli	r8,r6,3
  80eb64:	10bf0044 	addi	r2,r2,-1023
  80eb68:	88e2b03a 	or	r17,r17,r3
  80eb6c:	000f883a 	mov	r7,zero
  80eb70:	a58cf03a 	xor	r6,r20,r22
  80eb74:	3cc8b03a 	or	r4,r7,r19
  80eb78:	a8abc83a 	sub	r21,r21,r2
  80eb7c:	008003c4 	movi	r2,15
  80eb80:	3007883a 	mov	r3,r6
  80eb84:	34c03fcc 	andi	r19,r6,255
  80eb88:	11009036 	bltu	r2,r4,80edcc <__divdf3+0x31c>
  80eb8c:	200890ba 	slli	r4,r4,2
  80eb90:	00802074 	movhi	r2,129
  80eb94:	10bae904 	addi	r2,r2,-5212
  80eb98:	2089883a 	add	r4,r4,r2
  80eb9c:	20800017 	ldw	r2,0(r4)
  80eba0:	1000683a 	jmp	r2
  80eba4:	0080edcc 	andi	r2,zero,951
  80eba8:	0080ec1c 	xori	r2,zero,944
  80ebac:	0080edbc 	xorhi	r2,zero,950
  80ebb0:	0080ec10 	cmplti	r2,zero,944
  80ebb4:	0080edbc 	xorhi	r2,zero,950
  80ebb8:	0080ed90 	cmplti	r2,zero,950
  80ebbc:	0080edbc 	xorhi	r2,zero,950
  80ebc0:	0080ec10 	cmplti	r2,zero,944
  80ebc4:	0080ec1c 	xori	r2,zero,944
  80ebc8:	0080ec1c 	xori	r2,zero,944
  80ebcc:	0080ed90 	cmplti	r2,zero,950
  80ebd0:	0080ec10 	cmplti	r2,zero,944
  80ebd4:	0080ec00 	call	80ec0 <__alt_mem_sdram-0x77f140>
  80ebd8:	0080ec00 	call	80ec0 <__alt_mem_sdram-0x77f140>
  80ebdc:	0080ec00 	call	80ec0 <__alt_mem_sdram-0x77f140>
  80ebe0:	0080f0b0 	cmpltui	r2,zero,962
  80ebe4:	2404b03a 	or	r2,r4,r16
  80ebe8:	1000661e 	bne	r2,zero,80ed84 <__divdf3+0x2d4>
  80ebec:	04c00204 	movi	r19,8
  80ebf0:	0021883a 	mov	r16,zero
  80ebf4:	0025883a 	mov	r18,zero
  80ebf8:	02400084 	movi	r9,2
  80ebfc:	003fca06 	br	80eb28 <__alt_data_end+0xff80eb28>
  80ec00:	8023883a 	mov	r17,r16
  80ec04:	9011883a 	mov	r8,r18
  80ec08:	e02f883a 	mov	r23,fp
  80ec0c:	480f883a 	mov	r7,r9
  80ec10:	00800084 	movi	r2,2
  80ec14:	3881311e 	bne	r7,r2,80f0dc <__divdf3+0x62c>
  80ec18:	b827883a 	mov	r19,r23
  80ec1c:	98c0004c 	andi	r3,r19,1
  80ec20:	0081ffc4 	movi	r2,2047
  80ec24:	000b883a 	mov	r5,zero
  80ec28:	0025883a 	mov	r18,zero
  80ec2c:	1004953a 	slli	r2,r2,20
  80ec30:	18c03fcc 	andi	r3,r3,255
  80ec34:	04400434 	movhi	r17,16
  80ec38:	8c7fffc4 	addi	r17,r17,-1
  80ec3c:	180697fa 	slli	r3,r3,31
  80ec40:	2c4a703a 	and	r5,r5,r17
  80ec44:	288ab03a 	or	r5,r5,r2
  80ec48:	28c6b03a 	or	r3,r5,r3
  80ec4c:	9005883a 	mov	r2,r18
  80ec50:	dfc00d17 	ldw	ra,52(sp)
  80ec54:	df000c17 	ldw	fp,48(sp)
  80ec58:	ddc00b17 	ldw	r23,44(sp)
  80ec5c:	dd800a17 	ldw	r22,40(sp)
  80ec60:	dd400917 	ldw	r21,36(sp)
  80ec64:	dd000817 	ldw	r20,32(sp)
  80ec68:	dcc00717 	ldw	r19,28(sp)
  80ec6c:	dc800617 	ldw	r18,24(sp)
  80ec70:	dc400517 	ldw	r17,20(sp)
  80ec74:	dc000417 	ldw	r16,16(sp)
  80ec78:	dec00e04 	addi	sp,sp,56
  80ec7c:	f800283a 	ret
  80ec80:	2404b03a 	or	r2,r4,r16
  80ec84:	2027883a 	mov	r19,r4
  80ec88:	10003926 	beq	r2,zero,80ed70 <__divdf3+0x2c0>
  80ec8c:	80012e26 	beq	r16,zero,80f148 <__divdf3+0x698>
  80ec90:	8009883a 	mov	r4,r16
  80ec94:	d9800315 	stw	r6,12(sp)
  80ec98:	d9c00215 	stw	r7,8(sp)
  80ec9c:	08049480 	call	804948 <__clzsi2>
  80eca0:	d9800317 	ldw	r6,12(sp)
  80eca4:	d9c00217 	ldw	r7,8(sp)
  80eca8:	113ffd44 	addi	r4,r2,-11
  80ecac:	00c00704 	movi	r3,28
  80ecb0:	19012116 	blt	r3,r4,80f138 <__divdf3+0x688>
  80ecb4:	00c00744 	movi	r3,29
  80ecb8:	147ffe04 	addi	r17,r2,-8
  80ecbc:	1907c83a 	sub	r3,r3,r4
  80ecc0:	8460983a 	sll	r16,r16,r17
  80ecc4:	98c6d83a 	srl	r3,r19,r3
  80ecc8:	9c64983a 	sll	r18,r19,r17
  80eccc:	1c20b03a 	or	r16,r3,r16
  80ecd0:	1080fcc4 	addi	r2,r2,1011
  80ecd4:	00abc83a 	sub	r21,zero,r2
  80ecd8:	0027883a 	mov	r19,zero
  80ecdc:	0013883a 	mov	r9,zero
  80ece0:	003f9106 	br	80eb28 <__alt_data_end+0xff80eb28>
  80ece4:	3446b03a 	or	r3,r6,r17
  80ece8:	18001f1e 	bne	r3,zero,80ed68 <__divdf3+0x2b8>
  80ecec:	0023883a 	mov	r17,zero
  80ecf0:	0011883a 	mov	r8,zero
  80ecf4:	01c00084 	movi	r7,2
  80ecf8:	003f9d06 	br	80eb70 <__alt_data_end+0xff80eb70>
  80ecfc:	3446b03a 	or	r3,r6,r17
  80ed00:	18001526 	beq	r3,zero,80ed58 <__divdf3+0x2a8>
  80ed04:	88011b26 	beq	r17,zero,80f174 <__divdf3+0x6c4>
  80ed08:	8809883a 	mov	r4,r17
  80ed0c:	d9800315 	stw	r6,12(sp)
  80ed10:	da400115 	stw	r9,4(sp)
  80ed14:	08049480 	call	804948 <__clzsi2>
  80ed18:	d9800317 	ldw	r6,12(sp)
  80ed1c:	da400117 	ldw	r9,4(sp)
  80ed20:	113ffd44 	addi	r4,r2,-11
  80ed24:	00c00704 	movi	r3,28
  80ed28:	19010e16 	blt	r3,r4,80f164 <__divdf3+0x6b4>
  80ed2c:	00c00744 	movi	r3,29
  80ed30:	123ffe04 	addi	r8,r2,-8
  80ed34:	1907c83a 	sub	r3,r3,r4
  80ed38:	8a22983a 	sll	r17,r17,r8
  80ed3c:	30c6d83a 	srl	r3,r6,r3
  80ed40:	3210983a 	sll	r8,r6,r8
  80ed44:	1c62b03a 	or	r17,r3,r17
  80ed48:	1080fcc4 	addi	r2,r2,1011
  80ed4c:	0085c83a 	sub	r2,zero,r2
  80ed50:	000f883a 	mov	r7,zero
  80ed54:	003f8606 	br	80eb70 <__alt_data_end+0xff80eb70>
  80ed58:	0023883a 	mov	r17,zero
  80ed5c:	0011883a 	mov	r8,zero
  80ed60:	01c00044 	movi	r7,1
  80ed64:	003f8206 	br	80eb70 <__alt_data_end+0xff80eb70>
  80ed68:	01c000c4 	movi	r7,3
  80ed6c:	003f8006 	br	80eb70 <__alt_data_end+0xff80eb70>
  80ed70:	04c00104 	movi	r19,4
  80ed74:	0021883a 	mov	r16,zero
  80ed78:	0025883a 	mov	r18,zero
  80ed7c:	02400044 	movi	r9,1
  80ed80:	003f6906 	br	80eb28 <__alt_data_end+0xff80eb28>
  80ed84:	04c00304 	movi	r19,12
  80ed88:	024000c4 	movi	r9,3
  80ed8c:	003f6606 	br	80eb28 <__alt_data_end+0xff80eb28>
  80ed90:	01400434 	movhi	r5,16
  80ed94:	0007883a 	mov	r3,zero
  80ed98:	297fffc4 	addi	r5,r5,-1
  80ed9c:	04bfffc4 	movi	r18,-1
  80eda0:	0081ffc4 	movi	r2,2047
  80eda4:	003fa106 	br	80ec2c <__alt_data_end+0xff80ec2c>
  80eda8:	00c00044 	movi	r3,1
  80edac:	1887c83a 	sub	r3,r3,r2
  80edb0:	01000e04 	movi	r4,56
  80edb4:	20c1210e 	bge	r4,r3,80f23c <__divdf3+0x78c>
  80edb8:	98c0004c 	andi	r3,r19,1
  80edbc:	0005883a 	mov	r2,zero
  80edc0:	000b883a 	mov	r5,zero
  80edc4:	0025883a 	mov	r18,zero
  80edc8:	003f9806 	br	80ec2c <__alt_data_end+0xff80ec2c>
  80edcc:	8c00fd36 	bltu	r17,r16,80f1c4 <__divdf3+0x714>
  80edd0:	8440fb26 	beq	r16,r17,80f1c0 <__divdf3+0x710>
  80edd4:	8007883a 	mov	r3,r16
  80edd8:	ad7fffc4 	addi	r21,r21,-1
  80eddc:	0021883a 	mov	r16,zero
  80ede0:	4004d63a 	srli	r2,r8,24
  80ede4:	8822923a 	slli	r17,r17,8
  80ede8:	1809883a 	mov	r4,r3
  80edec:	402c923a 	slli	r22,r8,8
  80edf0:	88b8b03a 	or	fp,r17,r2
  80edf4:	e028d43a 	srli	r20,fp,16
  80edf8:	d8c00015 	stw	r3,0(sp)
  80edfc:	e5ffffcc 	andi	r23,fp,65535
  80ee00:	a00b883a 	mov	r5,r20
  80ee04:	08028c00 	call	8028c0 <__udivsi3>
  80ee08:	d8c00017 	ldw	r3,0(sp)
  80ee0c:	a00b883a 	mov	r5,r20
  80ee10:	d8800315 	stw	r2,12(sp)
  80ee14:	1809883a 	mov	r4,r3
  80ee18:	08029240 	call	802924 <__umodsi3>
  80ee1c:	d9800317 	ldw	r6,12(sp)
  80ee20:	1006943a 	slli	r3,r2,16
  80ee24:	9004d43a 	srli	r2,r18,16
  80ee28:	b9a3383a 	mul	r17,r23,r6
  80ee2c:	10c4b03a 	or	r2,r2,r3
  80ee30:	1440062e 	bgeu	r2,r17,80ee4c <__divdf3+0x39c>
  80ee34:	1705883a 	add	r2,r2,fp
  80ee38:	30ffffc4 	addi	r3,r6,-1
  80ee3c:	1700ee36 	bltu	r2,fp,80f1f8 <__divdf3+0x748>
  80ee40:	1440ed2e 	bgeu	r2,r17,80f1f8 <__divdf3+0x748>
  80ee44:	31bfff84 	addi	r6,r6,-2
  80ee48:	1705883a 	add	r2,r2,fp
  80ee4c:	1463c83a 	sub	r17,r2,r17
  80ee50:	a00b883a 	mov	r5,r20
  80ee54:	8809883a 	mov	r4,r17
  80ee58:	d9800315 	stw	r6,12(sp)
  80ee5c:	08028c00 	call	8028c0 <__udivsi3>
  80ee60:	a00b883a 	mov	r5,r20
  80ee64:	8809883a 	mov	r4,r17
  80ee68:	d8800215 	stw	r2,8(sp)
  80ee6c:	08029240 	call	802924 <__umodsi3>
  80ee70:	d9c00217 	ldw	r7,8(sp)
  80ee74:	1004943a 	slli	r2,r2,16
  80ee78:	94bfffcc 	andi	r18,r18,65535
  80ee7c:	b9d1383a 	mul	r8,r23,r7
  80ee80:	90a4b03a 	or	r18,r18,r2
  80ee84:	d9800317 	ldw	r6,12(sp)
  80ee88:	9200062e 	bgeu	r18,r8,80eea4 <__divdf3+0x3f4>
  80ee8c:	9725883a 	add	r18,r18,fp
  80ee90:	38bfffc4 	addi	r2,r7,-1
  80ee94:	9700d636 	bltu	r18,fp,80f1f0 <__divdf3+0x740>
  80ee98:	9200d52e 	bgeu	r18,r8,80f1f0 <__divdf3+0x740>
  80ee9c:	39ffff84 	addi	r7,r7,-2
  80eea0:	9725883a 	add	r18,r18,fp
  80eea4:	3004943a 	slli	r2,r6,16
  80eea8:	b012d43a 	srli	r9,r22,16
  80eeac:	b1bfffcc 	andi	r6,r22,65535
  80eeb0:	11e2b03a 	or	r17,r2,r7
  80eeb4:	8806d43a 	srli	r3,r17,16
  80eeb8:	893fffcc 	andi	r4,r17,65535
  80eebc:	218b383a 	mul	r5,r4,r6
  80eec0:	30c5383a 	mul	r2,r6,r3
  80eec4:	2249383a 	mul	r4,r4,r9
  80eec8:	280ed43a 	srli	r7,r5,16
  80eecc:	9225c83a 	sub	r18,r18,r8
  80eed0:	2089883a 	add	r4,r4,r2
  80eed4:	3909883a 	add	r4,r7,r4
  80eed8:	1a47383a 	mul	r3,r3,r9
  80eedc:	2080022e 	bgeu	r4,r2,80eee8 <__divdf3+0x438>
  80eee0:	00800074 	movhi	r2,1
  80eee4:	1887883a 	add	r3,r3,r2
  80eee8:	2004d43a 	srli	r2,r4,16
  80eeec:	2008943a 	slli	r4,r4,16
  80eef0:	297fffcc 	andi	r5,r5,65535
  80eef4:	10c7883a 	add	r3,r2,r3
  80eef8:	2149883a 	add	r4,r4,r5
  80eefc:	90c0a536 	bltu	r18,r3,80f194 <__divdf3+0x6e4>
  80ef00:	90c0bf26 	beq	r18,r3,80f200 <__divdf3+0x750>
  80ef04:	90c7c83a 	sub	r3,r18,r3
  80ef08:	810fc83a 	sub	r7,r16,r4
  80ef0c:	81e5803a 	cmpltu	r18,r16,r7
  80ef10:	1ca5c83a 	sub	r18,r3,r18
  80ef14:	e480c126 	beq	fp,r18,80f21c <__divdf3+0x76c>
  80ef18:	a00b883a 	mov	r5,r20
  80ef1c:	9009883a 	mov	r4,r18
  80ef20:	d9800315 	stw	r6,12(sp)
  80ef24:	d9c00215 	stw	r7,8(sp)
  80ef28:	da400115 	stw	r9,4(sp)
  80ef2c:	08028c00 	call	8028c0 <__udivsi3>
  80ef30:	a00b883a 	mov	r5,r20
  80ef34:	9009883a 	mov	r4,r18
  80ef38:	d8800015 	stw	r2,0(sp)
  80ef3c:	08029240 	call	802924 <__umodsi3>
  80ef40:	d9c00217 	ldw	r7,8(sp)
  80ef44:	da000017 	ldw	r8,0(sp)
  80ef48:	1006943a 	slli	r3,r2,16
  80ef4c:	3804d43a 	srli	r2,r7,16
  80ef50:	ba21383a 	mul	r16,r23,r8
  80ef54:	d9800317 	ldw	r6,12(sp)
  80ef58:	10c4b03a 	or	r2,r2,r3
  80ef5c:	da400117 	ldw	r9,4(sp)
  80ef60:	1400062e 	bgeu	r2,r16,80ef7c <__divdf3+0x4cc>
  80ef64:	1705883a 	add	r2,r2,fp
  80ef68:	40ffffc4 	addi	r3,r8,-1
  80ef6c:	1700ad36 	bltu	r2,fp,80f224 <__divdf3+0x774>
  80ef70:	1400ac2e 	bgeu	r2,r16,80f224 <__divdf3+0x774>
  80ef74:	423fff84 	addi	r8,r8,-2
  80ef78:	1705883a 	add	r2,r2,fp
  80ef7c:	1421c83a 	sub	r16,r2,r16
  80ef80:	a00b883a 	mov	r5,r20
  80ef84:	8009883a 	mov	r4,r16
  80ef88:	d9800315 	stw	r6,12(sp)
  80ef8c:	d9c00215 	stw	r7,8(sp)
  80ef90:	da000015 	stw	r8,0(sp)
  80ef94:	da400115 	stw	r9,4(sp)
  80ef98:	08028c00 	call	8028c0 <__udivsi3>
  80ef9c:	8009883a 	mov	r4,r16
  80efa0:	a00b883a 	mov	r5,r20
  80efa4:	1025883a 	mov	r18,r2
  80efa8:	08029240 	call	802924 <__umodsi3>
  80efac:	d9c00217 	ldw	r7,8(sp)
  80efb0:	1004943a 	slli	r2,r2,16
  80efb4:	bcaf383a 	mul	r23,r23,r18
  80efb8:	393fffcc 	andi	r4,r7,65535
  80efbc:	2088b03a 	or	r4,r4,r2
  80efc0:	d9800317 	ldw	r6,12(sp)
  80efc4:	da000017 	ldw	r8,0(sp)
  80efc8:	da400117 	ldw	r9,4(sp)
  80efcc:	25c0062e 	bgeu	r4,r23,80efe8 <__divdf3+0x538>
  80efd0:	2709883a 	add	r4,r4,fp
  80efd4:	90bfffc4 	addi	r2,r18,-1
  80efd8:	27009436 	bltu	r4,fp,80f22c <__divdf3+0x77c>
  80efdc:	25c0932e 	bgeu	r4,r23,80f22c <__divdf3+0x77c>
  80efe0:	94bfff84 	addi	r18,r18,-2
  80efe4:	2709883a 	add	r4,r4,fp
  80efe8:	4004943a 	slli	r2,r8,16
  80efec:	25efc83a 	sub	r23,r4,r23
  80eff0:	1490b03a 	or	r8,r2,r18
  80eff4:	4008d43a 	srli	r4,r8,16
  80eff8:	40ffffcc 	andi	r3,r8,65535
  80effc:	30c5383a 	mul	r2,r6,r3
  80f000:	1a47383a 	mul	r3,r3,r9
  80f004:	310d383a 	mul	r6,r6,r4
  80f008:	100ad43a 	srli	r5,r2,16
  80f00c:	4913383a 	mul	r9,r9,r4
  80f010:	1987883a 	add	r3,r3,r6
  80f014:	28c7883a 	add	r3,r5,r3
  80f018:	1980022e 	bgeu	r3,r6,80f024 <__divdf3+0x574>
  80f01c:	01000074 	movhi	r4,1
  80f020:	4913883a 	add	r9,r9,r4
  80f024:	1808d43a 	srli	r4,r3,16
  80f028:	1806943a 	slli	r3,r3,16
  80f02c:	10bfffcc 	andi	r2,r2,65535
  80f030:	2253883a 	add	r9,r4,r9
  80f034:	1887883a 	add	r3,r3,r2
  80f038:	ba403836 	bltu	r23,r9,80f11c <__divdf3+0x66c>
  80f03c:	ba403626 	beq	r23,r9,80f118 <__divdf3+0x668>
  80f040:	42000054 	ori	r8,r8,1
  80f044:	a880ffc4 	addi	r2,r21,1023
  80f048:	00bf570e 	bge	zero,r2,80eda8 <__alt_data_end+0xff80eda8>
  80f04c:	40c001cc 	andi	r3,r8,7
  80f050:	18000726 	beq	r3,zero,80f070 <__divdf3+0x5c0>
  80f054:	40c003cc 	andi	r3,r8,15
  80f058:	01000104 	movi	r4,4
  80f05c:	19000426 	beq	r3,r4,80f070 <__divdf3+0x5c0>
  80f060:	4107883a 	add	r3,r8,r4
  80f064:	1a11803a 	cmpltu	r8,r3,r8
  80f068:	8a23883a 	add	r17,r17,r8
  80f06c:	1811883a 	mov	r8,r3
  80f070:	88c0402c 	andhi	r3,r17,256
  80f074:	18000426 	beq	r3,zero,80f088 <__divdf3+0x5d8>
  80f078:	00ffc034 	movhi	r3,65280
  80f07c:	18ffffc4 	addi	r3,r3,-1
  80f080:	a8810004 	addi	r2,r21,1024
  80f084:	88e2703a 	and	r17,r17,r3
  80f088:	00c1ff84 	movi	r3,2046
  80f08c:	18bee316 	blt	r3,r2,80ec1c <__alt_data_end+0xff80ec1c>
  80f090:	8824977a 	slli	r18,r17,29
  80f094:	4010d0fa 	srli	r8,r8,3
  80f098:	8822927a 	slli	r17,r17,9
  80f09c:	1081ffcc 	andi	r2,r2,2047
  80f0a0:	9224b03a 	or	r18,r18,r8
  80f0a4:	880ad33a 	srli	r5,r17,12
  80f0a8:	98c0004c 	andi	r3,r19,1
  80f0ac:	003edf06 	br	80ec2c <__alt_data_end+0xff80ec2c>
  80f0b0:	8080022c 	andhi	r2,r16,8
  80f0b4:	10001226 	beq	r2,zero,80f100 <__divdf3+0x650>
  80f0b8:	8880022c 	andhi	r2,r17,8
  80f0bc:	1000101e 	bne	r2,zero,80f100 <__divdf3+0x650>
  80f0c0:	00800434 	movhi	r2,16
  80f0c4:	89400234 	orhi	r5,r17,8
  80f0c8:	10bfffc4 	addi	r2,r2,-1
  80f0cc:	b007883a 	mov	r3,r22
  80f0d0:	288a703a 	and	r5,r5,r2
  80f0d4:	4025883a 	mov	r18,r8
  80f0d8:	003f3106 	br	80eda0 <__alt_data_end+0xff80eda0>
  80f0dc:	008000c4 	movi	r2,3
  80f0e0:	3880a626 	beq	r7,r2,80f37c <__divdf3+0x8cc>
  80f0e4:	00800044 	movi	r2,1
  80f0e8:	3880521e 	bne	r7,r2,80f234 <__divdf3+0x784>
  80f0ec:	b807883a 	mov	r3,r23
  80f0f0:	0005883a 	mov	r2,zero
  80f0f4:	000b883a 	mov	r5,zero
  80f0f8:	0025883a 	mov	r18,zero
  80f0fc:	003ecb06 	br	80ec2c <__alt_data_end+0xff80ec2c>
  80f100:	00800434 	movhi	r2,16
  80f104:	81400234 	orhi	r5,r16,8
  80f108:	10bfffc4 	addi	r2,r2,-1
  80f10c:	a007883a 	mov	r3,r20
  80f110:	288a703a 	and	r5,r5,r2
  80f114:	003f2206 	br	80eda0 <__alt_data_end+0xff80eda0>
  80f118:	183fca26 	beq	r3,zero,80f044 <__alt_data_end+0xff80f044>
  80f11c:	e5ef883a 	add	r23,fp,r23
  80f120:	40bfffc4 	addi	r2,r8,-1
  80f124:	bf00392e 	bgeu	r23,fp,80f20c <__divdf3+0x75c>
  80f128:	1011883a 	mov	r8,r2
  80f12c:	ba7fc41e 	bne	r23,r9,80f040 <__alt_data_end+0xff80f040>
  80f130:	b0ffc31e 	bne	r22,r3,80f040 <__alt_data_end+0xff80f040>
  80f134:	003fc306 	br	80f044 <__alt_data_end+0xff80f044>
  80f138:	143ff604 	addi	r16,r2,-40
  80f13c:	9c20983a 	sll	r16,r19,r16
  80f140:	0025883a 	mov	r18,zero
  80f144:	003ee206 	br	80ecd0 <__alt_data_end+0xff80ecd0>
  80f148:	d9800315 	stw	r6,12(sp)
  80f14c:	d9c00215 	stw	r7,8(sp)
  80f150:	08049480 	call	804948 <__clzsi2>
  80f154:	10800804 	addi	r2,r2,32
  80f158:	d9c00217 	ldw	r7,8(sp)
  80f15c:	d9800317 	ldw	r6,12(sp)
  80f160:	003ed106 	br	80eca8 <__alt_data_end+0xff80eca8>
  80f164:	147ff604 	addi	r17,r2,-40
  80f168:	3462983a 	sll	r17,r6,r17
  80f16c:	0011883a 	mov	r8,zero
  80f170:	003ef506 	br	80ed48 <__alt_data_end+0xff80ed48>
  80f174:	3009883a 	mov	r4,r6
  80f178:	d9800315 	stw	r6,12(sp)
  80f17c:	da400115 	stw	r9,4(sp)
  80f180:	08049480 	call	804948 <__clzsi2>
  80f184:	10800804 	addi	r2,r2,32
  80f188:	da400117 	ldw	r9,4(sp)
  80f18c:	d9800317 	ldw	r6,12(sp)
  80f190:	003ee306 	br	80ed20 <__alt_data_end+0xff80ed20>
  80f194:	85a1883a 	add	r16,r16,r22
  80f198:	8585803a 	cmpltu	r2,r16,r22
  80f19c:	1705883a 	add	r2,r2,fp
  80f1a0:	14a5883a 	add	r18,r2,r18
  80f1a4:	88bfffc4 	addi	r2,r17,-1
  80f1a8:	e4800c2e 	bgeu	fp,r18,80f1dc <__divdf3+0x72c>
  80f1ac:	90c03e36 	bltu	r18,r3,80f2a8 <__divdf3+0x7f8>
  80f1b0:	1c806926 	beq	r3,r18,80f358 <__divdf3+0x8a8>
  80f1b4:	90c7c83a 	sub	r3,r18,r3
  80f1b8:	1023883a 	mov	r17,r2
  80f1bc:	003f5206 	br	80ef08 <__alt_data_end+0xff80ef08>
  80f1c0:	923f0436 	bltu	r18,r8,80edd4 <__alt_data_end+0xff80edd4>
  80f1c4:	800897fa 	slli	r4,r16,31
  80f1c8:	9004d07a 	srli	r2,r18,1
  80f1cc:	8006d07a 	srli	r3,r16,1
  80f1d0:	902097fa 	slli	r16,r18,31
  80f1d4:	20a4b03a 	or	r18,r4,r2
  80f1d8:	003f0106 	br	80ede0 <__alt_data_end+0xff80ede0>
  80f1dc:	e4bff51e 	bne	fp,r18,80f1b4 <__alt_data_end+0xff80f1b4>
  80f1e0:	85bff22e 	bgeu	r16,r22,80f1ac <__alt_data_end+0xff80f1ac>
  80f1e4:	e0c7c83a 	sub	r3,fp,r3
  80f1e8:	1023883a 	mov	r17,r2
  80f1ec:	003f4606 	br	80ef08 <__alt_data_end+0xff80ef08>
  80f1f0:	100f883a 	mov	r7,r2
  80f1f4:	003f2b06 	br	80eea4 <__alt_data_end+0xff80eea4>
  80f1f8:	180d883a 	mov	r6,r3
  80f1fc:	003f1306 	br	80ee4c <__alt_data_end+0xff80ee4c>
  80f200:	813fe436 	bltu	r16,r4,80f194 <__alt_data_end+0xff80f194>
  80f204:	0007883a 	mov	r3,zero
  80f208:	003f3f06 	br	80ef08 <__alt_data_end+0xff80ef08>
  80f20c:	ba402c36 	bltu	r23,r9,80f2c0 <__divdf3+0x810>
  80f210:	4dc05426 	beq	r9,r23,80f364 <__divdf3+0x8b4>
  80f214:	1011883a 	mov	r8,r2
  80f218:	003f8906 	br	80f040 <__alt_data_end+0xff80f040>
  80f21c:	023fffc4 	movi	r8,-1
  80f220:	003f8806 	br	80f044 <__alt_data_end+0xff80f044>
  80f224:	1811883a 	mov	r8,r3
  80f228:	003f5406 	br	80ef7c <__alt_data_end+0xff80ef7c>
  80f22c:	1025883a 	mov	r18,r2
  80f230:	003f6d06 	br	80efe8 <__alt_data_end+0xff80efe8>
  80f234:	b827883a 	mov	r19,r23
  80f238:	003f8206 	br	80f044 <__alt_data_end+0xff80f044>
  80f23c:	010007c4 	movi	r4,31
  80f240:	20c02616 	blt	r4,r3,80f2dc <__divdf3+0x82c>
  80f244:	00800804 	movi	r2,32
  80f248:	10c5c83a 	sub	r2,r2,r3
  80f24c:	888a983a 	sll	r5,r17,r2
  80f250:	40c8d83a 	srl	r4,r8,r3
  80f254:	4084983a 	sll	r2,r8,r2
  80f258:	88e2d83a 	srl	r17,r17,r3
  80f25c:	2906b03a 	or	r3,r5,r4
  80f260:	1004c03a 	cmpne	r2,r2,zero
  80f264:	1886b03a 	or	r3,r3,r2
  80f268:	188001cc 	andi	r2,r3,7
  80f26c:	10000726 	beq	r2,zero,80f28c <__divdf3+0x7dc>
  80f270:	188003cc 	andi	r2,r3,15
  80f274:	01000104 	movi	r4,4
  80f278:	11000426 	beq	r2,r4,80f28c <__divdf3+0x7dc>
  80f27c:	1805883a 	mov	r2,r3
  80f280:	10c00104 	addi	r3,r2,4
  80f284:	1885803a 	cmpltu	r2,r3,r2
  80f288:	88a3883a 	add	r17,r17,r2
  80f28c:	8880202c 	andhi	r2,r17,128
  80f290:	10002726 	beq	r2,zero,80f330 <__divdf3+0x880>
  80f294:	98c0004c 	andi	r3,r19,1
  80f298:	00800044 	movi	r2,1
  80f29c:	000b883a 	mov	r5,zero
  80f2a0:	0025883a 	mov	r18,zero
  80f2a4:	003e6106 	br	80ec2c <__alt_data_end+0xff80ec2c>
  80f2a8:	85a1883a 	add	r16,r16,r22
  80f2ac:	8585803a 	cmpltu	r2,r16,r22
  80f2b0:	1705883a 	add	r2,r2,fp
  80f2b4:	14a5883a 	add	r18,r2,r18
  80f2b8:	8c7fff84 	addi	r17,r17,-2
  80f2bc:	003f1106 	br	80ef04 <__alt_data_end+0xff80ef04>
  80f2c0:	b589883a 	add	r4,r22,r22
  80f2c4:	25ad803a 	cmpltu	r22,r4,r22
  80f2c8:	b739883a 	add	fp,r22,fp
  80f2cc:	40bfff84 	addi	r2,r8,-2
  80f2d0:	bf2f883a 	add	r23,r23,fp
  80f2d4:	202d883a 	mov	r22,r4
  80f2d8:	003f9306 	br	80f128 <__alt_data_end+0xff80f128>
  80f2dc:	013ff844 	movi	r4,-31
  80f2e0:	2085c83a 	sub	r2,r4,r2
  80f2e4:	8888d83a 	srl	r4,r17,r2
  80f2e8:	00800804 	movi	r2,32
  80f2ec:	18802126 	beq	r3,r2,80f374 <__divdf3+0x8c4>
  80f2f0:	00801004 	movi	r2,64
  80f2f4:	10c5c83a 	sub	r2,r2,r3
  80f2f8:	8884983a 	sll	r2,r17,r2
  80f2fc:	1204b03a 	or	r2,r2,r8
  80f300:	1004c03a 	cmpne	r2,r2,zero
  80f304:	2084b03a 	or	r2,r4,r2
  80f308:	144001cc 	andi	r17,r2,7
  80f30c:	88000d1e 	bne	r17,zero,80f344 <__divdf3+0x894>
  80f310:	000b883a 	mov	r5,zero
  80f314:	1024d0fa 	srli	r18,r2,3
  80f318:	98c0004c 	andi	r3,r19,1
  80f31c:	0005883a 	mov	r2,zero
  80f320:	9464b03a 	or	r18,r18,r17
  80f324:	003e4106 	br	80ec2c <__alt_data_end+0xff80ec2c>
  80f328:	1007883a 	mov	r3,r2
  80f32c:	0023883a 	mov	r17,zero
  80f330:	880a927a 	slli	r5,r17,9
  80f334:	1805883a 	mov	r2,r3
  80f338:	8822977a 	slli	r17,r17,29
  80f33c:	280ad33a 	srli	r5,r5,12
  80f340:	003ff406 	br	80f314 <__alt_data_end+0xff80f314>
  80f344:	10c003cc 	andi	r3,r2,15
  80f348:	01000104 	movi	r4,4
  80f34c:	193ff626 	beq	r3,r4,80f328 <__alt_data_end+0xff80f328>
  80f350:	0023883a 	mov	r17,zero
  80f354:	003fca06 	br	80f280 <__alt_data_end+0xff80f280>
  80f358:	813fd336 	bltu	r16,r4,80f2a8 <__alt_data_end+0xff80f2a8>
  80f35c:	1023883a 	mov	r17,r2
  80f360:	003fa806 	br	80f204 <__alt_data_end+0xff80f204>
  80f364:	b0ffd636 	bltu	r22,r3,80f2c0 <__alt_data_end+0xff80f2c0>
  80f368:	1011883a 	mov	r8,r2
  80f36c:	b0ff341e 	bne	r22,r3,80f040 <__alt_data_end+0xff80f040>
  80f370:	003f3406 	br	80f044 <__alt_data_end+0xff80f044>
  80f374:	0005883a 	mov	r2,zero
  80f378:	003fe006 	br	80f2fc <__alt_data_end+0xff80f2fc>
  80f37c:	00800434 	movhi	r2,16
  80f380:	89400234 	orhi	r5,r17,8
  80f384:	10bfffc4 	addi	r2,r2,-1
  80f388:	b807883a 	mov	r3,r23
  80f38c:	288a703a 	and	r5,r5,r2
  80f390:	4025883a 	mov	r18,r8
  80f394:	003e8206 	br	80eda0 <__alt_data_end+0xff80eda0>

0080f398 <__ledf2>:
  80f398:	2804d53a 	srli	r2,r5,20
  80f39c:	3810d53a 	srli	r8,r7,20
  80f3a0:	00c00434 	movhi	r3,16
  80f3a4:	18ffffc4 	addi	r3,r3,-1
  80f3a8:	1081ffcc 	andi	r2,r2,2047
  80f3ac:	0241ffc4 	movi	r9,2047
  80f3b0:	28d4703a 	and	r10,r5,r3
  80f3b4:	4201ffcc 	andi	r8,r8,2047
  80f3b8:	38c6703a 	and	r3,r7,r3
  80f3bc:	280ad7fa 	srli	r5,r5,31
  80f3c0:	380ed7fa 	srli	r7,r7,31
  80f3c4:	12401f26 	beq	r2,r9,80f444 <__ledf2+0xac>
  80f3c8:	0241ffc4 	movi	r9,2047
  80f3cc:	42401426 	beq	r8,r9,80f420 <__ledf2+0x88>
  80f3d0:	1000091e 	bne	r2,zero,80f3f8 <__ledf2+0x60>
  80f3d4:	2296b03a 	or	r11,r4,r10
  80f3d8:	5813003a 	cmpeq	r9,r11,zero
  80f3dc:	29403fcc 	andi	r5,r5,255
  80f3e0:	40000a1e 	bne	r8,zero,80f40c <__ledf2+0x74>
  80f3e4:	30d8b03a 	or	r12,r6,r3
  80f3e8:	6000081e 	bne	r12,zero,80f40c <__ledf2+0x74>
  80f3ec:	0005883a 	mov	r2,zero
  80f3f0:	5800111e 	bne	r11,zero,80f438 <__ledf2+0xa0>
  80f3f4:	f800283a 	ret
  80f3f8:	29403fcc 	andi	r5,r5,255
  80f3fc:	40000c1e 	bne	r8,zero,80f430 <__ledf2+0x98>
  80f400:	30d2b03a 	or	r9,r6,r3
  80f404:	48000c26 	beq	r9,zero,80f438 <__ledf2+0xa0>
  80f408:	0013883a 	mov	r9,zero
  80f40c:	39c03fcc 	andi	r7,r7,255
  80f410:	48000826 	beq	r9,zero,80f434 <__ledf2+0x9c>
  80f414:	38001126 	beq	r7,zero,80f45c <__ledf2+0xc4>
  80f418:	00800044 	movi	r2,1
  80f41c:	f800283a 	ret
  80f420:	30d2b03a 	or	r9,r6,r3
  80f424:	483fea26 	beq	r9,zero,80f3d0 <__alt_data_end+0xff80f3d0>
  80f428:	00800084 	movi	r2,2
  80f42c:	f800283a 	ret
  80f430:	39c03fcc 	andi	r7,r7,255
  80f434:	39400726 	beq	r7,r5,80f454 <__ledf2+0xbc>
  80f438:	2800081e 	bne	r5,zero,80f45c <__ledf2+0xc4>
  80f43c:	00800044 	movi	r2,1
  80f440:	f800283a 	ret
  80f444:	2292b03a 	or	r9,r4,r10
  80f448:	483fdf26 	beq	r9,zero,80f3c8 <__alt_data_end+0xff80f3c8>
  80f44c:	00800084 	movi	r2,2
  80f450:	f800283a 	ret
  80f454:	4080030e 	bge	r8,r2,80f464 <__ledf2+0xcc>
  80f458:	383fef26 	beq	r7,zero,80f418 <__alt_data_end+0xff80f418>
  80f45c:	00bfffc4 	movi	r2,-1
  80f460:	f800283a 	ret
  80f464:	123feb16 	blt	r2,r8,80f414 <__alt_data_end+0xff80f414>
  80f468:	1abff336 	bltu	r3,r10,80f438 <__alt_data_end+0xff80f438>
  80f46c:	50c00326 	beq	r10,r3,80f47c <__ledf2+0xe4>
  80f470:	50c0042e 	bgeu	r10,r3,80f484 <__ledf2+0xec>
  80f474:	283fe81e 	bne	r5,zero,80f418 <__alt_data_end+0xff80f418>
  80f478:	003ff806 	br	80f45c <__alt_data_end+0xff80f45c>
  80f47c:	313fee36 	bltu	r6,r4,80f438 <__alt_data_end+0xff80f438>
  80f480:	21bffc36 	bltu	r4,r6,80f474 <__alt_data_end+0xff80f474>
  80f484:	0005883a 	mov	r2,zero
  80f488:	f800283a 	ret

0080f48c <__floatunsidf>:
  80f48c:	defffe04 	addi	sp,sp,-8
  80f490:	dc000015 	stw	r16,0(sp)
  80f494:	dfc00115 	stw	ra,4(sp)
  80f498:	2021883a 	mov	r16,r4
  80f49c:	20002226 	beq	r4,zero,80f528 <__floatunsidf+0x9c>
  80f4a0:	08049480 	call	804948 <__clzsi2>
  80f4a4:	01010784 	movi	r4,1054
  80f4a8:	2089c83a 	sub	r4,r4,r2
  80f4ac:	01810cc4 	movi	r6,1075
  80f4b0:	310dc83a 	sub	r6,r6,r4
  80f4b4:	00c007c4 	movi	r3,31
  80f4b8:	1980120e 	bge	r3,r6,80f504 <__floatunsidf+0x78>
  80f4bc:	00c104c4 	movi	r3,1043
  80f4c0:	1907c83a 	sub	r3,r3,r4
  80f4c4:	80ca983a 	sll	r5,r16,r3
  80f4c8:	00800434 	movhi	r2,16
  80f4cc:	10bfffc4 	addi	r2,r2,-1
  80f4d0:	2101ffcc 	andi	r4,r4,2047
  80f4d4:	0021883a 	mov	r16,zero
  80f4d8:	288a703a 	and	r5,r5,r2
  80f4dc:	2008953a 	slli	r4,r4,20
  80f4e0:	00c00434 	movhi	r3,16
  80f4e4:	18ffffc4 	addi	r3,r3,-1
  80f4e8:	28c6703a 	and	r3,r5,r3
  80f4ec:	8005883a 	mov	r2,r16
  80f4f0:	1906b03a 	or	r3,r3,r4
  80f4f4:	dfc00117 	ldw	ra,4(sp)
  80f4f8:	dc000017 	ldw	r16,0(sp)
  80f4fc:	dec00204 	addi	sp,sp,8
  80f500:	f800283a 	ret
  80f504:	00c002c4 	movi	r3,11
  80f508:	188bc83a 	sub	r5,r3,r2
  80f50c:	814ad83a 	srl	r5,r16,r5
  80f510:	00c00434 	movhi	r3,16
  80f514:	18ffffc4 	addi	r3,r3,-1
  80f518:	81a0983a 	sll	r16,r16,r6
  80f51c:	2101ffcc 	andi	r4,r4,2047
  80f520:	28ca703a 	and	r5,r5,r3
  80f524:	003fed06 	br	80f4dc <__alt_data_end+0xff80f4dc>
  80f528:	0009883a 	mov	r4,zero
  80f52c:	000b883a 	mov	r5,zero
  80f530:	003fea06 	br	80f4dc <__alt_data_end+0xff80f4dc>

0080f534 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80f534:	defffe04 	addi	sp,sp,-8
  80f538:	dfc00115 	stw	ra,4(sp)
  80f53c:	df000015 	stw	fp,0(sp)
  80f540:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80f544:	d0a00b17 	ldw	r2,-32724(gp)
  80f548:	10000326 	beq	r2,zero,80f558 <alt_get_errno+0x24>
  80f54c:	d0a00b17 	ldw	r2,-32724(gp)
  80f550:	103ee83a 	callr	r2
  80f554:	00000106 	br	80f55c <alt_get_errno+0x28>
  80f558:	d0a6d104 	addi	r2,gp,-25788
}
  80f55c:	e037883a 	mov	sp,fp
  80f560:	dfc00117 	ldw	ra,4(sp)
  80f564:	df000017 	ldw	fp,0(sp)
  80f568:	dec00204 	addi	sp,sp,8
  80f56c:	f800283a 	ret

0080f570 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
  80f570:	defffb04 	addi	sp,sp,-20
  80f574:	dfc00415 	stw	ra,16(sp)
  80f578:	df000315 	stw	fp,12(sp)
  80f57c:	df000304 	addi	fp,sp,12
  80f580:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
  80f584:	e0bfff17 	ldw	r2,-4(fp)
  80f588:	10000616 	blt	r2,zero,80f5a4 <close+0x34>
  80f58c:	e0bfff17 	ldw	r2,-4(fp)
  80f590:	10c00324 	muli	r3,r2,12
  80f594:	00802074 	movhi	r2,129
  80f598:	108ad904 	addi	r2,r2,11108
  80f59c:	1885883a 	add	r2,r3,r2
  80f5a0:	00000106 	br	80f5a8 <close+0x38>
  80f5a4:	0005883a 	mov	r2,zero
  80f5a8:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
  80f5ac:	e0bffd17 	ldw	r2,-12(fp)
  80f5b0:	10001926 	beq	r2,zero,80f618 <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
  80f5b4:	e0bffd17 	ldw	r2,-12(fp)
  80f5b8:	10800017 	ldw	r2,0(r2)
  80f5bc:	10800417 	ldw	r2,16(r2)
  80f5c0:	10000626 	beq	r2,zero,80f5dc <close+0x6c>
  80f5c4:	e0bffd17 	ldw	r2,-12(fp)
  80f5c8:	10800017 	ldw	r2,0(r2)
  80f5cc:	10800417 	ldw	r2,16(r2)
  80f5d0:	e13ffd17 	ldw	r4,-12(fp)
  80f5d4:	103ee83a 	callr	r2
  80f5d8:	00000106 	br	80f5e0 <close+0x70>
  80f5dc:	0005883a 	mov	r2,zero
  80f5e0:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
  80f5e4:	e13fff17 	ldw	r4,-4(fp)
  80f5e8:	080fc300 	call	80fc30 <alt_release_fd>
    if (rval < 0)
  80f5ec:	e0bffe17 	ldw	r2,-8(fp)
  80f5f0:	1000070e 	bge	r2,zero,80f610 <close+0xa0>
    {
      ALT_ERRNO = -rval;
  80f5f4:	080f5340 	call	80f534 <alt_get_errno>
  80f5f8:	1007883a 	mov	r3,r2
  80f5fc:	e0bffe17 	ldw	r2,-8(fp)
  80f600:	0085c83a 	sub	r2,zero,r2
  80f604:	18800015 	stw	r2,0(r3)
      return -1;
  80f608:	00bfffc4 	movi	r2,-1
  80f60c:	00000706 	br	80f62c <close+0xbc>
    }
    return 0;
  80f610:	0005883a 	mov	r2,zero
  80f614:	00000506 	br	80f62c <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
  80f618:	080f5340 	call	80f534 <alt_get_errno>
  80f61c:	1007883a 	mov	r3,r2
  80f620:	00801444 	movi	r2,81
  80f624:	18800015 	stw	r2,0(r3)
    return -1;
  80f628:	00bfffc4 	movi	r2,-1
  }
}
  80f62c:	e037883a 	mov	sp,fp
  80f630:	dfc00117 	ldw	ra,4(sp)
  80f634:	df000017 	ldw	fp,0(sp)
  80f638:	dec00204 	addi	sp,sp,8
  80f63c:	f800283a 	ret

0080f640 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
  80f640:	defffc04 	addi	sp,sp,-16
  80f644:	df000315 	stw	fp,12(sp)
  80f648:	df000304 	addi	fp,sp,12
  80f64c:	e13ffd15 	stw	r4,-12(fp)
  80f650:	e17ffe15 	stw	r5,-8(fp)
  80f654:	e1bfff15 	stw	r6,-4(fp)
  return len;
  80f658:	e0bfff17 	ldw	r2,-4(fp)
}
  80f65c:	e037883a 	mov	sp,fp
  80f660:	df000017 	ldw	fp,0(sp)
  80f664:	dec00104 	addi	sp,sp,4
  80f668:	f800283a 	ret

0080f66c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80f66c:	defffe04 	addi	sp,sp,-8
  80f670:	dfc00115 	stw	ra,4(sp)
  80f674:	df000015 	stw	fp,0(sp)
  80f678:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80f67c:	d0a00b17 	ldw	r2,-32724(gp)
  80f680:	10000326 	beq	r2,zero,80f690 <alt_get_errno+0x24>
  80f684:	d0a00b17 	ldw	r2,-32724(gp)
  80f688:	103ee83a 	callr	r2
  80f68c:	00000106 	br	80f694 <alt_get_errno+0x28>
  80f690:	d0a6d104 	addi	r2,gp,-25788
}
  80f694:	e037883a 	mov	sp,fp
  80f698:	dfc00117 	ldw	ra,4(sp)
  80f69c:	df000017 	ldw	fp,0(sp)
  80f6a0:	dec00204 	addi	sp,sp,8
  80f6a4:	f800283a 	ret

0080f6a8 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
  80f6a8:	defffb04 	addi	sp,sp,-20
  80f6ac:	dfc00415 	stw	ra,16(sp)
  80f6b0:	df000315 	stw	fp,12(sp)
  80f6b4:	df000304 	addi	fp,sp,12
  80f6b8:	e13ffe15 	stw	r4,-8(fp)
  80f6bc:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80f6c0:	e0bffe17 	ldw	r2,-8(fp)
  80f6c4:	10000616 	blt	r2,zero,80f6e0 <fstat+0x38>
  80f6c8:	e0bffe17 	ldw	r2,-8(fp)
  80f6cc:	10c00324 	muli	r3,r2,12
  80f6d0:	00802074 	movhi	r2,129
  80f6d4:	108ad904 	addi	r2,r2,11108
  80f6d8:	1885883a 	add	r2,r3,r2
  80f6dc:	00000106 	br	80f6e4 <fstat+0x3c>
  80f6e0:	0005883a 	mov	r2,zero
  80f6e4:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
  80f6e8:	e0bffd17 	ldw	r2,-12(fp)
  80f6ec:	10001026 	beq	r2,zero,80f730 <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
  80f6f0:	e0bffd17 	ldw	r2,-12(fp)
  80f6f4:	10800017 	ldw	r2,0(r2)
  80f6f8:	10800817 	ldw	r2,32(r2)
  80f6fc:	10000726 	beq	r2,zero,80f71c <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
  80f700:	e0bffd17 	ldw	r2,-12(fp)
  80f704:	10800017 	ldw	r2,0(r2)
  80f708:	10800817 	ldw	r2,32(r2)
  80f70c:	e17fff17 	ldw	r5,-4(fp)
  80f710:	e13ffd17 	ldw	r4,-12(fp)
  80f714:	103ee83a 	callr	r2
  80f718:	00000a06 	br	80f744 <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
  80f71c:	e0bfff17 	ldw	r2,-4(fp)
  80f720:	00c80004 	movi	r3,8192
  80f724:	10c00115 	stw	r3,4(r2)
      return 0;
  80f728:	0005883a 	mov	r2,zero
  80f72c:	00000506 	br	80f744 <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
  80f730:	080f66c0 	call	80f66c <alt_get_errno>
  80f734:	1007883a 	mov	r3,r2
  80f738:	00801444 	movi	r2,81
  80f73c:	18800015 	stw	r2,0(r3)
    return -1;
  80f740:	00bfffc4 	movi	r2,-1
  }
}
  80f744:	e037883a 	mov	sp,fp
  80f748:	dfc00117 	ldw	ra,4(sp)
  80f74c:	df000017 	ldw	fp,0(sp)
  80f750:	dec00204 	addi	sp,sp,8
  80f754:	f800283a 	ret

0080f758 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80f758:	defffe04 	addi	sp,sp,-8
  80f75c:	dfc00115 	stw	ra,4(sp)
  80f760:	df000015 	stw	fp,0(sp)
  80f764:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80f768:	d0a00b17 	ldw	r2,-32724(gp)
  80f76c:	10000326 	beq	r2,zero,80f77c <alt_get_errno+0x24>
  80f770:	d0a00b17 	ldw	r2,-32724(gp)
  80f774:	103ee83a 	callr	r2
  80f778:	00000106 	br	80f780 <alt_get_errno+0x28>
  80f77c:	d0a6d104 	addi	r2,gp,-25788
}
  80f780:	e037883a 	mov	sp,fp
  80f784:	dfc00117 	ldw	ra,4(sp)
  80f788:	df000017 	ldw	fp,0(sp)
  80f78c:	dec00204 	addi	sp,sp,8
  80f790:	f800283a 	ret

0080f794 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
  80f794:	deffed04 	addi	sp,sp,-76
  80f798:	dfc01215 	stw	ra,72(sp)
  80f79c:	df001115 	stw	fp,68(sp)
  80f7a0:	df001104 	addi	fp,sp,68
  80f7a4:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80f7a8:	e0bfff17 	ldw	r2,-4(fp)
  80f7ac:	10000616 	blt	r2,zero,80f7c8 <isatty+0x34>
  80f7b0:	e0bfff17 	ldw	r2,-4(fp)
  80f7b4:	10c00324 	muli	r3,r2,12
  80f7b8:	00802074 	movhi	r2,129
  80f7bc:	108ad904 	addi	r2,r2,11108
  80f7c0:	1885883a 	add	r2,r3,r2
  80f7c4:	00000106 	br	80f7cc <isatty+0x38>
  80f7c8:	0005883a 	mov	r2,zero
  80f7cc:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
  80f7d0:	e0bfef17 	ldw	r2,-68(fp)
  80f7d4:	10000e26 	beq	r2,zero,80f810 <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
  80f7d8:	e0bfef17 	ldw	r2,-68(fp)
  80f7dc:	10800017 	ldw	r2,0(r2)
  80f7e0:	10800817 	ldw	r2,32(r2)
  80f7e4:	1000021e 	bne	r2,zero,80f7f0 <isatty+0x5c>
    {
      return 1;
  80f7e8:	00800044 	movi	r2,1
  80f7ec:	00000d06 	br	80f824 <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
  80f7f0:	e0bff004 	addi	r2,fp,-64
  80f7f4:	100b883a 	mov	r5,r2
  80f7f8:	e13fff17 	ldw	r4,-4(fp)
  80f7fc:	080f6a80 	call	80f6a8 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
  80f800:	e0bff117 	ldw	r2,-60(fp)
  80f804:	10880020 	cmpeqi	r2,r2,8192
  80f808:	10803fcc 	andi	r2,r2,255
  80f80c:	00000506 	br	80f824 <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
  80f810:	080f7580 	call	80f758 <alt_get_errno>
  80f814:	1007883a 	mov	r3,r2
  80f818:	00801444 	movi	r2,81
  80f81c:	18800015 	stw	r2,0(r3)
    return 0;
  80f820:	0005883a 	mov	r2,zero
  }
}
  80f824:	e037883a 	mov	sp,fp
  80f828:	dfc00117 	ldw	ra,4(sp)
  80f82c:	df000017 	ldw	fp,0(sp)
  80f830:	dec00204 	addi	sp,sp,8
  80f834:	f800283a 	ret

0080f838 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
  80f838:	defffc04 	addi	sp,sp,-16
  80f83c:	df000315 	stw	fp,12(sp)
  80f840:	df000304 	addi	fp,sp,12
  80f844:	e13ffd15 	stw	r4,-12(fp)
  80f848:	e17ffe15 	stw	r5,-8(fp)
  80f84c:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
  80f850:	e0fffe17 	ldw	r3,-8(fp)
  80f854:	e0bffd17 	ldw	r2,-12(fp)
  80f858:	18800c26 	beq	r3,r2,80f88c <alt_load_section+0x54>
  {
    while( to != end )
  80f85c:	00000806 	br	80f880 <alt_load_section+0x48>
    {
      *to++ = *from++;
  80f860:	e0bffe17 	ldw	r2,-8(fp)
  80f864:	10c00104 	addi	r3,r2,4
  80f868:	e0fffe15 	stw	r3,-8(fp)
  80f86c:	e0fffd17 	ldw	r3,-12(fp)
  80f870:	19000104 	addi	r4,r3,4
  80f874:	e13ffd15 	stw	r4,-12(fp)
  80f878:	18c00017 	ldw	r3,0(r3)
  80f87c:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
  80f880:	e0fffe17 	ldw	r3,-8(fp)
  80f884:	e0bfff17 	ldw	r2,-4(fp)
  80f888:	18bff51e 	bne	r3,r2,80f860 <__alt_data_end+0xff80f860>
    {
      *to++ = *from++;
    }
  }
}
  80f88c:	0001883a 	nop
  80f890:	e037883a 	mov	sp,fp
  80f894:	df000017 	ldw	fp,0(sp)
  80f898:	dec00104 	addi	sp,sp,4
  80f89c:	f800283a 	ret

0080f8a0 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
  80f8a0:	defffe04 	addi	sp,sp,-8
  80f8a4:	dfc00115 	stw	ra,4(sp)
  80f8a8:	df000015 	stw	fp,0(sp)
  80f8ac:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
  80f8b0:	01802074 	movhi	r6,129
  80f8b4:	318f6104 	addi	r6,r6,15748
  80f8b8:	01402074 	movhi	r5,129
  80f8bc:	2948a604 	addi	r5,r5,8856
  80f8c0:	01002074 	movhi	r4,129
  80f8c4:	210f6104 	addi	r4,r4,15748
  80f8c8:	080f8380 	call	80f838 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
  80f8cc:	01802034 	movhi	r6,128
  80f8d0:	31809104 	addi	r6,r6,580
  80f8d4:	01402034 	movhi	r5,128
  80f8d8:	29400804 	addi	r5,r5,32
  80f8dc:	01002034 	movhi	r4,128
  80f8e0:	21000804 	addi	r4,r4,32
  80f8e4:	080f8380 	call	80f838 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
  80f8e8:	01802074 	movhi	r6,129
  80f8ec:	3188a604 	addi	r6,r6,8856
  80f8f0:	01402074 	movhi	r5,129
  80f8f4:	29476604 	addi	r5,r5,7576
  80f8f8:	01002074 	movhi	r4,129
  80f8fc:	21076604 	addi	r4,r4,7576
  80f900:	080f8380 	call	80f838 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
  80f904:	0810c840 	call	810c84 <alt_dcache_flush_all>
  alt_icache_flush_all();
  80f908:	0810e6c0 	call	810e6c <alt_icache_flush_all>
}
  80f90c:	0001883a 	nop
  80f910:	e037883a 	mov	sp,fp
  80f914:	dfc00117 	ldw	ra,4(sp)
  80f918:	df000017 	ldw	fp,0(sp)
  80f91c:	dec00204 	addi	sp,sp,8
  80f920:	f800283a 	ret

0080f924 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80f924:	defffe04 	addi	sp,sp,-8
  80f928:	dfc00115 	stw	ra,4(sp)
  80f92c:	df000015 	stw	fp,0(sp)
  80f930:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80f934:	d0a00b17 	ldw	r2,-32724(gp)
  80f938:	10000326 	beq	r2,zero,80f948 <alt_get_errno+0x24>
  80f93c:	d0a00b17 	ldw	r2,-32724(gp)
  80f940:	103ee83a 	callr	r2
  80f944:	00000106 	br	80f94c <alt_get_errno+0x28>
  80f948:	d0a6d104 	addi	r2,gp,-25788
}
  80f94c:	e037883a 	mov	sp,fp
  80f950:	dfc00117 	ldw	ra,4(sp)
  80f954:	df000017 	ldw	fp,0(sp)
  80f958:	dec00204 	addi	sp,sp,8
  80f95c:	f800283a 	ret

0080f960 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
  80f960:	defff904 	addi	sp,sp,-28
  80f964:	dfc00615 	stw	ra,24(sp)
  80f968:	df000515 	stw	fp,20(sp)
  80f96c:	df000504 	addi	fp,sp,20
  80f970:	e13ffd15 	stw	r4,-12(fp)
  80f974:	e17ffe15 	stw	r5,-8(fp)
  80f978:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
  80f97c:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80f980:	e0bffd17 	ldw	r2,-12(fp)
  80f984:	10000616 	blt	r2,zero,80f9a0 <lseek+0x40>
  80f988:	e0bffd17 	ldw	r2,-12(fp)
  80f98c:	10c00324 	muli	r3,r2,12
  80f990:	00802074 	movhi	r2,129
  80f994:	108ad904 	addi	r2,r2,11108
  80f998:	1885883a 	add	r2,r3,r2
  80f99c:	00000106 	br	80f9a4 <lseek+0x44>
  80f9a0:	0005883a 	mov	r2,zero
  80f9a4:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
  80f9a8:	e0bffc17 	ldw	r2,-16(fp)
  80f9ac:	10001026 	beq	r2,zero,80f9f0 <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
  80f9b0:	e0bffc17 	ldw	r2,-16(fp)
  80f9b4:	10800017 	ldw	r2,0(r2)
  80f9b8:	10800717 	ldw	r2,28(r2)
  80f9bc:	10000926 	beq	r2,zero,80f9e4 <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
  80f9c0:	e0bffc17 	ldw	r2,-16(fp)
  80f9c4:	10800017 	ldw	r2,0(r2)
  80f9c8:	10800717 	ldw	r2,28(r2)
  80f9cc:	e1bfff17 	ldw	r6,-4(fp)
  80f9d0:	e17ffe17 	ldw	r5,-8(fp)
  80f9d4:	e13ffc17 	ldw	r4,-16(fp)
  80f9d8:	103ee83a 	callr	r2
  80f9dc:	e0bffb15 	stw	r2,-20(fp)
  80f9e0:	00000506 	br	80f9f8 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
  80f9e4:	00bfde84 	movi	r2,-134
  80f9e8:	e0bffb15 	stw	r2,-20(fp)
  80f9ec:	00000206 	br	80f9f8 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
  80f9f0:	00bfebc4 	movi	r2,-81
  80f9f4:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
  80f9f8:	e0bffb17 	ldw	r2,-20(fp)
  80f9fc:	1000070e 	bge	r2,zero,80fa1c <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
  80fa00:	080f9240 	call	80f924 <alt_get_errno>
  80fa04:	1007883a 	mov	r3,r2
  80fa08:	e0bffb17 	ldw	r2,-20(fp)
  80fa0c:	0085c83a 	sub	r2,zero,r2
  80fa10:	18800015 	stw	r2,0(r3)
    rc = -1;
  80fa14:	00bfffc4 	movi	r2,-1
  80fa18:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
  80fa1c:	e0bffb17 	ldw	r2,-20(fp)
}
  80fa20:	e037883a 	mov	sp,fp
  80fa24:	dfc00117 	ldw	ra,4(sp)
  80fa28:	df000017 	ldw	fp,0(sp)
  80fa2c:	dec00204 	addi	sp,sp,8
  80fa30:	f800283a 	ret

0080fa34 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
  80fa34:	defffd04 	addi	sp,sp,-12
  80fa38:	dfc00215 	stw	ra,8(sp)
  80fa3c:	df000115 	stw	fp,4(sp)
  80fa40:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
  80fa44:	0009883a 	mov	r4,zero
  80fa48:	080ff600 	call	80ff60 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
  80fa4c:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
  80fa50:	080ff980 	call	80ff98 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
  80fa54:	01802074 	movhi	r6,129
  80fa58:	31889e04 	addi	r6,r6,8824
  80fa5c:	01402074 	movhi	r5,129
  80fa60:	29489e04 	addi	r5,r5,8824
  80fa64:	01002074 	movhi	r4,129
  80fa68:	21089e04 	addi	r4,r4,8824
  80fa6c:	08112040 	call	811204 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
  80fa70:	0810dac0 	call	810dac <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
  80fa74:	01002074 	movhi	r4,129
  80fa78:	21038304 	addi	r4,r4,3596
  80fa7c:	0811a040 	call	811a04 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
  80fa80:	d0a6d217 	ldw	r2,-25784(gp)
  80fa84:	d0e6d317 	ldw	r3,-25780(gp)
  80fa88:	d126d417 	ldw	r4,-25776(gp)
  80fa8c:	200d883a 	mov	r6,r4
  80fa90:	180b883a 	mov	r5,r3
  80fa94:	1009883a 	mov	r4,r2
  80fa98:	080060c0 	call	80060c <main>
  80fa9c:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
  80faa0:	01000044 	movi	r4,1
  80faa4:	080f5700 	call	80f570 <close>
  exit (result);
  80faa8:	e13fff17 	ldw	r4,-4(fp)
  80faac:	0811a180 	call	811a18 <exit>

0080fab0 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
  80fab0:	defffe04 	addi	sp,sp,-8
  80fab4:	df000115 	stw	fp,4(sp)
  80fab8:	df000104 	addi	fp,sp,4
  80fabc:	e13fff15 	stw	r4,-4(fp)
}
  80fac0:	0001883a 	nop
  80fac4:	e037883a 	mov	sp,fp
  80fac8:	df000017 	ldw	fp,0(sp)
  80facc:	dec00104 	addi	sp,sp,4
  80fad0:	f800283a 	ret

0080fad4 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
  80fad4:	defffe04 	addi	sp,sp,-8
  80fad8:	df000115 	stw	fp,4(sp)
  80fadc:	df000104 	addi	fp,sp,4
  80fae0:	e13fff15 	stw	r4,-4(fp)
}
  80fae4:	0001883a 	nop
  80fae8:	e037883a 	mov	sp,fp
  80faec:	df000017 	ldw	fp,0(sp)
  80faf0:	dec00104 	addi	sp,sp,4
  80faf4:	f800283a 	ret

0080faf8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80faf8:	defffe04 	addi	sp,sp,-8
  80fafc:	dfc00115 	stw	ra,4(sp)
  80fb00:	df000015 	stw	fp,0(sp)
  80fb04:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80fb08:	d0a00b17 	ldw	r2,-32724(gp)
  80fb0c:	10000326 	beq	r2,zero,80fb1c <alt_get_errno+0x24>
  80fb10:	d0a00b17 	ldw	r2,-32724(gp)
  80fb14:	103ee83a 	callr	r2
  80fb18:	00000106 	br	80fb20 <alt_get_errno+0x28>
  80fb1c:	d0a6d104 	addi	r2,gp,-25788
}
  80fb20:	e037883a 	mov	sp,fp
  80fb24:	dfc00117 	ldw	ra,4(sp)
  80fb28:	df000017 	ldw	fp,0(sp)
  80fb2c:	dec00204 	addi	sp,sp,8
  80fb30:	f800283a 	ret

0080fb34 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
  80fb34:	defff904 	addi	sp,sp,-28
  80fb38:	dfc00615 	stw	ra,24(sp)
  80fb3c:	df000515 	stw	fp,20(sp)
  80fb40:	df000504 	addi	fp,sp,20
  80fb44:	e13ffd15 	stw	r4,-12(fp)
  80fb48:	e17ffe15 	stw	r5,-8(fp)
  80fb4c:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80fb50:	e0bffd17 	ldw	r2,-12(fp)
  80fb54:	10000616 	blt	r2,zero,80fb70 <read+0x3c>
  80fb58:	e0bffd17 	ldw	r2,-12(fp)
  80fb5c:	10c00324 	muli	r3,r2,12
  80fb60:	00802074 	movhi	r2,129
  80fb64:	108ad904 	addi	r2,r2,11108
  80fb68:	1885883a 	add	r2,r3,r2
  80fb6c:	00000106 	br	80fb74 <read+0x40>
  80fb70:	0005883a 	mov	r2,zero
  80fb74:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
  80fb78:	e0bffb17 	ldw	r2,-20(fp)
  80fb7c:	10002226 	beq	r2,zero,80fc08 <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
  80fb80:	e0bffb17 	ldw	r2,-20(fp)
  80fb84:	10800217 	ldw	r2,8(r2)
  80fb88:	108000cc 	andi	r2,r2,3
  80fb8c:	10800060 	cmpeqi	r2,r2,1
  80fb90:	1000181e 	bne	r2,zero,80fbf4 <read+0xc0>
        (fd->dev->read))
  80fb94:	e0bffb17 	ldw	r2,-20(fp)
  80fb98:	10800017 	ldw	r2,0(r2)
  80fb9c:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
  80fba0:	10001426 	beq	r2,zero,80fbf4 <read+0xc0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
  80fba4:	e0bffb17 	ldw	r2,-20(fp)
  80fba8:	10800017 	ldw	r2,0(r2)
  80fbac:	10800517 	ldw	r2,20(r2)
  80fbb0:	e0ffff17 	ldw	r3,-4(fp)
  80fbb4:	180d883a 	mov	r6,r3
  80fbb8:	e17ffe17 	ldw	r5,-8(fp)
  80fbbc:	e13ffb17 	ldw	r4,-20(fp)
  80fbc0:	103ee83a 	callr	r2
  80fbc4:	e0bffc15 	stw	r2,-16(fp)
  80fbc8:	e0bffc17 	ldw	r2,-16(fp)
  80fbcc:	1000070e 	bge	r2,zero,80fbec <read+0xb8>
        {
          ALT_ERRNO = -rval;
  80fbd0:	080faf80 	call	80faf8 <alt_get_errno>
  80fbd4:	1007883a 	mov	r3,r2
  80fbd8:	e0bffc17 	ldw	r2,-16(fp)
  80fbdc:	0085c83a 	sub	r2,zero,r2
  80fbe0:	18800015 	stw	r2,0(r3)
          return -1;
  80fbe4:	00bfffc4 	movi	r2,-1
  80fbe8:	00000c06 	br	80fc1c <read+0xe8>
        }
        return rval;
  80fbec:	e0bffc17 	ldw	r2,-16(fp)
  80fbf0:	00000a06 	br	80fc1c <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
  80fbf4:	080faf80 	call	80faf8 <alt_get_errno>
  80fbf8:	1007883a 	mov	r3,r2
  80fbfc:	00800344 	movi	r2,13
  80fc00:	18800015 	stw	r2,0(r3)
  80fc04:	00000406 	br	80fc18 <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
  80fc08:	080faf80 	call	80faf8 <alt_get_errno>
  80fc0c:	1007883a 	mov	r3,r2
  80fc10:	00801444 	movi	r2,81
  80fc14:	18800015 	stw	r2,0(r3)
  }
  return -1;
  80fc18:	00bfffc4 	movi	r2,-1
}
  80fc1c:	e037883a 	mov	sp,fp
  80fc20:	dfc00117 	ldw	ra,4(sp)
  80fc24:	df000017 	ldw	fp,0(sp)
  80fc28:	dec00204 	addi	sp,sp,8
  80fc2c:	f800283a 	ret

0080fc30 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
  80fc30:	defffe04 	addi	sp,sp,-8
  80fc34:	df000115 	stw	fp,4(sp)
  80fc38:	df000104 	addi	fp,sp,4
  80fc3c:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
  80fc40:	e0bfff17 	ldw	r2,-4(fp)
  80fc44:	108000d0 	cmplti	r2,r2,3
  80fc48:	10000d1e 	bne	r2,zero,80fc80 <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
  80fc4c:	00802074 	movhi	r2,129
  80fc50:	108ad904 	addi	r2,r2,11108
  80fc54:	e0ffff17 	ldw	r3,-4(fp)
  80fc58:	18c00324 	muli	r3,r3,12
  80fc5c:	10c5883a 	add	r2,r2,r3
  80fc60:	10800204 	addi	r2,r2,8
  80fc64:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
  80fc68:	00802074 	movhi	r2,129
  80fc6c:	108ad904 	addi	r2,r2,11108
  80fc70:	e0ffff17 	ldw	r3,-4(fp)
  80fc74:	18c00324 	muli	r3,r3,12
  80fc78:	10c5883a 	add	r2,r2,r3
  80fc7c:	10000015 	stw	zero,0(r2)
  }
}
  80fc80:	0001883a 	nop
  80fc84:	e037883a 	mov	sp,fp
  80fc88:	df000017 	ldw	fp,0(sp)
  80fc8c:	dec00104 	addi	sp,sp,4
  80fc90:	f800283a 	ret

0080fc94 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
  80fc94:	defff904 	addi	sp,sp,-28
  80fc98:	df000615 	stw	fp,24(sp)
  80fc9c:	df000604 	addi	fp,sp,24
  80fca0:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80fca4:	0005303a 	rdctl	r2,status
  80fca8:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80fcac:	e0fffe17 	ldw	r3,-8(fp)
  80fcb0:	00bfff84 	movi	r2,-2
  80fcb4:	1884703a 	and	r2,r3,r2
  80fcb8:	1001703a 	wrctl	status,r2
  
  return context;
  80fcbc:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
  80fcc0:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
  80fcc4:	d0a00c17 	ldw	r2,-32720(gp)
  80fcc8:	10c000c4 	addi	r3,r2,3
  80fccc:	00bfff04 	movi	r2,-4
  80fcd0:	1884703a 	and	r2,r3,r2
  80fcd4:	d0a00c15 	stw	r2,-32720(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
  80fcd8:	d0e00c17 	ldw	r3,-32720(gp)
  80fcdc:	e0bfff17 	ldw	r2,-4(fp)
  80fce0:	1887883a 	add	r3,r3,r2
  80fce4:	00804034 	movhi	r2,256
  80fce8:	10800004 	addi	r2,r2,0
  80fcec:	10c0062e 	bgeu	r2,r3,80fd08 <sbrk+0x74>
  80fcf0:	e0bffb17 	ldw	r2,-20(fp)
  80fcf4:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80fcf8:	e0bffa17 	ldw	r2,-24(fp)
  80fcfc:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  80fd00:	00bfffc4 	movi	r2,-1
  80fd04:	00000b06 	br	80fd34 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
  80fd08:	d0a00c17 	ldw	r2,-32720(gp)
  80fd0c:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
  80fd10:	d0e00c17 	ldw	r3,-32720(gp)
  80fd14:	e0bfff17 	ldw	r2,-4(fp)
  80fd18:	1885883a 	add	r2,r3,r2
  80fd1c:	d0a00c15 	stw	r2,-32720(gp)
  80fd20:	e0bffb17 	ldw	r2,-20(fp)
  80fd24:	e0bffc15 	stw	r2,-16(fp)
  80fd28:	e0bffc17 	ldw	r2,-16(fp)
  80fd2c:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
  80fd30:	e0bffd17 	ldw	r2,-12(fp)
} 
  80fd34:	e037883a 	mov	sp,fp
  80fd38:	df000017 	ldw	fp,0(sp)
  80fd3c:	dec00104 	addi	sp,sp,4
  80fd40:	f800283a 	ret

0080fd44 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80fd44:	defffe04 	addi	sp,sp,-8
  80fd48:	dfc00115 	stw	ra,4(sp)
  80fd4c:	df000015 	stw	fp,0(sp)
  80fd50:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80fd54:	d0a00b17 	ldw	r2,-32724(gp)
  80fd58:	10000326 	beq	r2,zero,80fd68 <alt_get_errno+0x24>
  80fd5c:	d0a00b17 	ldw	r2,-32724(gp)
  80fd60:	103ee83a 	callr	r2
  80fd64:	00000106 	br	80fd6c <alt_get_errno+0x28>
  80fd68:	d0a6d104 	addi	r2,gp,-25788
}
  80fd6c:	e037883a 	mov	sp,fp
  80fd70:	dfc00117 	ldw	ra,4(sp)
  80fd74:	df000017 	ldw	fp,0(sp)
  80fd78:	dec00204 	addi	sp,sp,8
  80fd7c:	f800283a 	ret

0080fd80 <times>:
 *
 * ALT_TIMES is mapped onto the times() system call in alt_syscall.h
 */
 
clock_t ALT_TIMES (struct tms *buf)
{
  80fd80:	defffc04 	addi	sp,sp,-16
  80fd84:	dfc00315 	stw	ra,12(sp)
  80fd88:	df000215 	stw	fp,8(sp)
  80fd8c:	df000204 	addi	fp,sp,8
  80fd90:	e13fff15 	stw	r4,-4(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
  80fd94:	d0a6d717 	ldw	r2,-25764(gp)
  clock_t ticks = alt_nticks(); 
  80fd98:	e0bffe15 	stw	r2,-8(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
  80fd9c:	d0a6d617 	ldw	r2,-25768(gp)

  /* If there is no system clock present, generate an error */

  if (!alt_ticks_per_second())
  80fda0:	1000061e 	bne	r2,zero,80fdbc <times+0x3c>
  {
    ALT_ERRNO = ENOSYS;
  80fda4:	080fd440 	call	80fd44 <alt_get_errno>
  80fda8:	1007883a 	mov	r3,r2
  80fdac:	00801604 	movi	r2,88
  80fdb0:	18800015 	stw	r2,0(r3)
    return 0;
  80fdb4:	0005883a 	mov	r2,zero
  80fdb8:	00000a06 	br	80fde4 <times+0x64>
  }

  /* Otherwise return the elapsed time */

  buf->tms_utime  = 0;
  80fdbc:	e0bfff17 	ldw	r2,-4(fp)
  80fdc0:	10000015 	stw	zero,0(r2)
  buf->tms_stime  = ticks;
  80fdc4:	e0bfff17 	ldw	r2,-4(fp)
  80fdc8:	e0fffe17 	ldw	r3,-8(fp)
  80fdcc:	10c00115 	stw	r3,4(r2)
  buf->tms_cutime = 0;
  80fdd0:	e0bfff17 	ldw	r2,-4(fp)
  80fdd4:	10000215 	stw	zero,8(r2)
  buf->tms_cstime = 0;
  80fdd8:	e0bfff17 	ldw	r2,-4(fp)
  80fddc:	10000315 	stw	zero,12(r2)

  return ticks;
  80fde0:	e0bffe17 	ldw	r2,-8(fp)
}
  80fde4:	e037883a 	mov	sp,fp
  80fde8:	dfc00117 	ldw	ra,4(sp)
  80fdec:	df000017 	ldw	fp,0(sp)
  80fdf0:	dec00204 	addi	sp,sp,8
  80fdf4:	f800283a 	ret

0080fdf8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80fdf8:	defffe04 	addi	sp,sp,-8
  80fdfc:	dfc00115 	stw	ra,4(sp)
  80fe00:	df000015 	stw	fp,0(sp)
  80fe04:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80fe08:	d0a00b17 	ldw	r2,-32724(gp)
  80fe0c:	10000326 	beq	r2,zero,80fe1c <alt_get_errno+0x24>
  80fe10:	d0a00b17 	ldw	r2,-32724(gp)
  80fe14:	103ee83a 	callr	r2
  80fe18:	00000106 	br	80fe20 <alt_get_errno+0x28>
  80fe1c:	d0a6d104 	addi	r2,gp,-25788
}
  80fe20:	e037883a 	mov	sp,fp
  80fe24:	dfc00117 	ldw	ra,4(sp)
  80fe28:	df000017 	ldw	fp,0(sp)
  80fe2c:	dec00204 	addi	sp,sp,8
  80fe30:	f800283a 	ret

0080fe34 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
  80fe34:	defff904 	addi	sp,sp,-28
  80fe38:	dfc00615 	stw	ra,24(sp)
  80fe3c:	df000515 	stw	fp,20(sp)
  80fe40:	df000504 	addi	fp,sp,20
  80fe44:	e13ffd15 	stw	r4,-12(fp)
  80fe48:	e17ffe15 	stw	r5,-8(fp)
  80fe4c:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80fe50:	e0bffd17 	ldw	r2,-12(fp)
  80fe54:	10000616 	blt	r2,zero,80fe70 <write+0x3c>
  80fe58:	e0bffd17 	ldw	r2,-12(fp)
  80fe5c:	10c00324 	muli	r3,r2,12
  80fe60:	00802074 	movhi	r2,129
  80fe64:	108ad904 	addi	r2,r2,11108
  80fe68:	1885883a 	add	r2,r3,r2
  80fe6c:	00000106 	br	80fe74 <write+0x40>
  80fe70:	0005883a 	mov	r2,zero
  80fe74:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
  80fe78:	e0bffb17 	ldw	r2,-20(fp)
  80fe7c:	10002126 	beq	r2,zero,80ff04 <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
  80fe80:	e0bffb17 	ldw	r2,-20(fp)
  80fe84:	10800217 	ldw	r2,8(r2)
  80fe88:	108000cc 	andi	r2,r2,3
  80fe8c:	10001826 	beq	r2,zero,80fef0 <write+0xbc>
  80fe90:	e0bffb17 	ldw	r2,-20(fp)
  80fe94:	10800017 	ldw	r2,0(r2)
  80fe98:	10800617 	ldw	r2,24(r2)
  80fe9c:	10001426 	beq	r2,zero,80fef0 <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
  80fea0:	e0bffb17 	ldw	r2,-20(fp)
  80fea4:	10800017 	ldw	r2,0(r2)
  80fea8:	10800617 	ldw	r2,24(r2)
  80feac:	e0ffff17 	ldw	r3,-4(fp)
  80feb0:	180d883a 	mov	r6,r3
  80feb4:	e17ffe17 	ldw	r5,-8(fp)
  80feb8:	e13ffb17 	ldw	r4,-20(fp)
  80febc:	103ee83a 	callr	r2
  80fec0:	e0bffc15 	stw	r2,-16(fp)
  80fec4:	e0bffc17 	ldw	r2,-16(fp)
  80fec8:	1000070e 	bge	r2,zero,80fee8 <write+0xb4>
      {
        ALT_ERRNO = -rval;
  80fecc:	080fdf80 	call	80fdf8 <alt_get_errno>
  80fed0:	1007883a 	mov	r3,r2
  80fed4:	e0bffc17 	ldw	r2,-16(fp)
  80fed8:	0085c83a 	sub	r2,zero,r2
  80fedc:	18800015 	stw	r2,0(r3)
        return -1;
  80fee0:	00bfffc4 	movi	r2,-1
  80fee4:	00000c06 	br	80ff18 <write+0xe4>
      }
      return rval;
  80fee8:	e0bffc17 	ldw	r2,-16(fp)
  80feec:	00000a06 	br	80ff18 <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
  80fef0:	080fdf80 	call	80fdf8 <alt_get_errno>
  80fef4:	1007883a 	mov	r3,r2
  80fef8:	00800344 	movi	r2,13
  80fefc:	18800015 	stw	r2,0(r3)
  80ff00:	00000406 	br	80ff14 <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
  80ff04:	080fdf80 	call	80fdf8 <alt_get_errno>
  80ff08:	1007883a 	mov	r3,r2
  80ff0c:	00801444 	movi	r2,81
  80ff10:	18800015 	stw	r2,0(r3)
  }
  return -1;
  80ff14:	00bfffc4 	movi	r2,-1
}
  80ff18:	e037883a 	mov	sp,fp
  80ff1c:	dfc00117 	ldw	ra,4(sp)
  80ff20:	df000017 	ldw	fp,0(sp)
  80ff24:	dec00204 	addi	sp,sp,8
  80ff28:	f800283a 	ret

0080ff2c <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
  80ff2c:	defffd04 	addi	sp,sp,-12
  80ff30:	dfc00215 	stw	ra,8(sp)
  80ff34:	df000115 	stw	fp,4(sp)
  80ff38:	df000104 	addi	fp,sp,4
  80ff3c:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
  80ff40:	d1600804 	addi	r5,gp,-32736
  80ff44:	e13fff17 	ldw	r4,-4(fp)
  80ff48:	0810d080 	call	810d08 <alt_dev_llist_insert>
}
  80ff4c:	e037883a 	mov	sp,fp
  80ff50:	dfc00117 	ldw	ra,4(sp)
  80ff54:	df000017 	ldw	fp,0(sp)
  80ff58:	dec00204 	addi	sp,sp,8
  80ff5c:	f800283a 	ret

0080ff60 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
  80ff60:	defffd04 	addi	sp,sp,-12
  80ff64:	dfc00215 	stw	ra,8(sp)
  80ff68:	df000115 	stw	fp,4(sp)
  80ff6c:	df000104 	addi	fp,sp,4
  80ff70:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( CPU, cpu);
  80ff74:	08116780 	call	811678 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
  80ff78:	00800044 	movi	r2,1
  80ff7c:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
  80ff80:	0001883a 	nop
  80ff84:	e037883a 	mov	sp,fp
  80ff88:	dfc00117 	ldw	ra,4(sp)
  80ff8c:	df000017 	ldw	fp,0(sp)
  80ff90:	dec00204 	addi	sp,sp,8
  80ff94:	f800283a 	ret

0080ff98 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
  80ff98:	defffe04 	addi	sp,sp,-8
  80ff9c:	dfc00115 	stw	ra,4(sp)
  80ffa0:	df000015 	stw	fp,0(sp)
  80ffa4:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( SYS_CLK_TIMER, sys_clk_timer);
  80ffa8:	01c0fa04 	movi	r7,1000
  80ffac:	01800044 	movi	r6,1
  80ffb0:	000b883a 	mov	r5,zero
  80ffb4:	01004034 	movhi	r4,256
  80ffb8:	21040004 	addi	r4,r4,4096
  80ffbc:	0810adc0 	call	810adc <alt_avalon_timer_sc_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, jtag_uart);
  80ffc0:	01800404 	movi	r6,16
  80ffc4:	000b883a 	mov	r5,zero
  80ffc8:	01002074 	movhi	r4,129
  80ffcc:	210b4304 	addi	r4,r4,11532
  80ffd0:	08101600 	call	810160 <altera_avalon_jtag_uart_init>
  80ffd4:	01002074 	movhi	r4,129
  80ffd8:	210b3904 	addi	r4,r4,11492
  80ffdc:	080ff2c0 	call	80ff2c <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID, sysid);
  80ffe0:	0001883a 	nop
}
  80ffe4:	0001883a 	nop
  80ffe8:	e037883a 	mov	sp,fp
  80ffec:	dfc00117 	ldw	ra,4(sp)
  80fff0:	df000017 	ldw	fp,0(sp)
  80fff4:	dec00204 	addi	sp,sp,8
  80fff8:	f800283a 	ret

0080fffc <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
  80fffc:	defffa04 	addi	sp,sp,-24
  810000:	dfc00515 	stw	ra,20(sp)
  810004:	df000415 	stw	fp,16(sp)
  810008:	df000404 	addi	fp,sp,16
  81000c:	e13ffd15 	stw	r4,-12(fp)
  810010:	e17ffe15 	stw	r5,-8(fp)
  810014:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  810018:	e0bffd17 	ldw	r2,-12(fp)
  81001c:	10800017 	ldw	r2,0(r2)
  810020:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
  810024:	e0bffc17 	ldw	r2,-16(fp)
  810028:	10c00a04 	addi	r3,r2,40
  81002c:	e0bffd17 	ldw	r2,-12(fp)
  810030:	10800217 	ldw	r2,8(r2)
  810034:	100f883a 	mov	r7,r2
  810038:	e1bfff17 	ldw	r6,-4(fp)
  81003c:	e17ffe17 	ldw	r5,-8(fp)
  810040:	1809883a 	mov	r4,r3
  810044:	08106240 	call	810624 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
  810048:	e037883a 	mov	sp,fp
  81004c:	dfc00117 	ldw	ra,4(sp)
  810050:	df000017 	ldw	fp,0(sp)
  810054:	dec00204 	addi	sp,sp,8
  810058:	f800283a 	ret

0081005c <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
  81005c:	defffa04 	addi	sp,sp,-24
  810060:	dfc00515 	stw	ra,20(sp)
  810064:	df000415 	stw	fp,16(sp)
  810068:	df000404 	addi	fp,sp,16
  81006c:	e13ffd15 	stw	r4,-12(fp)
  810070:	e17ffe15 	stw	r5,-8(fp)
  810074:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  810078:	e0bffd17 	ldw	r2,-12(fp)
  81007c:	10800017 	ldw	r2,0(r2)
  810080:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
  810084:	e0bffc17 	ldw	r2,-16(fp)
  810088:	10c00a04 	addi	r3,r2,40
  81008c:	e0bffd17 	ldw	r2,-12(fp)
  810090:	10800217 	ldw	r2,8(r2)
  810094:	100f883a 	mov	r7,r2
  810098:	e1bfff17 	ldw	r6,-4(fp)
  81009c:	e17ffe17 	ldw	r5,-8(fp)
  8100a0:	1809883a 	mov	r4,r3
  8100a4:	08108400 	call	810840 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
  8100a8:	e037883a 	mov	sp,fp
  8100ac:	dfc00117 	ldw	ra,4(sp)
  8100b0:	df000017 	ldw	fp,0(sp)
  8100b4:	dec00204 	addi	sp,sp,8
  8100b8:	f800283a 	ret

008100bc <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
  8100bc:	defffc04 	addi	sp,sp,-16
  8100c0:	dfc00315 	stw	ra,12(sp)
  8100c4:	df000215 	stw	fp,8(sp)
  8100c8:	df000204 	addi	fp,sp,8
  8100cc:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  8100d0:	e0bfff17 	ldw	r2,-4(fp)
  8100d4:	10800017 	ldw	r2,0(r2)
  8100d8:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
  8100dc:	e0bffe17 	ldw	r2,-8(fp)
  8100e0:	10c00a04 	addi	r3,r2,40
  8100e4:	e0bfff17 	ldw	r2,-4(fp)
  8100e8:	10800217 	ldw	r2,8(r2)
  8100ec:	100b883a 	mov	r5,r2
  8100f0:	1809883a 	mov	r4,r3
  8100f4:	08104cc0 	call	8104cc <altera_avalon_jtag_uart_close>
}
  8100f8:	e037883a 	mov	sp,fp
  8100fc:	dfc00117 	ldw	ra,4(sp)
  810100:	df000017 	ldw	fp,0(sp)
  810104:	dec00204 	addi	sp,sp,8
  810108:	f800283a 	ret

0081010c <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
  81010c:	defffa04 	addi	sp,sp,-24
  810110:	dfc00515 	stw	ra,20(sp)
  810114:	df000415 	stw	fp,16(sp)
  810118:	df000404 	addi	fp,sp,16
  81011c:	e13ffd15 	stw	r4,-12(fp)
  810120:	e17ffe15 	stw	r5,-8(fp)
  810124:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
  810128:	e0bffd17 	ldw	r2,-12(fp)
  81012c:	10800017 	ldw	r2,0(r2)
  810130:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
  810134:	e0bffc17 	ldw	r2,-16(fp)
  810138:	10800a04 	addi	r2,r2,40
  81013c:	e1bfff17 	ldw	r6,-4(fp)
  810140:	e17ffe17 	ldw	r5,-8(fp)
  810144:	1009883a 	mov	r4,r2
  810148:	08105340 	call	810534 <altera_avalon_jtag_uart_ioctl>
}
  81014c:	e037883a 	mov	sp,fp
  810150:	dfc00117 	ldw	ra,4(sp)
  810154:	df000017 	ldw	fp,0(sp)
  810158:	dec00204 	addi	sp,sp,8
  81015c:	f800283a 	ret

00810160 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
  810160:	defffa04 	addi	sp,sp,-24
  810164:	dfc00515 	stw	ra,20(sp)
  810168:	df000415 	stw	fp,16(sp)
  81016c:	df000404 	addi	fp,sp,16
  810170:	e13ffd15 	stw	r4,-12(fp)
  810174:	e17ffe15 	stw	r5,-8(fp)
  810178:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  81017c:	e0bffd17 	ldw	r2,-12(fp)
  810180:	00c00044 	movi	r3,1
  810184:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
  810188:	e0bffd17 	ldw	r2,-12(fp)
  81018c:	10800017 	ldw	r2,0(r2)
  810190:	10800104 	addi	r2,r2,4
  810194:	1007883a 	mov	r3,r2
  810198:	e0bffd17 	ldw	r2,-12(fp)
  81019c:	10800817 	ldw	r2,32(r2)
  8101a0:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
  8101a4:	e0bffe17 	ldw	r2,-8(fp)
  8101a8:	e0ffff17 	ldw	r3,-4(fp)
  8101ac:	d8000015 	stw	zero,0(sp)
  8101b0:	e1fffd17 	ldw	r7,-12(fp)
  8101b4:	01802074 	movhi	r6,129
  8101b8:	31808804 	addi	r6,r6,544
  8101bc:	180b883a 	mov	r5,r3
  8101c0:	1009883a 	mov	r4,r2
  8101c4:	0810ea00 	call	810ea0 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
  8101c8:	e0bffd17 	ldw	r2,-12(fp)
  8101cc:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
  8101d0:	e0bffd17 	ldw	r2,-12(fp)
  8101d4:	10800204 	addi	r2,r2,8
  8101d8:	d0e6d617 	ldw	r3,-25768(gp)
  8101dc:	e1fffd17 	ldw	r7,-12(fp)
  8101e0:	01802074 	movhi	r6,129
  8101e4:	31810b04 	addi	r6,r6,1068
  8101e8:	180b883a 	mov	r5,r3
  8101ec:	1009883a 	mov	r4,r2
  8101f0:	0810b580 	call	810b58 <alt_alarm_start>
  8101f4:	1000040e 	bge	r2,zero,810208 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
  8101f8:	e0fffd17 	ldw	r3,-12(fp)
  8101fc:	00a00034 	movhi	r2,32768
  810200:	10bfffc4 	addi	r2,r2,-1
  810204:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
  810208:	0001883a 	nop
  81020c:	e037883a 	mov	sp,fp
  810210:	dfc00117 	ldw	ra,4(sp)
  810214:	df000017 	ldw	fp,0(sp)
  810218:	dec00204 	addi	sp,sp,8
  81021c:	f800283a 	ret

00810220 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
  810220:	defff804 	addi	sp,sp,-32
  810224:	df000715 	stw	fp,28(sp)
  810228:	df000704 	addi	fp,sp,28
  81022c:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
  810230:	e0bfff17 	ldw	r2,-4(fp)
  810234:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
  810238:	e0bffb17 	ldw	r2,-20(fp)
  81023c:	10800017 	ldw	r2,0(r2)
  810240:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  810244:	e0bffc17 	ldw	r2,-16(fp)
  810248:	10800104 	addi	r2,r2,4
  81024c:	10800037 	ldwio	r2,0(r2)
  810250:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
  810254:	e0bffd17 	ldw	r2,-12(fp)
  810258:	1080c00c 	andi	r2,r2,768
  81025c:	10006d26 	beq	r2,zero,810414 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
  810260:	e0bffd17 	ldw	r2,-12(fp)
  810264:	1080400c 	andi	r2,r2,256
  810268:	10003526 	beq	r2,zero,810340 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
  81026c:	00800074 	movhi	r2,1
  810270:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  810274:	e0bffb17 	ldw	r2,-20(fp)
  810278:	10800a17 	ldw	r2,40(r2)
  81027c:	10800044 	addi	r2,r2,1
  810280:	1081ffcc 	andi	r2,r2,2047
  810284:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
  810288:	e0bffb17 	ldw	r2,-20(fp)
  81028c:	10c00b17 	ldw	r3,44(r2)
  810290:	e0bffe17 	ldw	r2,-8(fp)
  810294:	18801526 	beq	r3,r2,8102ec <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
  810298:	e0bffc17 	ldw	r2,-16(fp)
  81029c:	10800037 	ldwio	r2,0(r2)
  8102a0:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
  8102a4:	e0bff917 	ldw	r2,-28(fp)
  8102a8:	10a0000c 	andi	r2,r2,32768
  8102ac:	10001126 	beq	r2,zero,8102f4 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
  8102b0:	e0bffb17 	ldw	r2,-20(fp)
  8102b4:	10800a17 	ldw	r2,40(r2)
  8102b8:	e0fff917 	ldw	r3,-28(fp)
  8102bc:	1809883a 	mov	r4,r3
  8102c0:	e0fffb17 	ldw	r3,-20(fp)
  8102c4:	1885883a 	add	r2,r3,r2
  8102c8:	10800e04 	addi	r2,r2,56
  8102cc:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  8102d0:	e0bffb17 	ldw	r2,-20(fp)
  8102d4:	10800a17 	ldw	r2,40(r2)
  8102d8:	10800044 	addi	r2,r2,1
  8102dc:	10c1ffcc 	andi	r3,r2,2047
  8102e0:	e0bffb17 	ldw	r2,-20(fp)
  8102e4:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
  8102e8:	003fe206 	br	810274 <__alt_data_end+0xff810274>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
  8102ec:	0001883a 	nop
  8102f0:	00000106 	br	8102f8 <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
  8102f4:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
  8102f8:	e0bff917 	ldw	r2,-28(fp)
  8102fc:	10bfffec 	andhi	r2,r2,65535
  810300:	10000f26 	beq	r2,zero,810340 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  810304:	e0bffb17 	ldw	r2,-20(fp)
  810308:	10c00817 	ldw	r3,32(r2)
  81030c:	00bfff84 	movi	r2,-2
  810310:	1886703a 	and	r3,r3,r2
  810314:	e0bffb17 	ldw	r2,-20(fp)
  810318:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
  81031c:	e0bffc17 	ldw	r2,-16(fp)
  810320:	10800104 	addi	r2,r2,4
  810324:	1007883a 	mov	r3,r2
  810328:	e0bffb17 	ldw	r2,-20(fp)
  81032c:	10800817 	ldw	r2,32(r2)
  810330:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  810334:	e0bffc17 	ldw	r2,-16(fp)
  810338:	10800104 	addi	r2,r2,4
  81033c:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
  810340:	e0bffd17 	ldw	r2,-12(fp)
  810344:	1080800c 	andi	r2,r2,512
  810348:	103fbe26 	beq	r2,zero,810244 <__alt_data_end+0xff810244>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
  81034c:	e0bffd17 	ldw	r2,-12(fp)
  810350:	1004d43a 	srli	r2,r2,16
  810354:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
  810358:	00001406 	br	8103ac <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
  81035c:	e0bffc17 	ldw	r2,-16(fp)
  810360:	e0fffb17 	ldw	r3,-20(fp)
  810364:	18c00d17 	ldw	r3,52(r3)
  810368:	e13ffb17 	ldw	r4,-20(fp)
  81036c:	20c7883a 	add	r3,r4,r3
  810370:	18c20e04 	addi	r3,r3,2104
  810374:	18c00003 	ldbu	r3,0(r3)
  810378:	18c03fcc 	andi	r3,r3,255
  81037c:	18c0201c 	xori	r3,r3,128
  810380:	18ffe004 	addi	r3,r3,-128
  810384:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  810388:	e0bffb17 	ldw	r2,-20(fp)
  81038c:	10800d17 	ldw	r2,52(r2)
  810390:	10800044 	addi	r2,r2,1
  810394:	10c1ffcc 	andi	r3,r2,2047
  810398:	e0bffb17 	ldw	r2,-20(fp)
  81039c:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
  8103a0:	e0bffa17 	ldw	r2,-24(fp)
  8103a4:	10bfffc4 	addi	r2,r2,-1
  8103a8:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
  8103ac:	e0bffa17 	ldw	r2,-24(fp)
  8103b0:	10000526 	beq	r2,zero,8103c8 <altera_avalon_jtag_uart_irq+0x1a8>
  8103b4:	e0bffb17 	ldw	r2,-20(fp)
  8103b8:	10c00d17 	ldw	r3,52(r2)
  8103bc:	e0bffb17 	ldw	r2,-20(fp)
  8103c0:	10800c17 	ldw	r2,48(r2)
  8103c4:	18bfe51e 	bne	r3,r2,81035c <__alt_data_end+0xff81035c>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
  8103c8:	e0bffa17 	ldw	r2,-24(fp)
  8103cc:	103f9d26 	beq	r2,zero,810244 <__alt_data_end+0xff810244>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
  8103d0:	e0bffb17 	ldw	r2,-20(fp)
  8103d4:	10c00817 	ldw	r3,32(r2)
  8103d8:	00bfff44 	movi	r2,-3
  8103dc:	1886703a 	and	r3,r3,r2
  8103e0:	e0bffb17 	ldw	r2,-20(fp)
  8103e4:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  8103e8:	e0bffb17 	ldw	r2,-20(fp)
  8103ec:	10800017 	ldw	r2,0(r2)
  8103f0:	10800104 	addi	r2,r2,4
  8103f4:	1007883a 	mov	r3,r2
  8103f8:	e0bffb17 	ldw	r2,-20(fp)
  8103fc:	10800817 	ldw	r2,32(r2)
  810400:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  810404:	e0bffc17 	ldw	r2,-16(fp)
  810408:	10800104 	addi	r2,r2,4
  81040c:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
  810410:	003f8c06 	br	810244 <__alt_data_end+0xff810244>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
  810414:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
  810418:	0001883a 	nop
  81041c:	e037883a 	mov	sp,fp
  810420:	df000017 	ldw	fp,0(sp)
  810424:	dec00104 	addi	sp,sp,4
  810428:	f800283a 	ret

0081042c <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
  81042c:	defff804 	addi	sp,sp,-32
  810430:	df000715 	stw	fp,28(sp)
  810434:	df000704 	addi	fp,sp,28
  810438:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
  81043c:	e0bffb17 	ldw	r2,-20(fp)
  810440:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
  810444:	e0bff917 	ldw	r2,-28(fp)
  810448:	10800017 	ldw	r2,0(r2)
  81044c:	10800104 	addi	r2,r2,4
  810450:	10800037 	ldwio	r2,0(r2)
  810454:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
  810458:	e0bffa17 	ldw	r2,-24(fp)
  81045c:	1081000c 	andi	r2,r2,1024
  810460:	10000b26 	beq	r2,zero,810490 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
  810464:	e0bff917 	ldw	r2,-28(fp)
  810468:	10800017 	ldw	r2,0(r2)
  81046c:	10800104 	addi	r2,r2,4
  810470:	1007883a 	mov	r3,r2
  810474:	e0bff917 	ldw	r2,-28(fp)
  810478:	10800817 	ldw	r2,32(r2)
  81047c:	10810014 	ori	r2,r2,1024
  810480:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
  810484:	e0bff917 	ldw	r2,-28(fp)
  810488:	10000915 	stw	zero,36(r2)
  81048c:	00000a06 	br	8104b8 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
  810490:	e0bff917 	ldw	r2,-28(fp)
  810494:	10c00917 	ldw	r3,36(r2)
  810498:	00a00034 	movhi	r2,32768
  81049c:	10bfff04 	addi	r2,r2,-4
  8104a0:	10c00536 	bltu	r2,r3,8104b8 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
  8104a4:	e0bff917 	ldw	r2,-28(fp)
  8104a8:	10800917 	ldw	r2,36(r2)
  8104ac:	10c00044 	addi	r3,r2,1
  8104b0:	e0bff917 	ldw	r2,-28(fp)
  8104b4:	10c00915 	stw	r3,36(r2)
  8104b8:	d0a6d617 	ldw	r2,-25768(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
  8104bc:	e037883a 	mov	sp,fp
  8104c0:	df000017 	ldw	fp,0(sp)
  8104c4:	dec00104 	addi	sp,sp,4
  8104c8:	f800283a 	ret

008104cc <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
  8104cc:	defffd04 	addi	sp,sp,-12
  8104d0:	df000215 	stw	fp,8(sp)
  8104d4:	df000204 	addi	fp,sp,8
  8104d8:	e13ffe15 	stw	r4,-8(fp)
  8104dc:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
  8104e0:	00000506 	br	8104f8 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
  8104e4:	e0bfff17 	ldw	r2,-4(fp)
  8104e8:	1090000c 	andi	r2,r2,16384
  8104ec:	10000226 	beq	r2,zero,8104f8 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
  8104f0:	00bffd44 	movi	r2,-11
  8104f4:	00000b06 	br	810524 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
  8104f8:	e0bffe17 	ldw	r2,-8(fp)
  8104fc:	10c00d17 	ldw	r3,52(r2)
  810500:	e0bffe17 	ldw	r2,-8(fp)
  810504:	10800c17 	ldw	r2,48(r2)
  810508:	18800526 	beq	r3,r2,810520 <altera_avalon_jtag_uart_close+0x54>
  81050c:	e0bffe17 	ldw	r2,-8(fp)
  810510:	10c00917 	ldw	r3,36(r2)
  810514:	e0bffe17 	ldw	r2,-8(fp)
  810518:	10800117 	ldw	r2,4(r2)
  81051c:	18bff136 	bltu	r3,r2,8104e4 <__alt_data_end+0xff8104e4>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
  810520:	0005883a 	mov	r2,zero
}
  810524:	e037883a 	mov	sp,fp
  810528:	df000017 	ldw	fp,0(sp)
  81052c:	dec00104 	addi	sp,sp,4
  810530:	f800283a 	ret

00810534 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
  810534:	defffa04 	addi	sp,sp,-24
  810538:	df000515 	stw	fp,20(sp)
  81053c:	df000504 	addi	fp,sp,20
  810540:	e13ffd15 	stw	r4,-12(fp)
  810544:	e17ffe15 	stw	r5,-8(fp)
  810548:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
  81054c:	00bff9c4 	movi	r2,-25
  810550:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
  810554:	e0bffe17 	ldw	r2,-8(fp)
  810558:	10da8060 	cmpeqi	r3,r2,27137
  81055c:	1800031e 	bne	r3,zero,81056c <altera_avalon_jtag_uart_ioctl+0x38>
  810560:	109a80a0 	cmpeqi	r2,r2,27138
  810564:	1000181e 	bne	r2,zero,8105c8 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
  810568:	00002906 	br	810610 <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
  81056c:	e0bffd17 	ldw	r2,-12(fp)
  810570:	10c00117 	ldw	r3,4(r2)
  810574:	00a00034 	movhi	r2,32768
  810578:	10bfffc4 	addi	r2,r2,-1
  81057c:	18802126 	beq	r3,r2,810604 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
  810580:	e0bfff17 	ldw	r2,-4(fp)
  810584:	10800017 	ldw	r2,0(r2)
  810588:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
  81058c:	e0bffc17 	ldw	r2,-16(fp)
  810590:	10800090 	cmplti	r2,r2,2
  810594:	1000061e 	bne	r2,zero,8105b0 <altera_avalon_jtag_uart_ioctl+0x7c>
  810598:	e0fffc17 	ldw	r3,-16(fp)
  81059c:	00a00034 	movhi	r2,32768
  8105a0:	10bfffc4 	addi	r2,r2,-1
  8105a4:	18800226 	beq	r3,r2,8105b0 <altera_avalon_jtag_uart_ioctl+0x7c>
  8105a8:	e0bffc17 	ldw	r2,-16(fp)
  8105ac:	00000206 	br	8105b8 <altera_avalon_jtag_uart_ioctl+0x84>
  8105b0:	00a00034 	movhi	r2,32768
  8105b4:	10bfff84 	addi	r2,r2,-2
  8105b8:	e0fffd17 	ldw	r3,-12(fp)
  8105bc:	18800115 	stw	r2,4(r3)
      rc = 0;
  8105c0:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
  8105c4:	00000f06 	br	810604 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
  8105c8:	e0bffd17 	ldw	r2,-12(fp)
  8105cc:	10c00117 	ldw	r3,4(r2)
  8105d0:	00a00034 	movhi	r2,32768
  8105d4:	10bfffc4 	addi	r2,r2,-1
  8105d8:	18800c26 	beq	r3,r2,81060c <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
  8105dc:	e0bffd17 	ldw	r2,-12(fp)
  8105e0:	10c00917 	ldw	r3,36(r2)
  8105e4:	e0bffd17 	ldw	r2,-12(fp)
  8105e8:	10800117 	ldw	r2,4(r2)
  8105ec:	1885803a 	cmpltu	r2,r3,r2
  8105f0:	10c03fcc 	andi	r3,r2,255
  8105f4:	e0bfff17 	ldw	r2,-4(fp)
  8105f8:	10c00015 	stw	r3,0(r2)
      rc = 0;
  8105fc:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
  810600:	00000206 	br	81060c <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
  810604:	0001883a 	nop
  810608:	00000106 	br	810610 <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
  81060c:	0001883a 	nop

  default:
    break;
  }

  return rc;
  810610:	e0bffb17 	ldw	r2,-20(fp)
}
  810614:	e037883a 	mov	sp,fp
  810618:	df000017 	ldw	fp,0(sp)
  81061c:	dec00104 	addi	sp,sp,4
  810620:	f800283a 	ret

00810624 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
  810624:	defff304 	addi	sp,sp,-52
  810628:	dfc00c15 	stw	ra,48(sp)
  81062c:	df000b15 	stw	fp,44(sp)
  810630:	df000b04 	addi	fp,sp,44
  810634:	e13ffc15 	stw	r4,-16(fp)
  810638:	e17ffd15 	stw	r5,-12(fp)
  81063c:	e1bffe15 	stw	r6,-8(fp)
  810640:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
  810644:	e0bffd17 	ldw	r2,-12(fp)
  810648:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
  81064c:	00004706 	br	81076c <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
  810650:	e0bffc17 	ldw	r2,-16(fp)
  810654:	10800a17 	ldw	r2,40(r2)
  810658:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
  81065c:	e0bffc17 	ldw	r2,-16(fp)
  810660:	10800b17 	ldw	r2,44(r2)
  810664:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
  810668:	e0fff717 	ldw	r3,-36(fp)
  81066c:	e0bff817 	ldw	r2,-32(fp)
  810670:	18800536 	bltu	r3,r2,810688 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
  810674:	e0fff717 	ldw	r3,-36(fp)
  810678:	e0bff817 	ldw	r2,-32(fp)
  81067c:	1885c83a 	sub	r2,r3,r2
  810680:	e0bff615 	stw	r2,-40(fp)
  810684:	00000406 	br	810698 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
  810688:	00c20004 	movi	r3,2048
  81068c:	e0bff817 	ldw	r2,-32(fp)
  810690:	1885c83a 	sub	r2,r3,r2
  810694:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
  810698:	e0bff617 	ldw	r2,-40(fp)
  81069c:	10001e26 	beq	r2,zero,810718 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
  8106a0:	e0fffe17 	ldw	r3,-8(fp)
  8106a4:	e0bff617 	ldw	r2,-40(fp)
  8106a8:	1880022e 	bgeu	r3,r2,8106b4 <altera_avalon_jtag_uart_read+0x90>
        n = space;
  8106ac:	e0bffe17 	ldw	r2,-8(fp)
  8106b0:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
  8106b4:	e0bffc17 	ldw	r2,-16(fp)
  8106b8:	10c00e04 	addi	r3,r2,56
  8106bc:	e0bff817 	ldw	r2,-32(fp)
  8106c0:	1885883a 	add	r2,r3,r2
  8106c4:	e1bff617 	ldw	r6,-40(fp)
  8106c8:	100b883a 	mov	r5,r2
  8106cc:	e13ff517 	ldw	r4,-44(fp)
  8106d0:	080a4780 	call	80a478 <memcpy>
      ptr   += n;
  8106d4:	e0fff517 	ldw	r3,-44(fp)
  8106d8:	e0bff617 	ldw	r2,-40(fp)
  8106dc:	1885883a 	add	r2,r3,r2
  8106e0:	e0bff515 	stw	r2,-44(fp)
      space -= n;
  8106e4:	e0fffe17 	ldw	r3,-8(fp)
  8106e8:	e0bff617 	ldw	r2,-40(fp)
  8106ec:	1885c83a 	sub	r2,r3,r2
  8106f0:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  8106f4:	e0fff817 	ldw	r3,-32(fp)
  8106f8:	e0bff617 	ldw	r2,-40(fp)
  8106fc:	1885883a 	add	r2,r3,r2
  810700:	10c1ffcc 	andi	r3,r2,2047
  810704:	e0bffc17 	ldw	r2,-16(fp)
  810708:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
  81070c:	e0bffe17 	ldw	r2,-8(fp)
  810710:	00bfcf16 	blt	zero,r2,810650 <__alt_data_end+0xff810650>
  810714:	00000106 	br	81071c <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
  810718:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
  81071c:	e0fff517 	ldw	r3,-44(fp)
  810720:	e0bffd17 	ldw	r2,-12(fp)
  810724:	1880141e 	bne	r3,r2,810778 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
  810728:	e0bfff17 	ldw	r2,-4(fp)
  81072c:	1090000c 	andi	r2,r2,16384
  810730:	1000131e 	bne	r2,zero,810780 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
  810734:	0001883a 	nop
  810738:	e0bffc17 	ldw	r2,-16(fp)
  81073c:	10c00a17 	ldw	r3,40(r2)
  810740:	e0bff717 	ldw	r2,-36(fp)
  810744:	1880051e 	bne	r3,r2,81075c <altera_avalon_jtag_uart_read+0x138>
  810748:	e0bffc17 	ldw	r2,-16(fp)
  81074c:	10c00917 	ldw	r3,36(r2)
  810750:	e0bffc17 	ldw	r2,-16(fp)
  810754:	10800117 	ldw	r2,4(r2)
  810758:	18bff736 	bltu	r3,r2,810738 <__alt_data_end+0xff810738>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
  81075c:	e0bffc17 	ldw	r2,-16(fp)
  810760:	10c00a17 	ldw	r3,40(r2)
  810764:	e0bff717 	ldw	r2,-36(fp)
  810768:	18800726 	beq	r3,r2,810788 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
  81076c:	e0bffe17 	ldw	r2,-8(fp)
  810770:	00bfb716 	blt	zero,r2,810650 <__alt_data_end+0xff810650>
  810774:	00000506 	br	81078c <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
  810778:	0001883a 	nop
  81077c:	00000306 	br	81078c <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
  810780:	0001883a 	nop
  810784:	00000106 	br	81078c <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
  810788:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
  81078c:	e0fff517 	ldw	r3,-44(fp)
  810790:	e0bffd17 	ldw	r2,-12(fp)
  810794:	18801826 	beq	r3,r2,8107f8 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  810798:	0005303a 	rdctl	r2,status
  81079c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  8107a0:	e0fffb17 	ldw	r3,-20(fp)
  8107a4:	00bfff84 	movi	r2,-2
  8107a8:	1884703a 	and	r2,r3,r2
  8107ac:	1001703a 	wrctl	status,r2
  
  return context;
  8107b0:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
  8107b4:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  8107b8:	e0bffc17 	ldw	r2,-16(fp)
  8107bc:	10800817 	ldw	r2,32(r2)
  8107c0:	10c00054 	ori	r3,r2,1
  8107c4:	e0bffc17 	ldw	r2,-16(fp)
  8107c8:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  8107cc:	e0bffc17 	ldw	r2,-16(fp)
  8107d0:	10800017 	ldw	r2,0(r2)
  8107d4:	10800104 	addi	r2,r2,4
  8107d8:	1007883a 	mov	r3,r2
  8107dc:	e0bffc17 	ldw	r2,-16(fp)
  8107e0:	10800817 	ldw	r2,32(r2)
  8107e4:	18800035 	stwio	r2,0(r3)
  8107e8:	e0bffa17 	ldw	r2,-24(fp)
  8107ec:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  8107f0:	e0bff917 	ldw	r2,-28(fp)
  8107f4:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
  8107f8:	e0fff517 	ldw	r3,-44(fp)
  8107fc:	e0bffd17 	ldw	r2,-12(fp)
  810800:	18800426 	beq	r3,r2,810814 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
  810804:	e0fff517 	ldw	r3,-44(fp)
  810808:	e0bffd17 	ldw	r2,-12(fp)
  81080c:	1885c83a 	sub	r2,r3,r2
  810810:	00000606 	br	81082c <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
  810814:	e0bfff17 	ldw	r2,-4(fp)
  810818:	1090000c 	andi	r2,r2,16384
  81081c:	10000226 	beq	r2,zero,810828 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
  810820:	00bffd44 	movi	r2,-11
  810824:	00000106 	br	81082c <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
  810828:	00bffec4 	movi	r2,-5
}
  81082c:	e037883a 	mov	sp,fp
  810830:	dfc00117 	ldw	ra,4(sp)
  810834:	df000017 	ldw	fp,0(sp)
  810838:	dec00204 	addi	sp,sp,8
  81083c:	f800283a 	ret

00810840 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
  810840:	defff304 	addi	sp,sp,-52
  810844:	dfc00c15 	stw	ra,48(sp)
  810848:	df000b15 	stw	fp,44(sp)
  81084c:	df000b04 	addi	fp,sp,44
  810850:	e13ffc15 	stw	r4,-16(fp)
  810854:	e17ffd15 	stw	r5,-12(fp)
  810858:	e1bffe15 	stw	r6,-8(fp)
  81085c:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
  810860:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
  810864:	e0bffd17 	ldw	r2,-12(fp)
  810868:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
  81086c:	00003706 	br	81094c <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
  810870:	e0bffc17 	ldw	r2,-16(fp)
  810874:	10800c17 	ldw	r2,48(r2)
  810878:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
  81087c:	e0bffc17 	ldw	r2,-16(fp)
  810880:	10800d17 	ldw	r2,52(r2)
  810884:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
  810888:	e0fff917 	ldw	r3,-28(fp)
  81088c:	e0bff517 	ldw	r2,-44(fp)
  810890:	1880062e 	bgeu	r3,r2,8108ac <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
  810894:	e0fff517 	ldw	r3,-44(fp)
  810898:	e0bff917 	ldw	r2,-28(fp)
  81089c:	1885c83a 	sub	r2,r3,r2
  8108a0:	10bfffc4 	addi	r2,r2,-1
  8108a4:	e0bff615 	stw	r2,-40(fp)
  8108a8:	00000b06 	br	8108d8 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
  8108ac:	e0bff517 	ldw	r2,-44(fp)
  8108b0:	10000526 	beq	r2,zero,8108c8 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
  8108b4:	00c20004 	movi	r3,2048
  8108b8:	e0bff917 	ldw	r2,-28(fp)
  8108bc:	1885c83a 	sub	r2,r3,r2
  8108c0:	e0bff615 	stw	r2,-40(fp)
  8108c4:	00000406 	br	8108d8 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
  8108c8:	00c1ffc4 	movi	r3,2047
  8108cc:	e0bff917 	ldw	r2,-28(fp)
  8108d0:	1885c83a 	sub	r2,r3,r2
  8108d4:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
  8108d8:	e0bff617 	ldw	r2,-40(fp)
  8108dc:	10001e26 	beq	r2,zero,810958 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
  8108e0:	e0fffe17 	ldw	r3,-8(fp)
  8108e4:	e0bff617 	ldw	r2,-40(fp)
  8108e8:	1880022e 	bgeu	r3,r2,8108f4 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
  8108ec:	e0bffe17 	ldw	r2,-8(fp)
  8108f0:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
  8108f4:	e0bffc17 	ldw	r2,-16(fp)
  8108f8:	10c20e04 	addi	r3,r2,2104
  8108fc:	e0bff917 	ldw	r2,-28(fp)
  810900:	1885883a 	add	r2,r3,r2
  810904:	e1bff617 	ldw	r6,-40(fp)
  810908:	e17ffd17 	ldw	r5,-12(fp)
  81090c:	1009883a 	mov	r4,r2
  810910:	080a4780 	call	80a478 <memcpy>
      ptr   += n;
  810914:	e0fffd17 	ldw	r3,-12(fp)
  810918:	e0bff617 	ldw	r2,-40(fp)
  81091c:	1885883a 	add	r2,r3,r2
  810920:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
  810924:	e0fffe17 	ldw	r3,-8(fp)
  810928:	e0bff617 	ldw	r2,-40(fp)
  81092c:	1885c83a 	sub	r2,r3,r2
  810930:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  810934:	e0fff917 	ldw	r3,-28(fp)
  810938:	e0bff617 	ldw	r2,-40(fp)
  81093c:	1885883a 	add	r2,r3,r2
  810940:	10c1ffcc 	andi	r3,r2,2047
  810944:	e0bffc17 	ldw	r2,-16(fp)
  810948:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
  81094c:	e0bffe17 	ldw	r2,-8(fp)
  810950:	00bfc716 	blt	zero,r2,810870 <__alt_data_end+0xff810870>
  810954:	00000106 	br	81095c <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
  810958:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  81095c:	0005303a 	rdctl	r2,status
  810960:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  810964:	e0fffb17 	ldw	r3,-20(fp)
  810968:	00bfff84 	movi	r2,-2
  81096c:	1884703a 	and	r2,r3,r2
  810970:	1001703a 	wrctl	status,r2
  
  return context;
  810974:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
  810978:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
  81097c:	e0bffc17 	ldw	r2,-16(fp)
  810980:	10800817 	ldw	r2,32(r2)
  810984:	10c00094 	ori	r3,r2,2
  810988:	e0bffc17 	ldw	r2,-16(fp)
  81098c:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  810990:	e0bffc17 	ldw	r2,-16(fp)
  810994:	10800017 	ldw	r2,0(r2)
  810998:	10800104 	addi	r2,r2,4
  81099c:	1007883a 	mov	r3,r2
  8109a0:	e0bffc17 	ldw	r2,-16(fp)
  8109a4:	10800817 	ldw	r2,32(r2)
  8109a8:	18800035 	stwio	r2,0(r3)
  8109ac:	e0bffa17 	ldw	r2,-24(fp)
  8109b0:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  8109b4:	e0bff817 	ldw	r2,-32(fp)
  8109b8:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
  8109bc:	e0bffe17 	ldw	r2,-8(fp)
  8109c0:	0080100e 	bge	zero,r2,810a04 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
  8109c4:	e0bfff17 	ldw	r2,-4(fp)
  8109c8:	1090000c 	andi	r2,r2,16384
  8109cc:	1000101e 	bne	r2,zero,810a10 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
  8109d0:	0001883a 	nop
  8109d4:	e0bffc17 	ldw	r2,-16(fp)
  8109d8:	10c00d17 	ldw	r3,52(r2)
  8109dc:	e0bff517 	ldw	r2,-44(fp)
  8109e0:	1880051e 	bne	r3,r2,8109f8 <altera_avalon_jtag_uart_write+0x1b8>
  8109e4:	e0bffc17 	ldw	r2,-16(fp)
  8109e8:	10c00917 	ldw	r3,36(r2)
  8109ec:	e0bffc17 	ldw	r2,-16(fp)
  8109f0:	10800117 	ldw	r2,4(r2)
  8109f4:	18bff736 	bltu	r3,r2,8109d4 <__alt_data_end+0xff8109d4>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
  8109f8:	e0bffc17 	ldw	r2,-16(fp)
  8109fc:	10800917 	ldw	r2,36(r2)
  810a00:	1000051e 	bne	r2,zero,810a18 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
  810a04:	e0bffe17 	ldw	r2,-8(fp)
  810a08:	00bfd016 	blt	zero,r2,81094c <__alt_data_end+0xff81094c>
  810a0c:	00000306 	br	810a1c <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
  810a10:	0001883a 	nop
  810a14:	00000106 	br	810a1c <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
  810a18:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
  810a1c:	e0fffd17 	ldw	r3,-12(fp)
  810a20:	e0bff717 	ldw	r2,-36(fp)
  810a24:	18800426 	beq	r3,r2,810a38 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
  810a28:	e0fffd17 	ldw	r3,-12(fp)
  810a2c:	e0bff717 	ldw	r2,-36(fp)
  810a30:	1885c83a 	sub	r2,r3,r2
  810a34:	00000606 	br	810a50 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
  810a38:	e0bfff17 	ldw	r2,-4(fp)
  810a3c:	1090000c 	andi	r2,r2,16384
  810a40:	10000226 	beq	r2,zero,810a4c <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
  810a44:	00bffd44 	movi	r2,-11
  810a48:	00000106 	br	810a50 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
  810a4c:	00bffec4 	movi	r2,-5
}
  810a50:	e037883a 	mov	sp,fp
  810a54:	dfc00117 	ldw	ra,4(sp)
  810a58:	df000017 	ldw	fp,0(sp)
  810a5c:	dec00204 	addi	sp,sp,8
  810a60:	f800283a 	ret

00810a64 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
  810a64:	defffa04 	addi	sp,sp,-24
  810a68:	dfc00515 	stw	ra,20(sp)
  810a6c:	df000415 	stw	fp,16(sp)
  810a70:	df000404 	addi	fp,sp,16
  810a74:	e13fff15 	stw	r4,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
  810a78:	0007883a 	mov	r3,zero
  810a7c:	e0bfff17 	ldw	r2,-4(fp)
  810a80:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
  810a84:	e0bfff17 	ldw	r2,-4(fp)
  810a88:	10800104 	addi	r2,r2,4
  810a8c:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  810a90:	0005303a 	rdctl	r2,status
  810a94:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  810a98:	e0fffd17 	ldw	r3,-12(fp)
  810a9c:	00bfff84 	movi	r2,-2
  810aa0:	1884703a 	and	r2,r3,r2
  810aa4:	1001703a 	wrctl	status,r2
  
  return context;
  810aa8:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
  810aac:	e0bffc15 	stw	r2,-16(fp)
  alt_tick ();
  810ab0:	08115700 	call	811570 <alt_tick>
  810ab4:	e0bffc17 	ldw	r2,-16(fp)
  810ab8:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  810abc:	e0bffe17 	ldw	r2,-8(fp)
  810ac0:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
  810ac4:	0001883a 	nop
  810ac8:	e037883a 	mov	sp,fp
  810acc:	dfc00117 	ldw	ra,4(sp)
  810ad0:	df000017 	ldw	fp,0(sp)
  810ad4:	dec00204 	addi	sp,sp,8
  810ad8:	f800283a 	ret

00810adc <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
  810adc:	defff804 	addi	sp,sp,-32
  810ae0:	dfc00715 	stw	ra,28(sp)
  810ae4:	df000615 	stw	fp,24(sp)
  810ae8:	df000604 	addi	fp,sp,24
  810aec:	e13ffc15 	stw	r4,-16(fp)
  810af0:	e17ffd15 	stw	r5,-12(fp)
  810af4:	e1bffe15 	stw	r6,-8(fp)
  810af8:	e1ffff15 	stw	r7,-4(fp)
  810afc:	e0bfff17 	ldw	r2,-4(fp)
  810b00:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
  810b04:	d0a6d617 	ldw	r2,-25768(gp)
  810b08:	1000021e 	bne	r2,zero,810b14 <alt_avalon_timer_sc_init+0x38>
  {
    _alt_tick_rate = nticks;
  810b0c:	e0bffb17 	ldw	r2,-20(fp)
  810b10:	d0a6d615 	stw	r2,-25768(gp)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
  810b14:	e0bffc17 	ldw	r2,-16(fp)
  810b18:	10800104 	addi	r2,r2,4
  810b1c:	00c001c4 	movi	r3,7
  810b20:	10c00035 	stwio	r3,0(r2)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
  810b24:	d8000015 	stw	zero,0(sp)
  810b28:	e1fffc17 	ldw	r7,-16(fp)
  810b2c:	01802074 	movhi	r6,129
  810b30:	31829904 	addi	r6,r6,2660
  810b34:	e17ffe17 	ldw	r5,-8(fp)
  810b38:	e13ffd17 	ldw	r4,-12(fp)
  810b3c:	0810ea00 	call	810ea0 <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
  810b40:	0001883a 	nop
  810b44:	e037883a 	mov	sp,fp
  810b48:	dfc00117 	ldw	ra,4(sp)
  810b4c:	df000017 	ldw	fp,0(sp)
  810b50:	dec00204 	addi	sp,sp,8
  810b54:	f800283a 	ret

00810b58 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
  810b58:	defff504 	addi	sp,sp,-44
  810b5c:	df000a15 	stw	fp,40(sp)
  810b60:	df000a04 	addi	fp,sp,40
  810b64:	e13ffc15 	stw	r4,-16(fp)
  810b68:	e17ffd15 	stw	r5,-12(fp)
  810b6c:	e1bffe15 	stw	r6,-8(fp)
  810b70:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
  810b74:	e03ff615 	stw	zero,-40(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
  810b78:	d0a6d617 	ldw	r2,-25768(gp)
  
  if (alt_ticks_per_second ())
  810b7c:	10003c26 	beq	r2,zero,810c70 <alt_alarm_start+0x118>
  {
    if (alarm)
  810b80:	e0bffc17 	ldw	r2,-16(fp)
  810b84:	10003826 	beq	r2,zero,810c68 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
  810b88:	e0bffc17 	ldw	r2,-16(fp)
  810b8c:	e0fffe17 	ldw	r3,-8(fp)
  810b90:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
  810b94:	e0bffc17 	ldw	r2,-16(fp)
  810b98:	e0ffff17 	ldw	r3,-4(fp)
  810b9c:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  810ba0:	0005303a 	rdctl	r2,status
  810ba4:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  810ba8:	e0fff917 	ldw	r3,-28(fp)
  810bac:	00bfff84 	movi	r2,-2
  810bb0:	1884703a 	and	r2,r3,r2
  810bb4:	1001703a 	wrctl	status,r2
  
  return context;
  810bb8:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
  810bbc:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
  810bc0:	d0a6d717 	ldw	r2,-25764(gp)
      
      current_nticks = alt_nticks();
  810bc4:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
  810bc8:	e0fffd17 	ldw	r3,-12(fp)
  810bcc:	e0bff617 	ldw	r2,-40(fp)
  810bd0:	1885883a 	add	r2,r3,r2
  810bd4:	10c00044 	addi	r3,r2,1
  810bd8:	e0bffc17 	ldw	r2,-16(fp)
  810bdc:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
  810be0:	e0bffc17 	ldw	r2,-16(fp)
  810be4:	10c00217 	ldw	r3,8(r2)
  810be8:	e0bff617 	ldw	r2,-40(fp)
  810bec:	1880042e 	bgeu	r3,r2,810c00 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
  810bf0:	e0bffc17 	ldw	r2,-16(fp)
  810bf4:	00c00044 	movi	r3,1
  810bf8:	10c00405 	stb	r3,16(r2)
  810bfc:	00000206 	br	810c08 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
  810c00:	e0bffc17 	ldw	r2,-16(fp)
  810c04:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
  810c08:	e0bffc17 	ldw	r2,-16(fp)
  810c0c:	d0e00e04 	addi	r3,gp,-32712
  810c10:	e0fffa15 	stw	r3,-24(fp)
  810c14:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
  810c18:	e0bffb17 	ldw	r2,-20(fp)
  810c1c:	e0fffa17 	ldw	r3,-24(fp)
  810c20:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
  810c24:	e0bffa17 	ldw	r2,-24(fp)
  810c28:	10c00017 	ldw	r3,0(r2)
  810c2c:	e0bffb17 	ldw	r2,-20(fp)
  810c30:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
  810c34:	e0bffa17 	ldw	r2,-24(fp)
  810c38:	10800017 	ldw	r2,0(r2)
  810c3c:	e0fffb17 	ldw	r3,-20(fp)
  810c40:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
  810c44:	e0bffa17 	ldw	r2,-24(fp)
  810c48:	e0fffb17 	ldw	r3,-20(fp)
  810c4c:	10c00015 	stw	r3,0(r2)
  810c50:	e0bff817 	ldw	r2,-32(fp)
  810c54:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  810c58:	e0bff717 	ldw	r2,-36(fp)
  810c5c:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
  810c60:	0005883a 	mov	r2,zero
  810c64:	00000306 	br	810c74 <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
  810c68:	00bffa84 	movi	r2,-22
  810c6c:	00000106 	br	810c74 <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
  810c70:	00bfde84 	movi	r2,-134
  }
}
  810c74:	e037883a 	mov	sp,fp
  810c78:	df000017 	ldw	fp,0(sp)
  810c7c:	dec00104 	addi	sp,sp,4
  810c80:	f800283a 	ret

00810c84 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
  810c84:	defffe04 	addi	sp,sp,-8
  810c88:	df000115 	stw	fp,4(sp)
  810c8c:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  810c90:	e03fff15 	stw	zero,-4(fp)
  810c94:	00000506 	br	810cac <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  810c98:	e0bfff17 	ldw	r2,-4(fp)
  810c9c:	1000003b 	flushd	0(r2)
void alt_dcache_flush_all (void)
{
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  810ca0:	e0bfff17 	ldw	r2,-4(fp)
  810ca4:	10800804 	addi	r2,r2,32
  810ca8:	e0bfff15 	stw	r2,-4(fp)
  810cac:	e0bfff17 	ldw	r2,-4(fp)
  810cb0:	10880030 	cmpltui	r2,r2,8192
  810cb4:	103ff81e 	bne	r2,zero,810c98 <__alt_data_end+0xff810c98>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
  810cb8:	0001883a 	nop
  810cbc:	e037883a 	mov	sp,fp
  810cc0:	df000017 	ldw	fp,0(sp)
  810cc4:	dec00104 	addi	sp,sp,4
  810cc8:	f800283a 	ret

00810ccc <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  810ccc:	defffe04 	addi	sp,sp,-8
  810cd0:	dfc00115 	stw	ra,4(sp)
  810cd4:	df000015 	stw	fp,0(sp)
  810cd8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  810cdc:	d0a00b17 	ldw	r2,-32724(gp)
  810ce0:	10000326 	beq	r2,zero,810cf0 <alt_get_errno+0x24>
  810ce4:	d0a00b17 	ldw	r2,-32724(gp)
  810ce8:	103ee83a 	callr	r2
  810cec:	00000106 	br	810cf4 <alt_get_errno+0x28>
  810cf0:	d0a6d104 	addi	r2,gp,-25788
}
  810cf4:	e037883a 	mov	sp,fp
  810cf8:	dfc00117 	ldw	ra,4(sp)
  810cfc:	df000017 	ldw	fp,0(sp)
  810d00:	dec00204 	addi	sp,sp,8
  810d04:	f800283a 	ret

00810d08 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
  810d08:	defffa04 	addi	sp,sp,-24
  810d0c:	dfc00515 	stw	ra,20(sp)
  810d10:	df000415 	stw	fp,16(sp)
  810d14:	df000404 	addi	fp,sp,16
  810d18:	e13ffe15 	stw	r4,-8(fp)
  810d1c:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
  810d20:	e0bffe17 	ldw	r2,-8(fp)
  810d24:	10000326 	beq	r2,zero,810d34 <alt_dev_llist_insert+0x2c>
  810d28:	e0bffe17 	ldw	r2,-8(fp)
  810d2c:	10800217 	ldw	r2,8(r2)
  810d30:	1000061e 	bne	r2,zero,810d4c <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
  810d34:	0810ccc0 	call	810ccc <alt_get_errno>
  810d38:	1007883a 	mov	r3,r2
  810d3c:	00800584 	movi	r2,22
  810d40:	18800015 	stw	r2,0(r3)
    return -EINVAL;
  810d44:	00bffa84 	movi	r2,-22
  810d48:	00001306 	br	810d98 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
  810d4c:	e0bffe17 	ldw	r2,-8(fp)
  810d50:	e0ffff17 	ldw	r3,-4(fp)
  810d54:	e0fffc15 	stw	r3,-16(fp)
  810d58:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
  810d5c:	e0bffd17 	ldw	r2,-12(fp)
  810d60:	e0fffc17 	ldw	r3,-16(fp)
  810d64:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
  810d68:	e0bffc17 	ldw	r2,-16(fp)
  810d6c:	10c00017 	ldw	r3,0(r2)
  810d70:	e0bffd17 	ldw	r2,-12(fp)
  810d74:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
  810d78:	e0bffc17 	ldw	r2,-16(fp)
  810d7c:	10800017 	ldw	r2,0(r2)
  810d80:	e0fffd17 	ldw	r3,-12(fp)
  810d84:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
  810d88:	e0bffc17 	ldw	r2,-16(fp)
  810d8c:	e0fffd17 	ldw	r3,-12(fp)
  810d90:	10c00015 	stw	r3,0(r2)

  return 0;  
  810d94:	0005883a 	mov	r2,zero
}
  810d98:	e037883a 	mov	sp,fp
  810d9c:	dfc00117 	ldw	ra,4(sp)
  810da0:	df000017 	ldw	fp,0(sp)
  810da4:	dec00204 	addi	sp,sp,8
  810da8:	f800283a 	ret

00810dac <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
  810dac:	defffd04 	addi	sp,sp,-12
  810db0:	dfc00215 	stw	ra,8(sp)
  810db4:	df000115 	stw	fp,4(sp)
  810db8:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
  810dbc:	00802074 	movhi	r2,129
  810dc0:	10876504 	addi	r2,r2,7572
  810dc4:	e0bfff15 	stw	r2,-4(fp)
  810dc8:	00000606 	br	810de4 <_do_ctors+0x38>
        (*ctor) (); 
  810dcc:	e0bfff17 	ldw	r2,-4(fp)
  810dd0:	10800017 	ldw	r2,0(r2)
  810dd4:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
  810dd8:	e0bfff17 	ldw	r2,-4(fp)
  810ddc:	10bfff04 	addi	r2,r2,-4
  810de0:	e0bfff15 	stw	r2,-4(fp)
  810de4:	e0ffff17 	ldw	r3,-4(fp)
  810de8:	00802074 	movhi	r2,129
  810dec:	10876604 	addi	r2,r2,7576
  810df0:	18bff62e 	bgeu	r3,r2,810dcc <__alt_data_end+0xff810dcc>
        (*ctor) (); 
}
  810df4:	0001883a 	nop
  810df8:	e037883a 	mov	sp,fp
  810dfc:	dfc00117 	ldw	ra,4(sp)
  810e00:	df000017 	ldw	fp,0(sp)
  810e04:	dec00204 	addi	sp,sp,8
  810e08:	f800283a 	ret

00810e0c <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
  810e0c:	defffd04 	addi	sp,sp,-12
  810e10:	dfc00215 	stw	ra,8(sp)
  810e14:	df000115 	stw	fp,4(sp)
  810e18:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
  810e1c:	00802074 	movhi	r2,129
  810e20:	10876504 	addi	r2,r2,7572
  810e24:	e0bfff15 	stw	r2,-4(fp)
  810e28:	00000606 	br	810e44 <_do_dtors+0x38>
        (*dtor) (); 
  810e2c:	e0bfff17 	ldw	r2,-4(fp)
  810e30:	10800017 	ldw	r2,0(r2)
  810e34:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
  810e38:	e0bfff17 	ldw	r2,-4(fp)
  810e3c:	10bfff04 	addi	r2,r2,-4
  810e40:	e0bfff15 	stw	r2,-4(fp)
  810e44:	e0ffff17 	ldw	r3,-4(fp)
  810e48:	00802074 	movhi	r2,129
  810e4c:	10876604 	addi	r2,r2,7576
  810e50:	18bff62e 	bgeu	r3,r2,810e2c <__alt_data_end+0xff810e2c>
        (*dtor) (); 
}
  810e54:	0001883a 	nop
  810e58:	e037883a 	mov	sp,fp
  810e5c:	dfc00117 	ldw	ra,4(sp)
  810e60:	df000017 	ldw	fp,0(sp)
  810e64:	dec00204 	addi	sp,sp,8
  810e68:	f800283a 	ret

00810e6c <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
  810e6c:	defffe04 	addi	sp,sp,-8
  810e70:	dfc00115 	stw	ra,4(sp)
  810e74:	df000015 	stw	fp,0(sp)
  810e78:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
  810e7c:	01420004 	movi	r5,2048
  810e80:	0009883a 	mov	r4,zero
  810e84:	08118d80 	call	8118d8 <alt_icache_flush>
#endif
}
  810e88:	0001883a 	nop
  810e8c:	e037883a 	mov	sp,fp
  810e90:	dfc00117 	ldw	ra,4(sp)
  810e94:	df000017 	ldw	fp,0(sp)
  810e98:	dec00204 	addi	sp,sp,8
  810e9c:	f800283a 	ret

00810ea0 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
  810ea0:	defff904 	addi	sp,sp,-28
  810ea4:	dfc00615 	stw	ra,24(sp)
  810ea8:	df000515 	stw	fp,20(sp)
  810eac:	df000504 	addi	fp,sp,20
  810eb0:	e13ffc15 	stw	r4,-16(fp)
  810eb4:	e17ffd15 	stw	r5,-12(fp)
  810eb8:	e1bffe15 	stw	r6,-8(fp)
  810ebc:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
  810ec0:	e0800217 	ldw	r2,8(fp)
  810ec4:	d8800015 	stw	r2,0(sp)
  810ec8:	e1ffff17 	ldw	r7,-4(fp)
  810ecc:	e1bffe17 	ldw	r6,-8(fp)
  810ed0:	e17ffd17 	ldw	r5,-12(fp)
  810ed4:	e13ffc17 	ldw	r4,-16(fp)
  810ed8:	08110500 	call	811050 <alt_iic_isr_register>
}  
  810edc:	e037883a 	mov	sp,fp
  810ee0:	dfc00117 	ldw	ra,4(sp)
  810ee4:	df000017 	ldw	fp,0(sp)
  810ee8:	dec00204 	addi	sp,sp,8
  810eec:	f800283a 	ret

00810ef0 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
  810ef0:	defff904 	addi	sp,sp,-28
  810ef4:	df000615 	stw	fp,24(sp)
  810ef8:	df000604 	addi	fp,sp,24
  810efc:	e13ffe15 	stw	r4,-8(fp)
  810f00:	e17fff15 	stw	r5,-4(fp)
  810f04:	e0bfff17 	ldw	r2,-4(fp)
  810f08:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  810f0c:	0005303a 	rdctl	r2,status
  810f10:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  810f14:	e0fffb17 	ldw	r3,-20(fp)
  810f18:	00bfff84 	movi	r2,-2
  810f1c:	1884703a 	and	r2,r3,r2
  810f20:	1001703a 	wrctl	status,r2
  
  return context;
  810f24:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
  810f28:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
  810f2c:	00c00044 	movi	r3,1
  810f30:	e0bffa17 	ldw	r2,-24(fp)
  810f34:	1884983a 	sll	r2,r3,r2
  810f38:	1007883a 	mov	r3,r2
  810f3c:	d0a6d517 	ldw	r2,-25772(gp)
  810f40:	1884b03a 	or	r2,r3,r2
  810f44:	d0a6d515 	stw	r2,-25772(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
  810f48:	d0a6d517 	ldw	r2,-25772(gp)
  810f4c:	100170fa 	wrctl	ienable,r2
  810f50:	e0bffc17 	ldw	r2,-16(fp)
  810f54:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  810f58:	e0bffd17 	ldw	r2,-12(fp)
  810f5c:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
  810f60:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
  810f64:	0001883a 	nop
}
  810f68:	e037883a 	mov	sp,fp
  810f6c:	df000017 	ldw	fp,0(sp)
  810f70:	dec00104 	addi	sp,sp,4
  810f74:	f800283a 	ret

00810f78 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
  810f78:	defff904 	addi	sp,sp,-28
  810f7c:	df000615 	stw	fp,24(sp)
  810f80:	df000604 	addi	fp,sp,24
  810f84:	e13ffe15 	stw	r4,-8(fp)
  810f88:	e17fff15 	stw	r5,-4(fp)
  810f8c:	e0bfff17 	ldw	r2,-4(fp)
  810f90:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  810f94:	0005303a 	rdctl	r2,status
  810f98:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  810f9c:	e0fffb17 	ldw	r3,-20(fp)
  810fa0:	00bfff84 	movi	r2,-2
  810fa4:	1884703a 	and	r2,r3,r2
  810fa8:	1001703a 	wrctl	status,r2
  
  return context;
  810fac:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
  810fb0:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
  810fb4:	00c00044 	movi	r3,1
  810fb8:	e0bffa17 	ldw	r2,-24(fp)
  810fbc:	1884983a 	sll	r2,r3,r2
  810fc0:	0084303a 	nor	r2,zero,r2
  810fc4:	1007883a 	mov	r3,r2
  810fc8:	d0a6d517 	ldw	r2,-25772(gp)
  810fcc:	1884703a 	and	r2,r3,r2
  810fd0:	d0a6d515 	stw	r2,-25772(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
  810fd4:	d0a6d517 	ldw	r2,-25772(gp)
  810fd8:	100170fa 	wrctl	ienable,r2
  810fdc:	e0bffc17 	ldw	r2,-16(fp)
  810fe0:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  810fe4:	e0bffd17 	ldw	r2,-12(fp)
  810fe8:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
  810fec:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
  810ff0:	0001883a 	nop
}
  810ff4:	e037883a 	mov	sp,fp
  810ff8:	df000017 	ldw	fp,0(sp)
  810ffc:	dec00104 	addi	sp,sp,4
  811000:	f800283a 	ret

00811004 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
  811004:	defffc04 	addi	sp,sp,-16
  811008:	df000315 	stw	fp,12(sp)
  81100c:	df000304 	addi	fp,sp,12
  811010:	e13ffe15 	stw	r4,-8(fp)
  811014:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
  811018:	000530fa 	rdctl	r2,ienable
  81101c:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
  811020:	00c00044 	movi	r3,1
  811024:	e0bfff17 	ldw	r2,-4(fp)
  811028:	1884983a 	sll	r2,r3,r2
  81102c:	1007883a 	mov	r3,r2
  811030:	e0bffd17 	ldw	r2,-12(fp)
  811034:	1884703a 	and	r2,r3,r2
  811038:	1004c03a 	cmpne	r2,r2,zero
  81103c:	10803fcc 	andi	r2,r2,255
}
  811040:	e037883a 	mov	sp,fp
  811044:	df000017 	ldw	fp,0(sp)
  811048:	dec00104 	addi	sp,sp,4
  81104c:	f800283a 	ret

00811050 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
  811050:	defff504 	addi	sp,sp,-44
  811054:	dfc00a15 	stw	ra,40(sp)
  811058:	df000915 	stw	fp,36(sp)
  81105c:	df000904 	addi	fp,sp,36
  811060:	e13ffc15 	stw	r4,-16(fp)
  811064:	e17ffd15 	stw	r5,-12(fp)
  811068:	e1bffe15 	stw	r6,-8(fp)
  81106c:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
  811070:	00bffa84 	movi	r2,-22
  811074:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
  811078:	e0bffd17 	ldw	r2,-12(fp)
  81107c:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
  811080:	e0bff817 	ldw	r2,-32(fp)
  811084:	10800808 	cmpgei	r2,r2,32
  811088:	1000271e 	bne	r2,zero,811128 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  81108c:	0005303a 	rdctl	r2,status
  811090:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  811094:	e0fffb17 	ldw	r3,-20(fp)
  811098:	00bfff84 	movi	r2,-2
  81109c:	1884703a 	and	r2,r3,r2
  8110a0:	1001703a 	wrctl	status,r2
  
  return context;
  8110a4:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
  8110a8:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
  8110ac:	00802074 	movhi	r2,129
  8110b0:	10979c04 	addi	r2,r2,24176
  8110b4:	e0fff817 	ldw	r3,-32(fp)
  8110b8:	180690fa 	slli	r3,r3,3
  8110bc:	10c5883a 	add	r2,r2,r3
  8110c0:	e0fffe17 	ldw	r3,-8(fp)
  8110c4:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
  8110c8:	00802074 	movhi	r2,129
  8110cc:	10979c04 	addi	r2,r2,24176
  8110d0:	e0fff817 	ldw	r3,-32(fp)
  8110d4:	180690fa 	slli	r3,r3,3
  8110d8:	10c5883a 	add	r2,r2,r3
  8110dc:	10800104 	addi	r2,r2,4
  8110e0:	e0ffff17 	ldw	r3,-4(fp)
  8110e4:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
  8110e8:	e0bffe17 	ldw	r2,-8(fp)
  8110ec:	10000526 	beq	r2,zero,811104 <alt_iic_isr_register+0xb4>
  8110f0:	e0bff817 	ldw	r2,-32(fp)
  8110f4:	100b883a 	mov	r5,r2
  8110f8:	e13ffc17 	ldw	r4,-16(fp)
  8110fc:	0810ef00 	call	810ef0 <alt_ic_irq_enable>
  811100:	00000406 	br	811114 <alt_iic_isr_register+0xc4>
  811104:	e0bff817 	ldw	r2,-32(fp)
  811108:	100b883a 	mov	r5,r2
  81110c:	e13ffc17 	ldw	r4,-16(fp)
  811110:	0810f780 	call	810f78 <alt_ic_irq_disable>
  811114:	e0bff715 	stw	r2,-36(fp)
  811118:	e0bffa17 	ldw	r2,-24(fp)
  81111c:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  811120:	e0bff917 	ldw	r2,-28(fp)
  811124:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
  811128:	e0bff717 	ldw	r2,-36(fp)
}
  81112c:	e037883a 	mov	sp,fp
  811130:	dfc00117 	ldw	ra,4(sp)
  811134:	df000017 	ldw	fp,0(sp)
  811138:	dec00204 	addi	sp,sp,8
  81113c:	f800283a 	ret

00811140 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
  811140:	defff904 	addi	sp,sp,-28
  811144:	dfc00615 	stw	ra,24(sp)
  811148:	df000515 	stw	fp,20(sp)
  81114c:	df000504 	addi	fp,sp,20
  811150:	e13ffc15 	stw	r4,-16(fp)
  811154:	e17ffd15 	stw	r5,-12(fp)
  811158:	e1bffe15 	stw	r6,-8(fp)
  81115c:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
  811160:	e1bfff17 	ldw	r6,-4(fp)
  811164:	e17ffe17 	ldw	r5,-8(fp)
  811168:	e13ffd17 	ldw	r4,-12(fp)
  81116c:	08113800 	call	811380 <open>
  811170:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
  811174:	e0bffb17 	ldw	r2,-20(fp)
  811178:	10001c16 	blt	r2,zero,8111ec <alt_open_fd+0xac>
  {
    fd->dev      = alt_fd_list[old].dev;
  81117c:	00802074 	movhi	r2,129
  811180:	108ad904 	addi	r2,r2,11108
  811184:	e0fffb17 	ldw	r3,-20(fp)
  811188:	18c00324 	muli	r3,r3,12
  81118c:	10c5883a 	add	r2,r2,r3
  811190:	10c00017 	ldw	r3,0(r2)
  811194:	e0bffc17 	ldw	r2,-16(fp)
  811198:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
  81119c:	00802074 	movhi	r2,129
  8111a0:	108ad904 	addi	r2,r2,11108
  8111a4:	e0fffb17 	ldw	r3,-20(fp)
  8111a8:	18c00324 	muli	r3,r3,12
  8111ac:	10c5883a 	add	r2,r2,r3
  8111b0:	10800104 	addi	r2,r2,4
  8111b4:	10c00017 	ldw	r3,0(r2)
  8111b8:	e0bffc17 	ldw	r2,-16(fp)
  8111bc:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
  8111c0:	00802074 	movhi	r2,129
  8111c4:	108ad904 	addi	r2,r2,11108
  8111c8:	e0fffb17 	ldw	r3,-20(fp)
  8111cc:	18c00324 	muli	r3,r3,12
  8111d0:	10c5883a 	add	r2,r2,r3
  8111d4:	10800204 	addi	r2,r2,8
  8111d8:	10c00017 	ldw	r3,0(r2)
  8111dc:	e0bffc17 	ldw	r2,-16(fp)
  8111e0:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
  8111e4:	e13ffb17 	ldw	r4,-20(fp)
  8111e8:	080fc300 	call	80fc30 <alt_release_fd>
  }
} 
  8111ec:	0001883a 	nop
  8111f0:	e037883a 	mov	sp,fp
  8111f4:	dfc00117 	ldw	ra,4(sp)
  8111f8:	df000017 	ldw	fp,0(sp)
  8111fc:	dec00204 	addi	sp,sp,8
  811200:	f800283a 	ret

00811204 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
  811204:	defffb04 	addi	sp,sp,-20
  811208:	dfc00415 	stw	ra,16(sp)
  81120c:	df000315 	stw	fp,12(sp)
  811210:	df000304 	addi	fp,sp,12
  811214:	e13ffd15 	stw	r4,-12(fp)
  811218:	e17ffe15 	stw	r5,-8(fp)
  81121c:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
  811220:	01c07fc4 	movi	r7,511
  811224:	01800044 	movi	r6,1
  811228:	e17ffd17 	ldw	r5,-12(fp)
  81122c:	01002074 	movhi	r4,129
  811230:	210adc04 	addi	r4,r4,11120
  811234:	08111400 	call	811140 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
  811238:	01c07fc4 	movi	r7,511
  81123c:	000d883a 	mov	r6,zero
  811240:	e17ffe17 	ldw	r5,-8(fp)
  811244:	01002074 	movhi	r4,129
  811248:	210ad904 	addi	r4,r4,11108
  81124c:	08111400 	call	811140 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
  811250:	01c07fc4 	movi	r7,511
  811254:	01800044 	movi	r6,1
  811258:	e17fff17 	ldw	r5,-4(fp)
  81125c:	01002074 	movhi	r4,129
  811260:	210adf04 	addi	r4,r4,11132
  811264:	08111400 	call	811140 <alt_open_fd>
}  
  811268:	0001883a 	nop
  81126c:	e037883a 	mov	sp,fp
  811270:	dfc00117 	ldw	ra,4(sp)
  811274:	df000017 	ldw	fp,0(sp)
  811278:	dec00204 	addi	sp,sp,8
  81127c:	f800283a 	ret

00811280 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  811280:	defffe04 	addi	sp,sp,-8
  811284:	dfc00115 	stw	ra,4(sp)
  811288:	df000015 	stw	fp,0(sp)
  81128c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  811290:	d0a00b17 	ldw	r2,-32724(gp)
  811294:	10000326 	beq	r2,zero,8112a4 <alt_get_errno+0x24>
  811298:	d0a00b17 	ldw	r2,-32724(gp)
  81129c:	103ee83a 	callr	r2
  8112a0:	00000106 	br	8112a8 <alt_get_errno+0x28>
  8112a4:	d0a6d104 	addi	r2,gp,-25788
}
  8112a8:	e037883a 	mov	sp,fp
  8112ac:	dfc00117 	ldw	ra,4(sp)
  8112b0:	df000017 	ldw	fp,0(sp)
  8112b4:	dec00204 	addi	sp,sp,8
  8112b8:	f800283a 	ret

008112bc <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
  8112bc:	defffd04 	addi	sp,sp,-12
  8112c0:	df000215 	stw	fp,8(sp)
  8112c4:	df000204 	addi	fp,sp,8
  8112c8:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
  8112cc:	e0bfff17 	ldw	r2,-4(fp)
  8112d0:	10800217 	ldw	r2,8(r2)
  8112d4:	10d00034 	orhi	r3,r2,16384
  8112d8:	e0bfff17 	ldw	r2,-4(fp)
  8112dc:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  8112e0:	e03ffe15 	stw	zero,-8(fp)
  8112e4:	00001d06 	br	81135c <alt_file_locked+0xa0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
  8112e8:	00802074 	movhi	r2,129
  8112ec:	108ad904 	addi	r2,r2,11108
  8112f0:	e0fffe17 	ldw	r3,-8(fp)
  8112f4:	18c00324 	muli	r3,r3,12
  8112f8:	10c5883a 	add	r2,r2,r3
  8112fc:	10c00017 	ldw	r3,0(r2)
  811300:	e0bfff17 	ldw	r2,-4(fp)
  811304:	10800017 	ldw	r2,0(r2)
  811308:	1880111e 	bne	r3,r2,811350 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
  81130c:	00802074 	movhi	r2,129
  811310:	108ad904 	addi	r2,r2,11108
  811314:	e0fffe17 	ldw	r3,-8(fp)
  811318:	18c00324 	muli	r3,r3,12
  81131c:	10c5883a 	add	r2,r2,r3
  811320:	10800204 	addi	r2,r2,8
  811324:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
  811328:	1000090e 	bge	r2,zero,811350 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
  81132c:	e0bffe17 	ldw	r2,-8(fp)
  811330:	10c00324 	muli	r3,r2,12
  811334:	00802074 	movhi	r2,129
  811338:	108ad904 	addi	r2,r2,11108
  81133c:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
  811340:	e0bfff17 	ldw	r2,-4(fp)
  811344:	18800226 	beq	r3,r2,811350 <alt_file_locked+0x94>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
  811348:	00bffcc4 	movi	r2,-13
  81134c:	00000806 	br	811370 <alt_file_locked+0xb4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  811350:	e0bffe17 	ldw	r2,-8(fp)
  811354:	10800044 	addi	r2,r2,1
  811358:	e0bffe15 	stw	r2,-8(fp)
  81135c:	d0a00a17 	ldw	r2,-32728(gp)
  811360:	1007883a 	mov	r3,r2
  811364:	e0bffe17 	ldw	r2,-8(fp)
  811368:	18bfdf2e 	bgeu	r3,r2,8112e8 <__alt_data_end+0xff8112e8>
    }
  }
  
  /* The device is not locked */
 
  return 0;
  81136c:	0005883a 	mov	r2,zero
}
  811370:	e037883a 	mov	sp,fp
  811374:	df000017 	ldw	fp,0(sp)
  811378:	dec00104 	addi	sp,sp,4
  81137c:	f800283a 	ret

00811380 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
  811380:	defff604 	addi	sp,sp,-40
  811384:	dfc00915 	stw	ra,36(sp)
  811388:	df000815 	stw	fp,32(sp)
  81138c:	df000804 	addi	fp,sp,32
  811390:	e13ffd15 	stw	r4,-12(fp)
  811394:	e17ffe15 	stw	r5,-8(fp)
  811398:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
  81139c:	00bfffc4 	movi	r2,-1
  8113a0:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
  8113a4:	00bffb44 	movi	r2,-19
  8113a8:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
  8113ac:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
  8113b0:	d1600804 	addi	r5,gp,-32736
  8113b4:	e13ffd17 	ldw	r4,-12(fp)
  8113b8:	081169c0 	call	81169c <alt_find_dev>
  8113bc:	e0bff815 	stw	r2,-32(fp)
  8113c0:	e0bff817 	ldw	r2,-32(fp)
  8113c4:	1000051e 	bne	r2,zero,8113dc <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
  8113c8:	e13ffd17 	ldw	r4,-12(fp)
  8113cc:	081172c0 	call	81172c <alt_find_file>
  8113d0:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
  8113d4:	00800044 	movi	r2,1
  8113d8:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
  8113dc:	e0bff817 	ldw	r2,-32(fp)
  8113e0:	10002926 	beq	r2,zero,811488 <open+0x108>
  {
    if ((index = alt_get_fd (dev)) < 0)
  8113e4:	e13ff817 	ldw	r4,-32(fp)
  8113e8:	08118340 	call	811834 <alt_get_fd>
  8113ec:	e0bff915 	stw	r2,-28(fp)
  8113f0:	e0bff917 	ldw	r2,-28(fp)
  8113f4:	1000030e 	bge	r2,zero,811404 <open+0x84>
    {
      status = index;
  8113f8:	e0bff917 	ldw	r2,-28(fp)
  8113fc:	e0bffa15 	stw	r2,-24(fp)
  811400:	00002306 	br	811490 <open+0x110>
    }
    else
    {
      fd = &alt_fd_list[index];
  811404:	e0bff917 	ldw	r2,-28(fp)
  811408:	10c00324 	muli	r3,r2,12
  81140c:	00802074 	movhi	r2,129
  811410:	108ad904 	addi	r2,r2,11108
  811414:	1885883a 	add	r2,r3,r2
  811418:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
  81141c:	e0fffe17 	ldw	r3,-8(fp)
  811420:	00900034 	movhi	r2,16384
  811424:	10bfffc4 	addi	r2,r2,-1
  811428:	1886703a 	and	r3,r3,r2
  81142c:	e0bffc17 	ldw	r2,-16(fp)
  811430:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
  811434:	e0bffb17 	ldw	r2,-20(fp)
  811438:	1000051e 	bne	r2,zero,811450 <open+0xd0>
  81143c:	e13ffc17 	ldw	r4,-16(fp)
  811440:	08112bc0 	call	8112bc <alt_file_locked>
  811444:	e0bffa15 	stw	r2,-24(fp)
  811448:	e0bffa17 	ldw	r2,-24(fp)
  81144c:	10001016 	blt	r2,zero,811490 <open+0x110>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
  811450:	e0bff817 	ldw	r2,-32(fp)
  811454:	10800317 	ldw	r2,12(r2)
  811458:	10000826 	beq	r2,zero,81147c <open+0xfc>
  81145c:	e0bff817 	ldw	r2,-32(fp)
  811460:	10800317 	ldw	r2,12(r2)
  811464:	e1ffff17 	ldw	r7,-4(fp)
  811468:	e1bffe17 	ldw	r6,-8(fp)
  81146c:	e17ffd17 	ldw	r5,-12(fp)
  811470:	e13ffc17 	ldw	r4,-16(fp)
  811474:	103ee83a 	callr	r2
  811478:	00000106 	br	811480 <open+0x100>
  81147c:	0005883a 	mov	r2,zero
  811480:	e0bffa15 	stw	r2,-24(fp)
  811484:	00000206 	br	811490 <open+0x110>
      }
    }
  }
  else
  {
    status = -ENODEV;
  811488:	00bffb44 	movi	r2,-19
  81148c:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
  811490:	e0bffa17 	ldw	r2,-24(fp)
  811494:	1000090e 	bge	r2,zero,8114bc <open+0x13c>
  {
    alt_release_fd (index);  
  811498:	e13ff917 	ldw	r4,-28(fp)
  81149c:	080fc300 	call	80fc30 <alt_release_fd>
    ALT_ERRNO = -status;
  8114a0:	08112800 	call	811280 <alt_get_errno>
  8114a4:	1007883a 	mov	r3,r2
  8114a8:	e0bffa17 	ldw	r2,-24(fp)
  8114ac:	0085c83a 	sub	r2,zero,r2
  8114b0:	18800015 	stw	r2,0(r3)
    return -1;
  8114b4:	00bfffc4 	movi	r2,-1
  8114b8:	00000106 	br	8114c0 <open+0x140>
  }
  
  /* return the reference upon success */

  return index;
  8114bc:	e0bff917 	ldw	r2,-28(fp)
}
  8114c0:	e037883a 	mov	sp,fp
  8114c4:	dfc00117 	ldw	ra,4(sp)
  8114c8:	df000017 	ldw	fp,0(sp)
  8114cc:	dec00204 	addi	sp,sp,8
  8114d0:	f800283a 	ret

008114d4 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
  8114d4:	defffa04 	addi	sp,sp,-24
  8114d8:	df000515 	stw	fp,20(sp)
  8114dc:	df000504 	addi	fp,sp,20
  8114e0:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  8114e4:	0005303a 	rdctl	r2,status
  8114e8:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  8114ec:	e0fffc17 	ldw	r3,-16(fp)
  8114f0:	00bfff84 	movi	r2,-2
  8114f4:	1884703a 	and	r2,r3,r2
  8114f8:	1001703a 	wrctl	status,r2
  
  return context;
  8114fc:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
  811500:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
  811504:	e0bfff17 	ldw	r2,-4(fp)
  811508:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
  81150c:	e0bffd17 	ldw	r2,-12(fp)
  811510:	10800017 	ldw	r2,0(r2)
  811514:	e0fffd17 	ldw	r3,-12(fp)
  811518:	18c00117 	ldw	r3,4(r3)
  81151c:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
  811520:	e0bffd17 	ldw	r2,-12(fp)
  811524:	10800117 	ldw	r2,4(r2)
  811528:	e0fffd17 	ldw	r3,-12(fp)
  81152c:	18c00017 	ldw	r3,0(r3)
  811530:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
  811534:	e0bffd17 	ldw	r2,-12(fp)
  811538:	e0fffd17 	ldw	r3,-12(fp)
  81153c:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
  811540:	e0bffd17 	ldw	r2,-12(fp)
  811544:	e0fffd17 	ldw	r3,-12(fp)
  811548:	10c00015 	stw	r3,0(r2)
  81154c:	e0bffb17 	ldw	r2,-20(fp)
  811550:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  811554:	e0bffe17 	ldw	r2,-8(fp)
  811558:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
  81155c:	0001883a 	nop
  811560:	e037883a 	mov	sp,fp
  811564:	df000017 	ldw	fp,0(sp)
  811568:	dec00104 	addi	sp,sp,4
  81156c:	f800283a 	ret

00811570 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
  811570:	defffb04 	addi	sp,sp,-20
  811574:	dfc00415 	stw	ra,16(sp)
  811578:	df000315 	stw	fp,12(sp)
  81157c:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
  811580:	d0a00e17 	ldw	r2,-32712(gp)
  811584:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
  811588:	d0a6d717 	ldw	r2,-25764(gp)
  81158c:	10800044 	addi	r2,r2,1
  811590:	d0a6d715 	stw	r2,-25764(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
  811594:	00002e06 	br	811650 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
  811598:	e0bffd17 	ldw	r2,-12(fp)
  81159c:	10800017 	ldw	r2,0(r2)
  8115a0:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
  8115a4:	e0bffd17 	ldw	r2,-12(fp)
  8115a8:	10800403 	ldbu	r2,16(r2)
  8115ac:	10803fcc 	andi	r2,r2,255
  8115b0:	10000426 	beq	r2,zero,8115c4 <alt_tick+0x54>
  8115b4:	d0a6d717 	ldw	r2,-25764(gp)
  8115b8:	1000021e 	bne	r2,zero,8115c4 <alt_tick+0x54>
    {
      alarm->rollover = 0;
  8115bc:	e0bffd17 	ldw	r2,-12(fp)
  8115c0:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
  8115c4:	e0bffd17 	ldw	r2,-12(fp)
  8115c8:	10800217 	ldw	r2,8(r2)
  8115cc:	d0e6d717 	ldw	r3,-25764(gp)
  8115d0:	18801d36 	bltu	r3,r2,811648 <alt_tick+0xd8>
  8115d4:	e0bffd17 	ldw	r2,-12(fp)
  8115d8:	10800403 	ldbu	r2,16(r2)
  8115dc:	10803fcc 	andi	r2,r2,255
  8115e0:	1000191e 	bne	r2,zero,811648 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
  8115e4:	e0bffd17 	ldw	r2,-12(fp)
  8115e8:	10800317 	ldw	r2,12(r2)
  8115ec:	e0fffd17 	ldw	r3,-12(fp)
  8115f0:	18c00517 	ldw	r3,20(r3)
  8115f4:	1809883a 	mov	r4,r3
  8115f8:	103ee83a 	callr	r2
  8115fc:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
  811600:	e0bfff17 	ldw	r2,-4(fp)
  811604:	1000031e 	bne	r2,zero,811614 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
  811608:	e13ffd17 	ldw	r4,-12(fp)
  81160c:	08114d40 	call	8114d4 <alt_alarm_stop>
  811610:	00000d06 	br	811648 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
  811614:	e0bffd17 	ldw	r2,-12(fp)
  811618:	10c00217 	ldw	r3,8(r2)
  81161c:	e0bfff17 	ldw	r2,-4(fp)
  811620:	1887883a 	add	r3,r3,r2
  811624:	e0bffd17 	ldw	r2,-12(fp)
  811628:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
  81162c:	e0bffd17 	ldw	r2,-12(fp)
  811630:	10c00217 	ldw	r3,8(r2)
  811634:	d0a6d717 	ldw	r2,-25764(gp)
  811638:	1880032e 	bgeu	r3,r2,811648 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
  81163c:	e0bffd17 	ldw	r2,-12(fp)
  811640:	00c00044 	movi	r3,1
  811644:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
  811648:	e0bffe17 	ldw	r2,-8(fp)
  81164c:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
  811650:	e0fffd17 	ldw	r3,-12(fp)
  811654:	d0a00e04 	addi	r2,gp,-32712
  811658:	18bfcf1e 	bne	r3,r2,811598 <__alt_data_end+0xff811598>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
  81165c:	0001883a 	nop
}
  811660:	0001883a 	nop
  811664:	e037883a 	mov	sp,fp
  811668:	dfc00117 	ldw	ra,4(sp)
  81166c:	df000017 	ldw	fp,0(sp)
  811670:	dec00204 	addi	sp,sp,8
  811674:	f800283a 	ret

00811678 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
  811678:	deffff04 	addi	sp,sp,-4
  81167c:	df000015 	stw	fp,0(sp)
  811680:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
  811684:	000170fa 	wrctl	ienable,zero
}
  811688:	0001883a 	nop
  81168c:	e037883a 	mov	sp,fp
  811690:	df000017 	ldw	fp,0(sp)
  811694:	dec00104 	addi	sp,sp,4
  811698:	f800283a 	ret

0081169c <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
  81169c:	defffa04 	addi	sp,sp,-24
  8116a0:	dfc00515 	stw	ra,20(sp)
  8116a4:	df000415 	stw	fp,16(sp)
  8116a8:	df000404 	addi	fp,sp,16
  8116ac:	e13ffe15 	stw	r4,-8(fp)
  8116b0:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
  8116b4:	e0bfff17 	ldw	r2,-4(fp)
  8116b8:	10800017 	ldw	r2,0(r2)
  8116bc:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
  8116c0:	e13ffe17 	ldw	r4,-8(fp)
  8116c4:	0804aec0 	call	804aec <strlen>
  8116c8:	10800044 	addi	r2,r2,1
  8116cc:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
  8116d0:	00000d06 	br	811708 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
  8116d4:	e0bffc17 	ldw	r2,-16(fp)
  8116d8:	10800217 	ldw	r2,8(r2)
  8116dc:	e0fffd17 	ldw	r3,-12(fp)
  8116e0:	180d883a 	mov	r6,r3
  8116e4:	e17ffe17 	ldw	r5,-8(fp)
  8116e8:	1009883a 	mov	r4,r2
  8116ec:	0811a500 	call	811a50 <memcmp>
  8116f0:	1000021e 	bne	r2,zero,8116fc <alt_find_dev+0x60>
    {
      /* match found */

      return next;
  8116f4:	e0bffc17 	ldw	r2,-16(fp)
  8116f8:	00000706 	br	811718 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
  8116fc:	e0bffc17 	ldw	r2,-16(fp)
  811700:	10800017 	ldw	r2,0(r2)
  811704:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
  811708:	e0fffc17 	ldw	r3,-16(fp)
  81170c:	e0bfff17 	ldw	r2,-4(fp)
  811710:	18bff01e 	bne	r3,r2,8116d4 <__alt_data_end+0xff8116d4>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
  811714:	0005883a 	mov	r2,zero
}
  811718:	e037883a 	mov	sp,fp
  81171c:	dfc00117 	ldw	ra,4(sp)
  811720:	df000017 	ldw	fp,0(sp)
  811724:	dec00204 	addi	sp,sp,8
  811728:	f800283a 	ret

0081172c <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
  81172c:	defffb04 	addi	sp,sp,-20
  811730:	dfc00415 	stw	ra,16(sp)
  811734:	df000315 	stw	fp,12(sp)
  811738:	df000304 	addi	fp,sp,12
  81173c:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
  811740:	d0a00617 	ldw	r2,-32744(gp)
  811744:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
  811748:	00003106 	br	811810 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
  81174c:	e0bffd17 	ldw	r2,-12(fp)
  811750:	10800217 	ldw	r2,8(r2)
  811754:	1009883a 	mov	r4,r2
  811758:	0804aec0 	call	804aec <strlen>
  81175c:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
  811760:	e0bffd17 	ldw	r2,-12(fp)
  811764:	10c00217 	ldw	r3,8(r2)
  811768:	e0bffe17 	ldw	r2,-8(fp)
  81176c:	10bfffc4 	addi	r2,r2,-1
  811770:	1885883a 	add	r2,r3,r2
  811774:	10800003 	ldbu	r2,0(r2)
  811778:	10803fcc 	andi	r2,r2,255
  81177c:	1080201c 	xori	r2,r2,128
  811780:	10bfe004 	addi	r2,r2,-128
  811784:	10800bd8 	cmpnei	r2,r2,47
  811788:	1000031e 	bne	r2,zero,811798 <alt_find_file+0x6c>
    {
      len -= 1;
  81178c:	e0bffe17 	ldw	r2,-8(fp)
  811790:	10bfffc4 	addi	r2,r2,-1
  811794:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
  811798:	e0bffe17 	ldw	r2,-8(fp)
  81179c:	e0ffff17 	ldw	r3,-4(fp)
  8117a0:	1885883a 	add	r2,r3,r2
  8117a4:	10800003 	ldbu	r2,0(r2)
  8117a8:	10803fcc 	andi	r2,r2,255
  8117ac:	1080201c 	xori	r2,r2,128
  8117b0:	10bfe004 	addi	r2,r2,-128
  8117b4:	10800be0 	cmpeqi	r2,r2,47
  8117b8:	1000081e 	bne	r2,zero,8117dc <alt_find_file+0xb0>
  8117bc:	e0bffe17 	ldw	r2,-8(fp)
  8117c0:	e0ffff17 	ldw	r3,-4(fp)
  8117c4:	1885883a 	add	r2,r3,r2
  8117c8:	10800003 	ldbu	r2,0(r2)
  8117cc:	10803fcc 	andi	r2,r2,255
  8117d0:	1080201c 	xori	r2,r2,128
  8117d4:	10bfe004 	addi	r2,r2,-128
  8117d8:	10000a1e 	bne	r2,zero,811804 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
  8117dc:	e0bffd17 	ldw	r2,-12(fp)
  8117e0:	10800217 	ldw	r2,8(r2)
  8117e4:	e0fffe17 	ldw	r3,-8(fp)
  8117e8:	180d883a 	mov	r6,r3
  8117ec:	e17fff17 	ldw	r5,-4(fp)
  8117f0:	1009883a 	mov	r4,r2
  8117f4:	0811a500 	call	811a50 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
  8117f8:	1000021e 	bne	r2,zero,811804 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
  8117fc:	e0bffd17 	ldw	r2,-12(fp)
  811800:	00000706 	br	811820 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
  811804:	e0bffd17 	ldw	r2,-12(fp)
  811808:	10800017 	ldw	r2,0(r2)
  81180c:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
  811810:	e0fffd17 	ldw	r3,-12(fp)
  811814:	d0a00604 	addi	r2,gp,-32744
  811818:	18bfcc1e 	bne	r3,r2,81174c <__alt_data_end+0xff81174c>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
  81181c:	0005883a 	mov	r2,zero
}
  811820:	e037883a 	mov	sp,fp
  811824:	dfc00117 	ldw	ra,4(sp)
  811828:	df000017 	ldw	fp,0(sp)
  81182c:	dec00204 	addi	sp,sp,8
  811830:	f800283a 	ret

00811834 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
  811834:	defffc04 	addi	sp,sp,-16
  811838:	df000315 	stw	fp,12(sp)
  81183c:	df000304 	addi	fp,sp,12
  811840:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
  811844:	00bffa04 	movi	r2,-24
  811848:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
  81184c:	e03ffd15 	stw	zero,-12(fp)
  811850:	00001906 	br	8118b8 <alt_get_fd+0x84>
  {
    if (!alt_fd_list[i].dev)
  811854:	00802074 	movhi	r2,129
  811858:	108ad904 	addi	r2,r2,11108
  81185c:	e0fffd17 	ldw	r3,-12(fp)
  811860:	18c00324 	muli	r3,r3,12
  811864:	10c5883a 	add	r2,r2,r3
  811868:	10800017 	ldw	r2,0(r2)
  81186c:	10000f1e 	bne	r2,zero,8118ac <alt_get_fd+0x78>
    {
      alt_fd_list[i].dev = dev;
  811870:	00802074 	movhi	r2,129
  811874:	108ad904 	addi	r2,r2,11108
  811878:	e0fffd17 	ldw	r3,-12(fp)
  81187c:	18c00324 	muli	r3,r3,12
  811880:	10c5883a 	add	r2,r2,r3
  811884:	e0ffff17 	ldw	r3,-4(fp)
  811888:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
  81188c:	d0e00a17 	ldw	r3,-32728(gp)
  811890:	e0bffd17 	ldw	r2,-12(fp)
  811894:	1880020e 	bge	r3,r2,8118a0 <alt_get_fd+0x6c>
      {
        alt_max_fd = i;
  811898:	e0bffd17 	ldw	r2,-12(fp)
  81189c:	d0a00a15 	stw	r2,-32728(gp)
      }
      rc = i;
  8118a0:	e0bffd17 	ldw	r2,-12(fp)
  8118a4:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
  8118a8:	00000606 	br	8118c4 <alt_get_fd+0x90>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
  8118ac:	e0bffd17 	ldw	r2,-12(fp)
  8118b0:	10800044 	addi	r2,r2,1
  8118b4:	e0bffd15 	stw	r2,-12(fp)
  8118b8:	e0bffd17 	ldw	r2,-12(fp)
  8118bc:	10800810 	cmplti	r2,r2,32
  8118c0:	103fe41e 	bne	r2,zero,811854 <__alt_data_end+0xff811854>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
  8118c4:	e0bffe17 	ldw	r2,-8(fp)
}
  8118c8:	e037883a 	mov	sp,fp
  8118cc:	df000017 	ldw	fp,0(sp)
  8118d0:	dec00104 	addi	sp,sp,4
  8118d4:	f800283a 	ret

008118d8 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
  8118d8:	defffb04 	addi	sp,sp,-20
  8118dc:	df000415 	stw	fp,16(sp)
  8118e0:	df000404 	addi	fp,sp,16
  8118e4:	e13ffe15 	stw	r4,-8(fp)
  8118e8:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
  8118ec:	e0bfff17 	ldw	r2,-4(fp)
  8118f0:	10820070 	cmpltui	r2,r2,2049
  8118f4:	1000021e 	bne	r2,zero,811900 <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
  8118f8:	00820004 	movi	r2,2048
  8118fc:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
  811900:	e0fffe17 	ldw	r3,-8(fp)
  811904:	e0bfff17 	ldw	r2,-4(fp)
  811908:	1885883a 	add	r2,r3,r2
  81190c:	e0bffd15 	stw	r2,-12(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
  811910:	e0bffe17 	ldw	r2,-8(fp)
  811914:	e0bffc15 	stw	r2,-16(fp)
  811918:	00000506 	br	811930 <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
  81191c:	e0bffc17 	ldw	r2,-16(fp)
  811920:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
  811924:	e0bffc17 	ldw	r2,-16(fp)
  811928:	10800804 	addi	r2,r2,32
  81192c:	e0bffc15 	stw	r2,-16(fp)
  811930:	e0fffc17 	ldw	r3,-16(fp)
  811934:	e0bffd17 	ldw	r2,-12(fp)
  811938:	18bff836 	bltu	r3,r2,81191c <__alt_data_end+0xff81191c>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
  81193c:	e0bffe17 	ldw	r2,-8(fp)
  811940:	108007cc 	andi	r2,r2,31
  811944:	10000226 	beq	r2,zero,811950 <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
  811948:	e0bffc17 	ldw	r2,-16(fp)
  81194c:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
  811950:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
  811954:	0001883a 	nop
  811958:	e037883a 	mov	sp,fp
  81195c:	df000017 	ldw	fp,0(sp)
  811960:	dec00104 	addi	sp,sp,4
  811964:	f800283a 	ret

00811968 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
  811968:	defffe04 	addi	sp,sp,-8
  81196c:	df000115 	stw	fp,4(sp)
  811970:	df000104 	addi	fp,sp,4
  811974:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
  811978:	e0bfff17 	ldw	r2,-4(fp)
  81197c:	10bffe84 	addi	r2,r2,-6
  811980:	10c00428 	cmpgeui	r3,r2,16
  811984:	18001a1e 	bne	r3,zero,8119f0 <alt_exception_cause_generated_bad_addr+0x88>
  811988:	100690ba 	slli	r3,r2,2
  81198c:	00802074 	movhi	r2,129
  811990:	10866804 	addi	r2,r2,6560
  811994:	1885883a 	add	r2,r3,r2
  811998:	10800017 	ldw	r2,0(r2)
  81199c:	1000683a 	jmp	r2
  8119a0:	008119e0 	cmpeqi	r2,zero,1127
  8119a4:	008119e0 	cmpeqi	r2,zero,1127
  8119a8:	008119f0 	cmpltui	r2,zero,1127
  8119ac:	008119f0 	cmpltui	r2,zero,1127
  8119b0:	008119f0 	cmpltui	r2,zero,1127
  8119b4:	008119e0 	cmpeqi	r2,zero,1127
  8119b8:	008119e8 	cmpgeui	r2,zero,1127
  8119bc:	008119f0 	cmpltui	r2,zero,1127
  8119c0:	008119e0 	cmpeqi	r2,zero,1127
  8119c4:	008119e0 	cmpeqi	r2,zero,1127
  8119c8:	008119f0 	cmpltui	r2,zero,1127
  8119cc:	008119e0 	cmpeqi	r2,zero,1127
  8119d0:	008119e8 	cmpgeui	r2,zero,1127
  8119d4:	008119f0 	cmpltui	r2,zero,1127
  8119d8:	008119f0 	cmpltui	r2,zero,1127
  8119dc:	008119e0 	cmpeqi	r2,zero,1127
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
  8119e0:	00800044 	movi	r2,1
  8119e4:	00000306 	br	8119f4 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
  8119e8:	0005883a 	mov	r2,zero
  8119ec:	00000106 	br	8119f4 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
  8119f0:	0005883a 	mov	r2,zero
  }
}
  8119f4:	e037883a 	mov	sp,fp
  8119f8:	df000017 	ldw	fp,0(sp)
  8119fc:	dec00104 	addi	sp,sp,4
  811a00:	f800283a 	ret

00811a04 <atexit>:
  811a04:	200b883a 	mov	r5,r4
  811a08:	000f883a 	mov	r7,zero
  811a0c:	000d883a 	mov	r6,zero
  811a10:	0009883a 	mov	r4,zero
  811a14:	0811acc1 	jmpi	811acc <__register_exitproc>

00811a18 <exit>:
  811a18:	defffe04 	addi	sp,sp,-8
  811a1c:	000b883a 	mov	r5,zero
  811a20:	dc000015 	stw	r16,0(sp)
  811a24:	dfc00115 	stw	ra,4(sp)
  811a28:	2021883a 	mov	r16,r4
  811a2c:	0811be40 	call	811be4 <__call_exitprocs>
  811a30:	00802074 	movhi	r2,129
  811a34:	108f5104 	addi	r2,r2,15684
  811a38:	11000017 	ldw	r4,0(r2)
  811a3c:	20800f17 	ldw	r2,60(r4)
  811a40:	10000126 	beq	r2,zero,811a48 <exit+0x30>
  811a44:	103ee83a 	callr	r2
  811a48:	8009883a 	mov	r4,r16
  811a4c:	0811d640 	call	811d64 <_exit>

00811a50 <memcmp>:
  811a50:	01c000c4 	movi	r7,3
  811a54:	3980192e 	bgeu	r7,r6,811abc <memcmp+0x6c>
  811a58:	2144b03a 	or	r2,r4,r5
  811a5c:	11c4703a 	and	r2,r2,r7
  811a60:	10000f26 	beq	r2,zero,811aa0 <memcmp+0x50>
  811a64:	20800003 	ldbu	r2,0(r4)
  811a68:	28c00003 	ldbu	r3,0(r5)
  811a6c:	10c0151e 	bne	r2,r3,811ac4 <memcmp+0x74>
  811a70:	31bfff84 	addi	r6,r6,-2
  811a74:	01ffffc4 	movi	r7,-1
  811a78:	00000406 	br	811a8c <memcmp+0x3c>
  811a7c:	20800003 	ldbu	r2,0(r4)
  811a80:	28c00003 	ldbu	r3,0(r5)
  811a84:	31bfffc4 	addi	r6,r6,-1
  811a88:	10c00e1e 	bne	r2,r3,811ac4 <memcmp+0x74>
  811a8c:	21000044 	addi	r4,r4,1
  811a90:	29400044 	addi	r5,r5,1
  811a94:	31fff91e 	bne	r6,r7,811a7c <__alt_data_end+0xff811a7c>
  811a98:	0005883a 	mov	r2,zero
  811a9c:	f800283a 	ret
  811aa0:	20c00017 	ldw	r3,0(r4)
  811aa4:	28800017 	ldw	r2,0(r5)
  811aa8:	18bfee1e 	bne	r3,r2,811a64 <__alt_data_end+0xff811a64>
  811aac:	31bfff04 	addi	r6,r6,-4
  811ab0:	21000104 	addi	r4,r4,4
  811ab4:	29400104 	addi	r5,r5,4
  811ab8:	39bff936 	bltu	r7,r6,811aa0 <__alt_data_end+0xff811aa0>
  811abc:	303fe91e 	bne	r6,zero,811a64 <__alt_data_end+0xff811a64>
  811ac0:	003ff506 	br	811a98 <__alt_data_end+0xff811a98>
  811ac4:	10c5c83a 	sub	r2,r2,r3
  811ac8:	f800283a 	ret

00811acc <__register_exitproc>:
  811acc:	defffa04 	addi	sp,sp,-24
  811ad0:	dc000315 	stw	r16,12(sp)
  811ad4:	04002074 	movhi	r16,129
  811ad8:	840f5104 	addi	r16,r16,15684
  811adc:	80c00017 	ldw	r3,0(r16)
  811ae0:	dc400415 	stw	r17,16(sp)
  811ae4:	dfc00515 	stw	ra,20(sp)
  811ae8:	18805217 	ldw	r2,328(r3)
  811aec:	2023883a 	mov	r17,r4
  811af0:	10003726 	beq	r2,zero,811bd0 <__register_exitproc+0x104>
  811af4:	10c00117 	ldw	r3,4(r2)
  811af8:	010007c4 	movi	r4,31
  811afc:	20c00e16 	blt	r4,r3,811b38 <__register_exitproc+0x6c>
  811b00:	1a000044 	addi	r8,r3,1
  811b04:	8800221e 	bne	r17,zero,811b90 <__register_exitproc+0xc4>
  811b08:	18c00084 	addi	r3,r3,2
  811b0c:	18c7883a 	add	r3,r3,r3
  811b10:	18c7883a 	add	r3,r3,r3
  811b14:	12000115 	stw	r8,4(r2)
  811b18:	10c7883a 	add	r3,r2,r3
  811b1c:	19400015 	stw	r5,0(r3)
  811b20:	0005883a 	mov	r2,zero
  811b24:	dfc00517 	ldw	ra,20(sp)
  811b28:	dc400417 	ldw	r17,16(sp)
  811b2c:	dc000317 	ldw	r16,12(sp)
  811b30:	dec00604 	addi	sp,sp,24
  811b34:	f800283a 	ret
  811b38:	00800034 	movhi	r2,0
  811b3c:	10800004 	addi	r2,r2,0
  811b40:	10002626 	beq	r2,zero,811bdc <__register_exitproc+0x110>
  811b44:	01006404 	movi	r4,400
  811b48:	d9400015 	stw	r5,0(sp)
  811b4c:	d9800115 	stw	r6,4(sp)
  811b50:	d9c00215 	stw	r7,8(sp)
  811b54:	00000000 	call	0 <__alt_mem_sdram-0x800000>
  811b58:	d9400017 	ldw	r5,0(sp)
  811b5c:	d9800117 	ldw	r6,4(sp)
  811b60:	d9c00217 	ldw	r7,8(sp)
  811b64:	10001d26 	beq	r2,zero,811bdc <__register_exitproc+0x110>
  811b68:	81000017 	ldw	r4,0(r16)
  811b6c:	10000115 	stw	zero,4(r2)
  811b70:	02000044 	movi	r8,1
  811b74:	22405217 	ldw	r9,328(r4)
  811b78:	0007883a 	mov	r3,zero
  811b7c:	12400015 	stw	r9,0(r2)
  811b80:	20805215 	stw	r2,328(r4)
  811b84:	10006215 	stw	zero,392(r2)
  811b88:	10006315 	stw	zero,396(r2)
  811b8c:	883fde26 	beq	r17,zero,811b08 <__alt_data_end+0xff811b08>
  811b90:	18c9883a 	add	r4,r3,r3
  811b94:	2109883a 	add	r4,r4,r4
  811b98:	1109883a 	add	r4,r2,r4
  811b9c:	21802215 	stw	r6,136(r4)
  811ba0:	01800044 	movi	r6,1
  811ba4:	12406217 	ldw	r9,392(r2)
  811ba8:	30cc983a 	sll	r6,r6,r3
  811bac:	4992b03a 	or	r9,r9,r6
  811bb0:	12406215 	stw	r9,392(r2)
  811bb4:	21c04215 	stw	r7,264(r4)
  811bb8:	01000084 	movi	r4,2
  811bbc:	893fd21e 	bne	r17,r4,811b08 <__alt_data_end+0xff811b08>
  811bc0:	11006317 	ldw	r4,396(r2)
  811bc4:	218cb03a 	or	r6,r4,r6
  811bc8:	11806315 	stw	r6,396(r2)
  811bcc:	003fce06 	br	811b08 <__alt_data_end+0xff811b08>
  811bd0:	18805304 	addi	r2,r3,332
  811bd4:	18805215 	stw	r2,328(r3)
  811bd8:	003fc606 	br	811af4 <__alt_data_end+0xff811af4>
  811bdc:	00bfffc4 	movi	r2,-1
  811be0:	003fd006 	br	811b24 <__alt_data_end+0xff811b24>

00811be4 <__call_exitprocs>:
  811be4:	defff504 	addi	sp,sp,-44
  811be8:	df000915 	stw	fp,36(sp)
  811bec:	dd400615 	stw	r21,24(sp)
  811bf0:	dc800315 	stw	r18,12(sp)
  811bf4:	dfc00a15 	stw	ra,40(sp)
  811bf8:	ddc00815 	stw	r23,32(sp)
  811bfc:	dd800715 	stw	r22,28(sp)
  811c00:	dd000515 	stw	r20,20(sp)
  811c04:	dcc00415 	stw	r19,16(sp)
  811c08:	dc400215 	stw	r17,8(sp)
  811c0c:	dc000115 	stw	r16,4(sp)
  811c10:	d9000015 	stw	r4,0(sp)
  811c14:	2839883a 	mov	fp,r5
  811c18:	04800044 	movi	r18,1
  811c1c:	057fffc4 	movi	r21,-1
  811c20:	00802074 	movhi	r2,129
  811c24:	108f5104 	addi	r2,r2,15684
  811c28:	12000017 	ldw	r8,0(r2)
  811c2c:	45005217 	ldw	r20,328(r8)
  811c30:	44c05204 	addi	r19,r8,328
  811c34:	a0001c26 	beq	r20,zero,811ca8 <__call_exitprocs+0xc4>
  811c38:	a0800117 	ldw	r2,4(r20)
  811c3c:	15ffffc4 	addi	r23,r2,-1
  811c40:	b8000d16 	blt	r23,zero,811c78 <__call_exitprocs+0x94>
  811c44:	14000044 	addi	r16,r2,1
  811c48:	8421883a 	add	r16,r16,r16
  811c4c:	8421883a 	add	r16,r16,r16
  811c50:	84402004 	addi	r17,r16,128
  811c54:	a463883a 	add	r17,r20,r17
  811c58:	a421883a 	add	r16,r20,r16
  811c5c:	e0001e26 	beq	fp,zero,811cd8 <__call_exitprocs+0xf4>
  811c60:	80804017 	ldw	r2,256(r16)
  811c64:	e0801c26 	beq	fp,r2,811cd8 <__call_exitprocs+0xf4>
  811c68:	bdffffc4 	addi	r23,r23,-1
  811c6c:	843fff04 	addi	r16,r16,-4
  811c70:	8c7fff04 	addi	r17,r17,-4
  811c74:	bd7ff91e 	bne	r23,r21,811c5c <__alt_data_end+0xff811c5c>
  811c78:	00800034 	movhi	r2,0
  811c7c:	10800004 	addi	r2,r2,0
  811c80:	10000926 	beq	r2,zero,811ca8 <__call_exitprocs+0xc4>
  811c84:	a0800117 	ldw	r2,4(r20)
  811c88:	1000301e 	bne	r2,zero,811d4c <__call_exitprocs+0x168>
  811c8c:	a0800017 	ldw	r2,0(r20)
  811c90:	10003226 	beq	r2,zero,811d5c <__call_exitprocs+0x178>
  811c94:	a009883a 	mov	r4,r20
  811c98:	98800015 	stw	r2,0(r19)
  811c9c:	00000000 	call	0 <__alt_mem_sdram-0x800000>
  811ca0:	9d000017 	ldw	r20,0(r19)
  811ca4:	a03fe41e 	bne	r20,zero,811c38 <__alt_data_end+0xff811c38>
  811ca8:	dfc00a17 	ldw	ra,40(sp)
  811cac:	df000917 	ldw	fp,36(sp)
  811cb0:	ddc00817 	ldw	r23,32(sp)
  811cb4:	dd800717 	ldw	r22,28(sp)
  811cb8:	dd400617 	ldw	r21,24(sp)
  811cbc:	dd000517 	ldw	r20,20(sp)
  811cc0:	dcc00417 	ldw	r19,16(sp)
  811cc4:	dc800317 	ldw	r18,12(sp)
  811cc8:	dc400217 	ldw	r17,8(sp)
  811ccc:	dc000117 	ldw	r16,4(sp)
  811cd0:	dec00b04 	addi	sp,sp,44
  811cd4:	f800283a 	ret
  811cd8:	a0800117 	ldw	r2,4(r20)
  811cdc:	80c00017 	ldw	r3,0(r16)
  811ce0:	10bfffc4 	addi	r2,r2,-1
  811ce4:	15c01426 	beq	r2,r23,811d38 <__call_exitprocs+0x154>
  811ce8:	80000015 	stw	zero,0(r16)
  811cec:	183fde26 	beq	r3,zero,811c68 <__alt_data_end+0xff811c68>
  811cf0:	95c8983a 	sll	r4,r18,r23
  811cf4:	a0806217 	ldw	r2,392(r20)
  811cf8:	a5800117 	ldw	r22,4(r20)
  811cfc:	2084703a 	and	r2,r4,r2
  811d00:	10000b26 	beq	r2,zero,811d30 <__call_exitprocs+0x14c>
  811d04:	a0806317 	ldw	r2,396(r20)
  811d08:	2088703a 	and	r4,r4,r2
  811d0c:	20000c1e 	bne	r4,zero,811d40 <__call_exitprocs+0x15c>
  811d10:	89400017 	ldw	r5,0(r17)
  811d14:	d9000017 	ldw	r4,0(sp)
  811d18:	183ee83a 	callr	r3
  811d1c:	a0800117 	ldw	r2,4(r20)
  811d20:	15bfbf1e 	bne	r2,r22,811c20 <__alt_data_end+0xff811c20>
  811d24:	98800017 	ldw	r2,0(r19)
  811d28:	153fcf26 	beq	r2,r20,811c68 <__alt_data_end+0xff811c68>
  811d2c:	003fbc06 	br	811c20 <__alt_data_end+0xff811c20>
  811d30:	183ee83a 	callr	r3
  811d34:	003ff906 	br	811d1c <__alt_data_end+0xff811d1c>
  811d38:	a5c00115 	stw	r23,4(r20)
  811d3c:	003feb06 	br	811cec <__alt_data_end+0xff811cec>
  811d40:	89000017 	ldw	r4,0(r17)
  811d44:	183ee83a 	callr	r3
  811d48:	003ff406 	br	811d1c <__alt_data_end+0xff811d1c>
  811d4c:	a0800017 	ldw	r2,0(r20)
  811d50:	a027883a 	mov	r19,r20
  811d54:	1029883a 	mov	r20,r2
  811d58:	003fb606 	br	811c34 <__alt_data_end+0xff811c34>
  811d5c:	0005883a 	mov	r2,zero
  811d60:	003ffb06 	br	811d50 <__alt_data_end+0xff811d50>

00811d64 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
  811d64:	defffd04 	addi	sp,sp,-12
  811d68:	df000215 	stw	fp,8(sp)
  811d6c:	df000204 	addi	fp,sp,8
  811d70:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
  811d74:	0001883a 	nop
  811d78:	e0bfff17 	ldw	r2,-4(fp)
  811d7c:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
  811d80:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
  811d84:	10000226 	beq	r2,zero,811d90 <_exit+0x2c>
    ALT_SIM_FAIL();
  811d88:	002af070 	cmpltui	zero,zero,43969
  811d8c:	00000106 	br	811d94 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
  811d90:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
  811d94:	003fff06 	br	811d94 <__alt_data_end+0xff811d94>
