
task6_lut.elf:     file format elf32-littlenios2
task6_lut.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00800244

Program Header:
    LOAD off    0x00001000 vaddr 0x00800000 paddr 0x00800000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00800020 paddr 0x00800020 align 2**12
         filesz 0x000125e0 memsz 0x000125e0 flags r-x
    LOAD off    0x00013600 vaddr 0x00812600 paddr 0x008140ec align 2**12
         filesz 0x00001aec memsz 0x00001aec flags rw-
    LOAD off    0x00015bd8 vaddr 0x00815bd8 paddr 0x00815bd8 align 2**12
         filesz 0x00000000 memsz 0x00001508 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00800000  00800000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000224  00800020  00800020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         00011e9c  00800244  00800244  00001244  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000520  008120e0  008120e0  000130e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001aec  00812600  008140ec  00013600  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00001508  00815bd8  00815bd8  00015bd8  2**2
                  ALLOC, SMALL_DATA
  6 .sdram        00000000  008170e0  008170e0  000150ec  2**0
                  CONTENTS
  7 .comment      00000023  00000000  00000000  000150ec  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00001098  00000000  00000000  00015110  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   00025472  00000000  00000000  000161a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 00009fb6  00000000  00000000  0003b61a  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0000cbbd  00000000  00000000  000455d0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  00002508  00000000  00000000  00052190  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00003f17  00000000  00000000  00054698  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    0001a0fc  00000000  00000000  000585af  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000030  00000000  00000000  000726ac  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00001af8  00000000  00000000  000726e0  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  00077712  2**0
                  CONTENTS, READONLY
 18 .cpu          00000003  00000000  00000000  00077715  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  00077718  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  00077719  2**0
                  CONTENTS, READONLY
 21 .sysid_hash   00000004  00000000  00000000  0007771a  2**0
                  CONTENTS, READONLY
 22 .sysid_base   00000004  00000000  00000000  0007771e  2**0
                  CONTENTS, READONLY
 23 .sysid_time   00000004  00000000  00000000  00077722  2**0
                  CONTENTS, READONLY
 24 .stderr_dev   00000009  00000000  00000000  00077726  2**0
                  CONTENTS, READONLY
 25 .stdin_dev    00000009  00000000  00000000  0007772f  2**0
                  CONTENTS, READONLY
 26 .stdout_dev   00000009  00000000  00000000  00077738  2**0
                  CONTENTS, READONLY
 27 .sopc_system_name 00000012  00000000  00000000  00077741  2**0
                  CONTENTS, READONLY
 28 .quartus_project_dir 00000045  00000000  00000000  00077753  2**0
                  CONTENTS, READONLY
 29 .jdi          000058e3  00000000  00000000  00077798  2**0
                  CONTENTS, READONLY
 30 .sopcinfo     000423b6  00000000  00000000  0007d07b  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00800000 l    d  .entry	00000000 .entry
00800020 l    d  .exceptions	00000000 .exceptions
00800244 l    d  .text	00000000 .text
008120e0 l    d  .rodata	00000000 .rodata
00812600 l    d  .rwdata	00000000 .rwdata
00815bd8 l    d  .bss	00000000 .bss
008170e0 l    d  .sdram	00000000 .sdram
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../task6_lut_bsp//obj/HAL/src/crt0.o
0080028c l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 hello_world.c
00000000 l    df *ABS*	00000000 s_cos.c
00000000 l    df *ABS*	00000000 e_rem_pio2.c
008121b0 l     O .rodata	00000108 two_over_pi
00812130 l     O .rodata	00000080 npio2_hw
00000000 l    df *ABS*	00000000 k_cos.c
00000000 l    df *ABS*	00000000 k_rem_pio2.c
008122f8 l     O .rodata	00000010 init_jk
008122b8 l     O .rodata	00000040 PIo2
00000000 l    df *ABS*	00000000 k_sin.c
00000000 l    df *ABS*	00000000 s_fabs.c
00000000 l    df *ABS*	00000000 s_floor.c
00000000 l    df *ABS*	00000000 s_scalbn.c
00000000 l    df *ABS*	00000000 s_copysign.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 lesf2.c
00000000 l    df *ABS*	00000000 fixsfsi.c
00000000 l    df *ABS*	00000000 floatsisf.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 extendsfdf2.c
00000000 l    df *ABS*	00000000 truncdfsf2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
0081244e l     O .rodata	00000010 zeroes.4404
008070e0 l     F .text	000000bc __sbprintf
0081245e l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
008072f0 l     F .text	00000200 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
00808e20 l     F .text	00000008 __fp_unlock
00808e34 l     F .text	0000019c __sinit.part.1
00808fd0 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
00812600 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
00812a44 l     O .rwdata	00000020 lc_ctype_charset
00812a24 l     O .rwdata	00000020 lc_message_charset
00812a64 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
00812490 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
0080c3cc l     F .text	000000fc __sprint_r.part.0
008125c4 l     O .rodata	00000010 blanks.4348
008125b4 l     O .rodata	00000010 zeroes.4349
0080d958 l     F .text	000000bc __sbprintf
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 alt_close.c
0080f87c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0080f988 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0080f9b4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
0080faa0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0080fb80 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0080fc6c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0080fe40 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
008140dc l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_times.c
0081008c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_write.c
00810140 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
00810274 l     F .text	00000034 alt_dev_reg
0081304c l     O .rwdata	00001060 jtag_uart
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
00810568 l     F .text	0000020c altera_avalon_jtag_uart_irq
00810774 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
00810dac l     F .text	00000078 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
00811014 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
00811488 l     F .text	000000c4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
008115c8 l     F .text	0000003c alt_get_errno
00811604 l     F .text	000000c4 alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
00815c0c g     O .bss	00000004 alt_instruction_exception_handler
0080ba10 g     F .text	00000074 _mprec_log10
0080bafc g     F .text	0000008c __any_on
0080def4 g     F .text	00000054 _isatty_r
0081249c g     O .rodata	00000028 __mprec_tinytens
0080fd7c g     F .text	0000007c alt_main
00804d60 g     F .text	000000c0 _puts_r
00816fe0 g     O .bss	00000100 alt_irq
00802690 g     F .text	00000014 fabs
0080df48 g     F .text	00000060 _lseek_r
008140ec g       *ABS*	00000000 __flash_rwdata_start
00803704 g     F .text	00000088 .hidden __eqdf2
008170e0 g       *ABS*	00000000 __alt_heap_start
00804d24 g     F .text	0000003c printf
0080e160 g     F .text	0000009c _wcrtomb_r
0080c28c g     F .text	0000005c __sseek
00809170 g     F .text	00000010 __sinit
0080e008 g     F .text	00000140 __swbuf_r
00809c38 g     F .text	0000007c _setlocale_r
00808fd8 g     F .text	00000068 __sfmoreglue
0080fe1c g     F .text	00000024 __malloc_unlock
00800344 g     F .text	000000fc modulo
0080a908 g     F .text	0000015c memmove
00809158 g     F .text	00000018 _cleanup
0080ab8c g     F .text	000000a8 _Balloc
00802cc4 g     F .text	00000070 .hidden __fixsfsi
0080378c g     F .text	000000dc .hidden __gtdf2
008119c0 g     F .text	00000024 altera_nios2_gen2_irq_init
00800000 g     F .entry	0000001c __reset
008100c8 g     F .text	00000078 times
00800020 g       *ABS*	00000000 __flash_exceptions_start
0080de98 g     F .text	0000005c _fstat_r
00815bf0 g     O .bss	00000004 errno
008026a4 g     F .text	000001ec floor
0080c208 g     F .text	00000008 __seofread
00815bf8 g     O .bss	00000004 alt_argv
0081c0ac g       *ABS*	00000000 _gp
00812ecc g     O .rwdata	00000180 alt_fd_list
00800a24 g     F .text	0000076c __ieee754_rem_pio2
008119e4 g     F .text	00000090 alt_find_dev
0080a7c0 g     F .text	00000148 memcpy
00808e28 g     F .text	0000000c _cleanup_r
008048fc g     F .text	000000dc .hidden __floatsidf
0081154c g     F .text	0000007c alt_io_redirect
0080f6e0 g     F .text	000000f4 .hidden __ltdf2
008120e0 g       *ABS*	00000000 __DTOR_END__
00804e20 g     F .text	00000014 puts
00811cb0 g     F .text	0000009c alt_exception_cause_generated_bad_addr
0080c0ec g     F .text	00000074 __fpclassifyd
0080b96c g     F .text	000000a4 __ratio
0080d93c g     F .text	0000001c __vfiprintf_internal
0081096c g     F .text	0000021c altera_avalon_jtag_uart_read
00804cf4 g     F .text	00000030 _printf_r
00802b40 g     F .text	00000064 .hidden __udivsi3
0080fadc g     F .text	000000a4 isatty
008124ec g     O .rodata	000000c8 __mprec_tens
00809cb4 g     F .text	0000000c __locale_charset
00801190 g     F .text	000004a4 __kernel_cos
00802bfc g     F .text	000000c8 .hidden __lesf2
00811c20 g     F .text	00000090 alt_icache_flush
00815bec g     O .bss	00000004 __malloc_top_pad
008140b4 g     O .rwdata	00000004 __mb_cur_max
00809ce4 g     F .text	0000000c _localeconv_r
0080af98 g     F .text	0000003c __i2b
008095f4 g     F .text	000004bc __sfvwrite_r
0080c160 g     F .text	00000054 _sbrk_r
00815c38 g     O .bss	000013a8 cosLookupTable
0080dfa8 g     F .text	00000060 _read_r
008140d4 g     O .rwdata	00000004 alt_max_fd
0080db8c g     F .text	000000f0 _fclose_r
00808df0 g     F .text	00000030 fflush
00815be8 g     O .bss	00000004 __malloc_max_sbrked_mem
008023c4 g     F .text	000002cc __kernel_sin
008049d8 g     F .text	00000110 .hidden __extendsfdf2
00802e58 g     F .text	000008ac .hidden __adddf3
0080b714 g     F .text	0000010c __b2d
0080e8c0 g     F .text	00000538 .hidden __umoddi3
0080fca8 g     F .text	000000d4 lseek
008140ac g     O .rwdata	00000004 _global_impure_ptr
0080bb88 g     F .text	00000564 _realloc_r
008170e0 g       *ABS*	00000000 __bss_end
00811398 g     F .text	000000f0 alt_iic_isr_register
008118b8 g     F .text	00000108 alt_tick
0080e348 g     F .text	00000578 .hidden __udivdi3
0080ddf4 g     F .text	00000024 _fputwc_r
008124c4 g     O .rodata	00000028 __mprec_bigtens
0080ad7c g     F .text	00000104 __s2b
0080f7d4 g     F .text	000000a8 .hidden __floatunsidf
0080b454 g     F .text	00000060 __mcmp
00800290 g     F .text	000000b4 generateCosLookupTable
00809190 g     F .text	00000018 __fp_lock_all
0081134c g     F .text	0000004c alt_ic_irq_enabled
0081181c g     F .text	0000009c alt_alarm_stop
00815c00 g     O .bss	00000004 alt_irq_active
008000fc g     F .exceptions	000000d4 alt_irq_handler
00812ea4 g     O .rwdata	00000028 alt_dev_null
00801634 g     F .text	00000d90 __kernel_rem_pio2
00810fcc g     F .text	00000048 alt_dcache_flush_all
0080ae80 g     F .text	00000068 __hi0bits
0080487c g     F .text	00000080 .hidden __fixdfsi
008140ec g       *ABS*	00000000 __ram_rwdata_end
008140cc g     O .rwdata	00000008 alt_dev_list
0081017c g     F .text	000000f8 write
00812600 g       *ABS*	00000000 __ram_rodata_end
0080f9f0 g     F .text	000000b0 fstat
0080f6e0 g     F .text	000000f4 .hidden __ledf2
0080b1cc g     F .text	00000140 __pow5mult
0080c4e0 g     F .text	0000145c ___vfiprintf_internal_r
00815be0 g     O .bss	00000004 __nlocale_changed
00802ba4 g     F .text	00000058 .hidden __umodsi3
008170e0 g       *ABS*	00000000 end
008104a8 g     F .text	000000c0 altera_avalon_jtag_uart_init
008001d0 g     F .exceptions	00000074 alt_instruction_exception_entry
008120e0 g       *ABS*	00000000 __CTOR_LIST__
01000000 g       *ABS*	00000000 __alt_stack_pointer
00810e24 g     F .text	0000007c alt_avalon_timer_sc_init
00804c90 g     F .text	00000064 .hidden __clzsi2
00810b88 g     F .text	00000224 altera_avalon_jtag_uart_write
00800938 g     F .text	000000ec cos
00809180 g     F .text	00000004 __sfp_lock_acquire
0080a6dc g     F .text	000000e4 memchr
00804ecc g     F .text	000021f8 ___vfprintf_internal_r
008092e4 g     F .text	00000310 _free_r
00809cc0 g     F .text	00000010 __locale_mb_cur_max
00811f2c g     F .text	00000180 __call_exitprocs
00815bdc g     O .bss	00000004 __mlocale_changed
008140b8 g     O .rwdata	00000004 __malloc_sbrk_base
00800244 g     F .text	0000004c _start
00815c04 g     O .bss	00000004 _alt_tick_rate
0080b30c g     F .text	00000148 __lshift
00815c08 g     O .bss	00000004 _alt_nticks
0080fe7c g     F .text	000000fc read
008102e0 g     F .text	00000064 alt_sys_init
00802d34 g     F .text	00000124 .hidden __floatsisf
00811e14 g     F .text	00000118 __register_exitproc
0080afd4 g     F .text	000001f8 __multiply
00810814 g     F .text	00000068 altera_avalon_jtag_uart_close
00812600 g       *ABS*	00000000 __ram_rwdata_start
008120e0 g       *ABS*	00000000 __ram_rodata_start
00815c10 g     O .bss	00000028 __malloc_current_mallinfo
0080b820 g     F .text	0000014c __d2b
00810344 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
00811b7c g     F .text	000000a4 alt_get_fd
0080da74 g     F .text	00000054 _close_r
008004d8 g     F .text	000000a0 generateVector
00811d98 g     F .text	0000007c memcmp
00810404 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
008170e0 g       *ABS*	00000000 __alt_stack_base
00810454 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
0080719c g     F .text	00000154 __swsetup_r
0080edf8 g     F .text	000008e8 .hidden __divdf3
00809040 g     F .text	00000118 __sfp
0080ba84 g     F .text	00000078 __copybits
00812a9c g     O .rwdata	00000408 __malloc_av_
0080918c g     F .text	00000004 __sinit_lock_release
00803868 g     F .text	00000718 .hidden __muldf3
0080c1b4 g     F .text	00000054 __sread
00811a74 g     F .text	00000108 alt_find_file
00811050 g     F .text	000000a4 alt_dev_llist_insert
0080fdf8 g     F .text	00000024 __malloc_lock
0080ffdc g     F .text	000000b0 sbrk
00808d94 g     F .text	0000005c _fflush_r
0080dac8 g     F .text	000000c4 _calloc_r
00815bd8 g       *ABS*	00000000 __bss_start
0080aa64 g     F .text	00000128 memset
0080076c g     F .text	000001cc main
00815bfc g     O .bss	00000004 alt_envp
00815be4 g     O .bss	00000004 __malloc_max_total_mem
008103a4 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
0080e148 g     F .text	00000018 __swbuf
00802bfc g     F .text	000000c8 .hidden __ltsf2
00800440 g     F .text	00000098 getCosFromTable
0080c2e8 g     F .text	00000008 __sclose
01000000 g       *ABS*	00000000 __alt_heap_limit
0080dc7c g     F .text	00000014 fclose
00804ae8 g     F .text	000001a8 .hidden __truncdfsf2
008074f0 g     F .text	00001688 _dtoa_r
00809ed0 g     F .text	0000080c _malloc_r
0080e2bc g     F .text	00000030 __ascii_wctomb
008140d8 g     O .rwdata	00000004 alt_errno
00809ab0 g     F .text	000000c4 _fwalk
00802a48 g     F .text	00000084 .hidden __divsi3
008091c0 g     F .text	00000124 _malloc_trim_r
008120e0 g       *ABS*	00000000 __CTOR_END__
0080c2f0 g     F .text	000000dc strcmp
008120e0 g       *ABS*	00000000 __flash_rodata_start
008120e0 g       *ABS*	00000000 __DTOR_LIST__
00802a2c g     F .text	0000001c copysign
00803704 g     F .text	00000088 .hidden __nedf2
008102a8 g     F .text	00000038 alt_irq_init
0080ff78 g     F .text	00000064 alt_release_fd
00812308 g     O .rodata	00000100 .hidden __clz_tab
00815bd8 g     O .bss	00000004 _PathLocale
00811d4c g     F .text	00000014 atexit
00800578 g     F .text	000000bc sumVector
0080da14 g     F .text	00000060 _write_r
00809cf0 g     F .text	00000018 setlocale
008140b0 g     O .rwdata	00000004 _impure_ptr
00815bf4 g     O .bss	00000004 alt_argc
00808b78 g     F .text	0000021c __sflush_r
00802890 g     F .text	0000019c scalbn
00811154 g     F .text	00000060 _do_dtors
00809cdc g     F .text	00000008 __locale_cjk_lang
00800020 g       .exceptions	00000000 alt_irq_entry
0080b6b0 g     F .text	00000064 __ulp
008091a8 g     F .text	00000018 __fp_unlock_all
008140c4 g     O .rwdata	00000008 alt_fs_list
00800634 g     F .text	00000138 func
00800020 g       *ABS*	00000000 __ram_exceptions_start
00809d08 g     F .text	0000000c localeconv
008111e8 g     F .text	00000050 alt_ic_isr_register
008140ec g       *ABS*	00000000 _edata
008170e0 g       *ABS*	00000000 _end
0080dc90 g     F .text	00000164 __fputwc
00800244 g       *ABS*	00000000 __ram_exceptions_end
0081087c g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
008112c0 g     F .text	0000008c alt_ic_irq_disable
0080c210 g     F .text	0000007c __swrite
008140bc g     O .rwdata	00000004 __malloc_trim_threshold
00809cd0 g     F .text	0000000c __locale_msgcharset
00811d60 g     F .text	00000038 exit
00809b74 g     F .text	000000c4 _fwalk_reent
0080b4b4 g     F .text	000001fc __mdiff
00802acc g     F .text	00000074 .hidden __modsi3
01000000 g       *ABS*	00000000 __alt_data_end
00800020 g     F .exceptions	00000000 alt_exception
00809184 g     F .text	00000004 __sfp_lock_release
00800000 g       *ABS*	00000000 __alt_mem_sdram
008120ac g     F .text	00000034 _exit
00810ea0 g     F .text	0000012c alt_alarm_start
00809d14 g     F .text	000001bc __smakebuf_r
00804e34 g     F .text	00000098 strlen
008116c8 g     F .text	00000154 open
0080378c g     F .text	000000dc .hidden __gedf2
008140c0 g     O .rwdata	00000004 __wctomb
0080c4c8 g     F .text	00000018 __sprint_r
008111b4 g     F .text	00000034 alt_icache_flush_all
008140e0 g     O .rwdata	00000004 alt_priority_mask
00811238 g     F .text	00000088 alt_ic_irq_enable
008070c4 g     F .text	0000001c __vfprintf_internal
0080e2ec g     F .text	0000005c _wctomb_r
00803f80 g     F .text	000008fc .hidden __subdf3
0080aee8 g     F .text	000000b0 __lo0bits
008140e4 g     O .rwdata	00000008 alt_alarm_list
008110f4 g     F .text	00000060 _do_ctors
0080e1fc g     F .text	000000c0 wcrtomb
0080f8b8 g     F .text	000000d0 close
0080fbe8 g     F .text	00000084 alt_load
0080de18 g     F .text	00000080 fputwc
00809188 g     F .text	00000004 __sinit_lock_acquire
0080ac5c g     F .text	00000120 __multadd
0080ac34 g     F .text	00000028 _Bfree



Disassembly of section .entry:

00800000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
  800000:	00820014 	movui	r2,2048
#endif

0:
    initi r2
  800004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
  800008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
  80000c:	00bffd16 	blt	zero,r2,800004 <__alt_data_end+0xff800004>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
  800010:	00402034 	movhi	at,128
    ori r1, r1, %lo(_start)
  800014:	08409114 	ori	at,at,580
    jmp r1
  800018:	0800683a 	jmp	at
  80001c:	00000000 	call	0 <__alt_mem_sdram-0x800000>

Disassembly of section .exceptions:

00800020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
  800020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
  800024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
  800028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
  80002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
  800030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
  800034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
  800038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
  80003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
  800040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
  800044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
  800048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
  80004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
  800050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
  800054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
  800058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
  80005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
  800060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
  800064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
  800068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
  80006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  800070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
  800074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
  800078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
  80007c:	10000326 	beq	r2,zero,80008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
  800080:	20000226 	beq	r4,zero,80008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
  800084:	08000fc0 	call	8000fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
  800088:	00000706 	br	8000a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
  80008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
  800090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
  800094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
  800098:	08001d00 	call	8001d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
  80009c:	1000021e 	bne	r2,zero,8000a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
  8000a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  8000a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
  8000a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
  8000ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
  8000b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
  8000b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
  8000b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
  8000bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
  8000c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
  8000c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
  8000c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
  8000cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
  8000d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
  8000d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
  8000d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
  8000dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
  8000e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
  8000e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
  8000e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
  8000ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
  8000f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
  8000f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
  8000f8:	ef80083a 	eret

008000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
  8000fc:	defff904 	addi	sp,sp,-28
  800100:	dfc00615 	stw	ra,24(sp)
  800104:	df000515 	stw	fp,20(sp)
  800108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
  80010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
  800110:	0005313a 	rdctl	r2,ipending
  800114:	e0bffe15 	stw	r2,-8(fp)

  return active;
  800118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
  80011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
  800120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
  800124:	00800044 	movi	r2,1
  800128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
  80012c:	e0fffb17 	ldw	r3,-20(fp)
  800130:	e0bffc17 	ldw	r2,-16(fp)
  800134:	1884703a 	and	r2,r3,r2
  800138:	10001426 	beq	r2,zero,80018c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
  80013c:	00802074 	movhi	r2,129
  800140:	109bf804 	addi	r2,r2,28640
  800144:	e0fffd17 	ldw	r3,-12(fp)
  800148:	180690fa 	slli	r3,r3,3
  80014c:	10c5883a 	add	r2,r2,r3
  800150:	10c00017 	ldw	r3,0(r2)
  800154:	00802074 	movhi	r2,129
  800158:	109bf804 	addi	r2,r2,28640
  80015c:	e13ffd17 	ldw	r4,-12(fp)
  800160:	200890fa 	slli	r4,r4,3
  800164:	1105883a 	add	r2,r2,r4
  800168:	10800104 	addi	r2,r2,4
  80016c:	10800017 	ldw	r2,0(r2)
  800170:	1009883a 	mov	r4,r2
  800174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
  800178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
  80017c:	0005313a 	rdctl	r2,ipending
  800180:	e0bfff15 	stw	r2,-4(fp)

  return active;
  800184:	e0bfff17 	ldw	r2,-4(fp)
  800188:	00000706 	br	8001a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
  80018c:	e0bffc17 	ldw	r2,-16(fp)
  800190:	1085883a 	add	r2,r2,r2
  800194:	e0bffc15 	stw	r2,-16(fp)
      i++;
  800198:	e0bffd17 	ldw	r2,-12(fp)
  80019c:	10800044 	addi	r2,r2,1
  8001a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
  8001a4:	003fe106 	br	80012c <__alt_data_end+0xff80012c>

    active = alt_irq_pending ();
  8001a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
  8001ac:	e0bffb17 	ldw	r2,-20(fp)
  8001b0:	103fdb1e 	bne	r2,zero,800120 <__alt_data_end+0xff800120>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
  8001b4:	0001883a 	nop
}
  8001b8:	0001883a 	nop
  8001bc:	e037883a 	mov	sp,fp
  8001c0:	dfc00117 	ldw	ra,4(sp)
  8001c4:	df000017 	ldw	fp,0(sp)
  8001c8:	dec00204 	addi	sp,sp,8
  8001cc:	f800283a 	ret

008001d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
  8001d0:	defffb04 	addi	sp,sp,-20
  8001d4:	dfc00415 	stw	ra,16(sp)
  8001d8:	df000315 	stw	fp,12(sp)
  8001dc:	df000304 	addi	fp,sp,12
  8001e0:	e13fff15 	stw	r4,-4(fp)
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
  8001e4:	000531fa 	rdctl	r2,exception
  8001e8:	e0bffd15 	stw	r2,-12(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
  8001ec:	e0bffd17 	ldw	r2,-12(fp)
  8001f0:	10801f0c 	andi	r2,r2,124
  8001f4:	1004d0ba 	srli	r2,r2,2
  8001f8:	e0bffd15 	stw	r2,-12(fp)
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
  8001fc:	0005333a 	rdctl	r2,badaddr
  800200:	e0bffe15 	stw	r2,-8(fp)
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
  800204:	d0a6d817 	ldw	r2,-25760(gp)
  800208:	10000726 	beq	r2,zero,800228 <alt_instruction_exception_entry+0x58>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
  80020c:	d0a6d817 	ldw	r2,-25760(gp)
  800210:	e0fffd17 	ldw	r3,-12(fp)
  800214:	e1bffe17 	ldw	r6,-8(fp)
  800218:	e17fff17 	ldw	r5,-4(fp)
  80021c:	1809883a 	mov	r4,r3
  800220:	103ee83a 	callr	r2
  800224:	00000206 	br	800230 <alt_instruction_exception_entry+0x60>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
  800228:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
  80022c:	0005883a 	mov	r2,zero
}
  800230:	e037883a 	mov	sp,fp
  800234:	dfc00117 	ldw	ra,4(sp)
  800238:	df000017 	ldw	fp,0(sp)
  80023c:	dec00204 	addi	sp,sp,8
  800240:	f800283a 	ret

Disassembly of section .text:

00800244 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
  800244:	00880014 	movui	r2,8192
#endif

0:
    initd 0(r2)
  800248:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
  80024c:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
  800250:	00bffd16 	blt	zero,r2,800248 <__alt_data_end+0xff800248>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
  800254:	06c04034 	movhi	sp,256
    ori sp, sp, %lo(__alt_stack_pointer)
  800258:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
  80025c:	06802074 	movhi	gp,129
    ori gp, gp, %lo(_gp)
  800260:	d6b02b14 	ori	gp,gp,49324
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
  800264:	00802074 	movhi	r2,129
    ori r2, r2, %lo(__bss_start)
  800268:	1096f614 	ori	r2,r2,23512

    movhi r3, %hi(__bss_end)
  80026c:	00c02074 	movhi	r3,129
    ori r3, r3, %lo(__bss_end)
  800270:	18dc3814 	ori	r3,r3,28896

    beq r2, r3, 1f
  800274:	10c00326 	beq	r2,r3,800284 <_start+0x40>

0:
    stw zero, (r2)
  800278:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
  80027c:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
  800280:	10fffd36 	bltu	r2,r3,800278 <__alt_data_end+0xff800278>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
  800284:	080fbe80 	call	80fbe8 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
  800288:	080fd7c0 	call	80fd7c <alt_main>

0080028c <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
  80028c:	003fff06 	br	80028c <__alt_data_end+0xff80028c>

00800290 <generateCosLookupTable>:
#define STEP 0.01
#define TABLE_SIZE (int)(TWO_PI / STEP + 1)

double cosLookupTable[TABLE_SIZE];

void generateCosLookupTable() {
  800290:	defffd04 	addi	sp,sp,-12
  800294:	dfc00215 	stw	ra,8(sp)
  800298:	df000115 	stw	fp,4(sp)
  80029c:	df000104 	addi	fp,sp,4
    for (int i = 0; i < TABLE_SIZE; ++i) {
  8002a0:	e03fff15 	stw	zero,-4(fp)
  8002a4:	00001e06 	br	800320 <generateCosLookupTable+0x90>
    	cosLookupTable[i] = cos(i * STEP);
  8002a8:	e13fff17 	ldw	r4,-4(fp)
  8002ac:	08048fc0 	call	8048fc <__floatsidf>
  8002b0:	1011883a 	mov	r8,r2
  8002b4:	1813883a 	mov	r9,r3
  8002b8:	0191ebb4 	movhi	r6,18350
  8002bc:	31851ec4 	addi	r6,r6,5243
  8002c0:	01cfe134 	movhi	r7,16260
  8002c4:	39deb844 	addi	r7,r7,31457
  8002c8:	4009883a 	mov	r4,r8
  8002cc:	480b883a 	mov	r5,r9
  8002d0:	08038680 	call	803868 <__muldf3>
  8002d4:	1009883a 	mov	r4,r2
  8002d8:	180b883a 	mov	r5,r3
  8002dc:	2005883a 	mov	r2,r4
  8002e0:	2807883a 	mov	r3,r5
  8002e4:	1009883a 	mov	r4,r2
  8002e8:	180b883a 	mov	r5,r3
  8002ec:	08009380 	call	800938 <cos>
  8002f0:	1009883a 	mov	r4,r2
  8002f4:	180b883a 	mov	r5,r3
  8002f8:	00802074 	movhi	r2,129
  8002fc:	10970e04 	addi	r2,r2,23608
  800300:	e0ffff17 	ldw	r3,-4(fp)
  800304:	180690fa 	slli	r3,r3,3
  800308:	10c5883a 	add	r2,r2,r3
  80030c:	11000015 	stw	r4,0(r2)
  800310:	11400115 	stw	r5,4(r2)
#define TABLE_SIZE (int)(TWO_PI / STEP + 1)

double cosLookupTable[TABLE_SIZE];

void generateCosLookupTable() {
    for (int i = 0; i < TABLE_SIZE; ++i) {
  800314:	e0bfff17 	ldw	r2,-4(fp)
  800318:	10800044 	addi	r2,r2,1
  80031c:	e0bfff15 	stw	r2,-4(fp)
  800320:	e0bfff17 	ldw	r2,-4(fp)
  800324:	10809d50 	cmplti	r2,r2,629
  800328:	103fdf1e 	bne	r2,zero,8002a8 <__alt_data_end+0xff8002a8>
    	cosLookupTable[i] = cos(i * STEP);
    }
}
  80032c:	0001883a 	nop
  800330:	e037883a 	mov	sp,fp
  800334:	dfc00117 	ldw	ra,4(sp)
  800338:	df000017 	ldw	fp,0(sp)
  80033c:	dec00204 	addi	sp,sp,8
  800340:	f800283a 	ret

00800344 <modulo>:

int modulo(int dividend, int divisor) {
  800344:	defffa04 	addi	sp,sp,-24
  800348:	dfc00515 	stw	ra,20(sp)
  80034c:	df000415 	stw	fp,16(sp)
  800350:	dc000315 	stw	r16,12(sp)
  800354:	df000404 	addi	fp,sp,16
  800358:	e13ffd15 	stw	r4,-12(fp)
  80035c:	e17ffe15 	stw	r5,-8(fp)
    // Handling divisor equals to zero case
    if (divisor == 0) {
  800360:	e0bffe17 	ldw	r2,-8(fp)
  800364:	1000051e 	bne	r2,zero,80037c <modulo+0x38>
        printf("Error: Division by zero\n");
  800368:	01002074 	movhi	r4,129
  80036c:	21083804 	addi	r4,r4,8416
  800370:	0804e200 	call	804e20 <puts>
        return -1; // Return an error code
  800374:	00bfffc4 	movi	r2,-1
  800378:	00002b06 	br	800428 <modulo+0xe4>
    }

    // Ensure divisor is positive
    int positiveDivisor = divisor < 0 ? ALT_CI_FP_SUB_0(0, divisor) : divisor;
  80037c:	e0bffe17 	ldw	r2,-8(fp)
  800380:	1000080e 	bge	r2,zero,8003a4 <modulo+0x60>
  800384:	e13ffe17 	ldw	r4,-8(fp)
  800388:	0802d340 	call	802d34 <__floatsisf>
  80038c:	1007883a 	mov	r3,r2
  800390:	0005883a 	mov	r2,zero
  800394:	10c5c0b2 	custom	2,r2,r2,r3
  800398:	1009883a 	mov	r4,r2
  80039c:	0802cc40 	call	802cc4 <__fixsfsi>
  8003a0:	00000506 	br	8003b8 <modulo+0x74>
  8003a4:	e13ffe17 	ldw	r4,-8(fp)
  8003a8:	0802d340 	call	802d34 <__floatsisf>
  8003ac:	1007883a 	mov	r3,r2
  8003b0:	1809883a 	mov	r4,r3
  8003b4:	0802cc40 	call	802cc4 <__fixsfsi>
  8003b8:	e0bffc15 	stw	r2,-16(fp)

    // Using subtraction to find the modulo
    while (dividend >= positiveDivisor) {
  8003bc:	00000a06 	br	8003e8 <modulo+0xa4>
        dividend = ALT_CI_FP_SUB_0(dividend, positiveDivisor);
  8003c0:	e13ffd17 	ldw	r4,-12(fp)
  8003c4:	0802d340 	call	802d34 <__floatsisf>
  8003c8:	1021883a 	mov	r16,r2
  8003cc:	e13ffc17 	ldw	r4,-16(fp)
  8003d0:	0802d340 	call	802d34 <__floatsisf>
  8003d4:	1007883a 	mov	r3,r2
  8003d8:	80c5c0b2 	custom	2,r2,r16,r3
  8003dc:	1009883a 	mov	r4,r2
  8003e0:	0802cc40 	call	802cc4 <__fixsfsi>
  8003e4:	e0bffd15 	stw	r2,-12(fp)

    // Ensure divisor is positive
    int positiveDivisor = divisor < 0 ? ALT_CI_FP_SUB_0(0, divisor) : divisor;

    // Using subtraction to find the modulo
    while (dividend >= positiveDivisor) {
  8003e8:	e0fffd17 	ldw	r3,-12(fp)
  8003ec:	e0bffc17 	ldw	r2,-16(fp)
  8003f0:	18bff30e 	bge	r3,r2,8003c0 <__alt_data_end+0xff8003c0>
        dividend = ALT_CI_FP_SUB_0(dividend, positiveDivisor);
    }

    // If original dividend was negative, adjust the result
    if (dividend < 0) {
  8003f4:	e0bffd17 	ldw	r2,-12(fp)
  8003f8:	10000a0e 	bge	r2,zero,800424 <modulo+0xe0>
        dividend = ALT_CI_FP_ADD_0(dividend, positiveDivisor);
  8003fc:	e13ffd17 	ldw	r4,-12(fp)
  800400:	0802d340 	call	802d34 <__floatsisf>
  800404:	1021883a 	mov	r16,r2
  800408:	e13ffc17 	ldw	r4,-16(fp)
  80040c:	0802d340 	call	802d34 <__floatsisf>
  800410:	1007883a 	mov	r3,r2
  800414:	80c5c072 	custom	1,r2,r16,r3
  800418:	1009883a 	mov	r4,r2
  80041c:	0802cc40 	call	802cc4 <__fixsfsi>
  800420:	e0bffd15 	stw	r2,-12(fp)
    }

    return dividend;
  800424:	e0bffd17 	ldw	r2,-12(fp)
}
  800428:	e6ffff04 	addi	sp,fp,-4
  80042c:	dfc00217 	ldw	ra,8(sp)
  800430:	df000117 	ldw	fp,4(sp)
  800434:	dc000017 	ldw	r16,0(sp)
  800438:	dec00304 	addi	sp,sp,12
  80043c:	f800283a 	ret

00800440 <getCosFromTable>:


float getCosFromTable(float radians) {
  800440:	defffc04 	addi	sp,sp,-16
  800444:	dfc00315 	stw	ra,12(sp)
  800448:	df000215 	stw	fp,8(sp)
  80044c:	df000204 	addi	fp,sp,8
  800450:	e13fff15 	stw	r4,-4(fp)
	while (radians < 0) radians = ALT_CI_FP_ADD_0(radians, TWO_PI);
  800454:	00000506 	br	80046c <getCosFromTable+0x2c>
  800458:	e0ffff17 	ldw	r3,-4(fp)
  80045c:	00903274 	movhi	r2,16585
  800460:	1083f6c4 	addi	r2,r2,4059
  800464:	1885c072 	custom	1,r2,r3,r2
  800468:	e0bfff15 	stw	r2,-4(fp)
  80046c:	000b883a 	mov	r5,zero
  800470:	e13fff17 	ldw	r4,-4(fp)
  800474:	0802bfc0 	call	802bfc <__lesf2>
  800478:	103ff716 	blt	r2,zero,800458 <__alt_data_end+0xff800458>
	    //while (radians >= TWO_PI) radians =  ALT_CI_FP_SUB_0(radians, TWO_PI);

	    // Calculate the index, using modulo to ensure it cycles within the table bounds
	    int index = (int)(ALT_CI_FP_MULT_0(radians, 100));
  80047c:	e0bfff17 	ldw	r2,-4(fp)
  800480:	00d0b234 	movhi	r3,17096
  800484:	10c5c0f2 	custom	3,r2,r2,r3
  800488:	1009883a 	mov	r4,r2
  80048c:	0802cc40 	call	802cc4 <__fixsfsi>
  800490:	e0bffe15 	stw	r2,-8(fp)
	    return cosLookupTable[index];
  800494:	00802074 	movhi	r2,129
  800498:	10970e04 	addi	r2,r2,23608
  80049c:	e0fffe17 	ldw	r3,-8(fp)
  8004a0:	180690fa 	slli	r3,r3,3
  8004a4:	10c9883a 	add	r4,r2,r3
  8004a8:	20800017 	ldw	r2,0(r4)
  8004ac:	20c00117 	ldw	r3,4(r4)
  8004b0:	1009883a 	mov	r4,r2
  8004b4:	180b883a 	mov	r5,r3
  8004b8:	0804ae80 	call	804ae8 <__truncdfsf2>
  8004bc:	1007883a 	mov	r3,r2
  8004c0:	1805883a 	mov	r2,r3
}
  8004c4:	e037883a 	mov	sp,fp
  8004c8:	dfc00117 	ldw	ra,4(sp)
  8004cc:	df000017 	ldw	fp,0(sp)
  8004d0:	dec00204 	addi	sp,sp,8
  8004d4:	f800283a 	ret

008004d8 <generateVector>:


void generateVector(float x[N])
{
  8004d8:	defffd04 	addi	sp,sp,-12
  8004dc:	df000215 	stw	fp,8(sp)
  8004e0:	df000204 	addi	fp,sp,8
  8004e4:	e13fff15 	stw	r4,-4(fp)
int i;
x[0] = 0;
  8004e8:	e0bfff17 	ldw	r2,-4(fp)
  8004ec:	10000015 	stw	zero,0(r2)
for (i=1; i<N; i++){
  8004f0:	00800044 	movi	r2,1
  8004f4:	e0bffe15 	stw	r2,-8(fp)
  8004f8:	00001606 	br	800554 <generateVector+0x7c>
//x[i] = x[i-1] + step;
x[i]=ALT_CI_FP_ADD_0(x[i-1], step);
  8004fc:	e0bffe17 	ldw	r2,-8(fp)
  800500:	1085883a 	add	r2,r2,r2
  800504:	1085883a 	add	r2,r2,r2
  800508:	1007883a 	mov	r3,r2
  80050c:	e0bfff17 	ldw	r2,-4(fp)
  800510:	10c7883a 	add	r3,r2,r3
  800514:	e13ffe17 	ldw	r4,-8(fp)
  800518:	00900034 	movhi	r2,16384
  80051c:	10bfffc4 	addi	r2,r2,-1
  800520:	2085883a 	add	r2,r4,r2
  800524:	1085883a 	add	r2,r2,r2
  800528:	1085883a 	add	r2,r2,r2
  80052c:	1009883a 	mov	r4,r2
  800530:	e0bfff17 	ldw	r2,-4(fp)
  800534:	1109883a 	add	r4,r2,r4
  800538:	20800017 	ldw	r2,0(r4)
  80053c:	010ea034 	movhi	r4,14976
  800540:	1105c072 	custom	1,r2,r2,r4
  800544:	18800015 	stw	r2,0(r3)

void generateVector(float x[N])
{
int i;
x[0] = 0;
for (i=1; i<N; i++){
  800548:	e0bffe17 	ldw	r2,-8(fp)
  80054c:	10800044 	addi	r2,r2,1
  800550:	e0bffe15 	stw	r2,-8(fp)
  800554:	e0fffe17 	ldw	r3,-8(fp)
  800558:	00800134 	movhi	r2,4
  80055c:	10bf0004 	addi	r2,r2,-1024
  800560:	10ffe60e 	bge	r2,r3,8004fc <__alt_data_end+0xff8004fc>
//x[i] = x[i-1] + step;
x[i]=ALT_CI_FP_ADD_0(x[i-1], step);
//printf("x[%d] = %f\n", i, x[i]); // Print the current value in each iteration
}
}
  800564:	0001883a 	nop
  800568:	e037883a 	mov	sp,fp
  80056c:	df000017 	ldw	fp,0(sp)
  800570:	dec00104 	addi	sp,sp,4
  800574:	f800283a 	ret

00800578 <sumVector>:


float sumVector(float x[], int M)
{
  800578:	defff904 	addi	sp,sp,-28
  80057c:	df000615 	stw	fp,24(sp)
  800580:	df000604 	addi	fp,sp,24
  800584:	e13ffe15 	stw	r4,-8(fp)
  800588:	e17fff15 	stw	r5,-4(fp)
	float sum = 0;
  80058c:	e03ffb15 	stw	zero,-20(fp)
		    for (int i = 0; i < M; i++) {
  800590:	e03ffa15 	stw	zero,-24(fp)
  800594:	00001d06 	br	80060c <sumVector+0x94>
		        //sum += x[i] + x[i]*x[i]; // Add xi and xi^2 to sum
		    	float x_2 = ALT_CI_FP_MULT_0(x[i], x[i]);
  800598:	e0bffa17 	ldw	r2,-24(fp)
  80059c:	1085883a 	add	r2,r2,r2
  8005a0:	1085883a 	add	r2,r2,r2
  8005a4:	1007883a 	mov	r3,r2
  8005a8:	e0bffe17 	ldw	r2,-8(fp)
  8005ac:	10c5883a 	add	r2,r2,r3
  8005b0:	10c00017 	ldw	r3,0(r2)
  8005b4:	e0bffa17 	ldw	r2,-24(fp)
  8005b8:	1085883a 	add	r2,r2,r2
  8005bc:	1085883a 	add	r2,r2,r2
  8005c0:	1009883a 	mov	r4,r2
  8005c4:	e0bffe17 	ldw	r2,-8(fp)
  8005c8:	1109883a 	add	r4,r2,r4
  8005cc:	20800017 	ldw	r2,0(r4)
  8005d0:	1885c0f2 	custom	3,r2,r3,r2
  8005d4:	e0bffc15 	stw	r2,-16(fp)
		    	float x_sum = ALT_CI_FP_ADD_0(x[i], x_2);
  8005d8:	e0bffa17 	ldw	r2,-24(fp)
  8005dc:	1085883a 	add	r2,r2,r2
  8005e0:	1085883a 	add	r2,r2,r2
  8005e4:	1007883a 	mov	r3,r2
  8005e8:	e0bffe17 	ldw	r2,-8(fp)
  8005ec:	10c7883a 	add	r3,r2,r3
  8005f0:	18800017 	ldw	r2,0(r3)
  8005f4:	e0fffc17 	ldw	r3,-16(fp)
  8005f8:	10c5c072 	custom	1,r2,r2,r3
  8005fc:	e0bffd15 	stw	r2,-12(fp)


float sumVector(float x[], int M)
{
	float sum = 0;
		    for (int i = 0; i < M; i++) {
  800600:	e0bffa17 	ldw	r2,-24(fp)
  800604:	10800044 	addi	r2,r2,1
  800608:	e0bffa15 	stw	r2,-24(fp)
  80060c:	e0fffa17 	ldw	r3,-24(fp)
  800610:	e0bfff17 	ldw	r2,-4(fp)
  800614:	18bfe016 	blt	r3,r2,800598 <__alt_data_end+0xff800598>
		        //sum += x[i] + x[i]*x[i]; // Add xi and xi^2 to sum
		    	float x_2 = ALT_CI_FP_MULT_0(x[i], x[i]);
		    	float x_sum = ALT_CI_FP_ADD_0(x[i], x_2);

		    }
		    return sum;
  800618:	e0bffb17 	ldw	r2,-20(fp)
  80061c:	1007883a 	mov	r3,r2
}
  800620:	1805883a 	mov	r2,r3
  800624:	e037883a 	mov	sp,fp
  800628:	df000017 	ldw	fp,0(sp)
  80062c:	dec00104 	addi	sp,sp,4
  800630:	f800283a 	ret

00800634 <func>:
//}



float func(float x[], int M, float cosLookupTable[])
{
  800634:	defff304 	addi	sp,sp,-52
  800638:	dfc00c15 	stw	ra,48(sp)
  80063c:	df000b15 	stw	fp,44(sp)
  800640:	df000b04 	addi	fp,sp,44
  800644:	e13ffd15 	stw	r4,-12(fp)
  800648:	e17ffe15 	stw	r5,-8(fp)
  80064c:	e1bfff15 	stw	r6,-4(fp)
    float sum = 0;
  800650:	e03ff515 	stw	zero,-44(fp)
    for (int i = 0; i < M; i++) {
  800654:	e03ff615 	stw	zero,-40(fp)
  800658:	00003906 	br	800740 <func+0x10c>
    	//sum += 0.5 * x[i] + x[i] * x[i] * cosTaylorExpansion((x[i] - 128.0) / 128.0);
        float min = ALT_CI_FP_SUB_0(x[i],128);
  80065c:	e0bff617 	ldw	r2,-40(fp)
  800660:	1085883a 	add	r2,r2,r2
  800664:	1085883a 	add	r2,r2,r2
  800668:	1007883a 	mov	r3,r2
  80066c:	e0bffd17 	ldw	r2,-12(fp)
  800670:	10c7883a 	add	r3,r2,r3
  800674:	18800017 	ldw	r2,0(r3)
  800678:	00d0c034 	movhi	r3,17152
  80067c:	10c5c0b2 	custom	2,r2,r2,r3
  800680:	e0bff715 	stw	r2,-36(fp)
        float div = ALT_CI_FP_MULT_0(min, 0.0078125);
  800684:	e0bff717 	ldw	r2,-36(fp)
  800688:	00cf0034 	movhi	r3,15360
  80068c:	10c5c0f2 	custom	3,r2,r2,r3
  800690:	e0bff815 	stw	r2,-32(fp)
        float xs = ALT_CI_FP_MULT_0(x[i],x[i]);
  800694:	e0bff617 	ldw	r2,-40(fp)
  800698:	1085883a 	add	r2,r2,r2
  80069c:	1085883a 	add	r2,r2,r2
  8006a0:	1007883a 	mov	r3,r2
  8006a4:	e0bffd17 	ldw	r2,-12(fp)
  8006a8:	10c5883a 	add	r2,r2,r3
  8006ac:	10c00017 	ldw	r3,0(r2)
  8006b0:	e0bff617 	ldw	r2,-40(fp)
  8006b4:	1085883a 	add	r2,r2,r2
  8006b8:	1085883a 	add	r2,r2,r2
  8006bc:	1009883a 	mov	r4,r2
  8006c0:	e0bffd17 	ldw	r2,-12(fp)
  8006c4:	1109883a 	add	r4,r2,r4
  8006c8:	20800017 	ldw	r2,0(r4)
  8006cc:	1885c0f2 	custom	3,r2,r3,r2
  8006d0:	e0bff915 	stw	r2,-28(fp)
        float sum05=ALT_CI_FP_MULT_0(x[i], 0.5);
  8006d4:	e0bff617 	ldw	r2,-40(fp)
  8006d8:	1085883a 	add	r2,r2,r2
  8006dc:	1085883a 	add	r2,r2,r2
  8006e0:	1007883a 	mov	r3,r2
  8006e4:	e0bffd17 	ldw	r2,-12(fp)
  8006e8:	10c7883a 	add	r3,r2,r3
  8006ec:	18800017 	ldw	r2,0(r3)
  8006f0:	00cfc034 	movhi	r3,16128
  8006f4:	10c5c0f2 	custom	3,r2,r2,r3
  8006f8:	e0bffa15 	stw	r2,-24(fp)

    	float sum_cos=ALT_CI_FP_MULT_0(xs, getCosFromTable(div));
  8006fc:	e13ff817 	ldw	r4,-32(fp)
  800700:	08004400 	call	800440 <getCosFromTable>
  800704:	1007883a 	mov	r3,r2
  800708:	e0bff917 	ldw	r2,-28(fp)
  80070c:	10c5c0f2 	custom	3,r2,r2,r3
  800710:	e0bffb15 	stw	r2,-20(fp)
    	float sumf=ALT_CI_FP_ADD_0(sum05, sum_cos);
  800714:	e0bffa17 	ldw	r2,-24(fp)
  800718:	e0fffb17 	ldw	r3,-20(fp)
  80071c:	10c5c072 	custom	1,r2,r2,r3
  800720:	e0bffc15 	stw	r2,-16(fp)
    	sum = ALT_CI_FP_ADD_0(sum, sumf);
  800724:	e0bff517 	ldw	r2,-44(fp)
  800728:	e0fffc17 	ldw	r3,-16(fp)
  80072c:	10c5c072 	custom	1,r2,r2,r3
  800730:	e0bff515 	stw	r2,-44(fp)


float func(float x[], int M, float cosLookupTable[])
{
    float sum = 0;
    for (int i = 0; i < M; i++) {
  800734:	e0bff617 	ldw	r2,-40(fp)
  800738:	10800044 	addi	r2,r2,1
  80073c:	e0bff615 	stw	r2,-40(fp)
  800740:	e0fff617 	ldw	r3,-40(fp)
  800744:	e0bffe17 	ldw	r2,-8(fp)
  800748:	18bfc416 	blt	r3,r2,80065c <__alt_data_end+0xff80065c>

    	float sum_cos=ALT_CI_FP_MULT_0(xs, getCosFromTable(div));
    	float sumf=ALT_CI_FP_ADD_0(sum05, sum_cos);
    	sum = ALT_CI_FP_ADD_0(sum, sumf);
    }
    return sum;
  80074c:	e0bff517 	ldw	r2,-44(fp)
  800750:	1007883a 	mov	r3,r2
}
  800754:	1805883a 	mov	r2,r3
  800758:	e037883a 	mov	sp,fp
  80075c:	dfc00117 	ldw	ra,4(sp)
  800760:	df000017 	ldw	fp,0(sp)
  800764:	dec00204 	addi	sp,sp,8
  800768:	f800283a 	ret

0080076c <main>:

int main()
{
  80076c:	defffd04 	addi	sp,sp,-12
  800770:	dfc00215 	stw	ra,8(sp)
  800774:	df000115 	stw	fp,4(sp)
  800778:	dc000015 	stw	r16,0(sp)
  80077c:	df000104 	addi	fp,sp,4
  800780:	023ffc34 	movhi	r8,65520
  800784:	4203fb04 	addi	r8,r8,4076
  800788:	da37883a 	add	sp,sp,r8
  80078c:	d805883a 	mov	r2,sp
  800790:	1021883a 	mov	r16,r2
printf("Task 4!\n");
  800794:	01002074 	movhi	r4,129
  800798:	21083e04 	addi	r4,r4,8440
  80079c:	0804e200 	call	804e20 <puts>
// Define input vector
float x[N];
float cosLookupTable[TABLE_SIZE];
  8007a0:	defd8a04 	addi	sp,sp,-2520
  8007a4:	d805883a 	mov	r2,sp
  8007a8:	108000c4 	addi	r2,r2,3
  8007ac:	1004d0ba 	srli	r2,r2,2
  8007b0:	1085883a 	add	r2,r2,r2
  8007b4:	1085883a 	add	r2,r2,r2
  8007b8:	00fffc34 	movhi	r3,65520
  8007bc:	18c3fa04 	addi	r3,r3,4072
  8007c0:	1f07883a 	add	r3,r3,fp
  8007c4:	18800015 	stw	r2,0(r3)
generateCosLookupTable(cosLookupTable);
  8007c8:	013ffc34 	movhi	r4,65520
  8007cc:	2103fa04 	addi	r4,r4,4072
  8007d0:	2709883a 	add	r4,r4,fp
  8007d4:	20800017 	ldw	r2,0(r4)
  8007d8:	1009883a 	mov	r4,r2
  8007dc:	08002900 	call	800290 <generateCosLookupTable>
// Returned result
float y;
generateVector(x);
  8007e0:	00fffc34 	movhi	r3,65520
  8007e4:	18c3fe04 	addi	r3,r3,4088
  8007e8:	e0c5883a 	add	r2,fp,r3
  8007ec:	1009883a 	mov	r4,r2
  8007f0:	08004d80 	call	8004d8 <generateVector>
printf("%f \n",getCosFromTable(2.8));
  8007f4:	01100cf4 	movhi	r4,16435
  8007f8:	210cccc4 	addi	r4,r4,13107
  8007fc:	08004400 	call	800440 <getCosFromTable>
  800800:	1007883a 	mov	r3,r2
  800804:	1809883a 	mov	r4,r3
  800808:	08049d80 	call	8049d8 <__extendsfdf2>
  80080c:	100d883a 	mov	r6,r2
  800810:	180f883a 	mov	r7,r3
  800814:	300b883a 	mov	r5,r6
  800818:	380d883a 	mov	r6,r7
  80081c:	01002074 	movhi	r4,129
  800820:	21084004 	addi	r4,r4,8448
  800824:	0804d240 	call	804d24 <printf>
printf("%f \n",cos(2.8));
  800828:	015dd5f4 	movhi	r5,30551
  80082c:	295c1284 	addi	r5,r5,28746
  800830:	01affbb4 	movhi	r6,49134
  800834:	3189abc4 	addi	r6,r6,9903
  800838:	01002074 	movhi	r4,129
  80083c:	21084004 	addi	r4,r4,8448
  800840:	0804d240 	call	804d24 <printf>


// The following is used for timing
//char buf[50];
clock_t exec_t1, exec_t2;
exec_t1 = times(NULL); // get system time before starting the process
  800844:	0009883a 	mov	r4,zero
  800848:	08100c80 	call	8100c8 <times>
  80084c:	013ffc34 	movhi	r4,65520
  800850:	2103fb04 	addi	r4,r4,4076
  800854:	2709883a 	add	r4,r4,fp
  800858:	20800015 	stw	r2,0(r4)
// The code that you want to time goes here
y = func(x, N,cosLookupTable);
  80085c:	00bffc34 	movhi	r2,65520
  800860:	1083fa04 	addi	r2,r2,4072
  800864:	1705883a 	add	r2,r2,fp
  800868:	10c00017 	ldw	r3,0(r2)
  80086c:	013ffc34 	movhi	r4,65520
  800870:	2103fe04 	addi	r4,r4,4088
  800874:	e105883a 	add	r2,fp,r4
  800878:	180d883a 	mov	r6,r3
  80087c:	01400134 	movhi	r5,4
  800880:	297f0044 	addi	r5,r5,-1023
  800884:	1009883a 	mov	r4,r2
  800888:	08006340 	call	800634 <func>
  80088c:	00fffc34 	movhi	r3,65520
  800890:	18c3fc04 	addi	r3,r3,4080
  800894:	1f07883a 	add	r3,r3,fp
  800898:	18800015 	stw	r2,0(r3)
// till here
exec_t2 = times(NULL); // get system time after finishing the process
  80089c:	0009883a 	mov	r4,zero
  8008a0:	08100c80 	call	8100c8 <times>
  8008a4:	013ffc34 	movhi	r4,65520
  8008a8:	2103fd04 	addi	r4,r4,4084
  8008ac:	2709883a 	add	r4,r4,fp
  8008b0:	20800015 	stw	r2,0(r4)


printf(" proc time = %d ticks \n", (unsigned int) (exec_t2-exec_t1));
  8008b4:	00bffc34 	movhi	r2,65520
  8008b8:	1083fd04 	addi	r2,r2,4084
  8008bc:	1705883a 	add	r2,r2,fp
  8008c0:	10c00017 	ldw	r3,0(r2)
  8008c4:	013ffc34 	movhi	r4,65520
  8008c8:	2103fb04 	addi	r4,r4,4076
  8008cc:	2709883a 	add	r4,r4,fp
  8008d0:	20800017 	ldw	r2,0(r4)
  8008d4:	1885c83a 	sub	r2,r3,r2
  8008d8:	100b883a 	mov	r5,r2
  8008dc:	01002074 	movhi	r4,129
  8008e0:	21084204 	addi	r4,r4,8456
  8008e4:	0804d240 	call	804d24 <printf>
printf("Result: %f \n",y);
  8008e8:	00bffc34 	movhi	r2,65520
  8008ec:	1083fc04 	addi	r2,r2,4080
  8008f0:	1705883a 	add	r2,r2,fp
  8008f4:	11000017 	ldw	r4,0(r2)
  8008f8:	08049d80 	call	8049d8 <__extendsfdf2>
  8008fc:	100d883a 	mov	r6,r2
  800900:	180f883a 	mov	r7,r3
  800904:	300b883a 	mov	r5,r6
  800908:	380d883a 	mov	r6,r7
  80090c:	01002074 	movhi	r4,129
  800910:	21084804 	addi	r4,r4,8480
  800914:	0804d240 	call	804d24 <printf>
  800918:	8037883a 	mov	sp,r16
  80091c:	0005883a 	mov	r2,zero

//nios2-elf-objdump -d hello_world.elf > disassembly.txt
//nios2-elf-objdump -d hello_world.elf | grep -A20 "<main>:"
//nios2-elf-size hello_world.elf
}
  800920:	e6ffff04 	addi	sp,fp,-4
  800924:	dfc00217 	ldw	ra,8(sp)
  800928:	df000117 	ldw	fp,4(sp)
  80092c:	dc000017 	ldw	r16,0(sp)
  800930:	dec00304 	addi	sp,sp,12
  800934:	f800283a 	ret

00800938 <cos>:
  800938:	00a00034 	movhi	r2,32768
  80093c:	defffa04 	addi	sp,sp,-24
  800940:	10bfffc4 	addi	r2,r2,-1
  800944:	00cffa74 	movhi	r3,16361
  800948:	dfc00515 	stw	ra,20(sp)
  80094c:	2884703a 	and	r2,r5,r2
  800950:	18c87ec4 	addi	r3,r3,8699
  800954:	1880180e 	bge	r3,r2,8009b8 <cos+0x80>
  800958:	00dffc34 	movhi	r3,32752
  80095c:	18ffffc4 	addi	r3,r3,-1
  800960:	1880060e 	bge	r3,r2,80097c <cos+0x44>
  800964:	280f883a 	mov	r7,r5
  800968:	200d883a 	mov	r6,r4
  80096c:	0803f800 	call	803f80 <__subdf3>
  800970:	dfc00517 	ldw	ra,20(sp)
  800974:	dec00604 	addi	sp,sp,24
  800978:	f800283a 	ret
  80097c:	d9800104 	addi	r6,sp,4
  800980:	0800a240 	call	800a24 <__ieee754_rem_pio2>
  800984:	108000cc 	andi	r2,r2,3
  800988:	00c00044 	movi	r3,1
  80098c:	10c01726 	beq	r2,r3,8009ec <cos+0xb4>
  800990:	01000084 	movi	r4,2
  800994:	11000e26 	beq	r2,r4,8009d0 <cos+0x98>
  800998:	10001c26 	beq	r2,zero,800a0c <cos+0xd4>
  80099c:	d9800317 	ldw	r6,12(sp)
  8009a0:	d9c00417 	ldw	r7,16(sp)
  8009a4:	d9000117 	ldw	r4,4(sp)
  8009a8:	d9400217 	ldw	r5,8(sp)
  8009ac:	d8c00015 	stw	r3,0(sp)
  8009b0:	08023c40 	call	8023c4 <__kernel_sin>
  8009b4:	003fee06 	br	800970 <__alt_data_end+0xff800970>
  8009b8:	000d883a 	mov	r6,zero
  8009bc:	000f883a 	mov	r7,zero
  8009c0:	08011900 	call	801190 <__kernel_cos>
  8009c4:	dfc00517 	ldw	ra,20(sp)
  8009c8:	dec00604 	addi	sp,sp,24
  8009cc:	f800283a 	ret
  8009d0:	d9800317 	ldw	r6,12(sp)
  8009d4:	d9c00417 	ldw	r7,16(sp)
  8009d8:	d9000117 	ldw	r4,4(sp)
  8009dc:	d9400217 	ldw	r5,8(sp)
  8009e0:	08011900 	call	801190 <__kernel_cos>
  8009e4:	18e0003c 	xorhi	r3,r3,32768
  8009e8:	003fe106 	br	800970 <__alt_data_end+0xff800970>
  8009ec:	d9800317 	ldw	r6,12(sp)
  8009f0:	d9c00417 	ldw	r7,16(sp)
  8009f4:	d9000117 	ldw	r4,4(sp)
  8009f8:	d9400217 	ldw	r5,8(sp)
  8009fc:	d8800015 	stw	r2,0(sp)
  800a00:	08023c40 	call	8023c4 <__kernel_sin>
  800a04:	18e0003c 	xorhi	r3,r3,32768
  800a08:	003fd906 	br	800970 <__alt_data_end+0xff800970>
  800a0c:	d9800317 	ldw	r6,12(sp)
  800a10:	d9c00417 	ldw	r7,16(sp)
  800a14:	d9000117 	ldw	r4,4(sp)
  800a18:	d9400217 	ldw	r5,8(sp)
  800a1c:	08011900 	call	801190 <__kernel_cos>
  800a20:	003fd306 	br	800970 <__alt_data_end+0xff800970>

00800a24 <__ieee754_rem_pio2>:
  800a24:	02200034 	movhi	r8,32768
  800a28:	deffea04 	addi	sp,sp,-88
  800a2c:	423fffc4 	addi	r8,r8,-1
  800a30:	00cffa74 	movhi	r3,16361
  800a34:	ddc01315 	stw	r23,76(sp)
  800a38:	dc400d15 	stw	r17,52(sp)
  800a3c:	dfc01515 	stw	ra,84(sp)
  800a40:	df001415 	stw	fp,80(sp)
  800a44:	dd801215 	stw	r22,72(sp)
  800a48:	dd401115 	stw	r21,68(sp)
  800a4c:	dd001015 	stw	r20,64(sp)
  800a50:	dcc00f15 	stw	r19,60(sp)
  800a54:	dc800e15 	stw	r18,56(sp)
  800a58:	dc000c15 	stw	r16,48(sp)
  800a5c:	2a2e703a 	and	r23,r5,r8
  800a60:	18c87ec4 	addi	r3,r3,8699
  800a64:	2823883a 	mov	r17,r5
  800a68:	1dc0790e 	bge	r3,r23,800c50 <__ieee754_rem_pio2+0x22c>
  800a6c:	009000f4 	movhi	r2,16387
  800a70:	10b65ec4 	addi	r2,r2,-9861
  800a74:	3021883a 	mov	r16,r6
  800a78:	2027883a 	mov	r19,r4
  800a7c:	15c02316 	blt	r2,r23,800b0c <__ieee754_rem_pio2+0xe8>
  800a80:	01cffe74 	movhi	r7,16377
  800a84:	39c87ec4 	addi	r7,r7,8699
  800a88:	01951034 	movhi	r6,21568
  800a8c:	01417a0e 	bge	zero,r5,801078 <__ieee754_rem_pio2+0x654>
  800a90:	0803f800 	call	803f80 <__subdf3>
  800a94:	1025883a 	mov	r18,r2
  800a98:	008ffe74 	movhi	r2,16377
  800a9c:	10887ec4 	addi	r2,r2,8699
  800aa0:	1823883a 	mov	r17,r3
  800aa4:	b8808426 	beq	r23,r2,800cb8 <__ieee754_rem_pio2+0x294>
  800aa8:	018698b4 	movhi	r6,6754
  800aac:	01cf7474 	movhi	r7,15825
  800ab0:	3198cc44 	addi	r6,r6,25393
  800ab4:	39ed1844 	addi	r7,r7,-19359
  800ab8:	9009883a 	mov	r4,r18
  800abc:	180b883a 	mov	r5,r3
  800ac0:	0803f800 	call	803f80 <__subdf3>
  800ac4:	100d883a 	mov	r6,r2
  800ac8:	180f883a 	mov	r7,r3
  800acc:	9009883a 	mov	r4,r18
  800ad0:	880b883a 	mov	r5,r17
  800ad4:	80800015 	stw	r2,0(r16)
  800ad8:	80c00115 	stw	r3,4(r16)
  800adc:	0803f800 	call	803f80 <__subdf3>
  800ae0:	018698b4 	movhi	r6,6754
  800ae4:	01cf7474 	movhi	r7,15825
  800ae8:	3198cc44 	addi	r6,r6,25393
  800aec:	39ed1844 	addi	r7,r7,-19359
  800af0:	1009883a 	mov	r4,r2
  800af4:	180b883a 	mov	r5,r3
  800af8:	0803f800 	call	803f80 <__subdf3>
  800afc:	80800215 	stw	r2,8(r16)
  800b00:	80c00315 	stw	r3,12(r16)
  800b04:	00800044 	movi	r2,1
  800b08:	00005606 	br	800c64 <__ieee754_rem_pio2+0x240>
  800b0c:	00904e74 	movhi	r2,16697
  800b10:	10887ec4 	addi	r2,r2,8699
  800b14:	15c0830e 	bge	r2,r23,800d24 <__ieee754_rem_pio2+0x300>
  800b18:	009ffc34 	movhi	r2,32752
  800b1c:	10bfffc4 	addi	r2,r2,-1
  800b20:	15c05c16 	blt	r2,r23,800c94 <__ieee754_rem_pio2+0x270>
  800b24:	b829d53a 	srai	r20,r23,20
  800b28:	a53efa84 	addi	r20,r20,-1046
  800b2c:	a024953a 	slli	r18,r20,20
  800b30:	bca5c83a 	sub	r18,r23,r18
  800b34:	900b883a 	mov	r5,r18
  800b38:	080487c0 	call	80487c <__fixdfsi>
  800b3c:	1009883a 	mov	r4,r2
  800b40:	08048fc0 	call	8048fc <__floatsidf>
  800b44:	9809883a 	mov	r4,r19
  800b48:	900b883a 	mov	r5,r18
  800b4c:	100d883a 	mov	r6,r2
  800b50:	180f883a 	mov	r7,r3
  800b54:	d8800215 	stw	r2,8(sp)
  800b58:	d8c00315 	stw	r3,12(sp)
  800b5c:	0803f800 	call	803f80 <__subdf3>
  800b60:	000d883a 	mov	r6,zero
  800b64:	01d05c34 	movhi	r7,16752
  800b68:	1009883a 	mov	r4,r2
  800b6c:	180b883a 	mov	r5,r3
  800b70:	08038680 	call	803868 <__muldf3>
  800b74:	180b883a 	mov	r5,r3
  800b78:	1009883a 	mov	r4,r2
  800b7c:	182b883a 	mov	r21,r3
  800b80:	102d883a 	mov	r22,r2
  800b84:	080487c0 	call	80487c <__fixdfsi>
  800b88:	1009883a 	mov	r4,r2
  800b8c:	08048fc0 	call	8048fc <__floatsidf>
  800b90:	100d883a 	mov	r6,r2
  800b94:	180f883a 	mov	r7,r3
  800b98:	b009883a 	mov	r4,r22
  800b9c:	a80b883a 	mov	r5,r21
  800ba0:	1027883a 	mov	r19,r2
  800ba4:	1825883a 	mov	r18,r3
  800ba8:	d8800415 	stw	r2,16(sp)
  800bac:	d8c00515 	stw	r3,20(sp)
  800bb0:	0803f800 	call	803f80 <__subdf3>
  800bb4:	000d883a 	mov	r6,zero
  800bb8:	01d05c34 	movhi	r7,16752
  800bbc:	1009883a 	mov	r4,r2
  800bc0:	180b883a 	mov	r5,r3
  800bc4:	08038680 	call	803868 <__muldf3>
  800bc8:	000d883a 	mov	r6,zero
  800bcc:	000f883a 	mov	r7,zero
  800bd0:	1009883a 	mov	r4,r2
  800bd4:	180b883a 	mov	r5,r3
  800bd8:	d8800615 	stw	r2,24(sp)
  800bdc:	d8c00715 	stw	r3,28(sp)
  800be0:	08037040 	call	803704 <__eqdf2>
  800be4:	1001431e 	bne	r2,zero,8010f4 <__ieee754_rem_pio2+0x6d0>
  800be8:	000f883a 	mov	r7,zero
  800bec:	000d883a 	mov	r6,zero
  800bf0:	9809883a 	mov	r4,r19
  800bf4:	900b883a 	mov	r5,r18
  800bf8:	08037040 	call	803704 <__eqdf2>
  800bfc:	100f003a 	cmpeq	r7,r2,zero
  800c00:	00800084 	movi	r2,2
  800c04:	11cfc83a 	sub	r7,r2,r7
  800c08:	00800084 	movi	r2,2
  800c0c:	d8800015 	stw	r2,0(sp)
  800c10:	00802074 	movhi	r2,129
  800c14:	10886c04 	addi	r2,r2,8624
  800c18:	d8800115 	stw	r2,4(sp)
  800c1c:	a00d883a 	mov	r6,r20
  800c20:	800b883a 	mov	r5,r16
  800c24:	d9000204 	addi	r4,sp,8
  800c28:	08016340 	call	801634 <__kernel_rem_pio2>
  800c2c:	88000d0e 	bge	r17,zero,800c64 <__ieee754_rem_pio2+0x240>
  800c30:	81000117 	ldw	r4,4(r16)
  800c34:	80c00317 	ldw	r3,12(r16)
  800c38:	0085c83a 	sub	r2,zero,r2
  800c3c:	2120003c 	xorhi	r4,r4,32768
  800c40:	18e0003c 	xorhi	r3,r3,32768
  800c44:	81000115 	stw	r4,4(r16)
  800c48:	80c00315 	stw	r3,12(r16)
  800c4c:	00000506 	br	800c64 <__ieee754_rem_pio2+0x240>
  800c50:	31000015 	stw	r4,0(r6)
  800c54:	31400115 	stw	r5,4(r6)
  800c58:	30000215 	stw	zero,8(r6)
  800c5c:	30000315 	stw	zero,12(r6)
  800c60:	0005883a 	mov	r2,zero
  800c64:	dfc01517 	ldw	ra,84(sp)
  800c68:	df001417 	ldw	fp,80(sp)
  800c6c:	ddc01317 	ldw	r23,76(sp)
  800c70:	dd801217 	ldw	r22,72(sp)
  800c74:	dd401117 	ldw	r21,68(sp)
  800c78:	dd001017 	ldw	r20,64(sp)
  800c7c:	dcc00f17 	ldw	r19,60(sp)
  800c80:	dc800e17 	ldw	r18,56(sp)
  800c84:	dc400d17 	ldw	r17,52(sp)
  800c88:	dc000c17 	ldw	r16,48(sp)
  800c8c:	dec01604 	addi	sp,sp,88
  800c90:	f800283a 	ret
  800c94:	200d883a 	mov	r6,r4
  800c98:	280f883a 	mov	r7,r5
  800c9c:	0803f800 	call	803f80 <__subdf3>
  800ca0:	80800215 	stw	r2,8(r16)
  800ca4:	80800015 	stw	r2,0(r16)
  800ca8:	80c00315 	stw	r3,12(r16)
  800cac:	80c00115 	stw	r3,4(r16)
  800cb0:	0005883a 	mov	r2,zero
  800cb4:	003feb06 	br	800c64 <__alt_data_end+0xff800c64>
  800cb8:	01cf7474 	movhi	r7,15825
  800cbc:	9009883a 	mov	r4,r18
  800cc0:	39ed1844 	addi	r7,r7,-19359
  800cc4:	01869834 	movhi	r6,6752
  800cc8:	180b883a 	mov	r5,r3
  800ccc:	0803f800 	call	803f80 <__subdf3>
  800cd0:	018b80f4 	movhi	r6,11779
  800cd4:	01cee8f4 	movhi	r7,15267
  800cd8:	319c1cc4 	addi	r6,r6,28787
  800cdc:	39c66284 	addi	r7,r7,6538
  800ce0:	1009883a 	mov	r4,r2
  800ce4:	180b883a 	mov	r5,r3
  800ce8:	1025883a 	mov	r18,r2
  800cec:	1823883a 	mov	r17,r3
  800cf0:	0803f800 	call	803f80 <__subdf3>
  800cf4:	100d883a 	mov	r6,r2
  800cf8:	180f883a 	mov	r7,r3
  800cfc:	9009883a 	mov	r4,r18
  800d00:	880b883a 	mov	r5,r17
  800d04:	80800015 	stw	r2,0(r16)
  800d08:	80c00115 	stw	r3,4(r16)
  800d0c:	0803f800 	call	803f80 <__subdf3>
  800d10:	018b80f4 	movhi	r6,11779
  800d14:	01cee8f4 	movhi	r7,15267
  800d18:	319c1cc4 	addi	r6,r6,28787
  800d1c:	39c66284 	addi	r7,r7,6538
  800d20:	003f7306 	br	800af0 <__alt_data_end+0xff800af0>
  800d24:	08026900 	call	802690 <fabs>
  800d28:	019b72b4 	movhi	r6,28106
  800d2c:	01cff934 	movhi	r7,16356
  800d30:	31b220c4 	addi	r6,r6,-14205
  800d34:	39d7cc04 	addi	r7,r7,24368
  800d38:	1009883a 	mov	r4,r2
  800d3c:	180b883a 	mov	r5,r3
  800d40:	102d883a 	mov	r22,r2
  800d44:	182b883a 	mov	r21,r3
  800d48:	08038680 	call	803868 <__muldf3>
  800d4c:	000d883a 	mov	r6,zero
  800d50:	01cff834 	movhi	r7,16352
  800d54:	1009883a 	mov	r4,r2
  800d58:	180b883a 	mov	r5,r3
  800d5c:	0802e580 	call	802e58 <__adddf3>
  800d60:	180b883a 	mov	r5,r3
  800d64:	1009883a 	mov	r4,r2
  800d68:	080487c0 	call	80487c <__fixdfsi>
  800d6c:	1009883a 	mov	r4,r2
  800d70:	1025883a 	mov	r18,r2
  800d74:	08048fc0 	call	8048fc <__floatsidf>
  800d78:	01cffe74 	movhi	r7,16377
  800d7c:	39c87ec4 	addi	r7,r7,8699
  800d80:	01951034 	movhi	r6,21568
  800d84:	1009883a 	mov	r4,r2
  800d88:	180b883a 	mov	r5,r3
  800d8c:	1029883a 	mov	r20,r2
  800d90:	1827883a 	mov	r19,r3
  800d94:	08038680 	call	803868 <__muldf3>
  800d98:	b009883a 	mov	r4,r22
  800d9c:	a80b883a 	mov	r5,r21
  800da0:	100d883a 	mov	r6,r2
  800da4:	180f883a 	mov	r7,r3
  800da8:	0803f800 	call	803f80 <__subdf3>
  800dac:	018698b4 	movhi	r6,6754
  800db0:	01cf7474 	movhi	r7,15825
  800db4:	a009883a 	mov	r4,r20
  800db8:	3198cc44 	addi	r6,r6,25393
  800dbc:	39ed1844 	addi	r7,r7,-19359
  800dc0:	980b883a 	mov	r5,r19
  800dc4:	1039883a 	mov	fp,r2
  800dc8:	d8c00815 	stw	r3,32(sp)
  800dcc:	08038680 	call	803868 <__muldf3>
  800dd0:	010007c4 	movi	r4,31
  800dd4:	e017883a 	mov	r11,fp
  800dd8:	da800817 	ldw	r10,32(sp)
  800ddc:	102d883a 	mov	r22,r2
  800de0:	182b883a 	mov	r21,r3
  800de4:	24802816 	blt	r4,r18,800e88 <__ieee754_rem_pio2+0x464>
  800de8:	913fffc4 	addi	r4,r18,-1
  800dec:	2109883a 	add	r4,r4,r4
  800df0:	01402074 	movhi	r5,129
  800df4:	2109883a 	add	r4,r4,r4
  800df8:	29484c04 	addi	r5,r5,8496
  800dfc:	2909883a 	add	r4,r5,r4
  800e00:	21000017 	ldw	r4,0(r4)
  800e04:	b9002026 	beq	r23,r4,800e88 <__ieee754_rem_pio2+0x464>
  800e08:	100d883a 	mov	r6,r2
  800e0c:	180f883a 	mov	r7,r3
  800e10:	e009883a 	mov	r4,fp
  800e14:	500b883a 	mov	r5,r10
  800e18:	da800b15 	stw	r10,44(sp)
  800e1c:	df000a15 	stw	fp,40(sp)
  800e20:	0803f800 	call	803f80 <__subdf3>
  800e24:	da800b17 	ldw	r10,44(sp)
  800e28:	dac00a17 	ldw	r11,40(sp)
  800e2c:	1019883a 	mov	r12,r2
  800e30:	1813883a 	mov	r9,r3
  800e34:	80800015 	stw	r2,0(r16)
  800e38:	80c00115 	stw	r3,4(r16)
  800e3c:	600d883a 	mov	r6,r12
  800e40:	480f883a 	mov	r7,r9
  800e44:	5809883a 	mov	r4,r11
  800e48:	500b883a 	mov	r5,r10
  800e4c:	da400b15 	stw	r9,44(sp)
  800e50:	db000a15 	stw	r12,40(sp)
  800e54:	0803f800 	call	803f80 <__subdf3>
  800e58:	b00d883a 	mov	r6,r22
  800e5c:	a80f883a 	mov	r7,r21
  800e60:	1009883a 	mov	r4,r2
  800e64:	180b883a 	mov	r5,r3
  800e68:	0803f800 	call	803f80 <__subdf3>
  800e6c:	80800215 	stw	r2,8(r16)
  800e70:	80c00315 	stw	r3,12(r16)
  800e74:	da400b17 	ldw	r9,44(sp)
  800e78:	db000a17 	ldw	r12,40(sp)
  800e7c:	88009f16 	blt	r17,zero,8010fc <__ieee754_rem_pio2+0x6d8>
  800e80:	9005883a 	mov	r2,r18
  800e84:	003f7706 	br	800c64 <__alt_data_end+0xff800c64>
  800e88:	d9400817 	ldw	r5,32(sp)
  800e8c:	100d883a 	mov	r6,r2
  800e90:	180f883a 	mov	r7,r3
  800e94:	e009883a 	mov	r4,fp
  800e98:	da800b15 	stw	r10,44(sp)
  800e9c:	dac00a15 	stw	r11,40(sp)
  800ea0:	0803f800 	call	803f80 <__subdf3>
  800ea4:	1019883a 	mov	r12,r2
  800ea8:	1804d53a 	srli	r2,r3,20
  800eac:	b811d53a 	srai	r8,r23,20
  800eb0:	1813883a 	mov	r9,r3
  800eb4:	1081ffcc 	andi	r2,r2,2047
  800eb8:	80c00115 	stw	r3,4(r16)
  800ebc:	83000015 	stw	r12,0(r16)
  800ec0:	4085c83a 	sub	r2,r8,r2
  800ec4:	00c00404 	movi	r3,16
  800ec8:	da800b17 	ldw	r10,44(sp)
  800ecc:	dac00a17 	ldw	r11,40(sp)
  800ed0:	18bfda0e 	bge	r3,r2,800e3c <__alt_data_end+0xff800e3c>
  800ed4:	01cf7474 	movhi	r7,15825
  800ed8:	39ed1844 	addi	r7,r7,-19359
  800edc:	01869834 	movhi	r6,6752
  800ee0:	a009883a 	mov	r4,r20
  800ee4:	980b883a 	mov	r5,r19
  800ee8:	da000a15 	stw	r8,40(sp)
  800eec:	08038680 	call	803868 <__muldf3>
  800ef0:	d9400817 	ldw	r5,32(sp)
  800ef4:	100d883a 	mov	r6,r2
  800ef8:	180f883a 	mov	r7,r3
  800efc:	e009883a 	mov	r4,fp
  800f00:	102d883a 	mov	r22,r2
  800f04:	182b883a 	mov	r21,r3
  800f08:	0803f800 	call	803f80 <__subdf3>
  800f0c:	d9400817 	ldw	r5,32(sp)
  800f10:	100d883a 	mov	r6,r2
  800f14:	180f883a 	mov	r7,r3
  800f18:	e009883a 	mov	r4,fp
  800f1c:	182f883a 	mov	r23,r3
  800f20:	d8800915 	stw	r2,36(sp)
  800f24:	0803f800 	call	803f80 <__subdf3>
  800f28:	b00d883a 	mov	r6,r22
  800f2c:	a80f883a 	mov	r7,r21
  800f30:	1009883a 	mov	r4,r2
  800f34:	180b883a 	mov	r5,r3
  800f38:	0803f800 	call	803f80 <__subdf3>
  800f3c:	018b80f4 	movhi	r6,11779
  800f40:	01cee8f4 	movhi	r7,15267
  800f44:	319c1cc4 	addi	r6,r6,28787
  800f48:	39c66284 	addi	r7,r7,6538
  800f4c:	a009883a 	mov	r4,r20
  800f50:	980b883a 	mov	r5,r19
  800f54:	102d883a 	mov	r22,r2
  800f58:	182b883a 	mov	r21,r3
  800f5c:	08038680 	call	803868 <__muldf3>
  800f60:	b00d883a 	mov	r6,r22
  800f64:	a80f883a 	mov	r7,r21
  800f68:	1009883a 	mov	r4,r2
  800f6c:	180b883a 	mov	r5,r3
  800f70:	0803f800 	call	803f80 <__subdf3>
  800f74:	d9000917 	ldw	r4,36(sp)
  800f78:	100d883a 	mov	r6,r2
  800f7c:	180f883a 	mov	r7,r3
  800f80:	b80b883a 	mov	r5,r23
  800f84:	102d883a 	mov	r22,r2
  800f88:	182b883a 	mov	r21,r3
  800f8c:	0803f800 	call	803f80 <__subdf3>
  800f90:	1019883a 	mov	r12,r2
  800f94:	1804d53a 	srli	r2,r3,20
  800f98:	da000a17 	ldw	r8,40(sp)
  800f9c:	83000015 	stw	r12,0(r16)
  800fa0:	1081ffcc 	andi	r2,r2,2047
  800fa4:	4091c83a 	sub	r8,r8,r2
  800fa8:	80c00115 	stw	r3,4(r16)
  800fac:	00800c44 	movi	r2,49
  800fb0:	1813883a 	mov	r9,r3
  800fb4:	1200730e 	bge	r2,r8,801184 <__ieee754_rem_pio2+0x760>
  800fb8:	01cee8f4 	movhi	r7,15267
  800fbc:	39c66284 	addi	r7,r7,6538
  800fc0:	018b8034 	movhi	r6,11776
  800fc4:	a009883a 	mov	r4,r20
  800fc8:	980b883a 	mov	r5,r19
  800fcc:	08038680 	call	803868 <__muldf3>
  800fd0:	d9000917 	ldw	r4,36(sp)
  800fd4:	100d883a 	mov	r6,r2
  800fd8:	180f883a 	mov	r7,r3
  800fdc:	b80b883a 	mov	r5,r23
  800fe0:	102d883a 	mov	r22,r2
  800fe4:	182b883a 	mov	r21,r3
  800fe8:	0803f800 	call	803f80 <__subdf3>
  800fec:	d9000917 	ldw	r4,36(sp)
  800ff0:	100d883a 	mov	r6,r2
  800ff4:	180f883a 	mov	r7,r3
  800ff8:	b80b883a 	mov	r5,r23
  800ffc:	d8c00b15 	stw	r3,44(sp)
  801000:	d8800a15 	stw	r2,40(sp)
  801004:	0803f800 	call	803f80 <__subdf3>
  801008:	b00d883a 	mov	r6,r22
  80100c:	a80f883a 	mov	r7,r21
  801010:	1009883a 	mov	r4,r2
  801014:	180b883a 	mov	r5,r3
  801018:	0803f800 	call	803f80 <__subdf3>
  80101c:	01894834 	movhi	r6,9504
  801020:	01ce5f34 	movhi	r7,14716
  801024:	31927044 	addi	r6,r6,18881
  801028:	39e0e684 	addi	r7,r7,-31846
  80102c:	a009883a 	mov	r4,r20
  801030:	980b883a 	mov	r5,r19
  801034:	102d883a 	mov	r22,r2
  801038:	182b883a 	mov	r21,r3
  80103c:	08038680 	call	803868 <__muldf3>
  801040:	b00d883a 	mov	r6,r22
  801044:	a80f883a 	mov	r7,r21
  801048:	1009883a 	mov	r4,r2
  80104c:	180b883a 	mov	r5,r3
  801050:	0803f800 	call	803f80 <__subdf3>
  801054:	dac00a17 	ldw	r11,40(sp)
  801058:	da800b17 	ldw	r10,44(sp)
  80105c:	102d883a 	mov	r22,r2
  801060:	182b883a 	mov	r21,r3
  801064:	100d883a 	mov	r6,r2
  801068:	180f883a 	mov	r7,r3
  80106c:	5809883a 	mov	r4,r11
  801070:	500b883a 	mov	r5,r10
  801074:	003f6a06 	br	800e20 <__alt_data_end+0xff800e20>
  801078:	0802e580 	call	802e58 <__adddf3>
  80107c:	1025883a 	mov	r18,r2
  801080:	008ffe74 	movhi	r2,16377
  801084:	10887ec4 	addi	r2,r2,8699
  801088:	1823883a 	mov	r17,r3
  80108c:	b8802226 	beq	r23,r2,801118 <__ieee754_rem_pio2+0x6f4>
  801090:	018698b4 	movhi	r6,6754
  801094:	01cf7474 	movhi	r7,15825
  801098:	3198cc44 	addi	r6,r6,25393
  80109c:	39ed1844 	addi	r7,r7,-19359
  8010a0:	9009883a 	mov	r4,r18
  8010a4:	180b883a 	mov	r5,r3
  8010a8:	0802e580 	call	802e58 <__adddf3>
  8010ac:	100d883a 	mov	r6,r2
  8010b0:	180f883a 	mov	r7,r3
  8010b4:	9009883a 	mov	r4,r18
  8010b8:	880b883a 	mov	r5,r17
  8010bc:	80800015 	stw	r2,0(r16)
  8010c0:	80c00115 	stw	r3,4(r16)
  8010c4:	0803f800 	call	803f80 <__subdf3>
  8010c8:	018698b4 	movhi	r6,6754
  8010cc:	01cf7474 	movhi	r7,15825
  8010d0:	3198cc44 	addi	r6,r6,25393
  8010d4:	39ed1844 	addi	r7,r7,-19359
  8010d8:	1009883a 	mov	r4,r2
  8010dc:	180b883a 	mov	r5,r3
  8010e0:	0802e580 	call	802e58 <__adddf3>
  8010e4:	80800215 	stw	r2,8(r16)
  8010e8:	80c00315 	stw	r3,12(r16)
  8010ec:	00bfffc4 	movi	r2,-1
  8010f0:	003edc06 	br	800c64 <__alt_data_end+0xff800c64>
  8010f4:	01c000c4 	movi	r7,3
  8010f8:	003ec306 	br	800c08 <__alt_data_end+0xff800c08>
  8010fc:	4a60003c 	xorhi	r9,r9,32768
  801100:	18e0003c 	xorhi	r3,r3,32768
  801104:	83000015 	stw	r12,0(r16)
  801108:	82400115 	stw	r9,4(r16)
  80110c:	80c00315 	stw	r3,12(r16)
  801110:	0485c83a 	sub	r2,zero,r18
  801114:	003ed306 	br	800c64 <__alt_data_end+0xff800c64>
  801118:	01cf7474 	movhi	r7,15825
  80111c:	9009883a 	mov	r4,r18
  801120:	39ed1844 	addi	r7,r7,-19359
  801124:	01869834 	movhi	r6,6752
  801128:	180b883a 	mov	r5,r3
  80112c:	0802e580 	call	802e58 <__adddf3>
  801130:	018b80f4 	movhi	r6,11779
  801134:	01cee8f4 	movhi	r7,15267
  801138:	319c1cc4 	addi	r6,r6,28787
  80113c:	39c66284 	addi	r7,r7,6538
  801140:	1009883a 	mov	r4,r2
  801144:	180b883a 	mov	r5,r3
  801148:	1025883a 	mov	r18,r2
  80114c:	1823883a 	mov	r17,r3
  801150:	0802e580 	call	802e58 <__adddf3>
  801154:	100d883a 	mov	r6,r2
  801158:	180f883a 	mov	r7,r3
  80115c:	9009883a 	mov	r4,r18
  801160:	880b883a 	mov	r5,r17
  801164:	80800015 	stw	r2,0(r16)
  801168:	80c00115 	stw	r3,4(r16)
  80116c:	0803f800 	call	803f80 <__subdf3>
  801170:	018b80f4 	movhi	r6,11779
  801174:	01cee8f4 	movhi	r7,15267
  801178:	319c1cc4 	addi	r6,r6,28787
  80117c:	39c66284 	addi	r7,r7,6538
  801180:	003fd506 	br	8010d8 <__alt_data_end+0xff8010d8>
  801184:	dac00917 	ldw	r11,36(sp)
  801188:	b815883a 	mov	r10,r23
  80118c:	003f2b06 	br	800e3c <__alt_data_end+0xff800e3c>

00801190 <__kernel_cos>:
  801190:	defff304 	addi	sp,sp,-52
  801194:	dc000315 	stw	r16,12(sp)
  801198:	04200034 	movhi	r16,32768
  80119c:	843fffc4 	addi	r16,r16,-1
  8011a0:	008f9034 	movhi	r2,15936
  8011a4:	df000b15 	stw	fp,44(sp)
  8011a8:	ddc00a15 	stw	r23,40(sp)
  8011ac:	dd800915 	stw	r22,36(sp)
  8011b0:	dcc00615 	stw	r19,24(sp)
  8011b4:	dfc00c15 	stw	ra,48(sp)
  8011b8:	dd400815 	stw	r21,32(sp)
  8011bc:	dd000715 	stw	r20,28(sp)
  8011c0:	dc800515 	stw	r18,20(sp)
  8011c4:	dc400415 	stw	r17,16(sp)
  8011c8:	2c20703a 	and	r16,r5,r16
  8011cc:	10bfffc4 	addi	r2,r2,-1
  8011d0:	2827883a 	mov	r19,r5
  8011d4:	202d883a 	mov	r22,r4
  8011d8:	302f883a 	mov	r23,r6
  8011dc:	3839883a 	mov	fp,r7
  8011e0:	14007516 	blt	r2,r16,8013b8 <__kernel_cos+0x228>
  8011e4:	080487c0 	call	80487c <__fixdfsi>
  8011e8:	10010f26 	beq	r2,zero,801628 <__kernel_cos+0x498>
  8011ec:	b00d883a 	mov	r6,r22
  8011f0:	980f883a 	mov	r7,r19
  8011f4:	b009883a 	mov	r4,r22
  8011f8:	980b883a 	mov	r5,r19
  8011fc:	08038680 	call	803868 <__muldf3>
  801200:	01afa234 	movhi	r6,48776
  801204:	01ef6a74 	movhi	r7,48553
  801208:	318e3504 	addi	r6,r6,14548
  80120c:	39feba44 	addi	r7,r7,-1303
  801210:	1009883a 	mov	r4,r2
  801214:	180b883a 	mov	r5,r3
  801218:	102b883a 	mov	r21,r2
  80121c:	1829883a 	mov	r20,r3
  801220:	08038680 	call	803868 <__muldf3>
  801224:	01af6d74 	movhi	r6,48565
  801228:	01cf88b4 	movhi	r7,15906
  80122c:	31ac7104 	addi	r6,r6,-20028
  801230:	39fba784 	addi	r7,r7,-4450
  801234:	1009883a 	mov	r4,r2
  801238:	180b883a 	mov	r5,r3
  80123c:	0802e580 	call	802e58 <__adddf3>
  801240:	a80d883a 	mov	r6,r21
  801244:	a00f883a 	mov	r7,r20
  801248:	1009883a 	mov	r4,r2
  80124c:	180b883a 	mov	r5,r3
  801250:	08038680 	call	803868 <__muldf3>
  801254:	01a02734 	movhi	r6,32924
  801258:	01cfa4b4 	movhi	r7,16018
  80125c:	3194ab44 	addi	r6,r6,21165
  801260:	39df93c4 	addi	r7,r7,32335
  801264:	1009883a 	mov	r4,r2
  801268:	180b883a 	mov	r5,r3
  80126c:	0803f800 	call	803f80 <__subdf3>
  801270:	a80d883a 	mov	r6,r21
  801274:	a00f883a 	mov	r7,r20
  801278:	1009883a 	mov	r4,r2
  80127c:	180b883a 	mov	r5,r3
  801280:	08038680 	call	803868 <__muldf3>
  801284:	018672f4 	movhi	r6,6603
  801288:	01cfbeb4 	movhi	r7,16122
  80128c:	31856404 	addi	r6,r6,5520
  801290:	39c06804 	addi	r7,r7,416
  801294:	1009883a 	mov	r4,r2
  801298:	180b883a 	mov	r5,r3
  80129c:	0802e580 	call	802e58 <__adddf3>
  8012a0:	a80d883a 	mov	r6,r21
  8012a4:	a00f883a 	mov	r7,r20
  8012a8:	1009883a 	mov	r4,r2
  8012ac:	180b883a 	mov	r5,r3
  8012b0:	08038680 	call	803868 <__muldf3>
  8012b4:	0185b074 	movhi	r6,5825
  8012b8:	01cfd5f4 	movhi	r7,16215
  8012bc:	31945dc4 	addi	r6,r6,20855
  8012c0:	39f05b04 	addi	r7,r7,-16020
  8012c4:	1009883a 	mov	r4,r2
  8012c8:	180b883a 	mov	r5,r3
  8012cc:	0803f800 	call	803f80 <__subdf3>
  8012d0:	a80d883a 	mov	r6,r21
  8012d4:	a00f883a 	mov	r7,r20
  8012d8:	1009883a 	mov	r4,r2
  8012dc:	180b883a 	mov	r5,r3
  8012e0:	08038680 	call	803868 <__muldf3>
  8012e4:	01955574 	movhi	r6,21845
  8012e8:	01cfe974 	movhi	r7,16293
  8012ec:	31955304 	addi	r6,r6,21836
  8012f0:	39d55544 	addi	r7,r7,21845
  8012f4:	1009883a 	mov	r4,r2
  8012f8:	180b883a 	mov	r5,r3
  8012fc:	0802e580 	call	802e58 <__adddf3>
  801300:	a80d883a 	mov	r6,r21
  801304:	a00f883a 	mov	r7,r20
  801308:	1009883a 	mov	r4,r2
  80130c:	180b883a 	mov	r5,r3
  801310:	08038680 	call	803868 <__muldf3>
  801314:	1017883a 	mov	r11,r2
  801318:	1815883a 	mov	r10,r3
  80131c:	a809883a 	mov	r4,r21
  801320:	a00b883a 	mov	r5,r20
  801324:	000d883a 	mov	r6,zero
  801328:	01cff834 	movhi	r7,16352
  80132c:	da800215 	stw	r10,8(sp)
  801330:	dac00115 	stw	r11,4(sp)
  801334:	08038680 	call	803868 <__muldf3>
  801338:	dac00117 	ldw	r11,4(sp)
  80133c:	da800217 	ldw	r10,8(sp)
  801340:	a809883a 	mov	r4,r21
  801344:	580d883a 	mov	r6,r11
  801348:	500f883a 	mov	r7,r10
  80134c:	a00b883a 	mov	r5,r20
  801350:	1023883a 	mov	r17,r2
  801354:	1821883a 	mov	r16,r3
  801358:	08038680 	call	803868 <__muldf3>
  80135c:	b80d883a 	mov	r6,r23
  801360:	e00f883a 	mov	r7,fp
  801364:	b009883a 	mov	r4,r22
  801368:	980b883a 	mov	r5,r19
  80136c:	1029883a 	mov	r20,r2
  801370:	1825883a 	mov	r18,r3
  801374:	08038680 	call	803868 <__muldf3>
  801378:	a009883a 	mov	r4,r20
  80137c:	900b883a 	mov	r5,r18
  801380:	100d883a 	mov	r6,r2
  801384:	180f883a 	mov	r7,r3
  801388:	0803f800 	call	803f80 <__subdf3>
  80138c:	8809883a 	mov	r4,r17
  801390:	800b883a 	mov	r5,r16
  801394:	100d883a 	mov	r6,r2
  801398:	180f883a 	mov	r7,r3
  80139c:	0803f800 	call	803f80 <__subdf3>
  8013a0:	100d883a 	mov	r6,r2
  8013a4:	180f883a 	mov	r7,r3
  8013a8:	0009883a 	mov	r4,zero
  8013ac:	014ffc34 	movhi	r5,16368
  8013b0:	0803f800 	call	803f80 <__subdf3>
  8013b4:	00008b06 	br	8015e4 <__kernel_cos+0x454>
  8013b8:	200d883a 	mov	r6,r4
  8013bc:	280f883a 	mov	r7,r5
  8013c0:	08038680 	call	803868 <__muldf3>
  8013c4:	01afa234 	movhi	r6,48776
  8013c8:	01ef6a74 	movhi	r7,48553
  8013cc:	318e3504 	addi	r6,r6,14548
  8013d0:	39feba44 	addi	r7,r7,-1303
  8013d4:	1009883a 	mov	r4,r2
  8013d8:	180b883a 	mov	r5,r3
  8013dc:	1025883a 	mov	r18,r2
  8013e0:	1823883a 	mov	r17,r3
  8013e4:	08038680 	call	803868 <__muldf3>
  8013e8:	01af6d74 	movhi	r6,48565
  8013ec:	01cf88b4 	movhi	r7,15906
  8013f0:	31ac7104 	addi	r6,r6,-20028
  8013f4:	39fba784 	addi	r7,r7,-4450
  8013f8:	1009883a 	mov	r4,r2
  8013fc:	180b883a 	mov	r5,r3
  801400:	0802e580 	call	802e58 <__adddf3>
  801404:	900d883a 	mov	r6,r18
  801408:	880f883a 	mov	r7,r17
  80140c:	1009883a 	mov	r4,r2
  801410:	180b883a 	mov	r5,r3
  801414:	08038680 	call	803868 <__muldf3>
  801418:	01a02734 	movhi	r6,32924
  80141c:	01cfa4b4 	movhi	r7,16018
  801420:	3194ab44 	addi	r6,r6,21165
  801424:	39df93c4 	addi	r7,r7,32335
  801428:	1009883a 	mov	r4,r2
  80142c:	180b883a 	mov	r5,r3
  801430:	0803f800 	call	803f80 <__subdf3>
  801434:	900d883a 	mov	r6,r18
  801438:	880f883a 	mov	r7,r17
  80143c:	1009883a 	mov	r4,r2
  801440:	180b883a 	mov	r5,r3
  801444:	08038680 	call	803868 <__muldf3>
  801448:	018672f4 	movhi	r6,6603
  80144c:	01cfbeb4 	movhi	r7,16122
  801450:	31856404 	addi	r6,r6,5520
  801454:	39c06804 	addi	r7,r7,416
  801458:	1009883a 	mov	r4,r2
  80145c:	180b883a 	mov	r5,r3
  801460:	0802e580 	call	802e58 <__adddf3>
  801464:	900d883a 	mov	r6,r18
  801468:	880f883a 	mov	r7,r17
  80146c:	1009883a 	mov	r4,r2
  801470:	180b883a 	mov	r5,r3
  801474:	08038680 	call	803868 <__muldf3>
  801478:	0185b074 	movhi	r6,5825
  80147c:	01cfd5f4 	movhi	r7,16215
  801480:	31945dc4 	addi	r6,r6,20855
  801484:	39f05b04 	addi	r7,r7,-16020
  801488:	1009883a 	mov	r4,r2
  80148c:	180b883a 	mov	r5,r3
  801490:	0803f800 	call	803f80 <__subdf3>
  801494:	900d883a 	mov	r6,r18
  801498:	880f883a 	mov	r7,r17
  80149c:	1009883a 	mov	r4,r2
  8014a0:	180b883a 	mov	r5,r3
  8014a4:	08038680 	call	803868 <__muldf3>
  8014a8:	01955574 	movhi	r6,21845
  8014ac:	01cfe974 	movhi	r7,16293
  8014b0:	31955304 	addi	r6,r6,21836
  8014b4:	39d55544 	addi	r7,r7,21845
  8014b8:	1009883a 	mov	r4,r2
  8014bc:	180b883a 	mov	r5,r3
  8014c0:	0802e580 	call	802e58 <__adddf3>
  8014c4:	900d883a 	mov	r6,r18
  8014c8:	880f883a 	mov	r7,r17
  8014cc:	1009883a 	mov	r4,r2
  8014d0:	180b883a 	mov	r5,r3
  8014d4:	08038680 	call	803868 <__muldf3>
  8014d8:	1013883a 	mov	r9,r2
  8014dc:	1017883a 	mov	r11,r2
  8014e0:	008ff4f4 	movhi	r2,16339
  8014e4:	108ccc84 	addi	r2,r2,13106
  8014e8:	1811883a 	mov	r8,r3
  8014ec:	902b883a 	mov	r21,r18
  8014f0:	8829883a 	mov	r20,r17
  8014f4:	1815883a 	mov	r10,r3
  8014f8:	143f880e 	bge	r2,r16,80131c <__alt_data_end+0xff80131c>
  8014fc:	008ffa74 	movhi	r2,16361
  801500:	14004416 	blt	r2,r16,801614 <__kernel_cos+0x484>
  801504:	00bff834 	movhi	r2,65504
  801508:	80a1883a 	add	r16,r16,r2
  80150c:	000d883a 	mov	r6,zero
  801510:	800f883a 	mov	r7,r16
  801514:	0009883a 	mov	r4,zero
  801518:	014ffc34 	movhi	r5,16368
  80151c:	da400115 	stw	r9,4(sp)
  801520:	d8c00215 	stw	r3,8(sp)
  801524:	0803f800 	call	803f80 <__subdf3>
  801528:	da000217 	ldw	r8,8(sp)
  80152c:	da400117 	ldw	r9,4(sp)
  801530:	102b883a 	mov	r21,r2
  801534:	d8c00015 	stw	r3,0(sp)
  801538:	9009883a 	mov	r4,r18
  80153c:	880b883a 	mov	r5,r17
  801540:	000d883a 	mov	r6,zero
  801544:	01cff834 	movhi	r7,16352
  801548:	da000215 	stw	r8,8(sp)
  80154c:	da400115 	stw	r9,4(sp)
  801550:	08038680 	call	803868 <__muldf3>
  801554:	800f883a 	mov	r7,r16
  801558:	000d883a 	mov	r6,zero
  80155c:	1009883a 	mov	r4,r2
  801560:	180b883a 	mov	r5,r3
  801564:	0803f800 	call	803f80 <__subdf3>
  801568:	da400117 	ldw	r9,4(sp)
  80156c:	da000217 	ldw	r8,8(sp)
  801570:	9009883a 	mov	r4,r18
  801574:	480d883a 	mov	r6,r9
  801578:	400f883a 	mov	r7,r8
  80157c:	880b883a 	mov	r5,r17
  801580:	1029883a 	mov	r20,r2
  801584:	1821883a 	mov	r16,r3
  801588:	08038680 	call	803868 <__muldf3>
  80158c:	b80d883a 	mov	r6,r23
  801590:	e00f883a 	mov	r7,fp
  801594:	b009883a 	mov	r4,r22
  801598:	980b883a 	mov	r5,r19
  80159c:	1025883a 	mov	r18,r2
  8015a0:	1823883a 	mov	r17,r3
  8015a4:	08038680 	call	803868 <__muldf3>
  8015a8:	100d883a 	mov	r6,r2
  8015ac:	180f883a 	mov	r7,r3
  8015b0:	9009883a 	mov	r4,r18
  8015b4:	880b883a 	mov	r5,r17
  8015b8:	0803f800 	call	803f80 <__subdf3>
  8015bc:	100d883a 	mov	r6,r2
  8015c0:	180f883a 	mov	r7,r3
  8015c4:	a009883a 	mov	r4,r20
  8015c8:	800b883a 	mov	r5,r16
  8015cc:	0803f800 	call	803f80 <__subdf3>
  8015d0:	d9400017 	ldw	r5,0(sp)
  8015d4:	100d883a 	mov	r6,r2
  8015d8:	180f883a 	mov	r7,r3
  8015dc:	a809883a 	mov	r4,r21
  8015e0:	0803f800 	call	803f80 <__subdf3>
  8015e4:	dfc00c17 	ldw	ra,48(sp)
  8015e8:	df000b17 	ldw	fp,44(sp)
  8015ec:	ddc00a17 	ldw	r23,40(sp)
  8015f0:	dd800917 	ldw	r22,36(sp)
  8015f4:	dd400817 	ldw	r21,32(sp)
  8015f8:	dd000717 	ldw	r20,28(sp)
  8015fc:	dcc00617 	ldw	r19,24(sp)
  801600:	dc800517 	ldw	r18,20(sp)
  801604:	dc400417 	ldw	r17,16(sp)
  801608:	dc000317 	ldw	r16,12(sp)
  80160c:	dec00d04 	addi	sp,sp,52
  801610:	f800283a 	ret
  801614:	008ff9f4 	movhi	r2,16359
  801618:	002b883a 	mov	r21,zero
  80161c:	d8800015 	stw	r2,0(sp)
  801620:	040ff4b4 	movhi	r16,16338
  801624:	003fc406 	br	801538 <__alt_data_end+0xff801538>
  801628:	0005883a 	mov	r2,zero
  80162c:	00cffc34 	movhi	r3,16368
  801630:	003fec06 	br	8015e4 <__alt_data_end+0xff8015e4>

00801634 <__kernel_rem_pio2>:
  801634:	deff5a04 	addi	sp,sp,-664
  801638:	da00a617 	ldw	r8,664(sp)
  80163c:	00c02074 	movhi	r3,129
  801640:	18c8be04 	addi	r3,r3,8952
  801644:	4205883a 	add	r2,r8,r8
  801648:	1085883a 	add	r2,r2,r2
  80164c:	1885883a 	add	r2,r3,r2
  801650:	d9008e15 	stw	r4,568(sp)
  801654:	d9408f15 	stw	r5,572(sp)
  801658:	313fff44 	addi	r4,r6,-3
  80165c:	01400604 	movi	r5,24
  801660:	dd80a215 	stw	r22,648(sp)
  801664:	dc009c15 	stw	r16,624(sp)
  801668:	dfc0a515 	stw	ra,660(sp)
  80166c:	df00a415 	stw	fp,656(sp)
  801670:	ddc0a315 	stw	r23,652(sp)
  801674:	dd40a115 	stw	r21,644(sp)
  801678:	dd00a015 	stw	r20,640(sp)
  80167c:	dcc09f15 	stw	r19,636(sp)
  801680:	dc809e15 	stw	r18,632(sp)
  801684:	dc409d15 	stw	r17,628(sp)
  801688:	3021883a 	mov	r16,r6
  80168c:	d9c09315 	stw	r7,588(sp)
  801690:	15800017 	ldw	r22,0(r2)
  801694:	0802a480 	call	802a48 <__divsi3>
  801698:	da009317 	ldw	r8,588(sp)
  80169c:	d8809215 	stw	r2,584(sp)
  8016a0:	423fffc4 	addi	r8,r8,-1
  8016a4:	da008d15 	stw	r8,564(sp)
  8016a8:	10033b16 	blt	r2,zero,802398 <__kernel_rem_pio2+0xd64>
  8016ac:	da009217 	ldw	r8,584(sp)
  8016b0:	d9009217 	ldw	r4,584(sp)
  8016b4:	42000044 	addi	r8,r8,1
  8016b8:	40fffa24 	muli	r3,r8,-24
  8016bc:	da009515 	stw	r8,596(sp)
  8016c0:	da008d17 	ldw	r8,564(sp)
  8016c4:	1c07883a 	add	r3,r3,r16
  8016c8:	d8c09015 	stw	r3,576(sp)
  8016cc:	b205883a 	add	r2,r22,r8
  8016d0:	2223c83a 	sub	r17,r4,r8
  8016d4:	10001016 	blt	r2,zero,801718 <__kernel_rem_pio2+0xe4>
  8016d8:	da00a717 	ldw	r8,668(sp)
  8016dc:	8c65883a 	add	r18,r17,r17
  8016e0:	94a5883a 	add	r18,r18,r18
  8016e4:	1445883a 	add	r2,r2,r17
  8016e8:	dcc05004 	addi	r19,sp,320
  8016ec:	44a5883a 	add	r18,r8,r18
  8016f0:	14000044 	addi	r16,r2,1
  8016f4:	88015316 	blt	r17,zero,801c44 <__kernel_rem_pio2+0x610>
  8016f8:	91000017 	ldw	r4,0(r18)
  8016fc:	08048fc0 	call	8048fc <__floatsidf>
  801700:	98800015 	stw	r2,0(r19)
  801704:	98c00115 	stw	r3,4(r19)
  801708:	8c400044 	addi	r17,r17,1
  80170c:	9cc00204 	addi	r19,r19,8
  801710:	94800104 	addi	r18,r18,4
  801714:	8c3ff71e 	bne	r17,r16,8016f4 <__alt_data_end+0xff8016f4>
  801718:	b0002816 	blt	r22,zero,8017bc <__kernel_rem_pio2+0x188>
  80171c:	da008d17 	ldw	r8,564(sp)
  801720:	b4c00044 	addi	r19,r22,1
  801724:	982690fa 	slli	r19,r19,3
  801728:	402490fa 	slli	r18,r8,3
  80172c:	da008e17 	ldw	r8,568(sp)
  801730:	d8805004 	addi	r2,sp,320
  801734:	94000204 	addi	r16,r18,8
  801738:	d823883a 	mov	r17,sp
  80173c:	14a5883a 	add	r18,r2,r18
  801740:	dcef883a 	add	r23,sp,r19
  801744:	4421883a 	add	r16,r8,r16
  801748:	dd809115 	stw	r22,580(sp)
  80174c:	4039883a 	mov	fp,r8
  801750:	da008d17 	ldw	r8,564(sp)
  801754:	40016016 	blt	r8,zero,801cd8 <__kernel_rem_pio2+0x6a4>
  801758:	e027883a 	mov	r19,fp
  80175c:	9029883a 	mov	r20,r18
  801760:	002d883a 	mov	r22,zero
  801764:	002b883a 	mov	r21,zero
  801768:	a1800017 	ldw	r6,0(r20)
  80176c:	a1c00117 	ldw	r7,4(r20)
  801770:	99000017 	ldw	r4,0(r19)
  801774:	99400117 	ldw	r5,4(r19)
  801778:	9cc00204 	addi	r19,r19,8
  80177c:	a53ffe04 	addi	r20,r20,-8
  801780:	08038680 	call	803868 <__muldf3>
  801784:	b009883a 	mov	r4,r22
  801788:	a80b883a 	mov	r5,r21
  80178c:	100d883a 	mov	r6,r2
  801790:	180f883a 	mov	r7,r3
  801794:	0802e580 	call	802e58 <__adddf3>
  801798:	102d883a 	mov	r22,r2
  80179c:	182b883a 	mov	r21,r3
  8017a0:	9c3ff11e 	bne	r19,r16,801768 <__alt_data_end+0xff801768>
  8017a4:	8d800015 	stw	r22,0(r17)
  8017a8:	8d400115 	stw	r21,4(r17)
  8017ac:	8c400204 	addi	r17,r17,8
  8017b0:	94800204 	addi	r18,r18,8
  8017b4:	8dffe61e 	bne	r17,r23,801750 <__alt_data_end+0xff801750>
  8017b8:	dd809117 	ldw	r22,580(sp)
  8017bc:	00d00034 	movhi	r3,16384
  8017c0:	da009317 	ldw	r8,588(sp)
  8017c4:	18ffff84 	addi	r3,r3,-2
  8017c8:	b0c7883a 	add	r3,r22,r3
  8017cc:	18c7883a 	add	r3,r3,r3
  8017d0:	402090fa 	slli	r16,r8,3
  8017d4:	18c7883a 	add	r3,r3,r3
  8017d8:	da007804 	addi	r8,sp,480
  8017dc:	40d1883a 	add	r8,r8,r3
  8017e0:	b0bfffc4 	addi	r2,r22,-1
  8017e4:	da009615 	stw	r8,600(sp)
  8017e8:	da008e17 	ldw	r8,568(sp)
  8017ec:	1085883a 	add	r2,r2,r2
  8017f0:	1085883a 	add	r2,r2,r2
  8017f4:	19000104 	addi	r4,r3,4
  8017f8:	d885883a 	add	r2,sp,r2
  8017fc:	4421883a 	add	r16,r8,r16
  801800:	da007804 	addi	r8,sp,480
  801804:	4111883a 	add	r8,r8,r4
  801808:	10807804 	addi	r2,r2,480
  80180c:	da009715 	stw	r8,604(sp)
  801810:	b025883a 	mov	r18,r22
  801814:	d8809815 	stw	r2,608(sp)
  801818:	dd809415 	stw	r22,592(sp)
  80181c:	900490fa 	slli	r2,r18,3
  801820:	d885883a 	add	r2,sp,r2
  801824:	17000017 	ldw	fp,0(r2)
  801828:	15400117 	ldw	r21,4(r2)
  80182c:	04802b0e 	bge	zero,r18,8018dc <__kernel_rem_pio2+0x2a8>
  801830:	00880034 	movhi	r2,8192
  801834:	10bfffc4 	addi	r2,r2,-1
  801838:	90a9883a 	add	r20,r18,r2
  80183c:	a02890fa 	slli	r20,r20,3
  801840:	dc407804 	addi	r17,sp,480
  801844:	dcfffe04 	addi	r19,sp,-8
  801848:	dd29883a 	add	r20,sp,r20
  80184c:	000d883a 	mov	r6,zero
  801850:	01cf9c34 	movhi	r7,15984
  801854:	e009883a 	mov	r4,fp
  801858:	a80b883a 	mov	r5,r21
  80185c:	08038680 	call	803868 <__muldf3>
  801860:	180b883a 	mov	r5,r3
  801864:	1009883a 	mov	r4,r2
  801868:	080487c0 	call	80487c <__fixdfsi>
  80186c:	1009883a 	mov	r4,r2
  801870:	08048fc0 	call	8048fc <__floatsidf>
  801874:	000d883a 	mov	r6,zero
  801878:	01d05c34 	movhi	r7,16752
  80187c:	1009883a 	mov	r4,r2
  801880:	180b883a 	mov	r5,r3
  801884:	102f883a 	mov	r23,r2
  801888:	182d883a 	mov	r22,r3
  80188c:	08038680 	call	803868 <__muldf3>
  801890:	100d883a 	mov	r6,r2
  801894:	180f883a 	mov	r7,r3
  801898:	e009883a 	mov	r4,fp
  80189c:	a80b883a 	mov	r5,r21
  8018a0:	0803f800 	call	803f80 <__subdf3>
  8018a4:	180b883a 	mov	r5,r3
  8018a8:	1009883a 	mov	r4,r2
  8018ac:	080487c0 	call	80487c <__fixdfsi>
  8018b0:	a1800017 	ldw	r6,0(r20)
  8018b4:	a1c00117 	ldw	r7,4(r20)
  8018b8:	88800015 	stw	r2,0(r17)
  8018bc:	b809883a 	mov	r4,r23
  8018c0:	b00b883a 	mov	r5,r22
  8018c4:	0802e580 	call	802e58 <__adddf3>
  8018c8:	a53ffe04 	addi	r20,r20,-8
  8018cc:	1039883a 	mov	fp,r2
  8018d0:	182b883a 	mov	r21,r3
  8018d4:	8c400104 	addi	r17,r17,4
  8018d8:	a4ffdc1e 	bne	r20,r19,80184c <__alt_data_end+0xff80184c>
  8018dc:	d9809017 	ldw	r6,576(sp)
  8018e0:	a80b883a 	mov	r5,r21
  8018e4:	e009883a 	mov	r4,fp
  8018e8:	08028900 	call	802890 <scalbn>
  8018ec:	000d883a 	mov	r6,zero
  8018f0:	01cff034 	movhi	r7,16320
  8018f4:	1009883a 	mov	r4,r2
  8018f8:	180b883a 	mov	r5,r3
  8018fc:	1027883a 	mov	r19,r2
  801900:	1823883a 	mov	r17,r3
  801904:	08038680 	call	803868 <__muldf3>
  801908:	1009883a 	mov	r4,r2
  80190c:	180b883a 	mov	r5,r3
  801910:	08026a40 	call	8026a4 <floor>
  801914:	000d883a 	mov	r6,zero
  801918:	01d00834 	movhi	r7,16416
  80191c:	1009883a 	mov	r4,r2
  801920:	180b883a 	mov	r5,r3
  801924:	08038680 	call	803868 <__muldf3>
  801928:	100d883a 	mov	r6,r2
  80192c:	180f883a 	mov	r7,r3
  801930:	9809883a 	mov	r4,r19
  801934:	880b883a 	mov	r5,r17
  801938:	0803f800 	call	803f80 <__subdf3>
  80193c:	180b883a 	mov	r5,r3
  801940:	1009883a 	mov	r4,r2
  801944:	1827883a 	mov	r19,r3
  801948:	1029883a 	mov	r20,r2
  80194c:	080487c0 	call	80487c <__fixdfsi>
  801950:	1009883a 	mov	r4,r2
  801954:	1023883a 	mov	r17,r2
  801958:	08048fc0 	call	8048fc <__floatsidf>
  80195c:	a009883a 	mov	r4,r20
  801960:	100d883a 	mov	r6,r2
  801964:	180f883a 	mov	r7,r3
  801968:	980b883a 	mov	r5,r19
  80196c:	0803f800 	call	803f80 <__subdf3>
  801970:	d9009017 	ldw	r4,576(sp)
  801974:	1013883a 	mov	r9,r2
  801978:	102b883a 	mov	r21,r2
  80197c:	1811883a 	mov	r8,r3
  801980:	0100b30e 	bge	zero,r4,801c50 <__kernel_rem_pio2+0x61c>
  801984:	90bfffc4 	addi	r2,r18,-1
  801988:	1085883a 	add	r2,r2,r2
  80198c:	1085883a 	add	r2,r2,r2
  801990:	d885883a 	add	r2,sp,r2
  801994:	10807804 	addi	r2,r2,480
  801998:	d9809017 	ldw	r6,576(sp)
  80199c:	11400017 	ldw	r5,0(r2)
  8019a0:	01000604 	movi	r4,24
  8019a4:	2189c83a 	sub	r4,r4,r6
  8019a8:	290dd83a 	sra	r6,r5,r4
  8019ac:	d9c09017 	ldw	r7,576(sp)
  8019b0:	04c005c4 	movi	r19,23
  8019b4:	3108983a 	sll	r4,r6,r4
  8019b8:	99e7c83a 	sub	r19,r19,r7
  8019bc:	89a3883a 	add	r17,r17,r6
  8019c0:	2909c83a 	sub	r4,r5,r4
  8019c4:	24e7d83a 	sra	r19,r4,r19
  8019c8:	11000015 	stw	r4,0(r2)
  8019cc:	04c02a0e 	bge	zero,r19,801a78 <__kernel_rem_pio2+0x444>
  8019d0:	8c400044 	addi	r17,r17,1
  8019d4:	0481570e 	bge	zero,r18,801f34 <__kernel_rem_pio2+0x900>
  8019d8:	02804034 	movhi	r10,256
  8019dc:	52bfffc4 	addi	r10,r10,-1
  8019e0:	d8807804 	addi	r2,sp,480
  8019e4:	000b883a 	mov	r5,zero
  8019e8:	0029883a 	mov	r20,zero
  8019ec:	01c04034 	movhi	r7,256
  8019f0:	00000706 	br	801a10 <__kernel_rem_pio2+0x3dc>
  8019f4:	390dc83a 	sub	r6,r7,r4
  8019f8:	20000226 	beq	r4,zero,801a04 <__kernel_rem_pio2+0x3d0>
  8019fc:	11800015 	stw	r6,0(r2)
  801a00:	05000044 	movi	r20,1
  801a04:	29400044 	addi	r5,r5,1
  801a08:	10800104 	addi	r2,r2,4
  801a0c:	2c80080e 	bge	r5,r18,801a30 <__kernel_rem_pio2+0x3fc>
  801a10:	11000017 	ldw	r4,0(r2)
  801a14:	a03ff726 	beq	r20,zero,8019f4 <__alt_data_end+0xff8019f4>
  801a18:	5109c83a 	sub	r4,r10,r4
  801a1c:	11000015 	stw	r4,0(r2)
  801a20:	29400044 	addi	r5,r5,1
  801a24:	05000044 	movi	r20,1
  801a28:	10800104 	addi	r2,r2,4
  801a2c:	2cbff816 	blt	r5,r18,801a10 <__alt_data_end+0xff801a10>
  801a30:	d9009017 	ldw	r4,576(sp)
  801a34:	01000e0e 	bge	zero,r4,801a70 <__kernel_rem_pio2+0x43c>
  801a38:	00800044 	movi	r2,1
  801a3c:	20808d26 	beq	r4,r2,801c74 <__kernel_rem_pio2+0x640>
  801a40:	00800084 	movi	r2,2
  801a44:	20800a1e 	bne	r4,r2,801a70 <__kernel_rem_pio2+0x43c>
  801a48:	90bfffc4 	addi	r2,r18,-1
  801a4c:	1085883a 	add	r2,r2,r2
  801a50:	1085883a 	add	r2,r2,r2
  801a54:	d885883a 	add	r2,sp,r2
  801a58:	10807804 	addi	r2,r2,480
  801a5c:	11400017 	ldw	r5,0(r2)
  801a60:	01001034 	movhi	r4,64
  801a64:	213fffc4 	addi	r4,r4,-1
  801a68:	2908703a 	and	r4,r5,r4
  801a6c:	11000015 	stw	r4,0(r2)
  801a70:	00800084 	movi	r2,2
  801a74:	98805d26 	beq	r19,r2,801bec <__kernel_rem_pio2+0x5b8>
  801a78:	400b883a 	mov	r5,r8
  801a7c:	000d883a 	mov	r6,zero
  801a80:	000f883a 	mov	r7,zero
  801a84:	a809883a 	mov	r4,r21
  801a88:	da009b15 	stw	r8,620(sp)
  801a8c:	08037040 	call	803704 <__eqdf2>
  801a90:	da009b17 	ldw	r8,620(sp)
  801a94:	10012b1e 	bne	r2,zero,801f44 <__kernel_rem_pio2+0x910>
  801a98:	da009417 	ldw	r8,592(sp)
  801a9c:	917fffc4 	addi	r5,r18,-1
  801aa0:	2a000e16 	blt	r5,r8,801adc <__kernel_rem_pio2+0x4a8>
  801aa4:	00900034 	movhi	r2,16384
  801aa8:	10bfffc4 	addi	r2,r2,-1
  801aac:	9085883a 	add	r2,r18,r2
  801ab0:	1085883a 	add	r2,r2,r2
  801ab4:	d9809717 	ldw	r6,604(sp)
  801ab8:	1085883a 	add	r2,r2,r2
  801abc:	d9007804 	addi	r4,sp,480
  801ac0:	0007883a 	mov	r3,zero
  801ac4:	2085883a 	add	r2,r4,r2
  801ac8:	11000017 	ldw	r4,0(r2)
  801acc:	10bfff04 	addi	r2,r2,-4
  801ad0:	1906b03a 	or	r3,r3,r4
  801ad4:	11bffc1e 	bne	r2,r6,801ac8 <__alt_data_end+0xff801ac8>
  801ad8:	1800821e 	bne	r3,zero,801ce4 <__kernel_rem_pio2+0x6b0>
  801adc:	da009817 	ldw	r8,608(sp)
  801ae0:	40800017 	ldw	r2,0(r8)
  801ae4:	1001151e 	bne	r2,zero,801f3c <__kernel_rem_pio2+0x908>
  801ae8:	d8809617 	ldw	r2,600(sp)
  801aec:	05000044 	movi	r20,1
  801af0:	10bfff04 	addi	r2,r2,-4
  801af4:	10c00117 	ldw	r3,4(r2)
  801af8:	a5000044 	addi	r20,r20,1
  801afc:	183ffc26 	beq	r3,zero,801af0 <__alt_data_end+0xff801af0>
  801b00:	9529883a 	add	r20,r18,r20
  801b04:	90800044 	addi	r2,r18,1
  801b08:	dd009115 	stw	r20,580(sp)
  801b0c:	a0803216 	blt	r20,r2,801bd8 <__kernel_rem_pio2+0x5a4>
  801b10:	da009317 	ldw	r8,588(sp)
  801b14:	d8c09117 	ldw	r3,580(sp)
  801b18:	44a3883a 	add	r17,r8,r18
  801b1c:	da009217 	ldw	r8,584(sp)
  801b20:	882290fa 	slli	r17,r17,3
  801b24:	40a5883a 	add	r18,r8,r2
  801b28:	da009517 	ldw	r8,596(sp)
  801b2c:	100490fa 	slli	r2,r2,3
  801b30:	94a5883a 	add	r18,r18,r18
  801b34:	40eb883a 	add	r21,r8,r3
  801b38:	da00a717 	ldw	r8,668(sp)
  801b3c:	ad6b883a 	add	r21,r21,r21
  801b40:	94a5883a 	add	r18,r18,r18
  801b44:	ad6b883a 	add	r21,r21,r21
  801b48:	d8c05004 	addi	r3,sp,320
  801b4c:	44a5883a 	add	r18,r8,r18
  801b50:	1c63883a 	add	r17,r3,r17
  801b54:	d8a7883a 	add	r19,sp,r2
  801b58:	456b883a 	add	r21,r8,r21
  801b5c:	91000017 	ldw	r4,0(r18)
  801b60:	08048fc0 	call	8048fc <__floatsidf>
  801b64:	da008d17 	ldw	r8,564(sp)
  801b68:	88800015 	stw	r2,0(r17)
  801b6c:	88c00115 	stw	r3,4(r17)
  801b70:	40001b16 	blt	r8,zero,801be0 <__kernel_rem_pio2+0x5ac>
  801b74:	dd008e17 	ldw	r20,568(sp)
  801b78:	882d883a 	mov	r22,r17
  801b7c:	002f883a 	mov	r23,zero
  801b80:	0039883a 	mov	fp,zero
  801b84:	b1800017 	ldw	r6,0(r22)
  801b88:	b1c00117 	ldw	r7,4(r22)
  801b8c:	a1000017 	ldw	r4,0(r20)
  801b90:	a1400117 	ldw	r5,4(r20)
  801b94:	a5000204 	addi	r20,r20,8
  801b98:	b5bffe04 	addi	r22,r22,-8
  801b9c:	08038680 	call	803868 <__muldf3>
  801ba0:	b809883a 	mov	r4,r23
  801ba4:	e00b883a 	mov	r5,fp
  801ba8:	100d883a 	mov	r6,r2
  801bac:	180f883a 	mov	r7,r3
  801bb0:	0802e580 	call	802e58 <__adddf3>
  801bb4:	102f883a 	mov	r23,r2
  801bb8:	1839883a 	mov	fp,r3
  801bbc:	a43ff11e 	bne	r20,r16,801b84 <__alt_data_end+0xff801b84>
  801bc0:	9dc00015 	stw	r23,0(r19)
  801bc4:	9f000115 	stw	fp,4(r19)
  801bc8:	94800104 	addi	r18,r18,4
  801bcc:	8c400204 	addi	r17,r17,8
  801bd0:	9cc00204 	addi	r19,r19,8
  801bd4:	957fe11e 	bne	r18,r21,801b5c <__alt_data_end+0xff801b5c>
  801bd8:	dc809117 	ldw	r18,580(sp)
  801bdc:	003f0f06 	br	80181c <__alt_data_end+0xff80181c>
  801be0:	002f883a 	mov	r23,zero
  801be4:	0039883a 	mov	fp,zero
  801be8:	003ff506 	br	801bc0 <__alt_data_end+0xff801bc0>
  801bec:	480d883a 	mov	r6,r9
  801bf0:	180f883a 	mov	r7,r3
  801bf4:	0009883a 	mov	r4,zero
  801bf8:	014ffc34 	movhi	r5,16368
  801bfc:	0803f800 	call	803f80 <__subdf3>
  801c00:	102b883a 	mov	r21,r2
  801c04:	1811883a 	mov	r8,r3
  801c08:	a03f9b26 	beq	r20,zero,801a78 <__alt_data_end+0xff801a78>
  801c0c:	d9809017 	ldw	r6,576(sp)
  801c10:	0009883a 	mov	r4,zero
  801c14:	014ffc34 	movhi	r5,16368
  801c18:	d8c09b15 	stw	r3,620(sp)
  801c1c:	08028900 	call	802890 <scalbn>
  801c20:	da009b17 	ldw	r8,620(sp)
  801c24:	a809883a 	mov	r4,r21
  801c28:	100d883a 	mov	r6,r2
  801c2c:	400b883a 	mov	r5,r8
  801c30:	180f883a 	mov	r7,r3
  801c34:	0803f800 	call	803f80 <__subdf3>
  801c38:	102b883a 	mov	r21,r2
  801c3c:	1811883a 	mov	r8,r3
  801c40:	003f8d06 	br	801a78 <__alt_data_end+0xff801a78>
  801c44:	0005883a 	mov	r2,zero
  801c48:	0007883a 	mov	r3,zero
  801c4c:	003eac06 	br	801700 <__alt_data_end+0xff801700>
  801c50:	d8809017 	ldw	r2,576(sp)
  801c54:	1000121e 	bne	r2,zero,801ca0 <__kernel_rem_pio2+0x66c>
  801c58:	90bfffc4 	addi	r2,r18,-1
  801c5c:	1085883a 	add	r2,r2,r2
  801c60:	1085883a 	add	r2,r2,r2
  801c64:	d885883a 	add	r2,sp,r2
  801c68:	14c07817 	ldw	r19,480(r2)
  801c6c:	9827d5fa 	srai	r19,r19,23
  801c70:	003f5606 	br	8019cc <__alt_data_end+0xff8019cc>
  801c74:	90bfffc4 	addi	r2,r18,-1
  801c78:	1085883a 	add	r2,r2,r2
  801c7c:	1085883a 	add	r2,r2,r2
  801c80:	d885883a 	add	r2,sp,r2
  801c84:	10807804 	addi	r2,r2,480
  801c88:	11000017 	ldw	r4,0(r2)
  801c8c:	01402034 	movhi	r5,128
  801c90:	297fffc4 	addi	r5,r5,-1
  801c94:	2148703a 	and	r4,r4,r5
  801c98:	11000015 	stw	r4,0(r2)
  801c9c:	003f7406 	br	801a70 <__alt_data_end+0xff801a70>
  801ca0:	4809883a 	mov	r4,r9
  801ca4:	180b883a 	mov	r5,r3
  801ca8:	000d883a 	mov	r6,zero
  801cac:	01cff834 	movhi	r7,16352
  801cb0:	d8c09a15 	stw	r3,616(sp)
  801cb4:	d8c09b15 	stw	r3,620(sp)
  801cb8:	da409915 	stw	r9,612(sp)
  801cbc:	080378c0 	call	80378c <__gedf2>
  801cc0:	d8c09a17 	ldw	r3,616(sp)
  801cc4:	da009b17 	ldw	r8,620(sp)
  801cc8:	da409917 	ldw	r9,612(sp)
  801ccc:	1000920e 	bge	r2,zero,801f18 <__kernel_rem_pio2+0x8e4>
  801cd0:	0027883a 	mov	r19,zero
  801cd4:	003f6806 	br	801a78 <__alt_data_end+0xff801a78>
  801cd8:	002d883a 	mov	r22,zero
  801cdc:	002b883a 	mov	r21,zero
  801ce0:	003eb006 	br	8017a4 <__alt_data_end+0xff8017a4>
  801ce4:	2945883a 	add	r2,r5,r5
  801ce8:	da009017 	ldw	r8,576(sp)
  801cec:	1085883a 	add	r2,r2,r2
  801cf0:	d885883a 	add	r2,sp,r2
  801cf4:	10807817 	ldw	r2,480(r2)
  801cf8:	423ffa04 	addi	r8,r8,-24
  801cfc:	dc409115 	stw	r17,580(sp)
  801d00:	dcc08d15 	stw	r19,564(sp)
  801d04:	da009015 	stw	r8,576(sp)
  801d08:	dd809417 	ldw	r22,592(sp)
  801d0c:	2823883a 	mov	r17,r5
  801d10:	10000e1e 	bne	r2,zero,801d4c <__kernel_rem_pio2+0x718>
  801d14:	00900034 	movhi	r2,16384
  801d18:	10bfffc4 	addi	r2,r2,-1
  801d1c:	2885883a 	add	r2,r5,r2
  801d20:	1085883a 	add	r2,r2,r2
  801d24:	d8c07804 	addi	r3,sp,480
  801d28:	1085883a 	add	r2,r2,r2
  801d2c:	1885883a 	add	r2,r3,r2
  801d30:	4007883a 	mov	r3,r8
  801d34:	10bfff04 	addi	r2,r2,-4
  801d38:	11000117 	ldw	r4,4(r2)
  801d3c:	8c7fffc4 	addi	r17,r17,-1
  801d40:	18fffa04 	addi	r3,r3,-24
  801d44:	203ffb26 	beq	r4,zero,801d34 <__alt_data_end+0xff801d34>
  801d48:	d8c09015 	stw	r3,576(sp)
  801d4c:	d9809017 	ldw	r6,576(sp)
  801d50:	0009883a 	mov	r4,zero
  801d54:	014ffc34 	movhi	r5,16368
  801d58:	08028900 	call	802890 <scalbn>
  801d5c:	1029883a 	mov	r20,r2
  801d60:	182b883a 	mov	r21,r3
  801d64:	88018416 	blt	r17,zero,802378 <__kernel_rem_pio2+0xd44>
  801d68:	881090fa 	slli	r8,r17,3
  801d6c:	d8c07804 	addi	r3,sp,480
  801d70:	da008e15 	stw	r8,568(sp)
  801d74:	d8808e17 	ldw	r2,568(sp)
  801d78:	8c51883a 	add	r8,r17,r17
  801d7c:	4211883a 	add	r8,r8,r8
  801d80:	d8a1883a 	add	r16,sp,r2
  801d84:	1a25883a 	add	r18,r3,r8
  801d88:	da3ffe04 	addi	r8,sp,-8
  801d8c:	da008c15 	stw	r8,560(sp)
  801d90:	8039883a 	mov	fp,r16
  801d94:	91000017 	ldw	r4,0(r18)
  801d98:	e73ffe04 	addi	fp,fp,-8
  801d9c:	94bfff04 	addi	r18,r18,-4
  801da0:	08048fc0 	call	8048fc <__floatsidf>
  801da4:	a00d883a 	mov	r6,r20
  801da8:	a80f883a 	mov	r7,r21
  801dac:	1009883a 	mov	r4,r2
  801db0:	180b883a 	mov	r5,r3
  801db4:	08038680 	call	803868 <__muldf3>
  801db8:	a009883a 	mov	r4,r20
  801dbc:	a80b883a 	mov	r5,r21
  801dc0:	e0800215 	stw	r2,8(fp)
  801dc4:	e0c00315 	stw	r3,12(fp)
  801dc8:	000d883a 	mov	r6,zero
  801dcc:	01cf9c34 	movhi	r7,15984
  801dd0:	08038680 	call	803868 <__muldf3>
  801dd4:	da008c17 	ldw	r8,560(sp)
  801dd8:	1029883a 	mov	r20,r2
  801ddc:	182b883a 	mov	r21,r3
  801de0:	e23fec1e 	bne	fp,r8,801d94 <__alt_data_end+0xff801d94>
  801de4:	0029883a 	mov	r20,zero
  801de8:	b0004f16 	blt	r22,zero,801f28 <__kernel_rem_pio2+0x8f4>
  801dec:	05402074 	movhi	r21,129
  801df0:	014ffe74 	movhi	r5,16377
  801df4:	ad48b004 	addi	r21,r21,8896
  801df8:	8027883a 	mov	r19,r16
  801dfc:	01100034 	movhi	r4,16384
  801e00:	29487ec4 	addi	r5,r5,8699
  801e04:	0039883a 	mov	fp,zero
  801e08:	002f883a 	mov	r23,zero
  801e0c:	0025883a 	mov	r18,zero
  801e10:	00000506 	br	801e28 <__kernel_rem_pio2+0x7f4>
  801e14:	9cc00204 	addi	r19,r19,8
  801e18:	a4800f16 	blt	r20,r18,801e58 <__kernel_rem_pio2+0x824>
  801e1c:	a9000017 	ldw	r4,0(r21)
  801e20:	a9400117 	ldw	r5,4(r21)
  801e24:	ad400204 	addi	r21,r21,8
  801e28:	99800017 	ldw	r6,0(r19)
  801e2c:	99c00117 	ldw	r7,4(r19)
  801e30:	94800044 	addi	r18,r18,1
  801e34:	08038680 	call	803868 <__muldf3>
  801e38:	e009883a 	mov	r4,fp
  801e3c:	b80b883a 	mov	r5,r23
  801e40:	100d883a 	mov	r6,r2
  801e44:	180f883a 	mov	r7,r3
  801e48:	0802e580 	call	802e58 <__adddf3>
  801e4c:	1039883a 	mov	fp,r2
  801e50:	182f883a 	mov	r23,r3
  801e54:	b4bfef0e 	bge	r22,r18,801e14 <__alt_data_end+0xff801e14>
  801e58:	a00490fa 	slli	r2,r20,3
  801e5c:	da008c17 	ldw	r8,560(sp)
  801e60:	843ffe04 	addi	r16,r16,-8
  801e64:	d885883a 	add	r2,sp,r2
  801e68:	10802804 	addi	r2,r2,160
  801e6c:	17000015 	stw	fp,0(r2)
  801e70:	15c00115 	stw	r23,4(r2)
  801e74:	a5000044 	addi	r20,r20,1
  801e78:	823fdb1e 	bne	r16,r8,801de8 <__alt_data_end+0xff801de8>
  801e7c:	da00a617 	ldw	r8,664(sp)
  801e80:	00800084 	movi	r2,2
  801e84:	12006616 	blt	r2,r8,802020 <__kernel_rem_pio2+0x9ec>
  801e88:	0200de16 	blt	zero,r8,802204 <__kernel_rem_pio2+0xbd0>
  801e8c:	4000141e 	bne	r8,zero,801ee0 <__kernel_rem_pio2+0x8ac>
  801e90:	da008e17 	ldw	r8,568(sp)
  801e94:	d8802804 	addi	r2,sp,160
  801e98:	0007883a 	mov	r3,zero
  801e9c:	1225883a 	add	r18,r2,r8
  801ea0:	043fffc4 	movi	r16,-1
  801ea4:	0005883a 	mov	r2,zero
  801ea8:	91800017 	ldw	r6,0(r18)
  801eac:	91c00117 	ldw	r7,4(r18)
  801eb0:	1009883a 	mov	r4,r2
  801eb4:	180b883a 	mov	r5,r3
  801eb8:	8c7fffc4 	addi	r17,r17,-1
  801ebc:	0802e580 	call	802e58 <__adddf3>
  801ec0:	94bffe04 	addi	r18,r18,-8
  801ec4:	8c3ff81e 	bne	r17,r16,801ea8 <__alt_data_end+0xff801ea8>
  801ec8:	da008d17 	ldw	r8,564(sp)
  801ecc:	40000126 	beq	r8,zero,801ed4 <__kernel_rem_pio2+0x8a0>
  801ed0:	18e0003c 	xorhi	r3,r3,32768
  801ed4:	da008f17 	ldw	r8,572(sp)
  801ed8:	40800015 	stw	r2,0(r8)
  801edc:	40c00115 	stw	r3,4(r8)
  801ee0:	da009117 	ldw	r8,580(sp)
  801ee4:	408001cc 	andi	r2,r8,7
  801ee8:	dfc0a517 	ldw	ra,660(sp)
  801eec:	df00a417 	ldw	fp,656(sp)
  801ef0:	ddc0a317 	ldw	r23,652(sp)
  801ef4:	dd80a217 	ldw	r22,648(sp)
  801ef8:	dd40a117 	ldw	r21,644(sp)
  801efc:	dd00a017 	ldw	r20,640(sp)
  801f00:	dcc09f17 	ldw	r19,636(sp)
  801f04:	dc809e17 	ldw	r18,632(sp)
  801f08:	dc409d17 	ldw	r17,628(sp)
  801f0c:	dc009c17 	ldw	r16,624(sp)
  801f10:	dec0a604 	addi	sp,sp,664
  801f14:	f800283a 	ret
  801f18:	8c400044 	addi	r17,r17,1
  801f1c:	04810d0e 	bge	zero,r18,802354 <__kernel_rem_pio2+0xd20>
  801f20:	04c00084 	movi	r19,2
  801f24:	003eac06 	br	8019d8 <__alt_data_end+0xff8019d8>
  801f28:	0039883a 	mov	fp,zero
  801f2c:	002f883a 	mov	r23,zero
  801f30:	003fc906 	br	801e58 <__alt_data_end+0xff801e58>
  801f34:	0029883a 	mov	r20,zero
  801f38:	003ebd06 	br	801a30 <__alt_data_end+0xff801a30>
  801f3c:	05000044 	movi	r20,1
  801f40:	003eef06 	br	801b00 <__alt_data_end+0xff801b00>
  801f44:	4029883a 	mov	r20,r8
  801f48:	da009017 	ldw	r8,576(sp)
  801f4c:	a809883a 	mov	r4,r21
  801f50:	a00b883a 	mov	r5,r20
  801f54:	020dc83a 	sub	r6,zero,r8
  801f58:	dc409115 	stw	r17,580(sp)
  801f5c:	dd809417 	ldw	r22,592(sp)
  801f60:	dcc08d15 	stw	r19,564(sp)
  801f64:	08028900 	call	802890 <scalbn>
  801f68:	000d883a 	mov	r6,zero
  801f6c:	01d05c34 	movhi	r7,16752
  801f70:	1009883a 	mov	r4,r2
  801f74:	180b883a 	mov	r5,r3
  801f78:	102b883a 	mov	r21,r2
  801f7c:	1823883a 	mov	r17,r3
  801f80:	080378c0 	call	80378c <__gedf2>
  801f84:	1000e916 	blt	r2,zero,80232c <__kernel_rem_pio2+0xcf8>
  801f88:	000d883a 	mov	r6,zero
  801f8c:	01cf9c34 	movhi	r7,15984
  801f90:	880b883a 	mov	r5,r17
  801f94:	a809883a 	mov	r4,r21
  801f98:	08038680 	call	803868 <__muldf3>
  801f9c:	180b883a 	mov	r5,r3
  801fa0:	1009883a 	mov	r4,r2
  801fa4:	080487c0 	call	80487c <__fixdfsi>
  801fa8:	1029883a 	mov	r20,r2
  801fac:	9485883a 	add	r2,r18,r18
  801fb0:	1085883a 	add	r2,r2,r2
  801fb4:	a009883a 	mov	r4,r20
  801fb8:	d8a1883a 	add	r16,sp,r2
  801fbc:	08048fc0 	call	8048fc <__floatsidf>
  801fc0:	000d883a 	mov	r6,zero
  801fc4:	01d05c34 	movhi	r7,16752
  801fc8:	1009883a 	mov	r4,r2
  801fcc:	180b883a 	mov	r5,r3
  801fd0:	08038680 	call	803868 <__muldf3>
  801fd4:	880b883a 	mov	r5,r17
  801fd8:	100d883a 	mov	r6,r2
  801fdc:	180f883a 	mov	r7,r3
  801fe0:	a809883a 	mov	r4,r21
  801fe4:	0803f800 	call	803f80 <__subdf3>
  801fe8:	180b883a 	mov	r5,r3
  801fec:	1009883a 	mov	r4,r2
  801ff0:	080487c0 	call	80487c <__fixdfsi>
  801ff4:	da009017 	ldw	r8,576(sp)
  801ff8:	94400044 	addi	r17,r18,1
  801ffc:	8c47883a 	add	r3,r17,r17
  802000:	84007804 	addi	r16,r16,480
  802004:	18c7883a 	add	r3,r3,r3
  802008:	80800015 	stw	r2,0(r16)
  80200c:	d8c7883a 	add	r3,sp,r3
  802010:	42000604 	addi	r8,r8,24
  802014:	da009015 	stw	r8,576(sp)
  802018:	1d007815 	stw	r20,480(r3)
  80201c:	003f4b06 	br	801d4c <__alt_data_end+0xff801d4c>
  802020:	da00a617 	ldw	r8,664(sp)
  802024:	008000c4 	movi	r2,3
  802028:	40bfad1e 	bne	r8,r2,801ee0 <__alt_data_end+0xff801ee0>
  80202c:	0440bc0e 	bge	zero,r17,802320 <__kernel_rem_pio2+0xcec>
  802030:	da008e17 	ldw	r8,568(sp)
  802034:	882090fa 	slli	r16,r17,3
  802038:	dd402804 	addi	r21,sp,160
  80203c:	da05883a 	add	r2,sp,r8
  802040:	10802804 	addi	r2,r2,160
  802044:	15c00017 	ldw	r23,0(r2)
  802048:	15800117 	ldw	r22,4(r2)
  80204c:	8029883a 	mov	r20,r16
  802050:	843ffe04 	addi	r16,r16,-8
  802054:	ac21883a 	add	r16,r21,r16
  802058:	ad29883a 	add	r20,r21,r20
  80205c:	dac02604 	addi	r11,sp,152
  802060:	8811883a 	mov	r8,r17
  802064:	84400017 	ldw	r17,0(r16)
  802068:	87000117 	ldw	fp,4(r16)
  80206c:	b80d883a 	mov	r6,r23
  802070:	b00f883a 	mov	r7,r22
  802074:	8809883a 	mov	r4,r17
  802078:	e00b883a 	mov	r5,fp
  80207c:	da009b15 	stw	r8,620(sp)
  802080:	dac09915 	stw	r11,612(sp)
  802084:	0802e580 	call	802e58 <__adddf3>
  802088:	100d883a 	mov	r6,r2
  80208c:	180f883a 	mov	r7,r3
  802090:	8809883a 	mov	r4,r17
  802094:	e00b883a 	mov	r5,fp
  802098:	1027883a 	mov	r19,r2
  80209c:	1825883a 	mov	r18,r3
  8020a0:	0803f800 	call	803f80 <__subdf3>
  8020a4:	b80d883a 	mov	r6,r23
  8020a8:	b00f883a 	mov	r7,r22
  8020ac:	1009883a 	mov	r4,r2
  8020b0:	180b883a 	mov	r5,r3
  8020b4:	0802e580 	call	802e58 <__adddf3>
  8020b8:	dac09917 	ldw	r11,612(sp)
  8020bc:	a0800015 	stw	r2,0(r20)
  8020c0:	a0c00115 	stw	r3,4(r20)
  8020c4:	84c00015 	stw	r19,0(r16)
  8020c8:	84800115 	stw	r18,4(r16)
  8020cc:	843ffe04 	addi	r16,r16,-8
  8020d0:	a53ffe04 	addi	r20,r20,-8
  8020d4:	982f883a 	mov	r23,r19
  8020d8:	902d883a 	mov	r22,r18
  8020dc:	da009b17 	ldw	r8,620(sp)
  8020e0:	5c3fe01e 	bne	r11,r16,802064 <__alt_data_end+0xff802064>
  8020e4:	00800044 	movi	r2,1
  8020e8:	12008d0e 	bge	r2,r8,802320 <__kernel_rem_pio2+0xcec>
  8020ec:	402090fa 	slli	r16,r8,3
  8020f0:	da008e17 	ldw	r8,568(sp)
  8020f4:	8023883a 	mov	r17,r16
  8020f8:	da05883a 	add	r2,sp,r8
  8020fc:	10802804 	addi	r2,r2,160
  802100:	15800017 	ldw	r22,0(r2)
  802104:	15000117 	ldw	r20,4(r2)
  802108:	ac63883a 	add	r17,r21,r17
  80210c:	843ffe04 	addi	r16,r16,-8
  802110:	ac21883a 	add	r16,r21,r16
  802114:	8825883a 	mov	r18,r17
  802118:	8811883a 	mov	r8,r17
  80211c:	84400017 	ldw	r17,0(r16)
  802120:	87000117 	ldw	fp,4(r16)
  802124:	b009883a 	mov	r4,r22
  802128:	a00b883a 	mov	r5,r20
  80212c:	880d883a 	mov	r6,r17
  802130:	e00f883a 	mov	r7,fp
  802134:	da009b15 	stw	r8,620(sp)
  802138:	0802e580 	call	802e58 <__adddf3>
  80213c:	100d883a 	mov	r6,r2
  802140:	180f883a 	mov	r7,r3
  802144:	8809883a 	mov	r4,r17
  802148:	e00b883a 	mov	r5,fp
  80214c:	102f883a 	mov	r23,r2
  802150:	1827883a 	mov	r19,r3
  802154:	0803f800 	call	803f80 <__subdf3>
  802158:	b00d883a 	mov	r6,r22
  80215c:	a00f883a 	mov	r7,r20
  802160:	1009883a 	mov	r4,r2
  802164:	180b883a 	mov	r5,r3
  802168:	0802e580 	call	802e58 <__adddf3>
  80216c:	90800015 	stw	r2,0(r18)
  802170:	90c00115 	stw	r3,4(r18)
  802174:	85c00015 	stw	r23,0(r16)
  802178:	84c00115 	stw	r19,4(r16)
  80217c:	843ffe04 	addi	r16,r16,-8
  802180:	94bffe04 	addi	r18,r18,-8
  802184:	b82d883a 	mov	r22,r23
  802188:	9829883a 	mov	r20,r19
  80218c:	da009b17 	ldw	r8,620(sp)
  802190:	ac3fe21e 	bne	r21,r16,80211c <__alt_data_end+0xff80211c>
  802194:	4023883a 	mov	r17,r8
  802198:	dc002a04 	addi	r16,sp,168
  80219c:	0005883a 	mov	r2,zero
  8021a0:	0007883a 	mov	r3,zero
  8021a4:	89800017 	ldw	r6,0(r17)
  8021a8:	89c00117 	ldw	r7,4(r17)
  8021ac:	1009883a 	mov	r4,r2
  8021b0:	8c7ffe04 	addi	r17,r17,-8
  8021b4:	180b883a 	mov	r5,r3
  8021b8:	0802e580 	call	802e58 <__adddf3>
  8021bc:	847ff91e 	bne	r16,r17,8021a4 <__alt_data_end+0xff8021a4>
  8021c0:	da008d17 	ldw	r8,564(sp)
  8021c4:	40004726 	beq	r8,zero,8022e4 <__kernel_rem_pio2+0xcb0>
  8021c8:	d9002b17 	ldw	r4,172(sp)
  8021cc:	d9402917 	ldw	r5,164(sp)
  8021d0:	d9802a17 	ldw	r6,168(sp)
  8021d4:	da008f17 	ldw	r8,572(sp)
  8021d8:	d9c02817 	ldw	r7,160(sp)
  8021dc:	2960003c 	xorhi	r5,r5,32768
  8021e0:	2120003c 	xorhi	r4,r4,32768
  8021e4:	18e0003c 	xorhi	r3,r3,32768
  8021e8:	41c00015 	stw	r7,0(r8)
  8021ec:	41400115 	stw	r5,4(r8)
  8021f0:	41800215 	stw	r6,8(r8)
  8021f4:	41000315 	stw	r4,12(r8)
  8021f8:	40800415 	stw	r2,16(r8)
  8021fc:	40c00515 	stw	r3,20(r8)
  802200:	003f3706 	br	801ee0 <__alt_data_end+0xff801ee0>
  802204:	da008e17 	ldw	r8,568(sp)
  802208:	d8802804 	addi	r2,sp,160
  80220c:	dc002604 	addi	r16,sp,152
  802210:	1225883a 	add	r18,r2,r8
  802214:	0007883a 	mov	r3,zero
  802218:	0005883a 	mov	r2,zero
  80221c:	91800017 	ldw	r6,0(r18)
  802220:	91c00117 	ldw	r7,4(r18)
  802224:	1009883a 	mov	r4,r2
  802228:	94bffe04 	addi	r18,r18,-8
  80222c:	180b883a 	mov	r5,r3
  802230:	0802e580 	call	802e58 <__adddf3>
  802234:	943ff91e 	bne	r18,r16,80221c <__alt_data_end+0xff80221c>
  802238:	da008d17 	ldw	r8,564(sp)
  80223c:	d9002817 	ldw	r4,160(sp)
  802240:	d9402917 	ldw	r5,164(sp)
  802244:	40001a26 	beq	r8,zero,8022b0 <__kernel_rem_pio2+0xc7c>
  802248:	da008f17 	ldw	r8,572(sp)
  80224c:	19a0003c 	xorhi	r6,r3,32768
  802250:	180f883a 	mov	r7,r3
  802254:	41800115 	stw	r6,4(r8)
  802258:	40800015 	stw	r2,0(r8)
  80225c:	100d883a 	mov	r6,r2
  802260:	0803f800 	call	803f80 <__subdf3>
  802264:	04400c0e 	bge	zero,r17,802298 <__kernel_rem_pio2+0xc64>
  802268:	dc002a04 	addi	r16,sp,168
  80226c:	04800044 	movi	r18,1
  802270:	81800017 	ldw	r6,0(r16)
  802274:	81c00117 	ldw	r7,4(r16)
  802278:	1009883a 	mov	r4,r2
  80227c:	180b883a 	mov	r5,r3
  802280:	94800044 	addi	r18,r18,1
  802284:	0802e580 	call	802e58 <__adddf3>
  802288:	84000204 	addi	r16,r16,8
  80228c:	8cbff80e 	bge	r17,r18,802270 <__alt_data_end+0xff802270>
  802290:	da008d17 	ldw	r8,564(sp)
  802294:	40004226 	beq	r8,zero,8023a0 <__kernel_rem_pio2+0xd6c>
  802298:	da008f17 	ldw	r8,572(sp)
  80229c:	1009883a 	mov	r4,r2
  8022a0:	18a0003c 	xorhi	r2,r3,32768
  8022a4:	41000215 	stw	r4,8(r8)
  8022a8:	40800315 	stw	r2,12(r8)
  8022ac:	003f0c06 	br	801ee0 <__alt_data_end+0xff801ee0>
  8022b0:	da008f17 	ldw	r8,572(sp)
  8022b4:	100d883a 	mov	r6,r2
  8022b8:	180f883a 	mov	r7,r3
  8022bc:	40800015 	stw	r2,0(r8)
  8022c0:	40c00115 	stw	r3,4(r8)
  8022c4:	0803f800 	call	803f80 <__subdf3>
  8022c8:	047fe716 	blt	zero,r17,802268 <__alt_data_end+0xff802268>
  8022cc:	da008f17 	ldw	r8,572(sp)
  8022d0:	1009883a 	mov	r4,r2
  8022d4:	1805883a 	mov	r2,r3
  8022d8:	41000215 	stw	r4,8(r8)
  8022dc:	40800315 	stw	r2,12(r8)
  8022e0:	003eff06 	br	801ee0 <__alt_data_end+0xff801ee0>
  8022e4:	da008f17 	ldw	r8,572(sp)
  8022e8:	d9802817 	ldw	r6,160(sp)
  8022ec:	d9402a17 	ldw	r5,168(sp)
  8022f0:	d9002b17 	ldw	r4,172(sp)
  8022f4:	41800015 	stw	r6,0(r8)
  8022f8:	d9802917 	ldw	r6,164(sp)
  8022fc:	41400215 	stw	r5,8(r8)
  802300:	41000315 	stw	r4,12(r8)
  802304:	41800115 	stw	r6,4(r8)
  802308:	40800415 	stw	r2,16(r8)
  80230c:	40c00515 	stw	r3,20(r8)
  802310:	003ef306 	br	801ee0 <__alt_data_end+0xff801ee0>
  802314:	da00a617 	ldw	r8,664(sp)
  802318:	008000c4 	movi	r2,3
  80231c:	40bef01e 	bne	r8,r2,801ee0 <__alt_data_end+0xff801ee0>
  802320:	0005883a 	mov	r2,zero
  802324:	0007883a 	mov	r3,zero
  802328:	003fa506 	br	8021c0 <__alt_data_end+0xff8021c0>
  80232c:	9485883a 	add	r2,r18,r18
  802330:	1085883a 	add	r2,r2,r2
  802334:	d8a1883a 	add	r16,sp,r2
  802338:	880b883a 	mov	r5,r17
  80233c:	a809883a 	mov	r4,r21
  802340:	84007804 	addi	r16,r16,480
  802344:	080487c0 	call	80487c <__fixdfsi>
  802348:	80800015 	stw	r2,0(r16)
  80234c:	9023883a 	mov	r17,r18
  802350:	003e7e06 	br	801d4c <__alt_data_end+0xff801d4c>
  802354:	a80d883a 	mov	r6,r21
  802358:	400f883a 	mov	r7,r8
  80235c:	0009883a 	mov	r4,zero
  802360:	014ffc34 	movhi	r5,16368
  802364:	0803f800 	call	803f80 <__subdf3>
  802368:	102b883a 	mov	r21,r2
  80236c:	1811883a 	mov	r8,r3
  802370:	04c00084 	movi	r19,2
  802374:	003dc006 	br	801a78 <__alt_data_end+0xff801a78>
  802378:	da00a617 	ldw	r8,664(sp)
  80237c:	00800084 	movi	r2,2
  802380:	123fe416 	blt	r2,r8,802314 <__alt_data_end+0xff802314>
  802384:	02000c16 	blt	zero,r8,8023b8 <__kernel_rem_pio2+0xd84>
  802388:	403ed51e 	bne	r8,zero,801ee0 <__alt_data_end+0xff801ee0>
  80238c:	0005883a 	mov	r2,zero
  802390:	0007883a 	mov	r3,zero
  802394:	003ecc06 	br	801ec8 <__alt_data_end+0xff801ec8>
  802398:	d8009215 	stw	zero,584(sp)
  80239c:	003cc306 	br	8016ac <__alt_data_end+0xff8016ac>
  8023a0:	da008f17 	ldw	r8,572(sp)
  8023a4:	1009883a 	mov	r4,r2
  8023a8:	1805883a 	mov	r2,r3
  8023ac:	41000215 	stw	r4,8(r8)
  8023b0:	40800315 	stw	r2,12(r8)
  8023b4:	003eca06 	br	801ee0 <__alt_data_end+0xff801ee0>
  8023b8:	0005883a 	mov	r2,zero
  8023bc:	0007883a 	mov	r3,zero
  8023c0:	003f9d06 	br	802238 <__alt_data_end+0xff802238>

008023c4 <__kernel_sin>:
  8023c4:	00a00034 	movhi	r2,32768
  8023c8:	defff404 	addi	sp,sp,-48
  8023cc:	10bfffc4 	addi	r2,r2,-1
  8023d0:	00cf9034 	movhi	r3,15936
  8023d4:	ddc00915 	stw	r23,36(sp)
  8023d8:	dd800815 	stw	r22,32(sp)
  8023dc:	dc400315 	stw	r17,12(sp)
  8023e0:	dc000215 	stw	r16,8(sp)
  8023e4:	dfc00b15 	stw	ra,44(sp)
  8023e8:	df000a15 	stw	fp,40(sp)
  8023ec:	dd400715 	stw	r21,28(sp)
  8023f0:	dd000615 	stw	r20,24(sp)
  8023f4:	dcc00515 	stw	r19,20(sp)
  8023f8:	dc800415 	stw	r18,16(sp)
  8023fc:	2884703a 	and	r2,r5,r2
  802400:	18ffffc4 	addi	r3,r3,-1
  802404:	2821883a 	mov	r16,r5
  802408:	2023883a 	mov	r17,r4
  80240c:	302f883a 	mov	r23,r6
  802410:	382d883a 	mov	r22,r7
  802414:	18800216 	blt	r3,r2,802420 <__kernel_sin+0x5c>
  802418:	080487c0 	call	80487c <__fixdfsi>
  80241c:	10009926 	beq	r2,zero,802684 <__kernel_sin+0x2c0>
  802420:	880d883a 	mov	r6,r17
  802424:	800f883a 	mov	r7,r16
  802428:	8809883a 	mov	r4,r17
  80242c:	800b883a 	mov	r5,r16
  802430:	08038680 	call	803868 <__muldf3>
  802434:	100d883a 	mov	r6,r2
  802438:	180f883a 	mov	r7,r3
  80243c:	8809883a 	mov	r4,r17
  802440:	800b883a 	mov	r5,r16
  802444:	1027883a 	mov	r19,r2
  802448:	1825883a 	mov	r18,r3
  80244c:	08038680 	call	803868 <__muldf3>
  802450:	0196b434 	movhi	r6,23248
  802454:	01cf79b4 	movhi	r7,15846
  802458:	31b55f04 	addi	r6,r6,-10884
  80245c:	39f64e84 	addi	r7,r7,-9926
  802460:	9809883a 	mov	r4,r19
  802464:	900b883a 	mov	r5,r18
  802468:	102b883a 	mov	r21,r2
  80246c:	1829883a 	mov	r20,r3
  802470:	08038680 	call	803868 <__muldf3>
  802474:	01a28b34 	movhi	r6,35372
  802478:	01cf96f4 	movhi	r7,15963
  80247c:	31a73ac4 	addi	r6,r6,-25365
  802480:	39f97984 	addi	r7,r7,-6682
  802484:	1009883a 	mov	r4,r2
  802488:	180b883a 	mov	r5,r3
  80248c:	0803f800 	call	803f80 <__subdf3>
  802490:	980d883a 	mov	r6,r19
  802494:	900f883a 	mov	r7,r18
  802498:	1009883a 	mov	r4,r2
  80249c:	180b883a 	mov	r5,r3
  8024a0:	08038680 	call	803868 <__muldf3>
  8024a4:	0195ecb4 	movhi	r6,22450
  8024a8:	01cfb1f4 	movhi	r7,16071
  8024ac:	31bf9f44 	addi	r6,r6,-387
  8024b0:	39c778c4 	addi	r7,r7,7651
  8024b4:	1009883a 	mov	r4,r2
  8024b8:	180b883a 	mov	r5,r3
  8024bc:	0802e580 	call	802e58 <__adddf3>
  8024c0:	980d883a 	mov	r6,r19
  8024c4:	900f883a 	mov	r7,r18
  8024c8:	1009883a 	mov	r4,r2
  8024cc:	180b883a 	mov	r5,r3
  8024d0:	08038680 	call	803868 <__muldf3>
  8024d4:	01867074 	movhi	r6,6593
  8024d8:	01cfcab4 	movhi	r7,16170
  8024dc:	31987544 	addi	r6,r6,25045
  8024e0:	39c06804 	addi	r7,r7,416
  8024e4:	1009883a 	mov	r4,r2
  8024e8:	180b883a 	mov	r5,r3
  8024ec:	0803f800 	call	803f80 <__subdf3>
  8024f0:	980d883a 	mov	r6,r19
  8024f4:	900f883a 	mov	r7,r18
  8024f8:	1009883a 	mov	r4,r2
  8024fc:	180b883a 	mov	r5,r3
  802500:	08038680 	call	803868 <__muldf3>
  802504:	01844474 	movhi	r6,4369
  802508:	01cfe074 	movhi	r7,16257
  80250c:	31be2984 	addi	r6,r6,-1882
  802510:	39c44444 	addi	r7,r7,4369
  802514:	1009883a 	mov	r4,r2
  802518:	180b883a 	mov	r5,r3
  80251c:	0802e580 	call	802e58 <__adddf3>
  802520:	1011883a 	mov	r8,r2
  802524:	d8800c17 	ldw	r2,48(sp)
  802528:	1839883a 	mov	fp,r3
  80252c:	10003e26 	beq	r2,zero,802628 <__kernel_sin+0x264>
  802530:	000d883a 	mov	r6,zero
  802534:	01cff834 	movhi	r7,16352
  802538:	b809883a 	mov	r4,r23
  80253c:	b00b883a 	mov	r5,r22
  802540:	da000015 	stw	r8,0(sp)
  802544:	08038680 	call	803868 <__muldf3>
  802548:	da000017 	ldw	r8,0(sp)
  80254c:	e00f883a 	mov	r7,fp
  802550:	a809883a 	mov	r4,r21
  802554:	400d883a 	mov	r6,r8
  802558:	a00b883a 	mov	r5,r20
  80255c:	d8c00115 	stw	r3,4(sp)
  802560:	d8800015 	stw	r2,0(sp)
  802564:	08038680 	call	803868 <__muldf3>
  802568:	da800017 	ldw	r10,0(sp)
  80256c:	da400117 	ldw	r9,4(sp)
  802570:	100d883a 	mov	r6,r2
  802574:	5009883a 	mov	r4,r10
  802578:	480b883a 	mov	r5,r9
  80257c:	180f883a 	mov	r7,r3
  802580:	0803f800 	call	803f80 <__subdf3>
  802584:	980d883a 	mov	r6,r19
  802588:	900f883a 	mov	r7,r18
  80258c:	1009883a 	mov	r4,r2
  802590:	180b883a 	mov	r5,r3
  802594:	08038680 	call	803868 <__muldf3>
  802598:	b80d883a 	mov	r6,r23
  80259c:	b00f883a 	mov	r7,r22
  8025a0:	1009883a 	mov	r4,r2
  8025a4:	180b883a 	mov	r5,r3
  8025a8:	0803f800 	call	803f80 <__subdf3>
  8025ac:	01955574 	movhi	r6,21845
  8025b0:	01cff174 	movhi	r7,16325
  8025b4:	31955244 	addi	r6,r6,21833
  8025b8:	39d55544 	addi	r7,r7,21845
  8025bc:	a809883a 	mov	r4,r21
  8025c0:	a00b883a 	mov	r5,r20
  8025c4:	1027883a 	mov	r19,r2
  8025c8:	1825883a 	mov	r18,r3
  8025cc:	08038680 	call	803868 <__muldf3>
  8025d0:	100d883a 	mov	r6,r2
  8025d4:	180f883a 	mov	r7,r3
  8025d8:	9809883a 	mov	r4,r19
  8025dc:	900b883a 	mov	r5,r18
  8025e0:	0802e580 	call	802e58 <__adddf3>
  8025e4:	100d883a 	mov	r6,r2
  8025e8:	180f883a 	mov	r7,r3
  8025ec:	8809883a 	mov	r4,r17
  8025f0:	800b883a 	mov	r5,r16
  8025f4:	0803f800 	call	803f80 <__subdf3>
  8025f8:	dfc00b17 	ldw	ra,44(sp)
  8025fc:	df000a17 	ldw	fp,40(sp)
  802600:	ddc00917 	ldw	r23,36(sp)
  802604:	dd800817 	ldw	r22,32(sp)
  802608:	dd400717 	ldw	r21,28(sp)
  80260c:	dd000617 	ldw	r20,24(sp)
  802610:	dcc00517 	ldw	r19,20(sp)
  802614:	dc800417 	ldw	r18,16(sp)
  802618:	dc400317 	ldw	r17,12(sp)
  80261c:	dc000217 	ldw	r16,8(sp)
  802620:	dec00c04 	addi	sp,sp,48
  802624:	f800283a 	ret
  802628:	400d883a 	mov	r6,r8
  80262c:	9809883a 	mov	r4,r19
  802630:	900b883a 	mov	r5,r18
  802634:	180f883a 	mov	r7,r3
  802638:	08038680 	call	803868 <__muldf3>
  80263c:	01955574 	movhi	r6,21845
  802640:	01cff174 	movhi	r7,16325
  802644:	31955244 	addi	r6,r6,21833
  802648:	39d55544 	addi	r7,r7,21845
  80264c:	1009883a 	mov	r4,r2
  802650:	180b883a 	mov	r5,r3
  802654:	0803f800 	call	803f80 <__subdf3>
  802658:	a80d883a 	mov	r6,r21
  80265c:	a00f883a 	mov	r7,r20
  802660:	1009883a 	mov	r4,r2
  802664:	180b883a 	mov	r5,r3
  802668:	08038680 	call	803868 <__muldf3>
  80266c:	880d883a 	mov	r6,r17
  802670:	800f883a 	mov	r7,r16
  802674:	1009883a 	mov	r4,r2
  802678:	180b883a 	mov	r5,r3
  80267c:	0802e580 	call	802e58 <__adddf3>
  802680:	003fdd06 	br	8025f8 <__alt_data_end+0xff8025f8>
  802684:	8805883a 	mov	r2,r17
  802688:	8007883a 	mov	r3,r16
  80268c:	003fda06 	br	8025f8 <__alt_data_end+0xff8025f8>

00802690 <fabs>:
  802690:	00e00034 	movhi	r3,32768
  802694:	18ffffc4 	addi	r3,r3,-1
  802698:	2005883a 	mov	r2,r4
  80269c:	28c6703a 	and	r3,r5,r3
  8026a0:	f800283a 	ret

008026a4 <floor>:
  8026a4:	2811d53a 	srai	r8,r5,20
  8026a8:	defffa04 	addi	sp,sp,-24
  8026ac:	dcc00315 	stw	r19,12(sp)
  8026b0:	4201ffcc 	andi	r8,r8,2047
  8026b4:	dc800215 	stw	r18,8(sp)
  8026b8:	dc400115 	stw	r17,4(sp)
  8026bc:	dc000015 	stw	r16,0(sp)
  8026c0:	dfc00515 	stw	ra,20(sp)
  8026c4:	dd000415 	stw	r20,16(sp)
  8026c8:	44bf0044 	addi	r18,r8,-1023
  8026cc:	018004c4 	movi	r6,19
  8026d0:	2821883a 	mov	r16,r5
  8026d4:	2005883a 	mov	r2,r4
  8026d8:	280f883a 	mov	r7,r5
  8026dc:	2827883a 	mov	r19,r5
  8026e0:	2023883a 	mov	r17,r4
  8026e4:	34801916 	blt	r6,r18,80274c <floor+0xa8>
  8026e8:	90003c16 	blt	r18,zero,8027dc <floor+0x138>
  8026ec:	05000434 	movhi	r20,16
  8026f0:	a53fffc4 	addi	r20,r20,-1
  8026f4:	a4a9d83a 	sra	r20,r20,r18
  8026f8:	2d0c703a 	and	r6,r5,r20
  8026fc:	310cb03a 	or	r6,r6,r4
  802700:	30001626 	beq	r6,zero,80275c <floor+0xb8>
  802704:	01a20034 	movhi	r6,34816
  802708:	01df8e34 	movhi	r7,32312
  80270c:	319d6704 	addi	r6,r6,30108
  802710:	39f90f04 	addi	r7,r7,-7108
  802714:	0802e580 	call	802e58 <__adddf3>
  802718:	000d883a 	mov	r6,zero
  80271c:	000f883a 	mov	r7,zero
  802720:	1009883a 	mov	r4,r2
  802724:	180b883a 	mov	r5,r3
  802728:	080378c0 	call	80378c <__gedf2>
  80272c:	0080040e 	bge	zero,r2,802740 <floor+0x9c>
  802730:	80003c16 	blt	r16,zero,802824 <floor+0x180>
  802734:	0520303a 	nor	r16,zero,r20
  802738:	84e0703a 	and	r16,r16,r19
  80273c:	0023883a 	mov	r17,zero
  802740:	8805883a 	mov	r2,r17
  802744:	8007883a 	mov	r3,r16
  802748:	00000506 	br	802760 <floor+0xbc>
  80274c:	01800cc4 	movi	r6,51
  802750:	34800b0e 	bge	r6,r18,802780 <floor+0xdc>
  802754:	01810004 	movi	r6,1024
  802758:	91802f26 	beq	r18,r6,802818 <floor+0x174>
  80275c:	3807883a 	mov	r3,r7
  802760:	dfc00517 	ldw	ra,20(sp)
  802764:	dd000417 	ldw	r20,16(sp)
  802768:	dcc00317 	ldw	r19,12(sp)
  80276c:	dc800217 	ldw	r18,8(sp)
  802770:	dc400117 	ldw	r17,4(sp)
  802774:	dc000017 	ldw	r16,0(sp)
  802778:	dec00604 	addi	sp,sp,24
  80277c:	f800283a 	ret
  802780:	423efb44 	addi	r8,r8,-1043
  802784:	053fffc4 	movi	r20,-1
  802788:	a228d83a 	srl	r20,r20,r8
  80278c:	250c703a 	and	r6,r4,r20
  802790:	303ff226 	beq	r6,zero,80275c <__alt_data_end+0xff80275c>
  802794:	01a20034 	movhi	r6,34816
  802798:	01df8e34 	movhi	r7,32312
  80279c:	319d6704 	addi	r6,r6,30108
  8027a0:	39f90f04 	addi	r7,r7,-7108
  8027a4:	0802e580 	call	802e58 <__adddf3>
  8027a8:	000d883a 	mov	r6,zero
  8027ac:	000f883a 	mov	r7,zero
  8027b0:	1009883a 	mov	r4,r2
  8027b4:	180b883a 	mov	r5,r3
  8027b8:	080378c0 	call	80378c <__gedf2>
  8027bc:	00bfe00e 	bge	zero,r2,802740 <__alt_data_end+0xff802740>
  8027c0:	80001c16 	blt	r16,zero,802834 <floor+0x190>
  8027c4:	0510303a 	nor	r8,zero,r20
  8027c8:	9821883a 	mov	r16,r19
  8027cc:	8a22703a 	and	r17,r17,r8
  8027d0:	8805883a 	mov	r2,r17
  8027d4:	8007883a 	mov	r3,r16
  8027d8:	003fe106 	br	802760 <__alt_data_end+0xff802760>
  8027dc:	01a20034 	movhi	r6,34816
  8027e0:	01df8e34 	movhi	r7,32312
  8027e4:	319d6704 	addi	r6,r6,30108
  8027e8:	39f90f04 	addi	r7,r7,-7108
  8027ec:	0802e580 	call	802e58 <__adddf3>
  8027f0:	000d883a 	mov	r6,zero
  8027f4:	000f883a 	mov	r7,zero
  8027f8:	1009883a 	mov	r4,r2
  8027fc:	180b883a 	mov	r5,r3
  802800:	080378c0 	call	80378c <__gedf2>
  802804:	00bfce0e 	bge	zero,r2,802740 <__alt_data_end+0xff802740>
  802808:	80001516 	blt	r16,zero,802860 <floor+0x1bc>
  80280c:	0023883a 	mov	r17,zero
  802810:	0021883a 	mov	r16,zero
  802814:	003fca06 	br	802740 <__alt_data_end+0xff802740>
  802818:	200d883a 	mov	r6,r4
  80281c:	0802e580 	call	802e58 <__adddf3>
  802820:	003fcf06 	br	802760 <__alt_data_end+0xff802760>
  802824:	00800434 	movhi	r2,16
  802828:	14a5d83a 	sra	r18,r2,r18
  80282c:	84a7883a 	add	r19,r16,r18
  802830:	003fc006 	br	802734 <__alt_data_end+0xff802734>
  802834:	00800504 	movi	r2,20
  802838:	90801326 	beq	r18,r2,802888 <floor+0x1e4>
  80283c:	00800d04 	movi	r2,52
  802840:	14a5c83a 	sub	r18,r2,r18
  802844:	00800044 	movi	r2,1
  802848:	1484983a 	sll	r2,r2,r18
  80284c:	1445883a 	add	r2,r2,r17
  802850:	14400b2e 	bgeu	r2,r17,802880 <floor+0x1dc>
  802854:	84c00044 	addi	r19,r16,1
  802858:	1023883a 	mov	r17,r2
  80285c:	003fd906 	br	8027c4 <__alt_data_end+0xff8027c4>
  802860:	00a00034 	movhi	r2,32768
  802864:	10bfffc4 	addi	r2,r2,-1
  802868:	8084703a 	and	r2,r16,r2
  80286c:	1462b03a 	or	r17,r2,r17
  802870:	883fb326 	beq	r17,zero,802740 <__alt_data_end+0xff802740>
  802874:	0023883a 	mov	r17,zero
  802878:	042ffc34 	movhi	r16,49136
  80287c:	003fb006 	br	802740 <__alt_data_end+0xff802740>
  802880:	1023883a 	mov	r17,r2
  802884:	003fcf06 	br	8027c4 <__alt_data_end+0xff8027c4>
  802888:	84c00044 	addi	r19,r16,1
  80288c:	003fcd06 	br	8027c4 <__alt_data_end+0xff8027c4>

00802890 <scalbn>:
  802890:	2a1ffc2c 	andhi	r8,r5,32752
  802894:	4011d53a 	srai	r8,r8,20
  802898:	defffe04 	addi	sp,sp,-8
  80289c:	dc000015 	stw	r16,0(sp)
  8028a0:	dfc00115 	stw	ra,4(sp)
  8028a4:	280f883a 	mov	r7,r5
  8028a8:	2015883a 	mov	r10,r4
  8028ac:	3021883a 	mov	r16,r6
  8028b0:	40001e1e 	bne	r8,zero,80292c <scalbn+0x9c>
  8028b4:	00a00034 	movhi	r2,32768
  8028b8:	10bfffc4 	addi	r2,r2,-1
  8028bc:	2884703a 	and	r2,r5,r2
  8028c0:	1104b03a 	or	r2,r2,r4
  8028c4:	10002226 	beq	r2,zero,802950 <scalbn+0xc0>
  8028c8:	01d0d434 	movhi	r7,17232
  8028cc:	000d883a 	mov	r6,zero
  8028d0:	08038680 	call	803868 <__muldf3>
  8028d4:	013ffff4 	movhi	r4,65535
  8028d8:	210f2c04 	addi	r4,r4,15536
  8028dc:	1015883a 	mov	r10,r2
  8028e0:	180f883a 	mov	r7,r3
  8028e4:	81002a16 	blt	r16,r4,802990 <scalbn+0x100>
  8028e8:	191ffc2c 	andhi	r4,r3,32752
  8028ec:	2009d53a 	srai	r4,r4,20
  8028f0:	223ff284 	addi	r8,r4,-54
  8028f4:	8211883a 	add	r8,r16,r8
  8028f8:	0081ff84 	movi	r2,2046
  8028fc:	12002f16 	blt	r2,r8,8029bc <scalbn+0x12c>
  802900:	0200190e 	bge	zero,r8,802968 <scalbn+0xd8>
  802904:	4010953a 	slli	r8,r8,20
  802908:	01600434 	movhi	r5,32784
  80290c:	297fffc4 	addi	r5,r5,-1
  802910:	194e703a 	and	r7,r3,r5
  802914:	5005883a 	mov	r2,r10
  802918:	3a06b03a 	or	r3,r7,r8
  80291c:	dfc00117 	ldw	ra,4(sp)
  802920:	dc000017 	ldw	r16,0(sp)
  802924:	dec00204 	addi	sp,sp,8
  802928:	f800283a 	ret
  80292c:	0081ffc4 	movi	r2,2047
  802930:	2807883a 	mov	r3,r5
  802934:	40bfef1e 	bne	r8,r2,8028f4 <__alt_data_end+0xff8028f4>
  802938:	200d883a 	mov	r6,r4
  80293c:	0802e580 	call	802e58 <__adddf3>
  802940:	dfc00117 	ldw	ra,4(sp)
  802944:	dc000017 	ldw	r16,0(sp)
  802948:	dec00204 	addi	sp,sp,8
  80294c:	f800283a 	ret
  802950:	2005883a 	mov	r2,r4
  802954:	2807883a 	mov	r3,r5
  802958:	dfc00117 	ldw	ra,4(sp)
  80295c:	dc000017 	ldw	r16,0(sp)
  802960:	dec00204 	addi	sp,sp,8
  802964:	f800283a 	ret
  802968:	00bff2c4 	movi	r2,-53
  80296c:	4080240e 	bge	r8,r2,802a00 <scalbn+0x170>
  802970:	00b0d414 	movui	r2,50000
  802974:	14001116 	blt	r2,r16,8029bc <scalbn+0x12c>
  802978:	0130be74 	movhi	r4,49913
  80297c:	01406974 	movhi	r5,421
  802980:	213cd644 	addi	r4,r4,-3239
  802984:	295b87c4 	addi	r5,r5,28191
  802988:	500d883a 	mov	r6,r10
  80298c:	0802a2c0 	call	802a2c <copysign>
  802990:	01b0be74 	movhi	r6,49913
  802994:	01c06974 	movhi	r7,421
  802998:	31bcd644 	addi	r6,r6,-3239
  80299c:	39db87c4 	addi	r7,r7,28191
  8029a0:	1009883a 	mov	r4,r2
  8029a4:	180b883a 	mov	r5,r3
  8029a8:	08038680 	call	803868 <__muldf3>
  8029ac:	dfc00117 	ldw	ra,4(sp)
  8029b0:	dc000017 	ldw	r16,0(sp)
  8029b4:	dec00204 	addi	sp,sp,8
  8029b8:	f800283a 	ret
  8029bc:	01220034 	movhi	r4,34816
  8029c0:	015f8e34 	movhi	r5,32312
  8029c4:	500d883a 	mov	r6,r10
  8029c8:	211d6704 	addi	r4,r4,30108
  8029cc:	29790f04 	addi	r5,r5,-7108
  8029d0:	0802a2c0 	call	802a2c <copysign>
  8029d4:	01a20034 	movhi	r6,34816
  8029d8:	01df8e34 	movhi	r7,32312
  8029dc:	319d6704 	addi	r6,r6,30108
  8029e0:	39f90f04 	addi	r7,r7,-7108
  8029e4:	1009883a 	mov	r4,r2
  8029e8:	180b883a 	mov	r5,r3
  8029ec:	08038680 	call	803868 <__muldf3>
  8029f0:	dfc00117 	ldw	ra,4(sp)
  8029f4:	dc000017 	ldw	r16,0(sp)
  8029f8:	dec00204 	addi	sp,sp,8
  8029fc:	f800283a 	ret
  802a00:	42000d84 	addi	r8,r8,54
  802a04:	4012953a 	slli	r9,r8,20
  802a08:	01e00434 	movhi	r7,32784
  802a0c:	39ffffc4 	addi	r7,r7,-1
  802a10:	19ca703a 	and	r5,r3,r7
  802a14:	000d883a 	mov	r6,zero
  802a18:	01cf2434 	movhi	r7,15504
  802a1c:	5009883a 	mov	r4,r10
  802a20:	494ab03a 	or	r5,r9,r5
  802a24:	08038680 	call	803868 <__muldf3>
  802a28:	003fbc06 	br	80291c <__alt_data_end+0xff80291c>

00802a2c <copysign>:
  802a2c:	2005883a 	mov	r2,r4
  802a30:	01200034 	movhi	r4,32768
  802a34:	213fffc4 	addi	r4,r4,-1
  802a38:	38e0002c 	andhi	r3,r7,32768
  802a3c:	290a703a 	and	r5,r5,r4
  802a40:	28c6b03a 	or	r3,r5,r3
  802a44:	f800283a 	ret

00802a48 <__divsi3>:
  802a48:	20001b16 	blt	r4,zero,802ab8 <__divsi3+0x70>
  802a4c:	000f883a 	mov	r7,zero
  802a50:	28001616 	blt	r5,zero,802aac <__divsi3+0x64>
  802a54:	200d883a 	mov	r6,r4
  802a58:	29001a2e 	bgeu	r5,r4,802ac4 <__divsi3+0x7c>
  802a5c:	00800804 	movi	r2,32
  802a60:	00c00044 	movi	r3,1
  802a64:	00000106 	br	802a6c <__divsi3+0x24>
  802a68:	10000d26 	beq	r2,zero,802aa0 <__divsi3+0x58>
  802a6c:	294b883a 	add	r5,r5,r5
  802a70:	10bfffc4 	addi	r2,r2,-1
  802a74:	18c7883a 	add	r3,r3,r3
  802a78:	293ffb36 	bltu	r5,r4,802a68 <__alt_data_end+0xff802a68>
  802a7c:	0005883a 	mov	r2,zero
  802a80:	18000726 	beq	r3,zero,802aa0 <__divsi3+0x58>
  802a84:	0005883a 	mov	r2,zero
  802a88:	31400236 	bltu	r6,r5,802a94 <__divsi3+0x4c>
  802a8c:	314dc83a 	sub	r6,r6,r5
  802a90:	10c4b03a 	or	r2,r2,r3
  802a94:	1806d07a 	srli	r3,r3,1
  802a98:	280ad07a 	srli	r5,r5,1
  802a9c:	183ffa1e 	bne	r3,zero,802a88 <__alt_data_end+0xff802a88>
  802aa0:	38000126 	beq	r7,zero,802aa8 <__divsi3+0x60>
  802aa4:	0085c83a 	sub	r2,zero,r2
  802aa8:	f800283a 	ret
  802aac:	014bc83a 	sub	r5,zero,r5
  802ab0:	39c0005c 	xori	r7,r7,1
  802ab4:	003fe706 	br	802a54 <__alt_data_end+0xff802a54>
  802ab8:	0109c83a 	sub	r4,zero,r4
  802abc:	01c00044 	movi	r7,1
  802ac0:	003fe306 	br	802a50 <__alt_data_end+0xff802a50>
  802ac4:	00c00044 	movi	r3,1
  802ac8:	003fee06 	br	802a84 <__alt_data_end+0xff802a84>

00802acc <__modsi3>:
  802acc:	20001716 	blt	r4,zero,802b2c <__modsi3+0x60>
  802ad0:	000f883a 	mov	r7,zero
  802ad4:	2005883a 	mov	r2,r4
  802ad8:	28001216 	blt	r5,zero,802b24 <__modsi3+0x58>
  802adc:	2900162e 	bgeu	r5,r4,802b38 <__modsi3+0x6c>
  802ae0:	01800804 	movi	r6,32
  802ae4:	00c00044 	movi	r3,1
  802ae8:	00000106 	br	802af0 <__modsi3+0x24>
  802aec:	30000a26 	beq	r6,zero,802b18 <__modsi3+0x4c>
  802af0:	294b883a 	add	r5,r5,r5
  802af4:	31bfffc4 	addi	r6,r6,-1
  802af8:	18c7883a 	add	r3,r3,r3
  802afc:	293ffb36 	bltu	r5,r4,802aec <__alt_data_end+0xff802aec>
  802b00:	18000526 	beq	r3,zero,802b18 <__modsi3+0x4c>
  802b04:	1806d07a 	srli	r3,r3,1
  802b08:	11400136 	bltu	r2,r5,802b10 <__modsi3+0x44>
  802b0c:	1145c83a 	sub	r2,r2,r5
  802b10:	280ad07a 	srli	r5,r5,1
  802b14:	183ffb1e 	bne	r3,zero,802b04 <__alt_data_end+0xff802b04>
  802b18:	38000126 	beq	r7,zero,802b20 <__modsi3+0x54>
  802b1c:	0085c83a 	sub	r2,zero,r2
  802b20:	f800283a 	ret
  802b24:	014bc83a 	sub	r5,zero,r5
  802b28:	003fec06 	br	802adc <__alt_data_end+0xff802adc>
  802b2c:	0109c83a 	sub	r4,zero,r4
  802b30:	01c00044 	movi	r7,1
  802b34:	003fe706 	br	802ad4 <__alt_data_end+0xff802ad4>
  802b38:	00c00044 	movi	r3,1
  802b3c:	003ff106 	br	802b04 <__alt_data_end+0xff802b04>

00802b40 <__udivsi3>:
  802b40:	200d883a 	mov	r6,r4
  802b44:	2900152e 	bgeu	r5,r4,802b9c <__udivsi3+0x5c>
  802b48:	28001416 	blt	r5,zero,802b9c <__udivsi3+0x5c>
  802b4c:	00800804 	movi	r2,32
  802b50:	00c00044 	movi	r3,1
  802b54:	00000206 	br	802b60 <__udivsi3+0x20>
  802b58:	10000e26 	beq	r2,zero,802b94 <__udivsi3+0x54>
  802b5c:	28000516 	blt	r5,zero,802b74 <__udivsi3+0x34>
  802b60:	294b883a 	add	r5,r5,r5
  802b64:	10bfffc4 	addi	r2,r2,-1
  802b68:	18c7883a 	add	r3,r3,r3
  802b6c:	293ffa36 	bltu	r5,r4,802b58 <__alt_data_end+0xff802b58>
  802b70:	18000826 	beq	r3,zero,802b94 <__udivsi3+0x54>
  802b74:	0005883a 	mov	r2,zero
  802b78:	31400236 	bltu	r6,r5,802b84 <__udivsi3+0x44>
  802b7c:	314dc83a 	sub	r6,r6,r5
  802b80:	10c4b03a 	or	r2,r2,r3
  802b84:	1806d07a 	srli	r3,r3,1
  802b88:	280ad07a 	srli	r5,r5,1
  802b8c:	183ffa1e 	bne	r3,zero,802b78 <__alt_data_end+0xff802b78>
  802b90:	f800283a 	ret
  802b94:	0005883a 	mov	r2,zero
  802b98:	f800283a 	ret
  802b9c:	00c00044 	movi	r3,1
  802ba0:	003ff406 	br	802b74 <__alt_data_end+0xff802b74>

00802ba4 <__umodsi3>:
  802ba4:	2005883a 	mov	r2,r4
  802ba8:	2900122e 	bgeu	r5,r4,802bf4 <__umodsi3+0x50>
  802bac:	28001116 	blt	r5,zero,802bf4 <__umodsi3+0x50>
  802bb0:	01800804 	movi	r6,32
  802bb4:	00c00044 	movi	r3,1
  802bb8:	00000206 	br	802bc4 <__umodsi3+0x20>
  802bbc:	30000c26 	beq	r6,zero,802bf0 <__umodsi3+0x4c>
  802bc0:	28000516 	blt	r5,zero,802bd8 <__umodsi3+0x34>
  802bc4:	294b883a 	add	r5,r5,r5
  802bc8:	31bfffc4 	addi	r6,r6,-1
  802bcc:	18c7883a 	add	r3,r3,r3
  802bd0:	293ffa36 	bltu	r5,r4,802bbc <__alt_data_end+0xff802bbc>
  802bd4:	18000626 	beq	r3,zero,802bf0 <__umodsi3+0x4c>
  802bd8:	1806d07a 	srli	r3,r3,1
  802bdc:	11400136 	bltu	r2,r5,802be4 <__umodsi3+0x40>
  802be0:	1145c83a 	sub	r2,r2,r5
  802be4:	280ad07a 	srli	r5,r5,1
  802be8:	183ffb1e 	bne	r3,zero,802bd8 <__alt_data_end+0xff802bd8>
  802bec:	f800283a 	ret
  802bf0:	f800283a 	ret
  802bf4:	00c00044 	movi	r3,1
  802bf8:	003ff706 	br	802bd8 <__alt_data_end+0xff802bd8>

00802bfc <__lesf2>:
  802bfc:	2004d5fa 	srli	r2,r4,23
  802c00:	280cd5fa 	srli	r6,r5,23
  802c04:	00c02034 	movhi	r3,128
  802c08:	18ffffc4 	addi	r3,r3,-1
  802c0c:	10803fcc 	andi	r2,r2,255
  802c10:	01c03fc4 	movi	r7,255
  802c14:	1910703a 	and	r8,r3,r4
  802c18:	31803fcc 	andi	r6,r6,255
  802c1c:	1946703a 	and	r3,r3,r5
  802c20:	2008d7fa 	srli	r4,r4,31
  802c24:	280ad7fa 	srli	r5,r5,31
  802c28:	11c01b26 	beq	r2,r7,802c98 <__lesf2+0x9c>
  802c2c:	01c03fc4 	movi	r7,255
  802c30:	31c01126 	beq	r6,r7,802c78 <__lesf2+0x7c>
  802c34:	1000071e 	bne	r2,zero,802c54 <__lesf2+0x58>
  802c38:	400f003a 	cmpeq	r7,r8,zero
  802c3c:	21003fcc 	andi	r4,r4,255
  802c40:	3000081e 	bne	r6,zero,802c64 <__lesf2+0x68>
  802c44:	1800071e 	bne	r3,zero,802c64 <__lesf2+0x68>
  802c48:	0005883a 	mov	r2,zero
  802c4c:	40000f1e 	bne	r8,zero,802c8c <__lesf2+0x90>
  802c50:	f800283a 	ret
  802c54:	21003fcc 	andi	r4,r4,255
  802c58:	30000a1e 	bne	r6,zero,802c84 <__lesf2+0x88>
  802c5c:	18000b26 	beq	r3,zero,802c8c <__lesf2+0x90>
  802c60:	000f883a 	mov	r7,zero
  802c64:	29403fcc 	andi	r5,r5,255
  802c68:	38000726 	beq	r7,zero,802c88 <__lesf2+0x8c>
  802c6c:	28000826 	beq	r5,zero,802c90 <__lesf2+0x94>
  802c70:	00800044 	movi	r2,1
  802c74:	f800283a 	ret
  802c78:	183fee26 	beq	r3,zero,802c34 <__alt_data_end+0xff802c34>
  802c7c:	00800084 	movi	r2,2
  802c80:	f800283a 	ret
  802c84:	29403fcc 	andi	r5,r5,255
  802c88:	21400626 	beq	r4,r5,802ca4 <__lesf2+0xa8>
  802c8c:	203ff826 	beq	r4,zero,802c70 <__alt_data_end+0xff802c70>
  802c90:	00bfffc4 	movi	r2,-1
  802c94:	f800283a 	ret
  802c98:	403fe426 	beq	r8,zero,802c2c <__alt_data_end+0xff802c2c>
  802c9c:	00800084 	movi	r2,2
  802ca0:	f800283a 	ret
  802ca4:	30bff916 	blt	r6,r2,802c8c <__alt_data_end+0xff802c8c>
  802ca8:	11800216 	blt	r2,r6,802cb4 <__lesf2+0xb8>
  802cac:	1a3ff736 	bltu	r3,r8,802c8c <__alt_data_end+0xff802c8c>
  802cb0:	40c0022e 	bgeu	r8,r3,802cbc <__lesf2+0xc0>
  802cb4:	203fee1e 	bne	r4,zero,802c70 <__alt_data_end+0xff802c70>
  802cb8:	003ff506 	br	802c90 <__alt_data_end+0xff802c90>
  802cbc:	0005883a 	mov	r2,zero
  802cc0:	f800283a 	ret

00802cc4 <__fixsfsi>:
  802cc4:	200ad5fa 	srli	r5,r4,23
  802cc8:	00c02034 	movhi	r3,128
  802ccc:	18ffffc4 	addi	r3,r3,-1
  802cd0:	29403fcc 	andi	r5,r5,255
  802cd4:	00801f84 	movi	r2,126
  802cd8:	1906703a 	and	r3,r3,r4
  802cdc:	2008d7fa 	srli	r4,r4,31
  802ce0:	11400e0e 	bge	r2,r5,802d1c <__fixsfsi+0x58>
  802ce4:	00802744 	movi	r2,157
  802ce8:	11400816 	blt	r2,r5,802d0c <__fixsfsi+0x48>
  802cec:	00802544 	movi	r2,149
  802cf0:	18c02034 	orhi	r3,r3,128
  802cf4:	11400b0e 	bge	r2,r5,802d24 <__fixsfsi+0x60>
  802cf8:	28bfda84 	addi	r2,r5,-150
  802cfc:	1884983a 	sll	r2,r3,r2
  802d00:	20000726 	beq	r4,zero,802d20 <__fixsfsi+0x5c>
  802d04:	0085c83a 	sub	r2,zero,r2
  802d08:	f800283a 	ret
  802d0c:	00a00034 	movhi	r2,32768
  802d10:	10bfffc4 	addi	r2,r2,-1
  802d14:	2085883a 	add	r2,r4,r2
  802d18:	f800283a 	ret
  802d1c:	0005883a 	mov	r2,zero
  802d20:	f800283a 	ret
  802d24:	00802584 	movi	r2,150
  802d28:	1145c83a 	sub	r2,r2,r5
  802d2c:	1884d83a 	srl	r2,r3,r2
  802d30:	003ff306 	br	802d00 <__alt_data_end+0xff802d00>

00802d34 <__floatsisf>:
  802d34:	defffd04 	addi	sp,sp,-12
  802d38:	dfc00215 	stw	ra,8(sp)
  802d3c:	dc400115 	stw	r17,4(sp)
  802d40:	dc000015 	stw	r16,0(sp)
  802d44:	20003526 	beq	r4,zero,802e1c <__floatsisf+0xe8>
  802d48:	2021883a 	mov	r16,r4
  802d4c:	2022d7fa 	srli	r17,r4,31
  802d50:	20003616 	blt	r4,zero,802e2c <__floatsisf+0xf8>
  802d54:	8009883a 	mov	r4,r16
  802d58:	0804c900 	call	804c90 <__clzsi2>
  802d5c:	00c02784 	movi	r3,158
  802d60:	1887c83a 	sub	r3,r3,r2
  802d64:	01002584 	movi	r4,150
  802d68:	20c01416 	blt	r4,r3,802dbc <__floatsisf+0x88>
  802d6c:	20c9c83a 	sub	r4,r4,r3
  802d70:	8120983a 	sll	r16,r16,r4
  802d74:	00802034 	movhi	r2,128
  802d78:	10bfffc4 	addi	r2,r2,-1
  802d7c:	8809883a 	mov	r4,r17
  802d80:	80a0703a 	and	r16,r16,r2
  802d84:	18803fcc 	andi	r2,r3,255
  802d88:	100695fa 	slli	r3,r2,23
  802d8c:	20803fcc 	andi	r2,r4,255
  802d90:	100897fa 	slli	r4,r2,31
  802d94:	00802034 	movhi	r2,128
  802d98:	10bfffc4 	addi	r2,r2,-1
  802d9c:	8084703a 	and	r2,r16,r2
  802da0:	10c4b03a 	or	r2,r2,r3
  802da4:	1104b03a 	or	r2,r2,r4
  802da8:	dfc00217 	ldw	ra,8(sp)
  802dac:	dc400117 	ldw	r17,4(sp)
  802db0:	dc000017 	ldw	r16,0(sp)
  802db4:	dec00304 	addi	sp,sp,12
  802db8:	f800283a 	ret
  802dbc:	01002644 	movi	r4,153
  802dc0:	20c01c16 	blt	r4,r3,802e34 <__floatsisf+0x100>
  802dc4:	20c9c83a 	sub	r4,r4,r3
  802dc8:	8120983a 	sll	r16,r16,r4
  802dcc:	013f0034 	movhi	r4,64512
  802dd0:	213fffc4 	addi	r4,r4,-1
  802dd4:	814001cc 	andi	r5,r16,7
  802dd8:	8108703a 	and	r4,r16,r4
  802ddc:	28000426 	beq	r5,zero,802df0 <__floatsisf+0xbc>
  802de0:	840003cc 	andi	r16,r16,15
  802de4:	01400104 	movi	r5,4
  802de8:	81400126 	beq	r16,r5,802df0 <__floatsisf+0xbc>
  802dec:	2149883a 	add	r4,r4,r5
  802df0:	2141002c 	andhi	r5,r4,1024
  802df4:	28000526 	beq	r5,zero,802e0c <__floatsisf+0xd8>
  802df8:	00c027c4 	movi	r3,159
  802dfc:	1887c83a 	sub	r3,r3,r2
  802e00:	00bf0034 	movhi	r2,64512
  802e04:	10bfffc4 	addi	r2,r2,-1
  802e08:	2088703a 	and	r4,r4,r2
  802e0c:	202091ba 	slli	r16,r4,6
  802e10:	8809883a 	mov	r4,r17
  802e14:	8020d27a 	srli	r16,r16,9
  802e18:	003fda06 	br	802d84 <__alt_data_end+0xff802d84>
  802e1c:	0009883a 	mov	r4,zero
  802e20:	0007883a 	mov	r3,zero
  802e24:	0021883a 	mov	r16,zero
  802e28:	003fd606 	br	802d84 <__alt_data_end+0xff802d84>
  802e2c:	0121c83a 	sub	r16,zero,r4
  802e30:	003fc806 	br	802d54 <__alt_data_end+0xff802d54>
  802e34:	01002e44 	movi	r4,185
  802e38:	20c9c83a 	sub	r4,r4,r3
  802e3c:	01400144 	movi	r5,5
  802e40:	8108983a 	sll	r4,r16,r4
  802e44:	288bc83a 	sub	r5,r5,r2
  802e48:	8160d83a 	srl	r16,r16,r5
  802e4c:	2008c03a 	cmpne	r4,r4,zero
  802e50:	8120b03a 	or	r16,r16,r4
  802e54:	003fdd06 	br	802dcc <__alt_data_end+0xff802dcc>

00802e58 <__adddf3>:
  802e58:	02c00434 	movhi	r11,16
  802e5c:	5affffc4 	addi	r11,r11,-1
  802e60:	2806d7fa 	srli	r3,r5,31
  802e64:	2ad4703a 	and	r10,r5,r11
  802e68:	3ad2703a 	and	r9,r7,r11
  802e6c:	3804d53a 	srli	r2,r7,20
  802e70:	3018d77a 	srli	r12,r6,29
  802e74:	280ad53a 	srli	r5,r5,20
  802e78:	501490fa 	slli	r10,r10,3
  802e7c:	2010d77a 	srli	r8,r4,29
  802e80:	481290fa 	slli	r9,r9,3
  802e84:	380ed7fa 	srli	r7,r7,31
  802e88:	defffb04 	addi	sp,sp,-20
  802e8c:	dc800215 	stw	r18,8(sp)
  802e90:	dc400115 	stw	r17,4(sp)
  802e94:	dc000015 	stw	r16,0(sp)
  802e98:	dfc00415 	stw	ra,16(sp)
  802e9c:	dcc00315 	stw	r19,12(sp)
  802ea0:	1c803fcc 	andi	r18,r3,255
  802ea4:	2c01ffcc 	andi	r16,r5,2047
  802ea8:	5210b03a 	or	r8,r10,r8
  802eac:	202290fa 	slli	r17,r4,3
  802eb0:	1081ffcc 	andi	r2,r2,2047
  802eb4:	4b12b03a 	or	r9,r9,r12
  802eb8:	300c90fa 	slli	r6,r6,3
  802ebc:	91c07526 	beq	r18,r7,803094 <__adddf3+0x23c>
  802ec0:	8087c83a 	sub	r3,r16,r2
  802ec4:	00c0ab0e 	bge	zero,r3,803174 <__adddf3+0x31c>
  802ec8:	10002a1e 	bne	r2,zero,802f74 <__adddf3+0x11c>
  802ecc:	4984b03a 	or	r2,r9,r6
  802ed0:	1000961e 	bne	r2,zero,80312c <__adddf3+0x2d4>
  802ed4:	888001cc 	andi	r2,r17,7
  802ed8:	10000726 	beq	r2,zero,802ef8 <__adddf3+0xa0>
  802edc:	888003cc 	andi	r2,r17,15
  802ee0:	00c00104 	movi	r3,4
  802ee4:	10c00426 	beq	r2,r3,802ef8 <__adddf3+0xa0>
  802ee8:	88c7883a 	add	r3,r17,r3
  802eec:	1c63803a 	cmpltu	r17,r3,r17
  802ef0:	4451883a 	add	r8,r8,r17
  802ef4:	1823883a 	mov	r17,r3
  802ef8:	4080202c 	andhi	r2,r8,128
  802efc:	10005926 	beq	r2,zero,803064 <__adddf3+0x20c>
  802f00:	84000044 	addi	r16,r16,1
  802f04:	0081ffc4 	movi	r2,2047
  802f08:	8080ba26 	beq	r16,r2,8031f4 <__adddf3+0x39c>
  802f0c:	00bfe034 	movhi	r2,65408
  802f10:	10bfffc4 	addi	r2,r2,-1
  802f14:	4090703a 	and	r8,r8,r2
  802f18:	4004977a 	slli	r2,r8,29
  802f1c:	4010927a 	slli	r8,r8,9
  802f20:	8822d0fa 	srli	r17,r17,3
  802f24:	8401ffcc 	andi	r16,r16,2047
  802f28:	4010d33a 	srli	r8,r8,12
  802f2c:	9007883a 	mov	r3,r18
  802f30:	1444b03a 	or	r2,r2,r17
  802f34:	8401ffcc 	andi	r16,r16,2047
  802f38:	8020953a 	slli	r16,r16,20
  802f3c:	18c03fcc 	andi	r3,r3,255
  802f40:	01000434 	movhi	r4,16
  802f44:	213fffc4 	addi	r4,r4,-1
  802f48:	180697fa 	slli	r3,r3,31
  802f4c:	4110703a 	and	r8,r8,r4
  802f50:	4410b03a 	or	r8,r8,r16
  802f54:	40c6b03a 	or	r3,r8,r3
  802f58:	dfc00417 	ldw	ra,16(sp)
  802f5c:	dcc00317 	ldw	r19,12(sp)
  802f60:	dc800217 	ldw	r18,8(sp)
  802f64:	dc400117 	ldw	r17,4(sp)
  802f68:	dc000017 	ldw	r16,0(sp)
  802f6c:	dec00504 	addi	sp,sp,20
  802f70:	f800283a 	ret
  802f74:	0081ffc4 	movi	r2,2047
  802f78:	80bfd626 	beq	r16,r2,802ed4 <__alt_data_end+0xff802ed4>
  802f7c:	4a402034 	orhi	r9,r9,128
  802f80:	00800e04 	movi	r2,56
  802f84:	10c09f16 	blt	r2,r3,803204 <__adddf3+0x3ac>
  802f88:	008007c4 	movi	r2,31
  802f8c:	10c0c216 	blt	r2,r3,803298 <__adddf3+0x440>
  802f90:	00800804 	movi	r2,32
  802f94:	10c5c83a 	sub	r2,r2,r3
  802f98:	488a983a 	sll	r5,r9,r2
  802f9c:	30c8d83a 	srl	r4,r6,r3
  802fa0:	3084983a 	sll	r2,r6,r2
  802fa4:	48c6d83a 	srl	r3,r9,r3
  802fa8:	290cb03a 	or	r6,r5,r4
  802fac:	1004c03a 	cmpne	r2,r2,zero
  802fb0:	308cb03a 	or	r6,r6,r2
  802fb4:	898dc83a 	sub	r6,r17,r6
  802fb8:	89a3803a 	cmpltu	r17,r17,r6
  802fbc:	40d1c83a 	sub	r8,r8,r3
  802fc0:	4451c83a 	sub	r8,r8,r17
  802fc4:	3023883a 	mov	r17,r6
  802fc8:	4080202c 	andhi	r2,r8,128
  802fcc:	10002326 	beq	r2,zero,80305c <__adddf3+0x204>
  802fd0:	04c02034 	movhi	r19,128
  802fd4:	9cffffc4 	addi	r19,r19,-1
  802fd8:	44e6703a 	and	r19,r8,r19
  802fdc:	98007626 	beq	r19,zero,8031b8 <__adddf3+0x360>
  802fe0:	9809883a 	mov	r4,r19
  802fe4:	0804c900 	call	804c90 <__clzsi2>
  802fe8:	10fffe04 	addi	r3,r2,-8
  802fec:	010007c4 	movi	r4,31
  802ff0:	20c07716 	blt	r4,r3,8031d0 <__adddf3+0x378>
  802ff4:	00800804 	movi	r2,32
  802ff8:	10c5c83a 	sub	r2,r2,r3
  802ffc:	8884d83a 	srl	r2,r17,r2
  803000:	98d0983a 	sll	r8,r19,r3
  803004:	88e2983a 	sll	r17,r17,r3
  803008:	1204b03a 	or	r2,r2,r8
  80300c:	1c007416 	blt	r3,r16,8031e0 <__adddf3+0x388>
  803010:	1c21c83a 	sub	r16,r3,r16
  803014:	82000044 	addi	r8,r16,1
  803018:	00c007c4 	movi	r3,31
  80301c:	1a009116 	blt	r3,r8,803264 <__adddf3+0x40c>
  803020:	00c00804 	movi	r3,32
  803024:	1a07c83a 	sub	r3,r3,r8
  803028:	8a08d83a 	srl	r4,r17,r8
  80302c:	88e2983a 	sll	r17,r17,r3
  803030:	10c6983a 	sll	r3,r2,r3
  803034:	1210d83a 	srl	r8,r2,r8
  803038:	8804c03a 	cmpne	r2,r17,zero
  80303c:	1906b03a 	or	r3,r3,r4
  803040:	18a2b03a 	or	r17,r3,r2
  803044:	0021883a 	mov	r16,zero
  803048:	003fa206 	br	802ed4 <__alt_data_end+0xff802ed4>
  80304c:	1890b03a 	or	r8,r3,r2
  803050:	40017d26 	beq	r8,zero,803648 <__adddf3+0x7f0>
  803054:	1011883a 	mov	r8,r2
  803058:	1823883a 	mov	r17,r3
  80305c:	888001cc 	andi	r2,r17,7
  803060:	103f9e1e 	bne	r2,zero,802edc <__alt_data_end+0xff802edc>
  803064:	4004977a 	slli	r2,r8,29
  803068:	8822d0fa 	srli	r17,r17,3
  80306c:	4010d0fa 	srli	r8,r8,3
  803070:	9007883a 	mov	r3,r18
  803074:	1444b03a 	or	r2,r2,r17
  803078:	0101ffc4 	movi	r4,2047
  80307c:	81002426 	beq	r16,r4,803110 <__adddf3+0x2b8>
  803080:	8120703a 	and	r16,r16,r4
  803084:	01000434 	movhi	r4,16
  803088:	213fffc4 	addi	r4,r4,-1
  80308c:	4110703a 	and	r8,r8,r4
  803090:	003fa806 	br	802f34 <__alt_data_end+0xff802f34>
  803094:	8089c83a 	sub	r4,r16,r2
  803098:	01005e0e 	bge	zero,r4,803214 <__adddf3+0x3bc>
  80309c:	10002b26 	beq	r2,zero,80314c <__adddf3+0x2f4>
  8030a0:	0081ffc4 	movi	r2,2047
  8030a4:	80bf8b26 	beq	r16,r2,802ed4 <__alt_data_end+0xff802ed4>
  8030a8:	4a402034 	orhi	r9,r9,128
  8030ac:	00800e04 	movi	r2,56
  8030b0:	1100a40e 	bge	r2,r4,803344 <__adddf3+0x4ec>
  8030b4:	498cb03a 	or	r6,r9,r6
  8030b8:	300ac03a 	cmpne	r5,r6,zero
  8030bc:	0013883a 	mov	r9,zero
  8030c0:	2c4b883a 	add	r5,r5,r17
  8030c4:	2c63803a 	cmpltu	r17,r5,r17
  8030c8:	4a11883a 	add	r8,r9,r8
  8030cc:	8a11883a 	add	r8,r17,r8
  8030d0:	2823883a 	mov	r17,r5
  8030d4:	4080202c 	andhi	r2,r8,128
  8030d8:	103fe026 	beq	r2,zero,80305c <__alt_data_end+0xff80305c>
  8030dc:	84000044 	addi	r16,r16,1
  8030e0:	0081ffc4 	movi	r2,2047
  8030e4:	8080d226 	beq	r16,r2,803430 <__adddf3+0x5d8>
  8030e8:	00bfe034 	movhi	r2,65408
  8030ec:	10bfffc4 	addi	r2,r2,-1
  8030f0:	4090703a 	and	r8,r8,r2
  8030f4:	880ad07a 	srli	r5,r17,1
  8030f8:	400897fa 	slli	r4,r8,31
  8030fc:	88c0004c 	andi	r3,r17,1
  803100:	28e2b03a 	or	r17,r5,r3
  803104:	4010d07a 	srli	r8,r8,1
  803108:	2462b03a 	or	r17,r4,r17
  80310c:	003f7106 	br	802ed4 <__alt_data_end+0xff802ed4>
  803110:	4088b03a 	or	r4,r8,r2
  803114:	20014526 	beq	r4,zero,80362c <__adddf3+0x7d4>
  803118:	01000434 	movhi	r4,16
  80311c:	42000234 	orhi	r8,r8,8
  803120:	213fffc4 	addi	r4,r4,-1
  803124:	4110703a 	and	r8,r8,r4
  803128:	003f8206 	br	802f34 <__alt_data_end+0xff802f34>
  80312c:	18ffffc4 	addi	r3,r3,-1
  803130:	1800491e 	bne	r3,zero,803258 <__adddf3+0x400>
  803134:	898bc83a 	sub	r5,r17,r6
  803138:	8963803a 	cmpltu	r17,r17,r5
  80313c:	4251c83a 	sub	r8,r8,r9
  803140:	4451c83a 	sub	r8,r8,r17
  803144:	2823883a 	mov	r17,r5
  803148:	003f9f06 	br	802fc8 <__alt_data_end+0xff802fc8>
  80314c:	4984b03a 	or	r2,r9,r6
  803150:	103f6026 	beq	r2,zero,802ed4 <__alt_data_end+0xff802ed4>
  803154:	213fffc4 	addi	r4,r4,-1
  803158:	2000931e 	bne	r4,zero,8033a8 <__adddf3+0x550>
  80315c:	898d883a 	add	r6,r17,r6
  803160:	3463803a 	cmpltu	r17,r6,r17
  803164:	4251883a 	add	r8,r8,r9
  803168:	8a11883a 	add	r8,r17,r8
  80316c:	3023883a 	mov	r17,r6
  803170:	003fd806 	br	8030d4 <__alt_data_end+0xff8030d4>
  803174:	1800541e 	bne	r3,zero,8032c8 <__adddf3+0x470>
  803178:	80800044 	addi	r2,r16,1
  80317c:	1081ffcc 	andi	r2,r2,2047
  803180:	00c00044 	movi	r3,1
  803184:	1880a00e 	bge	r3,r2,803408 <__adddf3+0x5b0>
  803188:	8989c83a 	sub	r4,r17,r6
  80318c:	8905803a 	cmpltu	r2,r17,r4
  803190:	4267c83a 	sub	r19,r8,r9
  803194:	98a7c83a 	sub	r19,r19,r2
  803198:	9880202c 	andhi	r2,r19,128
  80319c:	10006326 	beq	r2,zero,80332c <__adddf3+0x4d4>
  8031a0:	3463c83a 	sub	r17,r6,r17
  8031a4:	4a07c83a 	sub	r3,r9,r8
  8031a8:	344d803a 	cmpltu	r6,r6,r17
  8031ac:	19a7c83a 	sub	r19,r3,r6
  8031b0:	3825883a 	mov	r18,r7
  8031b4:	983f8a1e 	bne	r19,zero,802fe0 <__alt_data_end+0xff802fe0>
  8031b8:	8809883a 	mov	r4,r17
  8031bc:	0804c900 	call	804c90 <__clzsi2>
  8031c0:	10800804 	addi	r2,r2,32
  8031c4:	10fffe04 	addi	r3,r2,-8
  8031c8:	010007c4 	movi	r4,31
  8031cc:	20ff890e 	bge	r4,r3,802ff4 <__alt_data_end+0xff802ff4>
  8031d0:	10bff604 	addi	r2,r2,-40
  8031d4:	8884983a 	sll	r2,r17,r2
  8031d8:	0023883a 	mov	r17,zero
  8031dc:	1c3f8c0e 	bge	r3,r16,803010 <__alt_data_end+0xff803010>
  8031e0:	023fe034 	movhi	r8,65408
  8031e4:	423fffc4 	addi	r8,r8,-1
  8031e8:	80e1c83a 	sub	r16,r16,r3
  8031ec:	1210703a 	and	r8,r2,r8
  8031f0:	003f3806 	br	802ed4 <__alt_data_end+0xff802ed4>
  8031f4:	9007883a 	mov	r3,r18
  8031f8:	0011883a 	mov	r8,zero
  8031fc:	0005883a 	mov	r2,zero
  803200:	003f4c06 	br	802f34 <__alt_data_end+0xff802f34>
  803204:	498cb03a 	or	r6,r9,r6
  803208:	300cc03a 	cmpne	r6,r6,zero
  80320c:	0007883a 	mov	r3,zero
  803210:	003f6806 	br	802fb4 <__alt_data_end+0xff802fb4>
  803214:	20009c1e 	bne	r4,zero,803488 <__adddf3+0x630>
  803218:	80800044 	addi	r2,r16,1
  80321c:	1141ffcc 	andi	r5,r2,2047
  803220:	01000044 	movi	r4,1
  803224:	2140670e 	bge	r4,r5,8033c4 <__adddf3+0x56c>
  803228:	0101ffc4 	movi	r4,2047
  80322c:	11007f26 	beq	r2,r4,80342c <__adddf3+0x5d4>
  803230:	898d883a 	add	r6,r17,r6
  803234:	4247883a 	add	r3,r8,r9
  803238:	3451803a 	cmpltu	r8,r6,r17
  80323c:	40d1883a 	add	r8,r8,r3
  803240:	402297fa 	slli	r17,r8,31
  803244:	300cd07a 	srli	r6,r6,1
  803248:	4010d07a 	srli	r8,r8,1
  80324c:	1021883a 	mov	r16,r2
  803250:	89a2b03a 	or	r17,r17,r6
  803254:	003f1f06 	br	802ed4 <__alt_data_end+0xff802ed4>
  803258:	0081ffc4 	movi	r2,2047
  80325c:	80bf481e 	bne	r16,r2,802f80 <__alt_data_end+0xff802f80>
  803260:	003f1c06 	br	802ed4 <__alt_data_end+0xff802ed4>
  803264:	843ff844 	addi	r16,r16,-31
  803268:	01000804 	movi	r4,32
  80326c:	1406d83a 	srl	r3,r2,r16
  803270:	41005026 	beq	r8,r4,8033b4 <__adddf3+0x55c>
  803274:	01001004 	movi	r4,64
  803278:	2211c83a 	sub	r8,r4,r8
  80327c:	1204983a 	sll	r2,r2,r8
  803280:	88a2b03a 	or	r17,r17,r2
  803284:	8822c03a 	cmpne	r17,r17,zero
  803288:	1c62b03a 	or	r17,r3,r17
  80328c:	0011883a 	mov	r8,zero
  803290:	0021883a 	mov	r16,zero
  803294:	003f7106 	br	80305c <__alt_data_end+0xff80305c>
  803298:	193ff804 	addi	r4,r3,-32
  80329c:	00800804 	movi	r2,32
  8032a0:	4908d83a 	srl	r4,r9,r4
  8032a4:	18804526 	beq	r3,r2,8033bc <__adddf3+0x564>
  8032a8:	00801004 	movi	r2,64
  8032ac:	10c5c83a 	sub	r2,r2,r3
  8032b0:	4886983a 	sll	r3,r9,r2
  8032b4:	198cb03a 	or	r6,r3,r6
  8032b8:	300cc03a 	cmpne	r6,r6,zero
  8032bc:	218cb03a 	or	r6,r4,r6
  8032c0:	0007883a 	mov	r3,zero
  8032c4:	003f3b06 	br	802fb4 <__alt_data_end+0xff802fb4>
  8032c8:	80002a26 	beq	r16,zero,803374 <__adddf3+0x51c>
  8032cc:	0101ffc4 	movi	r4,2047
  8032d0:	11006826 	beq	r2,r4,803474 <__adddf3+0x61c>
  8032d4:	00c7c83a 	sub	r3,zero,r3
  8032d8:	42002034 	orhi	r8,r8,128
  8032dc:	01000e04 	movi	r4,56
  8032e0:	20c07c16 	blt	r4,r3,8034d4 <__adddf3+0x67c>
  8032e4:	010007c4 	movi	r4,31
  8032e8:	20c0da16 	blt	r4,r3,803654 <__adddf3+0x7fc>
  8032ec:	01000804 	movi	r4,32
  8032f0:	20c9c83a 	sub	r4,r4,r3
  8032f4:	4114983a 	sll	r10,r8,r4
  8032f8:	88cad83a 	srl	r5,r17,r3
  8032fc:	8908983a 	sll	r4,r17,r4
  803300:	40c6d83a 	srl	r3,r8,r3
  803304:	5162b03a 	or	r17,r10,r5
  803308:	2008c03a 	cmpne	r4,r4,zero
  80330c:	8922b03a 	or	r17,r17,r4
  803310:	3463c83a 	sub	r17,r6,r17
  803314:	48c7c83a 	sub	r3,r9,r3
  803318:	344d803a 	cmpltu	r6,r6,r17
  80331c:	1991c83a 	sub	r8,r3,r6
  803320:	1021883a 	mov	r16,r2
  803324:	3825883a 	mov	r18,r7
  803328:	003f2706 	br	802fc8 <__alt_data_end+0xff802fc8>
  80332c:	24d0b03a 	or	r8,r4,r19
  803330:	40001b1e 	bne	r8,zero,8033a0 <__adddf3+0x548>
  803334:	0005883a 	mov	r2,zero
  803338:	0007883a 	mov	r3,zero
  80333c:	0021883a 	mov	r16,zero
  803340:	003f4d06 	br	803078 <__alt_data_end+0xff803078>
  803344:	008007c4 	movi	r2,31
  803348:	11003c16 	blt	r2,r4,80343c <__adddf3+0x5e4>
  80334c:	00800804 	movi	r2,32
  803350:	1105c83a 	sub	r2,r2,r4
  803354:	488e983a 	sll	r7,r9,r2
  803358:	310ad83a 	srl	r5,r6,r4
  80335c:	3084983a 	sll	r2,r6,r2
  803360:	4912d83a 	srl	r9,r9,r4
  803364:	394ab03a 	or	r5,r7,r5
  803368:	1004c03a 	cmpne	r2,r2,zero
  80336c:	288ab03a 	or	r5,r5,r2
  803370:	003f5306 	br	8030c0 <__alt_data_end+0xff8030c0>
  803374:	4448b03a 	or	r4,r8,r17
  803378:	20003e26 	beq	r4,zero,803474 <__adddf3+0x61c>
  80337c:	00c6303a 	nor	r3,zero,r3
  803380:	18003a1e 	bne	r3,zero,80346c <__adddf3+0x614>
  803384:	3463c83a 	sub	r17,r6,r17
  803388:	4a07c83a 	sub	r3,r9,r8
  80338c:	344d803a 	cmpltu	r6,r6,r17
  803390:	1991c83a 	sub	r8,r3,r6
  803394:	1021883a 	mov	r16,r2
  803398:	3825883a 	mov	r18,r7
  80339c:	003f0a06 	br	802fc8 <__alt_data_end+0xff802fc8>
  8033a0:	2023883a 	mov	r17,r4
  8033a4:	003f0d06 	br	802fdc <__alt_data_end+0xff802fdc>
  8033a8:	0081ffc4 	movi	r2,2047
  8033ac:	80bf3f1e 	bne	r16,r2,8030ac <__alt_data_end+0xff8030ac>
  8033b0:	003ec806 	br	802ed4 <__alt_data_end+0xff802ed4>
  8033b4:	0005883a 	mov	r2,zero
  8033b8:	003fb106 	br	803280 <__alt_data_end+0xff803280>
  8033bc:	0007883a 	mov	r3,zero
  8033c0:	003fbc06 	br	8032b4 <__alt_data_end+0xff8032b4>
  8033c4:	4444b03a 	or	r2,r8,r17
  8033c8:	8000871e 	bne	r16,zero,8035e8 <__adddf3+0x790>
  8033cc:	1000ba26 	beq	r2,zero,8036b8 <__adddf3+0x860>
  8033d0:	4984b03a 	or	r2,r9,r6
  8033d4:	103ebf26 	beq	r2,zero,802ed4 <__alt_data_end+0xff802ed4>
  8033d8:	8985883a 	add	r2,r17,r6
  8033dc:	4247883a 	add	r3,r8,r9
  8033e0:	1451803a 	cmpltu	r8,r2,r17
  8033e4:	40d1883a 	add	r8,r8,r3
  8033e8:	40c0202c 	andhi	r3,r8,128
  8033ec:	1023883a 	mov	r17,r2
  8033f0:	183f1a26 	beq	r3,zero,80305c <__alt_data_end+0xff80305c>
  8033f4:	00bfe034 	movhi	r2,65408
  8033f8:	10bfffc4 	addi	r2,r2,-1
  8033fc:	2021883a 	mov	r16,r4
  803400:	4090703a 	and	r8,r8,r2
  803404:	003eb306 	br	802ed4 <__alt_data_end+0xff802ed4>
  803408:	4444b03a 	or	r2,r8,r17
  80340c:	8000291e 	bne	r16,zero,8034b4 <__adddf3+0x65c>
  803410:	10004b1e 	bne	r2,zero,803540 <__adddf3+0x6e8>
  803414:	4990b03a 	or	r8,r9,r6
  803418:	40008b26 	beq	r8,zero,803648 <__adddf3+0x7f0>
  80341c:	4811883a 	mov	r8,r9
  803420:	3023883a 	mov	r17,r6
  803424:	3825883a 	mov	r18,r7
  803428:	003eaa06 	br	802ed4 <__alt_data_end+0xff802ed4>
  80342c:	1021883a 	mov	r16,r2
  803430:	0011883a 	mov	r8,zero
  803434:	0005883a 	mov	r2,zero
  803438:	003f0f06 	br	803078 <__alt_data_end+0xff803078>
  80343c:	217ff804 	addi	r5,r4,-32
  803440:	00800804 	movi	r2,32
  803444:	494ad83a 	srl	r5,r9,r5
  803448:	20807d26 	beq	r4,r2,803640 <__adddf3+0x7e8>
  80344c:	00801004 	movi	r2,64
  803450:	1109c83a 	sub	r4,r2,r4
  803454:	4912983a 	sll	r9,r9,r4
  803458:	498cb03a 	or	r6,r9,r6
  80345c:	300cc03a 	cmpne	r6,r6,zero
  803460:	298ab03a 	or	r5,r5,r6
  803464:	0013883a 	mov	r9,zero
  803468:	003f1506 	br	8030c0 <__alt_data_end+0xff8030c0>
  80346c:	0101ffc4 	movi	r4,2047
  803470:	113f9a1e 	bne	r2,r4,8032dc <__alt_data_end+0xff8032dc>
  803474:	4811883a 	mov	r8,r9
  803478:	3023883a 	mov	r17,r6
  80347c:	1021883a 	mov	r16,r2
  803480:	3825883a 	mov	r18,r7
  803484:	003e9306 	br	802ed4 <__alt_data_end+0xff802ed4>
  803488:	8000161e 	bne	r16,zero,8034e4 <__adddf3+0x68c>
  80348c:	444ab03a 	or	r5,r8,r17
  803490:	28005126 	beq	r5,zero,8035d8 <__adddf3+0x780>
  803494:	0108303a 	nor	r4,zero,r4
  803498:	20004d1e 	bne	r4,zero,8035d0 <__adddf3+0x778>
  80349c:	89a3883a 	add	r17,r17,r6
  8034a0:	4253883a 	add	r9,r8,r9
  8034a4:	898d803a 	cmpltu	r6,r17,r6
  8034a8:	3251883a 	add	r8,r6,r9
  8034ac:	1021883a 	mov	r16,r2
  8034b0:	003f0806 	br	8030d4 <__alt_data_end+0xff8030d4>
  8034b4:	1000301e 	bne	r2,zero,803578 <__adddf3+0x720>
  8034b8:	4984b03a 	or	r2,r9,r6
  8034bc:	10007126 	beq	r2,zero,803684 <__adddf3+0x82c>
  8034c0:	4811883a 	mov	r8,r9
  8034c4:	3023883a 	mov	r17,r6
  8034c8:	3825883a 	mov	r18,r7
  8034cc:	0401ffc4 	movi	r16,2047
  8034d0:	003e8006 	br	802ed4 <__alt_data_end+0xff802ed4>
  8034d4:	4462b03a 	or	r17,r8,r17
  8034d8:	8822c03a 	cmpne	r17,r17,zero
  8034dc:	0007883a 	mov	r3,zero
  8034e0:	003f8b06 	br	803310 <__alt_data_end+0xff803310>
  8034e4:	0141ffc4 	movi	r5,2047
  8034e8:	11403b26 	beq	r2,r5,8035d8 <__adddf3+0x780>
  8034ec:	0109c83a 	sub	r4,zero,r4
  8034f0:	42002034 	orhi	r8,r8,128
  8034f4:	01400e04 	movi	r5,56
  8034f8:	29006716 	blt	r5,r4,803698 <__adddf3+0x840>
  8034fc:	014007c4 	movi	r5,31
  803500:	29007016 	blt	r5,r4,8036c4 <__adddf3+0x86c>
  803504:	01400804 	movi	r5,32
  803508:	290bc83a 	sub	r5,r5,r4
  80350c:	4154983a 	sll	r10,r8,r5
  803510:	890ed83a 	srl	r7,r17,r4
  803514:	894a983a 	sll	r5,r17,r5
  803518:	4108d83a 	srl	r4,r8,r4
  80351c:	51e2b03a 	or	r17,r10,r7
  803520:	280ac03a 	cmpne	r5,r5,zero
  803524:	8962b03a 	or	r17,r17,r5
  803528:	89a3883a 	add	r17,r17,r6
  80352c:	2253883a 	add	r9,r4,r9
  803530:	898d803a 	cmpltu	r6,r17,r6
  803534:	3251883a 	add	r8,r6,r9
  803538:	1021883a 	mov	r16,r2
  80353c:	003ee506 	br	8030d4 <__alt_data_end+0xff8030d4>
  803540:	4984b03a 	or	r2,r9,r6
  803544:	103e6326 	beq	r2,zero,802ed4 <__alt_data_end+0xff802ed4>
  803548:	8987c83a 	sub	r3,r17,r6
  80354c:	88c9803a 	cmpltu	r4,r17,r3
  803550:	4245c83a 	sub	r2,r8,r9
  803554:	1105c83a 	sub	r2,r2,r4
  803558:	1100202c 	andhi	r4,r2,128
  80355c:	203ebb26 	beq	r4,zero,80304c <__alt_data_end+0xff80304c>
  803560:	3463c83a 	sub	r17,r6,r17
  803564:	4a07c83a 	sub	r3,r9,r8
  803568:	344d803a 	cmpltu	r6,r6,r17
  80356c:	1991c83a 	sub	r8,r3,r6
  803570:	3825883a 	mov	r18,r7
  803574:	003e5706 	br	802ed4 <__alt_data_end+0xff802ed4>
  803578:	4984b03a 	or	r2,r9,r6
  80357c:	10002e26 	beq	r2,zero,803638 <__adddf3+0x7e0>
  803580:	4004d0fa 	srli	r2,r8,3
  803584:	8822d0fa 	srli	r17,r17,3
  803588:	4010977a 	slli	r8,r8,29
  80358c:	10c0022c 	andhi	r3,r2,8
  803590:	4462b03a 	or	r17,r8,r17
  803594:	18000826 	beq	r3,zero,8035b8 <__adddf3+0x760>
  803598:	4808d0fa 	srli	r4,r9,3
  80359c:	20c0022c 	andhi	r3,r4,8
  8035a0:	1800051e 	bne	r3,zero,8035b8 <__adddf3+0x760>
  8035a4:	300cd0fa 	srli	r6,r6,3
  8035a8:	4806977a 	slli	r3,r9,29
  8035ac:	2005883a 	mov	r2,r4
  8035b0:	3825883a 	mov	r18,r7
  8035b4:	19a2b03a 	or	r17,r3,r6
  8035b8:	8810d77a 	srli	r8,r17,29
  8035bc:	100490fa 	slli	r2,r2,3
  8035c0:	882290fa 	slli	r17,r17,3
  8035c4:	0401ffc4 	movi	r16,2047
  8035c8:	4090b03a 	or	r8,r8,r2
  8035cc:	003e4106 	br	802ed4 <__alt_data_end+0xff802ed4>
  8035d0:	0141ffc4 	movi	r5,2047
  8035d4:	117fc71e 	bne	r2,r5,8034f4 <__alt_data_end+0xff8034f4>
  8035d8:	4811883a 	mov	r8,r9
  8035dc:	3023883a 	mov	r17,r6
  8035e0:	1021883a 	mov	r16,r2
  8035e4:	003e3b06 	br	802ed4 <__alt_data_end+0xff802ed4>
  8035e8:	10002f26 	beq	r2,zero,8036a8 <__adddf3+0x850>
  8035ec:	4984b03a 	or	r2,r9,r6
  8035f0:	10001126 	beq	r2,zero,803638 <__adddf3+0x7e0>
  8035f4:	4004d0fa 	srli	r2,r8,3
  8035f8:	8822d0fa 	srli	r17,r17,3
  8035fc:	4010977a 	slli	r8,r8,29
  803600:	10c0022c 	andhi	r3,r2,8
  803604:	4462b03a 	or	r17,r8,r17
  803608:	183feb26 	beq	r3,zero,8035b8 <__alt_data_end+0xff8035b8>
  80360c:	4808d0fa 	srli	r4,r9,3
  803610:	20c0022c 	andhi	r3,r4,8
  803614:	183fe81e 	bne	r3,zero,8035b8 <__alt_data_end+0xff8035b8>
  803618:	300cd0fa 	srli	r6,r6,3
  80361c:	4806977a 	slli	r3,r9,29
  803620:	2005883a 	mov	r2,r4
  803624:	19a2b03a 	or	r17,r3,r6
  803628:	003fe306 	br	8035b8 <__alt_data_end+0xff8035b8>
  80362c:	0011883a 	mov	r8,zero
  803630:	0005883a 	mov	r2,zero
  803634:	003e3f06 	br	802f34 <__alt_data_end+0xff802f34>
  803638:	0401ffc4 	movi	r16,2047
  80363c:	003e2506 	br	802ed4 <__alt_data_end+0xff802ed4>
  803640:	0013883a 	mov	r9,zero
  803644:	003f8406 	br	803458 <__alt_data_end+0xff803458>
  803648:	0005883a 	mov	r2,zero
  80364c:	0007883a 	mov	r3,zero
  803650:	003e8906 	br	803078 <__alt_data_end+0xff803078>
  803654:	197ff804 	addi	r5,r3,-32
  803658:	01000804 	movi	r4,32
  80365c:	414ad83a 	srl	r5,r8,r5
  803660:	19002426 	beq	r3,r4,8036f4 <__adddf3+0x89c>
  803664:	01001004 	movi	r4,64
  803668:	20c7c83a 	sub	r3,r4,r3
  80366c:	40c6983a 	sll	r3,r8,r3
  803670:	1c46b03a 	or	r3,r3,r17
  803674:	1806c03a 	cmpne	r3,r3,zero
  803678:	28e2b03a 	or	r17,r5,r3
  80367c:	0007883a 	mov	r3,zero
  803680:	003f2306 	br	803310 <__alt_data_end+0xff803310>
  803684:	0007883a 	mov	r3,zero
  803688:	5811883a 	mov	r8,r11
  80368c:	00bfffc4 	movi	r2,-1
  803690:	0401ffc4 	movi	r16,2047
  803694:	003e7806 	br	803078 <__alt_data_end+0xff803078>
  803698:	4462b03a 	or	r17,r8,r17
  80369c:	8822c03a 	cmpne	r17,r17,zero
  8036a0:	0009883a 	mov	r4,zero
  8036a4:	003fa006 	br	803528 <__alt_data_end+0xff803528>
  8036a8:	4811883a 	mov	r8,r9
  8036ac:	3023883a 	mov	r17,r6
  8036b0:	0401ffc4 	movi	r16,2047
  8036b4:	003e0706 	br	802ed4 <__alt_data_end+0xff802ed4>
  8036b8:	4811883a 	mov	r8,r9
  8036bc:	3023883a 	mov	r17,r6
  8036c0:	003e0406 	br	802ed4 <__alt_data_end+0xff802ed4>
  8036c4:	21fff804 	addi	r7,r4,-32
  8036c8:	01400804 	movi	r5,32
  8036cc:	41ced83a 	srl	r7,r8,r7
  8036d0:	21400a26 	beq	r4,r5,8036fc <__adddf3+0x8a4>
  8036d4:	01401004 	movi	r5,64
  8036d8:	2909c83a 	sub	r4,r5,r4
  8036dc:	4108983a 	sll	r4,r8,r4
  8036e0:	2448b03a 	or	r4,r4,r17
  8036e4:	2008c03a 	cmpne	r4,r4,zero
  8036e8:	3922b03a 	or	r17,r7,r4
  8036ec:	0009883a 	mov	r4,zero
  8036f0:	003f8d06 	br	803528 <__alt_data_end+0xff803528>
  8036f4:	0007883a 	mov	r3,zero
  8036f8:	003fdd06 	br	803670 <__alt_data_end+0xff803670>
  8036fc:	0009883a 	mov	r4,zero
  803700:	003ff706 	br	8036e0 <__alt_data_end+0xff8036e0>

00803704 <__eqdf2>:
  803704:	2804d53a 	srli	r2,r5,20
  803708:	3806d53a 	srli	r3,r7,20
  80370c:	02000434 	movhi	r8,16
  803710:	423fffc4 	addi	r8,r8,-1
  803714:	1081ffcc 	andi	r2,r2,2047
  803718:	0281ffc4 	movi	r10,2047
  80371c:	2a12703a 	and	r9,r5,r8
  803720:	18c1ffcc 	andi	r3,r3,2047
  803724:	3a10703a 	and	r8,r7,r8
  803728:	280ad7fa 	srli	r5,r5,31
  80372c:	380ed7fa 	srli	r7,r7,31
  803730:	12801026 	beq	r2,r10,803774 <__eqdf2+0x70>
  803734:	0281ffc4 	movi	r10,2047
  803738:	1a800a26 	beq	r3,r10,803764 <__eqdf2+0x60>
  80373c:	10c00226 	beq	r2,r3,803748 <__eqdf2+0x44>
  803740:	00800044 	movi	r2,1
  803744:	f800283a 	ret
  803748:	4a3ffd1e 	bne	r9,r8,803740 <__alt_data_end+0xff803740>
  80374c:	21bffc1e 	bne	r4,r6,803740 <__alt_data_end+0xff803740>
  803750:	29c00c26 	beq	r5,r7,803784 <__eqdf2+0x80>
  803754:	103ffa1e 	bne	r2,zero,803740 <__alt_data_end+0xff803740>
  803758:	2244b03a 	or	r2,r4,r9
  80375c:	1004c03a 	cmpne	r2,r2,zero
  803760:	f800283a 	ret
  803764:	3214b03a 	or	r10,r6,r8
  803768:	503ff426 	beq	r10,zero,80373c <__alt_data_end+0xff80373c>
  80376c:	00800044 	movi	r2,1
  803770:	f800283a 	ret
  803774:	2254b03a 	or	r10,r4,r9
  803778:	503fee26 	beq	r10,zero,803734 <__alt_data_end+0xff803734>
  80377c:	00800044 	movi	r2,1
  803780:	f800283a 	ret
  803784:	0005883a 	mov	r2,zero
  803788:	f800283a 	ret

0080378c <__gedf2>:
  80378c:	2804d53a 	srli	r2,r5,20
  803790:	3806d53a 	srli	r3,r7,20
  803794:	02000434 	movhi	r8,16
  803798:	423fffc4 	addi	r8,r8,-1
  80379c:	1081ffcc 	andi	r2,r2,2047
  8037a0:	0241ffc4 	movi	r9,2047
  8037a4:	2a14703a 	and	r10,r5,r8
  8037a8:	18c1ffcc 	andi	r3,r3,2047
  8037ac:	3a10703a 	and	r8,r7,r8
  8037b0:	280ad7fa 	srli	r5,r5,31
  8037b4:	380ed7fa 	srli	r7,r7,31
  8037b8:	12401d26 	beq	r2,r9,803830 <__gedf2+0xa4>
  8037bc:	0241ffc4 	movi	r9,2047
  8037c0:	1a401226 	beq	r3,r9,80380c <__gedf2+0x80>
  8037c4:	1000081e 	bne	r2,zero,8037e8 <__gedf2+0x5c>
  8037c8:	2296b03a 	or	r11,r4,r10
  8037cc:	5813003a 	cmpeq	r9,r11,zero
  8037d0:	1800091e 	bne	r3,zero,8037f8 <__gedf2+0x6c>
  8037d4:	3218b03a 	or	r12,r6,r8
  8037d8:	6000071e 	bne	r12,zero,8037f8 <__gedf2+0x6c>
  8037dc:	0005883a 	mov	r2,zero
  8037e0:	5800101e 	bne	r11,zero,803824 <__gedf2+0x98>
  8037e4:	f800283a 	ret
  8037e8:	18000c1e 	bne	r3,zero,80381c <__gedf2+0x90>
  8037ec:	3212b03a 	or	r9,r6,r8
  8037f0:	48000c26 	beq	r9,zero,803824 <__gedf2+0x98>
  8037f4:	0013883a 	mov	r9,zero
  8037f8:	39c03fcc 	andi	r7,r7,255
  8037fc:	48000826 	beq	r9,zero,803820 <__gedf2+0x94>
  803800:	38000926 	beq	r7,zero,803828 <__gedf2+0x9c>
  803804:	00800044 	movi	r2,1
  803808:	f800283a 	ret
  80380c:	3212b03a 	or	r9,r6,r8
  803810:	483fec26 	beq	r9,zero,8037c4 <__alt_data_end+0xff8037c4>
  803814:	00bfff84 	movi	r2,-2
  803818:	f800283a 	ret
  80381c:	39c03fcc 	andi	r7,r7,255
  803820:	29c00626 	beq	r5,r7,80383c <__gedf2+0xb0>
  803824:	283ff726 	beq	r5,zero,803804 <__alt_data_end+0xff803804>
  803828:	00bfffc4 	movi	r2,-1
  80382c:	f800283a 	ret
  803830:	2292b03a 	or	r9,r4,r10
  803834:	483fe126 	beq	r9,zero,8037bc <__alt_data_end+0xff8037bc>
  803838:	003ff606 	br	803814 <__alt_data_end+0xff803814>
  80383c:	18bff916 	blt	r3,r2,803824 <__alt_data_end+0xff803824>
  803840:	10c00316 	blt	r2,r3,803850 <__gedf2+0xc4>
  803844:	42bff736 	bltu	r8,r10,803824 <__alt_data_end+0xff803824>
  803848:	52000326 	beq	r10,r8,803858 <__gedf2+0xcc>
  80384c:	5200042e 	bgeu	r10,r8,803860 <__gedf2+0xd4>
  803850:	283fec1e 	bne	r5,zero,803804 <__alt_data_end+0xff803804>
  803854:	003ff406 	br	803828 <__alt_data_end+0xff803828>
  803858:	313ff236 	bltu	r6,r4,803824 <__alt_data_end+0xff803824>
  80385c:	21bffc36 	bltu	r4,r6,803850 <__alt_data_end+0xff803850>
  803860:	0005883a 	mov	r2,zero
  803864:	f800283a 	ret

00803868 <__muldf3>:
  803868:	defff304 	addi	sp,sp,-52
  80386c:	2804d53a 	srli	r2,r5,20
  803870:	dd800915 	stw	r22,36(sp)
  803874:	282cd7fa 	srli	r22,r5,31
  803878:	dc000315 	stw	r16,12(sp)
  80387c:	04000434 	movhi	r16,16
  803880:	dd400815 	stw	r21,32(sp)
  803884:	dc800515 	stw	r18,20(sp)
  803888:	843fffc4 	addi	r16,r16,-1
  80388c:	dfc00c15 	stw	ra,48(sp)
  803890:	df000b15 	stw	fp,44(sp)
  803894:	ddc00a15 	stw	r23,40(sp)
  803898:	dd000715 	stw	r20,28(sp)
  80389c:	dcc00615 	stw	r19,24(sp)
  8038a0:	dc400415 	stw	r17,16(sp)
  8038a4:	1481ffcc 	andi	r18,r2,2047
  8038a8:	2c20703a 	and	r16,r5,r16
  8038ac:	b02b883a 	mov	r21,r22
  8038b0:	b2403fcc 	andi	r9,r22,255
  8038b4:	90006026 	beq	r18,zero,803a38 <__muldf3+0x1d0>
  8038b8:	0081ffc4 	movi	r2,2047
  8038bc:	2029883a 	mov	r20,r4
  8038c0:	90803626 	beq	r18,r2,80399c <__muldf3+0x134>
  8038c4:	80800434 	orhi	r2,r16,16
  8038c8:	100490fa 	slli	r2,r2,3
  8038cc:	2020d77a 	srli	r16,r4,29
  8038d0:	202890fa 	slli	r20,r4,3
  8038d4:	94bf0044 	addi	r18,r18,-1023
  8038d8:	80a0b03a 	or	r16,r16,r2
  8038dc:	0027883a 	mov	r19,zero
  8038e0:	0039883a 	mov	fp,zero
  8038e4:	3804d53a 	srli	r2,r7,20
  8038e8:	382ed7fa 	srli	r23,r7,31
  8038ec:	04400434 	movhi	r17,16
  8038f0:	8c7fffc4 	addi	r17,r17,-1
  8038f4:	1081ffcc 	andi	r2,r2,2047
  8038f8:	3011883a 	mov	r8,r6
  8038fc:	3c62703a 	and	r17,r7,r17
  803900:	ba803fcc 	andi	r10,r23,255
  803904:	10006d26 	beq	r2,zero,803abc <__muldf3+0x254>
  803908:	00c1ffc4 	movi	r3,2047
  80390c:	10c06526 	beq	r2,r3,803aa4 <__muldf3+0x23c>
  803910:	88c00434 	orhi	r3,r17,16
  803914:	180690fa 	slli	r3,r3,3
  803918:	3022d77a 	srli	r17,r6,29
  80391c:	301090fa 	slli	r8,r6,3
  803920:	10bf0044 	addi	r2,r2,-1023
  803924:	88e2b03a 	or	r17,r17,r3
  803928:	000b883a 	mov	r5,zero
  80392c:	9085883a 	add	r2,r18,r2
  803930:	2cc8b03a 	or	r4,r5,r19
  803934:	00c003c4 	movi	r3,15
  803938:	bdacf03a 	xor	r22,r23,r22
  80393c:	12c00044 	addi	r11,r2,1
  803940:	19009936 	bltu	r3,r4,803ba8 <__muldf3+0x340>
  803944:	200890ba 	slli	r4,r4,2
  803948:	00c02034 	movhi	r3,128
  80394c:	18ce5704 	addi	r3,r3,14684
  803950:	20c9883a 	add	r4,r4,r3
  803954:	20c00017 	ldw	r3,0(r4)
  803958:	1800683a 	jmp	r3
  80395c:	00803ba8 	cmpgeui	r2,zero,238
  803960:	008039bc 	xorhi	r2,zero,230
  803964:	008039bc 	xorhi	r2,zero,230
  803968:	008039b8 	rdprs	r2,zero,230
  80396c:	00803b84 	movi	r2,238
  803970:	00803b84 	movi	r2,238
  803974:	00803b6c 	andhi	r2,zero,237
  803978:	008039b8 	rdprs	r2,zero,230
  80397c:	00803b84 	movi	r2,238
  803980:	00803b6c 	andhi	r2,zero,237
  803984:	00803b84 	movi	r2,238
  803988:	008039b8 	rdprs	r2,zero,230
  80398c:	00803b94 	movui	r2,238
  803990:	00803b94 	movui	r2,238
  803994:	00803b94 	movui	r2,238
  803998:	00803db0 	cmpltui	r2,zero,246
  80399c:	2404b03a 	or	r2,r4,r16
  8039a0:	10006f1e 	bne	r2,zero,803b60 <__muldf3+0x2f8>
  8039a4:	04c00204 	movi	r19,8
  8039a8:	0021883a 	mov	r16,zero
  8039ac:	0029883a 	mov	r20,zero
  8039b0:	07000084 	movi	fp,2
  8039b4:	003fcb06 	br	8038e4 <__alt_data_end+0xff8038e4>
  8039b8:	502d883a 	mov	r22,r10
  8039bc:	00800084 	movi	r2,2
  8039c0:	28805726 	beq	r5,r2,803b20 <__muldf3+0x2b8>
  8039c4:	008000c4 	movi	r2,3
  8039c8:	28816626 	beq	r5,r2,803f64 <__muldf3+0x6fc>
  8039cc:	00800044 	movi	r2,1
  8039d0:	2881411e 	bne	r5,r2,803ed8 <__muldf3+0x670>
  8039d4:	b02b883a 	mov	r21,r22
  8039d8:	0005883a 	mov	r2,zero
  8039dc:	000b883a 	mov	r5,zero
  8039e0:	0029883a 	mov	r20,zero
  8039e4:	1004953a 	slli	r2,r2,20
  8039e8:	a8c03fcc 	andi	r3,r21,255
  8039ec:	04400434 	movhi	r17,16
  8039f0:	8c7fffc4 	addi	r17,r17,-1
  8039f4:	180697fa 	slli	r3,r3,31
  8039f8:	2c4a703a 	and	r5,r5,r17
  8039fc:	288ab03a 	or	r5,r5,r2
  803a00:	28c6b03a 	or	r3,r5,r3
  803a04:	a005883a 	mov	r2,r20
  803a08:	dfc00c17 	ldw	ra,48(sp)
  803a0c:	df000b17 	ldw	fp,44(sp)
  803a10:	ddc00a17 	ldw	r23,40(sp)
  803a14:	dd800917 	ldw	r22,36(sp)
  803a18:	dd400817 	ldw	r21,32(sp)
  803a1c:	dd000717 	ldw	r20,28(sp)
  803a20:	dcc00617 	ldw	r19,24(sp)
  803a24:	dc800517 	ldw	r18,20(sp)
  803a28:	dc400417 	ldw	r17,16(sp)
  803a2c:	dc000317 	ldw	r16,12(sp)
  803a30:	dec00d04 	addi	sp,sp,52
  803a34:	f800283a 	ret
  803a38:	2404b03a 	or	r2,r4,r16
  803a3c:	2027883a 	mov	r19,r4
  803a40:	10004226 	beq	r2,zero,803b4c <__muldf3+0x2e4>
  803a44:	8000fc26 	beq	r16,zero,803e38 <__muldf3+0x5d0>
  803a48:	8009883a 	mov	r4,r16
  803a4c:	d9800215 	stw	r6,8(sp)
  803a50:	d9c00015 	stw	r7,0(sp)
  803a54:	da400115 	stw	r9,4(sp)
  803a58:	0804c900 	call	804c90 <__clzsi2>
  803a5c:	d9800217 	ldw	r6,8(sp)
  803a60:	d9c00017 	ldw	r7,0(sp)
  803a64:	da400117 	ldw	r9,4(sp)
  803a68:	113ffd44 	addi	r4,r2,-11
  803a6c:	00c00704 	movi	r3,28
  803a70:	1900ed16 	blt	r3,r4,803e28 <__muldf3+0x5c0>
  803a74:	00c00744 	movi	r3,29
  803a78:	147ffe04 	addi	r17,r2,-8
  803a7c:	1907c83a 	sub	r3,r3,r4
  803a80:	8460983a 	sll	r16,r16,r17
  803a84:	98c6d83a 	srl	r3,r19,r3
  803a88:	9c68983a 	sll	r20,r19,r17
  803a8c:	1c20b03a 	or	r16,r3,r16
  803a90:	1080fcc4 	addi	r2,r2,1011
  803a94:	00a5c83a 	sub	r18,zero,r2
  803a98:	0027883a 	mov	r19,zero
  803a9c:	0039883a 	mov	fp,zero
  803aa0:	003f9006 	br	8038e4 <__alt_data_end+0xff8038e4>
  803aa4:	3446b03a 	or	r3,r6,r17
  803aa8:	1800261e 	bne	r3,zero,803b44 <__muldf3+0x2dc>
  803aac:	0023883a 	mov	r17,zero
  803ab0:	0011883a 	mov	r8,zero
  803ab4:	01400084 	movi	r5,2
  803ab8:	003f9c06 	br	80392c <__alt_data_end+0xff80392c>
  803abc:	3446b03a 	or	r3,r6,r17
  803ac0:	18001c26 	beq	r3,zero,803b34 <__muldf3+0x2cc>
  803ac4:	8800ce26 	beq	r17,zero,803e00 <__muldf3+0x598>
  803ac8:	8809883a 	mov	r4,r17
  803acc:	d9800215 	stw	r6,8(sp)
  803ad0:	da400115 	stw	r9,4(sp)
  803ad4:	da800015 	stw	r10,0(sp)
  803ad8:	0804c900 	call	804c90 <__clzsi2>
  803adc:	d9800217 	ldw	r6,8(sp)
  803ae0:	da400117 	ldw	r9,4(sp)
  803ae4:	da800017 	ldw	r10,0(sp)
  803ae8:	113ffd44 	addi	r4,r2,-11
  803aec:	00c00704 	movi	r3,28
  803af0:	1900bf16 	blt	r3,r4,803df0 <__muldf3+0x588>
  803af4:	00c00744 	movi	r3,29
  803af8:	123ffe04 	addi	r8,r2,-8
  803afc:	1907c83a 	sub	r3,r3,r4
  803b00:	8a22983a 	sll	r17,r17,r8
  803b04:	30c6d83a 	srl	r3,r6,r3
  803b08:	3210983a 	sll	r8,r6,r8
  803b0c:	1c62b03a 	or	r17,r3,r17
  803b10:	1080fcc4 	addi	r2,r2,1011
  803b14:	0085c83a 	sub	r2,zero,r2
  803b18:	000b883a 	mov	r5,zero
  803b1c:	003f8306 	br	80392c <__alt_data_end+0xff80392c>
  803b20:	b02b883a 	mov	r21,r22
  803b24:	0081ffc4 	movi	r2,2047
  803b28:	000b883a 	mov	r5,zero
  803b2c:	0029883a 	mov	r20,zero
  803b30:	003fac06 	br	8039e4 <__alt_data_end+0xff8039e4>
  803b34:	0023883a 	mov	r17,zero
  803b38:	0011883a 	mov	r8,zero
  803b3c:	01400044 	movi	r5,1
  803b40:	003f7a06 	br	80392c <__alt_data_end+0xff80392c>
  803b44:	014000c4 	movi	r5,3
  803b48:	003f7806 	br	80392c <__alt_data_end+0xff80392c>
  803b4c:	04c00104 	movi	r19,4
  803b50:	0021883a 	mov	r16,zero
  803b54:	0029883a 	mov	r20,zero
  803b58:	07000044 	movi	fp,1
  803b5c:	003f6106 	br	8038e4 <__alt_data_end+0xff8038e4>
  803b60:	04c00304 	movi	r19,12
  803b64:	070000c4 	movi	fp,3
  803b68:	003f5e06 	br	8038e4 <__alt_data_end+0xff8038e4>
  803b6c:	01400434 	movhi	r5,16
  803b70:	002b883a 	mov	r21,zero
  803b74:	297fffc4 	addi	r5,r5,-1
  803b78:	053fffc4 	movi	r20,-1
  803b7c:	0081ffc4 	movi	r2,2047
  803b80:	003f9806 	br	8039e4 <__alt_data_end+0xff8039e4>
  803b84:	8023883a 	mov	r17,r16
  803b88:	a011883a 	mov	r8,r20
  803b8c:	e00b883a 	mov	r5,fp
  803b90:	003f8a06 	br	8039bc <__alt_data_end+0xff8039bc>
  803b94:	8023883a 	mov	r17,r16
  803b98:	a011883a 	mov	r8,r20
  803b9c:	482d883a 	mov	r22,r9
  803ba0:	e00b883a 	mov	r5,fp
  803ba4:	003f8506 	br	8039bc <__alt_data_end+0xff8039bc>
  803ba8:	a00ad43a 	srli	r5,r20,16
  803bac:	401ad43a 	srli	r13,r8,16
  803bb0:	a53fffcc 	andi	r20,r20,65535
  803bb4:	423fffcc 	andi	r8,r8,65535
  803bb8:	4519383a 	mul	r12,r8,r20
  803bbc:	4147383a 	mul	r3,r8,r5
  803bc0:	6d09383a 	mul	r4,r13,r20
  803bc4:	600cd43a 	srli	r6,r12,16
  803bc8:	2b5d383a 	mul	r14,r5,r13
  803bcc:	20c9883a 	add	r4,r4,r3
  803bd0:	310d883a 	add	r6,r6,r4
  803bd4:	30c0022e 	bgeu	r6,r3,803be0 <__muldf3+0x378>
  803bd8:	00c00074 	movhi	r3,1
  803bdc:	70dd883a 	add	r14,r14,r3
  803be0:	8826d43a 	srli	r19,r17,16
  803be4:	8bffffcc 	andi	r15,r17,65535
  803be8:	7d23383a 	mul	r17,r15,r20
  803bec:	7949383a 	mul	r4,r15,r5
  803bf0:	9d29383a 	mul	r20,r19,r20
  803bf4:	8814d43a 	srli	r10,r17,16
  803bf8:	3012943a 	slli	r9,r6,16
  803bfc:	a129883a 	add	r20,r20,r4
  803c00:	633fffcc 	andi	r12,r12,65535
  803c04:	5515883a 	add	r10,r10,r20
  803c08:	3006d43a 	srli	r3,r6,16
  803c0c:	4b13883a 	add	r9,r9,r12
  803c10:	2ccb383a 	mul	r5,r5,r19
  803c14:	5100022e 	bgeu	r10,r4,803c20 <__muldf3+0x3b8>
  803c18:	01000074 	movhi	r4,1
  803c1c:	290b883a 	add	r5,r5,r4
  803c20:	802ad43a 	srli	r21,r16,16
  803c24:	843fffcc 	andi	r16,r16,65535
  803c28:	440d383a 	mul	r6,r8,r16
  803c2c:	4565383a 	mul	r18,r8,r21
  803c30:	8349383a 	mul	r4,r16,r13
  803c34:	500e943a 	slli	r7,r10,16
  803c38:	3010d43a 	srli	r8,r6,16
  803c3c:	5028d43a 	srli	r20,r10,16
  803c40:	2489883a 	add	r4,r4,r18
  803c44:	8abfffcc 	andi	r10,r17,65535
  803c48:	3a95883a 	add	r10,r7,r10
  803c4c:	4119883a 	add	r12,r8,r4
  803c50:	a169883a 	add	r20,r20,r5
  803c54:	1a87883a 	add	r3,r3,r10
  803c58:	6d5b383a 	mul	r13,r13,r21
  803c5c:	6480022e 	bgeu	r12,r18,803c68 <__muldf3+0x400>
  803c60:	01000074 	movhi	r4,1
  803c64:	691b883a 	add	r13,r13,r4
  803c68:	7c25383a 	mul	r18,r15,r16
  803c6c:	7d4b383a 	mul	r5,r15,r21
  803c70:	84cf383a 	mul	r7,r16,r19
  803c74:	901ed43a 	srli	r15,r18,16
  803c78:	6008d43a 	srli	r4,r12,16
  803c7c:	6010943a 	slli	r8,r12,16
  803c80:	394f883a 	add	r7,r7,r5
  803c84:	333fffcc 	andi	r12,r6,65535
  803c88:	79df883a 	add	r15,r15,r7
  803c8c:	235b883a 	add	r13,r4,r13
  803c90:	9d63383a 	mul	r17,r19,r21
  803c94:	4309883a 	add	r4,r8,r12
  803c98:	7940022e 	bgeu	r15,r5,803ca4 <__muldf3+0x43c>
  803c9c:	01400074 	movhi	r5,1
  803ca0:	8963883a 	add	r17,r17,r5
  803ca4:	780a943a 	slli	r5,r15,16
  803ca8:	91bfffcc 	andi	r6,r18,65535
  803cac:	70c7883a 	add	r3,r14,r3
  803cb0:	298d883a 	add	r6,r5,r6
  803cb4:	1a8f803a 	cmpltu	r7,r3,r10
  803cb8:	350b883a 	add	r5,r6,r20
  803cbc:	20c7883a 	add	r3,r4,r3
  803cc0:	3955883a 	add	r10,r7,r5
  803cc4:	1909803a 	cmpltu	r4,r3,r4
  803cc8:	6a91883a 	add	r8,r13,r10
  803ccc:	780cd43a 	srli	r6,r15,16
  803cd0:	2219883a 	add	r12,r4,r8
  803cd4:	2d0b803a 	cmpltu	r5,r5,r20
  803cd8:	51cf803a 	cmpltu	r7,r10,r7
  803cdc:	29ceb03a 	or	r7,r5,r7
  803ce0:	4351803a 	cmpltu	r8,r8,r13
  803ce4:	610b803a 	cmpltu	r5,r12,r4
  803ce8:	4148b03a 	or	r4,r8,r5
  803cec:	398f883a 	add	r7,r7,r6
  803cf0:	3909883a 	add	r4,r7,r4
  803cf4:	1810927a 	slli	r8,r3,9
  803cf8:	2449883a 	add	r4,r4,r17
  803cfc:	2008927a 	slli	r4,r4,9
  803d00:	6022d5fa 	srli	r17,r12,23
  803d04:	1806d5fa 	srli	r3,r3,23
  803d08:	4252b03a 	or	r9,r8,r9
  803d0c:	600a927a 	slli	r5,r12,9
  803d10:	4810c03a 	cmpne	r8,r9,zero
  803d14:	2462b03a 	or	r17,r4,r17
  803d18:	40c6b03a 	or	r3,r8,r3
  803d1c:	8900402c 	andhi	r4,r17,256
  803d20:	1950b03a 	or	r8,r3,r5
  803d24:	20000726 	beq	r4,zero,803d44 <__muldf3+0x4dc>
  803d28:	4006d07a 	srli	r3,r8,1
  803d2c:	880497fa 	slli	r2,r17,31
  803d30:	4200004c 	andi	r8,r8,1
  803d34:	8822d07a 	srli	r17,r17,1
  803d38:	1a10b03a 	or	r8,r3,r8
  803d3c:	1210b03a 	or	r8,r2,r8
  803d40:	5805883a 	mov	r2,r11
  803d44:	1140ffc4 	addi	r5,r2,1023
  803d48:	0140440e 	bge	zero,r5,803e5c <__muldf3+0x5f4>
  803d4c:	40c001cc 	andi	r3,r8,7
  803d50:	18000726 	beq	r3,zero,803d70 <__muldf3+0x508>
  803d54:	40c003cc 	andi	r3,r8,15
  803d58:	01000104 	movi	r4,4
  803d5c:	19000426 	beq	r3,r4,803d70 <__muldf3+0x508>
  803d60:	4107883a 	add	r3,r8,r4
  803d64:	1a11803a 	cmpltu	r8,r3,r8
  803d68:	8a23883a 	add	r17,r17,r8
  803d6c:	1811883a 	mov	r8,r3
  803d70:	88c0402c 	andhi	r3,r17,256
  803d74:	18000426 	beq	r3,zero,803d88 <__muldf3+0x520>
  803d78:	11410004 	addi	r5,r2,1024
  803d7c:	00bfc034 	movhi	r2,65280
  803d80:	10bfffc4 	addi	r2,r2,-1
  803d84:	88a2703a 	and	r17,r17,r2
  803d88:	0081ff84 	movi	r2,2046
  803d8c:	117f6416 	blt	r2,r5,803b20 <__alt_data_end+0xff803b20>
  803d90:	8828977a 	slli	r20,r17,29
  803d94:	4010d0fa 	srli	r8,r8,3
  803d98:	8822927a 	slli	r17,r17,9
  803d9c:	2881ffcc 	andi	r2,r5,2047
  803da0:	a228b03a 	or	r20,r20,r8
  803da4:	880ad33a 	srli	r5,r17,12
  803da8:	b02b883a 	mov	r21,r22
  803dac:	003f0d06 	br	8039e4 <__alt_data_end+0xff8039e4>
  803db0:	8080022c 	andhi	r2,r16,8
  803db4:	10000926 	beq	r2,zero,803ddc <__muldf3+0x574>
  803db8:	8880022c 	andhi	r2,r17,8
  803dbc:	1000071e 	bne	r2,zero,803ddc <__muldf3+0x574>
  803dc0:	00800434 	movhi	r2,16
  803dc4:	89400234 	orhi	r5,r17,8
  803dc8:	10bfffc4 	addi	r2,r2,-1
  803dcc:	b82b883a 	mov	r21,r23
  803dd0:	288a703a 	and	r5,r5,r2
  803dd4:	4029883a 	mov	r20,r8
  803dd8:	003f6806 	br	803b7c <__alt_data_end+0xff803b7c>
  803ddc:	00800434 	movhi	r2,16
  803de0:	81400234 	orhi	r5,r16,8
  803de4:	10bfffc4 	addi	r2,r2,-1
  803de8:	288a703a 	and	r5,r5,r2
  803dec:	003f6306 	br	803b7c <__alt_data_end+0xff803b7c>
  803df0:	147ff604 	addi	r17,r2,-40
  803df4:	3462983a 	sll	r17,r6,r17
  803df8:	0011883a 	mov	r8,zero
  803dfc:	003f4406 	br	803b10 <__alt_data_end+0xff803b10>
  803e00:	3009883a 	mov	r4,r6
  803e04:	d9800215 	stw	r6,8(sp)
  803e08:	da400115 	stw	r9,4(sp)
  803e0c:	da800015 	stw	r10,0(sp)
  803e10:	0804c900 	call	804c90 <__clzsi2>
  803e14:	10800804 	addi	r2,r2,32
  803e18:	da800017 	ldw	r10,0(sp)
  803e1c:	da400117 	ldw	r9,4(sp)
  803e20:	d9800217 	ldw	r6,8(sp)
  803e24:	003f3006 	br	803ae8 <__alt_data_end+0xff803ae8>
  803e28:	143ff604 	addi	r16,r2,-40
  803e2c:	9c20983a 	sll	r16,r19,r16
  803e30:	0029883a 	mov	r20,zero
  803e34:	003f1606 	br	803a90 <__alt_data_end+0xff803a90>
  803e38:	d9800215 	stw	r6,8(sp)
  803e3c:	d9c00015 	stw	r7,0(sp)
  803e40:	da400115 	stw	r9,4(sp)
  803e44:	0804c900 	call	804c90 <__clzsi2>
  803e48:	10800804 	addi	r2,r2,32
  803e4c:	da400117 	ldw	r9,4(sp)
  803e50:	d9c00017 	ldw	r7,0(sp)
  803e54:	d9800217 	ldw	r6,8(sp)
  803e58:	003f0306 	br	803a68 <__alt_data_end+0xff803a68>
  803e5c:	00c00044 	movi	r3,1
  803e60:	1947c83a 	sub	r3,r3,r5
  803e64:	00800e04 	movi	r2,56
  803e68:	10feda16 	blt	r2,r3,8039d4 <__alt_data_end+0xff8039d4>
  803e6c:	008007c4 	movi	r2,31
  803e70:	10c01b16 	blt	r2,r3,803ee0 <__muldf3+0x678>
  803e74:	00800804 	movi	r2,32
  803e78:	10c5c83a 	sub	r2,r2,r3
  803e7c:	888a983a 	sll	r5,r17,r2
  803e80:	40c8d83a 	srl	r4,r8,r3
  803e84:	4084983a 	sll	r2,r8,r2
  803e88:	88e2d83a 	srl	r17,r17,r3
  803e8c:	2906b03a 	or	r3,r5,r4
  803e90:	1004c03a 	cmpne	r2,r2,zero
  803e94:	1886b03a 	or	r3,r3,r2
  803e98:	188001cc 	andi	r2,r3,7
  803e9c:	10000726 	beq	r2,zero,803ebc <__muldf3+0x654>
  803ea0:	188003cc 	andi	r2,r3,15
  803ea4:	01000104 	movi	r4,4
  803ea8:	11000426 	beq	r2,r4,803ebc <__muldf3+0x654>
  803eac:	1805883a 	mov	r2,r3
  803eb0:	10c00104 	addi	r3,r2,4
  803eb4:	1885803a 	cmpltu	r2,r3,r2
  803eb8:	88a3883a 	add	r17,r17,r2
  803ebc:	8880202c 	andhi	r2,r17,128
  803ec0:	10001c26 	beq	r2,zero,803f34 <__muldf3+0x6cc>
  803ec4:	b02b883a 	mov	r21,r22
  803ec8:	00800044 	movi	r2,1
  803ecc:	000b883a 	mov	r5,zero
  803ed0:	0029883a 	mov	r20,zero
  803ed4:	003ec306 	br	8039e4 <__alt_data_end+0xff8039e4>
  803ed8:	5805883a 	mov	r2,r11
  803edc:	003f9906 	br	803d44 <__alt_data_end+0xff803d44>
  803ee0:	00bff844 	movi	r2,-31
  803ee4:	1145c83a 	sub	r2,r2,r5
  803ee8:	8888d83a 	srl	r4,r17,r2
  803eec:	00800804 	movi	r2,32
  803ef0:	18801a26 	beq	r3,r2,803f5c <__muldf3+0x6f4>
  803ef4:	00801004 	movi	r2,64
  803ef8:	10c5c83a 	sub	r2,r2,r3
  803efc:	8884983a 	sll	r2,r17,r2
  803f00:	1204b03a 	or	r2,r2,r8
  803f04:	1004c03a 	cmpne	r2,r2,zero
  803f08:	2084b03a 	or	r2,r4,r2
  803f0c:	144001cc 	andi	r17,r2,7
  803f10:	88000d1e 	bne	r17,zero,803f48 <__muldf3+0x6e0>
  803f14:	000b883a 	mov	r5,zero
  803f18:	1028d0fa 	srli	r20,r2,3
  803f1c:	b02b883a 	mov	r21,r22
  803f20:	0005883a 	mov	r2,zero
  803f24:	a468b03a 	or	r20,r20,r17
  803f28:	003eae06 	br	8039e4 <__alt_data_end+0xff8039e4>
  803f2c:	1007883a 	mov	r3,r2
  803f30:	0023883a 	mov	r17,zero
  803f34:	880a927a 	slli	r5,r17,9
  803f38:	1805883a 	mov	r2,r3
  803f3c:	8822977a 	slli	r17,r17,29
  803f40:	280ad33a 	srli	r5,r5,12
  803f44:	003ff406 	br	803f18 <__alt_data_end+0xff803f18>
  803f48:	10c003cc 	andi	r3,r2,15
  803f4c:	01000104 	movi	r4,4
  803f50:	193ff626 	beq	r3,r4,803f2c <__alt_data_end+0xff803f2c>
  803f54:	0023883a 	mov	r17,zero
  803f58:	003fd506 	br	803eb0 <__alt_data_end+0xff803eb0>
  803f5c:	0005883a 	mov	r2,zero
  803f60:	003fe706 	br	803f00 <__alt_data_end+0xff803f00>
  803f64:	00800434 	movhi	r2,16
  803f68:	89400234 	orhi	r5,r17,8
  803f6c:	10bfffc4 	addi	r2,r2,-1
  803f70:	b02b883a 	mov	r21,r22
  803f74:	288a703a 	and	r5,r5,r2
  803f78:	4029883a 	mov	r20,r8
  803f7c:	003eff06 	br	803b7c <__alt_data_end+0xff803b7c>

00803f80 <__subdf3>:
  803f80:	02000434 	movhi	r8,16
  803f84:	423fffc4 	addi	r8,r8,-1
  803f88:	defffb04 	addi	sp,sp,-20
  803f8c:	2a14703a 	and	r10,r5,r8
  803f90:	3812d53a 	srli	r9,r7,20
  803f94:	3a10703a 	and	r8,r7,r8
  803f98:	2006d77a 	srli	r3,r4,29
  803f9c:	3004d77a 	srli	r2,r6,29
  803fa0:	dc000015 	stw	r16,0(sp)
  803fa4:	501490fa 	slli	r10,r10,3
  803fa8:	2820d53a 	srli	r16,r5,20
  803fac:	401090fa 	slli	r8,r8,3
  803fb0:	dc800215 	stw	r18,8(sp)
  803fb4:	dc400115 	stw	r17,4(sp)
  803fb8:	dfc00415 	stw	ra,16(sp)
  803fbc:	202290fa 	slli	r17,r4,3
  803fc0:	dcc00315 	stw	r19,12(sp)
  803fc4:	4a41ffcc 	andi	r9,r9,2047
  803fc8:	0101ffc4 	movi	r4,2047
  803fcc:	2824d7fa 	srli	r18,r5,31
  803fd0:	8401ffcc 	andi	r16,r16,2047
  803fd4:	50c6b03a 	or	r3,r10,r3
  803fd8:	380ed7fa 	srli	r7,r7,31
  803fdc:	408ab03a 	or	r5,r8,r2
  803fe0:	300c90fa 	slli	r6,r6,3
  803fe4:	49009626 	beq	r9,r4,804240 <__subdf3+0x2c0>
  803fe8:	39c0005c 	xori	r7,r7,1
  803fec:	8245c83a 	sub	r2,r16,r9
  803ff0:	3c807426 	beq	r7,r18,8041c4 <__subdf3+0x244>
  803ff4:	0080af0e 	bge	zero,r2,8042b4 <__subdf3+0x334>
  803ff8:	48002a1e 	bne	r9,zero,8040a4 <__subdf3+0x124>
  803ffc:	2988b03a 	or	r4,r5,r6
  804000:	20009a1e 	bne	r4,zero,80426c <__subdf3+0x2ec>
  804004:	888001cc 	andi	r2,r17,7
  804008:	10000726 	beq	r2,zero,804028 <__subdf3+0xa8>
  80400c:	888003cc 	andi	r2,r17,15
  804010:	01000104 	movi	r4,4
  804014:	11000426 	beq	r2,r4,804028 <__subdf3+0xa8>
  804018:	890b883a 	add	r5,r17,r4
  80401c:	2c63803a 	cmpltu	r17,r5,r17
  804020:	1c47883a 	add	r3,r3,r17
  804024:	2823883a 	mov	r17,r5
  804028:	1880202c 	andhi	r2,r3,128
  80402c:	10005926 	beq	r2,zero,804194 <__subdf3+0x214>
  804030:	84000044 	addi	r16,r16,1
  804034:	0081ffc4 	movi	r2,2047
  804038:	8080be26 	beq	r16,r2,804334 <__subdf3+0x3b4>
  80403c:	017fe034 	movhi	r5,65408
  804040:	297fffc4 	addi	r5,r5,-1
  804044:	1946703a 	and	r3,r3,r5
  804048:	1804977a 	slli	r2,r3,29
  80404c:	1806927a 	slli	r3,r3,9
  804050:	8822d0fa 	srli	r17,r17,3
  804054:	8401ffcc 	andi	r16,r16,2047
  804058:	180ad33a 	srli	r5,r3,12
  80405c:	9100004c 	andi	r4,r18,1
  804060:	1444b03a 	or	r2,r2,r17
  804064:	80c1ffcc 	andi	r3,r16,2047
  804068:	1820953a 	slli	r16,r3,20
  80406c:	20c03fcc 	andi	r3,r4,255
  804070:	180897fa 	slli	r4,r3,31
  804074:	00c00434 	movhi	r3,16
  804078:	18ffffc4 	addi	r3,r3,-1
  80407c:	28c6703a 	and	r3,r5,r3
  804080:	1c06b03a 	or	r3,r3,r16
  804084:	1906b03a 	or	r3,r3,r4
  804088:	dfc00417 	ldw	ra,16(sp)
  80408c:	dcc00317 	ldw	r19,12(sp)
  804090:	dc800217 	ldw	r18,8(sp)
  804094:	dc400117 	ldw	r17,4(sp)
  804098:	dc000017 	ldw	r16,0(sp)
  80409c:	dec00504 	addi	sp,sp,20
  8040a0:	f800283a 	ret
  8040a4:	0101ffc4 	movi	r4,2047
  8040a8:	813fd626 	beq	r16,r4,804004 <__alt_data_end+0xff804004>
  8040ac:	29402034 	orhi	r5,r5,128
  8040b0:	01000e04 	movi	r4,56
  8040b4:	2080a316 	blt	r4,r2,804344 <__subdf3+0x3c4>
  8040b8:	010007c4 	movi	r4,31
  8040bc:	2080c616 	blt	r4,r2,8043d8 <__subdf3+0x458>
  8040c0:	01000804 	movi	r4,32
  8040c4:	2089c83a 	sub	r4,r4,r2
  8040c8:	2910983a 	sll	r8,r5,r4
  8040cc:	308ed83a 	srl	r7,r6,r2
  8040d0:	3108983a 	sll	r4,r6,r4
  8040d4:	2884d83a 	srl	r2,r5,r2
  8040d8:	41ccb03a 	or	r6,r8,r7
  8040dc:	2008c03a 	cmpne	r4,r4,zero
  8040e0:	310cb03a 	or	r6,r6,r4
  8040e4:	898dc83a 	sub	r6,r17,r6
  8040e8:	89a3803a 	cmpltu	r17,r17,r6
  8040ec:	1887c83a 	sub	r3,r3,r2
  8040f0:	1c47c83a 	sub	r3,r3,r17
  8040f4:	3023883a 	mov	r17,r6
  8040f8:	1880202c 	andhi	r2,r3,128
  8040fc:	10002326 	beq	r2,zero,80418c <__subdf3+0x20c>
  804100:	04c02034 	movhi	r19,128
  804104:	9cffffc4 	addi	r19,r19,-1
  804108:	1ce6703a 	and	r19,r3,r19
  80410c:	98007a26 	beq	r19,zero,8042f8 <__subdf3+0x378>
  804110:	9809883a 	mov	r4,r19
  804114:	0804c900 	call	804c90 <__clzsi2>
  804118:	113ffe04 	addi	r4,r2,-8
  80411c:	00c007c4 	movi	r3,31
  804120:	19007b16 	blt	r3,r4,804310 <__subdf3+0x390>
  804124:	00800804 	movi	r2,32
  804128:	1105c83a 	sub	r2,r2,r4
  80412c:	8884d83a 	srl	r2,r17,r2
  804130:	9906983a 	sll	r3,r19,r4
  804134:	8922983a 	sll	r17,r17,r4
  804138:	10c4b03a 	or	r2,r2,r3
  80413c:	24007816 	blt	r4,r16,804320 <__subdf3+0x3a0>
  804140:	2421c83a 	sub	r16,r4,r16
  804144:	80c00044 	addi	r3,r16,1
  804148:	010007c4 	movi	r4,31
  80414c:	20c09516 	blt	r4,r3,8043a4 <__subdf3+0x424>
  804150:	01400804 	movi	r5,32
  804154:	28cbc83a 	sub	r5,r5,r3
  804158:	88c8d83a 	srl	r4,r17,r3
  80415c:	8962983a 	sll	r17,r17,r5
  804160:	114a983a 	sll	r5,r2,r5
  804164:	10c6d83a 	srl	r3,r2,r3
  804168:	8804c03a 	cmpne	r2,r17,zero
  80416c:	290ab03a 	or	r5,r5,r4
  804170:	28a2b03a 	or	r17,r5,r2
  804174:	0021883a 	mov	r16,zero
  804178:	003fa206 	br	804004 <__alt_data_end+0xff804004>
  80417c:	2090b03a 	or	r8,r4,r2
  804180:	40018e26 	beq	r8,zero,8047bc <__subdf3+0x83c>
  804184:	1007883a 	mov	r3,r2
  804188:	2023883a 	mov	r17,r4
  80418c:	888001cc 	andi	r2,r17,7
  804190:	103f9e1e 	bne	r2,zero,80400c <__alt_data_end+0xff80400c>
  804194:	1804977a 	slli	r2,r3,29
  804198:	8822d0fa 	srli	r17,r17,3
  80419c:	1810d0fa 	srli	r8,r3,3
  8041a0:	9100004c 	andi	r4,r18,1
  8041a4:	1444b03a 	or	r2,r2,r17
  8041a8:	00c1ffc4 	movi	r3,2047
  8041ac:	80c02826 	beq	r16,r3,804250 <__subdf3+0x2d0>
  8041b0:	01400434 	movhi	r5,16
  8041b4:	297fffc4 	addi	r5,r5,-1
  8041b8:	80e0703a 	and	r16,r16,r3
  8041bc:	414a703a 	and	r5,r8,r5
  8041c0:	003fa806 	br	804064 <__alt_data_end+0xff804064>
  8041c4:	0080630e 	bge	zero,r2,804354 <__subdf3+0x3d4>
  8041c8:	48003026 	beq	r9,zero,80428c <__subdf3+0x30c>
  8041cc:	0101ffc4 	movi	r4,2047
  8041d0:	813f8c26 	beq	r16,r4,804004 <__alt_data_end+0xff804004>
  8041d4:	29402034 	orhi	r5,r5,128
  8041d8:	01000e04 	movi	r4,56
  8041dc:	2080a90e 	bge	r4,r2,804484 <__subdf3+0x504>
  8041e0:	298cb03a 	or	r6,r5,r6
  8041e4:	3012c03a 	cmpne	r9,r6,zero
  8041e8:	0005883a 	mov	r2,zero
  8041ec:	4c53883a 	add	r9,r9,r17
  8041f0:	4c63803a 	cmpltu	r17,r9,r17
  8041f4:	10c7883a 	add	r3,r2,r3
  8041f8:	88c7883a 	add	r3,r17,r3
  8041fc:	4823883a 	mov	r17,r9
  804200:	1880202c 	andhi	r2,r3,128
  804204:	1000d026 	beq	r2,zero,804548 <__subdf3+0x5c8>
  804208:	84000044 	addi	r16,r16,1
  80420c:	0081ffc4 	movi	r2,2047
  804210:	8080fe26 	beq	r16,r2,80460c <__subdf3+0x68c>
  804214:	00bfe034 	movhi	r2,65408
  804218:	10bfffc4 	addi	r2,r2,-1
  80421c:	1886703a 	and	r3,r3,r2
  804220:	880ad07a 	srli	r5,r17,1
  804224:	180497fa 	slli	r2,r3,31
  804228:	8900004c 	andi	r4,r17,1
  80422c:	2922b03a 	or	r17,r5,r4
  804230:	1806d07a 	srli	r3,r3,1
  804234:	1462b03a 	or	r17,r2,r17
  804238:	3825883a 	mov	r18,r7
  80423c:	003f7106 	br	804004 <__alt_data_end+0xff804004>
  804240:	2984b03a 	or	r2,r5,r6
  804244:	103f6826 	beq	r2,zero,803fe8 <__alt_data_end+0xff803fe8>
  804248:	39c03fcc 	andi	r7,r7,255
  80424c:	003f6706 	br	803fec <__alt_data_end+0xff803fec>
  804250:	4086b03a 	or	r3,r8,r2
  804254:	18015226 	beq	r3,zero,8047a0 <__subdf3+0x820>
  804258:	00c00434 	movhi	r3,16
  80425c:	41400234 	orhi	r5,r8,8
  804260:	18ffffc4 	addi	r3,r3,-1
  804264:	28ca703a 	and	r5,r5,r3
  804268:	003f7e06 	br	804064 <__alt_data_end+0xff804064>
  80426c:	10bfffc4 	addi	r2,r2,-1
  804270:	1000491e 	bne	r2,zero,804398 <__subdf3+0x418>
  804274:	898fc83a 	sub	r7,r17,r6
  804278:	89e3803a 	cmpltu	r17,r17,r7
  80427c:	1947c83a 	sub	r3,r3,r5
  804280:	1c47c83a 	sub	r3,r3,r17
  804284:	3823883a 	mov	r17,r7
  804288:	003f9b06 	br	8040f8 <__alt_data_end+0xff8040f8>
  80428c:	2988b03a 	or	r4,r5,r6
  804290:	203f5c26 	beq	r4,zero,804004 <__alt_data_end+0xff804004>
  804294:	10bfffc4 	addi	r2,r2,-1
  804298:	1000931e 	bne	r2,zero,8044e8 <__subdf3+0x568>
  80429c:	898d883a 	add	r6,r17,r6
  8042a0:	3463803a 	cmpltu	r17,r6,r17
  8042a4:	1947883a 	add	r3,r3,r5
  8042a8:	88c7883a 	add	r3,r17,r3
  8042ac:	3023883a 	mov	r17,r6
  8042b0:	003fd306 	br	804200 <__alt_data_end+0xff804200>
  8042b4:	1000541e 	bne	r2,zero,804408 <__subdf3+0x488>
  8042b8:	80800044 	addi	r2,r16,1
  8042bc:	1081ffcc 	andi	r2,r2,2047
  8042c0:	01000044 	movi	r4,1
  8042c4:	2080a20e 	bge	r4,r2,804550 <__subdf3+0x5d0>
  8042c8:	8989c83a 	sub	r4,r17,r6
  8042cc:	8905803a 	cmpltu	r2,r17,r4
  8042d0:	1967c83a 	sub	r19,r3,r5
  8042d4:	98a7c83a 	sub	r19,r19,r2
  8042d8:	9880202c 	andhi	r2,r19,128
  8042dc:	10006326 	beq	r2,zero,80446c <__subdf3+0x4ec>
  8042e0:	3463c83a 	sub	r17,r6,r17
  8042e4:	28c7c83a 	sub	r3,r5,r3
  8042e8:	344d803a 	cmpltu	r6,r6,r17
  8042ec:	19a7c83a 	sub	r19,r3,r6
  8042f0:	3825883a 	mov	r18,r7
  8042f4:	983f861e 	bne	r19,zero,804110 <__alt_data_end+0xff804110>
  8042f8:	8809883a 	mov	r4,r17
  8042fc:	0804c900 	call	804c90 <__clzsi2>
  804300:	10800804 	addi	r2,r2,32
  804304:	113ffe04 	addi	r4,r2,-8
  804308:	00c007c4 	movi	r3,31
  80430c:	193f850e 	bge	r3,r4,804124 <__alt_data_end+0xff804124>
  804310:	10bff604 	addi	r2,r2,-40
  804314:	8884983a 	sll	r2,r17,r2
  804318:	0023883a 	mov	r17,zero
  80431c:	243f880e 	bge	r4,r16,804140 <__alt_data_end+0xff804140>
  804320:	00ffe034 	movhi	r3,65408
  804324:	18ffffc4 	addi	r3,r3,-1
  804328:	8121c83a 	sub	r16,r16,r4
  80432c:	10c6703a 	and	r3,r2,r3
  804330:	003f3406 	br	804004 <__alt_data_end+0xff804004>
  804334:	9100004c 	andi	r4,r18,1
  804338:	000b883a 	mov	r5,zero
  80433c:	0005883a 	mov	r2,zero
  804340:	003f4806 	br	804064 <__alt_data_end+0xff804064>
  804344:	298cb03a 	or	r6,r5,r6
  804348:	300cc03a 	cmpne	r6,r6,zero
  80434c:	0005883a 	mov	r2,zero
  804350:	003f6406 	br	8040e4 <__alt_data_end+0xff8040e4>
  804354:	10009a1e 	bne	r2,zero,8045c0 <__subdf3+0x640>
  804358:	82400044 	addi	r9,r16,1
  80435c:	4881ffcc 	andi	r2,r9,2047
  804360:	02800044 	movi	r10,1
  804364:	5080670e 	bge	r10,r2,804504 <__subdf3+0x584>
  804368:	0081ffc4 	movi	r2,2047
  80436c:	4880af26 	beq	r9,r2,80462c <__subdf3+0x6ac>
  804370:	898d883a 	add	r6,r17,r6
  804374:	1945883a 	add	r2,r3,r5
  804378:	3447803a 	cmpltu	r3,r6,r17
  80437c:	1887883a 	add	r3,r3,r2
  804380:	182297fa 	slli	r17,r3,31
  804384:	300cd07a 	srli	r6,r6,1
  804388:	1806d07a 	srli	r3,r3,1
  80438c:	4821883a 	mov	r16,r9
  804390:	89a2b03a 	or	r17,r17,r6
  804394:	003f1b06 	br	804004 <__alt_data_end+0xff804004>
  804398:	0101ffc4 	movi	r4,2047
  80439c:	813f441e 	bne	r16,r4,8040b0 <__alt_data_end+0xff8040b0>
  8043a0:	003f1806 	br	804004 <__alt_data_end+0xff804004>
  8043a4:	843ff844 	addi	r16,r16,-31
  8043a8:	01400804 	movi	r5,32
  8043ac:	1408d83a 	srl	r4,r2,r16
  8043b0:	19405026 	beq	r3,r5,8044f4 <__subdf3+0x574>
  8043b4:	01401004 	movi	r5,64
  8043b8:	28c7c83a 	sub	r3,r5,r3
  8043bc:	10c4983a 	sll	r2,r2,r3
  8043c0:	88a2b03a 	or	r17,r17,r2
  8043c4:	8822c03a 	cmpne	r17,r17,zero
  8043c8:	2462b03a 	or	r17,r4,r17
  8043cc:	0007883a 	mov	r3,zero
  8043d0:	0021883a 	mov	r16,zero
  8043d4:	003f6d06 	br	80418c <__alt_data_end+0xff80418c>
  8043d8:	11fff804 	addi	r7,r2,-32
  8043dc:	01000804 	movi	r4,32
  8043e0:	29ced83a 	srl	r7,r5,r7
  8043e4:	11004526 	beq	r2,r4,8044fc <__subdf3+0x57c>
  8043e8:	01001004 	movi	r4,64
  8043ec:	2089c83a 	sub	r4,r4,r2
  8043f0:	2904983a 	sll	r2,r5,r4
  8043f4:	118cb03a 	or	r6,r2,r6
  8043f8:	300cc03a 	cmpne	r6,r6,zero
  8043fc:	398cb03a 	or	r6,r7,r6
  804400:	0005883a 	mov	r2,zero
  804404:	003f3706 	br	8040e4 <__alt_data_end+0xff8040e4>
  804408:	80002a26 	beq	r16,zero,8044b4 <__subdf3+0x534>
  80440c:	0101ffc4 	movi	r4,2047
  804410:	49006626 	beq	r9,r4,8045ac <__subdf3+0x62c>
  804414:	0085c83a 	sub	r2,zero,r2
  804418:	18c02034 	orhi	r3,r3,128
  80441c:	01000e04 	movi	r4,56
  804420:	20807e16 	blt	r4,r2,80461c <__subdf3+0x69c>
  804424:	010007c4 	movi	r4,31
  804428:	2080e716 	blt	r4,r2,8047c8 <__subdf3+0x848>
  80442c:	01000804 	movi	r4,32
  804430:	2089c83a 	sub	r4,r4,r2
  804434:	1914983a 	sll	r10,r3,r4
  804438:	8890d83a 	srl	r8,r17,r2
  80443c:	8908983a 	sll	r4,r17,r4
  804440:	1884d83a 	srl	r2,r3,r2
  804444:	5222b03a 	or	r17,r10,r8
  804448:	2006c03a 	cmpne	r3,r4,zero
  80444c:	88e2b03a 	or	r17,r17,r3
  804450:	3463c83a 	sub	r17,r6,r17
  804454:	2885c83a 	sub	r2,r5,r2
  804458:	344d803a 	cmpltu	r6,r6,r17
  80445c:	1187c83a 	sub	r3,r2,r6
  804460:	4821883a 	mov	r16,r9
  804464:	3825883a 	mov	r18,r7
  804468:	003f2306 	br	8040f8 <__alt_data_end+0xff8040f8>
  80446c:	24d0b03a 	or	r8,r4,r19
  804470:	40001b1e 	bne	r8,zero,8044e0 <__subdf3+0x560>
  804474:	0005883a 	mov	r2,zero
  804478:	0009883a 	mov	r4,zero
  80447c:	0021883a 	mov	r16,zero
  804480:	003f4906 	br	8041a8 <__alt_data_end+0xff8041a8>
  804484:	010007c4 	movi	r4,31
  804488:	20803a16 	blt	r4,r2,804574 <__subdf3+0x5f4>
  80448c:	01000804 	movi	r4,32
  804490:	2089c83a 	sub	r4,r4,r2
  804494:	2912983a 	sll	r9,r5,r4
  804498:	3090d83a 	srl	r8,r6,r2
  80449c:	3108983a 	sll	r4,r6,r4
  8044a0:	2884d83a 	srl	r2,r5,r2
  8044a4:	4a12b03a 	or	r9,r9,r8
  8044a8:	2008c03a 	cmpne	r4,r4,zero
  8044ac:	4912b03a 	or	r9,r9,r4
  8044b0:	003f4e06 	br	8041ec <__alt_data_end+0xff8041ec>
  8044b4:	1c48b03a 	or	r4,r3,r17
  8044b8:	20003c26 	beq	r4,zero,8045ac <__subdf3+0x62c>
  8044bc:	0084303a 	nor	r2,zero,r2
  8044c0:	1000381e 	bne	r2,zero,8045a4 <__subdf3+0x624>
  8044c4:	3463c83a 	sub	r17,r6,r17
  8044c8:	28c5c83a 	sub	r2,r5,r3
  8044cc:	344d803a 	cmpltu	r6,r6,r17
  8044d0:	1187c83a 	sub	r3,r2,r6
  8044d4:	4821883a 	mov	r16,r9
  8044d8:	3825883a 	mov	r18,r7
  8044dc:	003f0606 	br	8040f8 <__alt_data_end+0xff8040f8>
  8044e0:	2023883a 	mov	r17,r4
  8044e4:	003f0906 	br	80410c <__alt_data_end+0xff80410c>
  8044e8:	0101ffc4 	movi	r4,2047
  8044ec:	813f3a1e 	bne	r16,r4,8041d8 <__alt_data_end+0xff8041d8>
  8044f0:	003ec406 	br	804004 <__alt_data_end+0xff804004>
  8044f4:	0005883a 	mov	r2,zero
  8044f8:	003fb106 	br	8043c0 <__alt_data_end+0xff8043c0>
  8044fc:	0005883a 	mov	r2,zero
  804500:	003fbc06 	br	8043f4 <__alt_data_end+0xff8043f4>
  804504:	1c44b03a 	or	r2,r3,r17
  804508:	80008e1e 	bne	r16,zero,804744 <__subdf3+0x7c4>
  80450c:	1000c826 	beq	r2,zero,804830 <__subdf3+0x8b0>
  804510:	2984b03a 	or	r2,r5,r6
  804514:	103ebb26 	beq	r2,zero,804004 <__alt_data_end+0xff804004>
  804518:	8989883a 	add	r4,r17,r6
  80451c:	1945883a 	add	r2,r3,r5
  804520:	2447803a 	cmpltu	r3,r4,r17
  804524:	1887883a 	add	r3,r3,r2
  804528:	1880202c 	andhi	r2,r3,128
  80452c:	2023883a 	mov	r17,r4
  804530:	103f1626 	beq	r2,zero,80418c <__alt_data_end+0xff80418c>
  804534:	00bfe034 	movhi	r2,65408
  804538:	10bfffc4 	addi	r2,r2,-1
  80453c:	5021883a 	mov	r16,r10
  804540:	1886703a 	and	r3,r3,r2
  804544:	003eaf06 	br	804004 <__alt_data_end+0xff804004>
  804548:	3825883a 	mov	r18,r7
  80454c:	003f0f06 	br	80418c <__alt_data_end+0xff80418c>
  804550:	1c44b03a 	or	r2,r3,r17
  804554:	8000251e 	bne	r16,zero,8045ec <__subdf3+0x66c>
  804558:	1000661e 	bne	r2,zero,8046f4 <__subdf3+0x774>
  80455c:	2990b03a 	or	r8,r5,r6
  804560:	40009626 	beq	r8,zero,8047bc <__subdf3+0x83c>
  804564:	2807883a 	mov	r3,r5
  804568:	3023883a 	mov	r17,r6
  80456c:	3825883a 	mov	r18,r7
  804570:	003ea406 	br	804004 <__alt_data_end+0xff804004>
  804574:	127ff804 	addi	r9,r2,-32
  804578:	01000804 	movi	r4,32
  80457c:	2a52d83a 	srl	r9,r5,r9
  804580:	11008c26 	beq	r2,r4,8047b4 <__subdf3+0x834>
  804584:	01001004 	movi	r4,64
  804588:	2085c83a 	sub	r2,r4,r2
  80458c:	2884983a 	sll	r2,r5,r2
  804590:	118cb03a 	or	r6,r2,r6
  804594:	300cc03a 	cmpne	r6,r6,zero
  804598:	4992b03a 	or	r9,r9,r6
  80459c:	0005883a 	mov	r2,zero
  8045a0:	003f1206 	br	8041ec <__alt_data_end+0xff8041ec>
  8045a4:	0101ffc4 	movi	r4,2047
  8045a8:	493f9c1e 	bne	r9,r4,80441c <__alt_data_end+0xff80441c>
  8045ac:	2807883a 	mov	r3,r5
  8045b0:	3023883a 	mov	r17,r6
  8045b4:	4821883a 	mov	r16,r9
  8045b8:	3825883a 	mov	r18,r7
  8045bc:	003e9106 	br	804004 <__alt_data_end+0xff804004>
  8045c0:	80001f1e 	bne	r16,zero,804640 <__subdf3+0x6c0>
  8045c4:	1c48b03a 	or	r4,r3,r17
  8045c8:	20005a26 	beq	r4,zero,804734 <__subdf3+0x7b4>
  8045cc:	0084303a 	nor	r2,zero,r2
  8045d0:	1000561e 	bne	r2,zero,80472c <__subdf3+0x7ac>
  8045d4:	89a3883a 	add	r17,r17,r6
  8045d8:	1945883a 	add	r2,r3,r5
  8045dc:	898d803a 	cmpltu	r6,r17,r6
  8045e0:	3087883a 	add	r3,r6,r2
  8045e4:	4821883a 	mov	r16,r9
  8045e8:	003f0506 	br	804200 <__alt_data_end+0xff804200>
  8045ec:	10002b1e 	bne	r2,zero,80469c <__subdf3+0x71c>
  8045f0:	2984b03a 	or	r2,r5,r6
  8045f4:	10008026 	beq	r2,zero,8047f8 <__subdf3+0x878>
  8045f8:	2807883a 	mov	r3,r5
  8045fc:	3023883a 	mov	r17,r6
  804600:	3825883a 	mov	r18,r7
  804604:	0401ffc4 	movi	r16,2047
  804608:	003e7e06 	br	804004 <__alt_data_end+0xff804004>
  80460c:	3809883a 	mov	r4,r7
  804610:	0011883a 	mov	r8,zero
  804614:	0005883a 	mov	r2,zero
  804618:	003ee306 	br	8041a8 <__alt_data_end+0xff8041a8>
  80461c:	1c62b03a 	or	r17,r3,r17
  804620:	8822c03a 	cmpne	r17,r17,zero
  804624:	0005883a 	mov	r2,zero
  804628:	003f8906 	br	804450 <__alt_data_end+0xff804450>
  80462c:	3809883a 	mov	r4,r7
  804630:	4821883a 	mov	r16,r9
  804634:	0011883a 	mov	r8,zero
  804638:	0005883a 	mov	r2,zero
  80463c:	003eda06 	br	8041a8 <__alt_data_end+0xff8041a8>
  804640:	0101ffc4 	movi	r4,2047
  804644:	49003b26 	beq	r9,r4,804734 <__subdf3+0x7b4>
  804648:	0085c83a 	sub	r2,zero,r2
  80464c:	18c02034 	orhi	r3,r3,128
  804650:	01000e04 	movi	r4,56
  804654:	20806e16 	blt	r4,r2,804810 <__subdf3+0x890>
  804658:	010007c4 	movi	r4,31
  80465c:	20807716 	blt	r4,r2,80483c <__subdf3+0x8bc>
  804660:	01000804 	movi	r4,32
  804664:	2089c83a 	sub	r4,r4,r2
  804668:	1914983a 	sll	r10,r3,r4
  80466c:	8890d83a 	srl	r8,r17,r2
  804670:	8908983a 	sll	r4,r17,r4
  804674:	1884d83a 	srl	r2,r3,r2
  804678:	5222b03a 	or	r17,r10,r8
  80467c:	2006c03a 	cmpne	r3,r4,zero
  804680:	88e2b03a 	or	r17,r17,r3
  804684:	89a3883a 	add	r17,r17,r6
  804688:	1145883a 	add	r2,r2,r5
  80468c:	898d803a 	cmpltu	r6,r17,r6
  804690:	3087883a 	add	r3,r6,r2
  804694:	4821883a 	mov	r16,r9
  804698:	003ed906 	br	804200 <__alt_data_end+0xff804200>
  80469c:	2984b03a 	or	r2,r5,r6
  8046a0:	10004226 	beq	r2,zero,8047ac <__subdf3+0x82c>
  8046a4:	1808d0fa 	srli	r4,r3,3
  8046a8:	8822d0fa 	srli	r17,r17,3
  8046ac:	1806977a 	slli	r3,r3,29
  8046b0:	2080022c 	andhi	r2,r4,8
  8046b4:	1c62b03a 	or	r17,r3,r17
  8046b8:	10000826 	beq	r2,zero,8046dc <__subdf3+0x75c>
  8046bc:	2812d0fa 	srli	r9,r5,3
  8046c0:	4880022c 	andhi	r2,r9,8
  8046c4:	1000051e 	bne	r2,zero,8046dc <__subdf3+0x75c>
  8046c8:	300cd0fa 	srli	r6,r6,3
  8046cc:	2804977a 	slli	r2,r5,29
  8046d0:	4809883a 	mov	r4,r9
  8046d4:	3825883a 	mov	r18,r7
  8046d8:	11a2b03a 	or	r17,r2,r6
  8046dc:	8806d77a 	srli	r3,r17,29
  8046e0:	200890fa 	slli	r4,r4,3
  8046e4:	882290fa 	slli	r17,r17,3
  8046e8:	0401ffc4 	movi	r16,2047
  8046ec:	1906b03a 	or	r3,r3,r4
  8046f0:	003e4406 	br	804004 <__alt_data_end+0xff804004>
  8046f4:	2984b03a 	or	r2,r5,r6
  8046f8:	103e4226 	beq	r2,zero,804004 <__alt_data_end+0xff804004>
  8046fc:	8989c83a 	sub	r4,r17,r6
  804700:	8911803a 	cmpltu	r8,r17,r4
  804704:	1945c83a 	sub	r2,r3,r5
  804708:	1205c83a 	sub	r2,r2,r8
  80470c:	1200202c 	andhi	r8,r2,128
  804710:	403e9a26 	beq	r8,zero,80417c <__alt_data_end+0xff80417c>
  804714:	3463c83a 	sub	r17,r6,r17
  804718:	28c5c83a 	sub	r2,r5,r3
  80471c:	344d803a 	cmpltu	r6,r6,r17
  804720:	1187c83a 	sub	r3,r2,r6
  804724:	3825883a 	mov	r18,r7
  804728:	003e3606 	br	804004 <__alt_data_end+0xff804004>
  80472c:	0101ffc4 	movi	r4,2047
  804730:	493fc71e 	bne	r9,r4,804650 <__alt_data_end+0xff804650>
  804734:	2807883a 	mov	r3,r5
  804738:	3023883a 	mov	r17,r6
  80473c:	4821883a 	mov	r16,r9
  804740:	003e3006 	br	804004 <__alt_data_end+0xff804004>
  804744:	10003626 	beq	r2,zero,804820 <__subdf3+0x8a0>
  804748:	2984b03a 	or	r2,r5,r6
  80474c:	10001726 	beq	r2,zero,8047ac <__subdf3+0x82c>
  804750:	1808d0fa 	srli	r4,r3,3
  804754:	8822d0fa 	srli	r17,r17,3
  804758:	1806977a 	slli	r3,r3,29
  80475c:	2080022c 	andhi	r2,r4,8
  804760:	1c62b03a 	or	r17,r3,r17
  804764:	10000726 	beq	r2,zero,804784 <__subdf3+0x804>
  804768:	2812d0fa 	srli	r9,r5,3
  80476c:	4880022c 	andhi	r2,r9,8
  804770:	1000041e 	bne	r2,zero,804784 <__subdf3+0x804>
  804774:	300cd0fa 	srli	r6,r6,3
  804778:	2804977a 	slli	r2,r5,29
  80477c:	4809883a 	mov	r4,r9
  804780:	11a2b03a 	or	r17,r2,r6
  804784:	8806d77a 	srli	r3,r17,29
  804788:	200890fa 	slli	r4,r4,3
  80478c:	882290fa 	slli	r17,r17,3
  804790:	3825883a 	mov	r18,r7
  804794:	1906b03a 	or	r3,r3,r4
  804798:	0401ffc4 	movi	r16,2047
  80479c:	003e1906 	br	804004 <__alt_data_end+0xff804004>
  8047a0:	000b883a 	mov	r5,zero
  8047a4:	0005883a 	mov	r2,zero
  8047a8:	003e2e06 	br	804064 <__alt_data_end+0xff804064>
  8047ac:	0401ffc4 	movi	r16,2047
  8047b0:	003e1406 	br	804004 <__alt_data_end+0xff804004>
  8047b4:	0005883a 	mov	r2,zero
  8047b8:	003f7506 	br	804590 <__alt_data_end+0xff804590>
  8047bc:	0005883a 	mov	r2,zero
  8047c0:	0009883a 	mov	r4,zero
  8047c4:	003e7806 	br	8041a8 <__alt_data_end+0xff8041a8>
  8047c8:	123ff804 	addi	r8,r2,-32
  8047cc:	01000804 	movi	r4,32
  8047d0:	1a10d83a 	srl	r8,r3,r8
  8047d4:	11002526 	beq	r2,r4,80486c <__subdf3+0x8ec>
  8047d8:	01001004 	movi	r4,64
  8047dc:	2085c83a 	sub	r2,r4,r2
  8047e0:	1884983a 	sll	r2,r3,r2
  8047e4:	1444b03a 	or	r2,r2,r17
  8047e8:	1004c03a 	cmpne	r2,r2,zero
  8047ec:	40a2b03a 	or	r17,r8,r2
  8047f0:	0005883a 	mov	r2,zero
  8047f4:	003f1606 	br	804450 <__alt_data_end+0xff804450>
  8047f8:	02000434 	movhi	r8,16
  8047fc:	0009883a 	mov	r4,zero
  804800:	423fffc4 	addi	r8,r8,-1
  804804:	00bfffc4 	movi	r2,-1
  804808:	0401ffc4 	movi	r16,2047
  80480c:	003e6606 	br	8041a8 <__alt_data_end+0xff8041a8>
  804810:	1c62b03a 	or	r17,r3,r17
  804814:	8822c03a 	cmpne	r17,r17,zero
  804818:	0005883a 	mov	r2,zero
  80481c:	003f9906 	br	804684 <__alt_data_end+0xff804684>
  804820:	2807883a 	mov	r3,r5
  804824:	3023883a 	mov	r17,r6
  804828:	0401ffc4 	movi	r16,2047
  80482c:	003df506 	br	804004 <__alt_data_end+0xff804004>
  804830:	2807883a 	mov	r3,r5
  804834:	3023883a 	mov	r17,r6
  804838:	003df206 	br	804004 <__alt_data_end+0xff804004>
  80483c:	123ff804 	addi	r8,r2,-32
  804840:	01000804 	movi	r4,32
  804844:	1a10d83a 	srl	r8,r3,r8
  804848:	11000a26 	beq	r2,r4,804874 <__subdf3+0x8f4>
  80484c:	01001004 	movi	r4,64
  804850:	2085c83a 	sub	r2,r4,r2
  804854:	1884983a 	sll	r2,r3,r2
  804858:	1444b03a 	or	r2,r2,r17
  80485c:	1004c03a 	cmpne	r2,r2,zero
  804860:	40a2b03a 	or	r17,r8,r2
  804864:	0005883a 	mov	r2,zero
  804868:	003f8606 	br	804684 <__alt_data_end+0xff804684>
  80486c:	0005883a 	mov	r2,zero
  804870:	003fdc06 	br	8047e4 <__alt_data_end+0xff8047e4>
  804874:	0005883a 	mov	r2,zero
  804878:	003ff706 	br	804858 <__alt_data_end+0xff804858>

0080487c <__fixdfsi>:
  80487c:	280cd53a 	srli	r6,r5,20
  804880:	00c00434 	movhi	r3,16
  804884:	18ffffc4 	addi	r3,r3,-1
  804888:	3181ffcc 	andi	r6,r6,2047
  80488c:	01c0ff84 	movi	r7,1022
  804890:	28c6703a 	and	r3,r5,r3
  804894:	280ad7fa 	srli	r5,r5,31
  804898:	3980120e 	bge	r7,r6,8048e4 <__fixdfsi+0x68>
  80489c:	00810744 	movi	r2,1053
  8048a0:	11800c16 	blt	r2,r6,8048d4 <__fixdfsi+0x58>
  8048a4:	00810cc4 	movi	r2,1075
  8048a8:	1185c83a 	sub	r2,r2,r6
  8048ac:	01c007c4 	movi	r7,31
  8048b0:	18c00434 	orhi	r3,r3,16
  8048b4:	38800d16 	blt	r7,r2,8048ec <__fixdfsi+0x70>
  8048b8:	31befb44 	addi	r6,r6,-1043
  8048bc:	2084d83a 	srl	r2,r4,r2
  8048c0:	1986983a 	sll	r3,r3,r6
  8048c4:	1884b03a 	or	r2,r3,r2
  8048c8:	28000726 	beq	r5,zero,8048e8 <__fixdfsi+0x6c>
  8048cc:	0085c83a 	sub	r2,zero,r2
  8048d0:	f800283a 	ret
  8048d4:	00a00034 	movhi	r2,32768
  8048d8:	10bfffc4 	addi	r2,r2,-1
  8048dc:	2885883a 	add	r2,r5,r2
  8048e0:	f800283a 	ret
  8048e4:	0005883a 	mov	r2,zero
  8048e8:	f800283a 	ret
  8048ec:	008104c4 	movi	r2,1043
  8048f0:	1185c83a 	sub	r2,r2,r6
  8048f4:	1884d83a 	srl	r2,r3,r2
  8048f8:	003ff306 	br	8048c8 <__alt_data_end+0xff8048c8>

008048fc <__floatsidf>:
  8048fc:	defffd04 	addi	sp,sp,-12
  804900:	dfc00215 	stw	ra,8(sp)
  804904:	dc400115 	stw	r17,4(sp)
  804908:	dc000015 	stw	r16,0(sp)
  80490c:	20002b26 	beq	r4,zero,8049bc <__floatsidf+0xc0>
  804910:	2023883a 	mov	r17,r4
  804914:	2020d7fa 	srli	r16,r4,31
  804918:	20002d16 	blt	r4,zero,8049d0 <__floatsidf+0xd4>
  80491c:	8809883a 	mov	r4,r17
  804920:	0804c900 	call	804c90 <__clzsi2>
  804924:	01410784 	movi	r5,1054
  804928:	288bc83a 	sub	r5,r5,r2
  80492c:	01010cc4 	movi	r4,1075
  804930:	2149c83a 	sub	r4,r4,r5
  804934:	00c007c4 	movi	r3,31
  804938:	1900160e 	bge	r3,r4,804994 <__floatsidf+0x98>
  80493c:	00c104c4 	movi	r3,1043
  804940:	1947c83a 	sub	r3,r3,r5
  804944:	88c6983a 	sll	r3,r17,r3
  804948:	00800434 	movhi	r2,16
  80494c:	10bfffc4 	addi	r2,r2,-1
  804950:	1886703a 	and	r3,r3,r2
  804954:	2941ffcc 	andi	r5,r5,2047
  804958:	800d883a 	mov	r6,r16
  80495c:	0005883a 	mov	r2,zero
  804960:	280a953a 	slli	r5,r5,20
  804964:	31803fcc 	andi	r6,r6,255
  804968:	01000434 	movhi	r4,16
  80496c:	300c97fa 	slli	r6,r6,31
  804970:	213fffc4 	addi	r4,r4,-1
  804974:	1906703a 	and	r3,r3,r4
  804978:	1946b03a 	or	r3,r3,r5
  80497c:	1986b03a 	or	r3,r3,r6
  804980:	dfc00217 	ldw	ra,8(sp)
  804984:	dc400117 	ldw	r17,4(sp)
  804988:	dc000017 	ldw	r16,0(sp)
  80498c:	dec00304 	addi	sp,sp,12
  804990:	f800283a 	ret
  804994:	00c002c4 	movi	r3,11
  804998:	1887c83a 	sub	r3,r3,r2
  80499c:	88c6d83a 	srl	r3,r17,r3
  8049a0:	8904983a 	sll	r2,r17,r4
  8049a4:	01000434 	movhi	r4,16
  8049a8:	213fffc4 	addi	r4,r4,-1
  8049ac:	2941ffcc 	andi	r5,r5,2047
  8049b0:	1906703a 	and	r3,r3,r4
  8049b4:	800d883a 	mov	r6,r16
  8049b8:	003fe906 	br	804960 <__alt_data_end+0xff804960>
  8049bc:	000d883a 	mov	r6,zero
  8049c0:	000b883a 	mov	r5,zero
  8049c4:	0007883a 	mov	r3,zero
  8049c8:	0005883a 	mov	r2,zero
  8049cc:	003fe406 	br	804960 <__alt_data_end+0xff804960>
  8049d0:	0123c83a 	sub	r17,zero,r4
  8049d4:	003fd106 	br	80491c <__alt_data_end+0xff80491c>

008049d8 <__extendsfdf2>:
  8049d8:	200ad5fa 	srli	r5,r4,23
  8049dc:	defffd04 	addi	sp,sp,-12
  8049e0:	dc400115 	stw	r17,4(sp)
  8049e4:	29403fcc 	andi	r5,r5,255
  8049e8:	29800044 	addi	r6,r5,1
  8049ec:	04402034 	movhi	r17,128
  8049f0:	dc000015 	stw	r16,0(sp)
  8049f4:	8c7fffc4 	addi	r17,r17,-1
  8049f8:	dfc00215 	stw	ra,8(sp)
  8049fc:	31803fcc 	andi	r6,r6,255
  804a00:	00800044 	movi	r2,1
  804a04:	8922703a 	and	r17,r17,r4
  804a08:	2020d7fa 	srli	r16,r4,31
  804a0c:	1180110e 	bge	r2,r6,804a54 <__extendsfdf2+0x7c>
  804a10:	880cd0fa 	srli	r6,r17,3
  804a14:	8822977a 	slli	r17,r17,29
  804a18:	2940e004 	addi	r5,r5,896
  804a1c:	2941ffcc 	andi	r5,r5,2047
  804a20:	2804953a 	slli	r2,r5,20
  804a24:	01400434 	movhi	r5,16
  804a28:	800697fa 	slli	r3,r16,31
  804a2c:	297fffc4 	addi	r5,r5,-1
  804a30:	314a703a 	and	r5,r6,r5
  804a34:	288ab03a 	or	r5,r5,r2
  804a38:	28c6b03a 	or	r3,r5,r3
  804a3c:	8805883a 	mov	r2,r17
  804a40:	dfc00217 	ldw	ra,8(sp)
  804a44:	dc400117 	ldw	r17,4(sp)
  804a48:	dc000017 	ldw	r16,0(sp)
  804a4c:	dec00304 	addi	sp,sp,12
  804a50:	f800283a 	ret
  804a54:	2800111e 	bne	r5,zero,804a9c <__extendsfdf2+0xc4>
  804a58:	88001c26 	beq	r17,zero,804acc <__extendsfdf2+0xf4>
  804a5c:	8809883a 	mov	r4,r17
  804a60:	0804c900 	call	804c90 <__clzsi2>
  804a64:	00c00284 	movi	r3,10
  804a68:	18801b16 	blt	r3,r2,804ad8 <__extendsfdf2+0x100>
  804a6c:	018002c4 	movi	r6,11
  804a70:	308dc83a 	sub	r6,r6,r2
  804a74:	11000544 	addi	r4,r2,21
  804a78:	8986d83a 	srl	r3,r17,r6
  804a7c:	8922983a 	sll	r17,r17,r4
  804a80:	0180e244 	movi	r6,905
  804a84:	01400434 	movhi	r5,16
  804a88:	3085c83a 	sub	r2,r6,r2
  804a8c:	297fffc4 	addi	r5,r5,-1
  804a90:	194c703a 	and	r6,r3,r5
  804a94:	1141ffcc 	andi	r5,r2,2047
  804a98:	003fe006 	br	804a1c <__alt_data_end+0xff804a1c>
  804a9c:	88000826 	beq	r17,zero,804ac0 <__extendsfdf2+0xe8>
  804aa0:	880cd0fa 	srli	r6,r17,3
  804aa4:	00800434 	movhi	r2,16
  804aa8:	10bfffc4 	addi	r2,r2,-1
  804aac:	31800234 	orhi	r6,r6,8
  804ab0:	8822977a 	slli	r17,r17,29
  804ab4:	308c703a 	and	r6,r6,r2
  804ab8:	0141ffc4 	movi	r5,2047
  804abc:	003fd706 	br	804a1c <__alt_data_end+0xff804a1c>
  804ac0:	0141ffc4 	movi	r5,2047
  804ac4:	000d883a 	mov	r6,zero
  804ac8:	003fd406 	br	804a1c <__alt_data_end+0xff804a1c>
  804acc:	000b883a 	mov	r5,zero
  804ad0:	000d883a 	mov	r6,zero
  804ad4:	003fd106 	br	804a1c <__alt_data_end+0xff804a1c>
  804ad8:	11bffd44 	addi	r6,r2,-11
  804adc:	8986983a 	sll	r3,r17,r6
  804ae0:	0023883a 	mov	r17,zero
  804ae4:	003fe606 	br	804a80 <__alt_data_end+0xff804a80>

00804ae8 <__truncdfsf2>:
  804ae8:	2810d53a 	srli	r8,r5,20
  804aec:	01c00434 	movhi	r7,16
  804af0:	39ffffc4 	addi	r7,r7,-1
  804af4:	29ce703a 	and	r7,r5,r7
  804af8:	4201ffcc 	andi	r8,r8,2047
  804afc:	380e90fa 	slli	r7,r7,3
  804b00:	200cd77a 	srli	r6,r4,29
  804b04:	42400044 	addi	r9,r8,1
  804b08:	4a41ffcc 	andi	r9,r9,2047
  804b0c:	00c00044 	movi	r3,1
  804b10:	280ad7fa 	srli	r5,r5,31
  804b14:	31ceb03a 	or	r7,r6,r7
  804b18:	200490fa 	slli	r2,r4,3
  804b1c:	1a40230e 	bge	r3,r9,804bac <__truncdfsf2+0xc4>
  804b20:	40ff2004 	addi	r3,r8,-896
  804b24:	01803f84 	movi	r6,254
  804b28:	30c01516 	blt	r6,r3,804b80 <__truncdfsf2+0x98>
  804b2c:	00c0380e 	bge	zero,r3,804c10 <__truncdfsf2+0x128>
  804b30:	200c91ba 	slli	r6,r4,6
  804b34:	380e90fa 	slli	r7,r7,3
  804b38:	1004d77a 	srli	r2,r2,29
  804b3c:	300cc03a 	cmpne	r6,r6,zero
  804b40:	31ccb03a 	or	r6,r6,r7
  804b44:	308cb03a 	or	r6,r6,r2
  804b48:	308001cc 	andi	r2,r6,7
  804b4c:	10000426 	beq	r2,zero,804b60 <__truncdfsf2+0x78>
  804b50:	308003cc 	andi	r2,r6,15
  804b54:	01000104 	movi	r4,4
  804b58:	11000126 	beq	r2,r4,804b60 <__truncdfsf2+0x78>
  804b5c:	31800104 	addi	r6,r6,4
  804b60:	3081002c 	andhi	r2,r6,1024
  804b64:	10001626 	beq	r2,zero,804bc0 <__truncdfsf2+0xd8>
  804b68:	18c00044 	addi	r3,r3,1
  804b6c:	00803fc4 	movi	r2,255
  804b70:	18800326 	beq	r3,r2,804b80 <__truncdfsf2+0x98>
  804b74:	300c91ba 	slli	r6,r6,6
  804b78:	300cd27a 	srli	r6,r6,9
  804b7c:	00000206 	br	804b88 <__truncdfsf2+0xa0>
  804b80:	00ffffc4 	movi	r3,-1
  804b84:	000d883a 	mov	r6,zero
  804b88:	18c03fcc 	andi	r3,r3,255
  804b8c:	180895fa 	slli	r4,r3,23
  804b90:	00c02034 	movhi	r3,128
  804b94:	280a97fa 	slli	r5,r5,31
  804b98:	18ffffc4 	addi	r3,r3,-1
  804b9c:	30c6703a 	and	r3,r6,r3
  804ba0:	1906b03a 	or	r3,r3,r4
  804ba4:	1944b03a 	or	r2,r3,r5
  804ba8:	f800283a 	ret
  804bac:	40000b1e 	bne	r8,zero,804bdc <__truncdfsf2+0xf4>
  804bb0:	388cb03a 	or	r6,r7,r2
  804bb4:	0007883a 	mov	r3,zero
  804bb8:	30000426 	beq	r6,zero,804bcc <__truncdfsf2+0xe4>
  804bbc:	01800144 	movi	r6,5
  804bc0:	00803fc4 	movi	r2,255
  804bc4:	300cd0fa 	srli	r6,r6,3
  804bc8:	18800a26 	beq	r3,r2,804bf4 <__truncdfsf2+0x10c>
  804bcc:	00802034 	movhi	r2,128
  804bd0:	10bfffc4 	addi	r2,r2,-1
  804bd4:	308c703a 	and	r6,r6,r2
  804bd8:	003feb06 	br	804b88 <__alt_data_end+0xff804b88>
  804bdc:	3888b03a 	or	r4,r7,r2
  804be0:	203fe726 	beq	r4,zero,804b80 <__alt_data_end+0xff804b80>
  804be4:	380c90fa 	slli	r6,r7,3
  804be8:	00c03fc4 	movi	r3,255
  804bec:	31808034 	orhi	r6,r6,512
  804bf0:	003fd506 	br	804b48 <__alt_data_end+0xff804b48>
  804bf4:	303fe226 	beq	r6,zero,804b80 <__alt_data_end+0xff804b80>
  804bf8:	00802034 	movhi	r2,128
  804bfc:	31801034 	orhi	r6,r6,64
  804c00:	10bfffc4 	addi	r2,r2,-1
  804c04:	00ffffc4 	movi	r3,-1
  804c08:	308c703a 	and	r6,r6,r2
  804c0c:	003fde06 	br	804b88 <__alt_data_end+0xff804b88>
  804c10:	013ffa44 	movi	r4,-23
  804c14:	19000e16 	blt	r3,r4,804c50 <__truncdfsf2+0x168>
  804c18:	01000784 	movi	r4,30
  804c1c:	20c9c83a 	sub	r4,r4,r3
  804c20:	018007c4 	movi	r6,31
  804c24:	39c02034 	orhi	r7,r7,128
  804c28:	31000b16 	blt	r6,r4,804c58 <__truncdfsf2+0x170>
  804c2c:	423f2084 	addi	r8,r8,-894
  804c30:	120c983a 	sll	r6,r2,r8
  804c34:	3a0e983a 	sll	r7,r7,r8
  804c38:	1104d83a 	srl	r2,r2,r4
  804c3c:	300cc03a 	cmpne	r6,r6,zero
  804c40:	31ceb03a 	or	r7,r6,r7
  804c44:	388cb03a 	or	r6,r7,r2
  804c48:	0007883a 	mov	r3,zero
  804c4c:	003fbe06 	br	804b48 <__alt_data_end+0xff804b48>
  804c50:	0007883a 	mov	r3,zero
  804c54:	003fd906 	br	804bbc <__alt_data_end+0xff804bbc>
  804c58:	01bfff84 	movi	r6,-2
  804c5c:	30cdc83a 	sub	r6,r6,r3
  804c60:	00c00804 	movi	r3,32
  804c64:	398cd83a 	srl	r6,r7,r6
  804c68:	20c00726 	beq	r4,r3,804c88 <__truncdfsf2+0x1a0>
  804c6c:	423f2884 	addi	r8,r8,-862
  804c70:	3a0e983a 	sll	r7,r7,r8
  804c74:	3884b03a 	or	r2,r7,r2
  804c78:	1004c03a 	cmpne	r2,r2,zero
  804c7c:	118cb03a 	or	r6,r2,r6
  804c80:	0007883a 	mov	r3,zero
  804c84:	003fb006 	br	804b48 <__alt_data_end+0xff804b48>
  804c88:	000f883a 	mov	r7,zero
  804c8c:	003ff906 	br	804c74 <__alt_data_end+0xff804c74>

00804c90 <__clzsi2>:
  804c90:	00bfffd4 	movui	r2,65535
  804c94:	11000536 	bltu	r2,r4,804cac <__clzsi2+0x1c>
  804c98:	00803fc4 	movi	r2,255
  804c9c:	11000f36 	bltu	r2,r4,804cdc <__clzsi2+0x4c>
  804ca0:	00800804 	movi	r2,32
  804ca4:	0007883a 	mov	r3,zero
  804ca8:	00000506 	br	804cc0 <__clzsi2+0x30>
  804cac:	00804034 	movhi	r2,256
  804cb0:	10bfffc4 	addi	r2,r2,-1
  804cb4:	11000c2e 	bgeu	r2,r4,804ce8 <__clzsi2+0x58>
  804cb8:	00800204 	movi	r2,8
  804cbc:	00c00604 	movi	r3,24
  804cc0:	20c8d83a 	srl	r4,r4,r3
  804cc4:	00c02074 	movhi	r3,129
  804cc8:	18c8c204 	addi	r3,r3,8968
  804ccc:	1909883a 	add	r4,r3,r4
  804cd0:	20c00003 	ldbu	r3,0(r4)
  804cd4:	10c5c83a 	sub	r2,r2,r3
  804cd8:	f800283a 	ret
  804cdc:	00800604 	movi	r2,24
  804ce0:	00c00204 	movi	r3,8
  804ce4:	003ff606 	br	804cc0 <__alt_data_end+0xff804cc0>
  804ce8:	00800404 	movi	r2,16
  804cec:	1007883a 	mov	r3,r2
  804cf0:	003ff306 	br	804cc0 <__alt_data_end+0xff804cc0>

00804cf4 <_printf_r>:
  804cf4:	defffd04 	addi	sp,sp,-12
  804cf8:	2805883a 	mov	r2,r5
  804cfc:	dfc00015 	stw	ra,0(sp)
  804d00:	d9800115 	stw	r6,4(sp)
  804d04:	d9c00215 	stw	r7,8(sp)
  804d08:	21400217 	ldw	r5,8(r4)
  804d0c:	d9c00104 	addi	r7,sp,4
  804d10:	100d883a 	mov	r6,r2
  804d14:	0804ecc0 	call	804ecc <___vfprintf_internal_r>
  804d18:	dfc00017 	ldw	ra,0(sp)
  804d1c:	dec00304 	addi	sp,sp,12
  804d20:	f800283a 	ret

00804d24 <printf>:
  804d24:	defffc04 	addi	sp,sp,-16
  804d28:	dfc00015 	stw	ra,0(sp)
  804d2c:	d9400115 	stw	r5,4(sp)
  804d30:	d9800215 	stw	r6,8(sp)
  804d34:	d9c00315 	stw	r7,12(sp)
  804d38:	00802074 	movhi	r2,129
  804d3c:	10902c04 	addi	r2,r2,16560
  804d40:	10800017 	ldw	r2,0(r2)
  804d44:	200b883a 	mov	r5,r4
  804d48:	d9800104 	addi	r6,sp,4
  804d4c:	11000217 	ldw	r4,8(r2)
  804d50:	08070c40 	call	8070c4 <__vfprintf_internal>
  804d54:	dfc00017 	ldw	ra,0(sp)
  804d58:	dec00404 	addi	sp,sp,16
  804d5c:	f800283a 	ret

00804d60 <_puts_r>:
  804d60:	defff604 	addi	sp,sp,-40
  804d64:	dc000715 	stw	r16,28(sp)
  804d68:	2021883a 	mov	r16,r4
  804d6c:	2809883a 	mov	r4,r5
  804d70:	dc400815 	stw	r17,32(sp)
  804d74:	dfc00915 	stw	ra,36(sp)
  804d78:	2823883a 	mov	r17,r5
  804d7c:	0804e340 	call	804e34 <strlen>
  804d80:	10c00044 	addi	r3,r2,1
  804d84:	d8800115 	stw	r2,4(sp)
  804d88:	00802074 	movhi	r2,129
  804d8c:	10890204 	addi	r2,r2,9224
  804d90:	d8800215 	stw	r2,8(sp)
  804d94:	00800044 	movi	r2,1
  804d98:	d8800315 	stw	r2,12(sp)
  804d9c:	00800084 	movi	r2,2
  804da0:	dc400015 	stw	r17,0(sp)
  804da4:	d8c00615 	stw	r3,24(sp)
  804da8:	dec00415 	stw	sp,16(sp)
  804dac:	d8800515 	stw	r2,20(sp)
  804db0:	80000226 	beq	r16,zero,804dbc <_puts_r+0x5c>
  804db4:	80800e17 	ldw	r2,56(r16)
  804db8:	10001426 	beq	r2,zero,804e0c <_puts_r+0xac>
  804dbc:	81400217 	ldw	r5,8(r16)
  804dc0:	2880030b 	ldhu	r2,12(r5)
  804dc4:	10c8000c 	andi	r3,r2,8192
  804dc8:	1800061e 	bne	r3,zero,804de4 <_puts_r+0x84>
  804dcc:	29001917 	ldw	r4,100(r5)
  804dd0:	00f7ffc4 	movi	r3,-8193
  804dd4:	10880014 	ori	r2,r2,8192
  804dd8:	20c6703a 	and	r3,r4,r3
  804ddc:	2880030d 	sth	r2,12(r5)
  804de0:	28c01915 	stw	r3,100(r5)
  804de4:	d9800404 	addi	r6,sp,16
  804de8:	8009883a 	mov	r4,r16
  804dec:	08095f40 	call	8095f4 <__sfvwrite_r>
  804df0:	1000091e 	bne	r2,zero,804e18 <_puts_r+0xb8>
  804df4:	00800284 	movi	r2,10
  804df8:	dfc00917 	ldw	ra,36(sp)
  804dfc:	dc400817 	ldw	r17,32(sp)
  804e00:	dc000717 	ldw	r16,28(sp)
  804e04:	dec00a04 	addi	sp,sp,40
  804e08:	f800283a 	ret
  804e0c:	8009883a 	mov	r4,r16
  804e10:	08091700 	call	809170 <__sinit>
  804e14:	003fe906 	br	804dbc <__alt_data_end+0xff804dbc>
  804e18:	00bfffc4 	movi	r2,-1
  804e1c:	003ff606 	br	804df8 <__alt_data_end+0xff804df8>

00804e20 <puts>:
  804e20:	00802074 	movhi	r2,129
  804e24:	10902c04 	addi	r2,r2,16560
  804e28:	200b883a 	mov	r5,r4
  804e2c:	11000017 	ldw	r4,0(r2)
  804e30:	0804d601 	jmpi	804d60 <_puts_r>

00804e34 <strlen>:
  804e34:	208000cc 	andi	r2,r4,3
  804e38:	10002026 	beq	r2,zero,804ebc <strlen+0x88>
  804e3c:	20800007 	ldb	r2,0(r4)
  804e40:	10002026 	beq	r2,zero,804ec4 <strlen+0x90>
  804e44:	2005883a 	mov	r2,r4
  804e48:	00000206 	br	804e54 <strlen+0x20>
  804e4c:	10c00007 	ldb	r3,0(r2)
  804e50:	18001826 	beq	r3,zero,804eb4 <strlen+0x80>
  804e54:	10800044 	addi	r2,r2,1
  804e58:	10c000cc 	andi	r3,r2,3
  804e5c:	183ffb1e 	bne	r3,zero,804e4c <__alt_data_end+0xff804e4c>
  804e60:	10c00017 	ldw	r3,0(r2)
  804e64:	01ffbff4 	movhi	r7,65279
  804e68:	39ffbfc4 	addi	r7,r7,-257
  804e6c:	00ca303a 	nor	r5,zero,r3
  804e70:	01a02074 	movhi	r6,32897
  804e74:	19c7883a 	add	r3,r3,r7
  804e78:	31a02004 	addi	r6,r6,-32640
  804e7c:	1946703a 	and	r3,r3,r5
  804e80:	1986703a 	and	r3,r3,r6
  804e84:	1800091e 	bne	r3,zero,804eac <strlen+0x78>
  804e88:	10800104 	addi	r2,r2,4
  804e8c:	10c00017 	ldw	r3,0(r2)
  804e90:	19cb883a 	add	r5,r3,r7
  804e94:	00c6303a 	nor	r3,zero,r3
  804e98:	28c6703a 	and	r3,r5,r3
  804e9c:	1986703a 	and	r3,r3,r6
  804ea0:	183ff926 	beq	r3,zero,804e88 <__alt_data_end+0xff804e88>
  804ea4:	00000106 	br	804eac <strlen+0x78>
  804ea8:	10800044 	addi	r2,r2,1
  804eac:	10c00007 	ldb	r3,0(r2)
  804eb0:	183ffd1e 	bne	r3,zero,804ea8 <__alt_data_end+0xff804ea8>
  804eb4:	1105c83a 	sub	r2,r2,r4
  804eb8:	f800283a 	ret
  804ebc:	2005883a 	mov	r2,r4
  804ec0:	003fe706 	br	804e60 <__alt_data_end+0xff804e60>
  804ec4:	0005883a 	mov	r2,zero
  804ec8:	f800283a 	ret

00804ecc <___vfprintf_internal_r>:
  804ecc:	deffb804 	addi	sp,sp,-288
  804ed0:	dfc04715 	stw	ra,284(sp)
  804ed4:	ddc04515 	stw	r23,276(sp)
  804ed8:	dd404315 	stw	r21,268(sp)
  804edc:	d9002c15 	stw	r4,176(sp)
  804ee0:	282f883a 	mov	r23,r5
  804ee4:	302b883a 	mov	r21,r6
  804ee8:	d9c02d15 	stw	r7,180(sp)
  804eec:	df004615 	stw	fp,280(sp)
  804ef0:	dd804415 	stw	r22,272(sp)
  804ef4:	dd004215 	stw	r20,264(sp)
  804ef8:	dcc04115 	stw	r19,260(sp)
  804efc:	dc804015 	stw	r18,256(sp)
  804f00:	dc403f15 	stw	r17,252(sp)
  804f04:	dc003e15 	stw	r16,248(sp)
  804f08:	0809ce40 	call	809ce4 <_localeconv_r>
  804f0c:	10800017 	ldw	r2,0(r2)
  804f10:	1009883a 	mov	r4,r2
  804f14:	d8803415 	stw	r2,208(sp)
  804f18:	0804e340 	call	804e34 <strlen>
  804f1c:	d8803715 	stw	r2,220(sp)
  804f20:	d8802c17 	ldw	r2,176(sp)
  804f24:	10000226 	beq	r2,zero,804f30 <___vfprintf_internal_r+0x64>
  804f28:	10800e17 	ldw	r2,56(r2)
  804f2c:	1000f926 	beq	r2,zero,805314 <___vfprintf_internal_r+0x448>
  804f30:	b880030b 	ldhu	r2,12(r23)
  804f34:	10c8000c 	andi	r3,r2,8192
  804f38:	1800061e 	bne	r3,zero,804f54 <___vfprintf_internal_r+0x88>
  804f3c:	b9001917 	ldw	r4,100(r23)
  804f40:	00f7ffc4 	movi	r3,-8193
  804f44:	10880014 	ori	r2,r2,8192
  804f48:	20c6703a 	and	r3,r4,r3
  804f4c:	b880030d 	sth	r2,12(r23)
  804f50:	b8c01915 	stw	r3,100(r23)
  804f54:	10c0020c 	andi	r3,r2,8
  804f58:	1800c126 	beq	r3,zero,805260 <___vfprintf_internal_r+0x394>
  804f5c:	b8c00417 	ldw	r3,16(r23)
  804f60:	1800bf26 	beq	r3,zero,805260 <___vfprintf_internal_r+0x394>
  804f64:	1080068c 	andi	r2,r2,26
  804f68:	00c00284 	movi	r3,10
  804f6c:	10c0c426 	beq	r2,r3,805280 <___vfprintf_internal_r+0x3b4>
  804f70:	d8c00404 	addi	r3,sp,16
  804f74:	05002074 	movhi	r20,129
  804f78:	d9001e04 	addi	r4,sp,120
  804f7c:	a5091384 	addi	r20,r20,9294
  804f80:	d8c01e15 	stw	r3,120(sp)
  804f84:	d8002015 	stw	zero,128(sp)
  804f88:	d8001f15 	stw	zero,124(sp)
  804f8c:	d8003315 	stw	zero,204(sp)
  804f90:	d8003615 	stw	zero,216(sp)
  804f94:	d8003815 	stw	zero,224(sp)
  804f98:	1811883a 	mov	r8,r3
  804f9c:	d8003915 	stw	zero,228(sp)
  804fa0:	d8003a15 	stw	zero,232(sp)
  804fa4:	d8002f15 	stw	zero,188(sp)
  804fa8:	d9002815 	stw	r4,160(sp)
  804fac:	a8800007 	ldb	r2,0(r21)
  804fb0:	10027b26 	beq	r2,zero,8059a0 <___vfprintf_internal_r+0xad4>
  804fb4:	00c00944 	movi	r3,37
  804fb8:	a821883a 	mov	r16,r21
  804fbc:	10c0021e 	bne	r2,r3,804fc8 <___vfprintf_internal_r+0xfc>
  804fc0:	00001406 	br	805014 <___vfprintf_internal_r+0x148>
  804fc4:	10c00326 	beq	r2,r3,804fd4 <___vfprintf_internal_r+0x108>
  804fc8:	84000044 	addi	r16,r16,1
  804fcc:	80800007 	ldb	r2,0(r16)
  804fd0:	103ffc1e 	bne	r2,zero,804fc4 <__alt_data_end+0xff804fc4>
  804fd4:	8563c83a 	sub	r17,r16,r21
  804fd8:	88000e26 	beq	r17,zero,805014 <___vfprintf_internal_r+0x148>
  804fdc:	d8c02017 	ldw	r3,128(sp)
  804fe0:	d8801f17 	ldw	r2,124(sp)
  804fe4:	45400015 	stw	r21,0(r8)
  804fe8:	1c47883a 	add	r3,r3,r17
  804fec:	10800044 	addi	r2,r2,1
  804ff0:	d8c02015 	stw	r3,128(sp)
  804ff4:	44400115 	stw	r17,4(r8)
  804ff8:	d8801f15 	stw	r2,124(sp)
  804ffc:	00c001c4 	movi	r3,7
  805000:	1880a716 	blt	r3,r2,8052a0 <___vfprintf_internal_r+0x3d4>
  805004:	42000204 	addi	r8,r8,8
  805008:	d9402f17 	ldw	r5,188(sp)
  80500c:	2c4b883a 	add	r5,r5,r17
  805010:	d9402f15 	stw	r5,188(sp)
  805014:	80800007 	ldb	r2,0(r16)
  805018:	1000a826 	beq	r2,zero,8052bc <___vfprintf_internal_r+0x3f0>
  80501c:	84400047 	ldb	r17,1(r16)
  805020:	00bfffc4 	movi	r2,-1
  805024:	85400044 	addi	r21,r16,1
  805028:	d8002785 	stb	zero,158(sp)
  80502c:	0007883a 	mov	r3,zero
  805030:	000f883a 	mov	r7,zero
  805034:	d8802915 	stw	r2,164(sp)
  805038:	d8003115 	stw	zero,196(sp)
  80503c:	0025883a 	mov	r18,zero
  805040:	01401604 	movi	r5,88
  805044:	01800244 	movi	r6,9
  805048:	02800a84 	movi	r10,42
  80504c:	02401b04 	movi	r9,108
  805050:	ad400044 	addi	r21,r21,1
  805054:	88bff804 	addi	r2,r17,-32
  805058:	28830436 	bltu	r5,r2,805c6c <___vfprintf_internal_r+0xda0>
  80505c:	100490ba 	slli	r2,r2,2
  805060:	01002034 	movhi	r4,128
  805064:	21141d04 	addi	r4,r4,20596
  805068:	1105883a 	add	r2,r2,r4
  80506c:	10800017 	ldw	r2,0(r2)
  805070:	1000683a 	jmp	r2
  805074:	00805b8c 	andi	r2,zero,366
  805078:	00805c6c 	andhi	r2,zero,369
  80507c:	00805c6c 	andhi	r2,zero,369
  805080:	00805bac 	andhi	r2,zero,366
  805084:	00805c6c 	andhi	r2,zero,369
  805088:	00805c6c 	andhi	r2,zero,369
  80508c:	00805c6c 	andhi	r2,zero,369
  805090:	00805c6c 	andhi	r2,zero,369
  805094:	00805c6c 	andhi	r2,zero,369
  805098:	00805c6c 	andhi	r2,zero,369
  80509c:	00805320 	cmpeqi	r2,zero,332
  8050a0:	00805ac8 	cmpgei	r2,zero,363
  8050a4:	00805c6c 	andhi	r2,zero,369
  8050a8:	008051e8 	cmpgeui	r2,zero,327
  8050ac:	00805348 	cmpgei	r2,zero,333
  8050b0:	00805c6c 	andhi	r2,zero,369
  8050b4:	00805388 	cmpgei	r2,zero,334
  8050b8:	00805394 	movui	r2,334
  8050bc:	00805394 	movui	r2,334
  8050c0:	00805394 	movui	r2,334
  8050c4:	00805394 	movui	r2,334
  8050c8:	00805394 	movui	r2,334
  8050cc:	00805394 	movui	r2,334
  8050d0:	00805394 	movui	r2,334
  8050d4:	00805394 	movui	r2,334
  8050d8:	00805394 	movui	r2,334
  8050dc:	00805c6c 	andhi	r2,zero,369
  8050e0:	00805c6c 	andhi	r2,zero,369
  8050e4:	00805c6c 	andhi	r2,zero,369
  8050e8:	00805c6c 	andhi	r2,zero,369
  8050ec:	00805c6c 	andhi	r2,zero,369
  8050f0:	00805c6c 	andhi	r2,zero,369
  8050f4:	00805c6c 	andhi	r2,zero,369
  8050f8:	00805c6c 	andhi	r2,zero,369
  8050fc:	00805c6c 	andhi	r2,zero,369
  805100:	00805c6c 	andhi	r2,zero,369
  805104:	008053c8 	cmpgei	r2,zero,335
  805108:	00805484 	movi	r2,338
  80510c:	00805c6c 	andhi	r2,zero,369
  805110:	00805484 	movi	r2,338
  805114:	00805c6c 	andhi	r2,zero,369
  805118:	00805c6c 	andhi	r2,zero,369
  80511c:	00805c6c 	andhi	r2,zero,369
  805120:	00805c6c 	andhi	r2,zero,369
  805124:	00805524 	muli	r2,zero,340
  805128:	00805c6c 	andhi	r2,zero,369
  80512c:	00805c6c 	andhi	r2,zero,369
  805130:	00805530 	cmpltui	r2,zero,340
  805134:	00805c6c 	andhi	r2,zero,369
  805138:	00805c6c 	andhi	r2,zero,369
  80513c:	00805c6c 	andhi	r2,zero,369
  805140:	00805c6c 	andhi	r2,zero,369
  805144:	00805c6c 	andhi	r2,zero,369
  805148:	008059a8 	cmpgeui	r2,zero,358
  80514c:	00805c6c 	andhi	r2,zero,369
  805150:	00805c6c 	andhi	r2,zero,369
  805154:	00805a08 	cmpgei	r2,zero,360
  805158:	00805c6c 	andhi	r2,zero,369
  80515c:	00805c6c 	andhi	r2,zero,369
  805160:	00805c6c 	andhi	r2,zero,369
  805164:	00805c6c 	andhi	r2,zero,369
  805168:	00805c6c 	andhi	r2,zero,369
  80516c:	00805c6c 	andhi	r2,zero,369
  805170:	00805c6c 	andhi	r2,zero,369
  805174:	00805c6c 	andhi	r2,zero,369
  805178:	00805c6c 	andhi	r2,zero,369
  80517c:	00805c6c 	andhi	r2,zero,369
  805180:	00805c18 	cmpnei	r2,zero,368
  805184:	00805bb8 	rdprs	r2,zero,366
  805188:	00805484 	movi	r2,338
  80518c:	00805484 	movi	r2,338
  805190:	00805484 	movi	r2,338
  805194:	00805bc8 	cmpgei	r2,zero,367
  805198:	00805bb8 	rdprs	r2,zero,366
  80519c:	00805c6c 	andhi	r2,zero,369
  8051a0:	00805c6c 	andhi	r2,zero,369
  8051a4:	00805bd4 	movui	r2,367
  8051a8:	00805c6c 	andhi	r2,zero,369
  8051ac:	00805be4 	muli	r2,zero,367
  8051b0:	00805ab8 	rdprs	r2,zero,362
  8051b4:	008051f4 	movhi	r2,327
  8051b8:	00805ad8 	cmpnei	r2,zero,363
  8051bc:	00805c6c 	andhi	r2,zero,369
  8051c0:	00805ae4 	muli	r2,zero,363
  8051c4:	00805c6c 	andhi	r2,zero,369
  8051c8:	00805b40 	call	805b4 <__alt_mem_sdram-0x77fa4c>
  8051cc:	00805c6c 	andhi	r2,zero,369
  8051d0:	00805c6c 	andhi	r2,zero,369
  8051d4:	00805b50 	cmplti	r2,zero,365
  8051d8:	d9003117 	ldw	r4,196(sp)
  8051dc:	d8802d15 	stw	r2,180(sp)
  8051e0:	0109c83a 	sub	r4,zero,r4
  8051e4:	d9003115 	stw	r4,196(sp)
  8051e8:	94800114 	ori	r18,r18,4
  8051ec:	ac400007 	ldb	r17,0(r21)
  8051f0:	003f9706 	br	805050 <__alt_data_end+0xff805050>
  8051f4:	00800c04 	movi	r2,48
  8051f8:	d9002d17 	ldw	r4,180(sp)
  8051fc:	d9402917 	ldw	r5,164(sp)
  805200:	d8802705 	stb	r2,156(sp)
  805204:	00801e04 	movi	r2,120
  805208:	d8802745 	stb	r2,157(sp)
  80520c:	d8002785 	stb	zero,158(sp)
  805210:	20c00104 	addi	r3,r4,4
  805214:	24c00017 	ldw	r19,0(r4)
  805218:	002d883a 	mov	r22,zero
  80521c:	90800094 	ori	r2,r18,2
  805220:	28029a16 	blt	r5,zero,805c8c <___vfprintf_internal_r+0xdc0>
  805224:	00bfdfc4 	movi	r2,-129
  805228:	90a4703a 	and	r18,r18,r2
  80522c:	d8c02d15 	stw	r3,180(sp)
  805230:	94800094 	ori	r18,r18,2
  805234:	9802871e 	bne	r19,zero,805c54 <___vfprintf_internal_r+0xd88>
  805238:	00802074 	movhi	r2,129
  80523c:	10890c04 	addi	r2,r2,9264
  805240:	d8803915 	stw	r2,228(sp)
  805244:	04401e04 	movi	r17,120
  805248:	d8802917 	ldw	r2,164(sp)
  80524c:	0039883a 	mov	fp,zero
  805250:	1001e926 	beq	r2,zero,8059f8 <___vfprintf_internal_r+0xb2c>
  805254:	0027883a 	mov	r19,zero
  805258:	002d883a 	mov	r22,zero
  80525c:	00020506 	br	805a74 <___vfprintf_internal_r+0xba8>
  805260:	d9002c17 	ldw	r4,176(sp)
  805264:	b80b883a 	mov	r5,r23
  805268:	080719c0 	call	80719c <__swsetup_r>
  80526c:	1005ac1e 	bne	r2,zero,806920 <___vfprintf_internal_r+0x1a54>
  805270:	b880030b 	ldhu	r2,12(r23)
  805274:	00c00284 	movi	r3,10
  805278:	1080068c 	andi	r2,r2,26
  80527c:	10ff3c1e 	bne	r2,r3,804f70 <__alt_data_end+0xff804f70>
  805280:	b880038f 	ldh	r2,14(r23)
  805284:	103f3a16 	blt	r2,zero,804f70 <__alt_data_end+0xff804f70>
  805288:	d9c02d17 	ldw	r7,180(sp)
  80528c:	d9002c17 	ldw	r4,176(sp)
  805290:	a80d883a 	mov	r6,r21
  805294:	b80b883a 	mov	r5,r23
  805298:	08070e00 	call	8070e0 <__sbprintf>
  80529c:	00001106 	br	8052e4 <___vfprintf_internal_r+0x418>
  8052a0:	d9002c17 	ldw	r4,176(sp)
  8052a4:	d9801e04 	addi	r6,sp,120
  8052a8:	b80b883a 	mov	r5,r23
  8052ac:	080c4c80 	call	80c4c8 <__sprint_r>
  8052b0:	1000081e 	bne	r2,zero,8052d4 <___vfprintf_internal_r+0x408>
  8052b4:	da000404 	addi	r8,sp,16
  8052b8:	003f5306 	br	805008 <__alt_data_end+0xff805008>
  8052bc:	d8802017 	ldw	r2,128(sp)
  8052c0:	10000426 	beq	r2,zero,8052d4 <___vfprintf_internal_r+0x408>
  8052c4:	d9002c17 	ldw	r4,176(sp)
  8052c8:	d9801e04 	addi	r6,sp,120
  8052cc:	b80b883a 	mov	r5,r23
  8052d0:	080c4c80 	call	80c4c8 <__sprint_r>
  8052d4:	b880030b 	ldhu	r2,12(r23)
  8052d8:	1080100c 	andi	r2,r2,64
  8052dc:	1005901e 	bne	r2,zero,806920 <___vfprintf_internal_r+0x1a54>
  8052e0:	d8802f17 	ldw	r2,188(sp)
  8052e4:	dfc04717 	ldw	ra,284(sp)
  8052e8:	df004617 	ldw	fp,280(sp)
  8052ec:	ddc04517 	ldw	r23,276(sp)
  8052f0:	dd804417 	ldw	r22,272(sp)
  8052f4:	dd404317 	ldw	r21,268(sp)
  8052f8:	dd004217 	ldw	r20,264(sp)
  8052fc:	dcc04117 	ldw	r19,260(sp)
  805300:	dc804017 	ldw	r18,256(sp)
  805304:	dc403f17 	ldw	r17,252(sp)
  805308:	dc003e17 	ldw	r16,248(sp)
  80530c:	dec04804 	addi	sp,sp,288
  805310:	f800283a 	ret
  805314:	d9002c17 	ldw	r4,176(sp)
  805318:	08091700 	call	809170 <__sinit>
  80531c:	003f0406 	br	804f30 <__alt_data_end+0xff804f30>
  805320:	d8802d17 	ldw	r2,180(sp)
  805324:	d9002d17 	ldw	r4,180(sp)
  805328:	10800017 	ldw	r2,0(r2)
  80532c:	d8803115 	stw	r2,196(sp)
  805330:	20800104 	addi	r2,r4,4
  805334:	d9003117 	ldw	r4,196(sp)
  805338:	203fa716 	blt	r4,zero,8051d8 <__alt_data_end+0xff8051d8>
  80533c:	d8802d15 	stw	r2,180(sp)
  805340:	ac400007 	ldb	r17,0(r21)
  805344:	003f4206 	br	805050 <__alt_data_end+0xff805050>
  805348:	ac400007 	ldb	r17,0(r21)
  80534c:	aac00044 	addi	r11,r21,1
  805350:	8a872826 	beq	r17,r10,806ff4 <___vfprintf_internal_r+0x2128>
  805354:	88bff404 	addi	r2,r17,-48
  805358:	0009883a 	mov	r4,zero
  80535c:	30867d36 	bltu	r6,r2,806d54 <___vfprintf_internal_r+0x1e88>
  805360:	5c400007 	ldb	r17,0(r11)
  805364:	210002a4 	muli	r4,r4,10
  805368:	5d400044 	addi	r21,r11,1
  80536c:	a817883a 	mov	r11,r21
  805370:	2089883a 	add	r4,r4,r2
  805374:	88bff404 	addi	r2,r17,-48
  805378:	30bff92e 	bgeu	r6,r2,805360 <__alt_data_end+0xff805360>
  80537c:	2005c916 	blt	r4,zero,806aa4 <___vfprintf_internal_r+0x1bd8>
  805380:	d9002915 	stw	r4,164(sp)
  805384:	003f3306 	br	805054 <__alt_data_end+0xff805054>
  805388:	94802014 	ori	r18,r18,128
  80538c:	ac400007 	ldb	r17,0(r21)
  805390:	003f2f06 	br	805050 <__alt_data_end+0xff805050>
  805394:	a809883a 	mov	r4,r21
  805398:	d8003115 	stw	zero,196(sp)
  80539c:	88bff404 	addi	r2,r17,-48
  8053a0:	0017883a 	mov	r11,zero
  8053a4:	24400007 	ldb	r17,0(r4)
  8053a8:	5ac002a4 	muli	r11,r11,10
  8053ac:	ad400044 	addi	r21,r21,1
  8053b0:	a809883a 	mov	r4,r21
  8053b4:	12d7883a 	add	r11,r2,r11
  8053b8:	88bff404 	addi	r2,r17,-48
  8053bc:	30bff92e 	bgeu	r6,r2,8053a4 <__alt_data_end+0xff8053a4>
  8053c0:	dac03115 	stw	r11,196(sp)
  8053c4:	003f2306 	br	805054 <__alt_data_end+0xff805054>
  8053c8:	18c03fcc 	andi	r3,r3,255
  8053cc:	18072b1e 	bne	r3,zero,80707c <___vfprintf_internal_r+0x21b0>
  8053d0:	94800414 	ori	r18,r18,16
  8053d4:	9080080c 	andi	r2,r18,32
  8053d8:	10037b26 	beq	r2,zero,8061c8 <___vfprintf_internal_r+0x12fc>
  8053dc:	d9402d17 	ldw	r5,180(sp)
  8053e0:	28800117 	ldw	r2,4(r5)
  8053e4:	2cc00017 	ldw	r19,0(r5)
  8053e8:	29400204 	addi	r5,r5,8
  8053ec:	d9402d15 	stw	r5,180(sp)
  8053f0:	102d883a 	mov	r22,r2
  8053f4:	10044b16 	blt	r2,zero,806524 <___vfprintf_internal_r+0x1658>
  8053f8:	d9402917 	ldw	r5,164(sp)
  8053fc:	df002783 	ldbu	fp,158(sp)
  805400:	2803bc16 	blt	r5,zero,8062f4 <___vfprintf_internal_r+0x1428>
  805404:	00ffdfc4 	movi	r3,-129
  805408:	9d84b03a 	or	r2,r19,r22
  80540c:	90e4703a 	and	r18,r18,r3
  805410:	10017726 	beq	r2,zero,8059f0 <___vfprintf_internal_r+0xb24>
  805414:	b0038326 	beq	r22,zero,806224 <___vfprintf_internal_r+0x1358>
  805418:	dc402a15 	stw	r17,168(sp)
  80541c:	dc001e04 	addi	r16,sp,120
  805420:	b023883a 	mov	r17,r22
  805424:	402d883a 	mov	r22,r8
  805428:	9809883a 	mov	r4,r19
  80542c:	880b883a 	mov	r5,r17
  805430:	01800284 	movi	r6,10
  805434:	000f883a 	mov	r7,zero
  805438:	080e8c00 	call	80e8c0 <__umoddi3>
  80543c:	10800c04 	addi	r2,r2,48
  805440:	843fffc4 	addi	r16,r16,-1
  805444:	9809883a 	mov	r4,r19
  805448:	880b883a 	mov	r5,r17
  80544c:	80800005 	stb	r2,0(r16)
  805450:	01800284 	movi	r6,10
  805454:	000f883a 	mov	r7,zero
  805458:	080e3480 	call	80e348 <__udivdi3>
  80545c:	1027883a 	mov	r19,r2
  805460:	10c4b03a 	or	r2,r2,r3
  805464:	1823883a 	mov	r17,r3
  805468:	103fef1e 	bne	r2,zero,805428 <__alt_data_end+0xff805428>
  80546c:	d8c02817 	ldw	r3,160(sp)
  805470:	dc402a17 	ldw	r17,168(sp)
  805474:	b011883a 	mov	r8,r22
  805478:	1c07c83a 	sub	r3,r3,r16
  80547c:	d8c02e15 	stw	r3,184(sp)
  805480:	00005906 	br	8055e8 <___vfprintf_internal_r+0x71c>
  805484:	18c03fcc 	andi	r3,r3,255
  805488:	1806fa1e 	bne	r3,zero,807074 <___vfprintf_internal_r+0x21a8>
  80548c:	9080020c 	andi	r2,r18,8
  805490:	10048a26 	beq	r2,zero,8066bc <___vfprintf_internal_r+0x17f0>
  805494:	d8c02d17 	ldw	r3,180(sp)
  805498:	d9002d17 	ldw	r4,180(sp)
  80549c:	d9402d17 	ldw	r5,180(sp)
  8054a0:	18c00017 	ldw	r3,0(r3)
  8054a4:	21000117 	ldw	r4,4(r4)
  8054a8:	29400204 	addi	r5,r5,8
  8054ac:	d8c03615 	stw	r3,216(sp)
  8054b0:	d9003815 	stw	r4,224(sp)
  8054b4:	d9402d15 	stw	r5,180(sp)
  8054b8:	d9003617 	ldw	r4,216(sp)
  8054bc:	d9403817 	ldw	r5,224(sp)
  8054c0:	da003d15 	stw	r8,244(sp)
  8054c4:	04000044 	movi	r16,1
  8054c8:	080c0ec0 	call	80c0ec <__fpclassifyd>
  8054cc:	da003d17 	ldw	r8,244(sp)
  8054d0:	14041f1e 	bne	r2,r16,806550 <___vfprintf_internal_r+0x1684>
  8054d4:	d9003617 	ldw	r4,216(sp)
  8054d8:	d9403817 	ldw	r5,224(sp)
  8054dc:	000d883a 	mov	r6,zero
  8054e0:	000f883a 	mov	r7,zero
  8054e4:	080f6e00 	call	80f6e0 <__ledf2>
  8054e8:	da003d17 	ldw	r8,244(sp)
  8054ec:	1005be16 	blt	r2,zero,806be8 <___vfprintf_internal_r+0x1d1c>
  8054f0:	df002783 	ldbu	fp,158(sp)
  8054f4:	008011c4 	movi	r2,71
  8054f8:	1445330e 	bge	r2,r17,8069c8 <___vfprintf_internal_r+0x1afc>
  8054fc:	04002074 	movhi	r16,129
  805500:	84090404 	addi	r16,r16,9232
  805504:	00c000c4 	movi	r3,3
  805508:	00bfdfc4 	movi	r2,-129
  80550c:	d8c02a15 	stw	r3,168(sp)
  805510:	90a4703a 	and	r18,r18,r2
  805514:	d8c02e15 	stw	r3,184(sp)
  805518:	d8002915 	stw	zero,164(sp)
  80551c:	d8003215 	stw	zero,200(sp)
  805520:	00003706 	br	805600 <___vfprintf_internal_r+0x734>
  805524:	94800214 	ori	r18,r18,8
  805528:	ac400007 	ldb	r17,0(r21)
  80552c:	003ec806 	br	805050 <__alt_data_end+0xff805050>
  805530:	18c03fcc 	andi	r3,r3,255
  805534:	1806db1e 	bne	r3,zero,8070a4 <___vfprintf_internal_r+0x21d8>
  805538:	94800414 	ori	r18,r18,16
  80553c:	9080080c 	andi	r2,r18,32
  805540:	1002d826 	beq	r2,zero,8060a4 <___vfprintf_internal_r+0x11d8>
  805544:	d9402d17 	ldw	r5,180(sp)
  805548:	d8c02917 	ldw	r3,164(sp)
  80554c:	d8002785 	stb	zero,158(sp)
  805550:	28800204 	addi	r2,r5,8
  805554:	2cc00017 	ldw	r19,0(r5)
  805558:	2d800117 	ldw	r22,4(r5)
  80555c:	18048f16 	blt	r3,zero,80679c <___vfprintf_internal_r+0x18d0>
  805560:	013fdfc4 	movi	r4,-129
  805564:	9d86b03a 	or	r3,r19,r22
  805568:	d8802d15 	stw	r2,180(sp)
  80556c:	9124703a 	and	r18,r18,r4
  805570:	1802d91e 	bne	r3,zero,8060d8 <___vfprintf_internal_r+0x120c>
  805574:	d8c02917 	ldw	r3,164(sp)
  805578:	0039883a 	mov	fp,zero
  80557c:	1805c326 	beq	r3,zero,806c8c <___vfprintf_internal_r+0x1dc0>
  805580:	0027883a 	mov	r19,zero
  805584:	002d883a 	mov	r22,zero
  805588:	dc001e04 	addi	r16,sp,120
  80558c:	9806d0fa 	srli	r3,r19,3
  805590:	b008977a 	slli	r4,r22,29
  805594:	b02cd0fa 	srli	r22,r22,3
  805598:	9cc001cc 	andi	r19,r19,7
  80559c:	98800c04 	addi	r2,r19,48
  8055a0:	843fffc4 	addi	r16,r16,-1
  8055a4:	20e6b03a 	or	r19,r4,r3
  8055a8:	80800005 	stb	r2,0(r16)
  8055ac:	9d86b03a 	or	r3,r19,r22
  8055b0:	183ff61e 	bne	r3,zero,80558c <__alt_data_end+0xff80558c>
  8055b4:	90c0004c 	andi	r3,r18,1
  8055b8:	18013b26 	beq	r3,zero,805aa8 <___vfprintf_internal_r+0xbdc>
  8055bc:	10803fcc 	andi	r2,r2,255
  8055c0:	1080201c 	xori	r2,r2,128
  8055c4:	10bfe004 	addi	r2,r2,-128
  8055c8:	00c00c04 	movi	r3,48
  8055cc:	10c13626 	beq	r2,r3,805aa8 <___vfprintf_internal_r+0xbdc>
  8055d0:	80ffffc5 	stb	r3,-1(r16)
  8055d4:	d8c02817 	ldw	r3,160(sp)
  8055d8:	80bfffc4 	addi	r2,r16,-1
  8055dc:	1021883a 	mov	r16,r2
  8055e0:	1887c83a 	sub	r3,r3,r2
  8055e4:	d8c02e15 	stw	r3,184(sp)
  8055e8:	d8802e17 	ldw	r2,184(sp)
  8055ec:	d9002917 	ldw	r4,164(sp)
  8055f0:	1100010e 	bge	r2,r4,8055f8 <___vfprintf_internal_r+0x72c>
  8055f4:	2005883a 	mov	r2,r4
  8055f8:	d8802a15 	stw	r2,168(sp)
  8055fc:	d8003215 	stw	zero,200(sp)
  805600:	e7003fcc 	andi	fp,fp,255
  805604:	e700201c 	xori	fp,fp,128
  805608:	e73fe004 	addi	fp,fp,-128
  80560c:	e0000326 	beq	fp,zero,80561c <___vfprintf_internal_r+0x750>
  805610:	d8c02a17 	ldw	r3,168(sp)
  805614:	18c00044 	addi	r3,r3,1
  805618:	d8c02a15 	stw	r3,168(sp)
  80561c:	90c0008c 	andi	r3,r18,2
  805620:	d8c02b15 	stw	r3,172(sp)
  805624:	18000326 	beq	r3,zero,805634 <___vfprintf_internal_r+0x768>
  805628:	d8c02a17 	ldw	r3,168(sp)
  80562c:	18c00084 	addi	r3,r3,2
  805630:	d8c02a15 	stw	r3,168(sp)
  805634:	90c0210c 	andi	r3,r18,132
  805638:	d8c03015 	stw	r3,192(sp)
  80563c:	1801a31e 	bne	r3,zero,805ccc <___vfprintf_internal_r+0xe00>
  805640:	d9003117 	ldw	r4,196(sp)
  805644:	d8c02a17 	ldw	r3,168(sp)
  805648:	20e7c83a 	sub	r19,r4,r3
  80564c:	04c19f0e 	bge	zero,r19,805ccc <___vfprintf_internal_r+0xe00>
  805650:	02400404 	movi	r9,16
  805654:	d8c02017 	ldw	r3,128(sp)
  805658:	d8801f17 	ldw	r2,124(sp)
  80565c:	4cc50d0e 	bge	r9,r19,806a94 <___vfprintf_internal_r+0x1bc8>
  805660:	01402074 	movhi	r5,129
  805664:	29491784 	addi	r5,r5,9310
  805668:	dc403b15 	stw	r17,236(sp)
  80566c:	d9403515 	stw	r5,212(sp)
  805670:	9823883a 	mov	r17,r19
  805674:	482d883a 	mov	r22,r9
  805678:	9027883a 	mov	r19,r18
  80567c:	070001c4 	movi	fp,7
  805680:	8025883a 	mov	r18,r16
  805684:	dc002c17 	ldw	r16,176(sp)
  805688:	00000306 	br	805698 <___vfprintf_internal_r+0x7cc>
  80568c:	8c7ffc04 	addi	r17,r17,-16
  805690:	42000204 	addi	r8,r8,8
  805694:	b440130e 	bge	r22,r17,8056e4 <___vfprintf_internal_r+0x818>
  805698:	01002074 	movhi	r4,129
  80569c:	18c00404 	addi	r3,r3,16
  8056a0:	10800044 	addi	r2,r2,1
  8056a4:	21091784 	addi	r4,r4,9310
  8056a8:	41000015 	stw	r4,0(r8)
  8056ac:	45800115 	stw	r22,4(r8)
  8056b0:	d8c02015 	stw	r3,128(sp)
  8056b4:	d8801f15 	stw	r2,124(sp)
  8056b8:	e0bff40e 	bge	fp,r2,80568c <__alt_data_end+0xff80568c>
  8056bc:	d9801e04 	addi	r6,sp,120
  8056c0:	b80b883a 	mov	r5,r23
  8056c4:	8009883a 	mov	r4,r16
  8056c8:	080c4c80 	call	80c4c8 <__sprint_r>
  8056cc:	103f011e 	bne	r2,zero,8052d4 <__alt_data_end+0xff8052d4>
  8056d0:	8c7ffc04 	addi	r17,r17,-16
  8056d4:	d8c02017 	ldw	r3,128(sp)
  8056d8:	d8801f17 	ldw	r2,124(sp)
  8056dc:	da000404 	addi	r8,sp,16
  8056e0:	b47fed16 	blt	r22,r17,805698 <__alt_data_end+0xff805698>
  8056e4:	9021883a 	mov	r16,r18
  8056e8:	9825883a 	mov	r18,r19
  8056ec:	8827883a 	mov	r19,r17
  8056f0:	dc403b17 	ldw	r17,236(sp)
  8056f4:	d9403517 	ldw	r5,212(sp)
  8056f8:	98c7883a 	add	r3,r19,r3
  8056fc:	10800044 	addi	r2,r2,1
  805700:	41400015 	stw	r5,0(r8)
  805704:	44c00115 	stw	r19,4(r8)
  805708:	d8c02015 	stw	r3,128(sp)
  80570c:	d8801f15 	stw	r2,124(sp)
  805710:	010001c4 	movi	r4,7
  805714:	2082a316 	blt	r4,r2,8061a4 <___vfprintf_internal_r+0x12d8>
  805718:	df002787 	ldb	fp,158(sp)
  80571c:	42000204 	addi	r8,r8,8
  805720:	e0000c26 	beq	fp,zero,805754 <___vfprintf_internal_r+0x888>
  805724:	d8801f17 	ldw	r2,124(sp)
  805728:	d9002784 	addi	r4,sp,158
  80572c:	18c00044 	addi	r3,r3,1
  805730:	10800044 	addi	r2,r2,1
  805734:	41000015 	stw	r4,0(r8)
  805738:	01000044 	movi	r4,1
  80573c:	41000115 	stw	r4,4(r8)
  805740:	d8c02015 	stw	r3,128(sp)
  805744:	d8801f15 	stw	r2,124(sp)
  805748:	010001c4 	movi	r4,7
  80574c:	20823c16 	blt	r4,r2,806040 <___vfprintf_internal_r+0x1174>
  805750:	42000204 	addi	r8,r8,8
  805754:	d8802b17 	ldw	r2,172(sp)
  805758:	10000c26 	beq	r2,zero,80578c <___vfprintf_internal_r+0x8c0>
  80575c:	d8801f17 	ldw	r2,124(sp)
  805760:	d9002704 	addi	r4,sp,156
  805764:	18c00084 	addi	r3,r3,2
  805768:	10800044 	addi	r2,r2,1
  80576c:	41000015 	stw	r4,0(r8)
  805770:	01000084 	movi	r4,2
  805774:	41000115 	stw	r4,4(r8)
  805778:	d8c02015 	stw	r3,128(sp)
  80577c:	d8801f15 	stw	r2,124(sp)
  805780:	010001c4 	movi	r4,7
  805784:	20823616 	blt	r4,r2,806060 <___vfprintf_internal_r+0x1194>
  805788:	42000204 	addi	r8,r8,8
  80578c:	d9003017 	ldw	r4,192(sp)
  805790:	00802004 	movi	r2,128
  805794:	20819926 	beq	r4,r2,805dfc <___vfprintf_internal_r+0xf30>
  805798:	d9402917 	ldw	r5,164(sp)
  80579c:	d8802e17 	ldw	r2,184(sp)
  8057a0:	28adc83a 	sub	r22,r5,r2
  8057a4:	0580310e 	bge	zero,r22,80586c <___vfprintf_internal_r+0x9a0>
  8057a8:	07000404 	movi	fp,16
  8057ac:	d8801f17 	ldw	r2,124(sp)
  8057b0:	e584140e 	bge	fp,r22,806804 <___vfprintf_internal_r+0x1938>
  8057b4:	01402074 	movhi	r5,129
  8057b8:	29491384 	addi	r5,r5,9294
  8057bc:	dc402915 	stw	r17,164(sp)
  8057c0:	d9402b15 	stw	r5,172(sp)
  8057c4:	b023883a 	mov	r17,r22
  8057c8:	04c001c4 	movi	r19,7
  8057cc:	a82d883a 	mov	r22,r21
  8057d0:	902b883a 	mov	r21,r18
  8057d4:	8025883a 	mov	r18,r16
  8057d8:	dc002c17 	ldw	r16,176(sp)
  8057dc:	00000306 	br	8057ec <___vfprintf_internal_r+0x920>
  8057e0:	8c7ffc04 	addi	r17,r17,-16
  8057e4:	42000204 	addi	r8,r8,8
  8057e8:	e440110e 	bge	fp,r17,805830 <___vfprintf_internal_r+0x964>
  8057ec:	18c00404 	addi	r3,r3,16
  8057f0:	10800044 	addi	r2,r2,1
  8057f4:	45000015 	stw	r20,0(r8)
  8057f8:	47000115 	stw	fp,4(r8)
  8057fc:	d8c02015 	stw	r3,128(sp)
  805800:	d8801f15 	stw	r2,124(sp)
  805804:	98bff60e 	bge	r19,r2,8057e0 <__alt_data_end+0xff8057e0>
  805808:	d9801e04 	addi	r6,sp,120
  80580c:	b80b883a 	mov	r5,r23
  805810:	8009883a 	mov	r4,r16
  805814:	080c4c80 	call	80c4c8 <__sprint_r>
  805818:	103eae1e 	bne	r2,zero,8052d4 <__alt_data_end+0xff8052d4>
  80581c:	8c7ffc04 	addi	r17,r17,-16
  805820:	d8c02017 	ldw	r3,128(sp)
  805824:	d8801f17 	ldw	r2,124(sp)
  805828:	da000404 	addi	r8,sp,16
  80582c:	e47fef16 	blt	fp,r17,8057ec <__alt_data_end+0xff8057ec>
  805830:	9021883a 	mov	r16,r18
  805834:	a825883a 	mov	r18,r21
  805838:	b02b883a 	mov	r21,r22
  80583c:	882d883a 	mov	r22,r17
  805840:	dc402917 	ldw	r17,164(sp)
  805844:	d9002b17 	ldw	r4,172(sp)
  805848:	1d87883a 	add	r3,r3,r22
  80584c:	10800044 	addi	r2,r2,1
  805850:	41000015 	stw	r4,0(r8)
  805854:	45800115 	stw	r22,4(r8)
  805858:	d8c02015 	stw	r3,128(sp)
  80585c:	d8801f15 	stw	r2,124(sp)
  805860:	010001c4 	movi	r4,7
  805864:	2081ee16 	blt	r4,r2,806020 <___vfprintf_internal_r+0x1154>
  805868:	42000204 	addi	r8,r8,8
  80586c:	9080400c 	andi	r2,r18,256
  805870:	1001181e 	bne	r2,zero,805cd4 <___vfprintf_internal_r+0xe08>
  805874:	d9402e17 	ldw	r5,184(sp)
  805878:	d8801f17 	ldw	r2,124(sp)
  80587c:	44000015 	stw	r16,0(r8)
  805880:	1947883a 	add	r3,r3,r5
  805884:	10800044 	addi	r2,r2,1
  805888:	41400115 	stw	r5,4(r8)
  80588c:	d8c02015 	stw	r3,128(sp)
  805890:	d8801f15 	stw	r2,124(sp)
  805894:	010001c4 	movi	r4,7
  805898:	2081d316 	blt	r4,r2,805fe8 <___vfprintf_internal_r+0x111c>
  80589c:	42000204 	addi	r8,r8,8
  8058a0:	9480010c 	andi	r18,r18,4
  8058a4:	90003226 	beq	r18,zero,805970 <___vfprintf_internal_r+0xaa4>
  8058a8:	d9403117 	ldw	r5,196(sp)
  8058ac:	d8802a17 	ldw	r2,168(sp)
  8058b0:	28a1c83a 	sub	r16,r5,r2
  8058b4:	04002e0e 	bge	zero,r16,805970 <___vfprintf_internal_r+0xaa4>
  8058b8:	04400404 	movi	r17,16
  8058bc:	d8801f17 	ldw	r2,124(sp)
  8058c0:	8c04a20e 	bge	r17,r16,806b4c <___vfprintf_internal_r+0x1c80>
  8058c4:	01402074 	movhi	r5,129
  8058c8:	29491784 	addi	r5,r5,9310
  8058cc:	d9403515 	stw	r5,212(sp)
  8058d0:	048001c4 	movi	r18,7
  8058d4:	dcc02c17 	ldw	r19,176(sp)
  8058d8:	00000306 	br	8058e8 <___vfprintf_internal_r+0xa1c>
  8058dc:	843ffc04 	addi	r16,r16,-16
  8058e0:	42000204 	addi	r8,r8,8
  8058e4:	8c00130e 	bge	r17,r16,805934 <___vfprintf_internal_r+0xa68>
  8058e8:	01002074 	movhi	r4,129
  8058ec:	18c00404 	addi	r3,r3,16
  8058f0:	10800044 	addi	r2,r2,1
  8058f4:	21091784 	addi	r4,r4,9310
  8058f8:	41000015 	stw	r4,0(r8)
  8058fc:	44400115 	stw	r17,4(r8)
  805900:	d8c02015 	stw	r3,128(sp)
  805904:	d8801f15 	stw	r2,124(sp)
  805908:	90bff40e 	bge	r18,r2,8058dc <__alt_data_end+0xff8058dc>
  80590c:	d9801e04 	addi	r6,sp,120
  805910:	b80b883a 	mov	r5,r23
  805914:	9809883a 	mov	r4,r19
  805918:	080c4c80 	call	80c4c8 <__sprint_r>
  80591c:	103e6d1e 	bne	r2,zero,8052d4 <__alt_data_end+0xff8052d4>
  805920:	843ffc04 	addi	r16,r16,-16
  805924:	d8c02017 	ldw	r3,128(sp)
  805928:	d8801f17 	ldw	r2,124(sp)
  80592c:	da000404 	addi	r8,sp,16
  805930:	8c3fed16 	blt	r17,r16,8058e8 <__alt_data_end+0xff8058e8>
  805934:	d9403517 	ldw	r5,212(sp)
  805938:	1c07883a 	add	r3,r3,r16
  80593c:	10800044 	addi	r2,r2,1
  805940:	41400015 	stw	r5,0(r8)
  805944:	44000115 	stw	r16,4(r8)
  805948:	d8c02015 	stw	r3,128(sp)
  80594c:	d8801f15 	stw	r2,124(sp)
  805950:	010001c4 	movi	r4,7
  805954:	2080060e 	bge	r4,r2,805970 <___vfprintf_internal_r+0xaa4>
  805958:	d9002c17 	ldw	r4,176(sp)
  80595c:	d9801e04 	addi	r6,sp,120
  805960:	b80b883a 	mov	r5,r23
  805964:	080c4c80 	call	80c4c8 <__sprint_r>
  805968:	103e5a1e 	bne	r2,zero,8052d4 <__alt_data_end+0xff8052d4>
  80596c:	d8c02017 	ldw	r3,128(sp)
  805970:	d8803117 	ldw	r2,196(sp)
  805974:	d9002a17 	ldw	r4,168(sp)
  805978:	1100010e 	bge	r2,r4,805980 <___vfprintf_internal_r+0xab4>
  80597c:	2005883a 	mov	r2,r4
  805980:	d9402f17 	ldw	r5,188(sp)
  805984:	288b883a 	add	r5,r5,r2
  805988:	d9402f15 	stw	r5,188(sp)
  80598c:	18019e1e 	bne	r3,zero,806008 <___vfprintf_internal_r+0x113c>
  805990:	a8800007 	ldb	r2,0(r21)
  805994:	d8001f15 	stw	zero,124(sp)
  805998:	da000404 	addi	r8,sp,16
  80599c:	103d851e 	bne	r2,zero,804fb4 <__alt_data_end+0xff804fb4>
  8059a0:	a821883a 	mov	r16,r21
  8059a4:	003d9b06 	br	805014 <__alt_data_end+0xff805014>
  8059a8:	18c03fcc 	andi	r3,r3,255
  8059ac:	1805c11e 	bne	r3,zero,8070b4 <___vfprintf_internal_r+0x21e8>
  8059b0:	94800414 	ori	r18,r18,16
  8059b4:	9080080c 	andi	r2,r18,32
  8059b8:	10020c26 	beq	r2,zero,8061ec <___vfprintf_internal_r+0x1320>
  8059bc:	d8802d17 	ldw	r2,180(sp)
  8059c0:	d9002917 	ldw	r4,164(sp)
  8059c4:	d8002785 	stb	zero,158(sp)
  8059c8:	10c00204 	addi	r3,r2,8
  8059cc:	14c00017 	ldw	r19,0(r2)
  8059d0:	15800117 	ldw	r22,4(r2)
  8059d4:	20040f16 	blt	r4,zero,806a14 <___vfprintf_internal_r+0x1b48>
  8059d8:	013fdfc4 	movi	r4,-129
  8059dc:	9d84b03a 	or	r2,r19,r22
  8059e0:	d8c02d15 	stw	r3,180(sp)
  8059e4:	9124703a 	and	r18,r18,r4
  8059e8:	0039883a 	mov	fp,zero
  8059ec:	103e891e 	bne	r2,zero,805414 <__alt_data_end+0xff805414>
  8059f0:	d9002917 	ldw	r4,164(sp)
  8059f4:	2002c11e 	bne	r4,zero,8064fc <___vfprintf_internal_r+0x1630>
  8059f8:	d8002915 	stw	zero,164(sp)
  8059fc:	d8002e15 	stw	zero,184(sp)
  805a00:	dc001e04 	addi	r16,sp,120
  805a04:	003ef806 	br	8055e8 <__alt_data_end+0xff8055e8>
  805a08:	18c03fcc 	andi	r3,r3,255
  805a0c:	18059d1e 	bne	r3,zero,807084 <___vfprintf_internal_r+0x21b8>
  805a10:	01402074 	movhi	r5,129
  805a14:	29490704 	addi	r5,r5,9244
  805a18:	d9403915 	stw	r5,228(sp)
  805a1c:	9080080c 	andi	r2,r18,32
  805a20:	10005226 	beq	r2,zero,805b6c <___vfprintf_internal_r+0xca0>
  805a24:	d8802d17 	ldw	r2,180(sp)
  805a28:	14c00017 	ldw	r19,0(r2)
  805a2c:	15800117 	ldw	r22,4(r2)
  805a30:	10800204 	addi	r2,r2,8
  805a34:	d8802d15 	stw	r2,180(sp)
  805a38:	9080004c 	andi	r2,r18,1
  805a3c:	10019026 	beq	r2,zero,806080 <___vfprintf_internal_r+0x11b4>
  805a40:	9d84b03a 	or	r2,r19,r22
  805a44:	10036926 	beq	r2,zero,8067ec <___vfprintf_internal_r+0x1920>
  805a48:	d8c02917 	ldw	r3,164(sp)
  805a4c:	00800c04 	movi	r2,48
  805a50:	d8802705 	stb	r2,156(sp)
  805a54:	dc402745 	stb	r17,157(sp)
  805a58:	d8002785 	stb	zero,158(sp)
  805a5c:	90800094 	ori	r2,r18,2
  805a60:	18045d16 	blt	r3,zero,806bd8 <___vfprintf_internal_r+0x1d0c>
  805a64:	00bfdfc4 	movi	r2,-129
  805a68:	90a4703a 	and	r18,r18,r2
  805a6c:	94800094 	ori	r18,r18,2
  805a70:	0039883a 	mov	fp,zero
  805a74:	d9003917 	ldw	r4,228(sp)
  805a78:	dc001e04 	addi	r16,sp,120
  805a7c:	988003cc 	andi	r2,r19,15
  805a80:	b006973a 	slli	r3,r22,28
  805a84:	2085883a 	add	r2,r4,r2
  805a88:	9826d13a 	srli	r19,r19,4
  805a8c:	10800003 	ldbu	r2,0(r2)
  805a90:	b02cd13a 	srli	r22,r22,4
  805a94:	843fffc4 	addi	r16,r16,-1
  805a98:	1ce6b03a 	or	r19,r3,r19
  805a9c:	80800005 	stb	r2,0(r16)
  805aa0:	9d84b03a 	or	r2,r19,r22
  805aa4:	103ff51e 	bne	r2,zero,805a7c <__alt_data_end+0xff805a7c>
  805aa8:	d8c02817 	ldw	r3,160(sp)
  805aac:	1c07c83a 	sub	r3,r3,r16
  805ab0:	d8c02e15 	stw	r3,184(sp)
  805ab4:	003ecc06 	br	8055e8 <__alt_data_end+0xff8055e8>
  805ab8:	18c03fcc 	andi	r3,r3,255
  805abc:	183e9f26 	beq	r3,zero,80553c <__alt_data_end+0xff80553c>
  805ac0:	d9c02785 	stb	r7,158(sp)
  805ac4:	003e9d06 	br	80553c <__alt_data_end+0xff80553c>
  805ac8:	00c00044 	movi	r3,1
  805acc:	01c00ac4 	movi	r7,43
  805ad0:	ac400007 	ldb	r17,0(r21)
  805ad4:	003d5e06 	br	805050 <__alt_data_end+0xff805050>
  805ad8:	94800814 	ori	r18,r18,32
  805adc:	ac400007 	ldb	r17,0(r21)
  805ae0:	003d5b06 	br	805050 <__alt_data_end+0xff805050>
  805ae4:	d8c02d17 	ldw	r3,180(sp)
  805ae8:	d8002785 	stb	zero,158(sp)
  805aec:	1c000017 	ldw	r16,0(r3)
  805af0:	1cc00104 	addi	r19,r3,4
  805af4:	80041926 	beq	r16,zero,806b5c <___vfprintf_internal_r+0x1c90>
  805af8:	d9002917 	ldw	r4,164(sp)
  805afc:	2003d016 	blt	r4,zero,806a40 <___vfprintf_internal_r+0x1b74>
  805b00:	200d883a 	mov	r6,r4
  805b04:	000b883a 	mov	r5,zero
  805b08:	8009883a 	mov	r4,r16
  805b0c:	da003d15 	stw	r8,244(sp)
  805b10:	080a6dc0 	call	80a6dc <memchr>
  805b14:	da003d17 	ldw	r8,244(sp)
  805b18:	10045426 	beq	r2,zero,806c6c <___vfprintf_internal_r+0x1da0>
  805b1c:	1405c83a 	sub	r2,r2,r16
  805b20:	d8802e15 	stw	r2,184(sp)
  805b24:	1003cc16 	blt	r2,zero,806a58 <___vfprintf_internal_r+0x1b8c>
  805b28:	df002783 	ldbu	fp,158(sp)
  805b2c:	d8802a15 	stw	r2,168(sp)
  805b30:	dcc02d15 	stw	r19,180(sp)
  805b34:	d8002915 	stw	zero,164(sp)
  805b38:	d8003215 	stw	zero,200(sp)
  805b3c:	003eb006 	br	805600 <__alt_data_end+0xff805600>
  805b40:	18c03fcc 	andi	r3,r3,255
  805b44:	183f9b26 	beq	r3,zero,8059b4 <__alt_data_end+0xff8059b4>
  805b48:	d9c02785 	stb	r7,158(sp)
  805b4c:	003f9906 	br	8059b4 <__alt_data_end+0xff8059b4>
  805b50:	18c03fcc 	andi	r3,r3,255
  805b54:	1805551e 	bne	r3,zero,8070ac <___vfprintf_internal_r+0x21e0>
  805b58:	01402074 	movhi	r5,129
  805b5c:	29490c04 	addi	r5,r5,9264
  805b60:	d9403915 	stw	r5,228(sp)
  805b64:	9080080c 	andi	r2,r18,32
  805b68:	103fae1e 	bne	r2,zero,805a24 <__alt_data_end+0xff805a24>
  805b6c:	9080040c 	andi	r2,r18,16
  805b70:	1002de26 	beq	r2,zero,8066ec <___vfprintf_internal_r+0x1820>
  805b74:	d8c02d17 	ldw	r3,180(sp)
  805b78:	002d883a 	mov	r22,zero
  805b7c:	1cc00017 	ldw	r19,0(r3)
  805b80:	18c00104 	addi	r3,r3,4
  805b84:	d8c02d15 	stw	r3,180(sp)
  805b88:	003fab06 	br	805a38 <__alt_data_end+0xff805a38>
  805b8c:	38803fcc 	andi	r2,r7,255
  805b90:	1080201c 	xori	r2,r2,128
  805b94:	10bfe004 	addi	r2,r2,-128
  805b98:	1002d21e 	bne	r2,zero,8066e4 <___vfprintf_internal_r+0x1818>
  805b9c:	00c00044 	movi	r3,1
  805ba0:	01c00804 	movi	r7,32
  805ba4:	ac400007 	ldb	r17,0(r21)
  805ba8:	003d2906 	br	805050 <__alt_data_end+0xff805050>
  805bac:	94800054 	ori	r18,r18,1
  805bb0:	ac400007 	ldb	r17,0(r21)
  805bb4:	003d2606 	br	805050 <__alt_data_end+0xff805050>
  805bb8:	18c03fcc 	andi	r3,r3,255
  805bbc:	183e0526 	beq	r3,zero,8053d4 <__alt_data_end+0xff8053d4>
  805bc0:	d9c02785 	stb	r7,158(sp)
  805bc4:	003e0306 	br	8053d4 <__alt_data_end+0xff8053d4>
  805bc8:	94801014 	ori	r18,r18,64
  805bcc:	ac400007 	ldb	r17,0(r21)
  805bd0:	003d1f06 	br	805050 <__alt_data_end+0xff805050>
  805bd4:	ac400007 	ldb	r17,0(r21)
  805bd8:	8a438726 	beq	r17,r9,8069f8 <___vfprintf_internal_r+0x1b2c>
  805bdc:	94800414 	ori	r18,r18,16
  805be0:	003d1b06 	br	805050 <__alt_data_end+0xff805050>
  805be4:	18c03fcc 	andi	r3,r3,255
  805be8:	1805341e 	bne	r3,zero,8070bc <___vfprintf_internal_r+0x21f0>
  805bec:	9080080c 	andi	r2,r18,32
  805bf0:	1002cd26 	beq	r2,zero,806728 <___vfprintf_internal_r+0x185c>
  805bf4:	d9402d17 	ldw	r5,180(sp)
  805bf8:	d9002f17 	ldw	r4,188(sp)
  805bfc:	28800017 	ldw	r2,0(r5)
  805c00:	2007d7fa 	srai	r3,r4,31
  805c04:	29400104 	addi	r5,r5,4
  805c08:	d9402d15 	stw	r5,180(sp)
  805c0c:	11000015 	stw	r4,0(r2)
  805c10:	10c00115 	stw	r3,4(r2)
  805c14:	003ce506 	br	804fac <__alt_data_end+0xff804fac>
  805c18:	d8c02d17 	ldw	r3,180(sp)
  805c1c:	d9002d17 	ldw	r4,180(sp)
  805c20:	d8002785 	stb	zero,158(sp)
  805c24:	18800017 	ldw	r2,0(r3)
  805c28:	21000104 	addi	r4,r4,4
  805c2c:	00c00044 	movi	r3,1
  805c30:	d8c02a15 	stw	r3,168(sp)
  805c34:	d8801405 	stb	r2,80(sp)
  805c38:	d9002d15 	stw	r4,180(sp)
  805c3c:	d8c02e15 	stw	r3,184(sp)
  805c40:	d8002915 	stw	zero,164(sp)
  805c44:	d8003215 	stw	zero,200(sp)
  805c48:	dc001404 	addi	r16,sp,80
  805c4c:	0039883a 	mov	fp,zero
  805c50:	003e7206 	br	80561c <__alt_data_end+0xff80561c>
  805c54:	01002074 	movhi	r4,129
  805c58:	21090c04 	addi	r4,r4,9264
  805c5c:	0039883a 	mov	fp,zero
  805c60:	d9003915 	stw	r4,228(sp)
  805c64:	04401e04 	movi	r17,120
  805c68:	003f8206 	br	805a74 <__alt_data_end+0xff805a74>
  805c6c:	18c03fcc 	andi	r3,r3,255
  805c70:	1805061e 	bne	r3,zero,80708c <___vfprintf_internal_r+0x21c0>
  805c74:	883d9126 	beq	r17,zero,8052bc <__alt_data_end+0xff8052bc>
  805c78:	00c00044 	movi	r3,1
  805c7c:	d8c02a15 	stw	r3,168(sp)
  805c80:	dc401405 	stb	r17,80(sp)
  805c84:	d8002785 	stb	zero,158(sp)
  805c88:	003fec06 	br	805c3c <__alt_data_end+0xff805c3c>
  805c8c:	01402074 	movhi	r5,129
  805c90:	29490c04 	addi	r5,r5,9264
  805c94:	d9403915 	stw	r5,228(sp)
  805c98:	d8c02d15 	stw	r3,180(sp)
  805c9c:	1025883a 	mov	r18,r2
  805ca0:	04401e04 	movi	r17,120
  805ca4:	9d84b03a 	or	r2,r19,r22
  805ca8:	1000fc1e 	bne	r2,zero,80609c <___vfprintf_internal_r+0x11d0>
  805cac:	0039883a 	mov	fp,zero
  805cb0:	00800084 	movi	r2,2
  805cb4:	10803fcc 	andi	r2,r2,255
  805cb8:	00c00044 	movi	r3,1
  805cbc:	10c20f26 	beq	r2,r3,8064fc <___vfprintf_internal_r+0x1630>
  805cc0:	00c00084 	movi	r3,2
  805cc4:	10fd6326 	beq	r2,r3,805254 <__alt_data_end+0xff805254>
  805cc8:	003e2d06 	br	805580 <__alt_data_end+0xff805580>
  805ccc:	d8c02017 	ldw	r3,128(sp)
  805cd0:	003e9306 	br	805720 <__alt_data_end+0xff805720>
  805cd4:	00801944 	movi	r2,101
  805cd8:	14407e0e 	bge	r2,r17,805ed4 <___vfprintf_internal_r+0x1008>
  805cdc:	d9003617 	ldw	r4,216(sp)
  805ce0:	d9403817 	ldw	r5,224(sp)
  805ce4:	000d883a 	mov	r6,zero
  805ce8:	000f883a 	mov	r7,zero
  805cec:	d8c03c15 	stw	r3,240(sp)
  805cf0:	da003d15 	stw	r8,244(sp)
  805cf4:	08037040 	call	803704 <__eqdf2>
  805cf8:	d8c03c17 	ldw	r3,240(sp)
  805cfc:	da003d17 	ldw	r8,244(sp)
  805d00:	1000f71e 	bne	r2,zero,8060e0 <___vfprintf_internal_r+0x1214>
  805d04:	d8801f17 	ldw	r2,124(sp)
  805d08:	01002074 	movhi	r4,129
  805d0c:	21091304 	addi	r4,r4,9292
  805d10:	18c00044 	addi	r3,r3,1
  805d14:	10800044 	addi	r2,r2,1
  805d18:	41000015 	stw	r4,0(r8)
  805d1c:	01000044 	movi	r4,1
  805d20:	41000115 	stw	r4,4(r8)
  805d24:	d8c02015 	stw	r3,128(sp)
  805d28:	d8801f15 	stw	r2,124(sp)
  805d2c:	010001c4 	movi	r4,7
  805d30:	2082b816 	blt	r4,r2,806814 <___vfprintf_internal_r+0x1948>
  805d34:	42000204 	addi	r8,r8,8
  805d38:	d8802617 	ldw	r2,152(sp)
  805d3c:	d9403317 	ldw	r5,204(sp)
  805d40:	11400216 	blt	r2,r5,805d4c <___vfprintf_internal_r+0xe80>
  805d44:	9080004c 	andi	r2,r18,1
  805d48:	103ed526 	beq	r2,zero,8058a0 <__alt_data_end+0xff8058a0>
  805d4c:	d8803717 	ldw	r2,220(sp)
  805d50:	d9003417 	ldw	r4,208(sp)
  805d54:	d9403717 	ldw	r5,220(sp)
  805d58:	1887883a 	add	r3,r3,r2
  805d5c:	d8801f17 	ldw	r2,124(sp)
  805d60:	41000015 	stw	r4,0(r8)
  805d64:	41400115 	stw	r5,4(r8)
  805d68:	10800044 	addi	r2,r2,1
  805d6c:	d8c02015 	stw	r3,128(sp)
  805d70:	d8801f15 	stw	r2,124(sp)
  805d74:	010001c4 	movi	r4,7
  805d78:	20832916 	blt	r4,r2,806a20 <___vfprintf_internal_r+0x1b54>
  805d7c:	42000204 	addi	r8,r8,8
  805d80:	d8803317 	ldw	r2,204(sp)
  805d84:	143fffc4 	addi	r16,r2,-1
  805d88:	043ec50e 	bge	zero,r16,8058a0 <__alt_data_end+0xff8058a0>
  805d8c:	04400404 	movi	r17,16
  805d90:	d8801f17 	ldw	r2,124(sp)
  805d94:	8c00880e 	bge	r17,r16,805fb8 <___vfprintf_internal_r+0x10ec>
  805d98:	01402074 	movhi	r5,129
  805d9c:	29491384 	addi	r5,r5,9294
  805da0:	d9402b15 	stw	r5,172(sp)
  805da4:	058001c4 	movi	r22,7
  805da8:	dcc02c17 	ldw	r19,176(sp)
  805dac:	00000306 	br	805dbc <___vfprintf_internal_r+0xef0>
  805db0:	42000204 	addi	r8,r8,8
  805db4:	843ffc04 	addi	r16,r16,-16
  805db8:	8c00820e 	bge	r17,r16,805fc4 <___vfprintf_internal_r+0x10f8>
  805dbc:	18c00404 	addi	r3,r3,16
  805dc0:	10800044 	addi	r2,r2,1
  805dc4:	45000015 	stw	r20,0(r8)
  805dc8:	44400115 	stw	r17,4(r8)
  805dcc:	d8c02015 	stw	r3,128(sp)
  805dd0:	d8801f15 	stw	r2,124(sp)
  805dd4:	b0bff60e 	bge	r22,r2,805db0 <__alt_data_end+0xff805db0>
  805dd8:	d9801e04 	addi	r6,sp,120
  805ddc:	b80b883a 	mov	r5,r23
  805de0:	9809883a 	mov	r4,r19
  805de4:	080c4c80 	call	80c4c8 <__sprint_r>
  805de8:	103d3a1e 	bne	r2,zero,8052d4 <__alt_data_end+0xff8052d4>
  805dec:	d8c02017 	ldw	r3,128(sp)
  805df0:	d8801f17 	ldw	r2,124(sp)
  805df4:	da000404 	addi	r8,sp,16
  805df8:	003fee06 	br	805db4 <__alt_data_end+0xff805db4>
  805dfc:	d9403117 	ldw	r5,196(sp)
  805e00:	d8802a17 	ldw	r2,168(sp)
  805e04:	28adc83a 	sub	r22,r5,r2
  805e08:	05be630e 	bge	zero,r22,805798 <__alt_data_end+0xff805798>
  805e0c:	07000404 	movi	fp,16
  805e10:	d8801f17 	ldw	r2,124(sp)
  805e14:	e5838f0e 	bge	fp,r22,806c54 <___vfprintf_internal_r+0x1d88>
  805e18:	01402074 	movhi	r5,129
  805e1c:	29491384 	addi	r5,r5,9294
  805e20:	dc403015 	stw	r17,192(sp)
  805e24:	d9402b15 	stw	r5,172(sp)
  805e28:	b023883a 	mov	r17,r22
  805e2c:	04c001c4 	movi	r19,7
  805e30:	a82d883a 	mov	r22,r21
  805e34:	902b883a 	mov	r21,r18
  805e38:	8025883a 	mov	r18,r16
  805e3c:	dc002c17 	ldw	r16,176(sp)
  805e40:	00000306 	br	805e50 <___vfprintf_internal_r+0xf84>
  805e44:	8c7ffc04 	addi	r17,r17,-16
  805e48:	42000204 	addi	r8,r8,8
  805e4c:	e440110e 	bge	fp,r17,805e94 <___vfprintf_internal_r+0xfc8>
  805e50:	18c00404 	addi	r3,r3,16
  805e54:	10800044 	addi	r2,r2,1
  805e58:	45000015 	stw	r20,0(r8)
  805e5c:	47000115 	stw	fp,4(r8)
  805e60:	d8c02015 	stw	r3,128(sp)
  805e64:	d8801f15 	stw	r2,124(sp)
  805e68:	98bff60e 	bge	r19,r2,805e44 <__alt_data_end+0xff805e44>
  805e6c:	d9801e04 	addi	r6,sp,120
  805e70:	b80b883a 	mov	r5,r23
  805e74:	8009883a 	mov	r4,r16
  805e78:	080c4c80 	call	80c4c8 <__sprint_r>
  805e7c:	103d151e 	bne	r2,zero,8052d4 <__alt_data_end+0xff8052d4>
  805e80:	8c7ffc04 	addi	r17,r17,-16
  805e84:	d8c02017 	ldw	r3,128(sp)
  805e88:	d8801f17 	ldw	r2,124(sp)
  805e8c:	da000404 	addi	r8,sp,16
  805e90:	e47fef16 	blt	fp,r17,805e50 <__alt_data_end+0xff805e50>
  805e94:	9021883a 	mov	r16,r18
  805e98:	a825883a 	mov	r18,r21
  805e9c:	b02b883a 	mov	r21,r22
  805ea0:	882d883a 	mov	r22,r17
  805ea4:	dc403017 	ldw	r17,192(sp)
  805ea8:	d9002b17 	ldw	r4,172(sp)
  805eac:	1d87883a 	add	r3,r3,r22
  805eb0:	10800044 	addi	r2,r2,1
  805eb4:	41000015 	stw	r4,0(r8)
  805eb8:	45800115 	stw	r22,4(r8)
  805ebc:	d8c02015 	stw	r3,128(sp)
  805ec0:	d8801f15 	stw	r2,124(sp)
  805ec4:	010001c4 	movi	r4,7
  805ec8:	20818e16 	blt	r4,r2,806504 <___vfprintf_internal_r+0x1638>
  805ecc:	42000204 	addi	r8,r8,8
  805ed0:	003e3106 	br	805798 <__alt_data_end+0xff805798>
  805ed4:	d9403317 	ldw	r5,204(sp)
  805ed8:	00800044 	movi	r2,1
  805edc:	18c00044 	addi	r3,r3,1
  805ee0:	1141530e 	bge	r2,r5,806430 <___vfprintf_internal_r+0x1564>
  805ee4:	dc401f17 	ldw	r17,124(sp)
  805ee8:	00800044 	movi	r2,1
  805eec:	40800115 	stw	r2,4(r8)
  805ef0:	8c400044 	addi	r17,r17,1
  805ef4:	44000015 	stw	r16,0(r8)
  805ef8:	d8c02015 	stw	r3,128(sp)
  805efc:	dc401f15 	stw	r17,124(sp)
  805f00:	008001c4 	movi	r2,7
  805f04:	14416b16 	blt	r2,r17,8064b4 <___vfprintf_internal_r+0x15e8>
  805f08:	42000204 	addi	r8,r8,8
  805f0c:	d8803717 	ldw	r2,220(sp)
  805f10:	d9003417 	ldw	r4,208(sp)
  805f14:	8c400044 	addi	r17,r17,1
  805f18:	10c7883a 	add	r3,r2,r3
  805f1c:	40800115 	stw	r2,4(r8)
  805f20:	41000015 	stw	r4,0(r8)
  805f24:	d8c02015 	stw	r3,128(sp)
  805f28:	dc401f15 	stw	r17,124(sp)
  805f2c:	008001c4 	movi	r2,7
  805f30:	14416916 	blt	r2,r17,8064d8 <___vfprintf_internal_r+0x160c>
  805f34:	45800204 	addi	r22,r8,8
  805f38:	d9003617 	ldw	r4,216(sp)
  805f3c:	d9403817 	ldw	r5,224(sp)
  805f40:	000d883a 	mov	r6,zero
  805f44:	000f883a 	mov	r7,zero
  805f48:	d8c03c15 	stw	r3,240(sp)
  805f4c:	08037040 	call	803704 <__eqdf2>
  805f50:	d8c03c17 	ldw	r3,240(sp)
  805f54:	1000bc26 	beq	r2,zero,806248 <___vfprintf_internal_r+0x137c>
  805f58:	d9403317 	ldw	r5,204(sp)
  805f5c:	84000044 	addi	r16,r16,1
  805f60:	8c400044 	addi	r17,r17,1
  805f64:	28bfffc4 	addi	r2,r5,-1
  805f68:	1887883a 	add	r3,r3,r2
  805f6c:	b0800115 	stw	r2,4(r22)
  805f70:	b4000015 	stw	r16,0(r22)
  805f74:	d8c02015 	stw	r3,128(sp)
  805f78:	dc401f15 	stw	r17,124(sp)
  805f7c:	008001c4 	movi	r2,7
  805f80:	14414316 	blt	r2,r17,806490 <___vfprintf_internal_r+0x15c4>
  805f84:	b5800204 	addi	r22,r22,8
  805f88:	d9003a17 	ldw	r4,232(sp)
  805f8c:	df0022c4 	addi	fp,sp,139
  805f90:	8c400044 	addi	r17,r17,1
  805f94:	20c7883a 	add	r3,r4,r3
  805f98:	b7000015 	stw	fp,0(r22)
  805f9c:	b1000115 	stw	r4,4(r22)
  805fa0:	d8c02015 	stw	r3,128(sp)
  805fa4:	dc401f15 	stw	r17,124(sp)
  805fa8:	008001c4 	movi	r2,7
  805fac:	14400e16 	blt	r2,r17,805fe8 <___vfprintf_internal_r+0x111c>
  805fb0:	b2000204 	addi	r8,r22,8
  805fb4:	003e3a06 	br	8058a0 <__alt_data_end+0xff8058a0>
  805fb8:	01002074 	movhi	r4,129
  805fbc:	21091384 	addi	r4,r4,9294
  805fc0:	d9002b15 	stw	r4,172(sp)
  805fc4:	d9002b17 	ldw	r4,172(sp)
  805fc8:	1c07883a 	add	r3,r3,r16
  805fcc:	44000115 	stw	r16,4(r8)
  805fd0:	41000015 	stw	r4,0(r8)
  805fd4:	10800044 	addi	r2,r2,1
  805fd8:	d8c02015 	stw	r3,128(sp)
  805fdc:	d8801f15 	stw	r2,124(sp)
  805fe0:	010001c4 	movi	r4,7
  805fe4:	20be2d0e 	bge	r4,r2,80589c <__alt_data_end+0xff80589c>
  805fe8:	d9002c17 	ldw	r4,176(sp)
  805fec:	d9801e04 	addi	r6,sp,120
  805ff0:	b80b883a 	mov	r5,r23
  805ff4:	080c4c80 	call	80c4c8 <__sprint_r>
  805ff8:	103cb61e 	bne	r2,zero,8052d4 <__alt_data_end+0xff8052d4>
  805ffc:	d8c02017 	ldw	r3,128(sp)
  806000:	da000404 	addi	r8,sp,16
  806004:	003e2606 	br	8058a0 <__alt_data_end+0xff8058a0>
  806008:	d9002c17 	ldw	r4,176(sp)
  80600c:	d9801e04 	addi	r6,sp,120
  806010:	b80b883a 	mov	r5,r23
  806014:	080c4c80 	call	80c4c8 <__sprint_r>
  806018:	103e5d26 	beq	r2,zero,805990 <__alt_data_end+0xff805990>
  80601c:	003cad06 	br	8052d4 <__alt_data_end+0xff8052d4>
  806020:	d9002c17 	ldw	r4,176(sp)
  806024:	d9801e04 	addi	r6,sp,120
  806028:	b80b883a 	mov	r5,r23
  80602c:	080c4c80 	call	80c4c8 <__sprint_r>
  806030:	103ca81e 	bne	r2,zero,8052d4 <__alt_data_end+0xff8052d4>
  806034:	d8c02017 	ldw	r3,128(sp)
  806038:	da000404 	addi	r8,sp,16
  80603c:	003e0b06 	br	80586c <__alt_data_end+0xff80586c>
  806040:	d9002c17 	ldw	r4,176(sp)
  806044:	d9801e04 	addi	r6,sp,120
  806048:	b80b883a 	mov	r5,r23
  80604c:	080c4c80 	call	80c4c8 <__sprint_r>
  806050:	103ca01e 	bne	r2,zero,8052d4 <__alt_data_end+0xff8052d4>
  806054:	d8c02017 	ldw	r3,128(sp)
  806058:	da000404 	addi	r8,sp,16
  80605c:	003dbd06 	br	805754 <__alt_data_end+0xff805754>
  806060:	d9002c17 	ldw	r4,176(sp)
  806064:	d9801e04 	addi	r6,sp,120
  806068:	b80b883a 	mov	r5,r23
  80606c:	080c4c80 	call	80c4c8 <__sprint_r>
  806070:	103c981e 	bne	r2,zero,8052d4 <__alt_data_end+0xff8052d4>
  806074:	d8c02017 	ldw	r3,128(sp)
  806078:	da000404 	addi	r8,sp,16
  80607c:	003dc306 	br	80578c <__alt_data_end+0xff80578c>
  806080:	d8802917 	ldw	r2,164(sp)
  806084:	d8002785 	stb	zero,158(sp)
  806088:	103f0616 	blt	r2,zero,805ca4 <__alt_data_end+0xff805ca4>
  80608c:	00ffdfc4 	movi	r3,-129
  806090:	9d84b03a 	or	r2,r19,r22
  806094:	90e4703a 	and	r18,r18,r3
  806098:	103c6b26 	beq	r2,zero,805248 <__alt_data_end+0xff805248>
  80609c:	0039883a 	mov	fp,zero
  8060a0:	003e7406 	br	805a74 <__alt_data_end+0xff805a74>
  8060a4:	9080040c 	andi	r2,r18,16
  8060a8:	1001b326 	beq	r2,zero,806778 <___vfprintf_internal_r+0x18ac>
  8060ac:	d9002d17 	ldw	r4,180(sp)
  8060b0:	d9402917 	ldw	r5,164(sp)
  8060b4:	d8002785 	stb	zero,158(sp)
  8060b8:	20800104 	addi	r2,r4,4
  8060bc:	24c00017 	ldw	r19,0(r4)
  8060c0:	002d883a 	mov	r22,zero
  8060c4:	2801b516 	blt	r5,zero,80679c <___vfprintf_internal_r+0x18d0>
  8060c8:	00ffdfc4 	movi	r3,-129
  8060cc:	d8802d15 	stw	r2,180(sp)
  8060d0:	90e4703a 	and	r18,r18,r3
  8060d4:	983d2726 	beq	r19,zero,805574 <__alt_data_end+0xff805574>
  8060d8:	0039883a 	mov	fp,zero
  8060dc:	003d2a06 	br	805588 <__alt_data_end+0xff805588>
  8060e0:	dc402617 	ldw	r17,152(sp)
  8060e4:	0441d30e 	bge	zero,r17,806834 <___vfprintf_internal_r+0x1968>
  8060e8:	dc403217 	ldw	r17,200(sp)
  8060ec:	d8803317 	ldw	r2,204(sp)
  8060f0:	1440010e 	bge	r2,r17,8060f8 <___vfprintf_internal_r+0x122c>
  8060f4:	1023883a 	mov	r17,r2
  8060f8:	04400a0e 	bge	zero,r17,806124 <___vfprintf_internal_r+0x1258>
  8060fc:	d8801f17 	ldw	r2,124(sp)
  806100:	1c47883a 	add	r3,r3,r17
  806104:	44000015 	stw	r16,0(r8)
  806108:	10800044 	addi	r2,r2,1
  80610c:	44400115 	stw	r17,4(r8)
  806110:	d8c02015 	stw	r3,128(sp)
  806114:	d8801f15 	stw	r2,124(sp)
  806118:	010001c4 	movi	r4,7
  80611c:	20826516 	blt	r4,r2,806ab4 <___vfprintf_internal_r+0x1be8>
  806120:	42000204 	addi	r8,r8,8
  806124:	88026116 	blt	r17,zero,806aac <___vfprintf_internal_r+0x1be0>
  806128:	d9003217 	ldw	r4,200(sp)
  80612c:	2463c83a 	sub	r17,r4,r17
  806130:	04407b0e 	bge	zero,r17,806320 <___vfprintf_internal_r+0x1454>
  806134:	05800404 	movi	r22,16
  806138:	d8801f17 	ldw	r2,124(sp)
  80613c:	b4419d0e 	bge	r22,r17,8067b4 <___vfprintf_internal_r+0x18e8>
  806140:	01002074 	movhi	r4,129
  806144:	21091384 	addi	r4,r4,9294
  806148:	d9002b15 	stw	r4,172(sp)
  80614c:	070001c4 	movi	fp,7
  806150:	dcc02c17 	ldw	r19,176(sp)
  806154:	00000306 	br	806164 <___vfprintf_internal_r+0x1298>
  806158:	42000204 	addi	r8,r8,8
  80615c:	8c7ffc04 	addi	r17,r17,-16
  806160:	b441970e 	bge	r22,r17,8067c0 <___vfprintf_internal_r+0x18f4>
  806164:	18c00404 	addi	r3,r3,16
  806168:	10800044 	addi	r2,r2,1
  80616c:	45000015 	stw	r20,0(r8)
  806170:	45800115 	stw	r22,4(r8)
  806174:	d8c02015 	stw	r3,128(sp)
  806178:	d8801f15 	stw	r2,124(sp)
  80617c:	e0bff60e 	bge	fp,r2,806158 <__alt_data_end+0xff806158>
  806180:	d9801e04 	addi	r6,sp,120
  806184:	b80b883a 	mov	r5,r23
  806188:	9809883a 	mov	r4,r19
  80618c:	080c4c80 	call	80c4c8 <__sprint_r>
  806190:	103c501e 	bne	r2,zero,8052d4 <__alt_data_end+0xff8052d4>
  806194:	d8c02017 	ldw	r3,128(sp)
  806198:	d8801f17 	ldw	r2,124(sp)
  80619c:	da000404 	addi	r8,sp,16
  8061a0:	003fee06 	br	80615c <__alt_data_end+0xff80615c>
  8061a4:	d9002c17 	ldw	r4,176(sp)
  8061a8:	d9801e04 	addi	r6,sp,120
  8061ac:	b80b883a 	mov	r5,r23
  8061b0:	080c4c80 	call	80c4c8 <__sprint_r>
  8061b4:	103c471e 	bne	r2,zero,8052d4 <__alt_data_end+0xff8052d4>
  8061b8:	d8c02017 	ldw	r3,128(sp)
  8061bc:	df002787 	ldb	fp,158(sp)
  8061c0:	da000404 	addi	r8,sp,16
  8061c4:	003d5606 	br	805720 <__alt_data_end+0xff805720>
  8061c8:	9080040c 	andi	r2,r18,16
  8061cc:	10016126 	beq	r2,zero,806754 <___vfprintf_internal_r+0x1888>
  8061d0:	d8802d17 	ldw	r2,180(sp)
  8061d4:	14c00017 	ldw	r19,0(r2)
  8061d8:	10800104 	addi	r2,r2,4
  8061dc:	d8802d15 	stw	r2,180(sp)
  8061e0:	982dd7fa 	srai	r22,r19,31
  8061e4:	b005883a 	mov	r2,r22
  8061e8:	003c8206 	br	8053f4 <__alt_data_end+0xff8053f4>
  8061ec:	9080040c 	andi	r2,r18,16
  8061f0:	10003526 	beq	r2,zero,8062c8 <___vfprintf_internal_r+0x13fc>
  8061f4:	d9402d17 	ldw	r5,180(sp)
  8061f8:	d8c02917 	ldw	r3,164(sp)
  8061fc:	d8002785 	stb	zero,158(sp)
  806200:	28800104 	addi	r2,r5,4
  806204:	2cc00017 	ldw	r19,0(r5)
  806208:	002d883a 	mov	r22,zero
  80620c:	18003716 	blt	r3,zero,8062ec <___vfprintf_internal_r+0x1420>
  806210:	00ffdfc4 	movi	r3,-129
  806214:	d8802d15 	stw	r2,180(sp)
  806218:	90e4703a 	and	r18,r18,r3
  80621c:	0039883a 	mov	fp,zero
  806220:	983df326 	beq	r19,zero,8059f0 <__alt_data_end+0xff8059f0>
  806224:	00800244 	movi	r2,9
  806228:	14fc7b36 	bltu	r2,r19,805418 <__alt_data_end+0xff805418>
  80622c:	d8c02817 	ldw	r3,160(sp)
  806230:	dc001dc4 	addi	r16,sp,119
  806234:	9cc00c04 	addi	r19,r19,48
  806238:	1c07c83a 	sub	r3,r3,r16
  80623c:	dcc01dc5 	stb	r19,119(sp)
  806240:	d8c02e15 	stw	r3,184(sp)
  806244:	003ce806 	br	8055e8 <__alt_data_end+0xff8055e8>
  806248:	d8803317 	ldw	r2,204(sp)
  80624c:	143fffc4 	addi	r16,r2,-1
  806250:	043f4d0e 	bge	zero,r16,805f88 <__alt_data_end+0xff805f88>
  806254:	07000404 	movi	fp,16
  806258:	e400810e 	bge	fp,r16,806460 <___vfprintf_internal_r+0x1594>
  80625c:	01402074 	movhi	r5,129
  806260:	29491384 	addi	r5,r5,9294
  806264:	d9402b15 	stw	r5,172(sp)
  806268:	01c001c4 	movi	r7,7
  80626c:	dcc02c17 	ldw	r19,176(sp)
  806270:	00000306 	br	806280 <___vfprintf_internal_r+0x13b4>
  806274:	b5800204 	addi	r22,r22,8
  806278:	843ffc04 	addi	r16,r16,-16
  80627c:	e4007b0e 	bge	fp,r16,80646c <___vfprintf_internal_r+0x15a0>
  806280:	18c00404 	addi	r3,r3,16
  806284:	8c400044 	addi	r17,r17,1
  806288:	b5000015 	stw	r20,0(r22)
  80628c:	b7000115 	stw	fp,4(r22)
  806290:	d8c02015 	stw	r3,128(sp)
  806294:	dc401f15 	stw	r17,124(sp)
  806298:	3c7ff60e 	bge	r7,r17,806274 <__alt_data_end+0xff806274>
  80629c:	d9801e04 	addi	r6,sp,120
  8062a0:	b80b883a 	mov	r5,r23
  8062a4:	9809883a 	mov	r4,r19
  8062a8:	d9c03c15 	stw	r7,240(sp)
  8062ac:	080c4c80 	call	80c4c8 <__sprint_r>
  8062b0:	d9c03c17 	ldw	r7,240(sp)
  8062b4:	103c071e 	bne	r2,zero,8052d4 <__alt_data_end+0xff8052d4>
  8062b8:	d8c02017 	ldw	r3,128(sp)
  8062bc:	dc401f17 	ldw	r17,124(sp)
  8062c0:	dd800404 	addi	r22,sp,16
  8062c4:	003fec06 	br	806278 <__alt_data_end+0xff806278>
  8062c8:	9080100c 	andi	r2,r18,64
  8062cc:	d8002785 	stb	zero,158(sp)
  8062d0:	10010e26 	beq	r2,zero,80670c <___vfprintf_internal_r+0x1840>
  8062d4:	d9002d17 	ldw	r4,180(sp)
  8062d8:	d9402917 	ldw	r5,164(sp)
  8062dc:	002d883a 	mov	r22,zero
  8062e0:	20800104 	addi	r2,r4,4
  8062e4:	24c0000b 	ldhu	r19,0(r4)
  8062e8:	283fc90e 	bge	r5,zero,806210 <__alt_data_end+0xff806210>
  8062ec:	d8802d15 	stw	r2,180(sp)
  8062f0:	0039883a 	mov	fp,zero
  8062f4:	9d84b03a 	or	r2,r19,r22
  8062f8:	103c461e 	bne	r2,zero,805414 <__alt_data_end+0xff805414>
  8062fc:	00800044 	movi	r2,1
  806300:	003e6c06 	br	805cb4 <__alt_data_end+0xff805cb4>
  806304:	d9002c17 	ldw	r4,176(sp)
  806308:	d9801e04 	addi	r6,sp,120
  80630c:	b80b883a 	mov	r5,r23
  806310:	080c4c80 	call	80c4c8 <__sprint_r>
  806314:	103bef1e 	bne	r2,zero,8052d4 <__alt_data_end+0xff8052d4>
  806318:	d8c02017 	ldw	r3,128(sp)
  80631c:	da000404 	addi	r8,sp,16
  806320:	d9003217 	ldw	r4,200(sp)
  806324:	d8802617 	ldw	r2,152(sp)
  806328:	d9403317 	ldw	r5,204(sp)
  80632c:	8123883a 	add	r17,r16,r4
  806330:	11400216 	blt	r2,r5,80633c <___vfprintf_internal_r+0x1470>
  806334:	9100004c 	andi	r4,r18,1
  806338:	20000d26 	beq	r4,zero,806370 <___vfprintf_internal_r+0x14a4>
  80633c:	d9003717 	ldw	r4,220(sp)
  806340:	d9403417 	ldw	r5,208(sp)
  806344:	1907883a 	add	r3,r3,r4
  806348:	d9001f17 	ldw	r4,124(sp)
  80634c:	41400015 	stw	r5,0(r8)
  806350:	d9403717 	ldw	r5,220(sp)
  806354:	21000044 	addi	r4,r4,1
  806358:	d8c02015 	stw	r3,128(sp)
  80635c:	41400115 	stw	r5,4(r8)
  806360:	d9001f15 	stw	r4,124(sp)
  806364:	014001c4 	movi	r5,7
  806368:	2901e816 	blt	r5,r4,806b0c <___vfprintf_internal_r+0x1c40>
  80636c:	42000204 	addi	r8,r8,8
  806370:	d9003317 	ldw	r4,204(sp)
  806374:	8121883a 	add	r16,r16,r4
  806378:	2085c83a 	sub	r2,r4,r2
  80637c:	8461c83a 	sub	r16,r16,r17
  806380:	1400010e 	bge	r2,r16,806388 <___vfprintf_internal_r+0x14bc>
  806384:	1021883a 	mov	r16,r2
  806388:	04000a0e 	bge	zero,r16,8063b4 <___vfprintf_internal_r+0x14e8>
  80638c:	d9001f17 	ldw	r4,124(sp)
  806390:	1c07883a 	add	r3,r3,r16
  806394:	44400015 	stw	r17,0(r8)
  806398:	21000044 	addi	r4,r4,1
  80639c:	44000115 	stw	r16,4(r8)
  8063a0:	d8c02015 	stw	r3,128(sp)
  8063a4:	d9001f15 	stw	r4,124(sp)
  8063a8:	014001c4 	movi	r5,7
  8063ac:	2901fb16 	blt	r5,r4,806b9c <___vfprintf_internal_r+0x1cd0>
  8063b0:	42000204 	addi	r8,r8,8
  8063b4:	8001f716 	blt	r16,zero,806b94 <___vfprintf_internal_r+0x1cc8>
  8063b8:	1421c83a 	sub	r16,r2,r16
  8063bc:	043d380e 	bge	zero,r16,8058a0 <__alt_data_end+0xff8058a0>
  8063c0:	04400404 	movi	r17,16
  8063c4:	d8801f17 	ldw	r2,124(sp)
  8063c8:	8c3efb0e 	bge	r17,r16,805fb8 <__alt_data_end+0xff805fb8>
  8063cc:	01402074 	movhi	r5,129
  8063d0:	29491384 	addi	r5,r5,9294
  8063d4:	d9402b15 	stw	r5,172(sp)
  8063d8:	058001c4 	movi	r22,7
  8063dc:	dcc02c17 	ldw	r19,176(sp)
  8063e0:	00000306 	br	8063f0 <___vfprintf_internal_r+0x1524>
  8063e4:	42000204 	addi	r8,r8,8
  8063e8:	843ffc04 	addi	r16,r16,-16
  8063ec:	8c3ef50e 	bge	r17,r16,805fc4 <__alt_data_end+0xff805fc4>
  8063f0:	18c00404 	addi	r3,r3,16
  8063f4:	10800044 	addi	r2,r2,1
  8063f8:	45000015 	stw	r20,0(r8)
  8063fc:	44400115 	stw	r17,4(r8)
  806400:	d8c02015 	stw	r3,128(sp)
  806404:	d8801f15 	stw	r2,124(sp)
  806408:	b0bff60e 	bge	r22,r2,8063e4 <__alt_data_end+0xff8063e4>
  80640c:	d9801e04 	addi	r6,sp,120
  806410:	b80b883a 	mov	r5,r23
  806414:	9809883a 	mov	r4,r19
  806418:	080c4c80 	call	80c4c8 <__sprint_r>
  80641c:	103bad1e 	bne	r2,zero,8052d4 <__alt_data_end+0xff8052d4>
  806420:	d8c02017 	ldw	r3,128(sp)
  806424:	d8801f17 	ldw	r2,124(sp)
  806428:	da000404 	addi	r8,sp,16
  80642c:	003fee06 	br	8063e8 <__alt_data_end+0xff8063e8>
  806430:	9088703a 	and	r4,r18,r2
  806434:	203eab1e 	bne	r4,zero,805ee4 <__alt_data_end+0xff805ee4>
  806438:	dc401f17 	ldw	r17,124(sp)
  80643c:	40800115 	stw	r2,4(r8)
  806440:	44000015 	stw	r16,0(r8)
  806444:	8c400044 	addi	r17,r17,1
  806448:	d8c02015 	stw	r3,128(sp)
  80644c:	dc401f15 	stw	r17,124(sp)
  806450:	008001c4 	movi	r2,7
  806454:	14400e16 	blt	r2,r17,806490 <___vfprintf_internal_r+0x15c4>
  806458:	45800204 	addi	r22,r8,8
  80645c:	003eca06 	br	805f88 <__alt_data_end+0xff805f88>
  806460:	01002074 	movhi	r4,129
  806464:	21091384 	addi	r4,r4,9294
  806468:	d9002b15 	stw	r4,172(sp)
  80646c:	d8802b17 	ldw	r2,172(sp)
  806470:	1c07883a 	add	r3,r3,r16
  806474:	8c400044 	addi	r17,r17,1
  806478:	b0800015 	stw	r2,0(r22)
  80647c:	b4000115 	stw	r16,4(r22)
  806480:	d8c02015 	stw	r3,128(sp)
  806484:	dc401f15 	stw	r17,124(sp)
  806488:	008001c4 	movi	r2,7
  80648c:	147ebd0e 	bge	r2,r17,805f84 <__alt_data_end+0xff805f84>
  806490:	d9002c17 	ldw	r4,176(sp)
  806494:	d9801e04 	addi	r6,sp,120
  806498:	b80b883a 	mov	r5,r23
  80649c:	080c4c80 	call	80c4c8 <__sprint_r>
  8064a0:	103b8c1e 	bne	r2,zero,8052d4 <__alt_data_end+0xff8052d4>
  8064a4:	d8c02017 	ldw	r3,128(sp)
  8064a8:	dc401f17 	ldw	r17,124(sp)
  8064ac:	dd800404 	addi	r22,sp,16
  8064b0:	003eb506 	br	805f88 <__alt_data_end+0xff805f88>
  8064b4:	d9002c17 	ldw	r4,176(sp)
  8064b8:	d9801e04 	addi	r6,sp,120
  8064bc:	b80b883a 	mov	r5,r23
  8064c0:	080c4c80 	call	80c4c8 <__sprint_r>
  8064c4:	103b831e 	bne	r2,zero,8052d4 <__alt_data_end+0xff8052d4>
  8064c8:	d8c02017 	ldw	r3,128(sp)
  8064cc:	dc401f17 	ldw	r17,124(sp)
  8064d0:	da000404 	addi	r8,sp,16
  8064d4:	003e8d06 	br	805f0c <__alt_data_end+0xff805f0c>
  8064d8:	d9002c17 	ldw	r4,176(sp)
  8064dc:	d9801e04 	addi	r6,sp,120
  8064e0:	b80b883a 	mov	r5,r23
  8064e4:	080c4c80 	call	80c4c8 <__sprint_r>
  8064e8:	103b7a1e 	bne	r2,zero,8052d4 <__alt_data_end+0xff8052d4>
  8064ec:	d8c02017 	ldw	r3,128(sp)
  8064f0:	dc401f17 	ldw	r17,124(sp)
  8064f4:	dd800404 	addi	r22,sp,16
  8064f8:	003e8f06 	br	805f38 <__alt_data_end+0xff805f38>
  8064fc:	0027883a 	mov	r19,zero
  806500:	003f4a06 	br	80622c <__alt_data_end+0xff80622c>
  806504:	d9002c17 	ldw	r4,176(sp)
  806508:	d9801e04 	addi	r6,sp,120
  80650c:	b80b883a 	mov	r5,r23
  806510:	080c4c80 	call	80c4c8 <__sprint_r>
  806514:	103b6f1e 	bne	r2,zero,8052d4 <__alt_data_end+0xff8052d4>
  806518:	d8c02017 	ldw	r3,128(sp)
  80651c:	da000404 	addi	r8,sp,16
  806520:	003c9d06 	br	805798 <__alt_data_end+0xff805798>
  806524:	04e7c83a 	sub	r19,zero,r19
  806528:	9804c03a 	cmpne	r2,r19,zero
  80652c:	05adc83a 	sub	r22,zero,r22
  806530:	b0adc83a 	sub	r22,r22,r2
  806534:	d8802917 	ldw	r2,164(sp)
  806538:	07000b44 	movi	fp,45
  80653c:	df002785 	stb	fp,158(sp)
  806540:	10017b16 	blt	r2,zero,806b30 <___vfprintf_internal_r+0x1c64>
  806544:	00bfdfc4 	movi	r2,-129
  806548:	90a4703a 	and	r18,r18,r2
  80654c:	003bb106 	br	805414 <__alt_data_end+0xff805414>
  806550:	d9003617 	ldw	r4,216(sp)
  806554:	d9403817 	ldw	r5,224(sp)
  806558:	da003d15 	stw	r8,244(sp)
  80655c:	080c0ec0 	call	80c0ec <__fpclassifyd>
  806560:	da003d17 	ldw	r8,244(sp)
  806564:	1000f026 	beq	r2,zero,806928 <___vfprintf_internal_r+0x1a5c>
  806568:	d9002917 	ldw	r4,164(sp)
  80656c:	05bff7c4 	movi	r22,-33
  806570:	00bfffc4 	movi	r2,-1
  806574:	8dac703a 	and	r22,r17,r22
  806578:	20820026 	beq	r4,r2,806d7c <___vfprintf_internal_r+0x1eb0>
  80657c:	008011c4 	movi	r2,71
  806580:	b081f726 	beq	r22,r2,806d60 <___vfprintf_internal_r+0x1e94>
  806584:	d9003817 	ldw	r4,224(sp)
  806588:	90c04014 	ori	r3,r18,256
  80658c:	d8c02b15 	stw	r3,172(sp)
  806590:	20021516 	blt	r4,zero,806de8 <___vfprintf_internal_r+0x1f1c>
  806594:	dcc03817 	ldw	r19,224(sp)
  806598:	d8002a05 	stb	zero,168(sp)
  80659c:	00801984 	movi	r2,102
  8065a0:	8881f926 	beq	r17,r2,806d88 <___vfprintf_internal_r+0x1ebc>
  8065a4:	00801184 	movi	r2,70
  8065a8:	88821c26 	beq	r17,r2,806e1c <___vfprintf_internal_r+0x1f50>
  8065ac:	00801144 	movi	r2,69
  8065b0:	b081ef26 	beq	r22,r2,806d70 <___vfprintf_internal_r+0x1ea4>
  8065b4:	d8c02917 	ldw	r3,164(sp)
  8065b8:	d8802104 	addi	r2,sp,132
  8065bc:	d8800315 	stw	r2,12(sp)
  8065c0:	d9403617 	ldw	r5,216(sp)
  8065c4:	d8802504 	addi	r2,sp,148
  8065c8:	d9002c17 	ldw	r4,176(sp)
  8065cc:	d8800215 	stw	r2,8(sp)
  8065d0:	d8802604 	addi	r2,sp,152
  8065d4:	d8c00015 	stw	r3,0(sp)
  8065d8:	d8800115 	stw	r2,4(sp)
  8065dc:	01c00084 	movi	r7,2
  8065e0:	980d883a 	mov	r6,r19
  8065e4:	d8c03c15 	stw	r3,240(sp)
  8065e8:	da003d15 	stw	r8,244(sp)
  8065ec:	08074f00 	call	8074f0 <_dtoa_r>
  8065f0:	1021883a 	mov	r16,r2
  8065f4:	008019c4 	movi	r2,103
  8065f8:	d8c03c17 	ldw	r3,240(sp)
  8065fc:	da003d17 	ldw	r8,244(sp)
  806600:	88817126 	beq	r17,r2,806bc8 <___vfprintf_internal_r+0x1cfc>
  806604:	008011c4 	movi	r2,71
  806608:	88829226 	beq	r17,r2,807054 <___vfprintf_internal_r+0x2188>
  80660c:	80f9883a 	add	fp,r16,r3
  806610:	d9003617 	ldw	r4,216(sp)
  806614:	000d883a 	mov	r6,zero
  806618:	000f883a 	mov	r7,zero
  80661c:	980b883a 	mov	r5,r19
  806620:	da003d15 	stw	r8,244(sp)
  806624:	08037040 	call	803704 <__eqdf2>
  806628:	da003d17 	ldw	r8,244(sp)
  80662c:	10018d26 	beq	r2,zero,806c64 <___vfprintf_internal_r+0x1d98>
  806630:	d8802117 	ldw	r2,132(sp)
  806634:	1700062e 	bgeu	r2,fp,806650 <___vfprintf_internal_r+0x1784>
  806638:	01000c04 	movi	r4,48
  80663c:	10c00044 	addi	r3,r2,1
  806640:	d8c02115 	stw	r3,132(sp)
  806644:	11000005 	stb	r4,0(r2)
  806648:	d8802117 	ldw	r2,132(sp)
  80664c:	173ffb36 	bltu	r2,fp,80663c <__alt_data_end+0xff80663c>
  806650:	1405c83a 	sub	r2,r2,r16
  806654:	d8803315 	stw	r2,204(sp)
  806658:	008011c4 	movi	r2,71
  80665c:	b0817626 	beq	r22,r2,806c38 <___vfprintf_internal_r+0x1d6c>
  806660:	00801944 	movi	r2,101
  806664:	1442810e 	bge	r2,r17,80706c <___vfprintf_internal_r+0x21a0>
  806668:	d8c02617 	ldw	r3,152(sp)
  80666c:	00801984 	movi	r2,102
  806670:	d8c03215 	stw	r3,200(sp)
  806674:	8881fe26 	beq	r17,r2,806e70 <___vfprintf_internal_r+0x1fa4>
  806678:	d8c03217 	ldw	r3,200(sp)
  80667c:	d9003317 	ldw	r4,204(sp)
  806680:	1901dd16 	blt	r3,r4,806df8 <___vfprintf_internal_r+0x1f2c>
  806684:	9480004c 	andi	r18,r18,1
  806688:	90022b1e 	bne	r18,zero,806f38 <___vfprintf_internal_r+0x206c>
  80668c:	1805883a 	mov	r2,r3
  806690:	18028016 	blt	r3,zero,807094 <___vfprintf_internal_r+0x21c8>
  806694:	d8c03217 	ldw	r3,200(sp)
  806698:	044019c4 	movi	r17,103
  80669c:	d8c02e15 	stw	r3,184(sp)
  8066a0:	df002a07 	ldb	fp,168(sp)
  8066a4:	e001531e 	bne	fp,zero,806bf4 <___vfprintf_internal_r+0x1d28>
  8066a8:	df002783 	ldbu	fp,158(sp)
  8066ac:	d8802a15 	stw	r2,168(sp)
  8066b0:	dc802b17 	ldw	r18,172(sp)
  8066b4:	d8002915 	stw	zero,164(sp)
  8066b8:	003bd106 	br	805600 <__alt_data_end+0xff805600>
  8066bc:	d8802d17 	ldw	r2,180(sp)
  8066c0:	d8c02d17 	ldw	r3,180(sp)
  8066c4:	d9002d17 	ldw	r4,180(sp)
  8066c8:	10800017 	ldw	r2,0(r2)
  8066cc:	18c00117 	ldw	r3,4(r3)
  8066d0:	21000204 	addi	r4,r4,8
  8066d4:	d8803615 	stw	r2,216(sp)
  8066d8:	d8c03815 	stw	r3,224(sp)
  8066dc:	d9002d15 	stw	r4,180(sp)
  8066e0:	003b7506 	br	8054b8 <__alt_data_end+0xff8054b8>
  8066e4:	ac400007 	ldb	r17,0(r21)
  8066e8:	003a5906 	br	805050 <__alt_data_end+0xff805050>
  8066ec:	9080100c 	andi	r2,r18,64
  8066f0:	1000a826 	beq	r2,zero,806994 <___vfprintf_internal_r+0x1ac8>
  8066f4:	d9002d17 	ldw	r4,180(sp)
  8066f8:	002d883a 	mov	r22,zero
  8066fc:	24c0000b 	ldhu	r19,0(r4)
  806700:	21000104 	addi	r4,r4,4
  806704:	d9002d15 	stw	r4,180(sp)
  806708:	003ccb06 	br	805a38 <__alt_data_end+0xff805a38>
  80670c:	d8c02d17 	ldw	r3,180(sp)
  806710:	d9002917 	ldw	r4,164(sp)
  806714:	002d883a 	mov	r22,zero
  806718:	18800104 	addi	r2,r3,4
  80671c:	1cc00017 	ldw	r19,0(r3)
  806720:	203ebb0e 	bge	r4,zero,806210 <__alt_data_end+0xff806210>
  806724:	003ef106 	br	8062ec <__alt_data_end+0xff8062ec>
  806728:	9080040c 	andi	r2,r18,16
  80672c:	1000921e 	bne	r2,zero,806978 <___vfprintf_internal_r+0x1aac>
  806730:	9480100c 	andi	r18,r18,64
  806734:	90013926 	beq	r18,zero,806c1c <___vfprintf_internal_r+0x1d50>
  806738:	d9002d17 	ldw	r4,180(sp)
  80673c:	d9402f17 	ldw	r5,188(sp)
  806740:	20800017 	ldw	r2,0(r4)
  806744:	21000104 	addi	r4,r4,4
  806748:	d9002d15 	stw	r4,180(sp)
  80674c:	1140000d 	sth	r5,0(r2)
  806750:	003a1606 	br	804fac <__alt_data_end+0xff804fac>
  806754:	9080100c 	andi	r2,r18,64
  806758:	10008026 	beq	r2,zero,80695c <___vfprintf_internal_r+0x1a90>
  80675c:	d8c02d17 	ldw	r3,180(sp)
  806760:	1cc0000f 	ldh	r19,0(r3)
  806764:	18c00104 	addi	r3,r3,4
  806768:	d8c02d15 	stw	r3,180(sp)
  80676c:	982dd7fa 	srai	r22,r19,31
  806770:	b005883a 	mov	r2,r22
  806774:	003b1f06 	br	8053f4 <__alt_data_end+0xff8053f4>
  806778:	9080100c 	andi	r2,r18,64
  80677c:	d8002785 	stb	zero,158(sp)
  806780:	10008a1e 	bne	r2,zero,8069ac <___vfprintf_internal_r+0x1ae0>
  806784:	d9402d17 	ldw	r5,180(sp)
  806788:	d8c02917 	ldw	r3,164(sp)
  80678c:	002d883a 	mov	r22,zero
  806790:	28800104 	addi	r2,r5,4
  806794:	2cc00017 	ldw	r19,0(r5)
  806798:	183e4b0e 	bge	r3,zero,8060c8 <__alt_data_end+0xff8060c8>
  80679c:	9d86b03a 	or	r3,r19,r22
  8067a0:	d8802d15 	stw	r2,180(sp)
  8067a4:	183e4c1e 	bne	r3,zero,8060d8 <__alt_data_end+0xff8060d8>
  8067a8:	0039883a 	mov	fp,zero
  8067ac:	0005883a 	mov	r2,zero
  8067b0:	003d4006 	br	805cb4 <__alt_data_end+0xff805cb4>
  8067b4:	01402074 	movhi	r5,129
  8067b8:	29491384 	addi	r5,r5,9294
  8067bc:	d9402b15 	stw	r5,172(sp)
  8067c0:	d9402b17 	ldw	r5,172(sp)
  8067c4:	1c47883a 	add	r3,r3,r17
  8067c8:	10800044 	addi	r2,r2,1
  8067cc:	41400015 	stw	r5,0(r8)
  8067d0:	44400115 	stw	r17,4(r8)
  8067d4:	d8c02015 	stw	r3,128(sp)
  8067d8:	d8801f15 	stw	r2,124(sp)
  8067dc:	010001c4 	movi	r4,7
  8067e0:	20bec816 	blt	r4,r2,806304 <__alt_data_end+0xff806304>
  8067e4:	42000204 	addi	r8,r8,8
  8067e8:	003ecd06 	br	806320 <__alt_data_end+0xff806320>
  8067ec:	d9002917 	ldw	r4,164(sp)
  8067f0:	d8002785 	stb	zero,158(sp)
  8067f4:	203d2d16 	blt	r4,zero,805cac <__alt_data_end+0xff805cac>
  8067f8:	00bfdfc4 	movi	r2,-129
  8067fc:	90a4703a 	and	r18,r18,r2
  806800:	003a9106 	br	805248 <__alt_data_end+0xff805248>
  806804:	01002074 	movhi	r4,129
  806808:	21091384 	addi	r4,r4,9294
  80680c:	d9002b15 	stw	r4,172(sp)
  806810:	003c0c06 	br	805844 <__alt_data_end+0xff805844>
  806814:	d9002c17 	ldw	r4,176(sp)
  806818:	d9801e04 	addi	r6,sp,120
  80681c:	b80b883a 	mov	r5,r23
  806820:	080c4c80 	call	80c4c8 <__sprint_r>
  806824:	103aab1e 	bne	r2,zero,8052d4 <__alt_data_end+0xff8052d4>
  806828:	d8c02017 	ldw	r3,128(sp)
  80682c:	da000404 	addi	r8,sp,16
  806830:	003d4106 	br	805d38 <__alt_data_end+0xff805d38>
  806834:	d8801f17 	ldw	r2,124(sp)
  806838:	01402074 	movhi	r5,129
  80683c:	01000044 	movi	r4,1
  806840:	18c00044 	addi	r3,r3,1
  806844:	10800044 	addi	r2,r2,1
  806848:	29491304 	addi	r5,r5,9292
  80684c:	41000115 	stw	r4,4(r8)
  806850:	41400015 	stw	r5,0(r8)
  806854:	d8c02015 	stw	r3,128(sp)
  806858:	d8801f15 	stw	r2,124(sp)
  80685c:	010001c4 	movi	r4,7
  806860:	20805c16 	blt	r4,r2,8069d4 <___vfprintf_internal_r+0x1b08>
  806864:	42000204 	addi	r8,r8,8
  806868:	8800041e 	bne	r17,zero,80687c <___vfprintf_internal_r+0x19b0>
  80686c:	d8803317 	ldw	r2,204(sp)
  806870:	1000021e 	bne	r2,zero,80687c <___vfprintf_internal_r+0x19b0>
  806874:	9080004c 	andi	r2,r18,1
  806878:	103c0926 	beq	r2,zero,8058a0 <__alt_data_end+0xff8058a0>
  80687c:	d9003717 	ldw	r4,220(sp)
  806880:	d8801f17 	ldw	r2,124(sp)
  806884:	d9403417 	ldw	r5,208(sp)
  806888:	20c7883a 	add	r3,r4,r3
  80688c:	10800044 	addi	r2,r2,1
  806890:	41000115 	stw	r4,4(r8)
  806894:	41400015 	stw	r5,0(r8)
  806898:	d8c02015 	stw	r3,128(sp)
  80689c:	d8801f15 	stw	r2,124(sp)
  8068a0:	010001c4 	movi	r4,7
  8068a4:	20812116 	blt	r4,r2,806d2c <___vfprintf_internal_r+0x1e60>
  8068a8:	42000204 	addi	r8,r8,8
  8068ac:	0463c83a 	sub	r17,zero,r17
  8068b0:	0440730e 	bge	zero,r17,806a80 <___vfprintf_internal_r+0x1bb4>
  8068b4:	05800404 	movi	r22,16
  8068b8:	b440860e 	bge	r22,r17,806ad4 <___vfprintf_internal_r+0x1c08>
  8068bc:	01402074 	movhi	r5,129
  8068c0:	29491384 	addi	r5,r5,9294
  8068c4:	d9402b15 	stw	r5,172(sp)
  8068c8:	070001c4 	movi	fp,7
  8068cc:	dcc02c17 	ldw	r19,176(sp)
  8068d0:	00000306 	br	8068e0 <___vfprintf_internal_r+0x1a14>
  8068d4:	42000204 	addi	r8,r8,8
  8068d8:	8c7ffc04 	addi	r17,r17,-16
  8068dc:	b440800e 	bge	r22,r17,806ae0 <___vfprintf_internal_r+0x1c14>
  8068e0:	18c00404 	addi	r3,r3,16
  8068e4:	10800044 	addi	r2,r2,1
  8068e8:	45000015 	stw	r20,0(r8)
  8068ec:	45800115 	stw	r22,4(r8)
  8068f0:	d8c02015 	stw	r3,128(sp)
  8068f4:	d8801f15 	stw	r2,124(sp)
  8068f8:	e0bff60e 	bge	fp,r2,8068d4 <__alt_data_end+0xff8068d4>
  8068fc:	d9801e04 	addi	r6,sp,120
  806900:	b80b883a 	mov	r5,r23
  806904:	9809883a 	mov	r4,r19
  806908:	080c4c80 	call	80c4c8 <__sprint_r>
  80690c:	103a711e 	bne	r2,zero,8052d4 <__alt_data_end+0xff8052d4>
  806910:	d8c02017 	ldw	r3,128(sp)
  806914:	d8801f17 	ldw	r2,124(sp)
  806918:	da000404 	addi	r8,sp,16
  80691c:	003fee06 	br	8068d8 <__alt_data_end+0xff8068d8>
  806920:	00bfffc4 	movi	r2,-1
  806924:	003a6f06 	br	8052e4 <__alt_data_end+0xff8052e4>
  806928:	008011c4 	movi	r2,71
  80692c:	1440b816 	blt	r2,r17,806c10 <___vfprintf_internal_r+0x1d44>
  806930:	04002074 	movhi	r16,129
  806934:	84090504 	addi	r16,r16,9236
  806938:	00c000c4 	movi	r3,3
  80693c:	00bfdfc4 	movi	r2,-129
  806940:	d8c02a15 	stw	r3,168(sp)
  806944:	90a4703a 	and	r18,r18,r2
  806948:	df002783 	ldbu	fp,158(sp)
  80694c:	d8c02e15 	stw	r3,184(sp)
  806950:	d8002915 	stw	zero,164(sp)
  806954:	d8003215 	stw	zero,200(sp)
  806958:	003b2906 	br	805600 <__alt_data_end+0xff805600>
  80695c:	d9002d17 	ldw	r4,180(sp)
  806960:	24c00017 	ldw	r19,0(r4)
  806964:	21000104 	addi	r4,r4,4
  806968:	d9002d15 	stw	r4,180(sp)
  80696c:	982dd7fa 	srai	r22,r19,31
  806970:	b005883a 	mov	r2,r22
  806974:	003a9f06 	br	8053f4 <__alt_data_end+0xff8053f4>
  806978:	d9402d17 	ldw	r5,180(sp)
  80697c:	d8c02f17 	ldw	r3,188(sp)
  806980:	28800017 	ldw	r2,0(r5)
  806984:	29400104 	addi	r5,r5,4
  806988:	d9402d15 	stw	r5,180(sp)
  80698c:	10c00015 	stw	r3,0(r2)
  806990:	00398606 	br	804fac <__alt_data_end+0xff804fac>
  806994:	d9402d17 	ldw	r5,180(sp)
  806998:	002d883a 	mov	r22,zero
  80699c:	2cc00017 	ldw	r19,0(r5)
  8069a0:	29400104 	addi	r5,r5,4
  8069a4:	d9402d15 	stw	r5,180(sp)
  8069a8:	003c2306 	br	805a38 <__alt_data_end+0xff805a38>
  8069ac:	d8c02d17 	ldw	r3,180(sp)
  8069b0:	d9002917 	ldw	r4,164(sp)
  8069b4:	002d883a 	mov	r22,zero
  8069b8:	18800104 	addi	r2,r3,4
  8069bc:	1cc0000b 	ldhu	r19,0(r3)
  8069c0:	203dc10e 	bge	r4,zero,8060c8 <__alt_data_end+0xff8060c8>
  8069c4:	003f7506 	br	80679c <__alt_data_end+0xff80679c>
  8069c8:	04002074 	movhi	r16,129
  8069cc:	84090304 	addi	r16,r16,9228
  8069d0:	003acc06 	br	805504 <__alt_data_end+0xff805504>
  8069d4:	d9002c17 	ldw	r4,176(sp)
  8069d8:	d9801e04 	addi	r6,sp,120
  8069dc:	b80b883a 	mov	r5,r23
  8069e0:	080c4c80 	call	80c4c8 <__sprint_r>
  8069e4:	103a3b1e 	bne	r2,zero,8052d4 <__alt_data_end+0xff8052d4>
  8069e8:	dc402617 	ldw	r17,152(sp)
  8069ec:	d8c02017 	ldw	r3,128(sp)
  8069f0:	da000404 	addi	r8,sp,16
  8069f4:	003f9c06 	br	806868 <__alt_data_end+0xff806868>
  8069f8:	ac400043 	ldbu	r17,1(r21)
  8069fc:	94800814 	ori	r18,r18,32
  806a00:	ad400044 	addi	r21,r21,1
  806a04:	8c403fcc 	andi	r17,r17,255
  806a08:	8c40201c 	xori	r17,r17,128
  806a0c:	8c7fe004 	addi	r17,r17,-128
  806a10:	00398f06 	br	805050 <__alt_data_end+0xff805050>
  806a14:	d8c02d15 	stw	r3,180(sp)
  806a18:	0039883a 	mov	fp,zero
  806a1c:	003e3506 	br	8062f4 <__alt_data_end+0xff8062f4>
  806a20:	d9002c17 	ldw	r4,176(sp)
  806a24:	d9801e04 	addi	r6,sp,120
  806a28:	b80b883a 	mov	r5,r23
  806a2c:	080c4c80 	call	80c4c8 <__sprint_r>
  806a30:	103a281e 	bne	r2,zero,8052d4 <__alt_data_end+0xff8052d4>
  806a34:	d8c02017 	ldw	r3,128(sp)
  806a38:	da000404 	addi	r8,sp,16
  806a3c:	003cd006 	br	805d80 <__alt_data_end+0xff805d80>
  806a40:	8009883a 	mov	r4,r16
  806a44:	da003d15 	stw	r8,244(sp)
  806a48:	0804e340 	call	804e34 <strlen>
  806a4c:	d8802e15 	stw	r2,184(sp)
  806a50:	da003d17 	ldw	r8,244(sp)
  806a54:	103c340e 	bge	r2,zero,805b28 <__alt_data_end+0xff805b28>
  806a58:	0005883a 	mov	r2,zero
  806a5c:	003c3206 	br	805b28 <__alt_data_end+0xff805b28>
  806a60:	d9002c17 	ldw	r4,176(sp)
  806a64:	d9801e04 	addi	r6,sp,120
  806a68:	b80b883a 	mov	r5,r23
  806a6c:	080c4c80 	call	80c4c8 <__sprint_r>
  806a70:	103a181e 	bne	r2,zero,8052d4 <__alt_data_end+0xff8052d4>
  806a74:	d8c02017 	ldw	r3,128(sp)
  806a78:	d8801f17 	ldw	r2,124(sp)
  806a7c:	da000404 	addi	r8,sp,16
  806a80:	d9403317 	ldw	r5,204(sp)
  806a84:	10800044 	addi	r2,r2,1
  806a88:	44000015 	stw	r16,0(r8)
  806a8c:	28c7883a 	add	r3,r5,r3
  806a90:	003b7d06 	br	805888 <__alt_data_end+0xff805888>
  806a94:	01002074 	movhi	r4,129
  806a98:	21091784 	addi	r4,r4,9310
  806a9c:	d9003515 	stw	r4,212(sp)
  806aa0:	003b1406 	br	8056f4 <__alt_data_end+0xff8056f4>
  806aa4:	013fffc4 	movi	r4,-1
  806aa8:	003a3506 	br	805380 <__alt_data_end+0xff805380>
  806aac:	0023883a 	mov	r17,zero
  806ab0:	003d9d06 	br	806128 <__alt_data_end+0xff806128>
  806ab4:	d9002c17 	ldw	r4,176(sp)
  806ab8:	d9801e04 	addi	r6,sp,120
  806abc:	b80b883a 	mov	r5,r23
  806ac0:	080c4c80 	call	80c4c8 <__sprint_r>
  806ac4:	103a031e 	bne	r2,zero,8052d4 <__alt_data_end+0xff8052d4>
  806ac8:	d8c02017 	ldw	r3,128(sp)
  806acc:	da000404 	addi	r8,sp,16
  806ad0:	003d9406 	br	806124 <__alt_data_end+0xff806124>
  806ad4:	01002074 	movhi	r4,129
  806ad8:	21091384 	addi	r4,r4,9294
  806adc:	d9002b15 	stw	r4,172(sp)
  806ae0:	d9002b17 	ldw	r4,172(sp)
  806ae4:	1c47883a 	add	r3,r3,r17
  806ae8:	10800044 	addi	r2,r2,1
  806aec:	41000015 	stw	r4,0(r8)
  806af0:	44400115 	stw	r17,4(r8)
  806af4:	d8c02015 	stw	r3,128(sp)
  806af8:	d8801f15 	stw	r2,124(sp)
  806afc:	010001c4 	movi	r4,7
  806b00:	20bfd716 	blt	r4,r2,806a60 <__alt_data_end+0xff806a60>
  806b04:	42000204 	addi	r8,r8,8
  806b08:	003fdd06 	br	806a80 <__alt_data_end+0xff806a80>
  806b0c:	d9002c17 	ldw	r4,176(sp)
  806b10:	d9801e04 	addi	r6,sp,120
  806b14:	b80b883a 	mov	r5,r23
  806b18:	080c4c80 	call	80c4c8 <__sprint_r>
  806b1c:	1039ed1e 	bne	r2,zero,8052d4 <__alt_data_end+0xff8052d4>
  806b20:	d8802617 	ldw	r2,152(sp)
  806b24:	d8c02017 	ldw	r3,128(sp)
  806b28:	da000404 	addi	r8,sp,16
  806b2c:	003e1006 	br	806370 <__alt_data_end+0xff806370>
  806b30:	00800044 	movi	r2,1
  806b34:	10803fcc 	andi	r2,r2,255
  806b38:	00c00044 	movi	r3,1
  806b3c:	10fa3526 	beq	r2,r3,805414 <__alt_data_end+0xff805414>
  806b40:	00c00084 	movi	r3,2
  806b44:	10fbcb26 	beq	r2,r3,805a74 <__alt_data_end+0xff805a74>
  806b48:	003a8f06 	br	805588 <__alt_data_end+0xff805588>
  806b4c:	01002074 	movhi	r4,129
  806b50:	21091784 	addi	r4,r4,9310
  806b54:	d9003515 	stw	r4,212(sp)
  806b58:	003b7606 	br	805934 <__alt_data_end+0xff805934>
  806b5c:	d8802917 	ldw	r2,164(sp)
  806b60:	00c00184 	movi	r3,6
  806b64:	1880012e 	bgeu	r3,r2,806b6c <___vfprintf_internal_r+0x1ca0>
  806b68:	1805883a 	mov	r2,r3
  806b6c:	d8802e15 	stw	r2,184(sp)
  806b70:	1000ef16 	blt	r2,zero,806f30 <___vfprintf_internal_r+0x2064>
  806b74:	04002074 	movhi	r16,129
  806b78:	d8802a15 	stw	r2,168(sp)
  806b7c:	dcc02d15 	stw	r19,180(sp)
  806b80:	d8002915 	stw	zero,164(sp)
  806b84:	d8003215 	stw	zero,200(sp)
  806b88:	84091104 	addi	r16,r16,9284
  806b8c:	0039883a 	mov	fp,zero
  806b90:	003aa206 	br	80561c <__alt_data_end+0xff80561c>
  806b94:	0021883a 	mov	r16,zero
  806b98:	003e0706 	br	8063b8 <__alt_data_end+0xff8063b8>
  806b9c:	d9002c17 	ldw	r4,176(sp)
  806ba0:	d9801e04 	addi	r6,sp,120
  806ba4:	b80b883a 	mov	r5,r23
  806ba8:	080c4c80 	call	80c4c8 <__sprint_r>
  806bac:	1039c91e 	bne	r2,zero,8052d4 <__alt_data_end+0xff8052d4>
  806bb0:	d8802617 	ldw	r2,152(sp)
  806bb4:	d9403317 	ldw	r5,204(sp)
  806bb8:	d8c02017 	ldw	r3,128(sp)
  806bbc:	da000404 	addi	r8,sp,16
  806bc0:	2885c83a 	sub	r2,r5,r2
  806bc4:	003dfb06 	br	8063b4 <__alt_data_end+0xff8063b4>
  806bc8:	9080004c 	andi	r2,r18,1
  806bcc:	103e8f1e 	bne	r2,zero,80660c <__alt_data_end+0xff80660c>
  806bd0:	d8802117 	ldw	r2,132(sp)
  806bd4:	003e9e06 	br	806650 <__alt_data_end+0xff806650>
  806bd8:	1025883a 	mov	r18,r2
  806bdc:	0039883a 	mov	fp,zero
  806be0:	00800084 	movi	r2,2
  806be4:	003fd306 	br	806b34 <__alt_data_end+0xff806b34>
  806be8:	07000b44 	movi	fp,45
  806bec:	df002785 	stb	fp,158(sp)
  806bf0:	003a4006 	br	8054f4 <__alt_data_end+0xff8054f4>
  806bf4:	00c00b44 	movi	r3,45
  806bf8:	d8c02785 	stb	r3,158(sp)
  806bfc:	d8802a15 	stw	r2,168(sp)
  806c00:	dc802b17 	ldw	r18,172(sp)
  806c04:	d8002915 	stw	zero,164(sp)
  806c08:	07000b44 	movi	fp,45
  806c0c:	003a8006 	br	805610 <__alt_data_end+0xff805610>
  806c10:	04002074 	movhi	r16,129
  806c14:	84090604 	addi	r16,r16,9240
  806c18:	003f4706 	br	806938 <__alt_data_end+0xff806938>
  806c1c:	d8c02d17 	ldw	r3,180(sp)
  806c20:	d9002f17 	ldw	r4,188(sp)
  806c24:	18800017 	ldw	r2,0(r3)
  806c28:	18c00104 	addi	r3,r3,4
  806c2c:	d8c02d15 	stw	r3,180(sp)
  806c30:	11000015 	stw	r4,0(r2)
  806c34:	0038dd06 	br	804fac <__alt_data_end+0xff804fac>
  806c38:	dd802617 	ldw	r22,152(sp)
  806c3c:	00bfff44 	movi	r2,-3
  806c40:	b0801c16 	blt	r22,r2,806cb4 <___vfprintf_internal_r+0x1de8>
  806c44:	d9402917 	ldw	r5,164(sp)
  806c48:	2d801a16 	blt	r5,r22,806cb4 <___vfprintf_internal_r+0x1de8>
  806c4c:	dd803215 	stw	r22,200(sp)
  806c50:	003e8906 	br	806678 <__alt_data_end+0xff806678>
  806c54:	01002074 	movhi	r4,129
  806c58:	21091384 	addi	r4,r4,9294
  806c5c:	d9002b15 	stw	r4,172(sp)
  806c60:	003c9106 	br	805ea8 <__alt_data_end+0xff805ea8>
  806c64:	e005883a 	mov	r2,fp
  806c68:	003e7906 	br	806650 <__alt_data_end+0xff806650>
  806c6c:	d9402917 	ldw	r5,164(sp)
  806c70:	df002783 	ldbu	fp,158(sp)
  806c74:	dcc02d15 	stw	r19,180(sp)
  806c78:	d9402a15 	stw	r5,168(sp)
  806c7c:	d9402e15 	stw	r5,184(sp)
  806c80:	d8002915 	stw	zero,164(sp)
  806c84:	d8003215 	stw	zero,200(sp)
  806c88:	003a5d06 	br	805600 <__alt_data_end+0xff805600>
  806c8c:	9080004c 	andi	r2,r18,1
  806c90:	0039883a 	mov	fp,zero
  806c94:	10000426 	beq	r2,zero,806ca8 <___vfprintf_internal_r+0x1ddc>
  806c98:	00800c04 	movi	r2,48
  806c9c:	dc001dc4 	addi	r16,sp,119
  806ca0:	d8801dc5 	stb	r2,119(sp)
  806ca4:	003b8006 	br	805aa8 <__alt_data_end+0xff805aa8>
  806ca8:	d8002e15 	stw	zero,184(sp)
  806cac:	dc001e04 	addi	r16,sp,120
  806cb0:	003a4d06 	br	8055e8 <__alt_data_end+0xff8055e8>
  806cb4:	8c7fff84 	addi	r17,r17,-2
  806cb8:	b5bfffc4 	addi	r22,r22,-1
  806cbc:	dd802615 	stw	r22,152(sp)
  806cc0:	dc4022c5 	stb	r17,139(sp)
  806cc4:	b000bf16 	blt	r22,zero,806fc4 <___vfprintf_internal_r+0x20f8>
  806cc8:	00800ac4 	movi	r2,43
  806ccc:	d8802305 	stb	r2,140(sp)
  806cd0:	00800244 	movi	r2,9
  806cd4:	15807016 	blt	r2,r22,806e98 <___vfprintf_internal_r+0x1fcc>
  806cd8:	00800c04 	movi	r2,48
  806cdc:	b5800c04 	addi	r22,r22,48
  806ce0:	d8802345 	stb	r2,141(sp)
  806ce4:	dd802385 	stb	r22,142(sp)
  806ce8:	d88023c4 	addi	r2,sp,143
  806cec:	df0022c4 	addi	fp,sp,139
  806cf0:	d8c03317 	ldw	r3,204(sp)
  806cf4:	1739c83a 	sub	fp,r2,fp
  806cf8:	d9003317 	ldw	r4,204(sp)
  806cfc:	e0c7883a 	add	r3,fp,r3
  806d00:	df003a15 	stw	fp,232(sp)
  806d04:	d8c02e15 	stw	r3,184(sp)
  806d08:	00800044 	movi	r2,1
  806d0c:	1100b30e 	bge	r2,r4,806fdc <___vfprintf_internal_r+0x2110>
  806d10:	d8c02e17 	ldw	r3,184(sp)
  806d14:	18c00044 	addi	r3,r3,1
  806d18:	d8c02e15 	stw	r3,184(sp)
  806d1c:	1805883a 	mov	r2,r3
  806d20:	1800ac16 	blt	r3,zero,806fd4 <___vfprintf_internal_r+0x2108>
  806d24:	d8003215 	stw	zero,200(sp)
  806d28:	003e5d06 	br	8066a0 <__alt_data_end+0xff8066a0>
  806d2c:	d9002c17 	ldw	r4,176(sp)
  806d30:	d9801e04 	addi	r6,sp,120
  806d34:	b80b883a 	mov	r5,r23
  806d38:	080c4c80 	call	80c4c8 <__sprint_r>
  806d3c:	1039651e 	bne	r2,zero,8052d4 <__alt_data_end+0xff8052d4>
  806d40:	dc402617 	ldw	r17,152(sp)
  806d44:	d8c02017 	ldw	r3,128(sp)
  806d48:	d8801f17 	ldw	r2,124(sp)
  806d4c:	da000404 	addi	r8,sp,16
  806d50:	003ed606 	br	8068ac <__alt_data_end+0xff8068ac>
  806d54:	582b883a 	mov	r21,r11
  806d58:	d8002915 	stw	zero,164(sp)
  806d5c:	0038bd06 	br	805054 <__alt_data_end+0xff805054>
  806d60:	d8802917 	ldw	r2,164(sp)
  806d64:	103e071e 	bne	r2,zero,806584 <__alt_data_end+0xff806584>
  806d68:	dc002915 	stw	r16,164(sp)
  806d6c:	003e0506 	br	806584 <__alt_data_end+0xff806584>
  806d70:	d9002917 	ldw	r4,164(sp)
  806d74:	20c00044 	addi	r3,r4,1
  806d78:	003e0f06 	br	8065b8 <__alt_data_end+0xff8065b8>
  806d7c:	01400184 	movi	r5,6
  806d80:	d9402915 	stw	r5,164(sp)
  806d84:	003dff06 	br	806584 <__alt_data_end+0xff806584>
  806d88:	d8802104 	addi	r2,sp,132
  806d8c:	d8800315 	stw	r2,12(sp)
  806d90:	d8802504 	addi	r2,sp,148
  806d94:	d8800215 	stw	r2,8(sp)
  806d98:	d8802604 	addi	r2,sp,152
  806d9c:	d8800115 	stw	r2,4(sp)
  806da0:	d8802917 	ldw	r2,164(sp)
  806da4:	d9403617 	ldw	r5,216(sp)
  806da8:	d9002c17 	ldw	r4,176(sp)
  806dac:	d8800015 	stw	r2,0(sp)
  806db0:	01c000c4 	movi	r7,3
  806db4:	980d883a 	mov	r6,r19
  806db8:	da003d15 	stw	r8,244(sp)
  806dbc:	08074f00 	call	8074f0 <_dtoa_r>
  806dc0:	d8c02917 	ldw	r3,164(sp)
  806dc4:	da003d17 	ldw	r8,244(sp)
  806dc8:	1021883a 	mov	r16,r2
  806dcc:	10f9883a 	add	fp,r2,r3
  806dd0:	81000007 	ldb	r4,0(r16)
  806dd4:	00800c04 	movi	r2,48
  806dd8:	20805e26 	beq	r4,r2,806f54 <___vfprintf_internal_r+0x2088>
  806ddc:	d8c02617 	ldw	r3,152(sp)
  806de0:	e0f9883a 	add	fp,fp,r3
  806de4:	003e0a06 	br	806610 <__alt_data_end+0xff806610>
  806de8:	00c00b44 	movi	r3,45
  806dec:	24e0003c 	xorhi	r19,r4,32768
  806df0:	d8c02a05 	stb	r3,168(sp)
  806df4:	003de906 	br	80659c <__alt_data_end+0xff80659c>
  806df8:	d8c03217 	ldw	r3,200(sp)
  806dfc:	00c07a0e 	bge	zero,r3,806fe8 <___vfprintf_internal_r+0x211c>
  806e00:	00800044 	movi	r2,1
  806e04:	d9003317 	ldw	r4,204(sp)
  806e08:	1105883a 	add	r2,r2,r4
  806e0c:	d8802e15 	stw	r2,184(sp)
  806e10:	10004e16 	blt	r2,zero,806f4c <___vfprintf_internal_r+0x2080>
  806e14:	044019c4 	movi	r17,103
  806e18:	003e2106 	br	8066a0 <__alt_data_end+0xff8066a0>
  806e1c:	d9002917 	ldw	r4,164(sp)
  806e20:	d8802104 	addi	r2,sp,132
  806e24:	d8800315 	stw	r2,12(sp)
  806e28:	d9000015 	stw	r4,0(sp)
  806e2c:	d8802504 	addi	r2,sp,148
  806e30:	d9403617 	ldw	r5,216(sp)
  806e34:	d9002c17 	ldw	r4,176(sp)
  806e38:	d8800215 	stw	r2,8(sp)
  806e3c:	d8802604 	addi	r2,sp,152
  806e40:	d8800115 	stw	r2,4(sp)
  806e44:	01c000c4 	movi	r7,3
  806e48:	980d883a 	mov	r6,r19
  806e4c:	da003d15 	stw	r8,244(sp)
  806e50:	08074f00 	call	8074f0 <_dtoa_r>
  806e54:	d8c02917 	ldw	r3,164(sp)
  806e58:	da003d17 	ldw	r8,244(sp)
  806e5c:	1021883a 	mov	r16,r2
  806e60:	00801184 	movi	r2,70
  806e64:	80f9883a 	add	fp,r16,r3
  806e68:	88bfd926 	beq	r17,r2,806dd0 <__alt_data_end+0xff806dd0>
  806e6c:	003de806 	br	806610 <__alt_data_end+0xff806610>
  806e70:	d9002917 	ldw	r4,164(sp)
  806e74:	00c04d0e 	bge	zero,r3,806fac <___vfprintf_internal_r+0x20e0>
  806e78:	2000441e 	bne	r4,zero,806f8c <___vfprintf_internal_r+0x20c0>
  806e7c:	9480004c 	andi	r18,r18,1
  806e80:	9000421e 	bne	r18,zero,806f8c <___vfprintf_internal_r+0x20c0>
  806e84:	1805883a 	mov	r2,r3
  806e88:	18007016 	blt	r3,zero,80704c <___vfprintf_internal_r+0x2180>
  806e8c:	d8c03217 	ldw	r3,200(sp)
  806e90:	d8c02e15 	stw	r3,184(sp)
  806e94:	003e0206 	br	8066a0 <__alt_data_end+0xff8066a0>
  806e98:	df0022c4 	addi	fp,sp,139
  806e9c:	dc002915 	stw	r16,164(sp)
  806ea0:	4027883a 	mov	r19,r8
  806ea4:	e021883a 	mov	r16,fp
  806ea8:	b009883a 	mov	r4,r22
  806eac:	01400284 	movi	r5,10
  806eb0:	0802acc0 	call	802acc <__modsi3>
  806eb4:	10800c04 	addi	r2,r2,48
  806eb8:	843fffc4 	addi	r16,r16,-1
  806ebc:	b009883a 	mov	r4,r22
  806ec0:	01400284 	movi	r5,10
  806ec4:	80800005 	stb	r2,0(r16)
  806ec8:	0802a480 	call	802a48 <__divsi3>
  806ecc:	102d883a 	mov	r22,r2
  806ed0:	00800244 	movi	r2,9
  806ed4:	15bff416 	blt	r2,r22,806ea8 <__alt_data_end+0xff806ea8>
  806ed8:	9811883a 	mov	r8,r19
  806edc:	b0800c04 	addi	r2,r22,48
  806ee0:	8027883a 	mov	r19,r16
  806ee4:	997fffc4 	addi	r5,r19,-1
  806ee8:	98bfffc5 	stb	r2,-1(r19)
  806eec:	dc002917 	ldw	r16,164(sp)
  806ef0:	2f006a2e 	bgeu	r5,fp,80709c <___vfprintf_internal_r+0x21d0>
  806ef4:	d9c02384 	addi	r7,sp,142
  806ef8:	3ccfc83a 	sub	r7,r7,r19
  806efc:	d9002344 	addi	r4,sp,141
  806f00:	e1cf883a 	add	r7,fp,r7
  806f04:	00000106 	br	806f0c <___vfprintf_internal_r+0x2040>
  806f08:	28800003 	ldbu	r2,0(r5)
  806f0c:	20800005 	stb	r2,0(r4)
  806f10:	21000044 	addi	r4,r4,1
  806f14:	29400044 	addi	r5,r5,1
  806f18:	393ffb1e 	bne	r7,r4,806f08 <__alt_data_end+0xff806f08>
  806f1c:	d8802304 	addi	r2,sp,140
  806f20:	14c5c83a 	sub	r2,r2,r19
  806f24:	d8c02344 	addi	r3,sp,141
  806f28:	1885883a 	add	r2,r3,r2
  806f2c:	003f7006 	br	806cf0 <__alt_data_end+0xff806cf0>
  806f30:	0005883a 	mov	r2,zero
  806f34:	003f0f06 	br	806b74 <__alt_data_end+0xff806b74>
  806f38:	d8c03217 	ldw	r3,200(sp)
  806f3c:	18c00044 	addi	r3,r3,1
  806f40:	d8c02e15 	stw	r3,184(sp)
  806f44:	1805883a 	mov	r2,r3
  806f48:	183fb20e 	bge	r3,zero,806e14 <__alt_data_end+0xff806e14>
  806f4c:	0005883a 	mov	r2,zero
  806f50:	003fb006 	br	806e14 <__alt_data_end+0xff806e14>
  806f54:	d9003617 	ldw	r4,216(sp)
  806f58:	000d883a 	mov	r6,zero
  806f5c:	000f883a 	mov	r7,zero
  806f60:	980b883a 	mov	r5,r19
  806f64:	d8c03c15 	stw	r3,240(sp)
  806f68:	da003d15 	stw	r8,244(sp)
  806f6c:	08037040 	call	803704 <__eqdf2>
  806f70:	d8c03c17 	ldw	r3,240(sp)
  806f74:	da003d17 	ldw	r8,244(sp)
  806f78:	103f9826 	beq	r2,zero,806ddc <__alt_data_end+0xff806ddc>
  806f7c:	00800044 	movi	r2,1
  806f80:	10c7c83a 	sub	r3,r2,r3
  806f84:	d8c02615 	stw	r3,152(sp)
  806f88:	003f9506 	br	806de0 <__alt_data_end+0xff806de0>
  806f8c:	d9002917 	ldw	r4,164(sp)
  806f90:	d8c03217 	ldw	r3,200(sp)
  806f94:	20800044 	addi	r2,r4,1
  806f98:	1885883a 	add	r2,r3,r2
  806f9c:	d8802e15 	stw	r2,184(sp)
  806fa0:	103dbf0e 	bge	r2,zero,8066a0 <__alt_data_end+0xff8066a0>
  806fa4:	0005883a 	mov	r2,zero
  806fa8:	003dbd06 	br	8066a0 <__alt_data_end+0xff8066a0>
  806fac:	2000211e 	bne	r4,zero,807034 <___vfprintf_internal_r+0x2168>
  806fb0:	9480004c 	andi	r18,r18,1
  806fb4:	90001f1e 	bne	r18,zero,807034 <___vfprintf_internal_r+0x2168>
  806fb8:	00800044 	movi	r2,1
  806fbc:	d8802e15 	stw	r2,184(sp)
  806fc0:	003db706 	br	8066a0 <__alt_data_end+0xff8066a0>
  806fc4:	00800b44 	movi	r2,45
  806fc8:	05adc83a 	sub	r22,zero,r22
  806fcc:	d8802305 	stb	r2,140(sp)
  806fd0:	003f3f06 	br	806cd0 <__alt_data_end+0xff806cd0>
  806fd4:	0005883a 	mov	r2,zero
  806fd8:	003f5206 	br	806d24 <__alt_data_end+0xff806d24>
  806fdc:	90a4703a 	and	r18,r18,r2
  806fe0:	903f4e26 	beq	r18,zero,806d1c <__alt_data_end+0xff806d1c>
  806fe4:	003f4a06 	br	806d10 <__alt_data_end+0xff806d10>
  806fe8:	00800084 	movi	r2,2
  806fec:	10c5c83a 	sub	r2,r2,r3
  806ff0:	003f8406 	br	806e04 <__alt_data_end+0xff806e04>
  806ff4:	d8802d17 	ldw	r2,180(sp)
  806ff8:	d9002d17 	ldw	r4,180(sp)
  806ffc:	ac400043 	ldbu	r17,1(r21)
  807000:	10800017 	ldw	r2,0(r2)
  807004:	582b883a 	mov	r21,r11
  807008:	d8802915 	stw	r2,164(sp)
  80700c:	20800104 	addi	r2,r4,4
  807010:	d9002917 	ldw	r4,164(sp)
  807014:	d8802d15 	stw	r2,180(sp)
  807018:	203e7a0e 	bge	r4,zero,806a04 <__alt_data_end+0xff806a04>
  80701c:	8c403fcc 	andi	r17,r17,255
  807020:	00bfffc4 	movi	r2,-1
  807024:	8c40201c 	xori	r17,r17,128
  807028:	d8802915 	stw	r2,164(sp)
  80702c:	8c7fe004 	addi	r17,r17,-128
  807030:	00380706 	br	805050 <__alt_data_end+0xff805050>
  807034:	d8c02917 	ldw	r3,164(sp)
  807038:	18c00084 	addi	r3,r3,2
  80703c:	d8c02e15 	stw	r3,184(sp)
  807040:	1805883a 	mov	r2,r3
  807044:	183d960e 	bge	r3,zero,8066a0 <__alt_data_end+0xff8066a0>
  807048:	003fd606 	br	806fa4 <__alt_data_end+0xff806fa4>
  80704c:	0005883a 	mov	r2,zero
  807050:	003f8e06 	br	806e8c <__alt_data_end+0xff806e8c>
  807054:	9080004c 	andi	r2,r18,1
  807058:	103f811e 	bne	r2,zero,806e60 <__alt_data_end+0xff806e60>
  80705c:	d8802117 	ldw	r2,132(sp)
  807060:	1405c83a 	sub	r2,r2,r16
  807064:	d8803315 	stw	r2,204(sp)
  807068:	b47ef326 	beq	r22,r17,806c38 <__alt_data_end+0xff806c38>
  80706c:	dd802617 	ldw	r22,152(sp)
  807070:	003f1106 	br	806cb8 <__alt_data_end+0xff806cb8>
  807074:	d9c02785 	stb	r7,158(sp)
  807078:	00390406 	br	80548c <__alt_data_end+0xff80548c>
  80707c:	d9c02785 	stb	r7,158(sp)
  807080:	0038d306 	br	8053d0 <__alt_data_end+0xff8053d0>
  807084:	d9c02785 	stb	r7,158(sp)
  807088:	003a6106 	br	805a10 <__alt_data_end+0xff805a10>
  80708c:	d9c02785 	stb	r7,158(sp)
  807090:	003af806 	br	805c74 <__alt_data_end+0xff805c74>
  807094:	0005883a 	mov	r2,zero
  807098:	003d7e06 	br	806694 <__alt_data_end+0xff806694>
  80709c:	d8802344 	addi	r2,sp,141
  8070a0:	003f1306 	br	806cf0 <__alt_data_end+0xff806cf0>
  8070a4:	d9c02785 	stb	r7,158(sp)
  8070a8:	00392306 	br	805538 <__alt_data_end+0xff805538>
  8070ac:	d9c02785 	stb	r7,158(sp)
  8070b0:	003aa906 	br	805b58 <__alt_data_end+0xff805b58>
  8070b4:	d9c02785 	stb	r7,158(sp)
  8070b8:	003a3d06 	br	8059b0 <__alt_data_end+0xff8059b0>
  8070bc:	d9c02785 	stb	r7,158(sp)
  8070c0:	003aca06 	br	805bec <__alt_data_end+0xff805bec>

008070c4 <__vfprintf_internal>:
  8070c4:	00802074 	movhi	r2,129
  8070c8:	10902c04 	addi	r2,r2,16560
  8070cc:	300f883a 	mov	r7,r6
  8070d0:	280d883a 	mov	r6,r5
  8070d4:	200b883a 	mov	r5,r4
  8070d8:	11000017 	ldw	r4,0(r2)
  8070dc:	0804ecc1 	jmpi	804ecc <___vfprintf_internal_r>

008070e0 <__sbprintf>:
  8070e0:	2880030b 	ldhu	r2,12(r5)
  8070e4:	2ac01917 	ldw	r11,100(r5)
  8070e8:	2a80038b 	ldhu	r10,14(r5)
  8070ec:	2a400717 	ldw	r9,28(r5)
  8070f0:	2a000917 	ldw	r8,36(r5)
  8070f4:	defee204 	addi	sp,sp,-1144
  8070f8:	00c10004 	movi	r3,1024
  8070fc:	dc011a15 	stw	r16,1128(sp)
  807100:	10bfff4c 	andi	r2,r2,65533
  807104:	2821883a 	mov	r16,r5
  807108:	d8cb883a 	add	r5,sp,r3
  80710c:	dc811c15 	stw	r18,1136(sp)
  807110:	dc411b15 	stw	r17,1132(sp)
  807114:	dfc11d15 	stw	ra,1140(sp)
  807118:	2025883a 	mov	r18,r4
  80711c:	d881030d 	sth	r2,1036(sp)
  807120:	dac11915 	stw	r11,1124(sp)
  807124:	da81038d 	sth	r10,1038(sp)
  807128:	da410715 	stw	r9,1052(sp)
  80712c:	da010915 	stw	r8,1060(sp)
  807130:	dec10015 	stw	sp,1024(sp)
  807134:	dec10415 	stw	sp,1040(sp)
  807138:	d8c10215 	stw	r3,1032(sp)
  80713c:	d8c10515 	stw	r3,1044(sp)
  807140:	d8010615 	stw	zero,1048(sp)
  807144:	0804ecc0 	call	804ecc <___vfprintf_internal_r>
  807148:	1023883a 	mov	r17,r2
  80714c:	10000416 	blt	r2,zero,807160 <__sbprintf+0x80>
  807150:	d9410004 	addi	r5,sp,1024
  807154:	9009883a 	mov	r4,r18
  807158:	0808d940 	call	808d94 <_fflush_r>
  80715c:	10000d1e 	bne	r2,zero,807194 <__sbprintf+0xb4>
  807160:	d881030b 	ldhu	r2,1036(sp)
  807164:	1080100c 	andi	r2,r2,64
  807168:	10000326 	beq	r2,zero,807178 <__sbprintf+0x98>
  80716c:	8080030b 	ldhu	r2,12(r16)
  807170:	10801014 	ori	r2,r2,64
  807174:	8080030d 	sth	r2,12(r16)
  807178:	8805883a 	mov	r2,r17
  80717c:	dfc11d17 	ldw	ra,1140(sp)
  807180:	dc811c17 	ldw	r18,1136(sp)
  807184:	dc411b17 	ldw	r17,1132(sp)
  807188:	dc011a17 	ldw	r16,1128(sp)
  80718c:	dec11e04 	addi	sp,sp,1144
  807190:	f800283a 	ret
  807194:	047fffc4 	movi	r17,-1
  807198:	003ff106 	br	807160 <__alt_data_end+0xff807160>

0080719c <__swsetup_r>:
  80719c:	00802074 	movhi	r2,129
  8071a0:	defffd04 	addi	sp,sp,-12
  8071a4:	10902c04 	addi	r2,r2,16560
  8071a8:	dc400115 	stw	r17,4(sp)
  8071ac:	2023883a 	mov	r17,r4
  8071b0:	11000017 	ldw	r4,0(r2)
  8071b4:	dc000015 	stw	r16,0(sp)
  8071b8:	dfc00215 	stw	ra,8(sp)
  8071bc:	2821883a 	mov	r16,r5
  8071c0:	20000226 	beq	r4,zero,8071cc <__swsetup_r+0x30>
  8071c4:	20800e17 	ldw	r2,56(r4)
  8071c8:	10003126 	beq	r2,zero,807290 <__swsetup_r+0xf4>
  8071cc:	8080030b 	ldhu	r2,12(r16)
  8071d0:	10c0020c 	andi	r3,r2,8
  8071d4:	1009883a 	mov	r4,r2
  8071d8:	18000f26 	beq	r3,zero,807218 <__swsetup_r+0x7c>
  8071dc:	80c00417 	ldw	r3,16(r16)
  8071e0:	18001526 	beq	r3,zero,807238 <__swsetup_r+0x9c>
  8071e4:	1100004c 	andi	r4,r2,1
  8071e8:	20001c1e 	bne	r4,zero,80725c <__swsetup_r+0xc0>
  8071ec:	1080008c 	andi	r2,r2,2
  8071f0:	1000291e 	bne	r2,zero,807298 <__swsetup_r+0xfc>
  8071f4:	80800517 	ldw	r2,20(r16)
  8071f8:	80800215 	stw	r2,8(r16)
  8071fc:	18001c26 	beq	r3,zero,807270 <__swsetup_r+0xd4>
  807200:	0005883a 	mov	r2,zero
  807204:	dfc00217 	ldw	ra,8(sp)
  807208:	dc400117 	ldw	r17,4(sp)
  80720c:	dc000017 	ldw	r16,0(sp)
  807210:	dec00304 	addi	sp,sp,12
  807214:	f800283a 	ret
  807218:	2080040c 	andi	r2,r4,16
  80721c:	10002e26 	beq	r2,zero,8072d8 <__swsetup_r+0x13c>
  807220:	2080010c 	andi	r2,r4,4
  807224:	10001e1e 	bne	r2,zero,8072a0 <__swsetup_r+0x104>
  807228:	80c00417 	ldw	r3,16(r16)
  80722c:	20800214 	ori	r2,r4,8
  807230:	8080030d 	sth	r2,12(r16)
  807234:	183feb1e 	bne	r3,zero,8071e4 <__alt_data_end+0xff8071e4>
  807238:	1100a00c 	andi	r4,r2,640
  80723c:	01408004 	movi	r5,512
  807240:	217fe826 	beq	r4,r5,8071e4 <__alt_data_end+0xff8071e4>
  807244:	800b883a 	mov	r5,r16
  807248:	8809883a 	mov	r4,r17
  80724c:	0809d140 	call	809d14 <__smakebuf_r>
  807250:	8080030b 	ldhu	r2,12(r16)
  807254:	80c00417 	ldw	r3,16(r16)
  807258:	003fe206 	br	8071e4 <__alt_data_end+0xff8071e4>
  80725c:	80800517 	ldw	r2,20(r16)
  807260:	80000215 	stw	zero,8(r16)
  807264:	0085c83a 	sub	r2,zero,r2
  807268:	80800615 	stw	r2,24(r16)
  80726c:	183fe41e 	bne	r3,zero,807200 <__alt_data_end+0xff807200>
  807270:	80c0030b 	ldhu	r3,12(r16)
  807274:	0005883a 	mov	r2,zero
  807278:	1900200c 	andi	r4,r3,128
  80727c:	203fe126 	beq	r4,zero,807204 <__alt_data_end+0xff807204>
  807280:	18c01014 	ori	r3,r3,64
  807284:	80c0030d 	sth	r3,12(r16)
  807288:	00bfffc4 	movi	r2,-1
  80728c:	003fdd06 	br	807204 <__alt_data_end+0xff807204>
  807290:	08091700 	call	809170 <__sinit>
  807294:	003fcd06 	br	8071cc <__alt_data_end+0xff8071cc>
  807298:	0005883a 	mov	r2,zero
  80729c:	003fd606 	br	8071f8 <__alt_data_end+0xff8071f8>
  8072a0:	81400c17 	ldw	r5,48(r16)
  8072a4:	28000626 	beq	r5,zero,8072c0 <__swsetup_r+0x124>
  8072a8:	80801004 	addi	r2,r16,64
  8072ac:	28800326 	beq	r5,r2,8072bc <__swsetup_r+0x120>
  8072b0:	8809883a 	mov	r4,r17
  8072b4:	08092e40 	call	8092e4 <_free_r>
  8072b8:	8100030b 	ldhu	r4,12(r16)
  8072bc:	80000c15 	stw	zero,48(r16)
  8072c0:	80c00417 	ldw	r3,16(r16)
  8072c4:	00bff6c4 	movi	r2,-37
  8072c8:	1108703a 	and	r4,r2,r4
  8072cc:	80000115 	stw	zero,4(r16)
  8072d0:	80c00015 	stw	r3,0(r16)
  8072d4:	003fd506 	br	80722c <__alt_data_end+0xff80722c>
  8072d8:	00800244 	movi	r2,9
  8072dc:	88800015 	stw	r2,0(r17)
  8072e0:	20801014 	ori	r2,r4,64
  8072e4:	8080030d 	sth	r2,12(r16)
  8072e8:	00bfffc4 	movi	r2,-1
  8072ec:	003fc506 	br	807204 <__alt_data_end+0xff807204>

008072f0 <quorem>:
  8072f0:	defff704 	addi	sp,sp,-36
  8072f4:	dc800215 	stw	r18,8(sp)
  8072f8:	20800417 	ldw	r2,16(r4)
  8072fc:	2c800417 	ldw	r18,16(r5)
  807300:	dfc00815 	stw	ra,32(sp)
  807304:	ddc00715 	stw	r23,28(sp)
  807308:	dd800615 	stw	r22,24(sp)
  80730c:	dd400515 	stw	r21,20(sp)
  807310:	dd000415 	stw	r20,16(sp)
  807314:	dcc00315 	stw	r19,12(sp)
  807318:	dc400115 	stw	r17,4(sp)
  80731c:	dc000015 	stw	r16,0(sp)
  807320:	14807116 	blt	r2,r18,8074e8 <quorem+0x1f8>
  807324:	94bfffc4 	addi	r18,r18,-1
  807328:	94ad883a 	add	r22,r18,r18
  80732c:	b5ad883a 	add	r22,r22,r22
  807330:	2c400504 	addi	r17,r5,20
  807334:	8da9883a 	add	r20,r17,r22
  807338:	25400504 	addi	r21,r4,20
  80733c:	282f883a 	mov	r23,r5
  807340:	adad883a 	add	r22,r21,r22
  807344:	a1400017 	ldw	r5,0(r20)
  807348:	2021883a 	mov	r16,r4
  80734c:	b1000017 	ldw	r4,0(r22)
  807350:	29400044 	addi	r5,r5,1
  807354:	0802b400 	call	802b40 <__udivsi3>
  807358:	1027883a 	mov	r19,r2
  80735c:	10002c26 	beq	r2,zero,807410 <quorem+0x120>
  807360:	a813883a 	mov	r9,r21
  807364:	880b883a 	mov	r5,r17
  807368:	0009883a 	mov	r4,zero
  80736c:	000d883a 	mov	r6,zero
  807370:	2a000017 	ldw	r8,0(r5)
  807374:	49c00017 	ldw	r7,0(r9)
  807378:	29400104 	addi	r5,r5,4
  80737c:	40bfffcc 	andi	r2,r8,65535
  807380:	14c5383a 	mul	r2,r2,r19
  807384:	4010d43a 	srli	r8,r8,16
  807388:	38ffffcc 	andi	r3,r7,65535
  80738c:	1105883a 	add	r2,r2,r4
  807390:	1008d43a 	srli	r4,r2,16
  807394:	44d1383a 	mul	r8,r8,r19
  807398:	198d883a 	add	r6,r3,r6
  80739c:	10ffffcc 	andi	r3,r2,65535
  8073a0:	30c7c83a 	sub	r3,r6,r3
  8073a4:	380ed43a 	srli	r7,r7,16
  8073a8:	4105883a 	add	r2,r8,r4
  8073ac:	180dd43a 	srai	r6,r3,16
  8073b0:	113fffcc 	andi	r4,r2,65535
  8073b4:	390fc83a 	sub	r7,r7,r4
  8073b8:	398d883a 	add	r6,r7,r6
  8073bc:	300e943a 	slli	r7,r6,16
  8073c0:	18ffffcc 	andi	r3,r3,65535
  8073c4:	1008d43a 	srli	r4,r2,16
  8073c8:	38ceb03a 	or	r7,r7,r3
  8073cc:	49c00015 	stw	r7,0(r9)
  8073d0:	300dd43a 	srai	r6,r6,16
  8073d4:	4a400104 	addi	r9,r9,4
  8073d8:	a17fe52e 	bgeu	r20,r5,807370 <__alt_data_end+0xff807370>
  8073dc:	b0800017 	ldw	r2,0(r22)
  8073e0:	10000b1e 	bne	r2,zero,807410 <quorem+0x120>
  8073e4:	b0bfff04 	addi	r2,r22,-4
  8073e8:	a880082e 	bgeu	r21,r2,80740c <quorem+0x11c>
  8073ec:	b0ffff17 	ldw	r3,-4(r22)
  8073f0:	18000326 	beq	r3,zero,807400 <quorem+0x110>
  8073f4:	00000506 	br	80740c <quorem+0x11c>
  8073f8:	10c00017 	ldw	r3,0(r2)
  8073fc:	1800031e 	bne	r3,zero,80740c <quorem+0x11c>
  807400:	10bfff04 	addi	r2,r2,-4
  807404:	94bfffc4 	addi	r18,r18,-1
  807408:	a8bffb36 	bltu	r21,r2,8073f8 <__alt_data_end+0xff8073f8>
  80740c:	84800415 	stw	r18,16(r16)
  807410:	b80b883a 	mov	r5,r23
  807414:	8009883a 	mov	r4,r16
  807418:	080b4540 	call	80b454 <__mcmp>
  80741c:	10002616 	blt	r2,zero,8074b8 <quorem+0x1c8>
  807420:	9cc00044 	addi	r19,r19,1
  807424:	a805883a 	mov	r2,r21
  807428:	000b883a 	mov	r5,zero
  80742c:	11000017 	ldw	r4,0(r2)
  807430:	89800017 	ldw	r6,0(r17)
  807434:	10800104 	addi	r2,r2,4
  807438:	20ffffcc 	andi	r3,r4,65535
  80743c:	194b883a 	add	r5,r3,r5
  807440:	30ffffcc 	andi	r3,r6,65535
  807444:	28c7c83a 	sub	r3,r5,r3
  807448:	300cd43a 	srli	r6,r6,16
  80744c:	2008d43a 	srli	r4,r4,16
  807450:	180bd43a 	srai	r5,r3,16
  807454:	18ffffcc 	andi	r3,r3,65535
  807458:	2189c83a 	sub	r4,r4,r6
  80745c:	2149883a 	add	r4,r4,r5
  807460:	200c943a 	slli	r6,r4,16
  807464:	8c400104 	addi	r17,r17,4
  807468:	200bd43a 	srai	r5,r4,16
  80746c:	30c6b03a 	or	r3,r6,r3
  807470:	10ffff15 	stw	r3,-4(r2)
  807474:	a47fed2e 	bgeu	r20,r17,80742c <__alt_data_end+0xff80742c>
  807478:	9485883a 	add	r2,r18,r18
  80747c:	1085883a 	add	r2,r2,r2
  807480:	a887883a 	add	r3,r21,r2
  807484:	18800017 	ldw	r2,0(r3)
  807488:	10000b1e 	bne	r2,zero,8074b8 <quorem+0x1c8>
  80748c:	18bfff04 	addi	r2,r3,-4
  807490:	a880082e 	bgeu	r21,r2,8074b4 <quorem+0x1c4>
  807494:	18ffff17 	ldw	r3,-4(r3)
  807498:	18000326 	beq	r3,zero,8074a8 <quorem+0x1b8>
  80749c:	00000506 	br	8074b4 <quorem+0x1c4>
  8074a0:	10c00017 	ldw	r3,0(r2)
  8074a4:	1800031e 	bne	r3,zero,8074b4 <quorem+0x1c4>
  8074a8:	10bfff04 	addi	r2,r2,-4
  8074ac:	94bfffc4 	addi	r18,r18,-1
  8074b0:	a8bffb36 	bltu	r21,r2,8074a0 <__alt_data_end+0xff8074a0>
  8074b4:	84800415 	stw	r18,16(r16)
  8074b8:	9805883a 	mov	r2,r19
  8074bc:	dfc00817 	ldw	ra,32(sp)
  8074c0:	ddc00717 	ldw	r23,28(sp)
  8074c4:	dd800617 	ldw	r22,24(sp)
  8074c8:	dd400517 	ldw	r21,20(sp)
  8074cc:	dd000417 	ldw	r20,16(sp)
  8074d0:	dcc00317 	ldw	r19,12(sp)
  8074d4:	dc800217 	ldw	r18,8(sp)
  8074d8:	dc400117 	ldw	r17,4(sp)
  8074dc:	dc000017 	ldw	r16,0(sp)
  8074e0:	dec00904 	addi	sp,sp,36
  8074e4:	f800283a 	ret
  8074e8:	0005883a 	mov	r2,zero
  8074ec:	003ff306 	br	8074bc <__alt_data_end+0xff8074bc>

008074f0 <_dtoa_r>:
  8074f0:	20801017 	ldw	r2,64(r4)
  8074f4:	deffde04 	addi	sp,sp,-136
  8074f8:	df002015 	stw	fp,128(sp)
  8074fc:	dcc01b15 	stw	r19,108(sp)
  807500:	dc801a15 	stw	r18,104(sp)
  807504:	dc401915 	stw	r17,100(sp)
  807508:	dc001815 	stw	r16,96(sp)
  80750c:	dfc02115 	stw	ra,132(sp)
  807510:	ddc01f15 	stw	r23,124(sp)
  807514:	dd801e15 	stw	r22,120(sp)
  807518:	dd401d15 	stw	r21,116(sp)
  80751c:	dd001c15 	stw	r20,112(sp)
  807520:	d9c00315 	stw	r7,12(sp)
  807524:	2039883a 	mov	fp,r4
  807528:	3023883a 	mov	r17,r6
  80752c:	2825883a 	mov	r18,r5
  807530:	dc002417 	ldw	r16,144(sp)
  807534:	3027883a 	mov	r19,r6
  807538:	10000826 	beq	r2,zero,80755c <_dtoa_r+0x6c>
  80753c:	21801117 	ldw	r6,68(r4)
  807540:	00c00044 	movi	r3,1
  807544:	100b883a 	mov	r5,r2
  807548:	1986983a 	sll	r3,r3,r6
  80754c:	11800115 	stw	r6,4(r2)
  807550:	10c00215 	stw	r3,8(r2)
  807554:	080ac340 	call	80ac34 <_Bfree>
  807558:	e0001015 	stw	zero,64(fp)
  80755c:	88002e16 	blt	r17,zero,807618 <_dtoa_r+0x128>
  807560:	80000015 	stw	zero,0(r16)
  807564:	889ffc2c 	andhi	r2,r17,32752
  807568:	00dffc34 	movhi	r3,32752
  80756c:	10c01c26 	beq	r2,r3,8075e0 <_dtoa_r+0xf0>
  807570:	000d883a 	mov	r6,zero
  807574:	000f883a 	mov	r7,zero
  807578:	9009883a 	mov	r4,r18
  80757c:	980b883a 	mov	r5,r19
  807580:	08037040 	call	803704 <__eqdf2>
  807584:	10002b1e 	bne	r2,zero,807634 <_dtoa_r+0x144>
  807588:	d9c02317 	ldw	r7,140(sp)
  80758c:	00800044 	movi	r2,1
  807590:	38800015 	stw	r2,0(r7)
  807594:	d8802517 	ldw	r2,148(sp)
  807598:	10019e26 	beq	r2,zero,807c14 <_dtoa_r+0x724>
  80759c:	d8c02517 	ldw	r3,148(sp)
  8075a0:	00802074 	movhi	r2,129
  8075a4:	10891344 	addi	r2,r2,9293
  8075a8:	18800015 	stw	r2,0(r3)
  8075ac:	10bfffc4 	addi	r2,r2,-1
  8075b0:	dfc02117 	ldw	ra,132(sp)
  8075b4:	df002017 	ldw	fp,128(sp)
  8075b8:	ddc01f17 	ldw	r23,124(sp)
  8075bc:	dd801e17 	ldw	r22,120(sp)
  8075c0:	dd401d17 	ldw	r21,116(sp)
  8075c4:	dd001c17 	ldw	r20,112(sp)
  8075c8:	dcc01b17 	ldw	r19,108(sp)
  8075cc:	dc801a17 	ldw	r18,104(sp)
  8075d0:	dc401917 	ldw	r17,100(sp)
  8075d4:	dc001817 	ldw	r16,96(sp)
  8075d8:	dec02204 	addi	sp,sp,136
  8075dc:	f800283a 	ret
  8075e0:	d8c02317 	ldw	r3,140(sp)
  8075e4:	0089c3c4 	movi	r2,9999
  8075e8:	18800015 	stw	r2,0(r3)
  8075ec:	90017726 	beq	r18,zero,807bcc <_dtoa_r+0x6dc>
  8075f0:	00802074 	movhi	r2,129
  8075f4:	10891f04 	addi	r2,r2,9340
  8075f8:	d9002517 	ldw	r4,148(sp)
  8075fc:	203fec26 	beq	r4,zero,8075b0 <__alt_data_end+0xff8075b0>
  807600:	10c000c7 	ldb	r3,3(r2)
  807604:	1801781e 	bne	r3,zero,807be8 <_dtoa_r+0x6f8>
  807608:	10c000c4 	addi	r3,r2,3
  80760c:	d9802517 	ldw	r6,148(sp)
  807610:	30c00015 	stw	r3,0(r6)
  807614:	003fe606 	br	8075b0 <__alt_data_end+0xff8075b0>
  807618:	04e00034 	movhi	r19,32768
  80761c:	9cffffc4 	addi	r19,r19,-1
  807620:	00800044 	movi	r2,1
  807624:	8ce6703a 	and	r19,r17,r19
  807628:	80800015 	stw	r2,0(r16)
  80762c:	9823883a 	mov	r17,r19
  807630:	003fcc06 	br	807564 <__alt_data_end+0xff807564>
  807634:	d8800204 	addi	r2,sp,8
  807638:	d8800015 	stw	r2,0(sp)
  80763c:	d9c00104 	addi	r7,sp,4
  807640:	900b883a 	mov	r5,r18
  807644:	980d883a 	mov	r6,r19
  807648:	e009883a 	mov	r4,fp
  80764c:	8820d53a 	srli	r16,r17,20
  807650:	080b8200 	call	80b820 <__d2b>
  807654:	d8800915 	stw	r2,36(sp)
  807658:	8001651e 	bne	r16,zero,807bf0 <_dtoa_r+0x700>
  80765c:	dd800217 	ldw	r22,8(sp)
  807660:	dc000117 	ldw	r16,4(sp)
  807664:	00800804 	movi	r2,32
  807668:	b421883a 	add	r16,r22,r16
  80766c:	80c10c84 	addi	r3,r16,1074
  807670:	10c2d10e 	bge	r2,r3,8081b8 <_dtoa_r+0xcc8>
  807674:	00801004 	movi	r2,64
  807678:	81010484 	addi	r4,r16,1042
  80767c:	10c7c83a 	sub	r3,r2,r3
  807680:	9108d83a 	srl	r4,r18,r4
  807684:	88e2983a 	sll	r17,r17,r3
  807688:	2448b03a 	or	r4,r4,r17
  80768c:	080f7d40 	call	80f7d4 <__floatunsidf>
  807690:	017f8434 	movhi	r5,65040
  807694:	01800044 	movi	r6,1
  807698:	1009883a 	mov	r4,r2
  80769c:	194b883a 	add	r5,r3,r5
  8076a0:	843fffc4 	addi	r16,r16,-1
  8076a4:	d9801115 	stw	r6,68(sp)
  8076a8:	000d883a 	mov	r6,zero
  8076ac:	01cffe34 	movhi	r7,16376
  8076b0:	0803f800 	call	803f80 <__subdf3>
  8076b4:	0198dbf4 	movhi	r6,25455
  8076b8:	01cff4f4 	movhi	r7,16339
  8076bc:	3190d844 	addi	r6,r6,17249
  8076c0:	39e1e9c4 	addi	r7,r7,-30809
  8076c4:	1009883a 	mov	r4,r2
  8076c8:	180b883a 	mov	r5,r3
  8076cc:	08038680 	call	803868 <__muldf3>
  8076d0:	01a2d874 	movhi	r6,35681
  8076d4:	01cff1f4 	movhi	r7,16327
  8076d8:	31b22cc4 	addi	r6,r6,-14157
  8076dc:	39e28a04 	addi	r7,r7,-30168
  8076e0:	180b883a 	mov	r5,r3
  8076e4:	1009883a 	mov	r4,r2
  8076e8:	0802e580 	call	802e58 <__adddf3>
  8076ec:	8009883a 	mov	r4,r16
  8076f0:	1029883a 	mov	r20,r2
  8076f4:	1823883a 	mov	r17,r3
  8076f8:	08048fc0 	call	8048fc <__floatsidf>
  8076fc:	019427f4 	movhi	r6,20639
  807700:	01cff4f4 	movhi	r7,16339
  807704:	319e7ec4 	addi	r6,r6,31227
  807708:	39d104c4 	addi	r7,r7,17427
  80770c:	1009883a 	mov	r4,r2
  807710:	180b883a 	mov	r5,r3
  807714:	08038680 	call	803868 <__muldf3>
  807718:	100d883a 	mov	r6,r2
  80771c:	180f883a 	mov	r7,r3
  807720:	a009883a 	mov	r4,r20
  807724:	880b883a 	mov	r5,r17
  807728:	0802e580 	call	802e58 <__adddf3>
  80772c:	1009883a 	mov	r4,r2
  807730:	180b883a 	mov	r5,r3
  807734:	1029883a 	mov	r20,r2
  807738:	1823883a 	mov	r17,r3
  80773c:	080487c0 	call	80487c <__fixdfsi>
  807740:	000d883a 	mov	r6,zero
  807744:	000f883a 	mov	r7,zero
  807748:	a009883a 	mov	r4,r20
  80774c:	880b883a 	mov	r5,r17
  807750:	d8800515 	stw	r2,20(sp)
  807754:	080f6e00 	call	80f6e0 <__ledf2>
  807758:	10028716 	blt	r2,zero,808178 <_dtoa_r+0xc88>
  80775c:	d8c00517 	ldw	r3,20(sp)
  807760:	00800584 	movi	r2,22
  807764:	10c27536 	bltu	r2,r3,80813c <_dtoa_r+0xc4c>
  807768:	180490fa 	slli	r2,r3,3
  80776c:	00c02074 	movhi	r3,129
  807770:	18c93b04 	addi	r3,r3,9452
  807774:	1885883a 	add	r2,r3,r2
  807778:	11000017 	ldw	r4,0(r2)
  80777c:	11400117 	ldw	r5,4(r2)
  807780:	900d883a 	mov	r6,r18
  807784:	980f883a 	mov	r7,r19
  807788:	080378c0 	call	80378c <__gedf2>
  80778c:	00828d0e 	bge	zero,r2,8081c4 <_dtoa_r+0xcd4>
  807790:	d9000517 	ldw	r4,20(sp)
  807794:	d8000e15 	stw	zero,56(sp)
  807798:	213fffc4 	addi	r4,r4,-1
  80779c:	d9000515 	stw	r4,20(sp)
  8077a0:	b42dc83a 	sub	r22,r22,r16
  8077a4:	b5bfffc4 	addi	r22,r22,-1
  8077a8:	b0026f16 	blt	r22,zero,808168 <_dtoa_r+0xc78>
  8077ac:	d8000815 	stw	zero,32(sp)
  8077b0:	d9c00517 	ldw	r7,20(sp)
  8077b4:	38026416 	blt	r7,zero,808148 <_dtoa_r+0xc58>
  8077b8:	b1ed883a 	add	r22,r22,r7
  8077bc:	d9c00d15 	stw	r7,52(sp)
  8077c0:	d8000a15 	stw	zero,40(sp)
  8077c4:	d9800317 	ldw	r6,12(sp)
  8077c8:	00800244 	movi	r2,9
  8077cc:	11811436 	bltu	r2,r6,807c20 <_dtoa_r+0x730>
  8077d0:	00800144 	movi	r2,5
  8077d4:	1184e10e 	bge	r2,r6,808b5c <_dtoa_r+0x166c>
  8077d8:	31bfff04 	addi	r6,r6,-4
  8077dc:	d9800315 	stw	r6,12(sp)
  8077e0:	0023883a 	mov	r17,zero
  8077e4:	d9800317 	ldw	r6,12(sp)
  8077e8:	008000c4 	movi	r2,3
  8077ec:	30836726 	beq	r6,r2,80858c <_dtoa_r+0x109c>
  8077f0:	1183410e 	bge	r2,r6,8084f8 <_dtoa_r+0x1008>
  8077f4:	d9c00317 	ldw	r7,12(sp)
  8077f8:	00800104 	movi	r2,4
  8077fc:	38827c26 	beq	r7,r2,8081f0 <_dtoa_r+0xd00>
  807800:	00800144 	movi	r2,5
  807804:	3884c41e 	bne	r7,r2,808b18 <_dtoa_r+0x1628>
  807808:	00800044 	movi	r2,1
  80780c:	d8800b15 	stw	r2,44(sp)
  807810:	d8c00517 	ldw	r3,20(sp)
  807814:	d9002217 	ldw	r4,136(sp)
  807818:	1907883a 	add	r3,r3,r4
  80781c:	19800044 	addi	r6,r3,1
  807820:	d8c00c15 	stw	r3,48(sp)
  807824:	d9800615 	stw	r6,24(sp)
  807828:	0183a40e 	bge	zero,r6,8086bc <_dtoa_r+0x11cc>
  80782c:	d9800617 	ldw	r6,24(sp)
  807830:	3021883a 	mov	r16,r6
  807834:	e0001115 	stw	zero,68(fp)
  807838:	008005c4 	movi	r2,23
  80783c:	1184c92e 	bgeu	r2,r6,808b64 <_dtoa_r+0x1674>
  807840:	00c00044 	movi	r3,1
  807844:	00800104 	movi	r2,4
  807848:	1085883a 	add	r2,r2,r2
  80784c:	11000504 	addi	r4,r2,20
  807850:	180b883a 	mov	r5,r3
  807854:	18c00044 	addi	r3,r3,1
  807858:	313ffb2e 	bgeu	r6,r4,807848 <__alt_data_end+0xff807848>
  80785c:	e1401115 	stw	r5,68(fp)
  807860:	e009883a 	mov	r4,fp
  807864:	080ab8c0 	call	80ab8c <_Balloc>
  807868:	d8800715 	stw	r2,28(sp)
  80786c:	e0801015 	stw	r2,64(fp)
  807870:	00800384 	movi	r2,14
  807874:	1400f736 	bltu	r2,r16,807c54 <_dtoa_r+0x764>
  807878:	8800f626 	beq	r17,zero,807c54 <_dtoa_r+0x764>
  80787c:	d9c00517 	ldw	r7,20(sp)
  807880:	01c39a0e 	bge	zero,r7,8086ec <_dtoa_r+0x11fc>
  807884:	388003cc 	andi	r2,r7,15
  807888:	100490fa 	slli	r2,r2,3
  80788c:	382bd13a 	srai	r21,r7,4
  807890:	00c02074 	movhi	r3,129
  807894:	18c93b04 	addi	r3,r3,9452
  807898:	1885883a 	add	r2,r3,r2
  80789c:	a8c0040c 	andi	r3,r21,16
  8078a0:	12400017 	ldw	r9,0(r2)
  8078a4:	12000117 	ldw	r8,4(r2)
  8078a8:	18037926 	beq	r3,zero,808690 <_dtoa_r+0x11a0>
  8078ac:	00802074 	movhi	r2,129
  8078b0:	10893104 	addi	r2,r2,9412
  8078b4:	11800817 	ldw	r6,32(r2)
  8078b8:	11c00917 	ldw	r7,36(r2)
  8078bc:	9009883a 	mov	r4,r18
  8078c0:	980b883a 	mov	r5,r19
  8078c4:	da001715 	stw	r8,92(sp)
  8078c8:	da401615 	stw	r9,88(sp)
  8078cc:	080edf80 	call	80edf8 <__divdf3>
  8078d0:	da001717 	ldw	r8,92(sp)
  8078d4:	da401617 	ldw	r9,88(sp)
  8078d8:	ad4003cc 	andi	r21,r21,15
  8078dc:	040000c4 	movi	r16,3
  8078e0:	1023883a 	mov	r17,r2
  8078e4:	1829883a 	mov	r20,r3
  8078e8:	a8001126 	beq	r21,zero,807930 <_dtoa_r+0x440>
  8078ec:	05c02074 	movhi	r23,129
  8078f0:	bdc93104 	addi	r23,r23,9412
  8078f4:	4805883a 	mov	r2,r9
  8078f8:	4007883a 	mov	r3,r8
  8078fc:	a980004c 	andi	r6,r21,1
  807900:	1009883a 	mov	r4,r2
  807904:	a82bd07a 	srai	r21,r21,1
  807908:	180b883a 	mov	r5,r3
  80790c:	30000426 	beq	r6,zero,807920 <_dtoa_r+0x430>
  807910:	b9800017 	ldw	r6,0(r23)
  807914:	b9c00117 	ldw	r7,4(r23)
  807918:	84000044 	addi	r16,r16,1
  80791c:	08038680 	call	803868 <__muldf3>
  807920:	bdc00204 	addi	r23,r23,8
  807924:	a83ff51e 	bne	r21,zero,8078fc <__alt_data_end+0xff8078fc>
  807928:	1013883a 	mov	r9,r2
  80792c:	1811883a 	mov	r8,r3
  807930:	480d883a 	mov	r6,r9
  807934:	400f883a 	mov	r7,r8
  807938:	8809883a 	mov	r4,r17
  80793c:	a00b883a 	mov	r5,r20
  807940:	080edf80 	call	80edf8 <__divdf3>
  807944:	d8800f15 	stw	r2,60(sp)
  807948:	d8c01015 	stw	r3,64(sp)
  80794c:	d8c00e17 	ldw	r3,56(sp)
  807950:	18000626 	beq	r3,zero,80796c <_dtoa_r+0x47c>
  807954:	d9000f17 	ldw	r4,60(sp)
  807958:	d9401017 	ldw	r5,64(sp)
  80795c:	000d883a 	mov	r6,zero
  807960:	01cffc34 	movhi	r7,16368
  807964:	080f6e00 	call	80f6e0 <__ledf2>
  807968:	10040b16 	blt	r2,zero,808998 <_dtoa_r+0x14a8>
  80796c:	8009883a 	mov	r4,r16
  807970:	08048fc0 	call	8048fc <__floatsidf>
  807974:	d9800f17 	ldw	r6,60(sp)
  807978:	d9c01017 	ldw	r7,64(sp)
  80797c:	1009883a 	mov	r4,r2
  807980:	180b883a 	mov	r5,r3
  807984:	08038680 	call	803868 <__muldf3>
  807988:	000d883a 	mov	r6,zero
  80798c:	01d00734 	movhi	r7,16412
  807990:	1009883a 	mov	r4,r2
  807994:	180b883a 	mov	r5,r3
  807998:	0802e580 	call	802e58 <__adddf3>
  80799c:	1021883a 	mov	r16,r2
  8079a0:	d8800617 	ldw	r2,24(sp)
  8079a4:	047f3034 	movhi	r17,64704
  8079a8:	1c63883a 	add	r17,r3,r17
  8079ac:	10031826 	beq	r2,zero,808610 <_dtoa_r+0x1120>
  8079b0:	d8c00517 	ldw	r3,20(sp)
  8079b4:	db000617 	ldw	r12,24(sp)
  8079b8:	d8c01315 	stw	r3,76(sp)
  8079bc:	d9000b17 	ldw	r4,44(sp)
  8079c0:	20038f26 	beq	r4,zero,808800 <_dtoa_r+0x1310>
  8079c4:	60bfffc4 	addi	r2,r12,-1
  8079c8:	100490fa 	slli	r2,r2,3
  8079cc:	00c02074 	movhi	r3,129
  8079d0:	18c93b04 	addi	r3,r3,9452
  8079d4:	1885883a 	add	r2,r3,r2
  8079d8:	11800017 	ldw	r6,0(r2)
  8079dc:	11c00117 	ldw	r7,4(r2)
  8079e0:	d8800717 	ldw	r2,28(sp)
  8079e4:	0009883a 	mov	r4,zero
  8079e8:	014ff834 	movhi	r5,16352
  8079ec:	db001615 	stw	r12,88(sp)
  8079f0:	15c00044 	addi	r23,r2,1
  8079f4:	080edf80 	call	80edf8 <__divdf3>
  8079f8:	800d883a 	mov	r6,r16
  8079fc:	880f883a 	mov	r7,r17
  807a00:	1009883a 	mov	r4,r2
  807a04:	180b883a 	mov	r5,r3
  807a08:	0803f800 	call	803f80 <__subdf3>
  807a0c:	d9401017 	ldw	r5,64(sp)
  807a10:	d9000f17 	ldw	r4,60(sp)
  807a14:	102b883a 	mov	r21,r2
  807a18:	d8c01215 	stw	r3,72(sp)
  807a1c:	080487c0 	call	80487c <__fixdfsi>
  807a20:	1009883a 	mov	r4,r2
  807a24:	1029883a 	mov	r20,r2
  807a28:	08048fc0 	call	8048fc <__floatsidf>
  807a2c:	d9000f17 	ldw	r4,60(sp)
  807a30:	d9401017 	ldw	r5,64(sp)
  807a34:	100d883a 	mov	r6,r2
  807a38:	180f883a 	mov	r7,r3
  807a3c:	0803f800 	call	803f80 <__subdf3>
  807a40:	1823883a 	mov	r17,r3
  807a44:	d8c00717 	ldw	r3,28(sp)
  807a48:	d9401217 	ldw	r5,72(sp)
  807a4c:	a2000c04 	addi	r8,r20,48
  807a50:	1021883a 	mov	r16,r2
  807a54:	1a000005 	stb	r8,0(r3)
  807a58:	800d883a 	mov	r6,r16
  807a5c:	880f883a 	mov	r7,r17
  807a60:	a809883a 	mov	r4,r21
  807a64:	4029883a 	mov	r20,r8
  807a68:	080378c0 	call	80378c <__gedf2>
  807a6c:	00841d16 	blt	zero,r2,808ae4 <_dtoa_r+0x15f4>
  807a70:	800d883a 	mov	r6,r16
  807a74:	880f883a 	mov	r7,r17
  807a78:	0009883a 	mov	r4,zero
  807a7c:	014ffc34 	movhi	r5,16368
  807a80:	0803f800 	call	803f80 <__subdf3>
  807a84:	d9401217 	ldw	r5,72(sp)
  807a88:	100d883a 	mov	r6,r2
  807a8c:	180f883a 	mov	r7,r3
  807a90:	a809883a 	mov	r4,r21
  807a94:	080378c0 	call	80378c <__gedf2>
  807a98:	db001617 	ldw	r12,88(sp)
  807a9c:	00840e16 	blt	zero,r2,808ad8 <_dtoa_r+0x15e8>
  807aa0:	00800044 	movi	r2,1
  807aa4:	13006b0e 	bge	r2,r12,807c54 <_dtoa_r+0x764>
  807aa8:	d9000717 	ldw	r4,28(sp)
  807aac:	dd800f15 	stw	r22,60(sp)
  807ab0:	dcc01015 	stw	r19,64(sp)
  807ab4:	2319883a 	add	r12,r4,r12
  807ab8:	dcc01217 	ldw	r19,72(sp)
  807abc:	602d883a 	mov	r22,r12
  807ac0:	dc801215 	stw	r18,72(sp)
  807ac4:	b825883a 	mov	r18,r23
  807ac8:	00000906 	br	807af0 <_dtoa_r+0x600>
  807acc:	0803f800 	call	803f80 <__subdf3>
  807ad0:	a80d883a 	mov	r6,r21
  807ad4:	980f883a 	mov	r7,r19
  807ad8:	1009883a 	mov	r4,r2
  807adc:	180b883a 	mov	r5,r3
  807ae0:	080f6e00 	call	80f6e0 <__ledf2>
  807ae4:	1003e816 	blt	r2,zero,808a88 <_dtoa_r+0x1598>
  807ae8:	b825883a 	mov	r18,r23
  807aec:	bd83e926 	beq	r23,r22,808a94 <_dtoa_r+0x15a4>
  807af0:	a809883a 	mov	r4,r21
  807af4:	980b883a 	mov	r5,r19
  807af8:	000d883a 	mov	r6,zero
  807afc:	01d00934 	movhi	r7,16420
  807b00:	08038680 	call	803868 <__muldf3>
  807b04:	000d883a 	mov	r6,zero
  807b08:	01d00934 	movhi	r7,16420
  807b0c:	8009883a 	mov	r4,r16
  807b10:	880b883a 	mov	r5,r17
  807b14:	102b883a 	mov	r21,r2
  807b18:	1827883a 	mov	r19,r3
  807b1c:	08038680 	call	803868 <__muldf3>
  807b20:	180b883a 	mov	r5,r3
  807b24:	1009883a 	mov	r4,r2
  807b28:	1821883a 	mov	r16,r3
  807b2c:	1023883a 	mov	r17,r2
  807b30:	080487c0 	call	80487c <__fixdfsi>
  807b34:	1009883a 	mov	r4,r2
  807b38:	1029883a 	mov	r20,r2
  807b3c:	08048fc0 	call	8048fc <__floatsidf>
  807b40:	8809883a 	mov	r4,r17
  807b44:	800b883a 	mov	r5,r16
  807b48:	100d883a 	mov	r6,r2
  807b4c:	180f883a 	mov	r7,r3
  807b50:	0803f800 	call	803f80 <__subdf3>
  807b54:	a5000c04 	addi	r20,r20,48
  807b58:	a80d883a 	mov	r6,r21
  807b5c:	980f883a 	mov	r7,r19
  807b60:	1009883a 	mov	r4,r2
  807b64:	180b883a 	mov	r5,r3
  807b68:	95000005 	stb	r20,0(r18)
  807b6c:	1021883a 	mov	r16,r2
  807b70:	1823883a 	mov	r17,r3
  807b74:	080f6e00 	call	80f6e0 <__ledf2>
  807b78:	bdc00044 	addi	r23,r23,1
  807b7c:	800d883a 	mov	r6,r16
  807b80:	880f883a 	mov	r7,r17
  807b84:	0009883a 	mov	r4,zero
  807b88:	014ffc34 	movhi	r5,16368
  807b8c:	103fcf0e 	bge	r2,zero,807acc <__alt_data_end+0xff807acc>
  807b90:	d8c01317 	ldw	r3,76(sp)
  807b94:	d8c00515 	stw	r3,20(sp)
  807b98:	d9400917 	ldw	r5,36(sp)
  807b9c:	e009883a 	mov	r4,fp
  807ba0:	080ac340 	call	80ac34 <_Bfree>
  807ba4:	d9000517 	ldw	r4,20(sp)
  807ba8:	d9802317 	ldw	r6,140(sp)
  807bac:	d9c02517 	ldw	r7,148(sp)
  807bb0:	b8000005 	stb	zero,0(r23)
  807bb4:	20800044 	addi	r2,r4,1
  807bb8:	30800015 	stw	r2,0(r6)
  807bbc:	3802aa26 	beq	r7,zero,808668 <_dtoa_r+0x1178>
  807bc0:	3dc00015 	stw	r23,0(r7)
  807bc4:	d8800717 	ldw	r2,28(sp)
  807bc8:	003e7906 	br	8075b0 <__alt_data_end+0xff8075b0>
  807bcc:	00800434 	movhi	r2,16
  807bd0:	10bfffc4 	addi	r2,r2,-1
  807bd4:	88a2703a 	and	r17,r17,r2
  807bd8:	883e851e 	bne	r17,zero,8075f0 <__alt_data_end+0xff8075f0>
  807bdc:	00802074 	movhi	r2,129
  807be0:	10891c04 	addi	r2,r2,9328
  807be4:	003e8406 	br	8075f8 <__alt_data_end+0xff8075f8>
  807be8:	10c00204 	addi	r3,r2,8
  807bec:	003e8706 	br	80760c <__alt_data_end+0xff80760c>
  807bf0:	01400434 	movhi	r5,16
  807bf4:	297fffc4 	addi	r5,r5,-1
  807bf8:	994a703a 	and	r5,r19,r5
  807bfc:	9009883a 	mov	r4,r18
  807c00:	843f0044 	addi	r16,r16,-1023
  807c04:	294ffc34 	orhi	r5,r5,16368
  807c08:	dd800217 	ldw	r22,8(sp)
  807c0c:	d8001115 	stw	zero,68(sp)
  807c10:	003ea506 	br	8076a8 <__alt_data_end+0xff8076a8>
  807c14:	00802074 	movhi	r2,129
  807c18:	10891304 	addi	r2,r2,9292
  807c1c:	003e6406 	br	8075b0 <__alt_data_end+0xff8075b0>
  807c20:	e0001115 	stw	zero,68(fp)
  807c24:	000b883a 	mov	r5,zero
  807c28:	e009883a 	mov	r4,fp
  807c2c:	080ab8c0 	call	80ab8c <_Balloc>
  807c30:	01bfffc4 	movi	r6,-1
  807c34:	01c00044 	movi	r7,1
  807c38:	d8800715 	stw	r2,28(sp)
  807c3c:	d9800c15 	stw	r6,48(sp)
  807c40:	e0801015 	stw	r2,64(fp)
  807c44:	d8000315 	stw	zero,12(sp)
  807c48:	d9c00b15 	stw	r7,44(sp)
  807c4c:	d9800615 	stw	r6,24(sp)
  807c50:	d8002215 	stw	zero,136(sp)
  807c54:	d8800117 	ldw	r2,4(sp)
  807c58:	10008916 	blt	r2,zero,807e80 <_dtoa_r+0x990>
  807c5c:	d9000517 	ldw	r4,20(sp)
  807c60:	00c00384 	movi	r3,14
  807c64:	19008616 	blt	r3,r4,807e80 <_dtoa_r+0x990>
  807c68:	200490fa 	slli	r2,r4,3
  807c6c:	00c02074 	movhi	r3,129
  807c70:	d9802217 	ldw	r6,136(sp)
  807c74:	18c93b04 	addi	r3,r3,9452
  807c78:	1885883a 	add	r2,r3,r2
  807c7c:	14000017 	ldw	r16,0(r2)
  807c80:	14400117 	ldw	r17,4(r2)
  807c84:	30016316 	blt	r6,zero,808214 <_dtoa_r+0xd24>
  807c88:	800d883a 	mov	r6,r16
  807c8c:	880f883a 	mov	r7,r17
  807c90:	9009883a 	mov	r4,r18
  807c94:	980b883a 	mov	r5,r19
  807c98:	080edf80 	call	80edf8 <__divdf3>
  807c9c:	180b883a 	mov	r5,r3
  807ca0:	1009883a 	mov	r4,r2
  807ca4:	080487c0 	call	80487c <__fixdfsi>
  807ca8:	1009883a 	mov	r4,r2
  807cac:	102b883a 	mov	r21,r2
  807cb0:	08048fc0 	call	8048fc <__floatsidf>
  807cb4:	800d883a 	mov	r6,r16
  807cb8:	880f883a 	mov	r7,r17
  807cbc:	1009883a 	mov	r4,r2
  807cc0:	180b883a 	mov	r5,r3
  807cc4:	08038680 	call	803868 <__muldf3>
  807cc8:	100d883a 	mov	r6,r2
  807ccc:	180f883a 	mov	r7,r3
  807cd0:	9009883a 	mov	r4,r18
  807cd4:	980b883a 	mov	r5,r19
  807cd8:	0803f800 	call	803f80 <__subdf3>
  807cdc:	d9c00717 	ldw	r7,28(sp)
  807ce0:	1009883a 	mov	r4,r2
  807ce4:	a8800c04 	addi	r2,r21,48
  807ce8:	38800005 	stb	r2,0(r7)
  807cec:	3dc00044 	addi	r23,r7,1
  807cf0:	d9c00617 	ldw	r7,24(sp)
  807cf4:	01800044 	movi	r6,1
  807cf8:	180b883a 	mov	r5,r3
  807cfc:	2005883a 	mov	r2,r4
  807d00:	39803826 	beq	r7,r6,807de4 <_dtoa_r+0x8f4>
  807d04:	000d883a 	mov	r6,zero
  807d08:	01d00934 	movhi	r7,16420
  807d0c:	08038680 	call	803868 <__muldf3>
  807d10:	000d883a 	mov	r6,zero
  807d14:	000f883a 	mov	r7,zero
  807d18:	1009883a 	mov	r4,r2
  807d1c:	180b883a 	mov	r5,r3
  807d20:	1025883a 	mov	r18,r2
  807d24:	1827883a 	mov	r19,r3
  807d28:	08037040 	call	803704 <__eqdf2>
  807d2c:	103f9a26 	beq	r2,zero,807b98 <__alt_data_end+0xff807b98>
  807d30:	d9c00617 	ldw	r7,24(sp)
  807d34:	d8c00717 	ldw	r3,28(sp)
  807d38:	b829883a 	mov	r20,r23
  807d3c:	38bfffc4 	addi	r2,r7,-1
  807d40:	18ad883a 	add	r22,r3,r2
  807d44:	00000a06 	br	807d70 <_dtoa_r+0x880>
  807d48:	08038680 	call	803868 <__muldf3>
  807d4c:	000d883a 	mov	r6,zero
  807d50:	000f883a 	mov	r7,zero
  807d54:	1009883a 	mov	r4,r2
  807d58:	180b883a 	mov	r5,r3
  807d5c:	1025883a 	mov	r18,r2
  807d60:	1827883a 	mov	r19,r3
  807d64:	b829883a 	mov	r20,r23
  807d68:	08037040 	call	803704 <__eqdf2>
  807d6c:	103f8a26 	beq	r2,zero,807b98 <__alt_data_end+0xff807b98>
  807d70:	800d883a 	mov	r6,r16
  807d74:	880f883a 	mov	r7,r17
  807d78:	9009883a 	mov	r4,r18
  807d7c:	980b883a 	mov	r5,r19
  807d80:	080edf80 	call	80edf8 <__divdf3>
  807d84:	180b883a 	mov	r5,r3
  807d88:	1009883a 	mov	r4,r2
  807d8c:	080487c0 	call	80487c <__fixdfsi>
  807d90:	1009883a 	mov	r4,r2
  807d94:	102b883a 	mov	r21,r2
  807d98:	08048fc0 	call	8048fc <__floatsidf>
  807d9c:	800d883a 	mov	r6,r16
  807da0:	880f883a 	mov	r7,r17
  807da4:	1009883a 	mov	r4,r2
  807da8:	180b883a 	mov	r5,r3
  807dac:	08038680 	call	803868 <__muldf3>
  807db0:	100d883a 	mov	r6,r2
  807db4:	180f883a 	mov	r7,r3
  807db8:	9009883a 	mov	r4,r18
  807dbc:	980b883a 	mov	r5,r19
  807dc0:	0803f800 	call	803f80 <__subdf3>
  807dc4:	aa000c04 	addi	r8,r21,48
  807dc8:	a2000005 	stb	r8,0(r20)
  807dcc:	000d883a 	mov	r6,zero
  807dd0:	01d00934 	movhi	r7,16420
  807dd4:	1009883a 	mov	r4,r2
  807dd8:	180b883a 	mov	r5,r3
  807ddc:	a5c00044 	addi	r23,r20,1
  807de0:	b53fd91e 	bne	r22,r20,807d48 <__alt_data_end+0xff807d48>
  807de4:	100d883a 	mov	r6,r2
  807de8:	180f883a 	mov	r7,r3
  807dec:	1009883a 	mov	r4,r2
  807df0:	180b883a 	mov	r5,r3
  807df4:	0802e580 	call	802e58 <__adddf3>
  807df8:	100d883a 	mov	r6,r2
  807dfc:	180f883a 	mov	r7,r3
  807e00:	8009883a 	mov	r4,r16
  807e04:	880b883a 	mov	r5,r17
  807e08:	1027883a 	mov	r19,r2
  807e0c:	1825883a 	mov	r18,r3
  807e10:	080f6e00 	call	80f6e0 <__ledf2>
  807e14:	10000816 	blt	r2,zero,807e38 <_dtoa_r+0x948>
  807e18:	980d883a 	mov	r6,r19
  807e1c:	900f883a 	mov	r7,r18
  807e20:	8009883a 	mov	r4,r16
  807e24:	880b883a 	mov	r5,r17
  807e28:	08037040 	call	803704 <__eqdf2>
  807e2c:	103f5a1e 	bne	r2,zero,807b98 <__alt_data_end+0xff807b98>
  807e30:	ad40004c 	andi	r21,r21,1
  807e34:	a83f5826 	beq	r21,zero,807b98 <__alt_data_end+0xff807b98>
  807e38:	bd3fffc3 	ldbu	r20,-1(r23)
  807e3c:	b8bfffc4 	addi	r2,r23,-1
  807e40:	1007883a 	mov	r3,r2
  807e44:	01400e44 	movi	r5,57
  807e48:	d9800717 	ldw	r6,28(sp)
  807e4c:	00000506 	br	807e64 <_dtoa_r+0x974>
  807e50:	18ffffc4 	addi	r3,r3,-1
  807e54:	11824726 	beq	r2,r6,808774 <_dtoa_r+0x1284>
  807e58:	1d000003 	ldbu	r20,0(r3)
  807e5c:	102f883a 	mov	r23,r2
  807e60:	10bfffc4 	addi	r2,r2,-1
  807e64:	a1003fcc 	andi	r4,r20,255
  807e68:	2100201c 	xori	r4,r4,128
  807e6c:	213fe004 	addi	r4,r4,-128
  807e70:	217ff726 	beq	r4,r5,807e50 <__alt_data_end+0xff807e50>
  807e74:	a2000044 	addi	r8,r20,1
  807e78:	12000005 	stb	r8,0(r2)
  807e7c:	003f4606 	br	807b98 <__alt_data_end+0xff807b98>
  807e80:	d9000b17 	ldw	r4,44(sp)
  807e84:	2000c826 	beq	r4,zero,8081a8 <_dtoa_r+0xcb8>
  807e88:	d9800317 	ldw	r6,12(sp)
  807e8c:	00c00044 	movi	r3,1
  807e90:	1980f90e 	bge	r3,r6,808278 <_dtoa_r+0xd88>
  807e94:	d8800617 	ldw	r2,24(sp)
  807e98:	d8c00a17 	ldw	r3,40(sp)
  807e9c:	157fffc4 	addi	r21,r2,-1
  807ea0:	1d41f316 	blt	r3,r21,808670 <_dtoa_r+0x1180>
  807ea4:	1d6bc83a 	sub	r21,r3,r21
  807ea8:	d9c00617 	ldw	r7,24(sp)
  807eac:	3802aa16 	blt	r7,zero,808958 <_dtoa_r+0x1468>
  807eb0:	dd000817 	ldw	r20,32(sp)
  807eb4:	d8800617 	ldw	r2,24(sp)
  807eb8:	d8c00817 	ldw	r3,32(sp)
  807ebc:	01400044 	movi	r5,1
  807ec0:	e009883a 	mov	r4,fp
  807ec4:	1887883a 	add	r3,r3,r2
  807ec8:	d8c00815 	stw	r3,32(sp)
  807ecc:	b0ad883a 	add	r22,r22,r2
  807ed0:	080af980 	call	80af98 <__i2b>
  807ed4:	1023883a 	mov	r17,r2
  807ed8:	a0000826 	beq	r20,zero,807efc <_dtoa_r+0xa0c>
  807edc:	0580070e 	bge	zero,r22,807efc <_dtoa_r+0xa0c>
  807ee0:	a005883a 	mov	r2,r20
  807ee4:	b500b916 	blt	r22,r20,8081cc <_dtoa_r+0xcdc>
  807ee8:	d9000817 	ldw	r4,32(sp)
  807eec:	a0a9c83a 	sub	r20,r20,r2
  807ef0:	b0adc83a 	sub	r22,r22,r2
  807ef4:	2089c83a 	sub	r4,r4,r2
  807ef8:	d9000815 	stw	r4,32(sp)
  807efc:	d9800a17 	ldw	r6,40(sp)
  807f00:	0181810e 	bge	zero,r6,808508 <_dtoa_r+0x1018>
  807f04:	d9c00b17 	ldw	r7,44(sp)
  807f08:	3800b326 	beq	r7,zero,8081d8 <_dtoa_r+0xce8>
  807f0c:	a800b226 	beq	r21,zero,8081d8 <_dtoa_r+0xce8>
  807f10:	880b883a 	mov	r5,r17
  807f14:	a80d883a 	mov	r6,r21
  807f18:	e009883a 	mov	r4,fp
  807f1c:	080b1cc0 	call	80b1cc <__pow5mult>
  807f20:	d9800917 	ldw	r6,36(sp)
  807f24:	100b883a 	mov	r5,r2
  807f28:	e009883a 	mov	r4,fp
  807f2c:	1023883a 	mov	r17,r2
  807f30:	080afd40 	call	80afd4 <__multiply>
  807f34:	1021883a 	mov	r16,r2
  807f38:	d8800a17 	ldw	r2,40(sp)
  807f3c:	d9400917 	ldw	r5,36(sp)
  807f40:	e009883a 	mov	r4,fp
  807f44:	1545c83a 	sub	r2,r2,r21
  807f48:	d8800a15 	stw	r2,40(sp)
  807f4c:	080ac340 	call	80ac34 <_Bfree>
  807f50:	d8c00a17 	ldw	r3,40(sp)
  807f54:	18009f1e 	bne	r3,zero,8081d4 <_dtoa_r+0xce4>
  807f58:	05c00044 	movi	r23,1
  807f5c:	e009883a 	mov	r4,fp
  807f60:	b80b883a 	mov	r5,r23
  807f64:	080af980 	call	80af98 <__i2b>
  807f68:	d9000d17 	ldw	r4,52(sp)
  807f6c:	102b883a 	mov	r21,r2
  807f70:	2000ce26 	beq	r4,zero,8082ac <_dtoa_r+0xdbc>
  807f74:	200d883a 	mov	r6,r4
  807f78:	100b883a 	mov	r5,r2
  807f7c:	e009883a 	mov	r4,fp
  807f80:	080b1cc0 	call	80b1cc <__pow5mult>
  807f84:	d9800317 	ldw	r6,12(sp)
  807f88:	102b883a 	mov	r21,r2
  807f8c:	b981810e 	bge	r23,r6,808594 <_dtoa_r+0x10a4>
  807f90:	0027883a 	mov	r19,zero
  807f94:	a8800417 	ldw	r2,16(r21)
  807f98:	05c00804 	movi	r23,32
  807f9c:	10800104 	addi	r2,r2,4
  807fa0:	1085883a 	add	r2,r2,r2
  807fa4:	1085883a 	add	r2,r2,r2
  807fa8:	a885883a 	add	r2,r21,r2
  807fac:	11000017 	ldw	r4,0(r2)
  807fb0:	080ae800 	call	80ae80 <__hi0bits>
  807fb4:	b885c83a 	sub	r2,r23,r2
  807fb8:	1585883a 	add	r2,r2,r22
  807fbc:	108007cc 	andi	r2,r2,31
  807fc0:	1000b326 	beq	r2,zero,808290 <_dtoa_r+0xda0>
  807fc4:	00c00804 	movi	r3,32
  807fc8:	1887c83a 	sub	r3,r3,r2
  807fcc:	01000104 	movi	r4,4
  807fd0:	20c2cd0e 	bge	r4,r3,808b08 <_dtoa_r+0x1618>
  807fd4:	00c00704 	movi	r3,28
  807fd8:	1885c83a 	sub	r2,r3,r2
  807fdc:	d8c00817 	ldw	r3,32(sp)
  807fe0:	a0a9883a 	add	r20,r20,r2
  807fe4:	b0ad883a 	add	r22,r22,r2
  807fe8:	1887883a 	add	r3,r3,r2
  807fec:	d8c00815 	stw	r3,32(sp)
  807ff0:	d9800817 	ldw	r6,32(sp)
  807ff4:	0180040e 	bge	zero,r6,808008 <_dtoa_r+0xb18>
  807ff8:	800b883a 	mov	r5,r16
  807ffc:	e009883a 	mov	r4,fp
  808000:	080b30c0 	call	80b30c <__lshift>
  808004:	1021883a 	mov	r16,r2
  808008:	0580050e 	bge	zero,r22,808020 <_dtoa_r+0xb30>
  80800c:	a80b883a 	mov	r5,r21
  808010:	b00d883a 	mov	r6,r22
  808014:	e009883a 	mov	r4,fp
  808018:	080b30c0 	call	80b30c <__lshift>
  80801c:	102b883a 	mov	r21,r2
  808020:	d9c00e17 	ldw	r7,56(sp)
  808024:	3801211e 	bne	r7,zero,8084ac <_dtoa_r+0xfbc>
  808028:	d9800617 	ldw	r6,24(sp)
  80802c:	0181380e 	bge	zero,r6,808510 <_dtoa_r+0x1020>
  808030:	d8c00b17 	ldw	r3,44(sp)
  808034:	1800ab1e 	bne	r3,zero,8082e4 <_dtoa_r+0xdf4>
  808038:	dc800717 	ldw	r18,28(sp)
  80803c:	dcc00617 	ldw	r19,24(sp)
  808040:	9029883a 	mov	r20,r18
  808044:	00000206 	br	808050 <_dtoa_r+0xb60>
  808048:	080ac5c0 	call	80ac5c <__multadd>
  80804c:	1021883a 	mov	r16,r2
  808050:	a80b883a 	mov	r5,r21
  808054:	8009883a 	mov	r4,r16
  808058:	08072f00 	call	8072f0 <quorem>
  80805c:	10800c04 	addi	r2,r2,48
  808060:	90800005 	stb	r2,0(r18)
  808064:	94800044 	addi	r18,r18,1
  808068:	9507c83a 	sub	r3,r18,r20
  80806c:	000f883a 	mov	r7,zero
  808070:	01800284 	movi	r6,10
  808074:	800b883a 	mov	r5,r16
  808078:	e009883a 	mov	r4,fp
  80807c:	1cfff216 	blt	r3,r19,808048 <__alt_data_end+0xff808048>
  808080:	1011883a 	mov	r8,r2
  808084:	d8800617 	ldw	r2,24(sp)
  808088:	0082370e 	bge	zero,r2,808968 <_dtoa_r+0x1478>
  80808c:	d9000717 	ldw	r4,28(sp)
  808090:	0025883a 	mov	r18,zero
  808094:	20af883a 	add	r23,r4,r2
  808098:	01800044 	movi	r6,1
  80809c:	800b883a 	mov	r5,r16
  8080a0:	e009883a 	mov	r4,fp
  8080a4:	da001715 	stw	r8,92(sp)
  8080a8:	080b30c0 	call	80b30c <__lshift>
  8080ac:	a80b883a 	mov	r5,r21
  8080b0:	1009883a 	mov	r4,r2
  8080b4:	d8800915 	stw	r2,36(sp)
  8080b8:	080b4540 	call	80b454 <__mcmp>
  8080bc:	da001717 	ldw	r8,92(sp)
  8080c0:	0081800e 	bge	zero,r2,8086c4 <_dtoa_r+0x11d4>
  8080c4:	b93fffc3 	ldbu	r4,-1(r23)
  8080c8:	b8bfffc4 	addi	r2,r23,-1
  8080cc:	1007883a 	mov	r3,r2
  8080d0:	01800e44 	movi	r6,57
  8080d4:	d9c00717 	ldw	r7,28(sp)
  8080d8:	00000506 	br	8080f0 <_dtoa_r+0xc00>
  8080dc:	18ffffc4 	addi	r3,r3,-1
  8080e0:	11c12326 	beq	r2,r7,808570 <_dtoa_r+0x1080>
  8080e4:	19000003 	ldbu	r4,0(r3)
  8080e8:	102f883a 	mov	r23,r2
  8080ec:	10bfffc4 	addi	r2,r2,-1
  8080f0:	21403fcc 	andi	r5,r4,255
  8080f4:	2940201c 	xori	r5,r5,128
  8080f8:	297fe004 	addi	r5,r5,-128
  8080fc:	29bff726 	beq	r5,r6,8080dc <__alt_data_end+0xff8080dc>
  808100:	21000044 	addi	r4,r4,1
  808104:	11000005 	stb	r4,0(r2)
  808108:	a80b883a 	mov	r5,r21
  80810c:	e009883a 	mov	r4,fp
  808110:	080ac340 	call	80ac34 <_Bfree>
  808114:	883ea026 	beq	r17,zero,807b98 <__alt_data_end+0xff807b98>
  808118:	90000426 	beq	r18,zero,80812c <_dtoa_r+0xc3c>
  80811c:	94400326 	beq	r18,r17,80812c <_dtoa_r+0xc3c>
  808120:	900b883a 	mov	r5,r18
  808124:	e009883a 	mov	r4,fp
  808128:	080ac340 	call	80ac34 <_Bfree>
  80812c:	880b883a 	mov	r5,r17
  808130:	e009883a 	mov	r4,fp
  808134:	080ac340 	call	80ac34 <_Bfree>
  808138:	003e9706 	br	807b98 <__alt_data_end+0xff807b98>
  80813c:	01800044 	movi	r6,1
  808140:	d9800e15 	stw	r6,56(sp)
  808144:	003d9606 	br	8077a0 <__alt_data_end+0xff8077a0>
  808148:	d8800817 	ldw	r2,32(sp)
  80814c:	d8c00517 	ldw	r3,20(sp)
  808150:	d8000d15 	stw	zero,52(sp)
  808154:	10c5c83a 	sub	r2,r2,r3
  808158:	00c9c83a 	sub	r4,zero,r3
  80815c:	d8800815 	stw	r2,32(sp)
  808160:	d9000a15 	stw	r4,40(sp)
  808164:	003d9706 	br	8077c4 <__alt_data_end+0xff8077c4>
  808168:	05adc83a 	sub	r22,zero,r22
  80816c:	dd800815 	stw	r22,32(sp)
  808170:	002d883a 	mov	r22,zero
  808174:	003d8e06 	br	8077b0 <__alt_data_end+0xff8077b0>
  808178:	d9000517 	ldw	r4,20(sp)
  80817c:	08048fc0 	call	8048fc <__floatsidf>
  808180:	100d883a 	mov	r6,r2
  808184:	180f883a 	mov	r7,r3
  808188:	a009883a 	mov	r4,r20
  80818c:	880b883a 	mov	r5,r17
  808190:	08037040 	call	803704 <__eqdf2>
  808194:	103d7126 	beq	r2,zero,80775c <__alt_data_end+0xff80775c>
  808198:	d9c00517 	ldw	r7,20(sp)
  80819c:	39ffffc4 	addi	r7,r7,-1
  8081a0:	d9c00515 	stw	r7,20(sp)
  8081a4:	003d6d06 	br	80775c <__alt_data_end+0xff80775c>
  8081a8:	dd400a17 	ldw	r21,40(sp)
  8081ac:	dd000817 	ldw	r20,32(sp)
  8081b0:	0023883a 	mov	r17,zero
  8081b4:	003f4806 	br	807ed8 <__alt_data_end+0xff807ed8>
  8081b8:	10e3c83a 	sub	r17,r2,r3
  8081bc:	9448983a 	sll	r4,r18,r17
  8081c0:	003d3206 	br	80768c <__alt_data_end+0xff80768c>
  8081c4:	d8000e15 	stw	zero,56(sp)
  8081c8:	003d7506 	br	8077a0 <__alt_data_end+0xff8077a0>
  8081cc:	b005883a 	mov	r2,r22
  8081d0:	003f4506 	br	807ee8 <__alt_data_end+0xff807ee8>
  8081d4:	dc000915 	stw	r16,36(sp)
  8081d8:	d9800a17 	ldw	r6,40(sp)
  8081dc:	d9400917 	ldw	r5,36(sp)
  8081e0:	e009883a 	mov	r4,fp
  8081e4:	080b1cc0 	call	80b1cc <__pow5mult>
  8081e8:	1021883a 	mov	r16,r2
  8081ec:	003f5a06 	br	807f58 <__alt_data_end+0xff807f58>
  8081f0:	01c00044 	movi	r7,1
  8081f4:	d9c00b15 	stw	r7,44(sp)
  8081f8:	d8802217 	ldw	r2,136(sp)
  8081fc:	0081280e 	bge	zero,r2,8086a0 <_dtoa_r+0x11b0>
  808200:	100d883a 	mov	r6,r2
  808204:	1021883a 	mov	r16,r2
  808208:	d8800c15 	stw	r2,48(sp)
  80820c:	d8800615 	stw	r2,24(sp)
  808210:	003d8806 	br	807834 <__alt_data_end+0xff807834>
  808214:	d8800617 	ldw	r2,24(sp)
  808218:	00be9b16 	blt	zero,r2,807c88 <__alt_data_end+0xff807c88>
  80821c:	10010f1e 	bne	r2,zero,80865c <_dtoa_r+0x116c>
  808220:	880b883a 	mov	r5,r17
  808224:	000d883a 	mov	r6,zero
  808228:	01d00534 	movhi	r7,16404
  80822c:	8009883a 	mov	r4,r16
  808230:	08038680 	call	803868 <__muldf3>
  808234:	900d883a 	mov	r6,r18
  808238:	980f883a 	mov	r7,r19
  80823c:	1009883a 	mov	r4,r2
  808240:	180b883a 	mov	r5,r3
  808244:	080378c0 	call	80378c <__gedf2>
  808248:	002b883a 	mov	r21,zero
  80824c:	0023883a 	mov	r17,zero
  808250:	1000bf16 	blt	r2,zero,808550 <_dtoa_r+0x1060>
  808254:	d9802217 	ldw	r6,136(sp)
  808258:	ddc00717 	ldw	r23,28(sp)
  80825c:	018c303a 	nor	r6,zero,r6
  808260:	d9800515 	stw	r6,20(sp)
  808264:	a80b883a 	mov	r5,r21
  808268:	e009883a 	mov	r4,fp
  80826c:	080ac340 	call	80ac34 <_Bfree>
  808270:	883e4926 	beq	r17,zero,807b98 <__alt_data_end+0xff807b98>
  808274:	003fad06 	br	80812c <__alt_data_end+0xff80812c>
  808278:	d9c01117 	ldw	r7,68(sp)
  80827c:	3801bc26 	beq	r7,zero,808970 <_dtoa_r+0x1480>
  808280:	10810cc4 	addi	r2,r2,1075
  808284:	dd400a17 	ldw	r21,40(sp)
  808288:	dd000817 	ldw	r20,32(sp)
  80828c:	003f0a06 	br	807eb8 <__alt_data_end+0xff807eb8>
  808290:	00800704 	movi	r2,28
  808294:	d9000817 	ldw	r4,32(sp)
  808298:	a0a9883a 	add	r20,r20,r2
  80829c:	b0ad883a 	add	r22,r22,r2
  8082a0:	2089883a 	add	r4,r4,r2
  8082a4:	d9000815 	stw	r4,32(sp)
  8082a8:	003f5106 	br	807ff0 <__alt_data_end+0xff807ff0>
  8082ac:	d8c00317 	ldw	r3,12(sp)
  8082b0:	b8c1fc0e 	bge	r23,r3,808aa4 <_dtoa_r+0x15b4>
  8082b4:	0027883a 	mov	r19,zero
  8082b8:	b805883a 	mov	r2,r23
  8082bc:	003f3e06 	br	807fb8 <__alt_data_end+0xff807fb8>
  8082c0:	880b883a 	mov	r5,r17
  8082c4:	e009883a 	mov	r4,fp
  8082c8:	000f883a 	mov	r7,zero
  8082cc:	01800284 	movi	r6,10
  8082d0:	080ac5c0 	call	80ac5c <__multadd>
  8082d4:	d9000c17 	ldw	r4,48(sp)
  8082d8:	1023883a 	mov	r17,r2
  8082dc:	0102040e 	bge	zero,r4,808af0 <_dtoa_r+0x1600>
  8082e0:	d9000615 	stw	r4,24(sp)
  8082e4:	0500050e 	bge	zero,r20,8082fc <_dtoa_r+0xe0c>
  8082e8:	880b883a 	mov	r5,r17
  8082ec:	a00d883a 	mov	r6,r20
  8082f0:	e009883a 	mov	r4,fp
  8082f4:	080b30c0 	call	80b30c <__lshift>
  8082f8:	1023883a 	mov	r17,r2
  8082fc:	9801241e 	bne	r19,zero,808790 <_dtoa_r+0x12a0>
  808300:	8829883a 	mov	r20,r17
  808304:	d9000617 	ldw	r4,24(sp)
  808308:	dcc00717 	ldw	r19,28(sp)
  80830c:	9480004c 	andi	r18,r18,1
  808310:	20bfffc4 	addi	r2,r4,-1
  808314:	9885883a 	add	r2,r19,r2
  808318:	d8800415 	stw	r2,16(sp)
  80831c:	dc800615 	stw	r18,24(sp)
  808320:	a80b883a 	mov	r5,r21
  808324:	8009883a 	mov	r4,r16
  808328:	08072f00 	call	8072f0 <quorem>
  80832c:	880b883a 	mov	r5,r17
  808330:	8009883a 	mov	r4,r16
  808334:	102f883a 	mov	r23,r2
  808338:	080b4540 	call	80b454 <__mcmp>
  80833c:	a80b883a 	mov	r5,r21
  808340:	a00d883a 	mov	r6,r20
  808344:	e009883a 	mov	r4,fp
  808348:	102d883a 	mov	r22,r2
  80834c:	080b4b40 	call	80b4b4 <__mdiff>
  808350:	1007883a 	mov	r3,r2
  808354:	10800317 	ldw	r2,12(r2)
  808358:	bc800c04 	addi	r18,r23,48
  80835c:	180b883a 	mov	r5,r3
  808360:	10004e1e 	bne	r2,zero,80849c <_dtoa_r+0xfac>
  808364:	8009883a 	mov	r4,r16
  808368:	d8c01615 	stw	r3,88(sp)
  80836c:	080b4540 	call	80b454 <__mcmp>
  808370:	d8c01617 	ldw	r3,88(sp)
  808374:	e009883a 	mov	r4,fp
  808378:	d8801615 	stw	r2,88(sp)
  80837c:	180b883a 	mov	r5,r3
  808380:	080ac340 	call	80ac34 <_Bfree>
  808384:	d8801617 	ldw	r2,88(sp)
  808388:	1000041e 	bne	r2,zero,80839c <_dtoa_r+0xeac>
  80838c:	d9800317 	ldw	r6,12(sp)
  808390:	3000021e 	bne	r6,zero,80839c <_dtoa_r+0xeac>
  808394:	d8c00617 	ldw	r3,24(sp)
  808398:	18003726 	beq	r3,zero,808478 <_dtoa_r+0xf88>
  80839c:	b0002016 	blt	r22,zero,808420 <_dtoa_r+0xf30>
  8083a0:	b000041e 	bne	r22,zero,8083b4 <_dtoa_r+0xec4>
  8083a4:	d9000317 	ldw	r4,12(sp)
  8083a8:	2000021e 	bne	r4,zero,8083b4 <_dtoa_r+0xec4>
  8083ac:	d8c00617 	ldw	r3,24(sp)
  8083b0:	18001b26 	beq	r3,zero,808420 <_dtoa_r+0xf30>
  8083b4:	00810716 	blt	zero,r2,8087d4 <_dtoa_r+0x12e4>
  8083b8:	d8c00417 	ldw	r3,16(sp)
  8083bc:	9d800044 	addi	r22,r19,1
  8083c0:	9c800005 	stb	r18,0(r19)
  8083c4:	b02f883a 	mov	r23,r22
  8083c8:	98c10626 	beq	r19,r3,8087e4 <_dtoa_r+0x12f4>
  8083cc:	800b883a 	mov	r5,r16
  8083d0:	000f883a 	mov	r7,zero
  8083d4:	01800284 	movi	r6,10
  8083d8:	e009883a 	mov	r4,fp
  8083dc:	080ac5c0 	call	80ac5c <__multadd>
  8083e0:	1021883a 	mov	r16,r2
  8083e4:	000f883a 	mov	r7,zero
  8083e8:	01800284 	movi	r6,10
  8083ec:	880b883a 	mov	r5,r17
  8083f0:	e009883a 	mov	r4,fp
  8083f4:	8d002526 	beq	r17,r20,80848c <_dtoa_r+0xf9c>
  8083f8:	080ac5c0 	call	80ac5c <__multadd>
  8083fc:	a00b883a 	mov	r5,r20
  808400:	000f883a 	mov	r7,zero
  808404:	01800284 	movi	r6,10
  808408:	e009883a 	mov	r4,fp
  80840c:	1023883a 	mov	r17,r2
  808410:	080ac5c0 	call	80ac5c <__multadd>
  808414:	1029883a 	mov	r20,r2
  808418:	b027883a 	mov	r19,r22
  80841c:	003fc006 	br	808320 <__alt_data_end+0xff808320>
  808420:	9011883a 	mov	r8,r18
  808424:	00800e0e 	bge	zero,r2,808460 <_dtoa_r+0xf70>
  808428:	800b883a 	mov	r5,r16
  80842c:	01800044 	movi	r6,1
  808430:	e009883a 	mov	r4,fp
  808434:	da001715 	stw	r8,92(sp)
  808438:	080b30c0 	call	80b30c <__lshift>
  80843c:	a80b883a 	mov	r5,r21
  808440:	1009883a 	mov	r4,r2
  808444:	1021883a 	mov	r16,r2
  808448:	080b4540 	call	80b454 <__mcmp>
  80844c:	da001717 	ldw	r8,92(sp)
  808450:	0081960e 	bge	zero,r2,808aac <_dtoa_r+0x15bc>
  808454:	00800e44 	movi	r2,57
  808458:	40817026 	beq	r8,r2,808a1c <_dtoa_r+0x152c>
  80845c:	ba000c44 	addi	r8,r23,49
  808460:	8825883a 	mov	r18,r17
  808464:	9dc00044 	addi	r23,r19,1
  808468:	9a000005 	stb	r8,0(r19)
  80846c:	a023883a 	mov	r17,r20
  808470:	dc000915 	stw	r16,36(sp)
  808474:	003f2406 	br	808108 <__alt_data_end+0xff808108>
  808478:	00800e44 	movi	r2,57
  80847c:	9011883a 	mov	r8,r18
  808480:	90816626 	beq	r18,r2,808a1c <_dtoa_r+0x152c>
  808484:	05bff516 	blt	zero,r22,80845c <__alt_data_end+0xff80845c>
  808488:	003ff506 	br	808460 <__alt_data_end+0xff808460>
  80848c:	080ac5c0 	call	80ac5c <__multadd>
  808490:	1023883a 	mov	r17,r2
  808494:	1029883a 	mov	r20,r2
  808498:	003fdf06 	br	808418 <__alt_data_end+0xff808418>
  80849c:	e009883a 	mov	r4,fp
  8084a0:	080ac340 	call	80ac34 <_Bfree>
  8084a4:	00800044 	movi	r2,1
  8084a8:	003fbc06 	br	80839c <__alt_data_end+0xff80839c>
  8084ac:	a80b883a 	mov	r5,r21
  8084b0:	8009883a 	mov	r4,r16
  8084b4:	080b4540 	call	80b454 <__mcmp>
  8084b8:	103edb0e 	bge	r2,zero,808028 <__alt_data_end+0xff808028>
  8084bc:	800b883a 	mov	r5,r16
  8084c0:	000f883a 	mov	r7,zero
  8084c4:	01800284 	movi	r6,10
  8084c8:	e009883a 	mov	r4,fp
  8084cc:	080ac5c0 	call	80ac5c <__multadd>
  8084d0:	1021883a 	mov	r16,r2
  8084d4:	d8800517 	ldw	r2,20(sp)
  8084d8:	d8c00b17 	ldw	r3,44(sp)
  8084dc:	10bfffc4 	addi	r2,r2,-1
  8084e0:	d8800515 	stw	r2,20(sp)
  8084e4:	183f761e 	bne	r3,zero,8082c0 <__alt_data_end+0xff8082c0>
  8084e8:	d9000c17 	ldw	r4,48(sp)
  8084ec:	0101730e 	bge	zero,r4,808abc <_dtoa_r+0x15cc>
  8084f0:	d9000615 	stw	r4,24(sp)
  8084f4:	003ed006 	br	808038 <__alt_data_end+0xff808038>
  8084f8:	00800084 	movi	r2,2
  8084fc:	3081861e 	bne	r6,r2,808b18 <_dtoa_r+0x1628>
  808500:	d8000b15 	stw	zero,44(sp)
  808504:	003f3c06 	br	8081f8 <__alt_data_end+0xff8081f8>
  808508:	dc000917 	ldw	r16,36(sp)
  80850c:	003e9206 	br	807f58 <__alt_data_end+0xff807f58>
  808510:	d9c00317 	ldw	r7,12(sp)
  808514:	00800084 	movi	r2,2
  808518:	11fec50e 	bge	r2,r7,808030 <__alt_data_end+0xff808030>
  80851c:	d9000617 	ldw	r4,24(sp)
  808520:	20013c1e 	bne	r4,zero,808a14 <_dtoa_r+0x1524>
  808524:	a80b883a 	mov	r5,r21
  808528:	000f883a 	mov	r7,zero
  80852c:	01800144 	movi	r6,5
  808530:	e009883a 	mov	r4,fp
  808534:	080ac5c0 	call	80ac5c <__multadd>
  808538:	100b883a 	mov	r5,r2
  80853c:	8009883a 	mov	r4,r16
  808540:	102b883a 	mov	r21,r2
  808544:	080b4540 	call	80b454 <__mcmp>
  808548:	dc000915 	stw	r16,36(sp)
  80854c:	00bf410e 	bge	zero,r2,808254 <__alt_data_end+0xff808254>
  808550:	d9c00717 	ldw	r7,28(sp)
  808554:	00800c44 	movi	r2,49
  808558:	38800005 	stb	r2,0(r7)
  80855c:	d8800517 	ldw	r2,20(sp)
  808560:	3dc00044 	addi	r23,r7,1
  808564:	10800044 	addi	r2,r2,1
  808568:	d8800515 	stw	r2,20(sp)
  80856c:	003f3d06 	br	808264 <__alt_data_end+0xff808264>
  808570:	d9800517 	ldw	r6,20(sp)
  808574:	d9c00717 	ldw	r7,28(sp)
  808578:	00800c44 	movi	r2,49
  80857c:	31800044 	addi	r6,r6,1
  808580:	d9800515 	stw	r6,20(sp)
  808584:	38800005 	stb	r2,0(r7)
  808588:	003edf06 	br	808108 <__alt_data_end+0xff808108>
  80858c:	d8000b15 	stw	zero,44(sp)
  808590:	003c9f06 	br	807810 <__alt_data_end+0xff807810>
  808594:	903e7e1e 	bne	r18,zero,807f90 <__alt_data_end+0xff807f90>
  808598:	00800434 	movhi	r2,16
  80859c:	10bfffc4 	addi	r2,r2,-1
  8085a0:	9884703a 	and	r2,r19,r2
  8085a4:	1000ea1e 	bne	r2,zero,808950 <_dtoa_r+0x1460>
  8085a8:	9cdffc2c 	andhi	r19,r19,32752
  8085ac:	9800e826 	beq	r19,zero,808950 <_dtoa_r+0x1460>
  8085b0:	d9c00817 	ldw	r7,32(sp)
  8085b4:	b5800044 	addi	r22,r22,1
  8085b8:	04c00044 	movi	r19,1
  8085bc:	39c00044 	addi	r7,r7,1
  8085c0:	d9c00815 	stw	r7,32(sp)
  8085c4:	d8800d17 	ldw	r2,52(sp)
  8085c8:	103e721e 	bne	r2,zero,807f94 <__alt_data_end+0xff807f94>
  8085cc:	00800044 	movi	r2,1
  8085d0:	003e7906 	br	807fb8 <__alt_data_end+0xff807fb8>
  8085d4:	8009883a 	mov	r4,r16
  8085d8:	08048fc0 	call	8048fc <__floatsidf>
  8085dc:	d9800f17 	ldw	r6,60(sp)
  8085e0:	d9c01017 	ldw	r7,64(sp)
  8085e4:	1009883a 	mov	r4,r2
  8085e8:	180b883a 	mov	r5,r3
  8085ec:	08038680 	call	803868 <__muldf3>
  8085f0:	000d883a 	mov	r6,zero
  8085f4:	01d00734 	movhi	r7,16412
  8085f8:	1009883a 	mov	r4,r2
  8085fc:	180b883a 	mov	r5,r3
  808600:	0802e580 	call	802e58 <__adddf3>
  808604:	047f3034 	movhi	r17,64704
  808608:	1021883a 	mov	r16,r2
  80860c:	1c63883a 	add	r17,r3,r17
  808610:	d9000f17 	ldw	r4,60(sp)
  808614:	d9401017 	ldw	r5,64(sp)
  808618:	000d883a 	mov	r6,zero
  80861c:	01d00534 	movhi	r7,16404
  808620:	0803f800 	call	803f80 <__subdf3>
  808624:	800d883a 	mov	r6,r16
  808628:	880f883a 	mov	r7,r17
  80862c:	1009883a 	mov	r4,r2
  808630:	180b883a 	mov	r5,r3
  808634:	102b883a 	mov	r21,r2
  808638:	1829883a 	mov	r20,r3
  80863c:	080378c0 	call	80378c <__gedf2>
  808640:	00806c16 	blt	zero,r2,8087f4 <_dtoa_r+0x1304>
  808644:	89e0003c 	xorhi	r7,r17,32768
  808648:	800d883a 	mov	r6,r16
  80864c:	a809883a 	mov	r4,r21
  808650:	a00b883a 	mov	r5,r20
  808654:	080f6e00 	call	80f6e0 <__ledf2>
  808658:	103d7e0e 	bge	r2,zero,807c54 <__alt_data_end+0xff807c54>
  80865c:	002b883a 	mov	r21,zero
  808660:	0023883a 	mov	r17,zero
  808664:	003efb06 	br	808254 <__alt_data_end+0xff808254>
  808668:	d8800717 	ldw	r2,28(sp)
  80866c:	003bd006 	br	8075b0 <__alt_data_end+0xff8075b0>
  808670:	d9000a17 	ldw	r4,40(sp)
  808674:	d9800d17 	ldw	r6,52(sp)
  808678:	dd400a15 	stw	r21,40(sp)
  80867c:	a905c83a 	sub	r2,r21,r4
  808680:	308d883a 	add	r6,r6,r2
  808684:	d9800d15 	stw	r6,52(sp)
  808688:	002b883a 	mov	r21,zero
  80868c:	003e0606 	br	807ea8 <__alt_data_end+0xff807ea8>
  808690:	9023883a 	mov	r17,r18
  808694:	9829883a 	mov	r20,r19
  808698:	04000084 	movi	r16,2
  80869c:	003c9206 	br	8078e8 <__alt_data_end+0xff8078e8>
  8086a0:	04000044 	movi	r16,1
  8086a4:	dc000c15 	stw	r16,48(sp)
  8086a8:	dc000615 	stw	r16,24(sp)
  8086ac:	dc002215 	stw	r16,136(sp)
  8086b0:	e0001115 	stw	zero,68(fp)
  8086b4:	000b883a 	mov	r5,zero
  8086b8:	003c6906 	br	807860 <__alt_data_end+0xff807860>
  8086bc:	3021883a 	mov	r16,r6
  8086c0:	003ffb06 	br	8086b0 <__alt_data_end+0xff8086b0>
  8086c4:	1000021e 	bne	r2,zero,8086d0 <_dtoa_r+0x11e0>
  8086c8:	4200004c 	andi	r8,r8,1
  8086cc:	403e7d1e 	bne	r8,zero,8080c4 <__alt_data_end+0xff8080c4>
  8086d0:	01000c04 	movi	r4,48
  8086d4:	00000106 	br	8086dc <_dtoa_r+0x11ec>
  8086d8:	102f883a 	mov	r23,r2
  8086dc:	b8bfffc4 	addi	r2,r23,-1
  8086e0:	10c00007 	ldb	r3,0(r2)
  8086e4:	193ffc26 	beq	r3,r4,8086d8 <__alt_data_end+0xff8086d8>
  8086e8:	003e8706 	br	808108 <__alt_data_end+0xff808108>
  8086ec:	d8800517 	ldw	r2,20(sp)
  8086f0:	00a3c83a 	sub	r17,zero,r2
  8086f4:	8800a426 	beq	r17,zero,808988 <_dtoa_r+0x1498>
  8086f8:	888003cc 	andi	r2,r17,15
  8086fc:	100490fa 	slli	r2,r2,3
  808700:	00c02074 	movhi	r3,129
  808704:	18c93b04 	addi	r3,r3,9452
  808708:	1885883a 	add	r2,r3,r2
  80870c:	11800017 	ldw	r6,0(r2)
  808710:	11c00117 	ldw	r7,4(r2)
  808714:	9009883a 	mov	r4,r18
  808718:	980b883a 	mov	r5,r19
  80871c:	8823d13a 	srai	r17,r17,4
  808720:	08038680 	call	803868 <__muldf3>
  808724:	d8800f15 	stw	r2,60(sp)
  808728:	d8c01015 	stw	r3,64(sp)
  80872c:	8800e826 	beq	r17,zero,808ad0 <_dtoa_r+0x15e0>
  808730:	05002074 	movhi	r20,129
  808734:	a5093104 	addi	r20,r20,9412
  808738:	04000084 	movi	r16,2
  80873c:	8980004c 	andi	r6,r17,1
  808740:	1009883a 	mov	r4,r2
  808744:	8823d07a 	srai	r17,r17,1
  808748:	180b883a 	mov	r5,r3
  80874c:	30000426 	beq	r6,zero,808760 <_dtoa_r+0x1270>
  808750:	a1800017 	ldw	r6,0(r20)
  808754:	a1c00117 	ldw	r7,4(r20)
  808758:	84000044 	addi	r16,r16,1
  80875c:	08038680 	call	803868 <__muldf3>
  808760:	a5000204 	addi	r20,r20,8
  808764:	883ff51e 	bne	r17,zero,80873c <__alt_data_end+0xff80873c>
  808768:	d8800f15 	stw	r2,60(sp)
  80876c:	d8c01015 	stw	r3,64(sp)
  808770:	003c7606 	br	80794c <__alt_data_end+0xff80794c>
  808774:	00c00c04 	movi	r3,48
  808778:	10c00005 	stb	r3,0(r2)
  80877c:	d8c00517 	ldw	r3,20(sp)
  808780:	bd3fffc3 	ldbu	r20,-1(r23)
  808784:	18c00044 	addi	r3,r3,1
  808788:	d8c00515 	stw	r3,20(sp)
  80878c:	003db906 	br	807e74 <__alt_data_end+0xff807e74>
  808790:	89400117 	ldw	r5,4(r17)
  808794:	e009883a 	mov	r4,fp
  808798:	080ab8c0 	call	80ab8c <_Balloc>
  80879c:	89800417 	ldw	r6,16(r17)
  8087a0:	89400304 	addi	r5,r17,12
  8087a4:	11000304 	addi	r4,r2,12
  8087a8:	31800084 	addi	r6,r6,2
  8087ac:	318d883a 	add	r6,r6,r6
  8087b0:	318d883a 	add	r6,r6,r6
  8087b4:	1027883a 	mov	r19,r2
  8087b8:	080a7c00 	call	80a7c0 <memcpy>
  8087bc:	01800044 	movi	r6,1
  8087c0:	980b883a 	mov	r5,r19
  8087c4:	e009883a 	mov	r4,fp
  8087c8:	080b30c0 	call	80b30c <__lshift>
  8087cc:	1029883a 	mov	r20,r2
  8087d0:	003ecc06 	br	808304 <__alt_data_end+0xff808304>
  8087d4:	00800e44 	movi	r2,57
  8087d8:	90809026 	beq	r18,r2,808a1c <_dtoa_r+0x152c>
  8087dc:	92000044 	addi	r8,r18,1
  8087e0:	003f1f06 	br	808460 <__alt_data_end+0xff808460>
  8087e4:	9011883a 	mov	r8,r18
  8087e8:	8825883a 	mov	r18,r17
  8087ec:	a023883a 	mov	r17,r20
  8087f0:	003e2906 	br	808098 <__alt_data_end+0xff808098>
  8087f4:	002b883a 	mov	r21,zero
  8087f8:	0023883a 	mov	r17,zero
  8087fc:	003f5406 	br	808550 <__alt_data_end+0xff808550>
  808800:	61bfffc4 	addi	r6,r12,-1
  808804:	300490fa 	slli	r2,r6,3
  808808:	00c02074 	movhi	r3,129
  80880c:	18c93b04 	addi	r3,r3,9452
  808810:	1885883a 	add	r2,r3,r2
  808814:	11000017 	ldw	r4,0(r2)
  808818:	11400117 	ldw	r5,4(r2)
  80881c:	d8800717 	ldw	r2,28(sp)
  808820:	880f883a 	mov	r7,r17
  808824:	d9801215 	stw	r6,72(sp)
  808828:	800d883a 	mov	r6,r16
  80882c:	db001615 	stw	r12,88(sp)
  808830:	15c00044 	addi	r23,r2,1
  808834:	08038680 	call	803868 <__muldf3>
  808838:	d9401017 	ldw	r5,64(sp)
  80883c:	d9000f17 	ldw	r4,60(sp)
  808840:	d8c01515 	stw	r3,84(sp)
  808844:	d8801415 	stw	r2,80(sp)
  808848:	080487c0 	call	80487c <__fixdfsi>
  80884c:	1009883a 	mov	r4,r2
  808850:	1021883a 	mov	r16,r2
  808854:	08048fc0 	call	8048fc <__floatsidf>
  808858:	d9000f17 	ldw	r4,60(sp)
  80885c:	d9401017 	ldw	r5,64(sp)
  808860:	100d883a 	mov	r6,r2
  808864:	180f883a 	mov	r7,r3
  808868:	0803f800 	call	803f80 <__subdf3>
  80886c:	1829883a 	mov	r20,r3
  808870:	d8c00717 	ldw	r3,28(sp)
  808874:	84000c04 	addi	r16,r16,48
  808878:	1023883a 	mov	r17,r2
  80887c:	1c000005 	stb	r16,0(r3)
  808880:	db001617 	ldw	r12,88(sp)
  808884:	00800044 	movi	r2,1
  808888:	60802226 	beq	r12,r2,808914 <_dtoa_r+0x1424>
  80888c:	d9c00717 	ldw	r7,28(sp)
  808890:	8805883a 	mov	r2,r17
  808894:	b82b883a 	mov	r21,r23
  808898:	3b19883a 	add	r12,r7,r12
  80889c:	6023883a 	mov	r17,r12
  8088a0:	a007883a 	mov	r3,r20
  8088a4:	dc800f15 	stw	r18,60(sp)
  8088a8:	000d883a 	mov	r6,zero
  8088ac:	01d00934 	movhi	r7,16420
  8088b0:	1009883a 	mov	r4,r2
  8088b4:	180b883a 	mov	r5,r3
  8088b8:	08038680 	call	803868 <__muldf3>
  8088bc:	180b883a 	mov	r5,r3
  8088c0:	1009883a 	mov	r4,r2
  8088c4:	1829883a 	mov	r20,r3
  8088c8:	1025883a 	mov	r18,r2
  8088cc:	080487c0 	call	80487c <__fixdfsi>
  8088d0:	1009883a 	mov	r4,r2
  8088d4:	1021883a 	mov	r16,r2
  8088d8:	08048fc0 	call	8048fc <__floatsidf>
  8088dc:	100d883a 	mov	r6,r2
  8088e0:	180f883a 	mov	r7,r3
  8088e4:	9009883a 	mov	r4,r18
  8088e8:	a00b883a 	mov	r5,r20
  8088ec:	84000c04 	addi	r16,r16,48
  8088f0:	0803f800 	call	803f80 <__subdf3>
  8088f4:	ad400044 	addi	r21,r21,1
  8088f8:	ac3fffc5 	stb	r16,-1(r21)
  8088fc:	ac7fea1e 	bne	r21,r17,8088a8 <__alt_data_end+0xff8088a8>
  808900:	1023883a 	mov	r17,r2
  808904:	d8801217 	ldw	r2,72(sp)
  808908:	dc800f17 	ldw	r18,60(sp)
  80890c:	1829883a 	mov	r20,r3
  808910:	b8af883a 	add	r23,r23,r2
  808914:	d9001417 	ldw	r4,80(sp)
  808918:	d9401517 	ldw	r5,84(sp)
  80891c:	000d883a 	mov	r6,zero
  808920:	01cff834 	movhi	r7,16352
  808924:	0802e580 	call	802e58 <__adddf3>
  808928:	880d883a 	mov	r6,r17
  80892c:	a00f883a 	mov	r7,r20
  808930:	1009883a 	mov	r4,r2
  808934:	180b883a 	mov	r5,r3
  808938:	080f6e00 	call	80f6e0 <__ledf2>
  80893c:	10003e0e 	bge	r2,zero,808a38 <_dtoa_r+0x1548>
  808940:	d9001317 	ldw	r4,76(sp)
  808944:	bd3fffc3 	ldbu	r20,-1(r23)
  808948:	d9000515 	stw	r4,20(sp)
  80894c:	003d3b06 	br	807e3c <__alt_data_end+0xff807e3c>
  808950:	0027883a 	mov	r19,zero
  808954:	003f1b06 	br	8085c4 <__alt_data_end+0xff8085c4>
  808958:	d8800817 	ldw	r2,32(sp)
  80895c:	11e9c83a 	sub	r20,r2,r7
  808960:	0005883a 	mov	r2,zero
  808964:	003d5406 	br	807eb8 <__alt_data_end+0xff807eb8>
  808968:	00800044 	movi	r2,1
  80896c:	003dc706 	br	80808c <__alt_data_end+0xff80808c>
  808970:	d8c00217 	ldw	r3,8(sp)
  808974:	00800d84 	movi	r2,54
  808978:	dd400a17 	ldw	r21,40(sp)
  80897c:	10c5c83a 	sub	r2,r2,r3
  808980:	dd000817 	ldw	r20,32(sp)
  808984:	003d4c06 	br	807eb8 <__alt_data_end+0xff807eb8>
  808988:	dc800f15 	stw	r18,60(sp)
  80898c:	dcc01015 	stw	r19,64(sp)
  808990:	04000084 	movi	r16,2
  808994:	003bed06 	br	80794c <__alt_data_end+0xff80794c>
  808998:	d9000617 	ldw	r4,24(sp)
  80899c:	203f0d26 	beq	r4,zero,8085d4 <__alt_data_end+0xff8085d4>
  8089a0:	d9800c17 	ldw	r6,48(sp)
  8089a4:	01bcab0e 	bge	zero,r6,807c54 <__alt_data_end+0xff807c54>
  8089a8:	d9401017 	ldw	r5,64(sp)
  8089ac:	d9000f17 	ldw	r4,60(sp)
  8089b0:	000d883a 	mov	r6,zero
  8089b4:	01d00934 	movhi	r7,16420
  8089b8:	08038680 	call	803868 <__muldf3>
  8089bc:	81000044 	addi	r4,r16,1
  8089c0:	d8800f15 	stw	r2,60(sp)
  8089c4:	d8c01015 	stw	r3,64(sp)
  8089c8:	08048fc0 	call	8048fc <__floatsidf>
  8089cc:	d9800f17 	ldw	r6,60(sp)
  8089d0:	d9c01017 	ldw	r7,64(sp)
  8089d4:	1009883a 	mov	r4,r2
  8089d8:	180b883a 	mov	r5,r3
  8089dc:	08038680 	call	803868 <__muldf3>
  8089e0:	01d00734 	movhi	r7,16412
  8089e4:	000d883a 	mov	r6,zero
  8089e8:	1009883a 	mov	r4,r2
  8089ec:	180b883a 	mov	r5,r3
  8089f0:	0802e580 	call	802e58 <__adddf3>
  8089f4:	d9c00517 	ldw	r7,20(sp)
  8089f8:	047f3034 	movhi	r17,64704
  8089fc:	1021883a 	mov	r16,r2
  808a00:	39ffffc4 	addi	r7,r7,-1
  808a04:	d9c01315 	stw	r7,76(sp)
  808a08:	1c63883a 	add	r17,r3,r17
  808a0c:	db000c17 	ldw	r12,48(sp)
  808a10:	003bea06 	br	8079bc <__alt_data_end+0xff8079bc>
  808a14:	dc000915 	stw	r16,36(sp)
  808a18:	003e0e06 	br	808254 <__alt_data_end+0xff808254>
  808a1c:	01000e44 	movi	r4,57
  808a20:	8825883a 	mov	r18,r17
  808a24:	9dc00044 	addi	r23,r19,1
  808a28:	99000005 	stb	r4,0(r19)
  808a2c:	a023883a 	mov	r17,r20
  808a30:	dc000915 	stw	r16,36(sp)
  808a34:	003da406 	br	8080c8 <__alt_data_end+0xff8080c8>
  808a38:	d9801417 	ldw	r6,80(sp)
  808a3c:	d9c01517 	ldw	r7,84(sp)
  808a40:	0009883a 	mov	r4,zero
  808a44:	014ff834 	movhi	r5,16352
  808a48:	0803f800 	call	803f80 <__subdf3>
  808a4c:	880d883a 	mov	r6,r17
  808a50:	a00f883a 	mov	r7,r20
  808a54:	1009883a 	mov	r4,r2
  808a58:	180b883a 	mov	r5,r3
  808a5c:	080378c0 	call	80378c <__gedf2>
  808a60:	00bc7c0e 	bge	zero,r2,807c54 <__alt_data_end+0xff807c54>
  808a64:	01000c04 	movi	r4,48
  808a68:	00000106 	br	808a70 <_dtoa_r+0x1580>
  808a6c:	102f883a 	mov	r23,r2
  808a70:	b8bfffc4 	addi	r2,r23,-1
  808a74:	10c00007 	ldb	r3,0(r2)
  808a78:	193ffc26 	beq	r3,r4,808a6c <__alt_data_end+0xff808a6c>
  808a7c:	d9801317 	ldw	r6,76(sp)
  808a80:	d9800515 	stw	r6,20(sp)
  808a84:	003c4406 	br	807b98 <__alt_data_end+0xff807b98>
  808a88:	d9801317 	ldw	r6,76(sp)
  808a8c:	d9800515 	stw	r6,20(sp)
  808a90:	003cea06 	br	807e3c <__alt_data_end+0xff807e3c>
  808a94:	dd800f17 	ldw	r22,60(sp)
  808a98:	dcc01017 	ldw	r19,64(sp)
  808a9c:	dc801217 	ldw	r18,72(sp)
  808aa0:	003c6c06 	br	807c54 <__alt_data_end+0xff807c54>
  808aa4:	903e031e 	bne	r18,zero,8082b4 <__alt_data_end+0xff8082b4>
  808aa8:	003ebb06 	br	808598 <__alt_data_end+0xff808598>
  808aac:	103e6c1e 	bne	r2,zero,808460 <__alt_data_end+0xff808460>
  808ab0:	4080004c 	andi	r2,r8,1
  808ab4:	103e6a26 	beq	r2,zero,808460 <__alt_data_end+0xff808460>
  808ab8:	003e6606 	br	808454 <__alt_data_end+0xff808454>
  808abc:	d8c00317 	ldw	r3,12(sp)
  808ac0:	00800084 	movi	r2,2
  808ac4:	10c02916 	blt	r2,r3,808b6c <_dtoa_r+0x167c>
  808ac8:	d9000c17 	ldw	r4,48(sp)
  808acc:	003e8806 	br	8084f0 <__alt_data_end+0xff8084f0>
  808ad0:	04000084 	movi	r16,2
  808ad4:	003b9d06 	br	80794c <__alt_data_end+0xff80794c>
  808ad8:	d9001317 	ldw	r4,76(sp)
  808adc:	d9000515 	stw	r4,20(sp)
  808ae0:	003cd606 	br	807e3c <__alt_data_end+0xff807e3c>
  808ae4:	d8801317 	ldw	r2,76(sp)
  808ae8:	d8800515 	stw	r2,20(sp)
  808aec:	003c2a06 	br	807b98 <__alt_data_end+0xff807b98>
  808af0:	d9800317 	ldw	r6,12(sp)
  808af4:	00800084 	movi	r2,2
  808af8:	11801516 	blt	r2,r6,808b50 <_dtoa_r+0x1660>
  808afc:	d9c00c17 	ldw	r7,48(sp)
  808b00:	d9c00615 	stw	r7,24(sp)
  808b04:	003df706 	br	8082e4 <__alt_data_end+0xff8082e4>
  808b08:	193d3926 	beq	r3,r4,807ff0 <__alt_data_end+0xff807ff0>
  808b0c:	00c00f04 	movi	r3,60
  808b10:	1885c83a 	sub	r2,r3,r2
  808b14:	003ddf06 	br	808294 <__alt_data_end+0xff808294>
  808b18:	e009883a 	mov	r4,fp
  808b1c:	e0001115 	stw	zero,68(fp)
  808b20:	000b883a 	mov	r5,zero
  808b24:	080ab8c0 	call	80ab8c <_Balloc>
  808b28:	d8800715 	stw	r2,28(sp)
  808b2c:	d8c00717 	ldw	r3,28(sp)
  808b30:	00bfffc4 	movi	r2,-1
  808b34:	01000044 	movi	r4,1
  808b38:	d8800c15 	stw	r2,48(sp)
  808b3c:	e0c01015 	stw	r3,64(fp)
  808b40:	d9000b15 	stw	r4,44(sp)
  808b44:	d8800615 	stw	r2,24(sp)
  808b48:	d8002215 	stw	zero,136(sp)
  808b4c:	003c4106 	br	807c54 <__alt_data_end+0xff807c54>
  808b50:	d8c00c17 	ldw	r3,48(sp)
  808b54:	d8c00615 	stw	r3,24(sp)
  808b58:	003e7006 	br	80851c <__alt_data_end+0xff80851c>
  808b5c:	04400044 	movi	r17,1
  808b60:	003b2006 	br	8077e4 <__alt_data_end+0xff8077e4>
  808b64:	000b883a 	mov	r5,zero
  808b68:	003b3d06 	br	807860 <__alt_data_end+0xff807860>
  808b6c:	d8800c17 	ldw	r2,48(sp)
  808b70:	d8800615 	stw	r2,24(sp)
  808b74:	003e6906 	br	80851c <__alt_data_end+0xff80851c>

00808b78 <__sflush_r>:
  808b78:	2880030b 	ldhu	r2,12(r5)
  808b7c:	defffb04 	addi	sp,sp,-20
  808b80:	dcc00315 	stw	r19,12(sp)
  808b84:	dc400115 	stw	r17,4(sp)
  808b88:	dfc00415 	stw	ra,16(sp)
  808b8c:	dc800215 	stw	r18,8(sp)
  808b90:	dc000015 	stw	r16,0(sp)
  808b94:	10c0020c 	andi	r3,r2,8
  808b98:	2823883a 	mov	r17,r5
  808b9c:	2027883a 	mov	r19,r4
  808ba0:	1800311e 	bne	r3,zero,808c68 <__sflush_r+0xf0>
  808ba4:	28c00117 	ldw	r3,4(r5)
  808ba8:	10820014 	ori	r2,r2,2048
  808bac:	2880030d 	sth	r2,12(r5)
  808bb0:	00c04b0e 	bge	zero,r3,808ce0 <__sflush_r+0x168>
  808bb4:	8a000a17 	ldw	r8,40(r17)
  808bb8:	40002326 	beq	r8,zero,808c48 <__sflush_r+0xd0>
  808bbc:	9c000017 	ldw	r16,0(r19)
  808bc0:	10c4000c 	andi	r3,r2,4096
  808bc4:	98000015 	stw	zero,0(r19)
  808bc8:	18004826 	beq	r3,zero,808cec <__sflush_r+0x174>
  808bcc:	89801417 	ldw	r6,80(r17)
  808bd0:	10c0010c 	andi	r3,r2,4
  808bd4:	18000626 	beq	r3,zero,808bf0 <__sflush_r+0x78>
  808bd8:	88c00117 	ldw	r3,4(r17)
  808bdc:	88800c17 	ldw	r2,48(r17)
  808be0:	30cdc83a 	sub	r6,r6,r3
  808be4:	10000226 	beq	r2,zero,808bf0 <__sflush_r+0x78>
  808be8:	88800f17 	ldw	r2,60(r17)
  808bec:	308dc83a 	sub	r6,r6,r2
  808bf0:	89400717 	ldw	r5,28(r17)
  808bf4:	000f883a 	mov	r7,zero
  808bf8:	9809883a 	mov	r4,r19
  808bfc:	403ee83a 	callr	r8
  808c00:	00ffffc4 	movi	r3,-1
  808c04:	10c04426 	beq	r2,r3,808d18 <__sflush_r+0x1a0>
  808c08:	88c0030b 	ldhu	r3,12(r17)
  808c0c:	89000417 	ldw	r4,16(r17)
  808c10:	88000115 	stw	zero,4(r17)
  808c14:	197dffcc 	andi	r5,r3,63487
  808c18:	8940030d 	sth	r5,12(r17)
  808c1c:	89000015 	stw	r4,0(r17)
  808c20:	18c4000c 	andi	r3,r3,4096
  808c24:	18002c1e 	bne	r3,zero,808cd8 <__sflush_r+0x160>
  808c28:	89400c17 	ldw	r5,48(r17)
  808c2c:	9c000015 	stw	r16,0(r19)
  808c30:	28000526 	beq	r5,zero,808c48 <__sflush_r+0xd0>
  808c34:	88801004 	addi	r2,r17,64
  808c38:	28800226 	beq	r5,r2,808c44 <__sflush_r+0xcc>
  808c3c:	9809883a 	mov	r4,r19
  808c40:	08092e40 	call	8092e4 <_free_r>
  808c44:	88000c15 	stw	zero,48(r17)
  808c48:	0005883a 	mov	r2,zero
  808c4c:	dfc00417 	ldw	ra,16(sp)
  808c50:	dcc00317 	ldw	r19,12(sp)
  808c54:	dc800217 	ldw	r18,8(sp)
  808c58:	dc400117 	ldw	r17,4(sp)
  808c5c:	dc000017 	ldw	r16,0(sp)
  808c60:	dec00504 	addi	sp,sp,20
  808c64:	f800283a 	ret
  808c68:	2c800417 	ldw	r18,16(r5)
  808c6c:	903ff626 	beq	r18,zero,808c48 <__alt_data_end+0xff808c48>
  808c70:	2c000017 	ldw	r16,0(r5)
  808c74:	108000cc 	andi	r2,r2,3
  808c78:	2c800015 	stw	r18,0(r5)
  808c7c:	84a1c83a 	sub	r16,r16,r18
  808c80:	1000131e 	bne	r2,zero,808cd0 <__sflush_r+0x158>
  808c84:	28800517 	ldw	r2,20(r5)
  808c88:	88800215 	stw	r2,8(r17)
  808c8c:	04000316 	blt	zero,r16,808c9c <__sflush_r+0x124>
  808c90:	003fed06 	br	808c48 <__alt_data_end+0xff808c48>
  808c94:	90a5883a 	add	r18,r18,r2
  808c98:	043feb0e 	bge	zero,r16,808c48 <__alt_data_end+0xff808c48>
  808c9c:	88800917 	ldw	r2,36(r17)
  808ca0:	89400717 	ldw	r5,28(r17)
  808ca4:	800f883a 	mov	r7,r16
  808ca8:	900d883a 	mov	r6,r18
  808cac:	9809883a 	mov	r4,r19
  808cb0:	103ee83a 	callr	r2
  808cb4:	80a1c83a 	sub	r16,r16,r2
  808cb8:	00bff616 	blt	zero,r2,808c94 <__alt_data_end+0xff808c94>
  808cbc:	88c0030b 	ldhu	r3,12(r17)
  808cc0:	00bfffc4 	movi	r2,-1
  808cc4:	18c01014 	ori	r3,r3,64
  808cc8:	88c0030d 	sth	r3,12(r17)
  808ccc:	003fdf06 	br	808c4c <__alt_data_end+0xff808c4c>
  808cd0:	0005883a 	mov	r2,zero
  808cd4:	003fec06 	br	808c88 <__alt_data_end+0xff808c88>
  808cd8:	88801415 	stw	r2,80(r17)
  808cdc:	003fd206 	br	808c28 <__alt_data_end+0xff808c28>
  808ce0:	28c00f17 	ldw	r3,60(r5)
  808ce4:	00ffb316 	blt	zero,r3,808bb4 <__alt_data_end+0xff808bb4>
  808ce8:	003fd706 	br	808c48 <__alt_data_end+0xff808c48>
  808cec:	89400717 	ldw	r5,28(r17)
  808cf0:	000d883a 	mov	r6,zero
  808cf4:	01c00044 	movi	r7,1
  808cf8:	9809883a 	mov	r4,r19
  808cfc:	403ee83a 	callr	r8
  808d00:	100d883a 	mov	r6,r2
  808d04:	00bfffc4 	movi	r2,-1
  808d08:	30801426 	beq	r6,r2,808d5c <__sflush_r+0x1e4>
  808d0c:	8880030b 	ldhu	r2,12(r17)
  808d10:	8a000a17 	ldw	r8,40(r17)
  808d14:	003fae06 	br	808bd0 <__alt_data_end+0xff808bd0>
  808d18:	98c00017 	ldw	r3,0(r19)
  808d1c:	183fba26 	beq	r3,zero,808c08 <__alt_data_end+0xff808c08>
  808d20:	01000744 	movi	r4,29
  808d24:	19000626 	beq	r3,r4,808d40 <__sflush_r+0x1c8>
  808d28:	01000584 	movi	r4,22
  808d2c:	19000426 	beq	r3,r4,808d40 <__sflush_r+0x1c8>
  808d30:	88c0030b 	ldhu	r3,12(r17)
  808d34:	18c01014 	ori	r3,r3,64
  808d38:	88c0030d 	sth	r3,12(r17)
  808d3c:	003fc306 	br	808c4c <__alt_data_end+0xff808c4c>
  808d40:	8880030b 	ldhu	r2,12(r17)
  808d44:	88c00417 	ldw	r3,16(r17)
  808d48:	88000115 	stw	zero,4(r17)
  808d4c:	10bdffcc 	andi	r2,r2,63487
  808d50:	8880030d 	sth	r2,12(r17)
  808d54:	88c00015 	stw	r3,0(r17)
  808d58:	003fb306 	br	808c28 <__alt_data_end+0xff808c28>
  808d5c:	98800017 	ldw	r2,0(r19)
  808d60:	103fea26 	beq	r2,zero,808d0c <__alt_data_end+0xff808d0c>
  808d64:	00c00744 	movi	r3,29
  808d68:	10c00226 	beq	r2,r3,808d74 <__sflush_r+0x1fc>
  808d6c:	00c00584 	movi	r3,22
  808d70:	10c0031e 	bne	r2,r3,808d80 <__sflush_r+0x208>
  808d74:	9c000015 	stw	r16,0(r19)
  808d78:	0005883a 	mov	r2,zero
  808d7c:	003fb306 	br	808c4c <__alt_data_end+0xff808c4c>
  808d80:	88c0030b 	ldhu	r3,12(r17)
  808d84:	3005883a 	mov	r2,r6
  808d88:	18c01014 	ori	r3,r3,64
  808d8c:	88c0030d 	sth	r3,12(r17)
  808d90:	003fae06 	br	808c4c <__alt_data_end+0xff808c4c>

00808d94 <_fflush_r>:
  808d94:	defffd04 	addi	sp,sp,-12
  808d98:	dc000115 	stw	r16,4(sp)
  808d9c:	dfc00215 	stw	ra,8(sp)
  808da0:	2021883a 	mov	r16,r4
  808da4:	20000226 	beq	r4,zero,808db0 <_fflush_r+0x1c>
  808da8:	20800e17 	ldw	r2,56(r4)
  808dac:	10000c26 	beq	r2,zero,808de0 <_fflush_r+0x4c>
  808db0:	2880030f 	ldh	r2,12(r5)
  808db4:	1000051e 	bne	r2,zero,808dcc <_fflush_r+0x38>
  808db8:	0005883a 	mov	r2,zero
  808dbc:	dfc00217 	ldw	ra,8(sp)
  808dc0:	dc000117 	ldw	r16,4(sp)
  808dc4:	dec00304 	addi	sp,sp,12
  808dc8:	f800283a 	ret
  808dcc:	8009883a 	mov	r4,r16
  808dd0:	dfc00217 	ldw	ra,8(sp)
  808dd4:	dc000117 	ldw	r16,4(sp)
  808dd8:	dec00304 	addi	sp,sp,12
  808ddc:	0808b781 	jmpi	808b78 <__sflush_r>
  808de0:	d9400015 	stw	r5,0(sp)
  808de4:	08091700 	call	809170 <__sinit>
  808de8:	d9400017 	ldw	r5,0(sp)
  808dec:	003ff006 	br	808db0 <__alt_data_end+0xff808db0>

00808df0 <fflush>:
  808df0:	20000526 	beq	r4,zero,808e08 <fflush+0x18>
  808df4:	00802074 	movhi	r2,129
  808df8:	10902c04 	addi	r2,r2,16560
  808dfc:	200b883a 	mov	r5,r4
  808e00:	11000017 	ldw	r4,0(r2)
  808e04:	0808d941 	jmpi	808d94 <_fflush_r>
  808e08:	00802074 	movhi	r2,129
  808e0c:	10902b04 	addi	r2,r2,16556
  808e10:	11000017 	ldw	r4,0(r2)
  808e14:	01402074 	movhi	r5,129
  808e18:	29636504 	addi	r5,r5,-29292
  808e1c:	0809b741 	jmpi	809b74 <_fwalk_reent>

00808e20 <__fp_unlock>:
  808e20:	0005883a 	mov	r2,zero
  808e24:	f800283a 	ret

00808e28 <_cleanup_r>:
  808e28:	01402074 	movhi	r5,129
  808e2c:	2976e304 	addi	r5,r5,-9332
  808e30:	0809b741 	jmpi	809b74 <_fwalk_reent>

00808e34 <__sinit.part.1>:
  808e34:	defff704 	addi	sp,sp,-36
  808e38:	00c02074 	movhi	r3,129
  808e3c:	dfc00815 	stw	ra,32(sp)
  808e40:	ddc00715 	stw	r23,28(sp)
  808e44:	dd800615 	stw	r22,24(sp)
  808e48:	dd400515 	stw	r21,20(sp)
  808e4c:	dd000415 	stw	r20,16(sp)
  808e50:	dcc00315 	stw	r19,12(sp)
  808e54:	dc800215 	stw	r18,8(sp)
  808e58:	dc400115 	stw	r17,4(sp)
  808e5c:	dc000015 	stw	r16,0(sp)
  808e60:	18e38a04 	addi	r3,r3,-29144
  808e64:	24000117 	ldw	r16,4(r4)
  808e68:	20c00f15 	stw	r3,60(r4)
  808e6c:	2080bb04 	addi	r2,r4,748
  808e70:	00c000c4 	movi	r3,3
  808e74:	20c0b915 	stw	r3,740(r4)
  808e78:	2080ba15 	stw	r2,744(r4)
  808e7c:	2000b815 	stw	zero,736(r4)
  808e80:	05c00204 	movi	r23,8
  808e84:	00800104 	movi	r2,4
  808e88:	2025883a 	mov	r18,r4
  808e8c:	b80d883a 	mov	r6,r23
  808e90:	81001704 	addi	r4,r16,92
  808e94:	000b883a 	mov	r5,zero
  808e98:	80000015 	stw	zero,0(r16)
  808e9c:	80000115 	stw	zero,4(r16)
  808ea0:	80000215 	stw	zero,8(r16)
  808ea4:	8080030d 	sth	r2,12(r16)
  808ea8:	80001915 	stw	zero,100(r16)
  808eac:	8000038d 	sth	zero,14(r16)
  808eb0:	80000415 	stw	zero,16(r16)
  808eb4:	80000515 	stw	zero,20(r16)
  808eb8:	80000615 	stw	zero,24(r16)
  808ebc:	080aa640 	call	80aa64 <memset>
  808ec0:	05802074 	movhi	r22,129
  808ec4:	94400217 	ldw	r17,8(r18)
  808ec8:	05402074 	movhi	r21,129
  808ecc:	05002074 	movhi	r20,129
  808ed0:	04c02074 	movhi	r19,129
  808ed4:	b5b06d04 	addi	r22,r22,-15948
  808ed8:	ad708404 	addi	r21,r21,-15856
  808edc:	a530a304 	addi	r20,r20,-15732
  808ee0:	9cf0ba04 	addi	r19,r19,-15640
  808ee4:	85800815 	stw	r22,32(r16)
  808ee8:	85400915 	stw	r21,36(r16)
  808eec:	85000a15 	stw	r20,40(r16)
  808ef0:	84c00b15 	stw	r19,44(r16)
  808ef4:	84000715 	stw	r16,28(r16)
  808ef8:	00800284 	movi	r2,10
  808efc:	8880030d 	sth	r2,12(r17)
  808f00:	00800044 	movi	r2,1
  808f04:	b80d883a 	mov	r6,r23
  808f08:	89001704 	addi	r4,r17,92
  808f0c:	000b883a 	mov	r5,zero
  808f10:	88000015 	stw	zero,0(r17)
  808f14:	88000115 	stw	zero,4(r17)
  808f18:	88000215 	stw	zero,8(r17)
  808f1c:	88001915 	stw	zero,100(r17)
  808f20:	8880038d 	sth	r2,14(r17)
  808f24:	88000415 	stw	zero,16(r17)
  808f28:	88000515 	stw	zero,20(r17)
  808f2c:	88000615 	stw	zero,24(r17)
  808f30:	080aa640 	call	80aa64 <memset>
  808f34:	94000317 	ldw	r16,12(r18)
  808f38:	00800484 	movi	r2,18
  808f3c:	8c400715 	stw	r17,28(r17)
  808f40:	8d800815 	stw	r22,32(r17)
  808f44:	8d400915 	stw	r21,36(r17)
  808f48:	8d000a15 	stw	r20,40(r17)
  808f4c:	8cc00b15 	stw	r19,44(r17)
  808f50:	8080030d 	sth	r2,12(r16)
  808f54:	00800084 	movi	r2,2
  808f58:	80000015 	stw	zero,0(r16)
  808f5c:	80000115 	stw	zero,4(r16)
  808f60:	80000215 	stw	zero,8(r16)
  808f64:	80001915 	stw	zero,100(r16)
  808f68:	8080038d 	sth	r2,14(r16)
  808f6c:	80000415 	stw	zero,16(r16)
  808f70:	80000515 	stw	zero,20(r16)
  808f74:	80000615 	stw	zero,24(r16)
  808f78:	b80d883a 	mov	r6,r23
  808f7c:	000b883a 	mov	r5,zero
  808f80:	81001704 	addi	r4,r16,92
  808f84:	080aa640 	call	80aa64 <memset>
  808f88:	00800044 	movi	r2,1
  808f8c:	84000715 	stw	r16,28(r16)
  808f90:	85800815 	stw	r22,32(r16)
  808f94:	85400915 	stw	r21,36(r16)
  808f98:	85000a15 	stw	r20,40(r16)
  808f9c:	84c00b15 	stw	r19,44(r16)
  808fa0:	90800e15 	stw	r2,56(r18)
  808fa4:	dfc00817 	ldw	ra,32(sp)
  808fa8:	ddc00717 	ldw	r23,28(sp)
  808fac:	dd800617 	ldw	r22,24(sp)
  808fb0:	dd400517 	ldw	r21,20(sp)
  808fb4:	dd000417 	ldw	r20,16(sp)
  808fb8:	dcc00317 	ldw	r19,12(sp)
  808fbc:	dc800217 	ldw	r18,8(sp)
  808fc0:	dc400117 	ldw	r17,4(sp)
  808fc4:	dc000017 	ldw	r16,0(sp)
  808fc8:	dec00904 	addi	sp,sp,36
  808fcc:	f800283a 	ret

00808fd0 <__fp_lock>:
  808fd0:	0005883a 	mov	r2,zero
  808fd4:	f800283a 	ret

00808fd8 <__sfmoreglue>:
  808fd8:	defffc04 	addi	sp,sp,-16
  808fdc:	dc400115 	stw	r17,4(sp)
  808fe0:	2c7fffc4 	addi	r17,r5,-1
  808fe4:	8c401a24 	muli	r17,r17,104
  808fe8:	dc800215 	stw	r18,8(sp)
  808fec:	2825883a 	mov	r18,r5
  808ff0:	89401d04 	addi	r5,r17,116
  808ff4:	dc000015 	stw	r16,0(sp)
  808ff8:	dfc00315 	stw	ra,12(sp)
  808ffc:	0809ed00 	call	809ed0 <_malloc_r>
  809000:	1021883a 	mov	r16,r2
  809004:	10000726 	beq	r2,zero,809024 <__sfmoreglue+0x4c>
  809008:	11000304 	addi	r4,r2,12
  80900c:	10000015 	stw	zero,0(r2)
  809010:	14800115 	stw	r18,4(r2)
  809014:	11000215 	stw	r4,8(r2)
  809018:	89801a04 	addi	r6,r17,104
  80901c:	000b883a 	mov	r5,zero
  809020:	080aa640 	call	80aa64 <memset>
  809024:	8005883a 	mov	r2,r16
  809028:	dfc00317 	ldw	ra,12(sp)
  80902c:	dc800217 	ldw	r18,8(sp)
  809030:	dc400117 	ldw	r17,4(sp)
  809034:	dc000017 	ldw	r16,0(sp)
  809038:	dec00404 	addi	sp,sp,16
  80903c:	f800283a 	ret

00809040 <__sfp>:
  809040:	defffb04 	addi	sp,sp,-20
  809044:	dc000015 	stw	r16,0(sp)
  809048:	04002074 	movhi	r16,129
  80904c:	84102b04 	addi	r16,r16,16556
  809050:	dcc00315 	stw	r19,12(sp)
  809054:	2027883a 	mov	r19,r4
  809058:	81000017 	ldw	r4,0(r16)
  80905c:	dfc00415 	stw	ra,16(sp)
  809060:	dc800215 	stw	r18,8(sp)
  809064:	20800e17 	ldw	r2,56(r4)
  809068:	dc400115 	stw	r17,4(sp)
  80906c:	1000021e 	bne	r2,zero,809078 <__sfp+0x38>
  809070:	0808e340 	call	808e34 <__sinit.part.1>
  809074:	81000017 	ldw	r4,0(r16)
  809078:	2480b804 	addi	r18,r4,736
  80907c:	047fffc4 	movi	r17,-1
  809080:	91000117 	ldw	r4,4(r18)
  809084:	94000217 	ldw	r16,8(r18)
  809088:	213fffc4 	addi	r4,r4,-1
  80908c:	20000a16 	blt	r4,zero,8090b8 <__sfp+0x78>
  809090:	8080030f 	ldh	r2,12(r16)
  809094:	10000c26 	beq	r2,zero,8090c8 <__sfp+0x88>
  809098:	80c01d04 	addi	r3,r16,116
  80909c:	00000206 	br	8090a8 <__sfp+0x68>
  8090a0:	18bfe60f 	ldh	r2,-104(r3)
  8090a4:	10000826 	beq	r2,zero,8090c8 <__sfp+0x88>
  8090a8:	213fffc4 	addi	r4,r4,-1
  8090ac:	1c3ffd04 	addi	r16,r3,-12
  8090b0:	18c01a04 	addi	r3,r3,104
  8090b4:	247ffa1e 	bne	r4,r17,8090a0 <__alt_data_end+0xff8090a0>
  8090b8:	90800017 	ldw	r2,0(r18)
  8090bc:	10001d26 	beq	r2,zero,809134 <__sfp+0xf4>
  8090c0:	1025883a 	mov	r18,r2
  8090c4:	003fee06 	br	809080 <__alt_data_end+0xff809080>
  8090c8:	00bfffc4 	movi	r2,-1
  8090cc:	8080038d 	sth	r2,14(r16)
  8090d0:	00800044 	movi	r2,1
  8090d4:	8080030d 	sth	r2,12(r16)
  8090d8:	80001915 	stw	zero,100(r16)
  8090dc:	80000015 	stw	zero,0(r16)
  8090e0:	80000215 	stw	zero,8(r16)
  8090e4:	80000115 	stw	zero,4(r16)
  8090e8:	80000415 	stw	zero,16(r16)
  8090ec:	80000515 	stw	zero,20(r16)
  8090f0:	80000615 	stw	zero,24(r16)
  8090f4:	01800204 	movi	r6,8
  8090f8:	000b883a 	mov	r5,zero
  8090fc:	81001704 	addi	r4,r16,92
  809100:	080aa640 	call	80aa64 <memset>
  809104:	8005883a 	mov	r2,r16
  809108:	80000c15 	stw	zero,48(r16)
  80910c:	80000d15 	stw	zero,52(r16)
  809110:	80001115 	stw	zero,68(r16)
  809114:	80001215 	stw	zero,72(r16)
  809118:	dfc00417 	ldw	ra,16(sp)
  80911c:	dcc00317 	ldw	r19,12(sp)
  809120:	dc800217 	ldw	r18,8(sp)
  809124:	dc400117 	ldw	r17,4(sp)
  809128:	dc000017 	ldw	r16,0(sp)
  80912c:	dec00504 	addi	sp,sp,20
  809130:	f800283a 	ret
  809134:	01400104 	movi	r5,4
  809138:	9809883a 	mov	r4,r19
  80913c:	0808fd80 	call	808fd8 <__sfmoreglue>
  809140:	90800015 	stw	r2,0(r18)
  809144:	103fde1e 	bne	r2,zero,8090c0 <__alt_data_end+0xff8090c0>
  809148:	00800304 	movi	r2,12
  80914c:	98800015 	stw	r2,0(r19)
  809150:	0005883a 	mov	r2,zero
  809154:	003ff006 	br	809118 <__alt_data_end+0xff809118>

00809158 <_cleanup>:
  809158:	00802074 	movhi	r2,129
  80915c:	10902b04 	addi	r2,r2,16556
  809160:	11000017 	ldw	r4,0(r2)
  809164:	01402074 	movhi	r5,129
  809168:	2976e304 	addi	r5,r5,-9332
  80916c:	0809b741 	jmpi	809b74 <_fwalk_reent>

00809170 <__sinit>:
  809170:	20800e17 	ldw	r2,56(r4)
  809174:	10000126 	beq	r2,zero,80917c <__sinit+0xc>
  809178:	f800283a 	ret
  80917c:	0808e341 	jmpi	808e34 <__sinit.part.1>

00809180 <__sfp_lock_acquire>:
  809180:	f800283a 	ret

00809184 <__sfp_lock_release>:
  809184:	f800283a 	ret

00809188 <__sinit_lock_acquire>:
  809188:	f800283a 	ret

0080918c <__sinit_lock_release>:
  80918c:	f800283a 	ret

00809190 <__fp_lock_all>:
  809190:	00802074 	movhi	r2,129
  809194:	10902c04 	addi	r2,r2,16560
  809198:	11000017 	ldw	r4,0(r2)
  80919c:	01402074 	movhi	r5,129
  8091a0:	2963f404 	addi	r5,r5,-28720
  8091a4:	0809ab01 	jmpi	809ab0 <_fwalk>

008091a8 <__fp_unlock_all>:
  8091a8:	00802074 	movhi	r2,129
  8091ac:	10902c04 	addi	r2,r2,16560
  8091b0:	11000017 	ldw	r4,0(r2)
  8091b4:	01402074 	movhi	r5,129
  8091b8:	29638804 	addi	r5,r5,-29152
  8091bc:	0809ab01 	jmpi	809ab0 <_fwalk>

008091c0 <_malloc_trim_r>:
  8091c0:	defffb04 	addi	sp,sp,-20
  8091c4:	dcc00315 	stw	r19,12(sp)
  8091c8:	04c02074 	movhi	r19,129
  8091cc:	dc800215 	stw	r18,8(sp)
  8091d0:	dc400115 	stw	r17,4(sp)
  8091d4:	dc000015 	stw	r16,0(sp)
  8091d8:	dfc00415 	stw	ra,16(sp)
  8091dc:	2821883a 	mov	r16,r5
  8091e0:	9ccaa704 	addi	r19,r19,10908
  8091e4:	2025883a 	mov	r18,r4
  8091e8:	080fdf80 	call	80fdf8 <__malloc_lock>
  8091ec:	98800217 	ldw	r2,8(r19)
  8091f0:	14400117 	ldw	r17,4(r2)
  8091f4:	00bfff04 	movi	r2,-4
  8091f8:	88a2703a 	and	r17,r17,r2
  8091fc:	8c21c83a 	sub	r16,r17,r16
  809200:	8403fbc4 	addi	r16,r16,4079
  809204:	8020d33a 	srli	r16,r16,12
  809208:	0083ffc4 	movi	r2,4095
  80920c:	843fffc4 	addi	r16,r16,-1
  809210:	8020933a 	slli	r16,r16,12
  809214:	1400060e 	bge	r2,r16,809230 <_malloc_trim_r+0x70>
  809218:	000b883a 	mov	r5,zero
  80921c:	9009883a 	mov	r4,r18
  809220:	080c1600 	call	80c160 <_sbrk_r>
  809224:	98c00217 	ldw	r3,8(r19)
  809228:	1c47883a 	add	r3,r3,r17
  80922c:	10c00a26 	beq	r2,r3,809258 <_malloc_trim_r+0x98>
  809230:	9009883a 	mov	r4,r18
  809234:	080fe1c0 	call	80fe1c <__malloc_unlock>
  809238:	0005883a 	mov	r2,zero
  80923c:	dfc00417 	ldw	ra,16(sp)
  809240:	dcc00317 	ldw	r19,12(sp)
  809244:	dc800217 	ldw	r18,8(sp)
  809248:	dc400117 	ldw	r17,4(sp)
  80924c:	dc000017 	ldw	r16,0(sp)
  809250:	dec00504 	addi	sp,sp,20
  809254:	f800283a 	ret
  809258:	040bc83a 	sub	r5,zero,r16
  80925c:	9009883a 	mov	r4,r18
  809260:	080c1600 	call	80c160 <_sbrk_r>
  809264:	00ffffc4 	movi	r3,-1
  809268:	10c00d26 	beq	r2,r3,8092a0 <_malloc_trim_r+0xe0>
  80926c:	00c02074 	movhi	r3,129
  809270:	18d70404 	addi	r3,r3,23568
  809274:	18800017 	ldw	r2,0(r3)
  809278:	99000217 	ldw	r4,8(r19)
  80927c:	8c23c83a 	sub	r17,r17,r16
  809280:	8c400054 	ori	r17,r17,1
  809284:	1421c83a 	sub	r16,r2,r16
  809288:	24400115 	stw	r17,4(r4)
  80928c:	9009883a 	mov	r4,r18
  809290:	1c000015 	stw	r16,0(r3)
  809294:	080fe1c0 	call	80fe1c <__malloc_unlock>
  809298:	00800044 	movi	r2,1
  80929c:	003fe706 	br	80923c <__alt_data_end+0xff80923c>
  8092a0:	000b883a 	mov	r5,zero
  8092a4:	9009883a 	mov	r4,r18
  8092a8:	080c1600 	call	80c160 <_sbrk_r>
  8092ac:	99000217 	ldw	r4,8(r19)
  8092b0:	014003c4 	movi	r5,15
  8092b4:	1107c83a 	sub	r3,r2,r4
  8092b8:	28ffdd0e 	bge	r5,r3,809230 <__alt_data_end+0xff809230>
  8092bc:	01402074 	movhi	r5,129
  8092c0:	29502e04 	addi	r5,r5,16568
  8092c4:	29400017 	ldw	r5,0(r5)
  8092c8:	18c00054 	ori	r3,r3,1
  8092cc:	20c00115 	stw	r3,4(r4)
  8092d0:	00c02074 	movhi	r3,129
  8092d4:	1145c83a 	sub	r2,r2,r5
  8092d8:	18d70404 	addi	r3,r3,23568
  8092dc:	18800015 	stw	r2,0(r3)
  8092e0:	003fd306 	br	809230 <__alt_data_end+0xff809230>

008092e4 <_free_r>:
  8092e4:	28004126 	beq	r5,zero,8093ec <_free_r+0x108>
  8092e8:	defffd04 	addi	sp,sp,-12
  8092ec:	dc400115 	stw	r17,4(sp)
  8092f0:	dc000015 	stw	r16,0(sp)
  8092f4:	2023883a 	mov	r17,r4
  8092f8:	2821883a 	mov	r16,r5
  8092fc:	dfc00215 	stw	ra,8(sp)
  809300:	080fdf80 	call	80fdf8 <__malloc_lock>
  809304:	81ffff17 	ldw	r7,-4(r16)
  809308:	00bfff84 	movi	r2,-2
  80930c:	01002074 	movhi	r4,129
  809310:	81bffe04 	addi	r6,r16,-8
  809314:	3884703a 	and	r2,r7,r2
  809318:	210aa704 	addi	r4,r4,10908
  80931c:	308b883a 	add	r5,r6,r2
  809320:	2a400117 	ldw	r9,4(r5)
  809324:	22000217 	ldw	r8,8(r4)
  809328:	00ffff04 	movi	r3,-4
  80932c:	48c6703a 	and	r3,r9,r3
  809330:	2a005726 	beq	r5,r8,809490 <_free_r+0x1ac>
  809334:	28c00115 	stw	r3,4(r5)
  809338:	39c0004c 	andi	r7,r7,1
  80933c:	3800091e 	bne	r7,zero,809364 <_free_r+0x80>
  809340:	823ffe17 	ldw	r8,-8(r16)
  809344:	22400204 	addi	r9,r4,8
  809348:	320dc83a 	sub	r6,r6,r8
  80934c:	31c00217 	ldw	r7,8(r6)
  809350:	1205883a 	add	r2,r2,r8
  809354:	3a406526 	beq	r7,r9,8094ec <_free_r+0x208>
  809358:	32000317 	ldw	r8,12(r6)
  80935c:	3a000315 	stw	r8,12(r7)
  809360:	41c00215 	stw	r7,8(r8)
  809364:	28cf883a 	add	r7,r5,r3
  809368:	39c00117 	ldw	r7,4(r7)
  80936c:	39c0004c 	andi	r7,r7,1
  809370:	38003a26 	beq	r7,zero,80945c <_free_r+0x178>
  809374:	10c00054 	ori	r3,r2,1
  809378:	30c00115 	stw	r3,4(r6)
  80937c:	3087883a 	add	r3,r6,r2
  809380:	18800015 	stw	r2,0(r3)
  809384:	00c07fc4 	movi	r3,511
  809388:	18801936 	bltu	r3,r2,8093f0 <_free_r+0x10c>
  80938c:	1004d0fa 	srli	r2,r2,3
  809390:	01c00044 	movi	r7,1
  809394:	21400117 	ldw	r5,4(r4)
  809398:	10c00044 	addi	r3,r2,1
  80939c:	18c7883a 	add	r3,r3,r3
  8093a0:	1005d0ba 	srai	r2,r2,2
  8093a4:	18c7883a 	add	r3,r3,r3
  8093a8:	18c7883a 	add	r3,r3,r3
  8093ac:	1907883a 	add	r3,r3,r4
  8093b0:	3884983a 	sll	r2,r7,r2
  8093b4:	19c00017 	ldw	r7,0(r3)
  8093b8:	1a3ffe04 	addi	r8,r3,-8
  8093bc:	1144b03a 	or	r2,r2,r5
  8093c0:	32000315 	stw	r8,12(r6)
  8093c4:	31c00215 	stw	r7,8(r6)
  8093c8:	20800115 	stw	r2,4(r4)
  8093cc:	19800015 	stw	r6,0(r3)
  8093d0:	39800315 	stw	r6,12(r7)
  8093d4:	8809883a 	mov	r4,r17
  8093d8:	dfc00217 	ldw	ra,8(sp)
  8093dc:	dc400117 	ldw	r17,4(sp)
  8093e0:	dc000017 	ldw	r16,0(sp)
  8093e4:	dec00304 	addi	sp,sp,12
  8093e8:	080fe1c1 	jmpi	80fe1c <__malloc_unlock>
  8093ec:	f800283a 	ret
  8093f0:	100ad27a 	srli	r5,r2,9
  8093f4:	00c00104 	movi	r3,4
  8093f8:	19404a36 	bltu	r3,r5,809524 <_free_r+0x240>
  8093fc:	100ad1ba 	srli	r5,r2,6
  809400:	28c00e44 	addi	r3,r5,57
  809404:	18c7883a 	add	r3,r3,r3
  809408:	29400e04 	addi	r5,r5,56
  80940c:	18c7883a 	add	r3,r3,r3
  809410:	18c7883a 	add	r3,r3,r3
  809414:	1909883a 	add	r4,r3,r4
  809418:	20c00017 	ldw	r3,0(r4)
  80941c:	01c02074 	movhi	r7,129
  809420:	213ffe04 	addi	r4,r4,-8
  809424:	39caa704 	addi	r7,r7,10908
  809428:	20c04426 	beq	r4,r3,80953c <_free_r+0x258>
  80942c:	01ffff04 	movi	r7,-4
  809430:	19400117 	ldw	r5,4(r3)
  809434:	29ca703a 	and	r5,r5,r7
  809438:	1140022e 	bgeu	r2,r5,809444 <_free_r+0x160>
  80943c:	18c00217 	ldw	r3,8(r3)
  809440:	20fffb1e 	bne	r4,r3,809430 <__alt_data_end+0xff809430>
  809444:	19000317 	ldw	r4,12(r3)
  809448:	31000315 	stw	r4,12(r6)
  80944c:	30c00215 	stw	r3,8(r6)
  809450:	21800215 	stw	r6,8(r4)
  809454:	19800315 	stw	r6,12(r3)
  809458:	003fde06 	br	8093d4 <__alt_data_end+0xff8093d4>
  80945c:	29c00217 	ldw	r7,8(r5)
  809460:	10c5883a 	add	r2,r2,r3
  809464:	00c02074 	movhi	r3,129
  809468:	18caa904 	addi	r3,r3,10916
  80946c:	38c03b26 	beq	r7,r3,80955c <_free_r+0x278>
  809470:	2a000317 	ldw	r8,12(r5)
  809474:	11400054 	ori	r5,r2,1
  809478:	3087883a 	add	r3,r6,r2
  80947c:	3a000315 	stw	r8,12(r7)
  809480:	41c00215 	stw	r7,8(r8)
  809484:	31400115 	stw	r5,4(r6)
  809488:	18800015 	stw	r2,0(r3)
  80948c:	003fbd06 	br	809384 <__alt_data_end+0xff809384>
  809490:	39c0004c 	andi	r7,r7,1
  809494:	10c5883a 	add	r2,r2,r3
  809498:	3800071e 	bne	r7,zero,8094b8 <_free_r+0x1d4>
  80949c:	81fffe17 	ldw	r7,-8(r16)
  8094a0:	31cdc83a 	sub	r6,r6,r7
  8094a4:	30c00317 	ldw	r3,12(r6)
  8094a8:	31400217 	ldw	r5,8(r6)
  8094ac:	11c5883a 	add	r2,r2,r7
  8094b0:	28c00315 	stw	r3,12(r5)
  8094b4:	19400215 	stw	r5,8(r3)
  8094b8:	10c00054 	ori	r3,r2,1
  8094bc:	30c00115 	stw	r3,4(r6)
  8094c0:	00c02074 	movhi	r3,129
  8094c4:	18d02f04 	addi	r3,r3,16572
  8094c8:	18c00017 	ldw	r3,0(r3)
  8094cc:	21800215 	stw	r6,8(r4)
  8094d0:	10ffc036 	bltu	r2,r3,8093d4 <__alt_data_end+0xff8093d4>
  8094d4:	00802074 	movhi	r2,129
  8094d8:	1096fb04 	addi	r2,r2,23532
  8094dc:	11400017 	ldw	r5,0(r2)
  8094e0:	8809883a 	mov	r4,r17
  8094e4:	08091c00 	call	8091c0 <_malloc_trim_r>
  8094e8:	003fba06 	br	8093d4 <__alt_data_end+0xff8093d4>
  8094ec:	28c9883a 	add	r4,r5,r3
  8094f0:	21000117 	ldw	r4,4(r4)
  8094f4:	2100004c 	andi	r4,r4,1
  8094f8:	2000391e 	bne	r4,zero,8095e0 <_free_r+0x2fc>
  8094fc:	29c00217 	ldw	r7,8(r5)
  809500:	29000317 	ldw	r4,12(r5)
  809504:	1885883a 	add	r2,r3,r2
  809508:	10c00054 	ori	r3,r2,1
  80950c:	39000315 	stw	r4,12(r7)
  809510:	21c00215 	stw	r7,8(r4)
  809514:	30c00115 	stw	r3,4(r6)
  809518:	308d883a 	add	r6,r6,r2
  80951c:	30800015 	stw	r2,0(r6)
  809520:	003fac06 	br	8093d4 <__alt_data_end+0xff8093d4>
  809524:	00c00504 	movi	r3,20
  809528:	19401536 	bltu	r3,r5,809580 <_free_r+0x29c>
  80952c:	28c01704 	addi	r3,r5,92
  809530:	18c7883a 	add	r3,r3,r3
  809534:	294016c4 	addi	r5,r5,91
  809538:	003fb406 	br	80940c <__alt_data_end+0xff80940c>
  80953c:	280bd0ba 	srai	r5,r5,2
  809540:	00c00044 	movi	r3,1
  809544:	38800117 	ldw	r2,4(r7)
  809548:	194a983a 	sll	r5,r3,r5
  80954c:	2007883a 	mov	r3,r4
  809550:	2884b03a 	or	r2,r5,r2
  809554:	38800115 	stw	r2,4(r7)
  809558:	003fbb06 	br	809448 <__alt_data_end+0xff809448>
  80955c:	21800515 	stw	r6,20(r4)
  809560:	21800415 	stw	r6,16(r4)
  809564:	10c00054 	ori	r3,r2,1
  809568:	31c00315 	stw	r7,12(r6)
  80956c:	31c00215 	stw	r7,8(r6)
  809570:	30c00115 	stw	r3,4(r6)
  809574:	308d883a 	add	r6,r6,r2
  809578:	30800015 	stw	r2,0(r6)
  80957c:	003f9506 	br	8093d4 <__alt_data_end+0xff8093d4>
  809580:	00c01504 	movi	r3,84
  809584:	19400536 	bltu	r3,r5,80959c <_free_r+0x2b8>
  809588:	100ad33a 	srli	r5,r2,12
  80958c:	28c01bc4 	addi	r3,r5,111
  809590:	18c7883a 	add	r3,r3,r3
  809594:	29401b84 	addi	r5,r5,110
  809598:	003f9c06 	br	80940c <__alt_data_end+0xff80940c>
  80959c:	00c05504 	movi	r3,340
  8095a0:	19400536 	bltu	r3,r5,8095b8 <_free_r+0x2d4>
  8095a4:	100ad3fa 	srli	r5,r2,15
  8095a8:	28c01e04 	addi	r3,r5,120
  8095ac:	18c7883a 	add	r3,r3,r3
  8095b0:	29401dc4 	addi	r5,r5,119
  8095b4:	003f9506 	br	80940c <__alt_data_end+0xff80940c>
  8095b8:	00c15504 	movi	r3,1364
  8095bc:	19400536 	bltu	r3,r5,8095d4 <_free_r+0x2f0>
  8095c0:	100ad4ba 	srli	r5,r2,18
  8095c4:	28c01f44 	addi	r3,r5,125
  8095c8:	18c7883a 	add	r3,r3,r3
  8095cc:	29401f04 	addi	r5,r5,124
  8095d0:	003f8e06 	br	80940c <__alt_data_end+0xff80940c>
  8095d4:	00c03f84 	movi	r3,254
  8095d8:	01401f84 	movi	r5,126
  8095dc:	003f8b06 	br	80940c <__alt_data_end+0xff80940c>
  8095e0:	10c00054 	ori	r3,r2,1
  8095e4:	30c00115 	stw	r3,4(r6)
  8095e8:	308d883a 	add	r6,r6,r2
  8095ec:	30800015 	stw	r2,0(r6)
  8095f0:	003f7806 	br	8093d4 <__alt_data_end+0xff8093d4>

008095f4 <__sfvwrite_r>:
  8095f4:	30800217 	ldw	r2,8(r6)
  8095f8:	10006726 	beq	r2,zero,809798 <__sfvwrite_r+0x1a4>
  8095fc:	28c0030b 	ldhu	r3,12(r5)
  809600:	defff404 	addi	sp,sp,-48
  809604:	dd400715 	stw	r21,28(sp)
  809608:	dd000615 	stw	r20,24(sp)
  80960c:	dc000215 	stw	r16,8(sp)
  809610:	dfc00b15 	stw	ra,44(sp)
  809614:	df000a15 	stw	fp,40(sp)
  809618:	ddc00915 	stw	r23,36(sp)
  80961c:	dd800815 	stw	r22,32(sp)
  809620:	dcc00515 	stw	r19,20(sp)
  809624:	dc800415 	stw	r18,16(sp)
  809628:	dc400315 	stw	r17,12(sp)
  80962c:	1880020c 	andi	r2,r3,8
  809630:	2821883a 	mov	r16,r5
  809634:	202b883a 	mov	r21,r4
  809638:	3029883a 	mov	r20,r6
  80963c:	10002726 	beq	r2,zero,8096dc <__sfvwrite_r+0xe8>
  809640:	28800417 	ldw	r2,16(r5)
  809644:	10002526 	beq	r2,zero,8096dc <__sfvwrite_r+0xe8>
  809648:	1880008c 	andi	r2,r3,2
  80964c:	a4400017 	ldw	r17,0(r20)
  809650:	10002a26 	beq	r2,zero,8096fc <__sfvwrite_r+0x108>
  809654:	05a00034 	movhi	r22,32768
  809658:	0027883a 	mov	r19,zero
  80965c:	0025883a 	mov	r18,zero
  809660:	b5bf0004 	addi	r22,r22,-1024
  809664:	980d883a 	mov	r6,r19
  809668:	a809883a 	mov	r4,r21
  80966c:	90004626 	beq	r18,zero,809788 <__sfvwrite_r+0x194>
  809670:	900f883a 	mov	r7,r18
  809674:	b480022e 	bgeu	r22,r18,809680 <__sfvwrite_r+0x8c>
  809678:	01e00034 	movhi	r7,32768
  80967c:	39ff0004 	addi	r7,r7,-1024
  809680:	80800917 	ldw	r2,36(r16)
  809684:	81400717 	ldw	r5,28(r16)
  809688:	103ee83a 	callr	r2
  80968c:	0080570e 	bge	zero,r2,8097ec <__sfvwrite_r+0x1f8>
  809690:	a0c00217 	ldw	r3,8(r20)
  809694:	98a7883a 	add	r19,r19,r2
  809698:	90a5c83a 	sub	r18,r18,r2
  80969c:	1885c83a 	sub	r2,r3,r2
  8096a0:	a0800215 	stw	r2,8(r20)
  8096a4:	103fef1e 	bne	r2,zero,809664 <__alt_data_end+0xff809664>
  8096a8:	0005883a 	mov	r2,zero
  8096ac:	dfc00b17 	ldw	ra,44(sp)
  8096b0:	df000a17 	ldw	fp,40(sp)
  8096b4:	ddc00917 	ldw	r23,36(sp)
  8096b8:	dd800817 	ldw	r22,32(sp)
  8096bc:	dd400717 	ldw	r21,28(sp)
  8096c0:	dd000617 	ldw	r20,24(sp)
  8096c4:	dcc00517 	ldw	r19,20(sp)
  8096c8:	dc800417 	ldw	r18,16(sp)
  8096cc:	dc400317 	ldw	r17,12(sp)
  8096d0:	dc000217 	ldw	r16,8(sp)
  8096d4:	dec00c04 	addi	sp,sp,48
  8096d8:	f800283a 	ret
  8096dc:	800b883a 	mov	r5,r16
  8096e0:	a809883a 	mov	r4,r21
  8096e4:	080719c0 	call	80719c <__swsetup_r>
  8096e8:	1000eb1e 	bne	r2,zero,809a98 <__sfvwrite_r+0x4a4>
  8096ec:	80c0030b 	ldhu	r3,12(r16)
  8096f0:	a4400017 	ldw	r17,0(r20)
  8096f4:	1880008c 	andi	r2,r3,2
  8096f8:	103fd61e 	bne	r2,zero,809654 <__alt_data_end+0xff809654>
  8096fc:	1880004c 	andi	r2,r3,1
  809700:	10003f1e 	bne	r2,zero,809800 <__sfvwrite_r+0x20c>
  809704:	0039883a 	mov	fp,zero
  809708:	0025883a 	mov	r18,zero
  80970c:	90001a26 	beq	r18,zero,809778 <__sfvwrite_r+0x184>
  809710:	1880800c 	andi	r2,r3,512
  809714:	84c00217 	ldw	r19,8(r16)
  809718:	10002126 	beq	r2,zero,8097a0 <__sfvwrite_r+0x1ac>
  80971c:	982f883a 	mov	r23,r19
  809720:	94c09336 	bltu	r18,r19,809970 <__sfvwrite_r+0x37c>
  809724:	1881200c 	andi	r2,r3,1152
  809728:	10009e1e 	bne	r2,zero,8099a4 <__sfvwrite_r+0x3b0>
  80972c:	81000017 	ldw	r4,0(r16)
  809730:	b80d883a 	mov	r6,r23
  809734:	e00b883a 	mov	r5,fp
  809738:	080a9080 	call	80a908 <memmove>
  80973c:	80c00217 	ldw	r3,8(r16)
  809740:	81000017 	ldw	r4,0(r16)
  809744:	9005883a 	mov	r2,r18
  809748:	1ce7c83a 	sub	r19,r3,r19
  80974c:	25cf883a 	add	r7,r4,r23
  809750:	84c00215 	stw	r19,8(r16)
  809754:	81c00015 	stw	r7,0(r16)
  809758:	a0c00217 	ldw	r3,8(r20)
  80975c:	e0b9883a 	add	fp,fp,r2
  809760:	90a5c83a 	sub	r18,r18,r2
  809764:	18a7c83a 	sub	r19,r3,r2
  809768:	a4c00215 	stw	r19,8(r20)
  80976c:	983fce26 	beq	r19,zero,8096a8 <__alt_data_end+0xff8096a8>
  809770:	80c0030b 	ldhu	r3,12(r16)
  809774:	903fe61e 	bne	r18,zero,809710 <__alt_data_end+0xff809710>
  809778:	8f000017 	ldw	fp,0(r17)
  80977c:	8c800117 	ldw	r18,4(r17)
  809780:	8c400204 	addi	r17,r17,8
  809784:	003fe106 	br	80970c <__alt_data_end+0xff80970c>
  809788:	8cc00017 	ldw	r19,0(r17)
  80978c:	8c800117 	ldw	r18,4(r17)
  809790:	8c400204 	addi	r17,r17,8
  809794:	003fb306 	br	809664 <__alt_data_end+0xff809664>
  809798:	0005883a 	mov	r2,zero
  80979c:	f800283a 	ret
  8097a0:	81000017 	ldw	r4,0(r16)
  8097a4:	80800417 	ldw	r2,16(r16)
  8097a8:	11005736 	bltu	r2,r4,809908 <__sfvwrite_r+0x314>
  8097ac:	85c00517 	ldw	r23,20(r16)
  8097b0:	95c05536 	bltu	r18,r23,809908 <__sfvwrite_r+0x314>
  8097b4:	00a00034 	movhi	r2,32768
  8097b8:	10bfffc4 	addi	r2,r2,-1
  8097bc:	9009883a 	mov	r4,r18
  8097c0:	1480012e 	bgeu	r2,r18,8097c8 <__sfvwrite_r+0x1d4>
  8097c4:	1009883a 	mov	r4,r2
  8097c8:	b80b883a 	mov	r5,r23
  8097cc:	0802a480 	call	802a48 <__divsi3>
  8097d0:	15cf383a 	mul	r7,r2,r23
  8097d4:	81400717 	ldw	r5,28(r16)
  8097d8:	80800917 	ldw	r2,36(r16)
  8097dc:	e00d883a 	mov	r6,fp
  8097e0:	a809883a 	mov	r4,r21
  8097e4:	103ee83a 	callr	r2
  8097e8:	00bfdb16 	blt	zero,r2,809758 <__alt_data_end+0xff809758>
  8097ec:	8080030b 	ldhu	r2,12(r16)
  8097f0:	10801014 	ori	r2,r2,64
  8097f4:	8080030d 	sth	r2,12(r16)
  8097f8:	00bfffc4 	movi	r2,-1
  8097fc:	003fab06 	br	8096ac <__alt_data_end+0xff8096ac>
  809800:	0027883a 	mov	r19,zero
  809804:	0011883a 	mov	r8,zero
  809808:	0039883a 	mov	fp,zero
  80980c:	0025883a 	mov	r18,zero
  809810:	90001f26 	beq	r18,zero,809890 <__sfvwrite_r+0x29c>
  809814:	40005a26 	beq	r8,zero,809980 <__sfvwrite_r+0x38c>
  809818:	982d883a 	mov	r22,r19
  80981c:	94c0012e 	bgeu	r18,r19,809824 <__sfvwrite_r+0x230>
  809820:	902d883a 	mov	r22,r18
  809824:	81000017 	ldw	r4,0(r16)
  809828:	80800417 	ldw	r2,16(r16)
  80982c:	b02f883a 	mov	r23,r22
  809830:	81c00517 	ldw	r7,20(r16)
  809834:	1100032e 	bgeu	r2,r4,809844 <__sfvwrite_r+0x250>
  809838:	80c00217 	ldw	r3,8(r16)
  80983c:	38c7883a 	add	r3,r7,r3
  809840:	1d801816 	blt	r3,r22,8098a4 <__sfvwrite_r+0x2b0>
  809844:	b1c03e16 	blt	r22,r7,809940 <__sfvwrite_r+0x34c>
  809848:	80800917 	ldw	r2,36(r16)
  80984c:	81400717 	ldw	r5,28(r16)
  809850:	e00d883a 	mov	r6,fp
  809854:	da000115 	stw	r8,4(sp)
  809858:	a809883a 	mov	r4,r21
  80985c:	103ee83a 	callr	r2
  809860:	102f883a 	mov	r23,r2
  809864:	da000117 	ldw	r8,4(sp)
  809868:	00bfe00e 	bge	zero,r2,8097ec <__alt_data_end+0xff8097ec>
  80986c:	9de7c83a 	sub	r19,r19,r23
  809870:	98001f26 	beq	r19,zero,8098f0 <__sfvwrite_r+0x2fc>
  809874:	a0800217 	ldw	r2,8(r20)
  809878:	e5f9883a 	add	fp,fp,r23
  80987c:	95e5c83a 	sub	r18,r18,r23
  809880:	15efc83a 	sub	r23,r2,r23
  809884:	a5c00215 	stw	r23,8(r20)
  809888:	b83f8726 	beq	r23,zero,8096a8 <__alt_data_end+0xff8096a8>
  80988c:	903fe11e 	bne	r18,zero,809814 <__alt_data_end+0xff809814>
  809890:	8f000017 	ldw	fp,0(r17)
  809894:	8c800117 	ldw	r18,4(r17)
  809898:	0011883a 	mov	r8,zero
  80989c:	8c400204 	addi	r17,r17,8
  8098a0:	003fdb06 	br	809810 <__alt_data_end+0xff809810>
  8098a4:	180d883a 	mov	r6,r3
  8098a8:	e00b883a 	mov	r5,fp
  8098ac:	da000115 	stw	r8,4(sp)
  8098b0:	d8c00015 	stw	r3,0(sp)
  8098b4:	080a9080 	call	80a908 <memmove>
  8098b8:	d8c00017 	ldw	r3,0(sp)
  8098bc:	80800017 	ldw	r2,0(r16)
  8098c0:	800b883a 	mov	r5,r16
  8098c4:	a809883a 	mov	r4,r21
  8098c8:	10c5883a 	add	r2,r2,r3
  8098cc:	80800015 	stw	r2,0(r16)
  8098d0:	d8c00015 	stw	r3,0(sp)
  8098d4:	0808d940 	call	808d94 <_fflush_r>
  8098d8:	d8c00017 	ldw	r3,0(sp)
  8098dc:	da000117 	ldw	r8,4(sp)
  8098e0:	103fc21e 	bne	r2,zero,8097ec <__alt_data_end+0xff8097ec>
  8098e4:	182f883a 	mov	r23,r3
  8098e8:	9de7c83a 	sub	r19,r19,r23
  8098ec:	983fe11e 	bne	r19,zero,809874 <__alt_data_end+0xff809874>
  8098f0:	800b883a 	mov	r5,r16
  8098f4:	a809883a 	mov	r4,r21
  8098f8:	0808d940 	call	808d94 <_fflush_r>
  8098fc:	103fbb1e 	bne	r2,zero,8097ec <__alt_data_end+0xff8097ec>
  809900:	0011883a 	mov	r8,zero
  809904:	003fdb06 	br	809874 <__alt_data_end+0xff809874>
  809908:	94c0012e 	bgeu	r18,r19,809910 <__sfvwrite_r+0x31c>
  80990c:	9027883a 	mov	r19,r18
  809910:	980d883a 	mov	r6,r19
  809914:	e00b883a 	mov	r5,fp
  809918:	080a9080 	call	80a908 <memmove>
  80991c:	80800217 	ldw	r2,8(r16)
  809920:	80c00017 	ldw	r3,0(r16)
  809924:	14c5c83a 	sub	r2,r2,r19
  809928:	1cc7883a 	add	r3,r3,r19
  80992c:	80800215 	stw	r2,8(r16)
  809930:	80c00015 	stw	r3,0(r16)
  809934:	10004326 	beq	r2,zero,809a44 <__sfvwrite_r+0x450>
  809938:	9805883a 	mov	r2,r19
  80993c:	003f8606 	br	809758 <__alt_data_end+0xff809758>
  809940:	b00d883a 	mov	r6,r22
  809944:	e00b883a 	mov	r5,fp
  809948:	da000115 	stw	r8,4(sp)
  80994c:	080a9080 	call	80a908 <memmove>
  809950:	80800217 	ldw	r2,8(r16)
  809954:	80c00017 	ldw	r3,0(r16)
  809958:	da000117 	ldw	r8,4(sp)
  80995c:	1585c83a 	sub	r2,r2,r22
  809960:	1dad883a 	add	r22,r3,r22
  809964:	80800215 	stw	r2,8(r16)
  809968:	85800015 	stw	r22,0(r16)
  80996c:	003fbf06 	br	80986c <__alt_data_end+0xff80986c>
  809970:	81000017 	ldw	r4,0(r16)
  809974:	9027883a 	mov	r19,r18
  809978:	902f883a 	mov	r23,r18
  80997c:	003f6c06 	br	809730 <__alt_data_end+0xff809730>
  809980:	900d883a 	mov	r6,r18
  809984:	01400284 	movi	r5,10
  809988:	e009883a 	mov	r4,fp
  80998c:	080a6dc0 	call	80a6dc <memchr>
  809990:	10003e26 	beq	r2,zero,809a8c <__sfvwrite_r+0x498>
  809994:	10800044 	addi	r2,r2,1
  809998:	1727c83a 	sub	r19,r2,fp
  80999c:	02000044 	movi	r8,1
  8099a0:	003f9d06 	br	809818 <__alt_data_end+0xff809818>
  8099a4:	80800517 	ldw	r2,20(r16)
  8099a8:	81400417 	ldw	r5,16(r16)
  8099ac:	81c00017 	ldw	r7,0(r16)
  8099b0:	10a7883a 	add	r19,r2,r2
  8099b4:	9885883a 	add	r2,r19,r2
  8099b8:	1026d7fa 	srli	r19,r2,31
  8099bc:	396dc83a 	sub	r22,r7,r5
  8099c0:	b1000044 	addi	r4,r22,1
  8099c4:	9885883a 	add	r2,r19,r2
  8099c8:	1027d07a 	srai	r19,r2,1
  8099cc:	2485883a 	add	r2,r4,r18
  8099d0:	980d883a 	mov	r6,r19
  8099d4:	9880022e 	bgeu	r19,r2,8099e0 <__sfvwrite_r+0x3ec>
  8099d8:	1027883a 	mov	r19,r2
  8099dc:	100d883a 	mov	r6,r2
  8099e0:	18c1000c 	andi	r3,r3,1024
  8099e4:	18001c26 	beq	r3,zero,809a58 <__sfvwrite_r+0x464>
  8099e8:	300b883a 	mov	r5,r6
  8099ec:	a809883a 	mov	r4,r21
  8099f0:	0809ed00 	call	809ed0 <_malloc_r>
  8099f4:	102f883a 	mov	r23,r2
  8099f8:	10002926 	beq	r2,zero,809aa0 <__sfvwrite_r+0x4ac>
  8099fc:	81400417 	ldw	r5,16(r16)
  809a00:	b00d883a 	mov	r6,r22
  809a04:	1009883a 	mov	r4,r2
  809a08:	080a7c00 	call	80a7c0 <memcpy>
  809a0c:	8080030b 	ldhu	r2,12(r16)
  809a10:	00fedfc4 	movi	r3,-1153
  809a14:	10c4703a 	and	r2,r2,r3
  809a18:	10802014 	ori	r2,r2,128
  809a1c:	8080030d 	sth	r2,12(r16)
  809a20:	bd89883a 	add	r4,r23,r22
  809a24:	9d8fc83a 	sub	r7,r19,r22
  809a28:	85c00415 	stw	r23,16(r16)
  809a2c:	84c00515 	stw	r19,20(r16)
  809a30:	81000015 	stw	r4,0(r16)
  809a34:	9027883a 	mov	r19,r18
  809a38:	81c00215 	stw	r7,8(r16)
  809a3c:	902f883a 	mov	r23,r18
  809a40:	003f3b06 	br	809730 <__alt_data_end+0xff809730>
  809a44:	800b883a 	mov	r5,r16
  809a48:	a809883a 	mov	r4,r21
  809a4c:	0808d940 	call	808d94 <_fflush_r>
  809a50:	103fb926 	beq	r2,zero,809938 <__alt_data_end+0xff809938>
  809a54:	003f6506 	br	8097ec <__alt_data_end+0xff8097ec>
  809a58:	a809883a 	mov	r4,r21
  809a5c:	080bb880 	call	80bb88 <_realloc_r>
  809a60:	102f883a 	mov	r23,r2
  809a64:	103fee1e 	bne	r2,zero,809a20 <__alt_data_end+0xff809a20>
  809a68:	81400417 	ldw	r5,16(r16)
  809a6c:	a809883a 	mov	r4,r21
  809a70:	08092e40 	call	8092e4 <_free_r>
  809a74:	8080030b 	ldhu	r2,12(r16)
  809a78:	00ffdfc4 	movi	r3,-129
  809a7c:	1884703a 	and	r2,r3,r2
  809a80:	00c00304 	movi	r3,12
  809a84:	a8c00015 	stw	r3,0(r21)
  809a88:	003f5906 	br	8097f0 <__alt_data_end+0xff8097f0>
  809a8c:	94c00044 	addi	r19,r18,1
  809a90:	02000044 	movi	r8,1
  809a94:	003f6006 	br	809818 <__alt_data_end+0xff809818>
  809a98:	00bfffc4 	movi	r2,-1
  809a9c:	003f0306 	br	8096ac <__alt_data_end+0xff8096ac>
  809aa0:	00800304 	movi	r2,12
  809aa4:	a8800015 	stw	r2,0(r21)
  809aa8:	8080030b 	ldhu	r2,12(r16)
  809aac:	003f5006 	br	8097f0 <__alt_data_end+0xff8097f0>

00809ab0 <_fwalk>:
  809ab0:	defff704 	addi	sp,sp,-36
  809ab4:	dd000415 	stw	r20,16(sp)
  809ab8:	dfc00815 	stw	ra,32(sp)
  809abc:	ddc00715 	stw	r23,28(sp)
  809ac0:	dd800615 	stw	r22,24(sp)
  809ac4:	dd400515 	stw	r21,20(sp)
  809ac8:	dcc00315 	stw	r19,12(sp)
  809acc:	dc800215 	stw	r18,8(sp)
  809ad0:	dc400115 	stw	r17,4(sp)
  809ad4:	dc000015 	stw	r16,0(sp)
  809ad8:	2500b804 	addi	r20,r4,736
  809adc:	a0002326 	beq	r20,zero,809b6c <_fwalk+0xbc>
  809ae0:	282b883a 	mov	r21,r5
  809ae4:	002f883a 	mov	r23,zero
  809ae8:	05800044 	movi	r22,1
  809aec:	04ffffc4 	movi	r19,-1
  809af0:	a4400117 	ldw	r17,4(r20)
  809af4:	a4800217 	ldw	r18,8(r20)
  809af8:	8c7fffc4 	addi	r17,r17,-1
  809afc:	88000d16 	blt	r17,zero,809b34 <_fwalk+0x84>
  809b00:	94000304 	addi	r16,r18,12
  809b04:	94800384 	addi	r18,r18,14
  809b08:	8080000b 	ldhu	r2,0(r16)
  809b0c:	8c7fffc4 	addi	r17,r17,-1
  809b10:	813ffd04 	addi	r4,r16,-12
  809b14:	b080042e 	bgeu	r22,r2,809b28 <_fwalk+0x78>
  809b18:	9080000f 	ldh	r2,0(r18)
  809b1c:	14c00226 	beq	r2,r19,809b28 <_fwalk+0x78>
  809b20:	a83ee83a 	callr	r21
  809b24:	b8aeb03a 	or	r23,r23,r2
  809b28:	84001a04 	addi	r16,r16,104
  809b2c:	94801a04 	addi	r18,r18,104
  809b30:	8cfff51e 	bne	r17,r19,809b08 <__alt_data_end+0xff809b08>
  809b34:	a5000017 	ldw	r20,0(r20)
  809b38:	a03fed1e 	bne	r20,zero,809af0 <__alt_data_end+0xff809af0>
  809b3c:	b805883a 	mov	r2,r23
  809b40:	dfc00817 	ldw	ra,32(sp)
  809b44:	ddc00717 	ldw	r23,28(sp)
  809b48:	dd800617 	ldw	r22,24(sp)
  809b4c:	dd400517 	ldw	r21,20(sp)
  809b50:	dd000417 	ldw	r20,16(sp)
  809b54:	dcc00317 	ldw	r19,12(sp)
  809b58:	dc800217 	ldw	r18,8(sp)
  809b5c:	dc400117 	ldw	r17,4(sp)
  809b60:	dc000017 	ldw	r16,0(sp)
  809b64:	dec00904 	addi	sp,sp,36
  809b68:	f800283a 	ret
  809b6c:	002f883a 	mov	r23,zero
  809b70:	003ff206 	br	809b3c <__alt_data_end+0xff809b3c>

00809b74 <_fwalk_reent>:
  809b74:	defff704 	addi	sp,sp,-36
  809b78:	dd000415 	stw	r20,16(sp)
  809b7c:	dfc00815 	stw	ra,32(sp)
  809b80:	ddc00715 	stw	r23,28(sp)
  809b84:	dd800615 	stw	r22,24(sp)
  809b88:	dd400515 	stw	r21,20(sp)
  809b8c:	dcc00315 	stw	r19,12(sp)
  809b90:	dc800215 	stw	r18,8(sp)
  809b94:	dc400115 	stw	r17,4(sp)
  809b98:	dc000015 	stw	r16,0(sp)
  809b9c:	2500b804 	addi	r20,r4,736
  809ba0:	a0002326 	beq	r20,zero,809c30 <_fwalk_reent+0xbc>
  809ba4:	282b883a 	mov	r21,r5
  809ba8:	2027883a 	mov	r19,r4
  809bac:	002f883a 	mov	r23,zero
  809bb0:	05800044 	movi	r22,1
  809bb4:	04bfffc4 	movi	r18,-1
  809bb8:	a4400117 	ldw	r17,4(r20)
  809bbc:	a4000217 	ldw	r16,8(r20)
  809bc0:	8c7fffc4 	addi	r17,r17,-1
  809bc4:	88000c16 	blt	r17,zero,809bf8 <_fwalk_reent+0x84>
  809bc8:	84000304 	addi	r16,r16,12
  809bcc:	8080000b 	ldhu	r2,0(r16)
  809bd0:	8c7fffc4 	addi	r17,r17,-1
  809bd4:	817ffd04 	addi	r5,r16,-12
  809bd8:	b080052e 	bgeu	r22,r2,809bf0 <_fwalk_reent+0x7c>
  809bdc:	8080008f 	ldh	r2,2(r16)
  809be0:	9809883a 	mov	r4,r19
  809be4:	14800226 	beq	r2,r18,809bf0 <_fwalk_reent+0x7c>
  809be8:	a83ee83a 	callr	r21
  809bec:	b8aeb03a 	or	r23,r23,r2
  809bf0:	84001a04 	addi	r16,r16,104
  809bf4:	8cbff51e 	bne	r17,r18,809bcc <__alt_data_end+0xff809bcc>
  809bf8:	a5000017 	ldw	r20,0(r20)
  809bfc:	a03fee1e 	bne	r20,zero,809bb8 <__alt_data_end+0xff809bb8>
  809c00:	b805883a 	mov	r2,r23
  809c04:	dfc00817 	ldw	ra,32(sp)
  809c08:	ddc00717 	ldw	r23,28(sp)
  809c0c:	dd800617 	ldw	r22,24(sp)
  809c10:	dd400517 	ldw	r21,20(sp)
  809c14:	dd000417 	ldw	r20,16(sp)
  809c18:	dcc00317 	ldw	r19,12(sp)
  809c1c:	dc800217 	ldw	r18,8(sp)
  809c20:	dc400117 	ldw	r17,4(sp)
  809c24:	dc000017 	ldw	r16,0(sp)
  809c28:	dec00904 	addi	sp,sp,36
  809c2c:	f800283a 	ret
  809c30:	002f883a 	mov	r23,zero
  809c34:	003ff206 	br	809c00 <__alt_data_end+0xff809c00>

00809c38 <_setlocale_r>:
  809c38:	30001b26 	beq	r6,zero,809ca8 <_setlocale_r+0x70>
  809c3c:	01402074 	movhi	r5,129
  809c40:	defffe04 	addi	sp,sp,-8
  809c44:	29492104 	addi	r5,r5,9348
  809c48:	3009883a 	mov	r4,r6
  809c4c:	dc000015 	stw	r16,0(sp)
  809c50:	dfc00115 	stw	ra,4(sp)
  809c54:	3021883a 	mov	r16,r6
  809c58:	080c2f00 	call	80c2f0 <strcmp>
  809c5c:	1000061e 	bne	r2,zero,809c78 <_setlocale_r+0x40>
  809c60:	00802074 	movhi	r2,129
  809c64:	10892004 	addi	r2,r2,9344
  809c68:	dfc00117 	ldw	ra,4(sp)
  809c6c:	dc000017 	ldw	r16,0(sp)
  809c70:	dec00204 	addi	sp,sp,8
  809c74:	f800283a 	ret
  809c78:	01402074 	movhi	r5,129
  809c7c:	29492004 	addi	r5,r5,9344
  809c80:	8009883a 	mov	r4,r16
  809c84:	080c2f00 	call	80c2f0 <strcmp>
  809c88:	103ff526 	beq	r2,zero,809c60 <__alt_data_end+0xff809c60>
  809c8c:	01402074 	movhi	r5,129
  809c90:	29490b04 	addi	r5,r5,9260
  809c94:	8009883a 	mov	r4,r16
  809c98:	080c2f00 	call	80c2f0 <strcmp>
  809c9c:	103ff026 	beq	r2,zero,809c60 <__alt_data_end+0xff809c60>
  809ca0:	0005883a 	mov	r2,zero
  809ca4:	003ff006 	br	809c68 <__alt_data_end+0xff809c68>
  809ca8:	00802074 	movhi	r2,129
  809cac:	10892004 	addi	r2,r2,9344
  809cb0:	f800283a 	ret

00809cb4 <__locale_charset>:
  809cb4:	00802074 	movhi	r2,129
  809cb8:	108a9104 	addi	r2,r2,10820
  809cbc:	f800283a 	ret

00809cc0 <__locale_mb_cur_max>:
  809cc0:	00802074 	movhi	r2,129
  809cc4:	10902d04 	addi	r2,r2,16564
  809cc8:	10800017 	ldw	r2,0(r2)
  809ccc:	f800283a 	ret

00809cd0 <__locale_msgcharset>:
  809cd0:	00802074 	movhi	r2,129
  809cd4:	108a8904 	addi	r2,r2,10788
  809cd8:	f800283a 	ret

00809cdc <__locale_cjk_lang>:
  809cdc:	0005883a 	mov	r2,zero
  809ce0:	f800283a 	ret

00809ce4 <_localeconv_r>:
  809ce4:	00802074 	movhi	r2,129
  809ce8:	108a9904 	addi	r2,r2,10852
  809cec:	f800283a 	ret

00809cf0 <setlocale>:
  809cf0:	00802074 	movhi	r2,129
  809cf4:	10902c04 	addi	r2,r2,16560
  809cf8:	280d883a 	mov	r6,r5
  809cfc:	200b883a 	mov	r5,r4
  809d00:	11000017 	ldw	r4,0(r2)
  809d04:	0809c381 	jmpi	809c38 <_setlocale_r>

00809d08 <localeconv>:
  809d08:	00802074 	movhi	r2,129
  809d0c:	108a9904 	addi	r2,r2,10852
  809d10:	f800283a 	ret

00809d14 <__smakebuf_r>:
  809d14:	2880030b 	ldhu	r2,12(r5)
  809d18:	10c0008c 	andi	r3,r2,2
  809d1c:	1800411e 	bne	r3,zero,809e24 <__smakebuf_r+0x110>
  809d20:	deffec04 	addi	sp,sp,-80
  809d24:	dc000f15 	stw	r16,60(sp)
  809d28:	2821883a 	mov	r16,r5
  809d2c:	2940038f 	ldh	r5,14(r5)
  809d30:	dc401015 	stw	r17,64(sp)
  809d34:	dfc01315 	stw	ra,76(sp)
  809d38:	dcc01215 	stw	r19,72(sp)
  809d3c:	dc801115 	stw	r18,68(sp)
  809d40:	2023883a 	mov	r17,r4
  809d44:	28001c16 	blt	r5,zero,809db8 <__smakebuf_r+0xa4>
  809d48:	d80d883a 	mov	r6,sp
  809d4c:	080de980 	call	80de98 <_fstat_r>
  809d50:	10001816 	blt	r2,zero,809db4 <__smakebuf_r+0xa0>
  809d54:	d8800117 	ldw	r2,4(sp)
  809d58:	00e00014 	movui	r3,32768
  809d5c:	10bc000c 	andi	r2,r2,61440
  809d60:	14c80020 	cmpeqi	r19,r2,8192
  809d64:	10c03726 	beq	r2,r3,809e44 <__smakebuf_r+0x130>
  809d68:	80c0030b 	ldhu	r3,12(r16)
  809d6c:	18c20014 	ori	r3,r3,2048
  809d70:	80c0030d 	sth	r3,12(r16)
  809d74:	00c80004 	movi	r3,8192
  809d78:	10c0521e 	bne	r2,r3,809ec4 <__smakebuf_r+0x1b0>
  809d7c:	8140038f 	ldh	r5,14(r16)
  809d80:	8809883a 	mov	r4,r17
  809d84:	080def40 	call	80def4 <_isatty_r>
  809d88:	10004c26 	beq	r2,zero,809ebc <__smakebuf_r+0x1a8>
  809d8c:	8080030b 	ldhu	r2,12(r16)
  809d90:	80c010c4 	addi	r3,r16,67
  809d94:	80c00015 	stw	r3,0(r16)
  809d98:	10800054 	ori	r2,r2,1
  809d9c:	8080030d 	sth	r2,12(r16)
  809da0:	00800044 	movi	r2,1
  809da4:	80c00415 	stw	r3,16(r16)
  809da8:	80800515 	stw	r2,20(r16)
  809dac:	04810004 	movi	r18,1024
  809db0:	00000706 	br	809dd0 <__smakebuf_r+0xbc>
  809db4:	8080030b 	ldhu	r2,12(r16)
  809db8:	10c0200c 	andi	r3,r2,128
  809dbc:	18001f1e 	bne	r3,zero,809e3c <__smakebuf_r+0x128>
  809dc0:	04810004 	movi	r18,1024
  809dc4:	10820014 	ori	r2,r2,2048
  809dc8:	8080030d 	sth	r2,12(r16)
  809dcc:	0027883a 	mov	r19,zero
  809dd0:	900b883a 	mov	r5,r18
  809dd4:	8809883a 	mov	r4,r17
  809dd8:	0809ed00 	call	809ed0 <_malloc_r>
  809ddc:	10002c26 	beq	r2,zero,809e90 <__smakebuf_r+0x17c>
  809de0:	80c0030b 	ldhu	r3,12(r16)
  809de4:	01002074 	movhi	r4,129
  809de8:	21238a04 	addi	r4,r4,-29144
  809dec:	89000f15 	stw	r4,60(r17)
  809df0:	18c02014 	ori	r3,r3,128
  809df4:	80c0030d 	sth	r3,12(r16)
  809df8:	80800015 	stw	r2,0(r16)
  809dfc:	80800415 	stw	r2,16(r16)
  809e00:	84800515 	stw	r18,20(r16)
  809e04:	98001a1e 	bne	r19,zero,809e70 <__smakebuf_r+0x15c>
  809e08:	dfc01317 	ldw	ra,76(sp)
  809e0c:	dcc01217 	ldw	r19,72(sp)
  809e10:	dc801117 	ldw	r18,68(sp)
  809e14:	dc401017 	ldw	r17,64(sp)
  809e18:	dc000f17 	ldw	r16,60(sp)
  809e1c:	dec01404 	addi	sp,sp,80
  809e20:	f800283a 	ret
  809e24:	288010c4 	addi	r2,r5,67
  809e28:	28800015 	stw	r2,0(r5)
  809e2c:	28800415 	stw	r2,16(r5)
  809e30:	00800044 	movi	r2,1
  809e34:	28800515 	stw	r2,20(r5)
  809e38:	f800283a 	ret
  809e3c:	04801004 	movi	r18,64
  809e40:	003fe006 	br	809dc4 <__alt_data_end+0xff809dc4>
  809e44:	81000a17 	ldw	r4,40(r16)
  809e48:	00c02074 	movhi	r3,129
  809e4c:	18f0a304 	addi	r3,r3,-15732
  809e50:	20ffc51e 	bne	r4,r3,809d68 <__alt_data_end+0xff809d68>
  809e54:	8080030b 	ldhu	r2,12(r16)
  809e58:	04810004 	movi	r18,1024
  809e5c:	84801315 	stw	r18,76(r16)
  809e60:	1484b03a 	or	r2,r2,r18
  809e64:	8080030d 	sth	r2,12(r16)
  809e68:	0027883a 	mov	r19,zero
  809e6c:	003fd806 	br	809dd0 <__alt_data_end+0xff809dd0>
  809e70:	8140038f 	ldh	r5,14(r16)
  809e74:	8809883a 	mov	r4,r17
  809e78:	080def40 	call	80def4 <_isatty_r>
  809e7c:	103fe226 	beq	r2,zero,809e08 <__alt_data_end+0xff809e08>
  809e80:	8080030b 	ldhu	r2,12(r16)
  809e84:	10800054 	ori	r2,r2,1
  809e88:	8080030d 	sth	r2,12(r16)
  809e8c:	003fde06 	br	809e08 <__alt_data_end+0xff809e08>
  809e90:	8080030b 	ldhu	r2,12(r16)
  809e94:	10c0800c 	andi	r3,r2,512
  809e98:	183fdb1e 	bne	r3,zero,809e08 <__alt_data_end+0xff809e08>
  809e9c:	10800094 	ori	r2,r2,2
  809ea0:	80c010c4 	addi	r3,r16,67
  809ea4:	8080030d 	sth	r2,12(r16)
  809ea8:	00800044 	movi	r2,1
  809eac:	80c00015 	stw	r3,0(r16)
  809eb0:	80c00415 	stw	r3,16(r16)
  809eb4:	80800515 	stw	r2,20(r16)
  809eb8:	003fd306 	br	809e08 <__alt_data_end+0xff809e08>
  809ebc:	04810004 	movi	r18,1024
  809ec0:	003fc306 	br	809dd0 <__alt_data_end+0xff809dd0>
  809ec4:	0027883a 	mov	r19,zero
  809ec8:	04810004 	movi	r18,1024
  809ecc:	003fc006 	br	809dd0 <__alt_data_end+0xff809dd0>

00809ed0 <_malloc_r>:
  809ed0:	defff504 	addi	sp,sp,-44
  809ed4:	dc800315 	stw	r18,12(sp)
  809ed8:	dfc00a15 	stw	ra,40(sp)
  809edc:	df000915 	stw	fp,36(sp)
  809ee0:	ddc00815 	stw	r23,32(sp)
  809ee4:	dd800715 	stw	r22,28(sp)
  809ee8:	dd400615 	stw	r21,24(sp)
  809eec:	dd000515 	stw	r20,20(sp)
  809ef0:	dcc00415 	stw	r19,16(sp)
  809ef4:	dc400215 	stw	r17,8(sp)
  809ef8:	dc000115 	stw	r16,4(sp)
  809efc:	288002c4 	addi	r2,r5,11
  809f00:	00c00584 	movi	r3,22
  809f04:	2025883a 	mov	r18,r4
  809f08:	18807f2e 	bgeu	r3,r2,80a108 <_malloc_r+0x238>
  809f0c:	047ffe04 	movi	r17,-8
  809f10:	1462703a 	and	r17,r2,r17
  809f14:	8800a316 	blt	r17,zero,80a1a4 <_malloc_r+0x2d4>
  809f18:	8940a236 	bltu	r17,r5,80a1a4 <_malloc_r+0x2d4>
  809f1c:	080fdf80 	call	80fdf8 <__malloc_lock>
  809f20:	00807dc4 	movi	r2,503
  809f24:	1441e92e 	bgeu	r2,r17,80a6cc <_malloc_r+0x7fc>
  809f28:	8804d27a 	srli	r2,r17,9
  809f2c:	1000a126 	beq	r2,zero,80a1b4 <_malloc_r+0x2e4>
  809f30:	00c00104 	movi	r3,4
  809f34:	18811e36 	bltu	r3,r2,80a3b0 <_malloc_r+0x4e0>
  809f38:	8804d1ba 	srli	r2,r17,6
  809f3c:	12000e44 	addi	r8,r2,57
  809f40:	11c00e04 	addi	r7,r2,56
  809f44:	4209883a 	add	r4,r8,r8
  809f48:	04c02074 	movhi	r19,129
  809f4c:	2109883a 	add	r4,r4,r4
  809f50:	9ccaa704 	addi	r19,r19,10908
  809f54:	2109883a 	add	r4,r4,r4
  809f58:	9909883a 	add	r4,r19,r4
  809f5c:	24000117 	ldw	r16,4(r4)
  809f60:	213ffe04 	addi	r4,r4,-8
  809f64:	24009726 	beq	r4,r16,80a1c4 <_malloc_r+0x2f4>
  809f68:	80800117 	ldw	r2,4(r16)
  809f6c:	01bfff04 	movi	r6,-4
  809f70:	014003c4 	movi	r5,15
  809f74:	1184703a 	and	r2,r2,r6
  809f78:	1447c83a 	sub	r3,r2,r17
  809f7c:	28c00716 	blt	r5,r3,809f9c <_malloc_r+0xcc>
  809f80:	1800920e 	bge	r3,zero,80a1cc <_malloc_r+0x2fc>
  809f84:	84000317 	ldw	r16,12(r16)
  809f88:	24008e26 	beq	r4,r16,80a1c4 <_malloc_r+0x2f4>
  809f8c:	80800117 	ldw	r2,4(r16)
  809f90:	1184703a 	and	r2,r2,r6
  809f94:	1447c83a 	sub	r3,r2,r17
  809f98:	28fff90e 	bge	r5,r3,809f80 <__alt_data_end+0xff809f80>
  809f9c:	3809883a 	mov	r4,r7
  809fa0:	01802074 	movhi	r6,129
  809fa4:	9c000417 	ldw	r16,16(r19)
  809fa8:	318aa704 	addi	r6,r6,10908
  809fac:	32000204 	addi	r8,r6,8
  809fb0:	82013426 	beq	r16,r8,80a484 <_malloc_r+0x5b4>
  809fb4:	80c00117 	ldw	r3,4(r16)
  809fb8:	00bfff04 	movi	r2,-4
  809fbc:	188e703a 	and	r7,r3,r2
  809fc0:	3c45c83a 	sub	r2,r7,r17
  809fc4:	00c003c4 	movi	r3,15
  809fc8:	18811f16 	blt	r3,r2,80a448 <_malloc_r+0x578>
  809fcc:	32000515 	stw	r8,20(r6)
  809fd0:	32000415 	stw	r8,16(r6)
  809fd4:	10007f0e 	bge	r2,zero,80a1d4 <_malloc_r+0x304>
  809fd8:	00807fc4 	movi	r2,511
  809fdc:	11c0fd36 	bltu	r2,r7,80a3d4 <_malloc_r+0x504>
  809fe0:	3806d0fa 	srli	r3,r7,3
  809fe4:	01c00044 	movi	r7,1
  809fe8:	30800117 	ldw	r2,4(r6)
  809fec:	19400044 	addi	r5,r3,1
  809ff0:	294b883a 	add	r5,r5,r5
  809ff4:	1807d0ba 	srai	r3,r3,2
  809ff8:	294b883a 	add	r5,r5,r5
  809ffc:	294b883a 	add	r5,r5,r5
  80a000:	298b883a 	add	r5,r5,r6
  80a004:	38c6983a 	sll	r3,r7,r3
  80a008:	29c00017 	ldw	r7,0(r5)
  80a00c:	2a7ffe04 	addi	r9,r5,-8
  80a010:	1886b03a 	or	r3,r3,r2
  80a014:	82400315 	stw	r9,12(r16)
  80a018:	81c00215 	stw	r7,8(r16)
  80a01c:	30c00115 	stw	r3,4(r6)
  80a020:	2c000015 	stw	r16,0(r5)
  80a024:	3c000315 	stw	r16,12(r7)
  80a028:	2005d0ba 	srai	r2,r4,2
  80a02c:	01400044 	movi	r5,1
  80a030:	288a983a 	sll	r5,r5,r2
  80a034:	19406f36 	bltu	r3,r5,80a1f4 <_malloc_r+0x324>
  80a038:	28c4703a 	and	r2,r5,r3
  80a03c:	10000a1e 	bne	r2,zero,80a068 <_malloc_r+0x198>
  80a040:	00bfff04 	movi	r2,-4
  80a044:	294b883a 	add	r5,r5,r5
  80a048:	2088703a 	and	r4,r4,r2
  80a04c:	28c4703a 	and	r2,r5,r3
  80a050:	21000104 	addi	r4,r4,4
  80a054:	1000041e 	bne	r2,zero,80a068 <_malloc_r+0x198>
  80a058:	294b883a 	add	r5,r5,r5
  80a05c:	28c4703a 	and	r2,r5,r3
  80a060:	21000104 	addi	r4,r4,4
  80a064:	103ffc26 	beq	r2,zero,80a058 <__alt_data_end+0xff80a058>
  80a068:	02bfff04 	movi	r10,-4
  80a06c:	024003c4 	movi	r9,15
  80a070:	21800044 	addi	r6,r4,1
  80a074:	318d883a 	add	r6,r6,r6
  80a078:	318d883a 	add	r6,r6,r6
  80a07c:	318d883a 	add	r6,r6,r6
  80a080:	998d883a 	add	r6,r19,r6
  80a084:	333ffe04 	addi	r12,r6,-8
  80a088:	2017883a 	mov	r11,r4
  80a08c:	31800104 	addi	r6,r6,4
  80a090:	34000017 	ldw	r16,0(r6)
  80a094:	31fffd04 	addi	r7,r6,-12
  80a098:	81c0041e 	bne	r16,r7,80a0ac <_malloc_r+0x1dc>
  80a09c:	0000fb06 	br	80a48c <_malloc_r+0x5bc>
  80a0a0:	1801030e 	bge	r3,zero,80a4b0 <_malloc_r+0x5e0>
  80a0a4:	84000317 	ldw	r16,12(r16)
  80a0a8:	81c0f826 	beq	r16,r7,80a48c <_malloc_r+0x5bc>
  80a0ac:	80800117 	ldw	r2,4(r16)
  80a0b0:	1284703a 	and	r2,r2,r10
  80a0b4:	1447c83a 	sub	r3,r2,r17
  80a0b8:	48fff90e 	bge	r9,r3,80a0a0 <__alt_data_end+0xff80a0a0>
  80a0bc:	80800317 	ldw	r2,12(r16)
  80a0c0:	81000217 	ldw	r4,8(r16)
  80a0c4:	89400054 	ori	r5,r17,1
  80a0c8:	81400115 	stw	r5,4(r16)
  80a0cc:	20800315 	stw	r2,12(r4)
  80a0d0:	11000215 	stw	r4,8(r2)
  80a0d4:	8463883a 	add	r17,r16,r17
  80a0d8:	9c400515 	stw	r17,20(r19)
  80a0dc:	9c400415 	stw	r17,16(r19)
  80a0e0:	18800054 	ori	r2,r3,1
  80a0e4:	88800115 	stw	r2,4(r17)
  80a0e8:	8a000315 	stw	r8,12(r17)
  80a0ec:	8a000215 	stw	r8,8(r17)
  80a0f0:	88e3883a 	add	r17,r17,r3
  80a0f4:	88c00015 	stw	r3,0(r17)
  80a0f8:	9009883a 	mov	r4,r18
  80a0fc:	080fe1c0 	call	80fe1c <__malloc_unlock>
  80a100:	80800204 	addi	r2,r16,8
  80a104:	00001b06 	br	80a174 <_malloc_r+0x2a4>
  80a108:	04400404 	movi	r17,16
  80a10c:	89402536 	bltu	r17,r5,80a1a4 <_malloc_r+0x2d4>
  80a110:	080fdf80 	call	80fdf8 <__malloc_lock>
  80a114:	00800184 	movi	r2,6
  80a118:	01000084 	movi	r4,2
  80a11c:	04c02074 	movhi	r19,129
  80a120:	1085883a 	add	r2,r2,r2
  80a124:	9ccaa704 	addi	r19,r19,10908
  80a128:	1085883a 	add	r2,r2,r2
  80a12c:	9885883a 	add	r2,r19,r2
  80a130:	14000117 	ldw	r16,4(r2)
  80a134:	10fffe04 	addi	r3,r2,-8
  80a138:	80c0d926 	beq	r16,r3,80a4a0 <_malloc_r+0x5d0>
  80a13c:	80c00117 	ldw	r3,4(r16)
  80a140:	81000317 	ldw	r4,12(r16)
  80a144:	00bfff04 	movi	r2,-4
  80a148:	1884703a 	and	r2,r3,r2
  80a14c:	81400217 	ldw	r5,8(r16)
  80a150:	8085883a 	add	r2,r16,r2
  80a154:	10c00117 	ldw	r3,4(r2)
  80a158:	29000315 	stw	r4,12(r5)
  80a15c:	21400215 	stw	r5,8(r4)
  80a160:	18c00054 	ori	r3,r3,1
  80a164:	10c00115 	stw	r3,4(r2)
  80a168:	9009883a 	mov	r4,r18
  80a16c:	080fe1c0 	call	80fe1c <__malloc_unlock>
  80a170:	80800204 	addi	r2,r16,8
  80a174:	dfc00a17 	ldw	ra,40(sp)
  80a178:	df000917 	ldw	fp,36(sp)
  80a17c:	ddc00817 	ldw	r23,32(sp)
  80a180:	dd800717 	ldw	r22,28(sp)
  80a184:	dd400617 	ldw	r21,24(sp)
  80a188:	dd000517 	ldw	r20,20(sp)
  80a18c:	dcc00417 	ldw	r19,16(sp)
  80a190:	dc800317 	ldw	r18,12(sp)
  80a194:	dc400217 	ldw	r17,8(sp)
  80a198:	dc000117 	ldw	r16,4(sp)
  80a19c:	dec00b04 	addi	sp,sp,44
  80a1a0:	f800283a 	ret
  80a1a4:	00800304 	movi	r2,12
  80a1a8:	90800015 	stw	r2,0(r18)
  80a1ac:	0005883a 	mov	r2,zero
  80a1b0:	003ff006 	br	80a174 <__alt_data_end+0xff80a174>
  80a1b4:	01002004 	movi	r4,128
  80a1b8:	02001004 	movi	r8,64
  80a1bc:	01c00fc4 	movi	r7,63
  80a1c0:	003f6106 	br	809f48 <__alt_data_end+0xff809f48>
  80a1c4:	4009883a 	mov	r4,r8
  80a1c8:	003f7506 	br	809fa0 <__alt_data_end+0xff809fa0>
  80a1cc:	81000317 	ldw	r4,12(r16)
  80a1d0:	003fde06 	br	80a14c <__alt_data_end+0xff80a14c>
  80a1d4:	81c5883a 	add	r2,r16,r7
  80a1d8:	11400117 	ldw	r5,4(r2)
  80a1dc:	9009883a 	mov	r4,r18
  80a1e0:	29400054 	ori	r5,r5,1
  80a1e4:	11400115 	stw	r5,4(r2)
  80a1e8:	080fe1c0 	call	80fe1c <__malloc_unlock>
  80a1ec:	80800204 	addi	r2,r16,8
  80a1f0:	003fe006 	br	80a174 <__alt_data_end+0xff80a174>
  80a1f4:	9c000217 	ldw	r16,8(r19)
  80a1f8:	00bfff04 	movi	r2,-4
  80a1fc:	85800117 	ldw	r22,4(r16)
  80a200:	b0ac703a 	and	r22,r22,r2
  80a204:	b4400336 	bltu	r22,r17,80a214 <_malloc_r+0x344>
  80a208:	b445c83a 	sub	r2,r22,r17
  80a20c:	00c003c4 	movi	r3,15
  80a210:	18805d16 	blt	r3,r2,80a388 <_malloc_r+0x4b8>
  80a214:	05c02074 	movhi	r23,129
  80a218:	00802074 	movhi	r2,129
  80a21c:	1096fb04 	addi	r2,r2,23532
  80a220:	bdd02e04 	addi	r23,r23,16568
  80a224:	15400017 	ldw	r21,0(r2)
  80a228:	b8c00017 	ldw	r3,0(r23)
  80a22c:	00bfffc4 	movi	r2,-1
  80a230:	858d883a 	add	r6,r16,r22
  80a234:	8d6b883a 	add	r21,r17,r21
  80a238:	1880ea26 	beq	r3,r2,80a5e4 <_malloc_r+0x714>
  80a23c:	ad4403c4 	addi	r21,r21,4111
  80a240:	00bc0004 	movi	r2,-4096
  80a244:	a8aa703a 	and	r21,r21,r2
  80a248:	a80b883a 	mov	r5,r21
  80a24c:	9009883a 	mov	r4,r18
  80a250:	d9800015 	stw	r6,0(sp)
  80a254:	080c1600 	call	80c160 <_sbrk_r>
  80a258:	1029883a 	mov	r20,r2
  80a25c:	00bfffc4 	movi	r2,-1
  80a260:	d9800017 	ldw	r6,0(sp)
  80a264:	a080e826 	beq	r20,r2,80a608 <_malloc_r+0x738>
  80a268:	a180a636 	bltu	r20,r6,80a504 <_malloc_r+0x634>
  80a26c:	07002074 	movhi	fp,129
  80a270:	e7170404 	addi	fp,fp,23568
  80a274:	e0800017 	ldw	r2,0(fp)
  80a278:	a887883a 	add	r3,r21,r2
  80a27c:	e0c00015 	stw	r3,0(fp)
  80a280:	3500e626 	beq	r6,r20,80a61c <_malloc_r+0x74c>
  80a284:	b9000017 	ldw	r4,0(r23)
  80a288:	00bfffc4 	movi	r2,-1
  80a28c:	2080ee26 	beq	r4,r2,80a648 <_malloc_r+0x778>
  80a290:	a185c83a 	sub	r2,r20,r6
  80a294:	10c5883a 	add	r2,r2,r3
  80a298:	e0800015 	stw	r2,0(fp)
  80a29c:	a0c001cc 	andi	r3,r20,7
  80a2a0:	1800bc26 	beq	r3,zero,80a594 <_malloc_r+0x6c4>
  80a2a4:	a0e9c83a 	sub	r20,r20,r3
  80a2a8:	00840204 	movi	r2,4104
  80a2ac:	a5000204 	addi	r20,r20,8
  80a2b0:	10c7c83a 	sub	r3,r2,r3
  80a2b4:	a545883a 	add	r2,r20,r21
  80a2b8:	1083ffcc 	andi	r2,r2,4095
  80a2bc:	18abc83a 	sub	r21,r3,r2
  80a2c0:	a80b883a 	mov	r5,r21
  80a2c4:	9009883a 	mov	r4,r18
  80a2c8:	080c1600 	call	80c160 <_sbrk_r>
  80a2cc:	00ffffc4 	movi	r3,-1
  80a2d0:	10c0e126 	beq	r2,r3,80a658 <_malloc_r+0x788>
  80a2d4:	1505c83a 	sub	r2,r2,r20
  80a2d8:	1545883a 	add	r2,r2,r21
  80a2dc:	10800054 	ori	r2,r2,1
  80a2e0:	e0c00017 	ldw	r3,0(fp)
  80a2e4:	9d000215 	stw	r20,8(r19)
  80a2e8:	a0800115 	stw	r2,4(r20)
  80a2ec:	a8c7883a 	add	r3,r21,r3
  80a2f0:	e0c00015 	stw	r3,0(fp)
  80a2f4:	84c00e26 	beq	r16,r19,80a330 <_malloc_r+0x460>
  80a2f8:	018003c4 	movi	r6,15
  80a2fc:	3580a72e 	bgeu	r6,r22,80a59c <_malloc_r+0x6cc>
  80a300:	81400117 	ldw	r5,4(r16)
  80a304:	013ffe04 	movi	r4,-8
  80a308:	b0bffd04 	addi	r2,r22,-12
  80a30c:	1104703a 	and	r2,r2,r4
  80a310:	2900004c 	andi	r4,r5,1
  80a314:	2088b03a 	or	r4,r4,r2
  80a318:	81000115 	stw	r4,4(r16)
  80a31c:	01400144 	movi	r5,5
  80a320:	8089883a 	add	r4,r16,r2
  80a324:	21400115 	stw	r5,4(r4)
  80a328:	21400215 	stw	r5,8(r4)
  80a32c:	3080cd36 	bltu	r6,r2,80a664 <_malloc_r+0x794>
  80a330:	00802074 	movhi	r2,129
  80a334:	1096fa04 	addi	r2,r2,23528
  80a338:	11000017 	ldw	r4,0(r2)
  80a33c:	20c0012e 	bgeu	r4,r3,80a344 <_malloc_r+0x474>
  80a340:	10c00015 	stw	r3,0(r2)
  80a344:	00802074 	movhi	r2,129
  80a348:	1096f904 	addi	r2,r2,23524
  80a34c:	11000017 	ldw	r4,0(r2)
  80a350:	9c000217 	ldw	r16,8(r19)
  80a354:	20c0012e 	bgeu	r4,r3,80a35c <_malloc_r+0x48c>
  80a358:	10c00015 	stw	r3,0(r2)
  80a35c:	80c00117 	ldw	r3,4(r16)
  80a360:	00bfff04 	movi	r2,-4
  80a364:	1886703a 	and	r3,r3,r2
  80a368:	1c45c83a 	sub	r2,r3,r17
  80a36c:	1c400236 	bltu	r3,r17,80a378 <_malloc_r+0x4a8>
  80a370:	00c003c4 	movi	r3,15
  80a374:	18800416 	blt	r3,r2,80a388 <_malloc_r+0x4b8>
  80a378:	9009883a 	mov	r4,r18
  80a37c:	080fe1c0 	call	80fe1c <__malloc_unlock>
  80a380:	0005883a 	mov	r2,zero
  80a384:	003f7b06 	br	80a174 <__alt_data_end+0xff80a174>
  80a388:	88c00054 	ori	r3,r17,1
  80a38c:	80c00115 	stw	r3,4(r16)
  80a390:	8463883a 	add	r17,r16,r17
  80a394:	10800054 	ori	r2,r2,1
  80a398:	9c400215 	stw	r17,8(r19)
  80a39c:	88800115 	stw	r2,4(r17)
  80a3a0:	9009883a 	mov	r4,r18
  80a3a4:	080fe1c0 	call	80fe1c <__malloc_unlock>
  80a3a8:	80800204 	addi	r2,r16,8
  80a3ac:	003f7106 	br	80a174 <__alt_data_end+0xff80a174>
  80a3b0:	00c00504 	movi	r3,20
  80a3b4:	18804a2e 	bgeu	r3,r2,80a4e0 <_malloc_r+0x610>
  80a3b8:	00c01504 	movi	r3,84
  80a3bc:	18806e36 	bltu	r3,r2,80a578 <_malloc_r+0x6a8>
  80a3c0:	8804d33a 	srli	r2,r17,12
  80a3c4:	12001bc4 	addi	r8,r2,111
  80a3c8:	11c01b84 	addi	r7,r2,110
  80a3cc:	4209883a 	add	r4,r8,r8
  80a3d0:	003edd06 	br	809f48 <__alt_data_end+0xff809f48>
  80a3d4:	3804d27a 	srli	r2,r7,9
  80a3d8:	00c00104 	movi	r3,4
  80a3dc:	1880442e 	bgeu	r3,r2,80a4f0 <_malloc_r+0x620>
  80a3e0:	00c00504 	movi	r3,20
  80a3e4:	18808136 	bltu	r3,r2,80a5ec <_malloc_r+0x71c>
  80a3e8:	11401704 	addi	r5,r2,92
  80a3ec:	10c016c4 	addi	r3,r2,91
  80a3f0:	294b883a 	add	r5,r5,r5
  80a3f4:	294b883a 	add	r5,r5,r5
  80a3f8:	294b883a 	add	r5,r5,r5
  80a3fc:	994b883a 	add	r5,r19,r5
  80a400:	28800017 	ldw	r2,0(r5)
  80a404:	01802074 	movhi	r6,129
  80a408:	297ffe04 	addi	r5,r5,-8
  80a40c:	318aa704 	addi	r6,r6,10908
  80a410:	28806526 	beq	r5,r2,80a5a8 <_malloc_r+0x6d8>
  80a414:	01bfff04 	movi	r6,-4
  80a418:	10c00117 	ldw	r3,4(r2)
  80a41c:	1986703a 	and	r3,r3,r6
  80a420:	38c0022e 	bgeu	r7,r3,80a42c <_malloc_r+0x55c>
  80a424:	10800217 	ldw	r2,8(r2)
  80a428:	28bffb1e 	bne	r5,r2,80a418 <__alt_data_end+0xff80a418>
  80a42c:	11400317 	ldw	r5,12(r2)
  80a430:	98c00117 	ldw	r3,4(r19)
  80a434:	81400315 	stw	r5,12(r16)
  80a438:	80800215 	stw	r2,8(r16)
  80a43c:	2c000215 	stw	r16,8(r5)
  80a440:	14000315 	stw	r16,12(r2)
  80a444:	003ef806 	br	80a028 <__alt_data_end+0xff80a028>
  80a448:	88c00054 	ori	r3,r17,1
  80a44c:	80c00115 	stw	r3,4(r16)
  80a450:	8463883a 	add	r17,r16,r17
  80a454:	34400515 	stw	r17,20(r6)
  80a458:	34400415 	stw	r17,16(r6)
  80a45c:	10c00054 	ori	r3,r2,1
  80a460:	8a000315 	stw	r8,12(r17)
  80a464:	8a000215 	stw	r8,8(r17)
  80a468:	88c00115 	stw	r3,4(r17)
  80a46c:	88a3883a 	add	r17,r17,r2
  80a470:	88800015 	stw	r2,0(r17)
  80a474:	9009883a 	mov	r4,r18
  80a478:	080fe1c0 	call	80fe1c <__malloc_unlock>
  80a47c:	80800204 	addi	r2,r16,8
  80a480:	003f3c06 	br	80a174 <__alt_data_end+0xff80a174>
  80a484:	30c00117 	ldw	r3,4(r6)
  80a488:	003ee706 	br	80a028 <__alt_data_end+0xff80a028>
  80a48c:	5ac00044 	addi	r11,r11,1
  80a490:	588000cc 	andi	r2,r11,3
  80a494:	31800204 	addi	r6,r6,8
  80a498:	103efd1e 	bne	r2,zero,80a090 <__alt_data_end+0xff80a090>
  80a49c:	00002406 	br	80a530 <_malloc_r+0x660>
  80a4a0:	14000317 	ldw	r16,12(r2)
  80a4a4:	143f251e 	bne	r2,r16,80a13c <__alt_data_end+0xff80a13c>
  80a4a8:	21000084 	addi	r4,r4,2
  80a4ac:	003ebc06 	br	809fa0 <__alt_data_end+0xff809fa0>
  80a4b0:	8085883a 	add	r2,r16,r2
  80a4b4:	10c00117 	ldw	r3,4(r2)
  80a4b8:	81000317 	ldw	r4,12(r16)
  80a4bc:	81400217 	ldw	r5,8(r16)
  80a4c0:	18c00054 	ori	r3,r3,1
  80a4c4:	10c00115 	stw	r3,4(r2)
  80a4c8:	29000315 	stw	r4,12(r5)
  80a4cc:	21400215 	stw	r5,8(r4)
  80a4d0:	9009883a 	mov	r4,r18
  80a4d4:	080fe1c0 	call	80fe1c <__malloc_unlock>
  80a4d8:	80800204 	addi	r2,r16,8
  80a4dc:	003f2506 	br	80a174 <__alt_data_end+0xff80a174>
  80a4e0:	12001704 	addi	r8,r2,92
  80a4e4:	11c016c4 	addi	r7,r2,91
  80a4e8:	4209883a 	add	r4,r8,r8
  80a4ec:	003e9606 	br	809f48 <__alt_data_end+0xff809f48>
  80a4f0:	3804d1ba 	srli	r2,r7,6
  80a4f4:	11400e44 	addi	r5,r2,57
  80a4f8:	10c00e04 	addi	r3,r2,56
  80a4fc:	294b883a 	add	r5,r5,r5
  80a500:	003fbc06 	br	80a3f4 <__alt_data_end+0xff80a3f4>
  80a504:	84ff5926 	beq	r16,r19,80a26c <__alt_data_end+0xff80a26c>
  80a508:	00802074 	movhi	r2,129
  80a50c:	108aa704 	addi	r2,r2,10908
  80a510:	14000217 	ldw	r16,8(r2)
  80a514:	00bfff04 	movi	r2,-4
  80a518:	80c00117 	ldw	r3,4(r16)
  80a51c:	1886703a 	and	r3,r3,r2
  80a520:	003f9106 	br	80a368 <__alt_data_end+0xff80a368>
  80a524:	60800217 	ldw	r2,8(r12)
  80a528:	213fffc4 	addi	r4,r4,-1
  80a52c:	1300651e 	bne	r2,r12,80a6c4 <_malloc_r+0x7f4>
  80a530:	208000cc 	andi	r2,r4,3
  80a534:	633ffe04 	addi	r12,r12,-8
  80a538:	103ffa1e 	bne	r2,zero,80a524 <__alt_data_end+0xff80a524>
  80a53c:	98800117 	ldw	r2,4(r19)
  80a540:	0146303a 	nor	r3,zero,r5
  80a544:	1884703a 	and	r2,r3,r2
  80a548:	98800115 	stw	r2,4(r19)
  80a54c:	294b883a 	add	r5,r5,r5
  80a550:	117f2836 	bltu	r2,r5,80a1f4 <__alt_data_end+0xff80a1f4>
  80a554:	283f2726 	beq	r5,zero,80a1f4 <__alt_data_end+0xff80a1f4>
  80a558:	2886703a 	and	r3,r5,r2
  80a55c:	5809883a 	mov	r4,r11
  80a560:	183ec31e 	bne	r3,zero,80a070 <__alt_data_end+0xff80a070>
  80a564:	294b883a 	add	r5,r5,r5
  80a568:	2886703a 	and	r3,r5,r2
  80a56c:	21000104 	addi	r4,r4,4
  80a570:	183ffc26 	beq	r3,zero,80a564 <__alt_data_end+0xff80a564>
  80a574:	003ebe06 	br	80a070 <__alt_data_end+0xff80a070>
  80a578:	00c05504 	movi	r3,340
  80a57c:	18801236 	bltu	r3,r2,80a5c8 <_malloc_r+0x6f8>
  80a580:	8804d3fa 	srli	r2,r17,15
  80a584:	12001e04 	addi	r8,r2,120
  80a588:	11c01dc4 	addi	r7,r2,119
  80a58c:	4209883a 	add	r4,r8,r8
  80a590:	003e6d06 	br	809f48 <__alt_data_end+0xff809f48>
  80a594:	00c40004 	movi	r3,4096
  80a598:	003f4606 	br	80a2b4 <__alt_data_end+0xff80a2b4>
  80a59c:	00800044 	movi	r2,1
  80a5a0:	a0800115 	stw	r2,4(r20)
  80a5a4:	003f7406 	br	80a378 <__alt_data_end+0xff80a378>
  80a5a8:	1805d0ba 	srai	r2,r3,2
  80a5ac:	01c00044 	movi	r7,1
  80a5b0:	30c00117 	ldw	r3,4(r6)
  80a5b4:	388e983a 	sll	r7,r7,r2
  80a5b8:	2805883a 	mov	r2,r5
  80a5bc:	38c6b03a 	or	r3,r7,r3
  80a5c0:	30c00115 	stw	r3,4(r6)
  80a5c4:	003f9b06 	br	80a434 <__alt_data_end+0xff80a434>
  80a5c8:	00c15504 	movi	r3,1364
  80a5cc:	18801a36 	bltu	r3,r2,80a638 <_malloc_r+0x768>
  80a5d0:	8804d4ba 	srli	r2,r17,18
  80a5d4:	12001f44 	addi	r8,r2,125
  80a5d8:	11c01f04 	addi	r7,r2,124
  80a5dc:	4209883a 	add	r4,r8,r8
  80a5e0:	003e5906 	br	809f48 <__alt_data_end+0xff809f48>
  80a5e4:	ad400404 	addi	r21,r21,16
  80a5e8:	003f1706 	br	80a248 <__alt_data_end+0xff80a248>
  80a5ec:	00c01504 	movi	r3,84
  80a5f0:	18802336 	bltu	r3,r2,80a680 <_malloc_r+0x7b0>
  80a5f4:	3804d33a 	srli	r2,r7,12
  80a5f8:	11401bc4 	addi	r5,r2,111
  80a5fc:	10c01b84 	addi	r3,r2,110
  80a600:	294b883a 	add	r5,r5,r5
  80a604:	003f7b06 	br	80a3f4 <__alt_data_end+0xff80a3f4>
  80a608:	9c000217 	ldw	r16,8(r19)
  80a60c:	00bfff04 	movi	r2,-4
  80a610:	80c00117 	ldw	r3,4(r16)
  80a614:	1886703a 	and	r3,r3,r2
  80a618:	003f5306 	br	80a368 <__alt_data_end+0xff80a368>
  80a61c:	3083ffcc 	andi	r2,r6,4095
  80a620:	103f181e 	bne	r2,zero,80a284 <__alt_data_end+0xff80a284>
  80a624:	99000217 	ldw	r4,8(r19)
  80a628:	b545883a 	add	r2,r22,r21
  80a62c:	10800054 	ori	r2,r2,1
  80a630:	20800115 	stw	r2,4(r4)
  80a634:	003f3e06 	br	80a330 <__alt_data_end+0xff80a330>
  80a638:	01003f84 	movi	r4,254
  80a63c:	02001fc4 	movi	r8,127
  80a640:	01c01f84 	movi	r7,126
  80a644:	003e4006 	br	809f48 <__alt_data_end+0xff809f48>
  80a648:	00802074 	movhi	r2,129
  80a64c:	10902e04 	addi	r2,r2,16568
  80a650:	15000015 	stw	r20,0(r2)
  80a654:	003f1106 	br	80a29c <__alt_data_end+0xff80a29c>
  80a658:	00800044 	movi	r2,1
  80a65c:	002b883a 	mov	r21,zero
  80a660:	003f1f06 	br	80a2e0 <__alt_data_end+0xff80a2e0>
  80a664:	81400204 	addi	r5,r16,8
  80a668:	9009883a 	mov	r4,r18
  80a66c:	08092e40 	call	8092e4 <_free_r>
  80a670:	00802074 	movhi	r2,129
  80a674:	10970404 	addi	r2,r2,23568
  80a678:	10c00017 	ldw	r3,0(r2)
  80a67c:	003f2c06 	br	80a330 <__alt_data_end+0xff80a330>
  80a680:	00c05504 	movi	r3,340
  80a684:	18800536 	bltu	r3,r2,80a69c <_malloc_r+0x7cc>
  80a688:	3804d3fa 	srli	r2,r7,15
  80a68c:	11401e04 	addi	r5,r2,120
  80a690:	10c01dc4 	addi	r3,r2,119
  80a694:	294b883a 	add	r5,r5,r5
  80a698:	003f5606 	br	80a3f4 <__alt_data_end+0xff80a3f4>
  80a69c:	00c15504 	movi	r3,1364
  80a6a0:	18800536 	bltu	r3,r2,80a6b8 <_malloc_r+0x7e8>
  80a6a4:	3804d4ba 	srli	r2,r7,18
  80a6a8:	11401f44 	addi	r5,r2,125
  80a6ac:	10c01f04 	addi	r3,r2,124
  80a6b0:	294b883a 	add	r5,r5,r5
  80a6b4:	003f4f06 	br	80a3f4 <__alt_data_end+0xff80a3f4>
  80a6b8:	01403f84 	movi	r5,254
  80a6bc:	00c01f84 	movi	r3,126
  80a6c0:	003f4c06 	br	80a3f4 <__alt_data_end+0xff80a3f4>
  80a6c4:	98800117 	ldw	r2,4(r19)
  80a6c8:	003fa006 	br	80a54c <__alt_data_end+0xff80a54c>
  80a6cc:	8808d0fa 	srli	r4,r17,3
  80a6d0:	20800044 	addi	r2,r4,1
  80a6d4:	1085883a 	add	r2,r2,r2
  80a6d8:	003e9006 	br	80a11c <__alt_data_end+0xff80a11c>

0080a6dc <memchr>:
  80a6dc:	208000cc 	andi	r2,r4,3
  80a6e0:	280f883a 	mov	r7,r5
  80a6e4:	10003426 	beq	r2,zero,80a7b8 <memchr+0xdc>
  80a6e8:	30bfffc4 	addi	r2,r6,-1
  80a6ec:	30001a26 	beq	r6,zero,80a758 <memchr+0x7c>
  80a6f0:	20c00003 	ldbu	r3,0(r4)
  80a6f4:	29803fcc 	andi	r6,r5,255
  80a6f8:	30c0051e 	bne	r6,r3,80a710 <memchr+0x34>
  80a6fc:	00001806 	br	80a760 <memchr+0x84>
  80a700:	10001526 	beq	r2,zero,80a758 <memchr+0x7c>
  80a704:	20c00003 	ldbu	r3,0(r4)
  80a708:	10bfffc4 	addi	r2,r2,-1
  80a70c:	30c01426 	beq	r6,r3,80a760 <memchr+0x84>
  80a710:	21000044 	addi	r4,r4,1
  80a714:	20c000cc 	andi	r3,r4,3
  80a718:	183ff91e 	bne	r3,zero,80a700 <__alt_data_end+0xff80a700>
  80a71c:	020000c4 	movi	r8,3
  80a720:	40801136 	bltu	r8,r2,80a768 <memchr+0x8c>
  80a724:	10000c26 	beq	r2,zero,80a758 <memchr+0x7c>
  80a728:	20c00003 	ldbu	r3,0(r4)
  80a72c:	29403fcc 	andi	r5,r5,255
  80a730:	28c00b26 	beq	r5,r3,80a760 <memchr+0x84>
  80a734:	20c00044 	addi	r3,r4,1
  80a738:	39803fcc 	andi	r6,r7,255
  80a73c:	2089883a 	add	r4,r4,r2
  80a740:	00000306 	br	80a750 <memchr+0x74>
  80a744:	18c00044 	addi	r3,r3,1
  80a748:	197fffc3 	ldbu	r5,-1(r3)
  80a74c:	31400526 	beq	r6,r5,80a764 <memchr+0x88>
  80a750:	1805883a 	mov	r2,r3
  80a754:	20fffb1e 	bne	r4,r3,80a744 <__alt_data_end+0xff80a744>
  80a758:	0005883a 	mov	r2,zero
  80a75c:	f800283a 	ret
  80a760:	2005883a 	mov	r2,r4
  80a764:	f800283a 	ret
  80a768:	28c03fcc 	andi	r3,r5,255
  80a76c:	1812923a 	slli	r9,r3,8
  80a770:	02ffbff4 	movhi	r11,65279
  80a774:	02a02074 	movhi	r10,32897
  80a778:	48d2b03a 	or	r9,r9,r3
  80a77c:	4806943a 	slli	r3,r9,16
  80a780:	5affbfc4 	addi	r11,r11,-257
  80a784:	52a02004 	addi	r10,r10,-32640
  80a788:	48d2b03a 	or	r9,r9,r3
  80a78c:	20c00017 	ldw	r3,0(r4)
  80a790:	48c6f03a 	xor	r3,r9,r3
  80a794:	1acd883a 	add	r6,r3,r11
  80a798:	00c6303a 	nor	r3,zero,r3
  80a79c:	30c6703a 	and	r3,r6,r3
  80a7a0:	1a86703a 	and	r3,r3,r10
  80a7a4:	183fe01e 	bne	r3,zero,80a728 <__alt_data_end+0xff80a728>
  80a7a8:	10bfff04 	addi	r2,r2,-4
  80a7ac:	21000104 	addi	r4,r4,4
  80a7b0:	40bff636 	bltu	r8,r2,80a78c <__alt_data_end+0xff80a78c>
  80a7b4:	003fdb06 	br	80a724 <__alt_data_end+0xff80a724>
  80a7b8:	3005883a 	mov	r2,r6
  80a7bc:	003fd706 	br	80a71c <__alt_data_end+0xff80a71c>

0080a7c0 <memcpy>:
  80a7c0:	defffd04 	addi	sp,sp,-12
  80a7c4:	dfc00215 	stw	ra,8(sp)
  80a7c8:	dc400115 	stw	r17,4(sp)
  80a7cc:	dc000015 	stw	r16,0(sp)
  80a7d0:	00c003c4 	movi	r3,15
  80a7d4:	2005883a 	mov	r2,r4
  80a7d8:	1980452e 	bgeu	r3,r6,80a8f0 <memcpy+0x130>
  80a7dc:	2906b03a 	or	r3,r5,r4
  80a7e0:	18c000cc 	andi	r3,r3,3
  80a7e4:	1800441e 	bne	r3,zero,80a8f8 <memcpy+0x138>
  80a7e8:	347ffc04 	addi	r17,r6,-16
  80a7ec:	8822d13a 	srli	r17,r17,4
  80a7f0:	28c00104 	addi	r3,r5,4
  80a7f4:	23400104 	addi	r13,r4,4
  80a7f8:	8820913a 	slli	r16,r17,4
  80a7fc:	2b000204 	addi	r12,r5,8
  80a800:	22c00204 	addi	r11,r4,8
  80a804:	84000504 	addi	r16,r16,20
  80a808:	2a800304 	addi	r10,r5,12
  80a80c:	22400304 	addi	r9,r4,12
  80a810:	2c21883a 	add	r16,r5,r16
  80a814:	2811883a 	mov	r8,r5
  80a818:	200f883a 	mov	r7,r4
  80a81c:	41000017 	ldw	r4,0(r8)
  80a820:	1fc00017 	ldw	ra,0(r3)
  80a824:	63c00017 	ldw	r15,0(r12)
  80a828:	39000015 	stw	r4,0(r7)
  80a82c:	53800017 	ldw	r14,0(r10)
  80a830:	6fc00015 	stw	ra,0(r13)
  80a834:	5bc00015 	stw	r15,0(r11)
  80a838:	4b800015 	stw	r14,0(r9)
  80a83c:	18c00404 	addi	r3,r3,16
  80a840:	39c00404 	addi	r7,r7,16
  80a844:	42000404 	addi	r8,r8,16
  80a848:	6b400404 	addi	r13,r13,16
  80a84c:	63000404 	addi	r12,r12,16
  80a850:	5ac00404 	addi	r11,r11,16
  80a854:	52800404 	addi	r10,r10,16
  80a858:	4a400404 	addi	r9,r9,16
  80a85c:	1c3fef1e 	bne	r3,r16,80a81c <__alt_data_end+0xff80a81c>
  80a860:	89c00044 	addi	r7,r17,1
  80a864:	380e913a 	slli	r7,r7,4
  80a868:	310003cc 	andi	r4,r6,15
  80a86c:	02c000c4 	movi	r11,3
  80a870:	11c7883a 	add	r3,r2,r7
  80a874:	29cb883a 	add	r5,r5,r7
  80a878:	5900212e 	bgeu	r11,r4,80a900 <memcpy+0x140>
  80a87c:	1813883a 	mov	r9,r3
  80a880:	2811883a 	mov	r8,r5
  80a884:	200f883a 	mov	r7,r4
  80a888:	42800017 	ldw	r10,0(r8)
  80a88c:	4a400104 	addi	r9,r9,4
  80a890:	39ffff04 	addi	r7,r7,-4
  80a894:	4abfff15 	stw	r10,-4(r9)
  80a898:	42000104 	addi	r8,r8,4
  80a89c:	59fffa36 	bltu	r11,r7,80a888 <__alt_data_end+0xff80a888>
  80a8a0:	213fff04 	addi	r4,r4,-4
  80a8a4:	2008d0ba 	srli	r4,r4,2
  80a8a8:	318000cc 	andi	r6,r6,3
  80a8ac:	21000044 	addi	r4,r4,1
  80a8b0:	2109883a 	add	r4,r4,r4
  80a8b4:	2109883a 	add	r4,r4,r4
  80a8b8:	1907883a 	add	r3,r3,r4
  80a8bc:	290b883a 	add	r5,r5,r4
  80a8c0:	30000626 	beq	r6,zero,80a8dc <memcpy+0x11c>
  80a8c4:	198d883a 	add	r6,r3,r6
  80a8c8:	29c00003 	ldbu	r7,0(r5)
  80a8cc:	18c00044 	addi	r3,r3,1
  80a8d0:	29400044 	addi	r5,r5,1
  80a8d4:	19ffffc5 	stb	r7,-1(r3)
  80a8d8:	19bffb1e 	bne	r3,r6,80a8c8 <__alt_data_end+0xff80a8c8>
  80a8dc:	dfc00217 	ldw	ra,8(sp)
  80a8e0:	dc400117 	ldw	r17,4(sp)
  80a8e4:	dc000017 	ldw	r16,0(sp)
  80a8e8:	dec00304 	addi	sp,sp,12
  80a8ec:	f800283a 	ret
  80a8f0:	2007883a 	mov	r3,r4
  80a8f4:	003ff206 	br	80a8c0 <__alt_data_end+0xff80a8c0>
  80a8f8:	2007883a 	mov	r3,r4
  80a8fc:	003ff106 	br	80a8c4 <__alt_data_end+0xff80a8c4>
  80a900:	200d883a 	mov	r6,r4
  80a904:	003fee06 	br	80a8c0 <__alt_data_end+0xff80a8c0>

0080a908 <memmove>:
  80a908:	2005883a 	mov	r2,r4
  80a90c:	29000b2e 	bgeu	r5,r4,80a93c <memmove+0x34>
  80a910:	298f883a 	add	r7,r5,r6
  80a914:	21c0092e 	bgeu	r4,r7,80a93c <memmove+0x34>
  80a918:	2187883a 	add	r3,r4,r6
  80a91c:	198bc83a 	sub	r5,r3,r6
  80a920:	30004826 	beq	r6,zero,80aa44 <memmove+0x13c>
  80a924:	39ffffc4 	addi	r7,r7,-1
  80a928:	39000003 	ldbu	r4,0(r7)
  80a92c:	18ffffc4 	addi	r3,r3,-1
  80a930:	19000005 	stb	r4,0(r3)
  80a934:	28fffb1e 	bne	r5,r3,80a924 <__alt_data_end+0xff80a924>
  80a938:	f800283a 	ret
  80a93c:	00c003c4 	movi	r3,15
  80a940:	1980412e 	bgeu	r3,r6,80aa48 <memmove+0x140>
  80a944:	2886b03a 	or	r3,r5,r2
  80a948:	18c000cc 	andi	r3,r3,3
  80a94c:	1800401e 	bne	r3,zero,80aa50 <memmove+0x148>
  80a950:	33fffc04 	addi	r15,r6,-16
  80a954:	781ed13a 	srli	r15,r15,4
  80a958:	28c00104 	addi	r3,r5,4
  80a95c:	13400104 	addi	r13,r2,4
  80a960:	781c913a 	slli	r14,r15,4
  80a964:	2b000204 	addi	r12,r5,8
  80a968:	12c00204 	addi	r11,r2,8
  80a96c:	73800504 	addi	r14,r14,20
  80a970:	2a800304 	addi	r10,r5,12
  80a974:	12400304 	addi	r9,r2,12
  80a978:	2b9d883a 	add	r14,r5,r14
  80a97c:	2811883a 	mov	r8,r5
  80a980:	100f883a 	mov	r7,r2
  80a984:	41000017 	ldw	r4,0(r8)
  80a988:	39c00404 	addi	r7,r7,16
  80a98c:	18c00404 	addi	r3,r3,16
  80a990:	393ffc15 	stw	r4,-16(r7)
  80a994:	193ffc17 	ldw	r4,-16(r3)
  80a998:	6b400404 	addi	r13,r13,16
  80a99c:	5ac00404 	addi	r11,r11,16
  80a9a0:	693ffc15 	stw	r4,-16(r13)
  80a9a4:	61000017 	ldw	r4,0(r12)
  80a9a8:	4a400404 	addi	r9,r9,16
  80a9ac:	42000404 	addi	r8,r8,16
  80a9b0:	593ffc15 	stw	r4,-16(r11)
  80a9b4:	51000017 	ldw	r4,0(r10)
  80a9b8:	63000404 	addi	r12,r12,16
  80a9bc:	52800404 	addi	r10,r10,16
  80a9c0:	493ffc15 	stw	r4,-16(r9)
  80a9c4:	1bbfef1e 	bne	r3,r14,80a984 <__alt_data_end+0xff80a984>
  80a9c8:	79000044 	addi	r4,r15,1
  80a9cc:	2008913a 	slli	r4,r4,4
  80a9d0:	328003cc 	andi	r10,r6,15
  80a9d4:	02c000c4 	movi	r11,3
  80a9d8:	1107883a 	add	r3,r2,r4
  80a9dc:	290b883a 	add	r5,r5,r4
  80a9e0:	5a801e2e 	bgeu	r11,r10,80aa5c <memmove+0x154>
  80a9e4:	1813883a 	mov	r9,r3
  80a9e8:	2811883a 	mov	r8,r5
  80a9ec:	500f883a 	mov	r7,r10
  80a9f0:	41000017 	ldw	r4,0(r8)
  80a9f4:	4a400104 	addi	r9,r9,4
  80a9f8:	39ffff04 	addi	r7,r7,-4
  80a9fc:	493fff15 	stw	r4,-4(r9)
  80aa00:	42000104 	addi	r8,r8,4
  80aa04:	59fffa36 	bltu	r11,r7,80a9f0 <__alt_data_end+0xff80a9f0>
  80aa08:	513fff04 	addi	r4,r10,-4
  80aa0c:	2008d0ba 	srli	r4,r4,2
  80aa10:	318000cc 	andi	r6,r6,3
  80aa14:	21000044 	addi	r4,r4,1
  80aa18:	2109883a 	add	r4,r4,r4
  80aa1c:	2109883a 	add	r4,r4,r4
  80aa20:	1907883a 	add	r3,r3,r4
  80aa24:	290b883a 	add	r5,r5,r4
  80aa28:	30000b26 	beq	r6,zero,80aa58 <memmove+0x150>
  80aa2c:	198d883a 	add	r6,r3,r6
  80aa30:	29c00003 	ldbu	r7,0(r5)
  80aa34:	18c00044 	addi	r3,r3,1
  80aa38:	29400044 	addi	r5,r5,1
  80aa3c:	19ffffc5 	stb	r7,-1(r3)
  80aa40:	19bffb1e 	bne	r3,r6,80aa30 <__alt_data_end+0xff80aa30>
  80aa44:	f800283a 	ret
  80aa48:	1007883a 	mov	r3,r2
  80aa4c:	003ff606 	br	80aa28 <__alt_data_end+0xff80aa28>
  80aa50:	1007883a 	mov	r3,r2
  80aa54:	003ff506 	br	80aa2c <__alt_data_end+0xff80aa2c>
  80aa58:	f800283a 	ret
  80aa5c:	500d883a 	mov	r6,r10
  80aa60:	003ff106 	br	80aa28 <__alt_data_end+0xff80aa28>

0080aa64 <memset>:
  80aa64:	20c000cc 	andi	r3,r4,3
  80aa68:	2005883a 	mov	r2,r4
  80aa6c:	18004426 	beq	r3,zero,80ab80 <memset+0x11c>
  80aa70:	31ffffc4 	addi	r7,r6,-1
  80aa74:	30004026 	beq	r6,zero,80ab78 <memset+0x114>
  80aa78:	2813883a 	mov	r9,r5
  80aa7c:	200d883a 	mov	r6,r4
  80aa80:	2007883a 	mov	r3,r4
  80aa84:	00000406 	br	80aa98 <memset+0x34>
  80aa88:	3a3fffc4 	addi	r8,r7,-1
  80aa8c:	31800044 	addi	r6,r6,1
  80aa90:	38003926 	beq	r7,zero,80ab78 <memset+0x114>
  80aa94:	400f883a 	mov	r7,r8
  80aa98:	18c00044 	addi	r3,r3,1
  80aa9c:	32400005 	stb	r9,0(r6)
  80aaa0:	1a0000cc 	andi	r8,r3,3
  80aaa4:	403ff81e 	bne	r8,zero,80aa88 <__alt_data_end+0xff80aa88>
  80aaa8:	010000c4 	movi	r4,3
  80aaac:	21c02d2e 	bgeu	r4,r7,80ab64 <memset+0x100>
  80aab0:	29003fcc 	andi	r4,r5,255
  80aab4:	200c923a 	slli	r6,r4,8
  80aab8:	3108b03a 	or	r4,r6,r4
  80aabc:	200c943a 	slli	r6,r4,16
  80aac0:	218cb03a 	or	r6,r4,r6
  80aac4:	010003c4 	movi	r4,15
  80aac8:	21c0182e 	bgeu	r4,r7,80ab2c <memset+0xc8>
  80aacc:	3b3ffc04 	addi	r12,r7,-16
  80aad0:	6018d13a 	srli	r12,r12,4
  80aad4:	1a000104 	addi	r8,r3,4
  80aad8:	1ac00204 	addi	r11,r3,8
  80aadc:	6008913a 	slli	r4,r12,4
  80aae0:	1a800304 	addi	r10,r3,12
  80aae4:	1813883a 	mov	r9,r3
  80aae8:	21000504 	addi	r4,r4,20
  80aaec:	1909883a 	add	r4,r3,r4
  80aaf0:	49800015 	stw	r6,0(r9)
  80aaf4:	41800015 	stw	r6,0(r8)
  80aaf8:	59800015 	stw	r6,0(r11)
  80aafc:	51800015 	stw	r6,0(r10)
  80ab00:	42000404 	addi	r8,r8,16
  80ab04:	4a400404 	addi	r9,r9,16
  80ab08:	5ac00404 	addi	r11,r11,16
  80ab0c:	52800404 	addi	r10,r10,16
  80ab10:	413ff71e 	bne	r8,r4,80aaf0 <__alt_data_end+0xff80aaf0>
  80ab14:	63000044 	addi	r12,r12,1
  80ab18:	6018913a 	slli	r12,r12,4
  80ab1c:	39c003cc 	andi	r7,r7,15
  80ab20:	010000c4 	movi	r4,3
  80ab24:	1b07883a 	add	r3,r3,r12
  80ab28:	21c00e2e 	bgeu	r4,r7,80ab64 <memset+0x100>
  80ab2c:	1813883a 	mov	r9,r3
  80ab30:	3811883a 	mov	r8,r7
  80ab34:	010000c4 	movi	r4,3
  80ab38:	49800015 	stw	r6,0(r9)
  80ab3c:	423fff04 	addi	r8,r8,-4
  80ab40:	4a400104 	addi	r9,r9,4
  80ab44:	223ffc36 	bltu	r4,r8,80ab38 <__alt_data_end+0xff80ab38>
  80ab48:	393fff04 	addi	r4,r7,-4
  80ab4c:	2008d0ba 	srli	r4,r4,2
  80ab50:	39c000cc 	andi	r7,r7,3
  80ab54:	21000044 	addi	r4,r4,1
  80ab58:	2109883a 	add	r4,r4,r4
  80ab5c:	2109883a 	add	r4,r4,r4
  80ab60:	1907883a 	add	r3,r3,r4
  80ab64:	38000526 	beq	r7,zero,80ab7c <memset+0x118>
  80ab68:	19cf883a 	add	r7,r3,r7
  80ab6c:	19400005 	stb	r5,0(r3)
  80ab70:	18c00044 	addi	r3,r3,1
  80ab74:	38fffd1e 	bne	r7,r3,80ab6c <__alt_data_end+0xff80ab6c>
  80ab78:	f800283a 	ret
  80ab7c:	f800283a 	ret
  80ab80:	2007883a 	mov	r3,r4
  80ab84:	300f883a 	mov	r7,r6
  80ab88:	003fc706 	br	80aaa8 <__alt_data_end+0xff80aaa8>

0080ab8c <_Balloc>:
  80ab8c:	20801317 	ldw	r2,76(r4)
  80ab90:	defffc04 	addi	sp,sp,-16
  80ab94:	dc400115 	stw	r17,4(sp)
  80ab98:	dc000015 	stw	r16,0(sp)
  80ab9c:	dfc00315 	stw	ra,12(sp)
  80aba0:	dc800215 	stw	r18,8(sp)
  80aba4:	2023883a 	mov	r17,r4
  80aba8:	2821883a 	mov	r16,r5
  80abac:	10000f26 	beq	r2,zero,80abec <_Balloc+0x60>
  80abb0:	8407883a 	add	r3,r16,r16
  80abb4:	18c7883a 	add	r3,r3,r3
  80abb8:	10c7883a 	add	r3,r2,r3
  80abbc:	18800017 	ldw	r2,0(r3)
  80abc0:	10001126 	beq	r2,zero,80ac08 <_Balloc+0x7c>
  80abc4:	11000017 	ldw	r4,0(r2)
  80abc8:	19000015 	stw	r4,0(r3)
  80abcc:	10000415 	stw	zero,16(r2)
  80abd0:	10000315 	stw	zero,12(r2)
  80abd4:	dfc00317 	ldw	ra,12(sp)
  80abd8:	dc800217 	ldw	r18,8(sp)
  80abdc:	dc400117 	ldw	r17,4(sp)
  80abe0:	dc000017 	ldw	r16,0(sp)
  80abe4:	dec00404 	addi	sp,sp,16
  80abe8:	f800283a 	ret
  80abec:	01800844 	movi	r6,33
  80abf0:	01400104 	movi	r5,4
  80abf4:	080dac80 	call	80dac8 <_calloc_r>
  80abf8:	88801315 	stw	r2,76(r17)
  80abfc:	103fec1e 	bne	r2,zero,80abb0 <__alt_data_end+0xff80abb0>
  80ac00:	0005883a 	mov	r2,zero
  80ac04:	003ff306 	br	80abd4 <__alt_data_end+0xff80abd4>
  80ac08:	01400044 	movi	r5,1
  80ac0c:	2c24983a 	sll	r18,r5,r16
  80ac10:	8809883a 	mov	r4,r17
  80ac14:	91800144 	addi	r6,r18,5
  80ac18:	318d883a 	add	r6,r6,r6
  80ac1c:	318d883a 	add	r6,r6,r6
  80ac20:	080dac80 	call	80dac8 <_calloc_r>
  80ac24:	103ff626 	beq	r2,zero,80ac00 <__alt_data_end+0xff80ac00>
  80ac28:	14000115 	stw	r16,4(r2)
  80ac2c:	14800215 	stw	r18,8(r2)
  80ac30:	003fe606 	br	80abcc <__alt_data_end+0xff80abcc>

0080ac34 <_Bfree>:
  80ac34:	28000826 	beq	r5,zero,80ac58 <_Bfree+0x24>
  80ac38:	28c00117 	ldw	r3,4(r5)
  80ac3c:	20801317 	ldw	r2,76(r4)
  80ac40:	18c7883a 	add	r3,r3,r3
  80ac44:	18c7883a 	add	r3,r3,r3
  80ac48:	10c5883a 	add	r2,r2,r3
  80ac4c:	10c00017 	ldw	r3,0(r2)
  80ac50:	28c00015 	stw	r3,0(r5)
  80ac54:	11400015 	stw	r5,0(r2)
  80ac58:	f800283a 	ret

0080ac5c <__multadd>:
  80ac5c:	defffa04 	addi	sp,sp,-24
  80ac60:	dc800315 	stw	r18,12(sp)
  80ac64:	dc400215 	stw	r17,8(sp)
  80ac68:	dc000115 	stw	r16,4(sp)
  80ac6c:	2823883a 	mov	r17,r5
  80ac70:	2c000417 	ldw	r16,16(r5)
  80ac74:	dfc00515 	stw	ra,20(sp)
  80ac78:	dcc00415 	stw	r19,16(sp)
  80ac7c:	2025883a 	mov	r18,r4
  80ac80:	29400504 	addi	r5,r5,20
  80ac84:	0011883a 	mov	r8,zero
  80ac88:	28c00017 	ldw	r3,0(r5)
  80ac8c:	29400104 	addi	r5,r5,4
  80ac90:	42000044 	addi	r8,r8,1
  80ac94:	18bfffcc 	andi	r2,r3,65535
  80ac98:	1185383a 	mul	r2,r2,r6
  80ac9c:	1806d43a 	srli	r3,r3,16
  80aca0:	11cf883a 	add	r7,r2,r7
  80aca4:	3808d43a 	srli	r4,r7,16
  80aca8:	1987383a 	mul	r3,r3,r6
  80acac:	38bfffcc 	andi	r2,r7,65535
  80acb0:	1907883a 	add	r3,r3,r4
  80acb4:	1808943a 	slli	r4,r3,16
  80acb8:	180ed43a 	srli	r7,r3,16
  80acbc:	2085883a 	add	r2,r4,r2
  80acc0:	28bfff15 	stw	r2,-4(r5)
  80acc4:	443ff016 	blt	r8,r16,80ac88 <__alt_data_end+0xff80ac88>
  80acc8:	38000926 	beq	r7,zero,80acf0 <__multadd+0x94>
  80accc:	88800217 	ldw	r2,8(r17)
  80acd0:	80800f0e 	bge	r16,r2,80ad10 <__multadd+0xb4>
  80acd4:	80800144 	addi	r2,r16,5
  80acd8:	1085883a 	add	r2,r2,r2
  80acdc:	1085883a 	add	r2,r2,r2
  80ace0:	8885883a 	add	r2,r17,r2
  80ace4:	11c00015 	stw	r7,0(r2)
  80ace8:	84000044 	addi	r16,r16,1
  80acec:	8c000415 	stw	r16,16(r17)
  80acf0:	8805883a 	mov	r2,r17
  80acf4:	dfc00517 	ldw	ra,20(sp)
  80acf8:	dcc00417 	ldw	r19,16(sp)
  80acfc:	dc800317 	ldw	r18,12(sp)
  80ad00:	dc400217 	ldw	r17,8(sp)
  80ad04:	dc000117 	ldw	r16,4(sp)
  80ad08:	dec00604 	addi	sp,sp,24
  80ad0c:	f800283a 	ret
  80ad10:	89400117 	ldw	r5,4(r17)
  80ad14:	9009883a 	mov	r4,r18
  80ad18:	d9c00015 	stw	r7,0(sp)
  80ad1c:	29400044 	addi	r5,r5,1
  80ad20:	080ab8c0 	call	80ab8c <_Balloc>
  80ad24:	89800417 	ldw	r6,16(r17)
  80ad28:	89400304 	addi	r5,r17,12
  80ad2c:	11000304 	addi	r4,r2,12
  80ad30:	31800084 	addi	r6,r6,2
  80ad34:	318d883a 	add	r6,r6,r6
  80ad38:	318d883a 	add	r6,r6,r6
  80ad3c:	1027883a 	mov	r19,r2
  80ad40:	080a7c00 	call	80a7c0 <memcpy>
  80ad44:	d9c00017 	ldw	r7,0(sp)
  80ad48:	88000a26 	beq	r17,zero,80ad74 <__multadd+0x118>
  80ad4c:	88c00117 	ldw	r3,4(r17)
  80ad50:	90801317 	ldw	r2,76(r18)
  80ad54:	18c7883a 	add	r3,r3,r3
  80ad58:	18c7883a 	add	r3,r3,r3
  80ad5c:	10c5883a 	add	r2,r2,r3
  80ad60:	10c00017 	ldw	r3,0(r2)
  80ad64:	88c00015 	stw	r3,0(r17)
  80ad68:	14400015 	stw	r17,0(r2)
  80ad6c:	9823883a 	mov	r17,r19
  80ad70:	003fd806 	br	80acd4 <__alt_data_end+0xff80acd4>
  80ad74:	9823883a 	mov	r17,r19
  80ad78:	003fd606 	br	80acd4 <__alt_data_end+0xff80acd4>

0080ad7c <__s2b>:
  80ad7c:	defff904 	addi	sp,sp,-28
  80ad80:	dc400115 	stw	r17,4(sp)
  80ad84:	dc000015 	stw	r16,0(sp)
  80ad88:	2023883a 	mov	r17,r4
  80ad8c:	2821883a 	mov	r16,r5
  80ad90:	39000204 	addi	r4,r7,8
  80ad94:	01400244 	movi	r5,9
  80ad98:	dcc00315 	stw	r19,12(sp)
  80ad9c:	dc800215 	stw	r18,8(sp)
  80ada0:	dfc00615 	stw	ra,24(sp)
  80ada4:	dd400515 	stw	r21,20(sp)
  80ada8:	dd000415 	stw	r20,16(sp)
  80adac:	3825883a 	mov	r18,r7
  80adb0:	3027883a 	mov	r19,r6
  80adb4:	0802a480 	call	802a48 <__divsi3>
  80adb8:	00c00044 	movi	r3,1
  80adbc:	000b883a 	mov	r5,zero
  80adc0:	1880030e 	bge	r3,r2,80add0 <__s2b+0x54>
  80adc4:	18c7883a 	add	r3,r3,r3
  80adc8:	29400044 	addi	r5,r5,1
  80adcc:	18bffd16 	blt	r3,r2,80adc4 <__alt_data_end+0xff80adc4>
  80add0:	8809883a 	mov	r4,r17
  80add4:	080ab8c0 	call	80ab8c <_Balloc>
  80add8:	d8c00717 	ldw	r3,28(sp)
  80addc:	10c00515 	stw	r3,20(r2)
  80ade0:	00c00044 	movi	r3,1
  80ade4:	10c00415 	stw	r3,16(r2)
  80ade8:	00c00244 	movi	r3,9
  80adec:	1cc0210e 	bge	r3,r19,80ae74 <__s2b+0xf8>
  80adf0:	80eb883a 	add	r21,r16,r3
  80adf4:	a829883a 	mov	r20,r21
  80adf8:	84e1883a 	add	r16,r16,r19
  80adfc:	a1c00007 	ldb	r7,0(r20)
  80ae00:	01800284 	movi	r6,10
  80ae04:	a5000044 	addi	r20,r20,1
  80ae08:	100b883a 	mov	r5,r2
  80ae0c:	39fff404 	addi	r7,r7,-48
  80ae10:	8809883a 	mov	r4,r17
  80ae14:	080ac5c0 	call	80ac5c <__multadd>
  80ae18:	a43ff81e 	bne	r20,r16,80adfc <__alt_data_end+0xff80adfc>
  80ae1c:	ace1883a 	add	r16,r21,r19
  80ae20:	843ffe04 	addi	r16,r16,-8
  80ae24:	9c800a0e 	bge	r19,r18,80ae50 <__s2b+0xd4>
  80ae28:	94e5c83a 	sub	r18,r18,r19
  80ae2c:	84a5883a 	add	r18,r16,r18
  80ae30:	81c00007 	ldb	r7,0(r16)
  80ae34:	01800284 	movi	r6,10
  80ae38:	84000044 	addi	r16,r16,1
  80ae3c:	100b883a 	mov	r5,r2
  80ae40:	39fff404 	addi	r7,r7,-48
  80ae44:	8809883a 	mov	r4,r17
  80ae48:	080ac5c0 	call	80ac5c <__multadd>
  80ae4c:	84bff81e 	bne	r16,r18,80ae30 <__alt_data_end+0xff80ae30>
  80ae50:	dfc00617 	ldw	ra,24(sp)
  80ae54:	dd400517 	ldw	r21,20(sp)
  80ae58:	dd000417 	ldw	r20,16(sp)
  80ae5c:	dcc00317 	ldw	r19,12(sp)
  80ae60:	dc800217 	ldw	r18,8(sp)
  80ae64:	dc400117 	ldw	r17,4(sp)
  80ae68:	dc000017 	ldw	r16,0(sp)
  80ae6c:	dec00704 	addi	sp,sp,28
  80ae70:	f800283a 	ret
  80ae74:	84000284 	addi	r16,r16,10
  80ae78:	1827883a 	mov	r19,r3
  80ae7c:	003fe906 	br	80ae24 <__alt_data_end+0xff80ae24>

0080ae80 <__hi0bits>:
  80ae80:	20bfffec 	andhi	r2,r4,65535
  80ae84:	1000141e 	bne	r2,zero,80aed8 <__hi0bits+0x58>
  80ae88:	2008943a 	slli	r4,r4,16
  80ae8c:	00800404 	movi	r2,16
  80ae90:	20ffc02c 	andhi	r3,r4,65280
  80ae94:	1800021e 	bne	r3,zero,80aea0 <__hi0bits+0x20>
  80ae98:	2008923a 	slli	r4,r4,8
  80ae9c:	10800204 	addi	r2,r2,8
  80aea0:	20fc002c 	andhi	r3,r4,61440
  80aea4:	1800021e 	bne	r3,zero,80aeb0 <__hi0bits+0x30>
  80aea8:	2008913a 	slli	r4,r4,4
  80aeac:	10800104 	addi	r2,r2,4
  80aeb0:	20f0002c 	andhi	r3,r4,49152
  80aeb4:	1800031e 	bne	r3,zero,80aec4 <__hi0bits+0x44>
  80aeb8:	2109883a 	add	r4,r4,r4
  80aebc:	10800084 	addi	r2,r2,2
  80aec0:	2109883a 	add	r4,r4,r4
  80aec4:	20000316 	blt	r4,zero,80aed4 <__hi0bits+0x54>
  80aec8:	2110002c 	andhi	r4,r4,16384
  80aecc:	2000041e 	bne	r4,zero,80aee0 <__hi0bits+0x60>
  80aed0:	00800804 	movi	r2,32
  80aed4:	f800283a 	ret
  80aed8:	0005883a 	mov	r2,zero
  80aedc:	003fec06 	br	80ae90 <__alt_data_end+0xff80ae90>
  80aee0:	10800044 	addi	r2,r2,1
  80aee4:	f800283a 	ret

0080aee8 <__lo0bits>:
  80aee8:	20c00017 	ldw	r3,0(r4)
  80aeec:	188001cc 	andi	r2,r3,7
  80aef0:	10000826 	beq	r2,zero,80af14 <__lo0bits+0x2c>
  80aef4:	1880004c 	andi	r2,r3,1
  80aef8:	1000211e 	bne	r2,zero,80af80 <__lo0bits+0x98>
  80aefc:	1880008c 	andi	r2,r3,2
  80af00:	1000211e 	bne	r2,zero,80af88 <__lo0bits+0xa0>
  80af04:	1806d0ba 	srli	r3,r3,2
  80af08:	00800084 	movi	r2,2
  80af0c:	20c00015 	stw	r3,0(r4)
  80af10:	f800283a 	ret
  80af14:	18bfffcc 	andi	r2,r3,65535
  80af18:	10001326 	beq	r2,zero,80af68 <__lo0bits+0x80>
  80af1c:	0005883a 	mov	r2,zero
  80af20:	19403fcc 	andi	r5,r3,255
  80af24:	2800021e 	bne	r5,zero,80af30 <__lo0bits+0x48>
  80af28:	1806d23a 	srli	r3,r3,8
  80af2c:	10800204 	addi	r2,r2,8
  80af30:	194003cc 	andi	r5,r3,15
  80af34:	2800021e 	bne	r5,zero,80af40 <__lo0bits+0x58>
  80af38:	1806d13a 	srli	r3,r3,4
  80af3c:	10800104 	addi	r2,r2,4
  80af40:	194000cc 	andi	r5,r3,3
  80af44:	2800021e 	bne	r5,zero,80af50 <__lo0bits+0x68>
  80af48:	1806d0ba 	srli	r3,r3,2
  80af4c:	10800084 	addi	r2,r2,2
  80af50:	1940004c 	andi	r5,r3,1
  80af54:	2800081e 	bne	r5,zero,80af78 <__lo0bits+0x90>
  80af58:	1806d07a 	srli	r3,r3,1
  80af5c:	1800051e 	bne	r3,zero,80af74 <__lo0bits+0x8c>
  80af60:	00800804 	movi	r2,32
  80af64:	f800283a 	ret
  80af68:	1806d43a 	srli	r3,r3,16
  80af6c:	00800404 	movi	r2,16
  80af70:	003feb06 	br	80af20 <__alt_data_end+0xff80af20>
  80af74:	10800044 	addi	r2,r2,1
  80af78:	20c00015 	stw	r3,0(r4)
  80af7c:	f800283a 	ret
  80af80:	0005883a 	mov	r2,zero
  80af84:	f800283a 	ret
  80af88:	1806d07a 	srli	r3,r3,1
  80af8c:	00800044 	movi	r2,1
  80af90:	20c00015 	stw	r3,0(r4)
  80af94:	f800283a 	ret

0080af98 <__i2b>:
  80af98:	defffd04 	addi	sp,sp,-12
  80af9c:	dc000015 	stw	r16,0(sp)
  80afa0:	04000044 	movi	r16,1
  80afa4:	dc400115 	stw	r17,4(sp)
  80afa8:	2823883a 	mov	r17,r5
  80afac:	800b883a 	mov	r5,r16
  80afb0:	dfc00215 	stw	ra,8(sp)
  80afb4:	080ab8c0 	call	80ab8c <_Balloc>
  80afb8:	14400515 	stw	r17,20(r2)
  80afbc:	14000415 	stw	r16,16(r2)
  80afc0:	dfc00217 	ldw	ra,8(sp)
  80afc4:	dc400117 	ldw	r17,4(sp)
  80afc8:	dc000017 	ldw	r16,0(sp)
  80afcc:	dec00304 	addi	sp,sp,12
  80afd0:	f800283a 	ret

0080afd4 <__multiply>:
  80afd4:	defffa04 	addi	sp,sp,-24
  80afd8:	dcc00315 	stw	r19,12(sp)
  80afdc:	dc800215 	stw	r18,8(sp)
  80afe0:	34c00417 	ldw	r19,16(r6)
  80afe4:	2c800417 	ldw	r18,16(r5)
  80afe8:	dd000415 	stw	r20,16(sp)
  80afec:	dc400115 	stw	r17,4(sp)
  80aff0:	dfc00515 	stw	ra,20(sp)
  80aff4:	dc000015 	stw	r16,0(sp)
  80aff8:	2829883a 	mov	r20,r5
  80affc:	3023883a 	mov	r17,r6
  80b000:	94c0050e 	bge	r18,r19,80b018 <__multiply+0x44>
  80b004:	9007883a 	mov	r3,r18
  80b008:	3029883a 	mov	r20,r6
  80b00c:	9825883a 	mov	r18,r19
  80b010:	2823883a 	mov	r17,r5
  80b014:	1827883a 	mov	r19,r3
  80b018:	a0800217 	ldw	r2,8(r20)
  80b01c:	94e1883a 	add	r16,r18,r19
  80b020:	a1400117 	ldw	r5,4(r20)
  80b024:	1400010e 	bge	r2,r16,80b02c <__multiply+0x58>
  80b028:	29400044 	addi	r5,r5,1
  80b02c:	080ab8c0 	call	80ab8c <_Balloc>
  80b030:	8415883a 	add	r10,r16,r16
  80b034:	12c00504 	addi	r11,r2,20
  80b038:	5295883a 	add	r10,r10,r10
  80b03c:	5a95883a 	add	r10,r11,r10
  80b040:	5807883a 	mov	r3,r11
  80b044:	5a80032e 	bgeu	r11,r10,80b054 <__multiply+0x80>
  80b048:	18000015 	stw	zero,0(r3)
  80b04c:	18c00104 	addi	r3,r3,4
  80b050:	1abffd36 	bltu	r3,r10,80b048 <__alt_data_end+0xff80b048>
  80b054:	9ce7883a 	add	r19,r19,r19
  80b058:	94a5883a 	add	r18,r18,r18
  80b05c:	89800504 	addi	r6,r17,20
  80b060:	9ce7883a 	add	r19,r19,r19
  80b064:	a3400504 	addi	r13,r20,20
  80b068:	94a5883a 	add	r18,r18,r18
  80b06c:	34d9883a 	add	r12,r6,r19
  80b070:	6c93883a 	add	r9,r13,r18
  80b074:	3300422e 	bgeu	r6,r12,80b180 <__multiply+0x1ac>
  80b078:	37c00017 	ldw	ra,0(r6)
  80b07c:	fbffffcc 	andi	r15,ra,65535
  80b080:	78001b26 	beq	r15,zero,80b0f0 <__multiply+0x11c>
  80b084:	5811883a 	mov	r8,r11
  80b088:	681d883a 	mov	r14,r13
  80b08c:	000f883a 	mov	r7,zero
  80b090:	71000017 	ldw	r4,0(r14)
  80b094:	40c00017 	ldw	r3,0(r8)
  80b098:	73800104 	addi	r14,r14,4
  80b09c:	217fffcc 	andi	r5,r4,65535
  80b0a0:	2bcb383a 	mul	r5,r5,r15
  80b0a4:	2008d43a 	srli	r4,r4,16
  80b0a8:	1c7fffcc 	andi	r17,r3,65535
  80b0ac:	2c4b883a 	add	r5,r5,r17
  80b0b0:	29cb883a 	add	r5,r5,r7
  80b0b4:	23c9383a 	mul	r4,r4,r15
  80b0b8:	1806d43a 	srli	r3,r3,16
  80b0bc:	280ed43a 	srli	r7,r5,16
  80b0c0:	297fffcc 	andi	r5,r5,65535
  80b0c4:	20c7883a 	add	r3,r4,r3
  80b0c8:	19c7883a 	add	r3,r3,r7
  80b0cc:	1808943a 	slli	r4,r3,16
  80b0d0:	4023883a 	mov	r17,r8
  80b0d4:	180ed43a 	srli	r7,r3,16
  80b0d8:	214ab03a 	or	r5,r4,r5
  80b0dc:	41400015 	stw	r5,0(r8)
  80b0e0:	42000104 	addi	r8,r8,4
  80b0e4:	727fea36 	bltu	r14,r9,80b090 <__alt_data_end+0xff80b090>
  80b0e8:	89c00115 	stw	r7,4(r17)
  80b0ec:	37c00017 	ldw	ra,0(r6)
  80b0f0:	f83ed43a 	srli	ra,ra,16
  80b0f4:	f8001f26 	beq	ra,zero,80b174 <__multiply+0x1a0>
  80b0f8:	58c00017 	ldw	r3,0(r11)
  80b0fc:	681d883a 	mov	r14,r13
  80b100:	581f883a 	mov	r15,r11
  80b104:	1811883a 	mov	r8,r3
  80b108:	5825883a 	mov	r18,r11
  80b10c:	000f883a 	mov	r7,zero
  80b110:	00000106 	br	80b118 <__multiply+0x144>
  80b114:	8825883a 	mov	r18,r17
  80b118:	7140000b 	ldhu	r5,0(r14)
  80b11c:	4010d43a 	srli	r8,r8,16
  80b120:	193fffcc 	andi	r4,r3,65535
  80b124:	2fcb383a 	mul	r5,r5,ra
  80b128:	7bc00104 	addi	r15,r15,4
  80b12c:	73800104 	addi	r14,r14,4
  80b130:	2a0b883a 	add	r5,r5,r8
  80b134:	29cb883a 	add	r5,r5,r7
  80b138:	2806943a 	slli	r3,r5,16
  80b13c:	94400104 	addi	r17,r18,4
  80b140:	280ad43a 	srli	r5,r5,16
  80b144:	1908b03a 	or	r4,r3,r4
  80b148:	793fff15 	stw	r4,-4(r15)
  80b14c:	70ffff17 	ldw	r3,-4(r14)
  80b150:	8a000017 	ldw	r8,0(r17)
  80b154:	1806d43a 	srli	r3,r3,16
  80b158:	413fffcc 	andi	r4,r8,65535
  80b15c:	1fc7383a 	mul	r3,r3,ra
  80b160:	1907883a 	add	r3,r3,r4
  80b164:	1947883a 	add	r3,r3,r5
  80b168:	180ed43a 	srli	r7,r3,16
  80b16c:	727fe936 	bltu	r14,r9,80b114 <__alt_data_end+0xff80b114>
  80b170:	90c00115 	stw	r3,4(r18)
  80b174:	31800104 	addi	r6,r6,4
  80b178:	5ac00104 	addi	r11,r11,4
  80b17c:	333fbe36 	bltu	r6,r12,80b078 <__alt_data_end+0xff80b078>
  80b180:	0400090e 	bge	zero,r16,80b1a8 <__multiply+0x1d4>
  80b184:	50ffff17 	ldw	r3,-4(r10)
  80b188:	52bfff04 	addi	r10,r10,-4
  80b18c:	18000326 	beq	r3,zero,80b19c <__multiply+0x1c8>
  80b190:	00000506 	br	80b1a8 <__multiply+0x1d4>
  80b194:	50c00017 	ldw	r3,0(r10)
  80b198:	1800031e 	bne	r3,zero,80b1a8 <__multiply+0x1d4>
  80b19c:	843fffc4 	addi	r16,r16,-1
  80b1a0:	52bfff04 	addi	r10,r10,-4
  80b1a4:	803ffb1e 	bne	r16,zero,80b194 <__alt_data_end+0xff80b194>
  80b1a8:	14000415 	stw	r16,16(r2)
  80b1ac:	dfc00517 	ldw	ra,20(sp)
  80b1b0:	dd000417 	ldw	r20,16(sp)
  80b1b4:	dcc00317 	ldw	r19,12(sp)
  80b1b8:	dc800217 	ldw	r18,8(sp)
  80b1bc:	dc400117 	ldw	r17,4(sp)
  80b1c0:	dc000017 	ldw	r16,0(sp)
  80b1c4:	dec00604 	addi	sp,sp,24
  80b1c8:	f800283a 	ret

0080b1cc <__pow5mult>:
  80b1cc:	defffa04 	addi	sp,sp,-24
  80b1d0:	dcc00315 	stw	r19,12(sp)
  80b1d4:	dc000015 	stw	r16,0(sp)
  80b1d8:	dfc00515 	stw	ra,20(sp)
  80b1dc:	dd000415 	stw	r20,16(sp)
  80b1e0:	dc800215 	stw	r18,8(sp)
  80b1e4:	dc400115 	stw	r17,4(sp)
  80b1e8:	308000cc 	andi	r2,r6,3
  80b1ec:	3021883a 	mov	r16,r6
  80b1f0:	2027883a 	mov	r19,r4
  80b1f4:	10002f1e 	bne	r2,zero,80b2b4 <__pow5mult+0xe8>
  80b1f8:	2825883a 	mov	r18,r5
  80b1fc:	8021d0ba 	srai	r16,r16,2
  80b200:	80001a26 	beq	r16,zero,80b26c <__pow5mult+0xa0>
  80b204:	9c401217 	ldw	r17,72(r19)
  80b208:	8800061e 	bne	r17,zero,80b224 <__pow5mult+0x58>
  80b20c:	00003406 	br	80b2e0 <__pow5mult+0x114>
  80b210:	8021d07a 	srai	r16,r16,1
  80b214:	80001526 	beq	r16,zero,80b26c <__pow5mult+0xa0>
  80b218:	88800017 	ldw	r2,0(r17)
  80b21c:	10001c26 	beq	r2,zero,80b290 <__pow5mult+0xc4>
  80b220:	1023883a 	mov	r17,r2
  80b224:	8080004c 	andi	r2,r16,1
  80b228:	103ff926 	beq	r2,zero,80b210 <__alt_data_end+0xff80b210>
  80b22c:	880d883a 	mov	r6,r17
  80b230:	900b883a 	mov	r5,r18
  80b234:	9809883a 	mov	r4,r19
  80b238:	080afd40 	call	80afd4 <__multiply>
  80b23c:	90001b26 	beq	r18,zero,80b2ac <__pow5mult+0xe0>
  80b240:	91000117 	ldw	r4,4(r18)
  80b244:	98c01317 	ldw	r3,76(r19)
  80b248:	8021d07a 	srai	r16,r16,1
  80b24c:	2109883a 	add	r4,r4,r4
  80b250:	2109883a 	add	r4,r4,r4
  80b254:	1907883a 	add	r3,r3,r4
  80b258:	19000017 	ldw	r4,0(r3)
  80b25c:	91000015 	stw	r4,0(r18)
  80b260:	1c800015 	stw	r18,0(r3)
  80b264:	1025883a 	mov	r18,r2
  80b268:	803feb1e 	bne	r16,zero,80b218 <__alt_data_end+0xff80b218>
  80b26c:	9005883a 	mov	r2,r18
  80b270:	dfc00517 	ldw	ra,20(sp)
  80b274:	dd000417 	ldw	r20,16(sp)
  80b278:	dcc00317 	ldw	r19,12(sp)
  80b27c:	dc800217 	ldw	r18,8(sp)
  80b280:	dc400117 	ldw	r17,4(sp)
  80b284:	dc000017 	ldw	r16,0(sp)
  80b288:	dec00604 	addi	sp,sp,24
  80b28c:	f800283a 	ret
  80b290:	880d883a 	mov	r6,r17
  80b294:	880b883a 	mov	r5,r17
  80b298:	9809883a 	mov	r4,r19
  80b29c:	080afd40 	call	80afd4 <__multiply>
  80b2a0:	88800015 	stw	r2,0(r17)
  80b2a4:	10000015 	stw	zero,0(r2)
  80b2a8:	003fdd06 	br	80b220 <__alt_data_end+0xff80b220>
  80b2ac:	1025883a 	mov	r18,r2
  80b2b0:	003fd706 	br	80b210 <__alt_data_end+0xff80b210>
  80b2b4:	10bfffc4 	addi	r2,r2,-1
  80b2b8:	1085883a 	add	r2,r2,r2
  80b2bc:	00c02074 	movhi	r3,129
  80b2c0:	18c92404 	addi	r3,r3,9360
  80b2c4:	1085883a 	add	r2,r2,r2
  80b2c8:	1885883a 	add	r2,r3,r2
  80b2cc:	11800017 	ldw	r6,0(r2)
  80b2d0:	000f883a 	mov	r7,zero
  80b2d4:	080ac5c0 	call	80ac5c <__multadd>
  80b2d8:	1025883a 	mov	r18,r2
  80b2dc:	003fc706 	br	80b1fc <__alt_data_end+0xff80b1fc>
  80b2e0:	05000044 	movi	r20,1
  80b2e4:	a00b883a 	mov	r5,r20
  80b2e8:	9809883a 	mov	r4,r19
  80b2ec:	080ab8c0 	call	80ab8c <_Balloc>
  80b2f0:	1023883a 	mov	r17,r2
  80b2f4:	00809c44 	movi	r2,625
  80b2f8:	88800515 	stw	r2,20(r17)
  80b2fc:	8d000415 	stw	r20,16(r17)
  80b300:	9c401215 	stw	r17,72(r19)
  80b304:	88000015 	stw	zero,0(r17)
  80b308:	003fc606 	br	80b224 <__alt_data_end+0xff80b224>

0080b30c <__lshift>:
  80b30c:	defff904 	addi	sp,sp,-28
  80b310:	dd400515 	stw	r21,20(sp)
  80b314:	dcc00315 	stw	r19,12(sp)
  80b318:	302bd17a 	srai	r21,r6,5
  80b31c:	2cc00417 	ldw	r19,16(r5)
  80b320:	28800217 	ldw	r2,8(r5)
  80b324:	dd000415 	stw	r20,16(sp)
  80b328:	ace7883a 	add	r19,r21,r19
  80b32c:	dc800215 	stw	r18,8(sp)
  80b330:	dc400115 	stw	r17,4(sp)
  80b334:	dc000015 	stw	r16,0(sp)
  80b338:	dfc00615 	stw	ra,24(sp)
  80b33c:	9c000044 	addi	r16,r19,1
  80b340:	2823883a 	mov	r17,r5
  80b344:	3029883a 	mov	r20,r6
  80b348:	2025883a 	mov	r18,r4
  80b34c:	29400117 	ldw	r5,4(r5)
  80b350:	1400030e 	bge	r2,r16,80b360 <__lshift+0x54>
  80b354:	1085883a 	add	r2,r2,r2
  80b358:	29400044 	addi	r5,r5,1
  80b35c:	143ffd16 	blt	r2,r16,80b354 <__alt_data_end+0xff80b354>
  80b360:	9009883a 	mov	r4,r18
  80b364:	080ab8c0 	call	80ab8c <_Balloc>
  80b368:	10c00504 	addi	r3,r2,20
  80b36c:	0540070e 	bge	zero,r21,80b38c <__lshift+0x80>
  80b370:	ad6b883a 	add	r21,r21,r21
  80b374:	ad6b883a 	add	r21,r21,r21
  80b378:	1809883a 	mov	r4,r3
  80b37c:	1d47883a 	add	r3,r3,r21
  80b380:	20000015 	stw	zero,0(r4)
  80b384:	21000104 	addi	r4,r4,4
  80b388:	193ffd1e 	bne	r3,r4,80b380 <__alt_data_end+0xff80b380>
  80b38c:	8a000417 	ldw	r8,16(r17)
  80b390:	89000504 	addi	r4,r17,20
  80b394:	a18007cc 	andi	r6,r20,31
  80b398:	4211883a 	add	r8,r8,r8
  80b39c:	4211883a 	add	r8,r8,r8
  80b3a0:	2211883a 	add	r8,r4,r8
  80b3a4:	30002326 	beq	r6,zero,80b434 <__lshift+0x128>
  80b3a8:	02400804 	movi	r9,32
  80b3ac:	4993c83a 	sub	r9,r9,r6
  80b3b0:	000b883a 	mov	r5,zero
  80b3b4:	21c00017 	ldw	r7,0(r4)
  80b3b8:	1815883a 	mov	r10,r3
  80b3bc:	18c00104 	addi	r3,r3,4
  80b3c0:	398e983a 	sll	r7,r7,r6
  80b3c4:	21000104 	addi	r4,r4,4
  80b3c8:	394ab03a 	or	r5,r7,r5
  80b3cc:	197fff15 	stw	r5,-4(r3)
  80b3d0:	217fff17 	ldw	r5,-4(r4)
  80b3d4:	2a4ad83a 	srl	r5,r5,r9
  80b3d8:	223ff636 	bltu	r4,r8,80b3b4 <__alt_data_end+0xff80b3b4>
  80b3dc:	51400115 	stw	r5,4(r10)
  80b3e0:	28001a1e 	bne	r5,zero,80b44c <__lshift+0x140>
  80b3e4:	843fffc4 	addi	r16,r16,-1
  80b3e8:	14000415 	stw	r16,16(r2)
  80b3ec:	88000826 	beq	r17,zero,80b410 <__lshift+0x104>
  80b3f0:	89000117 	ldw	r4,4(r17)
  80b3f4:	90c01317 	ldw	r3,76(r18)
  80b3f8:	2109883a 	add	r4,r4,r4
  80b3fc:	2109883a 	add	r4,r4,r4
  80b400:	1907883a 	add	r3,r3,r4
  80b404:	19000017 	ldw	r4,0(r3)
  80b408:	89000015 	stw	r4,0(r17)
  80b40c:	1c400015 	stw	r17,0(r3)
  80b410:	dfc00617 	ldw	ra,24(sp)
  80b414:	dd400517 	ldw	r21,20(sp)
  80b418:	dd000417 	ldw	r20,16(sp)
  80b41c:	dcc00317 	ldw	r19,12(sp)
  80b420:	dc800217 	ldw	r18,8(sp)
  80b424:	dc400117 	ldw	r17,4(sp)
  80b428:	dc000017 	ldw	r16,0(sp)
  80b42c:	dec00704 	addi	sp,sp,28
  80b430:	f800283a 	ret
  80b434:	21400017 	ldw	r5,0(r4)
  80b438:	18c00104 	addi	r3,r3,4
  80b43c:	21000104 	addi	r4,r4,4
  80b440:	197fff15 	stw	r5,-4(r3)
  80b444:	223ffb36 	bltu	r4,r8,80b434 <__alt_data_end+0xff80b434>
  80b448:	003fe606 	br	80b3e4 <__alt_data_end+0xff80b3e4>
  80b44c:	9c000084 	addi	r16,r19,2
  80b450:	003fe406 	br	80b3e4 <__alt_data_end+0xff80b3e4>

0080b454 <__mcmp>:
  80b454:	20800417 	ldw	r2,16(r4)
  80b458:	28c00417 	ldw	r3,16(r5)
  80b45c:	10c5c83a 	sub	r2,r2,r3
  80b460:	1000111e 	bne	r2,zero,80b4a8 <__mcmp+0x54>
  80b464:	18c7883a 	add	r3,r3,r3
  80b468:	18c7883a 	add	r3,r3,r3
  80b46c:	21000504 	addi	r4,r4,20
  80b470:	29400504 	addi	r5,r5,20
  80b474:	20c5883a 	add	r2,r4,r3
  80b478:	28cb883a 	add	r5,r5,r3
  80b47c:	00000106 	br	80b484 <__mcmp+0x30>
  80b480:	20800a2e 	bgeu	r4,r2,80b4ac <__mcmp+0x58>
  80b484:	10bfff04 	addi	r2,r2,-4
  80b488:	297fff04 	addi	r5,r5,-4
  80b48c:	11800017 	ldw	r6,0(r2)
  80b490:	28c00017 	ldw	r3,0(r5)
  80b494:	30fffa26 	beq	r6,r3,80b480 <__alt_data_end+0xff80b480>
  80b498:	30c00236 	bltu	r6,r3,80b4a4 <__mcmp+0x50>
  80b49c:	00800044 	movi	r2,1
  80b4a0:	f800283a 	ret
  80b4a4:	00bfffc4 	movi	r2,-1
  80b4a8:	f800283a 	ret
  80b4ac:	0005883a 	mov	r2,zero
  80b4b0:	f800283a 	ret

0080b4b4 <__mdiff>:
  80b4b4:	28c00417 	ldw	r3,16(r5)
  80b4b8:	30800417 	ldw	r2,16(r6)
  80b4bc:	defffa04 	addi	sp,sp,-24
  80b4c0:	dcc00315 	stw	r19,12(sp)
  80b4c4:	dc800215 	stw	r18,8(sp)
  80b4c8:	dfc00515 	stw	ra,20(sp)
  80b4cc:	dd000415 	stw	r20,16(sp)
  80b4d0:	dc400115 	stw	r17,4(sp)
  80b4d4:	dc000015 	stw	r16,0(sp)
  80b4d8:	1887c83a 	sub	r3,r3,r2
  80b4dc:	2825883a 	mov	r18,r5
  80b4e0:	3027883a 	mov	r19,r6
  80b4e4:	1800141e 	bne	r3,zero,80b538 <__mdiff+0x84>
  80b4e8:	1085883a 	add	r2,r2,r2
  80b4ec:	1085883a 	add	r2,r2,r2
  80b4f0:	2a000504 	addi	r8,r5,20
  80b4f4:	34000504 	addi	r16,r6,20
  80b4f8:	4087883a 	add	r3,r8,r2
  80b4fc:	8085883a 	add	r2,r16,r2
  80b500:	00000106 	br	80b508 <__mdiff+0x54>
  80b504:	40c0592e 	bgeu	r8,r3,80b66c <__mdiff+0x1b8>
  80b508:	18ffff04 	addi	r3,r3,-4
  80b50c:	10bfff04 	addi	r2,r2,-4
  80b510:	19c00017 	ldw	r7,0(r3)
  80b514:	11400017 	ldw	r5,0(r2)
  80b518:	397ffa26 	beq	r7,r5,80b504 <__alt_data_end+0xff80b504>
  80b51c:	3940592e 	bgeu	r7,r5,80b684 <__mdiff+0x1d0>
  80b520:	9005883a 	mov	r2,r18
  80b524:	4023883a 	mov	r17,r8
  80b528:	9825883a 	mov	r18,r19
  80b52c:	05000044 	movi	r20,1
  80b530:	1027883a 	mov	r19,r2
  80b534:	00000406 	br	80b548 <__mdiff+0x94>
  80b538:	18005616 	blt	r3,zero,80b694 <__mdiff+0x1e0>
  80b53c:	34400504 	addi	r17,r6,20
  80b540:	2c000504 	addi	r16,r5,20
  80b544:	0029883a 	mov	r20,zero
  80b548:	91400117 	ldw	r5,4(r18)
  80b54c:	080ab8c0 	call	80ab8c <_Balloc>
  80b550:	92400417 	ldw	r9,16(r18)
  80b554:	9b000417 	ldw	r12,16(r19)
  80b558:	12c00504 	addi	r11,r2,20
  80b55c:	4a51883a 	add	r8,r9,r9
  80b560:	6319883a 	add	r12,r12,r12
  80b564:	4211883a 	add	r8,r8,r8
  80b568:	6319883a 	add	r12,r12,r12
  80b56c:	15000315 	stw	r20,12(r2)
  80b570:	8211883a 	add	r8,r16,r8
  80b574:	8b19883a 	add	r12,r17,r12
  80b578:	0007883a 	mov	r3,zero
  80b57c:	81400017 	ldw	r5,0(r16)
  80b580:	89c00017 	ldw	r7,0(r17)
  80b584:	59800104 	addi	r6,r11,4
  80b588:	293fffcc 	andi	r4,r5,65535
  80b58c:	20c7883a 	add	r3,r4,r3
  80b590:	393fffcc 	andi	r4,r7,65535
  80b594:	1909c83a 	sub	r4,r3,r4
  80b598:	280ad43a 	srli	r5,r5,16
  80b59c:	380ed43a 	srli	r7,r7,16
  80b5a0:	2007d43a 	srai	r3,r4,16
  80b5a4:	213fffcc 	andi	r4,r4,65535
  80b5a8:	29cbc83a 	sub	r5,r5,r7
  80b5ac:	28c7883a 	add	r3,r5,r3
  80b5b0:	180a943a 	slli	r5,r3,16
  80b5b4:	8c400104 	addi	r17,r17,4
  80b5b8:	84000104 	addi	r16,r16,4
  80b5bc:	2908b03a 	or	r4,r5,r4
  80b5c0:	59000015 	stw	r4,0(r11)
  80b5c4:	1807d43a 	srai	r3,r3,16
  80b5c8:	3015883a 	mov	r10,r6
  80b5cc:	3017883a 	mov	r11,r6
  80b5d0:	8b3fea36 	bltu	r17,r12,80b57c <__alt_data_end+0xff80b57c>
  80b5d4:	8200162e 	bgeu	r16,r8,80b630 <__mdiff+0x17c>
  80b5d8:	8017883a 	mov	r11,r16
  80b5dc:	59400017 	ldw	r5,0(r11)
  80b5e0:	31800104 	addi	r6,r6,4
  80b5e4:	5ac00104 	addi	r11,r11,4
  80b5e8:	293fffcc 	andi	r4,r5,65535
  80b5ec:	20c7883a 	add	r3,r4,r3
  80b5f0:	280ed43a 	srli	r7,r5,16
  80b5f4:	180bd43a 	srai	r5,r3,16
  80b5f8:	193fffcc 	andi	r4,r3,65535
  80b5fc:	3947883a 	add	r3,r7,r5
  80b600:	180a943a 	slli	r5,r3,16
  80b604:	1807d43a 	srai	r3,r3,16
  80b608:	2908b03a 	or	r4,r5,r4
  80b60c:	313fff15 	stw	r4,-4(r6)
  80b610:	5a3ff236 	bltu	r11,r8,80b5dc <__alt_data_end+0xff80b5dc>
  80b614:	0406303a 	nor	r3,zero,r16
  80b618:	1a07883a 	add	r3,r3,r8
  80b61c:	1806d0ba 	srli	r3,r3,2
  80b620:	18c00044 	addi	r3,r3,1
  80b624:	18c7883a 	add	r3,r3,r3
  80b628:	18c7883a 	add	r3,r3,r3
  80b62c:	50d5883a 	add	r10,r10,r3
  80b630:	50ffff04 	addi	r3,r10,-4
  80b634:	2000041e 	bne	r4,zero,80b648 <__mdiff+0x194>
  80b638:	18ffff04 	addi	r3,r3,-4
  80b63c:	19000017 	ldw	r4,0(r3)
  80b640:	4a7fffc4 	addi	r9,r9,-1
  80b644:	203ffc26 	beq	r4,zero,80b638 <__alt_data_end+0xff80b638>
  80b648:	12400415 	stw	r9,16(r2)
  80b64c:	dfc00517 	ldw	ra,20(sp)
  80b650:	dd000417 	ldw	r20,16(sp)
  80b654:	dcc00317 	ldw	r19,12(sp)
  80b658:	dc800217 	ldw	r18,8(sp)
  80b65c:	dc400117 	ldw	r17,4(sp)
  80b660:	dc000017 	ldw	r16,0(sp)
  80b664:	dec00604 	addi	sp,sp,24
  80b668:	f800283a 	ret
  80b66c:	000b883a 	mov	r5,zero
  80b670:	080ab8c0 	call	80ab8c <_Balloc>
  80b674:	00c00044 	movi	r3,1
  80b678:	10c00415 	stw	r3,16(r2)
  80b67c:	10000515 	stw	zero,20(r2)
  80b680:	003ff206 	br	80b64c <__alt_data_end+0xff80b64c>
  80b684:	8023883a 	mov	r17,r16
  80b688:	0029883a 	mov	r20,zero
  80b68c:	4021883a 	mov	r16,r8
  80b690:	003fad06 	br	80b548 <__alt_data_end+0xff80b548>
  80b694:	9005883a 	mov	r2,r18
  80b698:	94400504 	addi	r17,r18,20
  80b69c:	9c000504 	addi	r16,r19,20
  80b6a0:	9825883a 	mov	r18,r19
  80b6a4:	05000044 	movi	r20,1
  80b6a8:	1027883a 	mov	r19,r2
  80b6ac:	003fa606 	br	80b548 <__alt_data_end+0xff80b548>

0080b6b0 <__ulp>:
  80b6b0:	295ffc2c 	andhi	r5,r5,32752
  80b6b4:	00bf3034 	movhi	r2,64704
  80b6b8:	2887883a 	add	r3,r5,r2
  80b6bc:	00c0020e 	bge	zero,r3,80b6c8 <__ulp+0x18>
  80b6c0:	0005883a 	mov	r2,zero
  80b6c4:	f800283a 	ret
  80b6c8:	00c7c83a 	sub	r3,zero,r3
  80b6cc:	1807d53a 	srai	r3,r3,20
  80b6d0:	008004c4 	movi	r2,19
  80b6d4:	10c00b0e 	bge	r2,r3,80b704 <__ulp+0x54>
  80b6d8:	18bffb04 	addi	r2,r3,-20
  80b6dc:	01000784 	movi	r4,30
  80b6e0:	0007883a 	mov	r3,zero
  80b6e4:	20800516 	blt	r4,r2,80b6fc <__ulp+0x4c>
  80b6e8:	010007c4 	movi	r4,31
  80b6ec:	2089c83a 	sub	r4,r4,r2
  80b6f0:	00800044 	movi	r2,1
  80b6f4:	1104983a 	sll	r2,r2,r4
  80b6f8:	f800283a 	ret
  80b6fc:	00800044 	movi	r2,1
  80b700:	f800283a 	ret
  80b704:	01400234 	movhi	r5,8
  80b708:	28c7d83a 	sra	r3,r5,r3
  80b70c:	0005883a 	mov	r2,zero
  80b710:	f800283a 	ret

0080b714 <__b2d>:
  80b714:	defffa04 	addi	sp,sp,-24
  80b718:	dc000015 	stw	r16,0(sp)
  80b71c:	24000417 	ldw	r16,16(r4)
  80b720:	dc400115 	stw	r17,4(sp)
  80b724:	24400504 	addi	r17,r4,20
  80b728:	8421883a 	add	r16,r16,r16
  80b72c:	8421883a 	add	r16,r16,r16
  80b730:	8c21883a 	add	r16,r17,r16
  80b734:	dc800215 	stw	r18,8(sp)
  80b738:	84bfff17 	ldw	r18,-4(r16)
  80b73c:	dd000415 	stw	r20,16(sp)
  80b740:	dcc00315 	stw	r19,12(sp)
  80b744:	9009883a 	mov	r4,r18
  80b748:	2829883a 	mov	r20,r5
  80b74c:	dfc00515 	stw	ra,20(sp)
  80b750:	080ae800 	call	80ae80 <__hi0bits>
  80b754:	00c00804 	movi	r3,32
  80b758:	1889c83a 	sub	r4,r3,r2
  80b75c:	a1000015 	stw	r4,0(r20)
  80b760:	01000284 	movi	r4,10
  80b764:	84ffff04 	addi	r19,r16,-4
  80b768:	20801216 	blt	r4,r2,80b7b4 <__b2d+0xa0>
  80b76c:	018002c4 	movi	r6,11
  80b770:	308dc83a 	sub	r6,r6,r2
  80b774:	9186d83a 	srl	r3,r18,r6
  80b778:	18cffc34 	orhi	r3,r3,16368
  80b77c:	8cc0212e 	bgeu	r17,r19,80b804 <__b2d+0xf0>
  80b780:	813ffe17 	ldw	r4,-8(r16)
  80b784:	218cd83a 	srl	r6,r4,r6
  80b788:	10800544 	addi	r2,r2,21
  80b78c:	9084983a 	sll	r2,r18,r2
  80b790:	1184b03a 	or	r2,r2,r6
  80b794:	dfc00517 	ldw	ra,20(sp)
  80b798:	dd000417 	ldw	r20,16(sp)
  80b79c:	dcc00317 	ldw	r19,12(sp)
  80b7a0:	dc800217 	ldw	r18,8(sp)
  80b7a4:	dc400117 	ldw	r17,4(sp)
  80b7a8:	dc000017 	ldw	r16,0(sp)
  80b7ac:	dec00604 	addi	sp,sp,24
  80b7b0:	f800283a 	ret
  80b7b4:	8cc00f2e 	bgeu	r17,r19,80b7f4 <__b2d+0xe0>
  80b7b8:	117ffd44 	addi	r5,r2,-11
  80b7bc:	80bffe17 	ldw	r2,-8(r16)
  80b7c0:	28000e26 	beq	r5,zero,80b7fc <__b2d+0xe8>
  80b7c4:	1949c83a 	sub	r4,r3,r5
  80b7c8:	9164983a 	sll	r18,r18,r5
  80b7cc:	1106d83a 	srl	r3,r2,r4
  80b7d0:	81bffe04 	addi	r6,r16,-8
  80b7d4:	948ffc34 	orhi	r18,r18,16368
  80b7d8:	90c6b03a 	or	r3,r18,r3
  80b7dc:	89800e2e 	bgeu	r17,r6,80b818 <__b2d+0x104>
  80b7e0:	81bffd17 	ldw	r6,-12(r16)
  80b7e4:	1144983a 	sll	r2,r2,r5
  80b7e8:	310ad83a 	srl	r5,r6,r4
  80b7ec:	2884b03a 	or	r2,r5,r2
  80b7f0:	003fe806 	br	80b794 <__alt_data_end+0xff80b794>
  80b7f4:	10bffd44 	addi	r2,r2,-11
  80b7f8:	1000041e 	bne	r2,zero,80b80c <__b2d+0xf8>
  80b7fc:	90cffc34 	orhi	r3,r18,16368
  80b800:	003fe406 	br	80b794 <__alt_data_end+0xff80b794>
  80b804:	000d883a 	mov	r6,zero
  80b808:	003fdf06 	br	80b788 <__alt_data_end+0xff80b788>
  80b80c:	90a4983a 	sll	r18,r18,r2
  80b810:	0005883a 	mov	r2,zero
  80b814:	003ff906 	br	80b7fc <__alt_data_end+0xff80b7fc>
  80b818:	1144983a 	sll	r2,r2,r5
  80b81c:	003fdd06 	br	80b794 <__alt_data_end+0xff80b794>

0080b820 <__d2b>:
  80b820:	defff804 	addi	sp,sp,-32
  80b824:	dc000215 	stw	r16,8(sp)
  80b828:	3021883a 	mov	r16,r6
  80b82c:	dc400315 	stw	r17,12(sp)
  80b830:	8022907a 	slli	r17,r16,1
  80b834:	dd000615 	stw	r20,24(sp)
  80b838:	2829883a 	mov	r20,r5
  80b83c:	01400044 	movi	r5,1
  80b840:	dcc00515 	stw	r19,20(sp)
  80b844:	dc800415 	stw	r18,16(sp)
  80b848:	dfc00715 	stw	ra,28(sp)
  80b84c:	3825883a 	mov	r18,r7
  80b850:	8822d57a 	srli	r17,r17,21
  80b854:	080ab8c0 	call	80ab8c <_Balloc>
  80b858:	1027883a 	mov	r19,r2
  80b85c:	00800434 	movhi	r2,16
  80b860:	10bfffc4 	addi	r2,r2,-1
  80b864:	808c703a 	and	r6,r16,r2
  80b868:	88000126 	beq	r17,zero,80b870 <__d2b+0x50>
  80b86c:	31800434 	orhi	r6,r6,16
  80b870:	d9800015 	stw	r6,0(sp)
  80b874:	a0002426 	beq	r20,zero,80b908 <__d2b+0xe8>
  80b878:	d9000104 	addi	r4,sp,4
  80b87c:	dd000115 	stw	r20,4(sp)
  80b880:	080aee80 	call	80aee8 <__lo0bits>
  80b884:	d8c00017 	ldw	r3,0(sp)
  80b888:	10002f1e 	bne	r2,zero,80b948 <__d2b+0x128>
  80b88c:	d9000117 	ldw	r4,4(sp)
  80b890:	99000515 	stw	r4,20(r19)
  80b894:	1821003a 	cmpeq	r16,r3,zero
  80b898:	01000084 	movi	r4,2
  80b89c:	2421c83a 	sub	r16,r4,r16
  80b8a0:	98c00615 	stw	r3,24(r19)
  80b8a4:	9c000415 	stw	r16,16(r19)
  80b8a8:	88001f1e 	bne	r17,zero,80b928 <__d2b+0x108>
  80b8ac:	10bef384 	addi	r2,r2,-1074
  80b8b0:	90800015 	stw	r2,0(r18)
  80b8b4:	00900034 	movhi	r2,16384
  80b8b8:	10bfffc4 	addi	r2,r2,-1
  80b8bc:	8085883a 	add	r2,r16,r2
  80b8c0:	1085883a 	add	r2,r2,r2
  80b8c4:	1085883a 	add	r2,r2,r2
  80b8c8:	9885883a 	add	r2,r19,r2
  80b8cc:	11000517 	ldw	r4,20(r2)
  80b8d0:	8020917a 	slli	r16,r16,5
  80b8d4:	080ae800 	call	80ae80 <__hi0bits>
  80b8d8:	d8c00817 	ldw	r3,32(sp)
  80b8dc:	8085c83a 	sub	r2,r16,r2
  80b8e0:	18800015 	stw	r2,0(r3)
  80b8e4:	9805883a 	mov	r2,r19
  80b8e8:	dfc00717 	ldw	ra,28(sp)
  80b8ec:	dd000617 	ldw	r20,24(sp)
  80b8f0:	dcc00517 	ldw	r19,20(sp)
  80b8f4:	dc800417 	ldw	r18,16(sp)
  80b8f8:	dc400317 	ldw	r17,12(sp)
  80b8fc:	dc000217 	ldw	r16,8(sp)
  80b900:	dec00804 	addi	sp,sp,32
  80b904:	f800283a 	ret
  80b908:	d809883a 	mov	r4,sp
  80b90c:	080aee80 	call	80aee8 <__lo0bits>
  80b910:	d8c00017 	ldw	r3,0(sp)
  80b914:	04000044 	movi	r16,1
  80b918:	9c000415 	stw	r16,16(r19)
  80b91c:	98c00515 	stw	r3,20(r19)
  80b920:	10800804 	addi	r2,r2,32
  80b924:	883fe126 	beq	r17,zero,80b8ac <__alt_data_end+0xff80b8ac>
  80b928:	00c00d44 	movi	r3,53
  80b92c:	8c7ef344 	addi	r17,r17,-1075
  80b930:	88a3883a 	add	r17,r17,r2
  80b934:	1885c83a 	sub	r2,r3,r2
  80b938:	d8c00817 	ldw	r3,32(sp)
  80b93c:	94400015 	stw	r17,0(r18)
  80b940:	18800015 	stw	r2,0(r3)
  80b944:	003fe706 	br	80b8e4 <__alt_data_end+0xff80b8e4>
  80b948:	01000804 	movi	r4,32
  80b94c:	2089c83a 	sub	r4,r4,r2
  80b950:	1908983a 	sll	r4,r3,r4
  80b954:	d9400117 	ldw	r5,4(sp)
  80b958:	1886d83a 	srl	r3,r3,r2
  80b95c:	2148b03a 	or	r4,r4,r5
  80b960:	99000515 	stw	r4,20(r19)
  80b964:	d8c00015 	stw	r3,0(sp)
  80b968:	003fca06 	br	80b894 <__alt_data_end+0xff80b894>

0080b96c <__ratio>:
  80b96c:	defff904 	addi	sp,sp,-28
  80b970:	dc400315 	stw	r17,12(sp)
  80b974:	2823883a 	mov	r17,r5
  80b978:	d9400104 	addi	r5,sp,4
  80b97c:	dfc00615 	stw	ra,24(sp)
  80b980:	dcc00515 	stw	r19,20(sp)
  80b984:	dc800415 	stw	r18,16(sp)
  80b988:	2027883a 	mov	r19,r4
  80b98c:	dc000215 	stw	r16,8(sp)
  80b990:	080b7140 	call	80b714 <__b2d>
  80b994:	d80b883a 	mov	r5,sp
  80b998:	8809883a 	mov	r4,r17
  80b99c:	1025883a 	mov	r18,r2
  80b9a0:	1821883a 	mov	r16,r3
  80b9a4:	080b7140 	call	80b714 <__b2d>
  80b9a8:	8a000417 	ldw	r8,16(r17)
  80b9ac:	99000417 	ldw	r4,16(r19)
  80b9b0:	d9400117 	ldw	r5,4(sp)
  80b9b4:	2209c83a 	sub	r4,r4,r8
  80b9b8:	2010917a 	slli	r8,r4,5
  80b9bc:	d9000017 	ldw	r4,0(sp)
  80b9c0:	2909c83a 	sub	r4,r5,r4
  80b9c4:	4109883a 	add	r4,r8,r4
  80b9c8:	01000e0e 	bge	zero,r4,80ba04 <__ratio+0x98>
  80b9cc:	2008953a 	slli	r4,r4,20
  80b9d0:	2421883a 	add	r16,r4,r16
  80b9d4:	100d883a 	mov	r6,r2
  80b9d8:	180f883a 	mov	r7,r3
  80b9dc:	9009883a 	mov	r4,r18
  80b9e0:	800b883a 	mov	r5,r16
  80b9e4:	080edf80 	call	80edf8 <__divdf3>
  80b9e8:	dfc00617 	ldw	ra,24(sp)
  80b9ec:	dcc00517 	ldw	r19,20(sp)
  80b9f0:	dc800417 	ldw	r18,16(sp)
  80b9f4:	dc400317 	ldw	r17,12(sp)
  80b9f8:	dc000217 	ldw	r16,8(sp)
  80b9fc:	dec00704 	addi	sp,sp,28
  80ba00:	f800283a 	ret
  80ba04:	2008953a 	slli	r4,r4,20
  80ba08:	1907c83a 	sub	r3,r3,r4
  80ba0c:	003ff106 	br	80b9d4 <__alt_data_end+0xff80b9d4>

0080ba10 <_mprec_log10>:
  80ba10:	defffe04 	addi	sp,sp,-8
  80ba14:	dc000015 	stw	r16,0(sp)
  80ba18:	dfc00115 	stw	ra,4(sp)
  80ba1c:	008005c4 	movi	r2,23
  80ba20:	2021883a 	mov	r16,r4
  80ba24:	11000d0e 	bge	r2,r4,80ba5c <_mprec_log10+0x4c>
  80ba28:	0005883a 	mov	r2,zero
  80ba2c:	00cffc34 	movhi	r3,16368
  80ba30:	843fffc4 	addi	r16,r16,-1
  80ba34:	000d883a 	mov	r6,zero
  80ba38:	01d00934 	movhi	r7,16420
  80ba3c:	1009883a 	mov	r4,r2
  80ba40:	180b883a 	mov	r5,r3
  80ba44:	08038680 	call	803868 <__muldf3>
  80ba48:	803ff91e 	bne	r16,zero,80ba30 <__alt_data_end+0xff80ba30>
  80ba4c:	dfc00117 	ldw	ra,4(sp)
  80ba50:	dc000017 	ldw	r16,0(sp)
  80ba54:	dec00204 	addi	sp,sp,8
  80ba58:	f800283a 	ret
  80ba5c:	202090fa 	slli	r16,r4,3
  80ba60:	00802074 	movhi	r2,129
  80ba64:	10893b04 	addi	r2,r2,9452
  80ba68:	1421883a 	add	r16,r2,r16
  80ba6c:	80800017 	ldw	r2,0(r16)
  80ba70:	80c00117 	ldw	r3,4(r16)
  80ba74:	dfc00117 	ldw	ra,4(sp)
  80ba78:	dc000017 	ldw	r16,0(sp)
  80ba7c:	dec00204 	addi	sp,sp,8
  80ba80:	f800283a 	ret

0080ba84 <__copybits>:
  80ba84:	297fffc4 	addi	r5,r5,-1
  80ba88:	280fd17a 	srai	r7,r5,5
  80ba8c:	30c00417 	ldw	r3,16(r6)
  80ba90:	30800504 	addi	r2,r6,20
  80ba94:	39c00044 	addi	r7,r7,1
  80ba98:	18c7883a 	add	r3,r3,r3
  80ba9c:	39cf883a 	add	r7,r7,r7
  80baa0:	18c7883a 	add	r3,r3,r3
  80baa4:	39cf883a 	add	r7,r7,r7
  80baa8:	10c7883a 	add	r3,r2,r3
  80baac:	21cf883a 	add	r7,r4,r7
  80bab0:	10c00d2e 	bgeu	r2,r3,80bae8 <__copybits+0x64>
  80bab4:	200b883a 	mov	r5,r4
  80bab8:	12000017 	ldw	r8,0(r2)
  80babc:	29400104 	addi	r5,r5,4
  80bac0:	10800104 	addi	r2,r2,4
  80bac4:	2a3fff15 	stw	r8,-4(r5)
  80bac8:	10fffb36 	bltu	r2,r3,80bab8 <__alt_data_end+0xff80bab8>
  80bacc:	1985c83a 	sub	r2,r3,r6
  80bad0:	10bffac4 	addi	r2,r2,-21
  80bad4:	1004d0ba 	srli	r2,r2,2
  80bad8:	10800044 	addi	r2,r2,1
  80badc:	1085883a 	add	r2,r2,r2
  80bae0:	1085883a 	add	r2,r2,r2
  80bae4:	2089883a 	add	r4,r4,r2
  80bae8:	21c0032e 	bgeu	r4,r7,80baf8 <__copybits+0x74>
  80baec:	20000015 	stw	zero,0(r4)
  80baf0:	21000104 	addi	r4,r4,4
  80baf4:	21fffd36 	bltu	r4,r7,80baec <__alt_data_end+0xff80baec>
  80baf8:	f800283a 	ret

0080bafc <__any_on>:
  80bafc:	20c00417 	ldw	r3,16(r4)
  80bb00:	2805d17a 	srai	r2,r5,5
  80bb04:	21000504 	addi	r4,r4,20
  80bb08:	18800d0e 	bge	r3,r2,80bb40 <__any_on+0x44>
  80bb0c:	18c7883a 	add	r3,r3,r3
  80bb10:	18c7883a 	add	r3,r3,r3
  80bb14:	20c7883a 	add	r3,r4,r3
  80bb18:	20c0192e 	bgeu	r4,r3,80bb80 <__any_on+0x84>
  80bb1c:	18bfff17 	ldw	r2,-4(r3)
  80bb20:	18ffff04 	addi	r3,r3,-4
  80bb24:	1000041e 	bne	r2,zero,80bb38 <__any_on+0x3c>
  80bb28:	20c0142e 	bgeu	r4,r3,80bb7c <__any_on+0x80>
  80bb2c:	18ffff04 	addi	r3,r3,-4
  80bb30:	19400017 	ldw	r5,0(r3)
  80bb34:	283ffc26 	beq	r5,zero,80bb28 <__alt_data_end+0xff80bb28>
  80bb38:	00800044 	movi	r2,1
  80bb3c:	f800283a 	ret
  80bb40:	10c00a0e 	bge	r2,r3,80bb6c <__any_on+0x70>
  80bb44:	1085883a 	add	r2,r2,r2
  80bb48:	1085883a 	add	r2,r2,r2
  80bb4c:	294007cc 	andi	r5,r5,31
  80bb50:	2087883a 	add	r3,r4,r2
  80bb54:	283ff026 	beq	r5,zero,80bb18 <__alt_data_end+0xff80bb18>
  80bb58:	19800017 	ldw	r6,0(r3)
  80bb5c:	3144d83a 	srl	r2,r6,r5
  80bb60:	114a983a 	sll	r5,r2,r5
  80bb64:	317ff41e 	bne	r6,r5,80bb38 <__alt_data_end+0xff80bb38>
  80bb68:	003feb06 	br	80bb18 <__alt_data_end+0xff80bb18>
  80bb6c:	1085883a 	add	r2,r2,r2
  80bb70:	1085883a 	add	r2,r2,r2
  80bb74:	2087883a 	add	r3,r4,r2
  80bb78:	003fe706 	br	80bb18 <__alt_data_end+0xff80bb18>
  80bb7c:	f800283a 	ret
  80bb80:	0005883a 	mov	r2,zero
  80bb84:	f800283a 	ret

0080bb88 <_realloc_r>:
  80bb88:	defff604 	addi	sp,sp,-40
  80bb8c:	dc800215 	stw	r18,8(sp)
  80bb90:	dfc00915 	stw	ra,36(sp)
  80bb94:	df000815 	stw	fp,32(sp)
  80bb98:	ddc00715 	stw	r23,28(sp)
  80bb9c:	dd800615 	stw	r22,24(sp)
  80bba0:	dd400515 	stw	r21,20(sp)
  80bba4:	dd000415 	stw	r20,16(sp)
  80bba8:	dcc00315 	stw	r19,12(sp)
  80bbac:	dc400115 	stw	r17,4(sp)
  80bbb0:	dc000015 	stw	r16,0(sp)
  80bbb4:	3025883a 	mov	r18,r6
  80bbb8:	2800b726 	beq	r5,zero,80be98 <_realloc_r+0x310>
  80bbbc:	282b883a 	mov	r21,r5
  80bbc0:	2029883a 	mov	r20,r4
  80bbc4:	080fdf80 	call	80fdf8 <__malloc_lock>
  80bbc8:	a8bfff17 	ldw	r2,-4(r21)
  80bbcc:	043fff04 	movi	r16,-4
  80bbd0:	90c002c4 	addi	r3,r18,11
  80bbd4:	01000584 	movi	r4,22
  80bbd8:	acfffe04 	addi	r19,r21,-8
  80bbdc:	1420703a 	and	r16,r2,r16
  80bbe0:	20c0332e 	bgeu	r4,r3,80bcb0 <_realloc_r+0x128>
  80bbe4:	047ffe04 	movi	r17,-8
  80bbe8:	1c62703a 	and	r17,r3,r17
  80bbec:	8807883a 	mov	r3,r17
  80bbf0:	88005816 	blt	r17,zero,80bd54 <_realloc_r+0x1cc>
  80bbf4:	8c805736 	bltu	r17,r18,80bd54 <_realloc_r+0x1cc>
  80bbf8:	80c0300e 	bge	r16,r3,80bcbc <_realloc_r+0x134>
  80bbfc:	07002074 	movhi	fp,129
  80bc00:	e70aa704 	addi	fp,fp,10908
  80bc04:	e1c00217 	ldw	r7,8(fp)
  80bc08:	9c09883a 	add	r4,r19,r16
  80bc0c:	22000117 	ldw	r8,4(r4)
  80bc10:	21c06326 	beq	r4,r7,80bda0 <_realloc_r+0x218>
  80bc14:	017fff84 	movi	r5,-2
  80bc18:	414a703a 	and	r5,r8,r5
  80bc1c:	214b883a 	add	r5,r4,r5
  80bc20:	29800117 	ldw	r6,4(r5)
  80bc24:	3180004c 	andi	r6,r6,1
  80bc28:	30003f26 	beq	r6,zero,80bd28 <_realloc_r+0x1a0>
  80bc2c:	1080004c 	andi	r2,r2,1
  80bc30:	10008326 	beq	r2,zero,80be40 <_realloc_r+0x2b8>
  80bc34:	900b883a 	mov	r5,r18
  80bc38:	a009883a 	mov	r4,r20
  80bc3c:	0809ed00 	call	809ed0 <_malloc_r>
  80bc40:	1025883a 	mov	r18,r2
  80bc44:	10011e26 	beq	r2,zero,80c0c0 <_realloc_r+0x538>
  80bc48:	a93fff17 	ldw	r4,-4(r21)
  80bc4c:	10fffe04 	addi	r3,r2,-8
  80bc50:	00bfff84 	movi	r2,-2
  80bc54:	2084703a 	and	r2,r4,r2
  80bc58:	9885883a 	add	r2,r19,r2
  80bc5c:	1880ee26 	beq	r3,r2,80c018 <_realloc_r+0x490>
  80bc60:	81bfff04 	addi	r6,r16,-4
  80bc64:	00800904 	movi	r2,36
  80bc68:	1180b836 	bltu	r2,r6,80bf4c <_realloc_r+0x3c4>
  80bc6c:	00c004c4 	movi	r3,19
  80bc70:	19809636 	bltu	r3,r6,80becc <_realloc_r+0x344>
  80bc74:	9005883a 	mov	r2,r18
  80bc78:	a807883a 	mov	r3,r21
  80bc7c:	19000017 	ldw	r4,0(r3)
  80bc80:	11000015 	stw	r4,0(r2)
  80bc84:	19000117 	ldw	r4,4(r3)
  80bc88:	11000115 	stw	r4,4(r2)
  80bc8c:	18c00217 	ldw	r3,8(r3)
  80bc90:	10c00215 	stw	r3,8(r2)
  80bc94:	a80b883a 	mov	r5,r21
  80bc98:	a009883a 	mov	r4,r20
  80bc9c:	08092e40 	call	8092e4 <_free_r>
  80bca0:	a009883a 	mov	r4,r20
  80bca4:	080fe1c0 	call	80fe1c <__malloc_unlock>
  80bca8:	9005883a 	mov	r2,r18
  80bcac:	00001206 	br	80bcf8 <_realloc_r+0x170>
  80bcb0:	00c00404 	movi	r3,16
  80bcb4:	1823883a 	mov	r17,r3
  80bcb8:	003fce06 	br	80bbf4 <__alt_data_end+0xff80bbf4>
  80bcbc:	a825883a 	mov	r18,r21
  80bcc0:	8445c83a 	sub	r2,r16,r17
  80bcc4:	00c003c4 	movi	r3,15
  80bcc8:	18802636 	bltu	r3,r2,80bd64 <_realloc_r+0x1dc>
  80bccc:	99800117 	ldw	r6,4(r19)
  80bcd0:	9c07883a 	add	r3,r19,r16
  80bcd4:	3180004c 	andi	r6,r6,1
  80bcd8:	3420b03a 	or	r16,r6,r16
  80bcdc:	9c000115 	stw	r16,4(r19)
  80bce0:	18800117 	ldw	r2,4(r3)
  80bce4:	10800054 	ori	r2,r2,1
  80bce8:	18800115 	stw	r2,4(r3)
  80bcec:	a009883a 	mov	r4,r20
  80bcf0:	080fe1c0 	call	80fe1c <__malloc_unlock>
  80bcf4:	9005883a 	mov	r2,r18
  80bcf8:	dfc00917 	ldw	ra,36(sp)
  80bcfc:	df000817 	ldw	fp,32(sp)
  80bd00:	ddc00717 	ldw	r23,28(sp)
  80bd04:	dd800617 	ldw	r22,24(sp)
  80bd08:	dd400517 	ldw	r21,20(sp)
  80bd0c:	dd000417 	ldw	r20,16(sp)
  80bd10:	dcc00317 	ldw	r19,12(sp)
  80bd14:	dc800217 	ldw	r18,8(sp)
  80bd18:	dc400117 	ldw	r17,4(sp)
  80bd1c:	dc000017 	ldw	r16,0(sp)
  80bd20:	dec00a04 	addi	sp,sp,40
  80bd24:	f800283a 	ret
  80bd28:	017fff04 	movi	r5,-4
  80bd2c:	414a703a 	and	r5,r8,r5
  80bd30:	814d883a 	add	r6,r16,r5
  80bd34:	30c01f16 	blt	r6,r3,80bdb4 <_realloc_r+0x22c>
  80bd38:	20800317 	ldw	r2,12(r4)
  80bd3c:	20c00217 	ldw	r3,8(r4)
  80bd40:	a825883a 	mov	r18,r21
  80bd44:	3021883a 	mov	r16,r6
  80bd48:	18800315 	stw	r2,12(r3)
  80bd4c:	10c00215 	stw	r3,8(r2)
  80bd50:	003fdb06 	br	80bcc0 <__alt_data_end+0xff80bcc0>
  80bd54:	00800304 	movi	r2,12
  80bd58:	a0800015 	stw	r2,0(r20)
  80bd5c:	0005883a 	mov	r2,zero
  80bd60:	003fe506 	br	80bcf8 <__alt_data_end+0xff80bcf8>
  80bd64:	98c00117 	ldw	r3,4(r19)
  80bd68:	9c4b883a 	add	r5,r19,r17
  80bd6c:	11000054 	ori	r4,r2,1
  80bd70:	18c0004c 	andi	r3,r3,1
  80bd74:	1c62b03a 	or	r17,r3,r17
  80bd78:	9c400115 	stw	r17,4(r19)
  80bd7c:	29000115 	stw	r4,4(r5)
  80bd80:	2885883a 	add	r2,r5,r2
  80bd84:	10c00117 	ldw	r3,4(r2)
  80bd88:	29400204 	addi	r5,r5,8
  80bd8c:	a009883a 	mov	r4,r20
  80bd90:	18c00054 	ori	r3,r3,1
  80bd94:	10c00115 	stw	r3,4(r2)
  80bd98:	08092e40 	call	8092e4 <_free_r>
  80bd9c:	003fd306 	br	80bcec <__alt_data_end+0xff80bcec>
  80bda0:	017fff04 	movi	r5,-4
  80bda4:	414a703a 	and	r5,r8,r5
  80bda8:	89800404 	addi	r6,r17,16
  80bdac:	8151883a 	add	r8,r16,r5
  80bdb0:	4180590e 	bge	r8,r6,80bf18 <_realloc_r+0x390>
  80bdb4:	1080004c 	andi	r2,r2,1
  80bdb8:	103f9e1e 	bne	r2,zero,80bc34 <__alt_data_end+0xff80bc34>
  80bdbc:	adbffe17 	ldw	r22,-8(r21)
  80bdc0:	00bfff04 	movi	r2,-4
  80bdc4:	9dadc83a 	sub	r22,r19,r22
  80bdc8:	b1800117 	ldw	r6,4(r22)
  80bdcc:	3084703a 	and	r2,r6,r2
  80bdd0:	20002026 	beq	r4,zero,80be54 <_realloc_r+0x2cc>
  80bdd4:	80af883a 	add	r23,r16,r2
  80bdd8:	b96f883a 	add	r23,r23,r5
  80bddc:	21c05f26 	beq	r4,r7,80bf5c <_realloc_r+0x3d4>
  80bde0:	b8c01c16 	blt	r23,r3,80be54 <_realloc_r+0x2cc>
  80bde4:	20800317 	ldw	r2,12(r4)
  80bde8:	20c00217 	ldw	r3,8(r4)
  80bdec:	81bfff04 	addi	r6,r16,-4
  80bdf0:	01000904 	movi	r4,36
  80bdf4:	18800315 	stw	r2,12(r3)
  80bdf8:	10c00215 	stw	r3,8(r2)
  80bdfc:	b0c00217 	ldw	r3,8(r22)
  80be00:	b0800317 	ldw	r2,12(r22)
  80be04:	b4800204 	addi	r18,r22,8
  80be08:	18800315 	stw	r2,12(r3)
  80be0c:	10c00215 	stw	r3,8(r2)
  80be10:	21801b36 	bltu	r4,r6,80be80 <_realloc_r+0x2f8>
  80be14:	008004c4 	movi	r2,19
  80be18:	1180352e 	bgeu	r2,r6,80bef0 <_realloc_r+0x368>
  80be1c:	a8800017 	ldw	r2,0(r21)
  80be20:	b0800215 	stw	r2,8(r22)
  80be24:	a8800117 	ldw	r2,4(r21)
  80be28:	b0800315 	stw	r2,12(r22)
  80be2c:	008006c4 	movi	r2,27
  80be30:	11807f36 	bltu	r2,r6,80c030 <_realloc_r+0x4a8>
  80be34:	b0800404 	addi	r2,r22,16
  80be38:	ad400204 	addi	r21,r21,8
  80be3c:	00002d06 	br	80bef4 <_realloc_r+0x36c>
  80be40:	adbffe17 	ldw	r22,-8(r21)
  80be44:	00bfff04 	movi	r2,-4
  80be48:	9dadc83a 	sub	r22,r19,r22
  80be4c:	b1000117 	ldw	r4,4(r22)
  80be50:	2084703a 	and	r2,r4,r2
  80be54:	b03f7726 	beq	r22,zero,80bc34 <__alt_data_end+0xff80bc34>
  80be58:	80af883a 	add	r23,r16,r2
  80be5c:	b8ff7516 	blt	r23,r3,80bc34 <__alt_data_end+0xff80bc34>
  80be60:	b0800317 	ldw	r2,12(r22)
  80be64:	b0c00217 	ldw	r3,8(r22)
  80be68:	81bfff04 	addi	r6,r16,-4
  80be6c:	01000904 	movi	r4,36
  80be70:	18800315 	stw	r2,12(r3)
  80be74:	10c00215 	stw	r3,8(r2)
  80be78:	b4800204 	addi	r18,r22,8
  80be7c:	21bfe52e 	bgeu	r4,r6,80be14 <__alt_data_end+0xff80be14>
  80be80:	a80b883a 	mov	r5,r21
  80be84:	9009883a 	mov	r4,r18
  80be88:	080a9080 	call	80a908 <memmove>
  80be8c:	b821883a 	mov	r16,r23
  80be90:	b027883a 	mov	r19,r22
  80be94:	003f8a06 	br	80bcc0 <__alt_data_end+0xff80bcc0>
  80be98:	300b883a 	mov	r5,r6
  80be9c:	dfc00917 	ldw	ra,36(sp)
  80bea0:	df000817 	ldw	fp,32(sp)
  80bea4:	ddc00717 	ldw	r23,28(sp)
  80bea8:	dd800617 	ldw	r22,24(sp)
  80beac:	dd400517 	ldw	r21,20(sp)
  80beb0:	dd000417 	ldw	r20,16(sp)
  80beb4:	dcc00317 	ldw	r19,12(sp)
  80beb8:	dc800217 	ldw	r18,8(sp)
  80bebc:	dc400117 	ldw	r17,4(sp)
  80bec0:	dc000017 	ldw	r16,0(sp)
  80bec4:	dec00a04 	addi	sp,sp,40
  80bec8:	0809ed01 	jmpi	809ed0 <_malloc_r>
  80becc:	a8c00017 	ldw	r3,0(r21)
  80bed0:	90c00015 	stw	r3,0(r18)
  80bed4:	a8c00117 	ldw	r3,4(r21)
  80bed8:	90c00115 	stw	r3,4(r18)
  80bedc:	00c006c4 	movi	r3,27
  80bee0:	19804536 	bltu	r3,r6,80bff8 <_realloc_r+0x470>
  80bee4:	90800204 	addi	r2,r18,8
  80bee8:	a8c00204 	addi	r3,r21,8
  80beec:	003f6306 	br	80bc7c <__alt_data_end+0xff80bc7c>
  80bef0:	9005883a 	mov	r2,r18
  80bef4:	a8c00017 	ldw	r3,0(r21)
  80bef8:	b821883a 	mov	r16,r23
  80befc:	b027883a 	mov	r19,r22
  80bf00:	10c00015 	stw	r3,0(r2)
  80bf04:	a8c00117 	ldw	r3,4(r21)
  80bf08:	10c00115 	stw	r3,4(r2)
  80bf0c:	a8c00217 	ldw	r3,8(r21)
  80bf10:	10c00215 	stw	r3,8(r2)
  80bf14:	003f6a06 	br	80bcc0 <__alt_data_end+0xff80bcc0>
  80bf18:	9c67883a 	add	r19,r19,r17
  80bf1c:	4445c83a 	sub	r2,r8,r17
  80bf20:	e4c00215 	stw	r19,8(fp)
  80bf24:	10800054 	ori	r2,r2,1
  80bf28:	98800115 	stw	r2,4(r19)
  80bf2c:	a8bfff17 	ldw	r2,-4(r21)
  80bf30:	a009883a 	mov	r4,r20
  80bf34:	1080004c 	andi	r2,r2,1
  80bf38:	1462b03a 	or	r17,r2,r17
  80bf3c:	ac7fff15 	stw	r17,-4(r21)
  80bf40:	080fe1c0 	call	80fe1c <__malloc_unlock>
  80bf44:	a805883a 	mov	r2,r21
  80bf48:	003f6b06 	br	80bcf8 <__alt_data_end+0xff80bcf8>
  80bf4c:	a80b883a 	mov	r5,r21
  80bf50:	9009883a 	mov	r4,r18
  80bf54:	080a9080 	call	80a908 <memmove>
  80bf58:	003f4e06 	br	80bc94 <__alt_data_end+0xff80bc94>
  80bf5c:	89000404 	addi	r4,r17,16
  80bf60:	b93fbc16 	blt	r23,r4,80be54 <__alt_data_end+0xff80be54>
  80bf64:	b0800317 	ldw	r2,12(r22)
  80bf68:	b0c00217 	ldw	r3,8(r22)
  80bf6c:	81bfff04 	addi	r6,r16,-4
  80bf70:	01000904 	movi	r4,36
  80bf74:	18800315 	stw	r2,12(r3)
  80bf78:	10c00215 	stw	r3,8(r2)
  80bf7c:	b4800204 	addi	r18,r22,8
  80bf80:	21804336 	bltu	r4,r6,80c090 <_realloc_r+0x508>
  80bf84:	008004c4 	movi	r2,19
  80bf88:	11803f2e 	bgeu	r2,r6,80c088 <_realloc_r+0x500>
  80bf8c:	a8800017 	ldw	r2,0(r21)
  80bf90:	b0800215 	stw	r2,8(r22)
  80bf94:	a8800117 	ldw	r2,4(r21)
  80bf98:	b0800315 	stw	r2,12(r22)
  80bf9c:	008006c4 	movi	r2,27
  80bfa0:	11803f36 	bltu	r2,r6,80c0a0 <_realloc_r+0x518>
  80bfa4:	b0800404 	addi	r2,r22,16
  80bfa8:	ad400204 	addi	r21,r21,8
  80bfac:	a8c00017 	ldw	r3,0(r21)
  80bfb0:	10c00015 	stw	r3,0(r2)
  80bfb4:	a8c00117 	ldw	r3,4(r21)
  80bfb8:	10c00115 	stw	r3,4(r2)
  80bfbc:	a8c00217 	ldw	r3,8(r21)
  80bfc0:	10c00215 	stw	r3,8(r2)
  80bfc4:	b447883a 	add	r3,r22,r17
  80bfc8:	bc45c83a 	sub	r2,r23,r17
  80bfcc:	e0c00215 	stw	r3,8(fp)
  80bfd0:	10800054 	ori	r2,r2,1
  80bfd4:	18800115 	stw	r2,4(r3)
  80bfd8:	b0800117 	ldw	r2,4(r22)
  80bfdc:	a009883a 	mov	r4,r20
  80bfe0:	1080004c 	andi	r2,r2,1
  80bfe4:	1462b03a 	or	r17,r2,r17
  80bfe8:	b4400115 	stw	r17,4(r22)
  80bfec:	080fe1c0 	call	80fe1c <__malloc_unlock>
  80bff0:	9005883a 	mov	r2,r18
  80bff4:	003f4006 	br	80bcf8 <__alt_data_end+0xff80bcf8>
  80bff8:	a8c00217 	ldw	r3,8(r21)
  80bffc:	90c00215 	stw	r3,8(r18)
  80c000:	a8c00317 	ldw	r3,12(r21)
  80c004:	90c00315 	stw	r3,12(r18)
  80c008:	30801126 	beq	r6,r2,80c050 <_realloc_r+0x4c8>
  80c00c:	90800404 	addi	r2,r18,16
  80c010:	a8c00404 	addi	r3,r21,16
  80c014:	003f1906 	br	80bc7c <__alt_data_end+0xff80bc7c>
  80c018:	90ffff17 	ldw	r3,-4(r18)
  80c01c:	00bfff04 	movi	r2,-4
  80c020:	a825883a 	mov	r18,r21
  80c024:	1884703a 	and	r2,r3,r2
  80c028:	80a1883a 	add	r16,r16,r2
  80c02c:	003f2406 	br	80bcc0 <__alt_data_end+0xff80bcc0>
  80c030:	a8800217 	ldw	r2,8(r21)
  80c034:	b0800415 	stw	r2,16(r22)
  80c038:	a8800317 	ldw	r2,12(r21)
  80c03c:	b0800515 	stw	r2,20(r22)
  80c040:	31000a26 	beq	r6,r4,80c06c <_realloc_r+0x4e4>
  80c044:	b0800604 	addi	r2,r22,24
  80c048:	ad400404 	addi	r21,r21,16
  80c04c:	003fa906 	br	80bef4 <__alt_data_end+0xff80bef4>
  80c050:	a9000417 	ldw	r4,16(r21)
  80c054:	90800604 	addi	r2,r18,24
  80c058:	a8c00604 	addi	r3,r21,24
  80c05c:	91000415 	stw	r4,16(r18)
  80c060:	a9000517 	ldw	r4,20(r21)
  80c064:	91000515 	stw	r4,20(r18)
  80c068:	003f0406 	br	80bc7c <__alt_data_end+0xff80bc7c>
  80c06c:	a8c00417 	ldw	r3,16(r21)
  80c070:	ad400604 	addi	r21,r21,24
  80c074:	b0800804 	addi	r2,r22,32
  80c078:	b0c00615 	stw	r3,24(r22)
  80c07c:	a8ffff17 	ldw	r3,-4(r21)
  80c080:	b0c00715 	stw	r3,28(r22)
  80c084:	003f9b06 	br	80bef4 <__alt_data_end+0xff80bef4>
  80c088:	9005883a 	mov	r2,r18
  80c08c:	003fc706 	br	80bfac <__alt_data_end+0xff80bfac>
  80c090:	a80b883a 	mov	r5,r21
  80c094:	9009883a 	mov	r4,r18
  80c098:	080a9080 	call	80a908 <memmove>
  80c09c:	003fc906 	br	80bfc4 <__alt_data_end+0xff80bfc4>
  80c0a0:	a8800217 	ldw	r2,8(r21)
  80c0a4:	b0800415 	stw	r2,16(r22)
  80c0a8:	a8800317 	ldw	r2,12(r21)
  80c0ac:	b0800515 	stw	r2,20(r22)
  80c0b0:	31000726 	beq	r6,r4,80c0d0 <_realloc_r+0x548>
  80c0b4:	b0800604 	addi	r2,r22,24
  80c0b8:	ad400404 	addi	r21,r21,16
  80c0bc:	003fbb06 	br	80bfac <__alt_data_end+0xff80bfac>
  80c0c0:	a009883a 	mov	r4,r20
  80c0c4:	080fe1c0 	call	80fe1c <__malloc_unlock>
  80c0c8:	0005883a 	mov	r2,zero
  80c0cc:	003f0a06 	br	80bcf8 <__alt_data_end+0xff80bcf8>
  80c0d0:	a8c00417 	ldw	r3,16(r21)
  80c0d4:	ad400604 	addi	r21,r21,24
  80c0d8:	b0800804 	addi	r2,r22,32
  80c0dc:	b0c00615 	stw	r3,24(r22)
  80c0e0:	a8ffff17 	ldw	r3,-4(r21)
  80c0e4:	b0c00715 	stw	r3,28(r22)
  80c0e8:	003fb006 	br	80bfac <__alt_data_end+0xff80bfac>

0080c0ec <__fpclassifyd>:
  80c0ec:	00a00034 	movhi	r2,32768
  80c0f0:	10bfffc4 	addi	r2,r2,-1
  80c0f4:	2884703a 	and	r2,r5,r2
  80c0f8:	10000726 	beq	r2,zero,80c118 <__fpclassifyd+0x2c>
  80c0fc:	00fffc34 	movhi	r3,65520
  80c100:	019ff834 	movhi	r6,32736
  80c104:	28c7883a 	add	r3,r5,r3
  80c108:	31bfffc4 	addi	r6,r6,-1
  80c10c:	30c00536 	bltu	r6,r3,80c124 <__fpclassifyd+0x38>
  80c110:	00800104 	movi	r2,4
  80c114:	f800283a 	ret
  80c118:	2000021e 	bne	r4,zero,80c124 <__fpclassifyd+0x38>
  80c11c:	00800084 	movi	r2,2
  80c120:	f800283a 	ret
  80c124:	00dffc34 	movhi	r3,32752
  80c128:	019ff834 	movhi	r6,32736
  80c12c:	28cb883a 	add	r5,r5,r3
  80c130:	31bfffc4 	addi	r6,r6,-1
  80c134:	317ff62e 	bgeu	r6,r5,80c110 <__alt_data_end+0xff80c110>
  80c138:	01400434 	movhi	r5,16
  80c13c:	297fffc4 	addi	r5,r5,-1
  80c140:	28800236 	bltu	r5,r2,80c14c <__fpclassifyd+0x60>
  80c144:	008000c4 	movi	r2,3
  80c148:	f800283a 	ret
  80c14c:	10c00226 	beq	r2,r3,80c158 <__fpclassifyd+0x6c>
  80c150:	0005883a 	mov	r2,zero
  80c154:	f800283a 	ret
  80c158:	2005003a 	cmpeq	r2,r4,zero
  80c15c:	f800283a 	ret

0080c160 <_sbrk_r>:
  80c160:	defffd04 	addi	sp,sp,-12
  80c164:	dc000015 	stw	r16,0(sp)
  80c168:	04002074 	movhi	r16,129
  80c16c:	dc400115 	stw	r17,4(sp)
  80c170:	8416fc04 	addi	r16,r16,23536
  80c174:	2023883a 	mov	r17,r4
  80c178:	2809883a 	mov	r4,r5
  80c17c:	dfc00215 	stw	ra,8(sp)
  80c180:	80000015 	stw	zero,0(r16)
  80c184:	080ffdc0 	call	80ffdc <sbrk>
  80c188:	00ffffc4 	movi	r3,-1
  80c18c:	10c00526 	beq	r2,r3,80c1a4 <_sbrk_r+0x44>
  80c190:	dfc00217 	ldw	ra,8(sp)
  80c194:	dc400117 	ldw	r17,4(sp)
  80c198:	dc000017 	ldw	r16,0(sp)
  80c19c:	dec00304 	addi	sp,sp,12
  80c1a0:	f800283a 	ret
  80c1a4:	80c00017 	ldw	r3,0(r16)
  80c1a8:	183ff926 	beq	r3,zero,80c190 <__alt_data_end+0xff80c190>
  80c1ac:	88c00015 	stw	r3,0(r17)
  80c1b0:	003ff706 	br	80c190 <__alt_data_end+0xff80c190>

0080c1b4 <__sread>:
  80c1b4:	defffe04 	addi	sp,sp,-8
  80c1b8:	dc000015 	stw	r16,0(sp)
  80c1bc:	2821883a 	mov	r16,r5
  80c1c0:	2940038f 	ldh	r5,14(r5)
  80c1c4:	dfc00115 	stw	ra,4(sp)
  80c1c8:	080dfa80 	call	80dfa8 <_read_r>
  80c1cc:	10000716 	blt	r2,zero,80c1ec <__sread+0x38>
  80c1d0:	80c01417 	ldw	r3,80(r16)
  80c1d4:	1887883a 	add	r3,r3,r2
  80c1d8:	80c01415 	stw	r3,80(r16)
  80c1dc:	dfc00117 	ldw	ra,4(sp)
  80c1e0:	dc000017 	ldw	r16,0(sp)
  80c1e4:	dec00204 	addi	sp,sp,8
  80c1e8:	f800283a 	ret
  80c1ec:	80c0030b 	ldhu	r3,12(r16)
  80c1f0:	18fbffcc 	andi	r3,r3,61439
  80c1f4:	80c0030d 	sth	r3,12(r16)
  80c1f8:	dfc00117 	ldw	ra,4(sp)
  80c1fc:	dc000017 	ldw	r16,0(sp)
  80c200:	dec00204 	addi	sp,sp,8
  80c204:	f800283a 	ret

0080c208 <__seofread>:
  80c208:	0005883a 	mov	r2,zero
  80c20c:	f800283a 	ret

0080c210 <__swrite>:
  80c210:	2880030b 	ldhu	r2,12(r5)
  80c214:	defffb04 	addi	sp,sp,-20
  80c218:	dcc00315 	stw	r19,12(sp)
  80c21c:	dc800215 	stw	r18,8(sp)
  80c220:	dc400115 	stw	r17,4(sp)
  80c224:	dc000015 	stw	r16,0(sp)
  80c228:	dfc00415 	stw	ra,16(sp)
  80c22c:	10c0400c 	andi	r3,r2,256
  80c230:	2821883a 	mov	r16,r5
  80c234:	2023883a 	mov	r17,r4
  80c238:	3025883a 	mov	r18,r6
  80c23c:	3827883a 	mov	r19,r7
  80c240:	18000526 	beq	r3,zero,80c258 <__swrite+0x48>
  80c244:	2940038f 	ldh	r5,14(r5)
  80c248:	01c00084 	movi	r7,2
  80c24c:	000d883a 	mov	r6,zero
  80c250:	080df480 	call	80df48 <_lseek_r>
  80c254:	8080030b 	ldhu	r2,12(r16)
  80c258:	8140038f 	ldh	r5,14(r16)
  80c25c:	10bbffcc 	andi	r2,r2,61439
  80c260:	980f883a 	mov	r7,r19
  80c264:	900d883a 	mov	r6,r18
  80c268:	8809883a 	mov	r4,r17
  80c26c:	8080030d 	sth	r2,12(r16)
  80c270:	dfc00417 	ldw	ra,16(sp)
  80c274:	dcc00317 	ldw	r19,12(sp)
  80c278:	dc800217 	ldw	r18,8(sp)
  80c27c:	dc400117 	ldw	r17,4(sp)
  80c280:	dc000017 	ldw	r16,0(sp)
  80c284:	dec00504 	addi	sp,sp,20
  80c288:	080da141 	jmpi	80da14 <_write_r>

0080c28c <__sseek>:
  80c28c:	defffe04 	addi	sp,sp,-8
  80c290:	dc000015 	stw	r16,0(sp)
  80c294:	2821883a 	mov	r16,r5
  80c298:	2940038f 	ldh	r5,14(r5)
  80c29c:	dfc00115 	stw	ra,4(sp)
  80c2a0:	080df480 	call	80df48 <_lseek_r>
  80c2a4:	00ffffc4 	movi	r3,-1
  80c2a8:	10c00826 	beq	r2,r3,80c2cc <__sseek+0x40>
  80c2ac:	80c0030b 	ldhu	r3,12(r16)
  80c2b0:	80801415 	stw	r2,80(r16)
  80c2b4:	18c40014 	ori	r3,r3,4096
  80c2b8:	80c0030d 	sth	r3,12(r16)
  80c2bc:	dfc00117 	ldw	ra,4(sp)
  80c2c0:	dc000017 	ldw	r16,0(sp)
  80c2c4:	dec00204 	addi	sp,sp,8
  80c2c8:	f800283a 	ret
  80c2cc:	80c0030b 	ldhu	r3,12(r16)
  80c2d0:	18fbffcc 	andi	r3,r3,61439
  80c2d4:	80c0030d 	sth	r3,12(r16)
  80c2d8:	dfc00117 	ldw	ra,4(sp)
  80c2dc:	dc000017 	ldw	r16,0(sp)
  80c2e0:	dec00204 	addi	sp,sp,8
  80c2e4:	f800283a 	ret

0080c2e8 <__sclose>:
  80c2e8:	2940038f 	ldh	r5,14(r5)
  80c2ec:	080da741 	jmpi	80da74 <_close_r>

0080c2f0 <strcmp>:
  80c2f0:	2144b03a 	or	r2,r4,r5
  80c2f4:	108000cc 	andi	r2,r2,3
  80c2f8:	1000171e 	bne	r2,zero,80c358 <strcmp+0x68>
  80c2fc:	20800017 	ldw	r2,0(r4)
  80c300:	28c00017 	ldw	r3,0(r5)
  80c304:	10c0141e 	bne	r2,r3,80c358 <strcmp+0x68>
  80c308:	027fbff4 	movhi	r9,65279
  80c30c:	4a7fbfc4 	addi	r9,r9,-257
  80c310:	0086303a 	nor	r3,zero,r2
  80c314:	02202074 	movhi	r8,32897
  80c318:	1245883a 	add	r2,r2,r9
  80c31c:	42202004 	addi	r8,r8,-32640
  80c320:	10c4703a 	and	r2,r2,r3
  80c324:	1204703a 	and	r2,r2,r8
  80c328:	10000226 	beq	r2,zero,80c334 <strcmp+0x44>
  80c32c:	00002306 	br	80c3bc <strcmp+0xcc>
  80c330:	1000221e 	bne	r2,zero,80c3bc <strcmp+0xcc>
  80c334:	21000104 	addi	r4,r4,4
  80c338:	20c00017 	ldw	r3,0(r4)
  80c33c:	29400104 	addi	r5,r5,4
  80c340:	29800017 	ldw	r6,0(r5)
  80c344:	1a4f883a 	add	r7,r3,r9
  80c348:	00c4303a 	nor	r2,zero,r3
  80c34c:	3884703a 	and	r2,r7,r2
  80c350:	1204703a 	and	r2,r2,r8
  80c354:	19bff626 	beq	r3,r6,80c330 <__alt_data_end+0xff80c330>
  80c358:	20800003 	ldbu	r2,0(r4)
  80c35c:	10c03fcc 	andi	r3,r2,255
  80c360:	18c0201c 	xori	r3,r3,128
  80c364:	18ffe004 	addi	r3,r3,-128
  80c368:	18000c26 	beq	r3,zero,80c39c <strcmp+0xac>
  80c36c:	29800007 	ldb	r6,0(r5)
  80c370:	19800326 	beq	r3,r6,80c380 <strcmp+0x90>
  80c374:	00001306 	br	80c3c4 <strcmp+0xd4>
  80c378:	29800007 	ldb	r6,0(r5)
  80c37c:	11800b1e 	bne	r2,r6,80c3ac <strcmp+0xbc>
  80c380:	21000044 	addi	r4,r4,1
  80c384:	20c00003 	ldbu	r3,0(r4)
  80c388:	29400044 	addi	r5,r5,1
  80c38c:	18803fcc 	andi	r2,r3,255
  80c390:	1080201c 	xori	r2,r2,128
  80c394:	10bfe004 	addi	r2,r2,-128
  80c398:	103ff71e 	bne	r2,zero,80c378 <__alt_data_end+0xff80c378>
  80c39c:	0007883a 	mov	r3,zero
  80c3a0:	28800003 	ldbu	r2,0(r5)
  80c3a4:	1885c83a 	sub	r2,r3,r2
  80c3a8:	f800283a 	ret
  80c3ac:	28800003 	ldbu	r2,0(r5)
  80c3b0:	18c03fcc 	andi	r3,r3,255
  80c3b4:	1885c83a 	sub	r2,r3,r2
  80c3b8:	f800283a 	ret
  80c3bc:	0005883a 	mov	r2,zero
  80c3c0:	f800283a 	ret
  80c3c4:	10c03fcc 	andi	r3,r2,255
  80c3c8:	003ff506 	br	80c3a0 <__alt_data_end+0xff80c3a0>

0080c3cc <__sprint_r.part.0>:
  80c3cc:	28801917 	ldw	r2,100(r5)
  80c3d0:	defff604 	addi	sp,sp,-40
  80c3d4:	dd400515 	stw	r21,20(sp)
  80c3d8:	dfc00915 	stw	ra,36(sp)
  80c3dc:	df000815 	stw	fp,32(sp)
  80c3e0:	ddc00715 	stw	r23,28(sp)
  80c3e4:	dd800615 	stw	r22,24(sp)
  80c3e8:	dd000415 	stw	r20,16(sp)
  80c3ec:	dcc00315 	stw	r19,12(sp)
  80c3f0:	dc800215 	stw	r18,8(sp)
  80c3f4:	dc400115 	stw	r17,4(sp)
  80c3f8:	dc000015 	stw	r16,0(sp)
  80c3fc:	1088000c 	andi	r2,r2,8192
  80c400:	302b883a 	mov	r21,r6
  80c404:	10002e26 	beq	r2,zero,80c4c0 <__sprint_r.part.0+0xf4>
  80c408:	30800217 	ldw	r2,8(r6)
  80c40c:	35800017 	ldw	r22,0(r6)
  80c410:	10002926 	beq	r2,zero,80c4b8 <__sprint_r.part.0+0xec>
  80c414:	2827883a 	mov	r19,r5
  80c418:	2029883a 	mov	r20,r4
  80c41c:	b5c00104 	addi	r23,r22,4
  80c420:	04bfffc4 	movi	r18,-1
  80c424:	bc400017 	ldw	r17,0(r23)
  80c428:	b4000017 	ldw	r16,0(r22)
  80c42c:	0039883a 	mov	fp,zero
  80c430:	8822d0ba 	srli	r17,r17,2
  80c434:	8800031e 	bne	r17,zero,80c444 <__sprint_r.part.0+0x78>
  80c438:	00001806 	br	80c49c <__sprint_r.part.0+0xd0>
  80c43c:	84000104 	addi	r16,r16,4
  80c440:	8f001526 	beq	r17,fp,80c498 <__sprint_r.part.0+0xcc>
  80c444:	81400017 	ldw	r5,0(r16)
  80c448:	980d883a 	mov	r6,r19
  80c44c:	a009883a 	mov	r4,r20
  80c450:	080ddf40 	call	80ddf4 <_fputwc_r>
  80c454:	e7000044 	addi	fp,fp,1
  80c458:	14bff81e 	bne	r2,r18,80c43c <__alt_data_end+0xff80c43c>
  80c45c:	9005883a 	mov	r2,r18
  80c460:	a8000215 	stw	zero,8(r21)
  80c464:	a8000115 	stw	zero,4(r21)
  80c468:	dfc00917 	ldw	ra,36(sp)
  80c46c:	df000817 	ldw	fp,32(sp)
  80c470:	ddc00717 	ldw	r23,28(sp)
  80c474:	dd800617 	ldw	r22,24(sp)
  80c478:	dd400517 	ldw	r21,20(sp)
  80c47c:	dd000417 	ldw	r20,16(sp)
  80c480:	dcc00317 	ldw	r19,12(sp)
  80c484:	dc800217 	ldw	r18,8(sp)
  80c488:	dc400117 	ldw	r17,4(sp)
  80c48c:	dc000017 	ldw	r16,0(sp)
  80c490:	dec00a04 	addi	sp,sp,40
  80c494:	f800283a 	ret
  80c498:	a8800217 	ldw	r2,8(r21)
  80c49c:	8c63883a 	add	r17,r17,r17
  80c4a0:	8c63883a 	add	r17,r17,r17
  80c4a4:	1445c83a 	sub	r2,r2,r17
  80c4a8:	a8800215 	stw	r2,8(r21)
  80c4ac:	b5800204 	addi	r22,r22,8
  80c4b0:	bdc00204 	addi	r23,r23,8
  80c4b4:	103fdb1e 	bne	r2,zero,80c424 <__alt_data_end+0xff80c424>
  80c4b8:	0005883a 	mov	r2,zero
  80c4bc:	003fe806 	br	80c460 <__alt_data_end+0xff80c460>
  80c4c0:	08095f40 	call	8095f4 <__sfvwrite_r>
  80c4c4:	003fe606 	br	80c460 <__alt_data_end+0xff80c460>

0080c4c8 <__sprint_r>:
  80c4c8:	30c00217 	ldw	r3,8(r6)
  80c4cc:	18000126 	beq	r3,zero,80c4d4 <__sprint_r+0xc>
  80c4d0:	080c3cc1 	jmpi	80c3cc <__sprint_r.part.0>
  80c4d4:	30000115 	stw	zero,4(r6)
  80c4d8:	0005883a 	mov	r2,zero
  80c4dc:	f800283a 	ret

0080c4e0 <___vfiprintf_internal_r>:
  80c4e0:	deffc904 	addi	sp,sp,-220
  80c4e4:	df003515 	stw	fp,212(sp)
  80c4e8:	dd003115 	stw	r20,196(sp)
  80c4ec:	dfc03615 	stw	ra,216(sp)
  80c4f0:	ddc03415 	stw	r23,208(sp)
  80c4f4:	dd803315 	stw	r22,204(sp)
  80c4f8:	dd403215 	stw	r21,200(sp)
  80c4fc:	dcc03015 	stw	r19,192(sp)
  80c500:	dc802f15 	stw	r18,188(sp)
  80c504:	dc402e15 	stw	r17,184(sp)
  80c508:	dc002d15 	stw	r16,180(sp)
  80c50c:	d9002015 	stw	r4,128(sp)
  80c510:	d9c02215 	stw	r7,136(sp)
  80c514:	2829883a 	mov	r20,r5
  80c518:	3039883a 	mov	fp,r6
  80c51c:	20000226 	beq	r4,zero,80c528 <___vfiprintf_internal_r+0x48>
  80c520:	20800e17 	ldw	r2,56(r4)
  80c524:	1000cf26 	beq	r2,zero,80c864 <___vfiprintf_internal_r+0x384>
  80c528:	a080030b 	ldhu	r2,12(r20)
  80c52c:	10c8000c 	andi	r3,r2,8192
  80c530:	1800061e 	bne	r3,zero,80c54c <___vfiprintf_internal_r+0x6c>
  80c534:	a1001917 	ldw	r4,100(r20)
  80c538:	00f7ffc4 	movi	r3,-8193
  80c53c:	10880014 	ori	r2,r2,8192
  80c540:	20c6703a 	and	r3,r4,r3
  80c544:	a080030d 	sth	r2,12(r20)
  80c548:	a0c01915 	stw	r3,100(r20)
  80c54c:	10c0020c 	andi	r3,r2,8
  80c550:	1800a926 	beq	r3,zero,80c7f8 <___vfiprintf_internal_r+0x318>
  80c554:	a0c00417 	ldw	r3,16(r20)
  80c558:	1800a726 	beq	r3,zero,80c7f8 <___vfiprintf_internal_r+0x318>
  80c55c:	1080068c 	andi	r2,r2,26
  80c560:	00c00284 	movi	r3,10
  80c564:	10c0ac26 	beq	r2,r3,80c818 <___vfiprintf_internal_r+0x338>
  80c568:	da801a04 	addi	r10,sp,104
  80c56c:	da801e15 	stw	r10,120(sp)
  80c570:	d8801e17 	ldw	r2,120(sp)
  80c574:	da8019c4 	addi	r10,sp,103
  80c578:	05802074 	movhi	r22,129
  80c57c:	05c02074 	movhi	r23,129
  80c580:	da801f15 	stw	r10,124(sp)
  80c584:	1295c83a 	sub	r10,r2,r10
  80c588:	b5897104 	addi	r22,r22,9668
  80c58c:	bdc96d04 	addi	r23,r23,9652
  80c590:	dec01a15 	stw	sp,104(sp)
  80c594:	d8001c15 	stw	zero,112(sp)
  80c598:	d8001b15 	stw	zero,108(sp)
  80c59c:	d8002615 	stw	zero,152(sp)
  80c5a0:	d8002315 	stw	zero,140(sp)
  80c5a4:	da802715 	stw	r10,156(sp)
  80c5a8:	d811883a 	mov	r8,sp
  80c5ac:	dd002115 	stw	r20,132(sp)
  80c5b0:	e021883a 	mov	r16,fp
  80c5b4:	80800007 	ldb	r2,0(r16)
  80c5b8:	1003ea26 	beq	r2,zero,80d564 <___vfiprintf_internal_r+0x1084>
  80c5bc:	00c00944 	movi	r3,37
  80c5c0:	8025883a 	mov	r18,r16
  80c5c4:	10c0021e 	bne	r2,r3,80c5d0 <___vfiprintf_internal_r+0xf0>
  80c5c8:	00001606 	br	80c624 <___vfiprintf_internal_r+0x144>
  80c5cc:	10c00326 	beq	r2,r3,80c5dc <___vfiprintf_internal_r+0xfc>
  80c5d0:	94800044 	addi	r18,r18,1
  80c5d4:	90800007 	ldb	r2,0(r18)
  80c5d8:	103ffc1e 	bne	r2,zero,80c5cc <__alt_data_end+0xff80c5cc>
  80c5dc:	9423c83a 	sub	r17,r18,r16
  80c5e0:	88001026 	beq	r17,zero,80c624 <___vfiprintf_internal_r+0x144>
  80c5e4:	d8c01c17 	ldw	r3,112(sp)
  80c5e8:	d8801b17 	ldw	r2,108(sp)
  80c5ec:	44000015 	stw	r16,0(r8)
  80c5f0:	88c7883a 	add	r3,r17,r3
  80c5f4:	10800044 	addi	r2,r2,1
  80c5f8:	44400115 	stw	r17,4(r8)
  80c5fc:	d8c01c15 	stw	r3,112(sp)
  80c600:	d8801b15 	stw	r2,108(sp)
  80c604:	010001c4 	movi	r4,7
  80c608:	2080760e 	bge	r4,r2,80c7e4 <___vfiprintf_internal_r+0x304>
  80c60c:	1803821e 	bne	r3,zero,80d418 <___vfiprintf_internal_r+0xf38>
  80c610:	da802317 	ldw	r10,140(sp)
  80c614:	d8001b15 	stw	zero,108(sp)
  80c618:	d811883a 	mov	r8,sp
  80c61c:	5455883a 	add	r10,r10,r17
  80c620:	da802315 	stw	r10,140(sp)
  80c624:	90800007 	ldb	r2,0(r18)
  80c628:	10044626 	beq	r2,zero,80d744 <___vfiprintf_internal_r+0x1264>
  80c62c:	90c00047 	ldb	r3,1(r18)
  80c630:	94000044 	addi	r16,r18,1
  80c634:	d8001d85 	stb	zero,118(sp)
  80c638:	0009883a 	mov	r4,zero
  80c63c:	000f883a 	mov	r7,zero
  80c640:	027fffc4 	movi	r9,-1
  80c644:	0023883a 	mov	r17,zero
  80c648:	0029883a 	mov	r20,zero
  80c64c:	01401604 	movi	r5,88
  80c650:	01800244 	movi	r6,9
  80c654:	03400a84 	movi	r13,42
  80c658:	03001b04 	movi	r12,108
  80c65c:	84000044 	addi	r16,r16,1
  80c660:	18bff804 	addi	r2,r3,-32
  80c664:	28827336 	bltu	r5,r2,80d034 <___vfiprintf_internal_r+0xb54>
  80c668:	100490ba 	slli	r2,r2,2
  80c66c:	02802074 	movhi	r10,129
  80c670:	52b1a004 	addi	r10,r10,-14720
  80c674:	1285883a 	add	r2,r2,r10
  80c678:	10800017 	ldw	r2,0(r2)
  80c67c:	1000683a 	jmp	r2
  80c680:	0080cd68 	cmpgeui	r2,zero,821
  80c684:	0080d034 	movhi	r2,832
  80c688:	0080d034 	movhi	r2,832
  80c68c:	0080cd88 	cmpgei	r2,zero,822
  80c690:	0080d034 	movhi	r2,832
  80c694:	0080d034 	movhi	r2,832
  80c698:	0080d034 	movhi	r2,832
  80c69c:	0080d034 	movhi	r2,832
  80c6a0:	0080d034 	movhi	r2,832
  80c6a4:	0080d034 	movhi	r2,832
  80c6a8:	0080cf70 	cmpltui	r2,zero,829
  80c6ac:	0080cf8c 	andi	r2,zero,830
  80c6b0:	0080d034 	movhi	r2,832
  80c6b4:	0080c874 	movhi	r2,801
  80c6b8:	0080cf9c 	xori	r2,zero,830
  80c6bc:	0080d034 	movhi	r2,832
  80c6c0:	0080cd94 	movui	r2,822
  80c6c4:	0080cda0 	cmpeqi	r2,zero,822
  80c6c8:	0080cda0 	cmpeqi	r2,zero,822
  80c6cc:	0080cda0 	cmpeqi	r2,zero,822
  80c6d0:	0080cda0 	cmpeqi	r2,zero,822
  80c6d4:	0080cda0 	cmpeqi	r2,zero,822
  80c6d8:	0080cda0 	cmpeqi	r2,zero,822
  80c6dc:	0080cda0 	cmpeqi	r2,zero,822
  80c6e0:	0080cda0 	cmpeqi	r2,zero,822
  80c6e4:	0080cda0 	cmpeqi	r2,zero,822
  80c6e8:	0080d034 	movhi	r2,832
  80c6ec:	0080d034 	movhi	r2,832
  80c6f0:	0080d034 	movhi	r2,832
  80c6f4:	0080d034 	movhi	r2,832
  80c6f8:	0080d034 	movhi	r2,832
  80c6fc:	0080d034 	movhi	r2,832
  80c700:	0080d034 	movhi	r2,832
  80c704:	0080d034 	movhi	r2,832
  80c708:	0080d034 	movhi	r2,832
  80c70c:	0080d034 	movhi	r2,832
  80c710:	0080cdcc 	andi	r2,zero,823
  80c714:	0080d034 	movhi	r2,832
  80c718:	0080d034 	movhi	r2,832
  80c71c:	0080d034 	movhi	r2,832
  80c720:	0080d034 	movhi	r2,832
  80c724:	0080d034 	movhi	r2,832
  80c728:	0080d034 	movhi	r2,832
  80c72c:	0080d034 	movhi	r2,832
  80c730:	0080d034 	movhi	r2,832
  80c734:	0080d034 	movhi	r2,832
  80c738:	0080d034 	movhi	r2,832
  80c73c:	0080ce04 	movi	r2,824
  80c740:	0080d034 	movhi	r2,832
  80c744:	0080d034 	movhi	r2,832
  80c748:	0080d034 	movhi	r2,832
  80c74c:	0080d034 	movhi	r2,832
  80c750:	0080d034 	movhi	r2,832
  80c754:	0080ce5c 	xori	r2,zero,825
  80c758:	0080d034 	movhi	r2,832
  80c75c:	0080d034 	movhi	r2,832
  80c760:	0080cecc 	andi	r2,zero,827
  80c764:	0080d034 	movhi	r2,832
  80c768:	0080d034 	movhi	r2,832
  80c76c:	0080d034 	movhi	r2,832
  80c770:	0080d034 	movhi	r2,832
  80c774:	0080d034 	movhi	r2,832
  80c778:	0080d034 	movhi	r2,832
  80c77c:	0080d034 	movhi	r2,832
  80c780:	0080d034 	movhi	r2,832
  80c784:	0080d034 	movhi	r2,832
  80c788:	0080d034 	movhi	r2,832
  80c78c:	0080cc78 	rdprs	r2,zero,817
  80c790:	0080cca4 	muli	r2,zero,818
  80c794:	0080d034 	movhi	r2,832
  80c798:	0080d034 	movhi	r2,832
  80c79c:	0080d034 	movhi	r2,832
  80c7a0:	0080cfdc 	xori	r2,zero,831
  80c7a4:	0080cca4 	muli	r2,zero,818
  80c7a8:	0080d034 	movhi	r2,832
  80c7ac:	0080d034 	movhi	r2,832
  80c7b0:	0080cb38 	rdprs	r2,zero,812
  80c7b4:	0080d034 	movhi	r2,832
  80c7b8:	0080cb48 	cmpgei	r2,zero,813
  80c7bc:	0080cb84 	movi	r2,814
  80c7c0:	0080c880 	call	80c88 <__alt_mem_sdram-0x77f378>
  80c7c4:	0080cb2c 	andhi	r2,zero,812
  80c7c8:	0080d034 	movhi	r2,832
  80c7cc:	0080cf08 	cmpgei	r2,zero,828
  80c7d0:	0080d034 	movhi	r2,832
  80c7d4:	0080cf60 	cmpeqi	r2,zero,829
  80c7d8:	0080d034 	movhi	r2,832
  80c7dc:	0080d034 	movhi	r2,832
  80c7e0:	0080cc24 	muli	r2,zero,816
  80c7e4:	42000204 	addi	r8,r8,8
  80c7e8:	da802317 	ldw	r10,140(sp)
  80c7ec:	5455883a 	add	r10,r10,r17
  80c7f0:	da802315 	stw	r10,140(sp)
  80c7f4:	003f8b06 	br	80c624 <__alt_data_end+0xff80c624>
  80c7f8:	d9002017 	ldw	r4,128(sp)
  80c7fc:	a00b883a 	mov	r5,r20
  80c800:	080719c0 	call	80719c <__swsetup_r>
  80c804:	1003b11e 	bne	r2,zero,80d6cc <___vfiprintf_internal_r+0x11ec>
  80c808:	a080030b 	ldhu	r2,12(r20)
  80c80c:	00c00284 	movi	r3,10
  80c810:	1080068c 	andi	r2,r2,26
  80c814:	10ff541e 	bne	r2,r3,80c568 <__alt_data_end+0xff80c568>
  80c818:	a080038f 	ldh	r2,14(r20)
  80c81c:	103f5216 	blt	r2,zero,80c568 <__alt_data_end+0xff80c568>
  80c820:	d9c02217 	ldw	r7,136(sp)
  80c824:	d9002017 	ldw	r4,128(sp)
  80c828:	e00d883a 	mov	r6,fp
  80c82c:	a00b883a 	mov	r5,r20
  80c830:	080d9580 	call	80d958 <__sbprintf>
  80c834:	dfc03617 	ldw	ra,216(sp)
  80c838:	df003517 	ldw	fp,212(sp)
  80c83c:	ddc03417 	ldw	r23,208(sp)
  80c840:	dd803317 	ldw	r22,204(sp)
  80c844:	dd403217 	ldw	r21,200(sp)
  80c848:	dd003117 	ldw	r20,196(sp)
  80c84c:	dcc03017 	ldw	r19,192(sp)
  80c850:	dc802f17 	ldw	r18,188(sp)
  80c854:	dc402e17 	ldw	r17,184(sp)
  80c858:	dc002d17 	ldw	r16,180(sp)
  80c85c:	dec03704 	addi	sp,sp,220
  80c860:	f800283a 	ret
  80c864:	08091700 	call	809170 <__sinit>
  80c868:	003f2f06 	br	80c528 <__alt_data_end+0xff80c528>
  80c86c:	0463c83a 	sub	r17,zero,r17
  80c870:	d8802215 	stw	r2,136(sp)
  80c874:	a5000114 	ori	r20,r20,4
  80c878:	80c00007 	ldb	r3,0(r16)
  80c87c:	003f7706 	br	80c65c <__alt_data_end+0xff80c65c>
  80c880:	00800c04 	movi	r2,48
  80c884:	da802217 	ldw	r10,136(sp)
  80c888:	d8801d05 	stb	r2,116(sp)
  80c88c:	00801e04 	movi	r2,120
  80c890:	d8801d45 	stb	r2,117(sp)
  80c894:	d8001d85 	stb	zero,118(sp)
  80c898:	50c00104 	addi	r3,r10,4
  80c89c:	54800017 	ldw	r18,0(r10)
  80c8a0:	0027883a 	mov	r19,zero
  80c8a4:	a0800094 	ori	r2,r20,2
  80c8a8:	48030b16 	blt	r9,zero,80d4d8 <___vfiprintf_internal_r+0xff8>
  80c8ac:	00bfdfc4 	movi	r2,-129
  80c8b0:	a096703a 	and	r11,r20,r2
  80c8b4:	d8c02215 	stw	r3,136(sp)
  80c8b8:	5d000094 	ori	r20,r11,2
  80c8bc:	90032b1e 	bne	r18,zero,80d56c <___vfiprintf_internal_r+0x108c>
  80c8c0:	00802074 	movhi	r2,129
  80c8c4:	10890c04 	addi	r2,r2,9264
  80c8c8:	d8802615 	stw	r2,152(sp)
  80c8cc:	0039883a 	mov	fp,zero
  80c8d0:	48017b1e 	bne	r9,zero,80cec0 <___vfiprintf_internal_r+0x9e0>
  80c8d4:	0013883a 	mov	r9,zero
  80c8d8:	0027883a 	mov	r19,zero
  80c8dc:	dd401a04 	addi	r21,sp,104
  80c8e0:	4825883a 	mov	r18,r9
  80c8e4:	4cc0010e 	bge	r9,r19,80c8ec <___vfiprintf_internal_r+0x40c>
  80c8e8:	9825883a 	mov	r18,r19
  80c8ec:	e7003fcc 	andi	fp,fp,255
  80c8f0:	e700201c 	xori	fp,fp,128
  80c8f4:	e73fe004 	addi	fp,fp,-128
  80c8f8:	e0000126 	beq	fp,zero,80c900 <___vfiprintf_internal_r+0x420>
  80c8fc:	94800044 	addi	r18,r18,1
  80c900:	a380008c 	andi	r14,r20,2
  80c904:	70000126 	beq	r14,zero,80c90c <___vfiprintf_internal_r+0x42c>
  80c908:	94800084 	addi	r18,r18,2
  80c90c:	a700210c 	andi	fp,r20,132
  80c910:	e001df1e 	bne	fp,zero,80d090 <___vfiprintf_internal_r+0xbb0>
  80c914:	8c87c83a 	sub	r3,r17,r18
  80c918:	00c1dd0e 	bge	zero,r3,80d090 <___vfiprintf_internal_r+0xbb0>
  80c91c:	01c00404 	movi	r7,16
  80c920:	d8801c17 	ldw	r2,112(sp)
  80c924:	38c3ad0e 	bge	r7,r3,80d7dc <___vfiprintf_internal_r+0x12fc>
  80c928:	02802074 	movhi	r10,129
  80c92c:	52897104 	addi	r10,r10,9668
  80c930:	dc002915 	stw	r16,164(sp)
  80c934:	d9801b17 	ldw	r6,108(sp)
  80c938:	da802415 	stw	r10,144(sp)
  80c93c:	03c001c4 	movi	r15,7
  80c940:	da402515 	stw	r9,148(sp)
  80c944:	db802815 	stw	r14,160(sp)
  80c948:	1821883a 	mov	r16,r3
  80c94c:	00000506 	br	80c964 <___vfiprintf_internal_r+0x484>
  80c950:	31400084 	addi	r5,r6,2
  80c954:	42000204 	addi	r8,r8,8
  80c958:	200d883a 	mov	r6,r4
  80c95c:	843ffc04 	addi	r16,r16,-16
  80c960:	3c000d0e 	bge	r7,r16,80c998 <___vfiprintf_internal_r+0x4b8>
  80c964:	10800404 	addi	r2,r2,16
  80c968:	31000044 	addi	r4,r6,1
  80c96c:	45800015 	stw	r22,0(r8)
  80c970:	41c00115 	stw	r7,4(r8)
  80c974:	d8801c15 	stw	r2,112(sp)
  80c978:	d9001b15 	stw	r4,108(sp)
  80c97c:	793ff40e 	bge	r15,r4,80c950 <__alt_data_end+0xff80c950>
  80c980:	1001b51e 	bne	r2,zero,80d058 <___vfiprintf_internal_r+0xb78>
  80c984:	843ffc04 	addi	r16,r16,-16
  80c988:	000d883a 	mov	r6,zero
  80c98c:	01400044 	movi	r5,1
  80c990:	d811883a 	mov	r8,sp
  80c994:	3c3ff316 	blt	r7,r16,80c964 <__alt_data_end+0xff80c964>
  80c998:	8007883a 	mov	r3,r16
  80c99c:	da402517 	ldw	r9,148(sp)
  80c9a0:	db802817 	ldw	r14,160(sp)
  80c9a4:	dc002917 	ldw	r16,164(sp)
  80c9a8:	da802417 	ldw	r10,144(sp)
  80c9ac:	1885883a 	add	r2,r3,r2
  80c9b0:	40c00115 	stw	r3,4(r8)
  80c9b4:	42800015 	stw	r10,0(r8)
  80c9b8:	d8801c15 	stw	r2,112(sp)
  80c9bc:	d9401b15 	stw	r5,108(sp)
  80c9c0:	00c001c4 	movi	r3,7
  80c9c4:	19426016 	blt	r3,r5,80d348 <___vfiprintf_internal_r+0xe68>
  80c9c8:	d8c01d87 	ldb	r3,118(sp)
  80c9cc:	42000204 	addi	r8,r8,8
  80c9d0:	29000044 	addi	r4,r5,1
  80c9d4:	1801b31e 	bne	r3,zero,80d0a4 <___vfiprintf_internal_r+0xbc4>
  80c9d8:	7001c026 	beq	r14,zero,80d0dc <___vfiprintf_internal_r+0xbfc>
  80c9dc:	d8c01d04 	addi	r3,sp,116
  80c9e0:	10800084 	addi	r2,r2,2
  80c9e4:	40c00015 	stw	r3,0(r8)
  80c9e8:	00c00084 	movi	r3,2
  80c9ec:	40c00115 	stw	r3,4(r8)
  80c9f0:	d8801c15 	stw	r2,112(sp)
  80c9f4:	d9001b15 	stw	r4,108(sp)
  80c9f8:	00c001c4 	movi	r3,7
  80c9fc:	1902650e 	bge	r3,r4,80d394 <___vfiprintf_internal_r+0xeb4>
  80ca00:	10029a1e 	bne	r2,zero,80d46c <___vfiprintf_internal_r+0xf8c>
  80ca04:	00c02004 	movi	r3,128
  80ca08:	01000044 	movi	r4,1
  80ca0c:	000b883a 	mov	r5,zero
  80ca10:	d811883a 	mov	r8,sp
  80ca14:	e0c1b31e 	bne	fp,r3,80d0e4 <___vfiprintf_internal_r+0xc04>
  80ca18:	8cb9c83a 	sub	fp,r17,r18
  80ca1c:	0701b10e 	bge	zero,fp,80d0e4 <___vfiprintf_internal_r+0xc04>
  80ca20:	01c00404 	movi	r7,16
  80ca24:	3f03890e 	bge	r7,fp,80d84c <___vfiprintf_internal_r+0x136c>
  80ca28:	00c02074 	movhi	r3,129
  80ca2c:	18c96d04 	addi	r3,r3,9652
  80ca30:	d8c02415 	stw	r3,144(sp)
  80ca34:	8007883a 	mov	r3,r16
  80ca38:	034001c4 	movi	r13,7
  80ca3c:	e021883a 	mov	r16,fp
  80ca40:	da402515 	stw	r9,148(sp)
  80ca44:	1839883a 	mov	fp,r3
  80ca48:	00000506 	br	80ca60 <___vfiprintf_internal_r+0x580>
  80ca4c:	29800084 	addi	r6,r5,2
  80ca50:	42000204 	addi	r8,r8,8
  80ca54:	180b883a 	mov	r5,r3
  80ca58:	843ffc04 	addi	r16,r16,-16
  80ca5c:	3c000d0e 	bge	r7,r16,80ca94 <___vfiprintf_internal_r+0x5b4>
  80ca60:	10800404 	addi	r2,r2,16
  80ca64:	28c00044 	addi	r3,r5,1
  80ca68:	45c00015 	stw	r23,0(r8)
  80ca6c:	41c00115 	stw	r7,4(r8)
  80ca70:	d8801c15 	stw	r2,112(sp)
  80ca74:	d8c01b15 	stw	r3,108(sp)
  80ca78:	68fff40e 	bge	r13,r3,80ca4c <__alt_data_end+0xff80ca4c>
  80ca7c:	1002241e 	bne	r2,zero,80d310 <___vfiprintf_internal_r+0xe30>
  80ca80:	843ffc04 	addi	r16,r16,-16
  80ca84:	01800044 	movi	r6,1
  80ca88:	000b883a 	mov	r5,zero
  80ca8c:	d811883a 	mov	r8,sp
  80ca90:	3c3ff316 	blt	r7,r16,80ca60 <__alt_data_end+0xff80ca60>
  80ca94:	da402517 	ldw	r9,148(sp)
  80ca98:	e007883a 	mov	r3,fp
  80ca9c:	8039883a 	mov	fp,r16
  80caa0:	1821883a 	mov	r16,r3
  80caa4:	d8c02417 	ldw	r3,144(sp)
  80caa8:	1705883a 	add	r2,r2,fp
  80caac:	47000115 	stw	fp,4(r8)
  80cab0:	40c00015 	stw	r3,0(r8)
  80cab4:	d8801c15 	stw	r2,112(sp)
  80cab8:	d9801b15 	stw	r6,108(sp)
  80cabc:	00c001c4 	movi	r3,7
  80cac0:	19827616 	blt	r3,r6,80d49c <___vfiprintf_internal_r+0xfbc>
  80cac4:	4cf9c83a 	sub	fp,r9,r19
  80cac8:	42000204 	addi	r8,r8,8
  80cacc:	31000044 	addi	r4,r6,1
  80cad0:	300b883a 	mov	r5,r6
  80cad4:	07018516 	blt	zero,fp,80d0ec <___vfiprintf_internal_r+0xc0c>
  80cad8:	9885883a 	add	r2,r19,r2
  80cadc:	45400015 	stw	r21,0(r8)
  80cae0:	44c00115 	stw	r19,4(r8)
  80cae4:	d8801c15 	stw	r2,112(sp)
  80cae8:	d9001b15 	stw	r4,108(sp)
  80caec:	00c001c4 	movi	r3,7
  80caf0:	1901dd0e 	bge	r3,r4,80d268 <___vfiprintf_internal_r+0xd88>
  80caf4:	1002401e 	bne	r2,zero,80d3f8 <___vfiprintf_internal_r+0xf18>
  80caf8:	d8001b15 	stw	zero,108(sp)
  80cafc:	a2c0010c 	andi	r11,r20,4
  80cb00:	58000226 	beq	r11,zero,80cb0c <___vfiprintf_internal_r+0x62c>
  80cb04:	8ca7c83a 	sub	r19,r17,r18
  80cb08:	04c2f216 	blt	zero,r19,80d6d4 <___vfiprintf_internal_r+0x11f4>
  80cb0c:	8c80010e 	bge	r17,r18,80cb14 <___vfiprintf_internal_r+0x634>
  80cb10:	9023883a 	mov	r17,r18
  80cb14:	da802317 	ldw	r10,140(sp)
  80cb18:	5455883a 	add	r10,r10,r17
  80cb1c:	da802315 	stw	r10,140(sp)
  80cb20:	d8001b15 	stw	zero,108(sp)
  80cb24:	d811883a 	mov	r8,sp
  80cb28:	003ea206 	br	80c5b4 <__alt_data_end+0xff80c5b4>
  80cb2c:	a5000814 	ori	r20,r20,32
  80cb30:	80c00007 	ldb	r3,0(r16)
  80cb34:	003ec906 	br	80c65c <__alt_data_end+0xff80c65c>
  80cb38:	80c00007 	ldb	r3,0(r16)
  80cb3c:	1b030926 	beq	r3,r12,80d764 <___vfiprintf_internal_r+0x1284>
  80cb40:	a5000414 	ori	r20,r20,16
  80cb44:	003ec506 	br	80c65c <__alt_data_end+0xff80c65c>
  80cb48:	21003fcc 	andi	r4,r4,255
  80cb4c:	20035e1e 	bne	r4,zero,80d8c8 <___vfiprintf_internal_r+0x13e8>
  80cb50:	a080080c 	andi	r2,r20,32
  80cb54:	1002a526 	beq	r2,zero,80d5ec <___vfiprintf_internal_r+0x110c>
  80cb58:	da802217 	ldw	r10,136(sp)
  80cb5c:	50800017 	ldw	r2,0(r10)
  80cb60:	da802317 	ldw	r10,140(sp)
  80cb64:	5007d7fa 	srai	r3,r10,31
  80cb68:	da802217 	ldw	r10,136(sp)
  80cb6c:	10c00115 	stw	r3,4(r2)
  80cb70:	52800104 	addi	r10,r10,4
  80cb74:	da802215 	stw	r10,136(sp)
  80cb78:	da802317 	ldw	r10,140(sp)
  80cb7c:	12800015 	stw	r10,0(r2)
  80cb80:	003e8c06 	br	80c5b4 <__alt_data_end+0xff80c5b4>
  80cb84:	21003fcc 	andi	r4,r4,255
  80cb88:	2003511e 	bne	r4,zero,80d8d0 <___vfiprintf_internal_r+0x13f0>
  80cb8c:	a080080c 	andi	r2,r20,32
  80cb90:	1000a126 	beq	r2,zero,80ce18 <___vfiprintf_internal_r+0x938>
  80cb94:	da802217 	ldw	r10,136(sp)
  80cb98:	d8001d85 	stb	zero,118(sp)
  80cb9c:	50800204 	addi	r2,r10,8
  80cba0:	54800017 	ldw	r18,0(r10)
  80cba4:	54c00117 	ldw	r19,4(r10)
  80cba8:	4802b416 	blt	r9,zero,80d67c <___vfiprintf_internal_r+0x119c>
  80cbac:	013fdfc4 	movi	r4,-129
  80cbb0:	94c6b03a 	or	r3,r18,r19
  80cbb4:	d8802215 	stw	r2,136(sp)
  80cbb8:	a128703a 	and	r20,r20,r4
  80cbbc:	1800a226 	beq	r3,zero,80ce48 <___vfiprintf_internal_r+0x968>
  80cbc0:	0039883a 	mov	fp,zero
  80cbc4:	dd401a04 	addi	r21,sp,104
  80cbc8:	9006d0fa 	srli	r3,r18,3
  80cbcc:	9808977a 	slli	r4,r19,29
  80cbd0:	9826d0fa 	srli	r19,r19,3
  80cbd4:	948001cc 	andi	r18,r18,7
  80cbd8:	90800c04 	addi	r2,r18,48
  80cbdc:	ad7fffc4 	addi	r21,r21,-1
  80cbe0:	20e4b03a 	or	r18,r4,r3
  80cbe4:	a8800005 	stb	r2,0(r21)
  80cbe8:	94c6b03a 	or	r3,r18,r19
  80cbec:	183ff61e 	bne	r3,zero,80cbc8 <__alt_data_end+0xff80cbc8>
  80cbf0:	a0c0004c 	andi	r3,r20,1
  80cbf4:	18005926 	beq	r3,zero,80cd5c <___vfiprintf_internal_r+0x87c>
  80cbf8:	10803fcc 	andi	r2,r2,255
  80cbfc:	1080201c 	xori	r2,r2,128
  80cc00:	10bfe004 	addi	r2,r2,-128
  80cc04:	00c00c04 	movi	r3,48
  80cc08:	10c05426 	beq	r2,r3,80cd5c <___vfiprintf_internal_r+0x87c>
  80cc0c:	da801e17 	ldw	r10,120(sp)
  80cc10:	a8bfffc4 	addi	r2,r21,-1
  80cc14:	a8ffffc5 	stb	r3,-1(r21)
  80cc18:	50a7c83a 	sub	r19,r10,r2
  80cc1c:	102b883a 	mov	r21,r2
  80cc20:	003f2f06 	br	80c8e0 <__alt_data_end+0xff80c8e0>
  80cc24:	21003fcc 	andi	r4,r4,255
  80cc28:	2003421e 	bne	r4,zero,80d934 <___vfiprintf_internal_r+0x1454>
  80cc2c:	00802074 	movhi	r2,129
  80cc30:	10890c04 	addi	r2,r2,9264
  80cc34:	d8802615 	stw	r2,152(sp)
  80cc38:	a080080c 	andi	r2,r20,32
  80cc3c:	1000aa26 	beq	r2,zero,80cee8 <___vfiprintf_internal_r+0xa08>
  80cc40:	da802217 	ldw	r10,136(sp)
  80cc44:	54800017 	ldw	r18,0(r10)
  80cc48:	54c00117 	ldw	r19,4(r10)
  80cc4c:	52800204 	addi	r10,r10,8
  80cc50:	da802215 	stw	r10,136(sp)
  80cc54:	a080004c 	andi	r2,r20,1
  80cc58:	1001d226 	beq	r2,zero,80d3a4 <___vfiprintf_internal_r+0xec4>
  80cc5c:	94c4b03a 	or	r2,r18,r19
  80cc60:	1002351e 	bne	r2,zero,80d538 <___vfiprintf_internal_r+0x1058>
  80cc64:	d8001d85 	stb	zero,118(sp)
  80cc68:	48022216 	blt	r9,zero,80d4f4 <___vfiprintf_internal_r+0x1014>
  80cc6c:	00bfdfc4 	movi	r2,-129
  80cc70:	a0a8703a 	and	r20,r20,r2
  80cc74:	003f1506 	br	80c8cc <__alt_data_end+0xff80c8cc>
  80cc78:	da802217 	ldw	r10,136(sp)
  80cc7c:	04800044 	movi	r18,1
  80cc80:	d8001d85 	stb	zero,118(sp)
  80cc84:	50800017 	ldw	r2,0(r10)
  80cc88:	52800104 	addi	r10,r10,4
  80cc8c:	da802215 	stw	r10,136(sp)
  80cc90:	d8801005 	stb	r2,64(sp)
  80cc94:	9027883a 	mov	r19,r18
  80cc98:	dd401004 	addi	r21,sp,64
  80cc9c:	0013883a 	mov	r9,zero
  80cca0:	003f1706 	br	80c900 <__alt_data_end+0xff80c900>
  80cca4:	21003fcc 	andi	r4,r4,255
  80cca8:	2003201e 	bne	r4,zero,80d92c <___vfiprintf_internal_r+0x144c>
  80ccac:	a080080c 	andi	r2,r20,32
  80ccb0:	10004b26 	beq	r2,zero,80cde0 <___vfiprintf_internal_r+0x900>
  80ccb4:	da802217 	ldw	r10,136(sp)
  80ccb8:	50800117 	ldw	r2,4(r10)
  80ccbc:	54800017 	ldw	r18,0(r10)
  80ccc0:	52800204 	addi	r10,r10,8
  80ccc4:	da802215 	stw	r10,136(sp)
  80ccc8:	1027883a 	mov	r19,r2
  80cccc:	10022c16 	blt	r2,zero,80d580 <___vfiprintf_internal_r+0x10a0>
  80ccd0:	df001d83 	ldbu	fp,118(sp)
  80ccd4:	48007216 	blt	r9,zero,80cea0 <___vfiprintf_internal_r+0x9c0>
  80ccd8:	00ffdfc4 	movi	r3,-129
  80ccdc:	94c4b03a 	or	r2,r18,r19
  80cce0:	a0e8703a 	and	r20,r20,r3
  80cce4:	1000cc26 	beq	r2,zero,80d018 <___vfiprintf_internal_r+0xb38>
  80cce8:	98021026 	beq	r19,zero,80d52c <___vfiprintf_internal_r+0x104c>
  80ccec:	dc402415 	stw	r17,144(sp)
  80ccf0:	dc002515 	stw	r16,148(sp)
  80ccf4:	9823883a 	mov	r17,r19
  80ccf8:	9021883a 	mov	r16,r18
  80ccfc:	dd401a04 	addi	r21,sp,104
  80cd00:	4825883a 	mov	r18,r9
  80cd04:	4027883a 	mov	r19,r8
  80cd08:	8009883a 	mov	r4,r16
  80cd0c:	880b883a 	mov	r5,r17
  80cd10:	01800284 	movi	r6,10
  80cd14:	000f883a 	mov	r7,zero
  80cd18:	080e8c00 	call	80e8c0 <__umoddi3>
  80cd1c:	10800c04 	addi	r2,r2,48
  80cd20:	ad7fffc4 	addi	r21,r21,-1
  80cd24:	8009883a 	mov	r4,r16
  80cd28:	880b883a 	mov	r5,r17
  80cd2c:	a8800005 	stb	r2,0(r21)
  80cd30:	01800284 	movi	r6,10
  80cd34:	000f883a 	mov	r7,zero
  80cd38:	080e3480 	call	80e348 <__udivdi3>
  80cd3c:	1021883a 	mov	r16,r2
  80cd40:	10c4b03a 	or	r2,r2,r3
  80cd44:	1823883a 	mov	r17,r3
  80cd48:	103fef1e 	bne	r2,zero,80cd08 <__alt_data_end+0xff80cd08>
  80cd4c:	dc402417 	ldw	r17,144(sp)
  80cd50:	dc002517 	ldw	r16,148(sp)
  80cd54:	9013883a 	mov	r9,r18
  80cd58:	9811883a 	mov	r8,r19
  80cd5c:	da801e17 	ldw	r10,120(sp)
  80cd60:	5567c83a 	sub	r19,r10,r21
  80cd64:	003ede06 	br	80c8e0 <__alt_data_end+0xff80c8e0>
  80cd68:	38803fcc 	andi	r2,r7,255
  80cd6c:	1080201c 	xori	r2,r2,128
  80cd70:	10bfe004 	addi	r2,r2,-128
  80cd74:	1002371e 	bne	r2,zero,80d654 <___vfiprintf_internal_r+0x1174>
  80cd78:	01000044 	movi	r4,1
  80cd7c:	01c00804 	movi	r7,32
  80cd80:	80c00007 	ldb	r3,0(r16)
  80cd84:	003e3506 	br	80c65c <__alt_data_end+0xff80c65c>
  80cd88:	a5000054 	ori	r20,r20,1
  80cd8c:	80c00007 	ldb	r3,0(r16)
  80cd90:	003e3206 	br	80c65c <__alt_data_end+0xff80c65c>
  80cd94:	a5002014 	ori	r20,r20,128
  80cd98:	80c00007 	ldb	r3,0(r16)
  80cd9c:	003e2f06 	br	80c65c <__alt_data_end+0xff80c65c>
  80cda0:	8015883a 	mov	r10,r16
  80cda4:	0023883a 	mov	r17,zero
  80cda8:	18bff404 	addi	r2,r3,-48
  80cdac:	50c00007 	ldb	r3,0(r10)
  80cdb0:	8c4002a4 	muli	r17,r17,10
  80cdb4:	84000044 	addi	r16,r16,1
  80cdb8:	8015883a 	mov	r10,r16
  80cdbc:	1463883a 	add	r17,r2,r17
  80cdc0:	18bff404 	addi	r2,r3,-48
  80cdc4:	30bff92e 	bgeu	r6,r2,80cdac <__alt_data_end+0xff80cdac>
  80cdc8:	003e2506 	br	80c660 <__alt_data_end+0xff80c660>
  80cdcc:	21003fcc 	andi	r4,r4,255
  80cdd0:	2002d41e 	bne	r4,zero,80d924 <___vfiprintf_internal_r+0x1444>
  80cdd4:	a5000414 	ori	r20,r20,16
  80cdd8:	a080080c 	andi	r2,r20,32
  80cddc:	103fb51e 	bne	r2,zero,80ccb4 <__alt_data_end+0xff80ccb4>
  80cde0:	a080040c 	andi	r2,r20,16
  80cde4:	1001f826 	beq	r2,zero,80d5c8 <___vfiprintf_internal_r+0x10e8>
  80cde8:	da802217 	ldw	r10,136(sp)
  80cdec:	54800017 	ldw	r18,0(r10)
  80cdf0:	52800104 	addi	r10,r10,4
  80cdf4:	da802215 	stw	r10,136(sp)
  80cdf8:	9027d7fa 	srai	r19,r18,31
  80cdfc:	9805883a 	mov	r2,r19
  80ce00:	003fb206 	br	80cccc <__alt_data_end+0xff80cccc>
  80ce04:	21003fcc 	andi	r4,r4,255
  80ce08:	2002c41e 	bne	r4,zero,80d91c <___vfiprintf_internal_r+0x143c>
  80ce0c:	a5000414 	ori	r20,r20,16
  80ce10:	a080080c 	andi	r2,r20,32
  80ce14:	103f5f1e 	bne	r2,zero,80cb94 <__alt_data_end+0xff80cb94>
  80ce18:	a080040c 	andi	r2,r20,16
  80ce1c:	10020f26 	beq	r2,zero,80d65c <___vfiprintf_internal_r+0x117c>
  80ce20:	da802217 	ldw	r10,136(sp)
  80ce24:	d8001d85 	stb	zero,118(sp)
  80ce28:	0027883a 	mov	r19,zero
  80ce2c:	50800104 	addi	r2,r10,4
  80ce30:	54800017 	ldw	r18,0(r10)
  80ce34:	48021116 	blt	r9,zero,80d67c <___vfiprintf_internal_r+0x119c>
  80ce38:	00ffdfc4 	movi	r3,-129
  80ce3c:	d8802215 	stw	r2,136(sp)
  80ce40:	a0e8703a 	and	r20,r20,r3
  80ce44:	903f5e1e 	bne	r18,zero,80cbc0 <__alt_data_end+0xff80cbc0>
  80ce48:	0039883a 	mov	fp,zero
  80ce4c:	4802a626 	beq	r9,zero,80d8e8 <___vfiprintf_internal_r+0x1408>
  80ce50:	0025883a 	mov	r18,zero
  80ce54:	0027883a 	mov	r19,zero
  80ce58:	003f5a06 	br	80cbc4 <__alt_data_end+0xff80cbc4>
  80ce5c:	21003fcc 	andi	r4,r4,255
  80ce60:	20029f1e 	bne	r4,zero,80d8e0 <___vfiprintf_internal_r+0x1400>
  80ce64:	a5000414 	ori	r20,r20,16
  80ce68:	a080080c 	andi	r2,r20,32
  80ce6c:	10005e1e 	bne	r2,zero,80cfe8 <___vfiprintf_internal_r+0xb08>
  80ce70:	a080040c 	andi	r2,r20,16
  80ce74:	1001a21e 	bne	r2,zero,80d500 <___vfiprintf_internal_r+0x1020>
  80ce78:	a080100c 	andi	r2,r20,64
  80ce7c:	d8001d85 	stb	zero,118(sp)
  80ce80:	da802217 	ldw	r10,136(sp)
  80ce84:	1002231e 	bne	r2,zero,80d714 <___vfiprintf_internal_r+0x1234>
  80ce88:	50800104 	addi	r2,r10,4
  80ce8c:	54800017 	ldw	r18,0(r10)
  80ce90:	0027883a 	mov	r19,zero
  80ce94:	4801a00e 	bge	r9,zero,80d518 <___vfiprintf_internal_r+0x1038>
  80ce98:	d8802215 	stw	r2,136(sp)
  80ce9c:	0039883a 	mov	fp,zero
  80cea0:	94c4b03a 	or	r2,r18,r19
  80cea4:	103f901e 	bne	r2,zero,80cce8 <__alt_data_end+0xff80cce8>
  80cea8:	00800044 	movi	r2,1
  80ceac:	10803fcc 	andi	r2,r2,255
  80ceb0:	00c00044 	movi	r3,1
  80ceb4:	10c05926 	beq	r2,r3,80d01c <___vfiprintf_internal_r+0xb3c>
  80ceb8:	00c00084 	movi	r3,2
  80cebc:	10ffe41e 	bne	r2,r3,80ce50 <__alt_data_end+0xff80ce50>
  80cec0:	0025883a 	mov	r18,zero
  80cec4:	0027883a 	mov	r19,zero
  80cec8:	00013d06 	br	80d3c0 <___vfiprintf_internal_r+0xee0>
  80cecc:	21003fcc 	andi	r4,r4,255
  80ced0:	2002811e 	bne	r4,zero,80d8d8 <___vfiprintf_internal_r+0x13f8>
  80ced4:	00802074 	movhi	r2,129
  80ced8:	10890704 	addi	r2,r2,9244
  80cedc:	d8802615 	stw	r2,152(sp)
  80cee0:	a080080c 	andi	r2,r20,32
  80cee4:	103f561e 	bne	r2,zero,80cc40 <__alt_data_end+0xff80cc40>
  80cee8:	a080040c 	andi	r2,r20,16
  80ceec:	1001d126 	beq	r2,zero,80d634 <___vfiprintf_internal_r+0x1154>
  80cef0:	da802217 	ldw	r10,136(sp)
  80cef4:	0027883a 	mov	r19,zero
  80cef8:	54800017 	ldw	r18,0(r10)
  80cefc:	52800104 	addi	r10,r10,4
  80cf00:	da802215 	stw	r10,136(sp)
  80cf04:	003f5306 	br	80cc54 <__alt_data_end+0xff80cc54>
  80cf08:	da802217 	ldw	r10,136(sp)
  80cf0c:	d8001d85 	stb	zero,118(sp)
  80cf10:	55400017 	ldw	r21,0(r10)
  80cf14:	50c00104 	addi	r3,r10,4
  80cf18:	a8024226 	beq	r21,zero,80d824 <___vfiprintf_internal_r+0x1344>
  80cf1c:	48021816 	blt	r9,zero,80d780 <___vfiprintf_internal_r+0x12a0>
  80cf20:	480d883a 	mov	r6,r9
  80cf24:	000b883a 	mov	r5,zero
  80cf28:	a809883a 	mov	r4,r21
  80cf2c:	d8c02a15 	stw	r3,168(sp)
  80cf30:	da002b15 	stw	r8,172(sp)
  80cf34:	da402c15 	stw	r9,176(sp)
  80cf38:	080a6dc0 	call	80a6dc <memchr>
  80cf3c:	d8c02a17 	ldw	r3,168(sp)
  80cf40:	da002b17 	ldw	r8,172(sp)
  80cf44:	da402c17 	ldw	r9,176(sp)
  80cf48:	10024826 	beq	r2,zero,80d86c <___vfiprintf_internal_r+0x138c>
  80cf4c:	1567c83a 	sub	r19,r2,r21
  80cf50:	df001d83 	ldbu	fp,118(sp)
  80cf54:	d8c02215 	stw	r3,136(sp)
  80cf58:	0013883a 	mov	r9,zero
  80cf5c:	003e6006 	br	80c8e0 <__alt_data_end+0xff80c8e0>
  80cf60:	21003fcc 	andi	r4,r4,255
  80cf64:	203fc026 	beq	r4,zero,80ce68 <__alt_data_end+0xff80ce68>
  80cf68:	d9c01d85 	stb	r7,118(sp)
  80cf6c:	003fbe06 	br	80ce68 <__alt_data_end+0xff80ce68>
  80cf70:	da802217 	ldw	r10,136(sp)
  80cf74:	54400017 	ldw	r17,0(r10)
  80cf78:	50800104 	addi	r2,r10,4
  80cf7c:	883e3b16 	blt	r17,zero,80c86c <__alt_data_end+0xff80c86c>
  80cf80:	d8802215 	stw	r2,136(sp)
  80cf84:	80c00007 	ldb	r3,0(r16)
  80cf88:	003db406 	br	80c65c <__alt_data_end+0xff80c65c>
  80cf8c:	01000044 	movi	r4,1
  80cf90:	01c00ac4 	movi	r7,43
  80cf94:	80c00007 	ldb	r3,0(r16)
  80cf98:	003db006 	br	80c65c <__alt_data_end+0xff80c65c>
  80cf9c:	80c00007 	ldb	r3,0(r16)
  80cfa0:	82800044 	addi	r10,r16,1
  80cfa4:	1b423c26 	beq	r3,r13,80d898 <___vfiprintf_internal_r+0x13b8>
  80cfa8:	18bff404 	addi	r2,r3,-48
  80cfac:	0013883a 	mov	r9,zero
  80cfb0:	30822b36 	bltu	r6,r2,80d860 <___vfiprintf_internal_r+0x1380>
  80cfb4:	50c00007 	ldb	r3,0(r10)
  80cfb8:	4a4002a4 	muli	r9,r9,10
  80cfbc:	54000044 	addi	r16,r10,1
  80cfc0:	8015883a 	mov	r10,r16
  80cfc4:	4893883a 	add	r9,r9,r2
  80cfc8:	18bff404 	addi	r2,r3,-48
  80cfcc:	30bff92e 	bgeu	r6,r2,80cfb4 <__alt_data_end+0xff80cfb4>
  80cfd0:	483da30e 	bge	r9,zero,80c660 <__alt_data_end+0xff80c660>
  80cfd4:	027fffc4 	movi	r9,-1
  80cfd8:	003da106 	br	80c660 <__alt_data_end+0xff80c660>
  80cfdc:	a5001014 	ori	r20,r20,64
  80cfe0:	80c00007 	ldb	r3,0(r16)
  80cfe4:	003d9d06 	br	80c65c <__alt_data_end+0xff80c65c>
  80cfe8:	da802217 	ldw	r10,136(sp)
  80cfec:	d8001d85 	stb	zero,118(sp)
  80cff0:	50c00204 	addi	r3,r10,8
  80cff4:	54800017 	ldw	r18,0(r10)
  80cff8:	54c00117 	ldw	r19,4(r10)
  80cffc:	4801ca16 	blt	r9,zero,80d728 <___vfiprintf_internal_r+0x1248>
  80d000:	013fdfc4 	movi	r4,-129
  80d004:	94c4b03a 	or	r2,r18,r19
  80d008:	d8c02215 	stw	r3,136(sp)
  80d00c:	a128703a 	and	r20,r20,r4
  80d010:	0039883a 	mov	fp,zero
  80d014:	103f341e 	bne	r2,zero,80cce8 <__alt_data_end+0xff80cce8>
  80d018:	483e2e26 	beq	r9,zero,80c8d4 <__alt_data_end+0xff80c8d4>
  80d01c:	0025883a 	mov	r18,zero
  80d020:	94800c04 	addi	r18,r18,48
  80d024:	dc8019c5 	stb	r18,103(sp)
  80d028:	dcc02717 	ldw	r19,156(sp)
  80d02c:	dd4019c4 	addi	r21,sp,103
  80d030:	003e2b06 	br	80c8e0 <__alt_data_end+0xff80c8e0>
  80d034:	21003fcc 	andi	r4,r4,255
  80d038:	2002361e 	bne	r4,zero,80d914 <___vfiprintf_internal_r+0x1434>
  80d03c:	1801c126 	beq	r3,zero,80d744 <___vfiprintf_internal_r+0x1264>
  80d040:	04800044 	movi	r18,1
  80d044:	d8c01005 	stb	r3,64(sp)
  80d048:	d8001d85 	stb	zero,118(sp)
  80d04c:	9027883a 	mov	r19,r18
  80d050:	dd401004 	addi	r21,sp,64
  80d054:	003f1106 	br	80cc9c <__alt_data_end+0xff80cc9c>
  80d058:	d9402117 	ldw	r5,132(sp)
  80d05c:	d9002017 	ldw	r4,128(sp)
  80d060:	d9801a04 	addi	r6,sp,104
  80d064:	d9c02b15 	stw	r7,172(sp)
  80d068:	dbc02a15 	stw	r15,168(sp)
  80d06c:	080c3cc0 	call	80c3cc <__sprint_r.part.0>
  80d070:	d9c02b17 	ldw	r7,172(sp)
  80d074:	dbc02a17 	ldw	r15,168(sp)
  80d078:	10006d1e 	bne	r2,zero,80d230 <___vfiprintf_internal_r+0xd50>
  80d07c:	d9801b17 	ldw	r6,108(sp)
  80d080:	d8801c17 	ldw	r2,112(sp)
  80d084:	d811883a 	mov	r8,sp
  80d088:	31400044 	addi	r5,r6,1
  80d08c:	003e3306 	br	80c95c <__alt_data_end+0xff80c95c>
  80d090:	d9401b17 	ldw	r5,108(sp)
  80d094:	d8801c17 	ldw	r2,112(sp)
  80d098:	29000044 	addi	r4,r5,1
  80d09c:	d8c01d87 	ldb	r3,118(sp)
  80d0a0:	183e4d26 	beq	r3,zero,80c9d8 <__alt_data_end+0xff80c9d8>
  80d0a4:	00c00044 	movi	r3,1
  80d0a8:	d9401d84 	addi	r5,sp,118
  80d0ac:	10c5883a 	add	r2,r2,r3
  80d0b0:	41400015 	stw	r5,0(r8)
  80d0b4:	40c00115 	stw	r3,4(r8)
  80d0b8:	d8801c15 	stw	r2,112(sp)
  80d0bc:	d9001b15 	stw	r4,108(sp)
  80d0c0:	014001c4 	movi	r5,7
  80d0c4:	2900a90e 	bge	r5,r4,80d36c <___vfiprintf_internal_r+0xe8c>
  80d0c8:	1000da1e 	bne	r2,zero,80d434 <___vfiprintf_internal_r+0xf54>
  80d0cc:	7000ab1e 	bne	r14,zero,80d37c <___vfiprintf_internal_r+0xe9c>
  80d0d0:	000b883a 	mov	r5,zero
  80d0d4:	1809883a 	mov	r4,r3
  80d0d8:	d811883a 	mov	r8,sp
  80d0dc:	00c02004 	movi	r3,128
  80d0e0:	e0fe4d26 	beq	fp,r3,80ca18 <__alt_data_end+0xff80ca18>
  80d0e4:	4cf9c83a 	sub	fp,r9,r19
  80d0e8:	073e7b0e 	bge	zero,fp,80cad8 <__alt_data_end+0xff80cad8>
  80d0ec:	01c00404 	movi	r7,16
  80d0f0:	3f01900e 	bge	r7,fp,80d734 <___vfiprintf_internal_r+0x1254>
  80d0f4:	00c02074 	movhi	r3,129
  80d0f8:	18c96d04 	addi	r3,r3,9652
  80d0fc:	d8c02415 	stw	r3,144(sp)
  80d100:	034001c4 	movi	r13,7
  80d104:	00000506 	br	80d11c <___vfiprintf_internal_r+0xc3c>
  80d108:	29000084 	addi	r4,r5,2
  80d10c:	42000204 	addi	r8,r8,8
  80d110:	180b883a 	mov	r5,r3
  80d114:	e73ffc04 	addi	fp,fp,-16
  80d118:	3f000d0e 	bge	r7,fp,80d150 <___vfiprintf_internal_r+0xc70>
  80d11c:	10800404 	addi	r2,r2,16
  80d120:	28c00044 	addi	r3,r5,1
  80d124:	45c00015 	stw	r23,0(r8)
  80d128:	41c00115 	stw	r7,4(r8)
  80d12c:	d8801c15 	stw	r2,112(sp)
  80d130:	d8c01b15 	stw	r3,108(sp)
  80d134:	68fff40e 	bge	r13,r3,80d108 <__alt_data_end+0xff80d108>
  80d138:	1000101e 	bne	r2,zero,80d17c <___vfiprintf_internal_r+0xc9c>
  80d13c:	e73ffc04 	addi	fp,fp,-16
  80d140:	01000044 	movi	r4,1
  80d144:	000b883a 	mov	r5,zero
  80d148:	d811883a 	mov	r8,sp
  80d14c:	3f3ff316 	blt	r7,fp,80d11c <__alt_data_end+0xff80d11c>
  80d150:	da802417 	ldw	r10,144(sp)
  80d154:	1705883a 	add	r2,r2,fp
  80d158:	47000115 	stw	fp,4(r8)
  80d15c:	42800015 	stw	r10,0(r8)
  80d160:	d8801c15 	stw	r2,112(sp)
  80d164:	d9001b15 	stw	r4,108(sp)
  80d168:	00c001c4 	movi	r3,7
  80d16c:	19003616 	blt	r3,r4,80d248 <___vfiprintf_internal_r+0xd68>
  80d170:	42000204 	addi	r8,r8,8
  80d174:	21000044 	addi	r4,r4,1
  80d178:	003e5706 	br	80cad8 <__alt_data_end+0xff80cad8>
  80d17c:	d9402117 	ldw	r5,132(sp)
  80d180:	d9002017 	ldw	r4,128(sp)
  80d184:	d9801a04 	addi	r6,sp,104
  80d188:	d9c02b15 	stw	r7,172(sp)
  80d18c:	db402a15 	stw	r13,168(sp)
  80d190:	080c3cc0 	call	80c3cc <__sprint_r.part.0>
  80d194:	d9c02b17 	ldw	r7,172(sp)
  80d198:	db402a17 	ldw	r13,168(sp)
  80d19c:	1000241e 	bne	r2,zero,80d230 <___vfiprintf_internal_r+0xd50>
  80d1a0:	d9401b17 	ldw	r5,108(sp)
  80d1a4:	d8801c17 	ldw	r2,112(sp)
  80d1a8:	d811883a 	mov	r8,sp
  80d1ac:	29000044 	addi	r4,r5,1
  80d1b0:	003fd806 	br	80d114 <__alt_data_end+0xff80d114>
  80d1b4:	d9401b17 	ldw	r5,108(sp)
  80d1b8:	00c02074 	movhi	r3,129
  80d1bc:	18c97104 	addi	r3,r3,9668
  80d1c0:	d8c02415 	stw	r3,144(sp)
  80d1c4:	29400044 	addi	r5,r5,1
  80d1c8:	d8c02417 	ldw	r3,144(sp)
  80d1cc:	14c5883a 	add	r2,r2,r19
  80d1d0:	44c00115 	stw	r19,4(r8)
  80d1d4:	40c00015 	stw	r3,0(r8)
  80d1d8:	d8801c15 	stw	r2,112(sp)
  80d1dc:	d9401b15 	stw	r5,108(sp)
  80d1e0:	00c001c4 	movi	r3,7
  80d1e4:	1940070e 	bge	r3,r5,80d204 <___vfiprintf_internal_r+0xd24>
  80d1e8:	103e4826 	beq	r2,zero,80cb0c <__alt_data_end+0xff80cb0c>
  80d1ec:	d9402117 	ldw	r5,132(sp)
  80d1f0:	d9002017 	ldw	r4,128(sp)
  80d1f4:	d9801a04 	addi	r6,sp,104
  80d1f8:	080c3cc0 	call	80c3cc <__sprint_r.part.0>
  80d1fc:	10000c1e 	bne	r2,zero,80d230 <___vfiprintf_internal_r+0xd50>
  80d200:	d8801c17 	ldw	r2,112(sp)
  80d204:	8c80010e 	bge	r17,r18,80d20c <___vfiprintf_internal_r+0xd2c>
  80d208:	9023883a 	mov	r17,r18
  80d20c:	da802317 	ldw	r10,140(sp)
  80d210:	5455883a 	add	r10,r10,r17
  80d214:	da802315 	stw	r10,140(sp)
  80d218:	103e4126 	beq	r2,zero,80cb20 <__alt_data_end+0xff80cb20>
  80d21c:	d9402117 	ldw	r5,132(sp)
  80d220:	d9002017 	ldw	r4,128(sp)
  80d224:	d9801a04 	addi	r6,sp,104
  80d228:	080c3cc0 	call	80c3cc <__sprint_r.part.0>
  80d22c:	103e3c26 	beq	r2,zero,80cb20 <__alt_data_end+0xff80cb20>
  80d230:	dd002117 	ldw	r20,132(sp)
  80d234:	a080030b 	ldhu	r2,12(r20)
  80d238:	1080100c 	andi	r2,r2,64
  80d23c:	1001231e 	bne	r2,zero,80d6cc <___vfiprintf_internal_r+0x11ec>
  80d240:	d8802317 	ldw	r2,140(sp)
  80d244:	003d7b06 	br	80c834 <__alt_data_end+0xff80c834>
  80d248:	1000991e 	bne	r2,zero,80d4b0 <___vfiprintf_internal_r+0xfd0>
  80d24c:	00c00044 	movi	r3,1
  80d250:	9805883a 	mov	r2,r19
  80d254:	dd400015 	stw	r21,0(sp)
  80d258:	dcc00115 	stw	r19,4(sp)
  80d25c:	dcc01c15 	stw	r19,112(sp)
  80d260:	d8c01b15 	stw	r3,108(sp)
  80d264:	d811883a 	mov	r8,sp
  80d268:	42000204 	addi	r8,r8,8
  80d26c:	a2c0010c 	andi	r11,r20,4
  80d270:	583fe426 	beq	r11,zero,80d204 <__alt_data_end+0xff80d204>
  80d274:	8ca7c83a 	sub	r19,r17,r18
  80d278:	04ffe20e 	bge	zero,r19,80d204 <__alt_data_end+0xff80d204>
  80d27c:	01c00404 	movi	r7,16
  80d280:	3cffcc0e 	bge	r7,r19,80d1b4 <__alt_data_end+0xff80d1b4>
  80d284:	02802074 	movhi	r10,129
  80d288:	52897104 	addi	r10,r10,9668
  80d28c:	d9001b17 	ldw	r4,108(sp)
  80d290:	da802415 	stw	r10,144(sp)
  80d294:	382b883a 	mov	r21,r7
  80d298:	050001c4 	movi	r20,7
  80d29c:	df002017 	ldw	fp,128(sp)
  80d2a0:	00000506 	br	80d2b8 <___vfiprintf_internal_r+0xdd8>
  80d2a4:	21400084 	addi	r5,r4,2
  80d2a8:	42000204 	addi	r8,r8,8
  80d2ac:	1809883a 	mov	r4,r3
  80d2b0:	9cfffc04 	addi	r19,r19,-16
  80d2b4:	acffc40e 	bge	r21,r19,80d1c8 <__alt_data_end+0xff80d1c8>
  80d2b8:	10800404 	addi	r2,r2,16
  80d2bc:	20c00044 	addi	r3,r4,1
  80d2c0:	45800015 	stw	r22,0(r8)
  80d2c4:	45400115 	stw	r21,4(r8)
  80d2c8:	d8801c15 	stw	r2,112(sp)
  80d2cc:	d8c01b15 	stw	r3,108(sp)
  80d2d0:	a0fff40e 	bge	r20,r3,80d2a4 <__alt_data_end+0xff80d2a4>
  80d2d4:	1000041e 	bne	r2,zero,80d2e8 <___vfiprintf_internal_r+0xe08>
  80d2d8:	01400044 	movi	r5,1
  80d2dc:	0009883a 	mov	r4,zero
  80d2e0:	d811883a 	mov	r8,sp
  80d2e4:	003ff206 	br	80d2b0 <__alt_data_end+0xff80d2b0>
  80d2e8:	d9402117 	ldw	r5,132(sp)
  80d2ec:	d9801a04 	addi	r6,sp,104
  80d2f0:	e009883a 	mov	r4,fp
  80d2f4:	080c3cc0 	call	80c3cc <__sprint_r.part.0>
  80d2f8:	103fcd1e 	bne	r2,zero,80d230 <__alt_data_end+0xff80d230>
  80d2fc:	d9001b17 	ldw	r4,108(sp)
  80d300:	d8801c17 	ldw	r2,112(sp)
  80d304:	d811883a 	mov	r8,sp
  80d308:	21400044 	addi	r5,r4,1
  80d30c:	003fe806 	br	80d2b0 <__alt_data_end+0xff80d2b0>
  80d310:	d9402117 	ldw	r5,132(sp)
  80d314:	d9002017 	ldw	r4,128(sp)
  80d318:	d9801a04 	addi	r6,sp,104
  80d31c:	d9c02b15 	stw	r7,172(sp)
  80d320:	db402a15 	stw	r13,168(sp)
  80d324:	080c3cc0 	call	80c3cc <__sprint_r.part.0>
  80d328:	d9c02b17 	ldw	r7,172(sp)
  80d32c:	db402a17 	ldw	r13,168(sp)
  80d330:	103fbf1e 	bne	r2,zero,80d230 <__alt_data_end+0xff80d230>
  80d334:	d9401b17 	ldw	r5,108(sp)
  80d338:	d8801c17 	ldw	r2,112(sp)
  80d33c:	d811883a 	mov	r8,sp
  80d340:	29800044 	addi	r6,r5,1
  80d344:	003dc406 	br	80ca58 <__alt_data_end+0xff80ca58>
  80d348:	1000d21e 	bne	r2,zero,80d694 <___vfiprintf_internal_r+0x11b4>
  80d34c:	d8c01d87 	ldb	r3,118(sp)
  80d350:	18009526 	beq	r3,zero,80d5a8 <___vfiprintf_internal_r+0x10c8>
  80d354:	00800044 	movi	r2,1
  80d358:	d8c01d84 	addi	r3,sp,118
  80d35c:	1009883a 	mov	r4,r2
  80d360:	d8c00015 	stw	r3,0(sp)
  80d364:	d8800115 	stw	r2,4(sp)
  80d368:	d811883a 	mov	r8,sp
  80d36c:	200b883a 	mov	r5,r4
  80d370:	42000204 	addi	r8,r8,8
  80d374:	21000044 	addi	r4,r4,1
  80d378:	003d9706 	br	80c9d8 <__alt_data_end+0xff80c9d8>
  80d37c:	d9001d04 	addi	r4,sp,116
  80d380:	00800084 	movi	r2,2
  80d384:	d9000015 	stw	r4,0(sp)
  80d388:	d8800115 	stw	r2,4(sp)
  80d38c:	1809883a 	mov	r4,r3
  80d390:	d811883a 	mov	r8,sp
  80d394:	200b883a 	mov	r5,r4
  80d398:	42000204 	addi	r8,r8,8
  80d39c:	21000044 	addi	r4,r4,1
  80d3a0:	003f4e06 	br	80d0dc <__alt_data_end+0xff80d0dc>
  80d3a4:	d8001d85 	stb	zero,118(sp)
  80d3a8:	48005016 	blt	r9,zero,80d4ec <___vfiprintf_internal_r+0x100c>
  80d3ac:	00ffdfc4 	movi	r3,-129
  80d3b0:	94c4b03a 	or	r2,r18,r19
  80d3b4:	a0e8703a 	and	r20,r20,r3
  80d3b8:	103d4426 	beq	r2,zero,80c8cc <__alt_data_end+0xff80c8cc>
  80d3bc:	0039883a 	mov	fp,zero
  80d3c0:	d9002617 	ldw	r4,152(sp)
  80d3c4:	dd401a04 	addi	r21,sp,104
  80d3c8:	908003cc 	andi	r2,r18,15
  80d3cc:	9806973a 	slli	r3,r19,28
  80d3d0:	2085883a 	add	r2,r4,r2
  80d3d4:	9024d13a 	srli	r18,r18,4
  80d3d8:	10800003 	ldbu	r2,0(r2)
  80d3dc:	9826d13a 	srli	r19,r19,4
  80d3e0:	ad7fffc4 	addi	r21,r21,-1
  80d3e4:	1ca4b03a 	or	r18,r3,r18
  80d3e8:	a8800005 	stb	r2,0(r21)
  80d3ec:	94c4b03a 	or	r2,r18,r19
  80d3f0:	103ff51e 	bne	r2,zero,80d3c8 <__alt_data_end+0xff80d3c8>
  80d3f4:	003e5906 	br	80cd5c <__alt_data_end+0xff80cd5c>
  80d3f8:	d9402117 	ldw	r5,132(sp)
  80d3fc:	d9002017 	ldw	r4,128(sp)
  80d400:	d9801a04 	addi	r6,sp,104
  80d404:	080c3cc0 	call	80c3cc <__sprint_r.part.0>
  80d408:	103f891e 	bne	r2,zero,80d230 <__alt_data_end+0xff80d230>
  80d40c:	d8801c17 	ldw	r2,112(sp)
  80d410:	d811883a 	mov	r8,sp
  80d414:	003f9506 	br	80d26c <__alt_data_end+0xff80d26c>
  80d418:	d9402117 	ldw	r5,132(sp)
  80d41c:	d9002017 	ldw	r4,128(sp)
  80d420:	d9801a04 	addi	r6,sp,104
  80d424:	080c3cc0 	call	80c3cc <__sprint_r.part.0>
  80d428:	103f811e 	bne	r2,zero,80d230 <__alt_data_end+0xff80d230>
  80d42c:	d811883a 	mov	r8,sp
  80d430:	003ced06 	br	80c7e8 <__alt_data_end+0xff80c7e8>
  80d434:	d9402117 	ldw	r5,132(sp)
  80d438:	d9002017 	ldw	r4,128(sp)
  80d43c:	d9801a04 	addi	r6,sp,104
  80d440:	da402c15 	stw	r9,176(sp)
  80d444:	db802a15 	stw	r14,168(sp)
  80d448:	080c3cc0 	call	80c3cc <__sprint_r.part.0>
  80d44c:	da402c17 	ldw	r9,176(sp)
  80d450:	db802a17 	ldw	r14,168(sp)
  80d454:	103f761e 	bne	r2,zero,80d230 <__alt_data_end+0xff80d230>
  80d458:	d9401b17 	ldw	r5,108(sp)
  80d45c:	d8801c17 	ldw	r2,112(sp)
  80d460:	d811883a 	mov	r8,sp
  80d464:	29000044 	addi	r4,r5,1
  80d468:	003d5b06 	br	80c9d8 <__alt_data_end+0xff80c9d8>
  80d46c:	d9402117 	ldw	r5,132(sp)
  80d470:	d9002017 	ldw	r4,128(sp)
  80d474:	d9801a04 	addi	r6,sp,104
  80d478:	da402c15 	stw	r9,176(sp)
  80d47c:	080c3cc0 	call	80c3cc <__sprint_r.part.0>
  80d480:	da402c17 	ldw	r9,176(sp)
  80d484:	103f6a1e 	bne	r2,zero,80d230 <__alt_data_end+0xff80d230>
  80d488:	d9401b17 	ldw	r5,108(sp)
  80d48c:	d8801c17 	ldw	r2,112(sp)
  80d490:	d811883a 	mov	r8,sp
  80d494:	29000044 	addi	r4,r5,1
  80d498:	003f1006 	br	80d0dc <__alt_data_end+0xff80d0dc>
  80d49c:	1000c31e 	bne	r2,zero,80d7ac <___vfiprintf_internal_r+0x12cc>
  80d4a0:	01000044 	movi	r4,1
  80d4a4:	000b883a 	mov	r5,zero
  80d4a8:	d811883a 	mov	r8,sp
  80d4ac:	003f0d06 	br	80d0e4 <__alt_data_end+0xff80d0e4>
  80d4b0:	d9402117 	ldw	r5,132(sp)
  80d4b4:	d9002017 	ldw	r4,128(sp)
  80d4b8:	d9801a04 	addi	r6,sp,104
  80d4bc:	080c3cc0 	call	80c3cc <__sprint_r.part.0>
  80d4c0:	103f5b1e 	bne	r2,zero,80d230 <__alt_data_end+0xff80d230>
  80d4c4:	d9001b17 	ldw	r4,108(sp)
  80d4c8:	d8801c17 	ldw	r2,112(sp)
  80d4cc:	d811883a 	mov	r8,sp
  80d4d0:	21000044 	addi	r4,r4,1
  80d4d4:	003d8006 	br	80cad8 <__alt_data_end+0xff80cad8>
  80d4d8:	01002074 	movhi	r4,129
  80d4dc:	21090c04 	addi	r4,r4,9264
  80d4e0:	d9002615 	stw	r4,152(sp)
  80d4e4:	d8c02215 	stw	r3,136(sp)
  80d4e8:	1029883a 	mov	r20,r2
  80d4ec:	94c4b03a 	or	r2,r18,r19
  80d4f0:	103fb21e 	bne	r2,zero,80d3bc <__alt_data_end+0xff80d3bc>
  80d4f4:	0039883a 	mov	fp,zero
  80d4f8:	00800084 	movi	r2,2
  80d4fc:	003e6b06 	br	80ceac <__alt_data_end+0xff80ceac>
  80d500:	da802217 	ldw	r10,136(sp)
  80d504:	d8001d85 	stb	zero,118(sp)
  80d508:	0027883a 	mov	r19,zero
  80d50c:	50800104 	addi	r2,r10,4
  80d510:	54800017 	ldw	r18,0(r10)
  80d514:	483e6016 	blt	r9,zero,80ce98 <__alt_data_end+0xff80ce98>
  80d518:	00ffdfc4 	movi	r3,-129
  80d51c:	d8802215 	stw	r2,136(sp)
  80d520:	a0e8703a 	and	r20,r20,r3
  80d524:	0039883a 	mov	fp,zero
  80d528:	903ebb26 	beq	r18,zero,80d018 <__alt_data_end+0xff80d018>
  80d52c:	00800244 	movi	r2,9
  80d530:	14bdee36 	bltu	r2,r18,80ccec <__alt_data_end+0xff80ccec>
  80d534:	003eba06 	br	80d020 <__alt_data_end+0xff80d020>
  80d538:	00800c04 	movi	r2,48
  80d53c:	d8c01d45 	stb	r3,117(sp)
  80d540:	d8801d05 	stb	r2,116(sp)
  80d544:	d8001d85 	stb	zero,118(sp)
  80d548:	a0c00094 	ori	r3,r20,2
  80d54c:	4800a916 	blt	r9,zero,80d7f4 <___vfiprintf_internal_r+0x1314>
  80d550:	00bfdfc4 	movi	r2,-129
  80d554:	a096703a 	and	r11,r20,r2
  80d558:	5d000094 	ori	r20,r11,2
  80d55c:	0039883a 	mov	fp,zero
  80d560:	003f9706 	br	80d3c0 <__alt_data_end+0xff80d3c0>
  80d564:	8025883a 	mov	r18,r16
  80d568:	003c2e06 	br	80c624 <__alt_data_end+0xff80c624>
  80d56c:	00802074 	movhi	r2,129
  80d570:	10890c04 	addi	r2,r2,9264
  80d574:	0039883a 	mov	fp,zero
  80d578:	d8802615 	stw	r2,152(sp)
  80d57c:	003f9006 	br	80d3c0 <__alt_data_end+0xff80d3c0>
  80d580:	04a5c83a 	sub	r18,zero,r18
  80d584:	07000b44 	movi	fp,45
  80d588:	9004c03a 	cmpne	r2,r18,zero
  80d58c:	04e7c83a 	sub	r19,zero,r19
  80d590:	df001d85 	stb	fp,118(sp)
  80d594:	98a7c83a 	sub	r19,r19,r2
  80d598:	48009f16 	blt	r9,zero,80d818 <___vfiprintf_internal_r+0x1338>
  80d59c:	00bfdfc4 	movi	r2,-129
  80d5a0:	a0a8703a 	and	r20,r20,r2
  80d5a4:	003dd006 	br	80cce8 <__alt_data_end+0xff80cce8>
  80d5a8:	70004c26 	beq	r14,zero,80d6dc <___vfiprintf_internal_r+0x11fc>
  80d5ac:	00800084 	movi	r2,2
  80d5b0:	d8c01d04 	addi	r3,sp,116
  80d5b4:	d8c00015 	stw	r3,0(sp)
  80d5b8:	d8800115 	stw	r2,4(sp)
  80d5bc:	01000044 	movi	r4,1
  80d5c0:	d811883a 	mov	r8,sp
  80d5c4:	003f7306 	br	80d394 <__alt_data_end+0xff80d394>
  80d5c8:	a080100c 	andi	r2,r20,64
  80d5cc:	da802217 	ldw	r10,136(sp)
  80d5d0:	103e0626 	beq	r2,zero,80cdec <__alt_data_end+0xff80cdec>
  80d5d4:	5480000f 	ldh	r18,0(r10)
  80d5d8:	52800104 	addi	r10,r10,4
  80d5dc:	da802215 	stw	r10,136(sp)
  80d5e0:	9027d7fa 	srai	r19,r18,31
  80d5e4:	9805883a 	mov	r2,r19
  80d5e8:	003db806 	br	80cccc <__alt_data_end+0xff80cccc>
  80d5ec:	a080040c 	andi	r2,r20,16
  80d5f0:	1000091e 	bne	r2,zero,80d618 <___vfiprintf_internal_r+0x1138>
  80d5f4:	a2c0100c 	andi	r11,r20,64
  80d5f8:	58000726 	beq	r11,zero,80d618 <___vfiprintf_internal_r+0x1138>
  80d5fc:	da802217 	ldw	r10,136(sp)
  80d600:	50800017 	ldw	r2,0(r10)
  80d604:	52800104 	addi	r10,r10,4
  80d608:	da802215 	stw	r10,136(sp)
  80d60c:	da802317 	ldw	r10,140(sp)
  80d610:	1280000d 	sth	r10,0(r2)
  80d614:	003be706 	br	80c5b4 <__alt_data_end+0xff80c5b4>
  80d618:	da802217 	ldw	r10,136(sp)
  80d61c:	50800017 	ldw	r2,0(r10)
  80d620:	52800104 	addi	r10,r10,4
  80d624:	da802215 	stw	r10,136(sp)
  80d628:	da802317 	ldw	r10,140(sp)
  80d62c:	12800015 	stw	r10,0(r2)
  80d630:	003be006 	br	80c5b4 <__alt_data_end+0xff80c5b4>
  80d634:	a080100c 	andi	r2,r20,64
  80d638:	da802217 	ldw	r10,136(sp)
  80d63c:	10003026 	beq	r2,zero,80d700 <___vfiprintf_internal_r+0x1220>
  80d640:	5480000b 	ldhu	r18,0(r10)
  80d644:	52800104 	addi	r10,r10,4
  80d648:	0027883a 	mov	r19,zero
  80d64c:	da802215 	stw	r10,136(sp)
  80d650:	003d8006 	br	80cc54 <__alt_data_end+0xff80cc54>
  80d654:	80c00007 	ldb	r3,0(r16)
  80d658:	003c0006 	br	80c65c <__alt_data_end+0xff80c65c>
  80d65c:	a080100c 	andi	r2,r20,64
  80d660:	d8001d85 	stb	zero,118(sp)
  80d664:	da802217 	ldw	r10,136(sp)
  80d668:	1000201e 	bne	r2,zero,80d6ec <___vfiprintf_internal_r+0x120c>
  80d66c:	50800104 	addi	r2,r10,4
  80d670:	54800017 	ldw	r18,0(r10)
  80d674:	0027883a 	mov	r19,zero
  80d678:	483def0e 	bge	r9,zero,80ce38 <__alt_data_end+0xff80ce38>
  80d67c:	94c6b03a 	or	r3,r18,r19
  80d680:	d8802215 	stw	r2,136(sp)
  80d684:	183d4e1e 	bne	r3,zero,80cbc0 <__alt_data_end+0xff80cbc0>
  80d688:	0039883a 	mov	fp,zero
  80d68c:	0005883a 	mov	r2,zero
  80d690:	003e0606 	br	80ceac <__alt_data_end+0xff80ceac>
  80d694:	d9402117 	ldw	r5,132(sp)
  80d698:	d9002017 	ldw	r4,128(sp)
  80d69c:	d9801a04 	addi	r6,sp,104
  80d6a0:	da402c15 	stw	r9,176(sp)
  80d6a4:	db802a15 	stw	r14,168(sp)
  80d6a8:	080c3cc0 	call	80c3cc <__sprint_r.part.0>
  80d6ac:	da402c17 	ldw	r9,176(sp)
  80d6b0:	db802a17 	ldw	r14,168(sp)
  80d6b4:	103ede1e 	bne	r2,zero,80d230 <__alt_data_end+0xff80d230>
  80d6b8:	d9401b17 	ldw	r5,108(sp)
  80d6bc:	d8801c17 	ldw	r2,112(sp)
  80d6c0:	d811883a 	mov	r8,sp
  80d6c4:	29000044 	addi	r4,r5,1
  80d6c8:	003e7406 	br	80d09c <__alt_data_end+0xff80d09c>
  80d6cc:	00bfffc4 	movi	r2,-1
  80d6d0:	003c5806 	br	80c834 <__alt_data_end+0xff80c834>
  80d6d4:	d811883a 	mov	r8,sp
  80d6d8:	003ee806 	br	80d27c <__alt_data_end+0xff80d27c>
  80d6dc:	000b883a 	mov	r5,zero
  80d6e0:	01000044 	movi	r4,1
  80d6e4:	d811883a 	mov	r8,sp
  80d6e8:	003e7c06 	br	80d0dc <__alt_data_end+0xff80d0dc>
  80d6ec:	50800104 	addi	r2,r10,4
  80d6f0:	5480000b 	ldhu	r18,0(r10)
  80d6f4:	0027883a 	mov	r19,zero
  80d6f8:	483dcf0e 	bge	r9,zero,80ce38 <__alt_data_end+0xff80ce38>
  80d6fc:	003fdf06 	br	80d67c <__alt_data_end+0xff80d67c>
  80d700:	54800017 	ldw	r18,0(r10)
  80d704:	52800104 	addi	r10,r10,4
  80d708:	0027883a 	mov	r19,zero
  80d70c:	da802215 	stw	r10,136(sp)
  80d710:	003d5006 	br	80cc54 <__alt_data_end+0xff80cc54>
  80d714:	50800104 	addi	r2,r10,4
  80d718:	5480000b 	ldhu	r18,0(r10)
  80d71c:	0027883a 	mov	r19,zero
  80d720:	483f7d0e 	bge	r9,zero,80d518 <__alt_data_end+0xff80d518>
  80d724:	003ddc06 	br	80ce98 <__alt_data_end+0xff80ce98>
  80d728:	d8c02215 	stw	r3,136(sp)
  80d72c:	0039883a 	mov	fp,zero
  80d730:	003ddb06 	br	80cea0 <__alt_data_end+0xff80cea0>
  80d734:	02802074 	movhi	r10,129
  80d738:	52896d04 	addi	r10,r10,9652
  80d73c:	da802415 	stw	r10,144(sp)
  80d740:	003e8306 	br	80d150 <__alt_data_end+0xff80d150>
  80d744:	d8801c17 	ldw	r2,112(sp)
  80d748:	dd002117 	ldw	r20,132(sp)
  80d74c:	103eb926 	beq	r2,zero,80d234 <__alt_data_end+0xff80d234>
  80d750:	d9002017 	ldw	r4,128(sp)
  80d754:	d9801a04 	addi	r6,sp,104
  80d758:	a00b883a 	mov	r5,r20
  80d75c:	080c3cc0 	call	80c3cc <__sprint_r.part.0>
  80d760:	003eb406 	br	80d234 <__alt_data_end+0xff80d234>
  80d764:	80c00043 	ldbu	r3,1(r16)
  80d768:	a5000814 	ori	r20,r20,32
  80d76c:	84000044 	addi	r16,r16,1
  80d770:	18c03fcc 	andi	r3,r3,255
  80d774:	18c0201c 	xori	r3,r3,128
  80d778:	18ffe004 	addi	r3,r3,-128
  80d77c:	003bb706 	br	80c65c <__alt_data_end+0xff80c65c>
  80d780:	a809883a 	mov	r4,r21
  80d784:	d8c02a15 	stw	r3,168(sp)
  80d788:	da002b15 	stw	r8,172(sp)
  80d78c:	0804e340 	call	804e34 <strlen>
  80d790:	d8c02a17 	ldw	r3,168(sp)
  80d794:	1027883a 	mov	r19,r2
  80d798:	df001d83 	ldbu	fp,118(sp)
  80d79c:	d8c02215 	stw	r3,136(sp)
  80d7a0:	0013883a 	mov	r9,zero
  80d7a4:	da002b17 	ldw	r8,172(sp)
  80d7a8:	003c4d06 	br	80c8e0 <__alt_data_end+0xff80c8e0>
  80d7ac:	d9402117 	ldw	r5,132(sp)
  80d7b0:	d9002017 	ldw	r4,128(sp)
  80d7b4:	d9801a04 	addi	r6,sp,104
  80d7b8:	da402c15 	stw	r9,176(sp)
  80d7bc:	080c3cc0 	call	80c3cc <__sprint_r.part.0>
  80d7c0:	da402c17 	ldw	r9,176(sp)
  80d7c4:	103e9a1e 	bne	r2,zero,80d230 <__alt_data_end+0xff80d230>
  80d7c8:	d9401b17 	ldw	r5,108(sp)
  80d7cc:	d8801c17 	ldw	r2,112(sp)
  80d7d0:	d811883a 	mov	r8,sp
  80d7d4:	29000044 	addi	r4,r5,1
  80d7d8:	003e4206 	br	80d0e4 <__alt_data_end+0xff80d0e4>
  80d7dc:	d9401b17 	ldw	r5,108(sp)
  80d7e0:	01002074 	movhi	r4,129
  80d7e4:	21097104 	addi	r4,r4,9668
  80d7e8:	d9002415 	stw	r4,144(sp)
  80d7ec:	29400044 	addi	r5,r5,1
  80d7f0:	003c6d06 	br	80c9a8 <__alt_data_end+0xff80c9a8>
  80d7f4:	0039883a 	mov	fp,zero
  80d7f8:	00800084 	movi	r2,2
  80d7fc:	10803fcc 	andi	r2,r2,255
  80d800:	01000044 	movi	r4,1
  80d804:	11001e26 	beq	r2,r4,80d880 <___vfiprintf_internal_r+0x13a0>
  80d808:	01000084 	movi	r4,2
  80d80c:	11001e1e 	bne	r2,r4,80d888 <___vfiprintf_internal_r+0x13a8>
  80d810:	1829883a 	mov	r20,r3
  80d814:	003eea06 	br	80d3c0 <__alt_data_end+0xff80d3c0>
  80d818:	a007883a 	mov	r3,r20
  80d81c:	00800044 	movi	r2,1
  80d820:	003ff606 	br	80d7fc <__alt_data_end+0xff80d7fc>
  80d824:	00800184 	movi	r2,6
  80d828:	1240012e 	bgeu	r2,r9,80d830 <___vfiprintf_internal_r+0x1350>
  80d82c:	1013883a 	mov	r9,r2
  80d830:	4827883a 	mov	r19,r9
  80d834:	4825883a 	mov	r18,r9
  80d838:	48001516 	blt	r9,zero,80d890 <___vfiprintf_internal_r+0x13b0>
  80d83c:	05402074 	movhi	r21,129
  80d840:	d8c02215 	stw	r3,136(sp)
  80d844:	ad491104 	addi	r21,r21,9284
  80d848:	003d1406 	br	80cc9c <__alt_data_end+0xff80cc9c>
  80d84c:	02802074 	movhi	r10,129
  80d850:	52896d04 	addi	r10,r10,9652
  80d854:	da802415 	stw	r10,144(sp)
  80d858:	200d883a 	mov	r6,r4
  80d85c:	003c9106 	br	80caa4 <__alt_data_end+0xff80caa4>
  80d860:	5021883a 	mov	r16,r10
  80d864:	0013883a 	mov	r9,zero
  80d868:	003b7d06 	br	80c660 <__alt_data_end+0xff80c660>
  80d86c:	4827883a 	mov	r19,r9
  80d870:	df001d83 	ldbu	fp,118(sp)
  80d874:	d8c02215 	stw	r3,136(sp)
  80d878:	0013883a 	mov	r9,zero
  80d87c:	003c1806 	br	80c8e0 <__alt_data_end+0xff80c8e0>
  80d880:	1829883a 	mov	r20,r3
  80d884:	003d1806 	br	80cce8 <__alt_data_end+0xff80cce8>
  80d888:	1829883a 	mov	r20,r3
  80d88c:	003ccd06 	br	80cbc4 <__alt_data_end+0xff80cbc4>
  80d890:	0025883a 	mov	r18,zero
  80d894:	003fe906 	br	80d83c <__alt_data_end+0xff80d83c>
  80d898:	d8802217 	ldw	r2,136(sp)
  80d89c:	80c00043 	ldbu	r3,1(r16)
  80d8a0:	5021883a 	mov	r16,r10
  80d8a4:	12400017 	ldw	r9,0(r2)
  80d8a8:	10800104 	addi	r2,r2,4
  80d8ac:	d8802215 	stw	r2,136(sp)
  80d8b0:	483faf0e 	bge	r9,zero,80d770 <__alt_data_end+0xff80d770>
  80d8b4:	18c03fcc 	andi	r3,r3,255
  80d8b8:	18c0201c 	xori	r3,r3,128
  80d8bc:	027fffc4 	movi	r9,-1
  80d8c0:	18ffe004 	addi	r3,r3,-128
  80d8c4:	003b6506 	br	80c65c <__alt_data_end+0xff80c65c>
  80d8c8:	d9c01d85 	stb	r7,118(sp)
  80d8cc:	003ca006 	br	80cb50 <__alt_data_end+0xff80cb50>
  80d8d0:	d9c01d85 	stb	r7,118(sp)
  80d8d4:	003cad06 	br	80cb8c <__alt_data_end+0xff80cb8c>
  80d8d8:	d9c01d85 	stb	r7,118(sp)
  80d8dc:	003d7d06 	br	80ced4 <__alt_data_end+0xff80ced4>
  80d8e0:	d9c01d85 	stb	r7,118(sp)
  80d8e4:	003d5f06 	br	80ce64 <__alt_data_end+0xff80ce64>
  80d8e8:	a080004c 	andi	r2,r20,1
  80d8ec:	0039883a 	mov	fp,zero
  80d8f0:	10000526 	beq	r2,zero,80d908 <___vfiprintf_internal_r+0x1428>
  80d8f4:	00800c04 	movi	r2,48
  80d8f8:	d88019c5 	stb	r2,103(sp)
  80d8fc:	dcc02717 	ldw	r19,156(sp)
  80d900:	dd4019c4 	addi	r21,sp,103
  80d904:	003bf606 	br	80c8e0 <__alt_data_end+0xff80c8e0>
  80d908:	0027883a 	mov	r19,zero
  80d90c:	dd401a04 	addi	r21,sp,104
  80d910:	003bf306 	br	80c8e0 <__alt_data_end+0xff80c8e0>
  80d914:	d9c01d85 	stb	r7,118(sp)
  80d918:	003dc806 	br	80d03c <__alt_data_end+0xff80d03c>
  80d91c:	d9c01d85 	stb	r7,118(sp)
  80d920:	003d3a06 	br	80ce0c <__alt_data_end+0xff80ce0c>
  80d924:	d9c01d85 	stb	r7,118(sp)
  80d928:	003d2a06 	br	80cdd4 <__alt_data_end+0xff80cdd4>
  80d92c:	d9c01d85 	stb	r7,118(sp)
  80d930:	003cde06 	br	80ccac <__alt_data_end+0xff80ccac>
  80d934:	d9c01d85 	stb	r7,118(sp)
  80d938:	003cbc06 	br	80cc2c <__alt_data_end+0xff80cc2c>

0080d93c <__vfiprintf_internal>:
  80d93c:	00802074 	movhi	r2,129
  80d940:	10902c04 	addi	r2,r2,16560
  80d944:	300f883a 	mov	r7,r6
  80d948:	280d883a 	mov	r6,r5
  80d94c:	200b883a 	mov	r5,r4
  80d950:	11000017 	ldw	r4,0(r2)
  80d954:	080c4e01 	jmpi	80c4e0 <___vfiprintf_internal_r>

0080d958 <__sbprintf>:
  80d958:	2880030b 	ldhu	r2,12(r5)
  80d95c:	2ac01917 	ldw	r11,100(r5)
  80d960:	2a80038b 	ldhu	r10,14(r5)
  80d964:	2a400717 	ldw	r9,28(r5)
  80d968:	2a000917 	ldw	r8,36(r5)
  80d96c:	defee204 	addi	sp,sp,-1144
  80d970:	00c10004 	movi	r3,1024
  80d974:	dc011a15 	stw	r16,1128(sp)
  80d978:	10bfff4c 	andi	r2,r2,65533
  80d97c:	2821883a 	mov	r16,r5
  80d980:	d8cb883a 	add	r5,sp,r3
  80d984:	dc811c15 	stw	r18,1136(sp)
  80d988:	dc411b15 	stw	r17,1132(sp)
  80d98c:	dfc11d15 	stw	ra,1140(sp)
  80d990:	2025883a 	mov	r18,r4
  80d994:	d881030d 	sth	r2,1036(sp)
  80d998:	dac11915 	stw	r11,1124(sp)
  80d99c:	da81038d 	sth	r10,1038(sp)
  80d9a0:	da410715 	stw	r9,1052(sp)
  80d9a4:	da010915 	stw	r8,1060(sp)
  80d9a8:	dec10015 	stw	sp,1024(sp)
  80d9ac:	dec10415 	stw	sp,1040(sp)
  80d9b0:	d8c10215 	stw	r3,1032(sp)
  80d9b4:	d8c10515 	stw	r3,1044(sp)
  80d9b8:	d8010615 	stw	zero,1048(sp)
  80d9bc:	080c4e00 	call	80c4e0 <___vfiprintf_internal_r>
  80d9c0:	1023883a 	mov	r17,r2
  80d9c4:	10000416 	blt	r2,zero,80d9d8 <__sbprintf+0x80>
  80d9c8:	d9410004 	addi	r5,sp,1024
  80d9cc:	9009883a 	mov	r4,r18
  80d9d0:	0808d940 	call	808d94 <_fflush_r>
  80d9d4:	10000d1e 	bne	r2,zero,80da0c <__sbprintf+0xb4>
  80d9d8:	d881030b 	ldhu	r2,1036(sp)
  80d9dc:	1080100c 	andi	r2,r2,64
  80d9e0:	10000326 	beq	r2,zero,80d9f0 <__sbprintf+0x98>
  80d9e4:	8080030b 	ldhu	r2,12(r16)
  80d9e8:	10801014 	ori	r2,r2,64
  80d9ec:	8080030d 	sth	r2,12(r16)
  80d9f0:	8805883a 	mov	r2,r17
  80d9f4:	dfc11d17 	ldw	ra,1140(sp)
  80d9f8:	dc811c17 	ldw	r18,1136(sp)
  80d9fc:	dc411b17 	ldw	r17,1132(sp)
  80da00:	dc011a17 	ldw	r16,1128(sp)
  80da04:	dec11e04 	addi	sp,sp,1144
  80da08:	f800283a 	ret
  80da0c:	047fffc4 	movi	r17,-1
  80da10:	003ff106 	br	80d9d8 <__alt_data_end+0xff80d9d8>

0080da14 <_write_r>:
  80da14:	defffd04 	addi	sp,sp,-12
  80da18:	2805883a 	mov	r2,r5
  80da1c:	dc000015 	stw	r16,0(sp)
  80da20:	04002074 	movhi	r16,129
  80da24:	dc400115 	stw	r17,4(sp)
  80da28:	300b883a 	mov	r5,r6
  80da2c:	8416fc04 	addi	r16,r16,23536
  80da30:	2023883a 	mov	r17,r4
  80da34:	380d883a 	mov	r6,r7
  80da38:	1009883a 	mov	r4,r2
  80da3c:	dfc00215 	stw	ra,8(sp)
  80da40:	80000015 	stw	zero,0(r16)
  80da44:	081017c0 	call	81017c <write>
  80da48:	00ffffc4 	movi	r3,-1
  80da4c:	10c00526 	beq	r2,r3,80da64 <_write_r+0x50>
  80da50:	dfc00217 	ldw	ra,8(sp)
  80da54:	dc400117 	ldw	r17,4(sp)
  80da58:	dc000017 	ldw	r16,0(sp)
  80da5c:	dec00304 	addi	sp,sp,12
  80da60:	f800283a 	ret
  80da64:	80c00017 	ldw	r3,0(r16)
  80da68:	183ff926 	beq	r3,zero,80da50 <__alt_data_end+0xff80da50>
  80da6c:	88c00015 	stw	r3,0(r17)
  80da70:	003ff706 	br	80da50 <__alt_data_end+0xff80da50>

0080da74 <_close_r>:
  80da74:	defffd04 	addi	sp,sp,-12
  80da78:	dc000015 	stw	r16,0(sp)
  80da7c:	04002074 	movhi	r16,129
  80da80:	dc400115 	stw	r17,4(sp)
  80da84:	8416fc04 	addi	r16,r16,23536
  80da88:	2023883a 	mov	r17,r4
  80da8c:	2809883a 	mov	r4,r5
  80da90:	dfc00215 	stw	ra,8(sp)
  80da94:	80000015 	stw	zero,0(r16)
  80da98:	080f8b80 	call	80f8b8 <close>
  80da9c:	00ffffc4 	movi	r3,-1
  80daa0:	10c00526 	beq	r2,r3,80dab8 <_close_r+0x44>
  80daa4:	dfc00217 	ldw	ra,8(sp)
  80daa8:	dc400117 	ldw	r17,4(sp)
  80daac:	dc000017 	ldw	r16,0(sp)
  80dab0:	dec00304 	addi	sp,sp,12
  80dab4:	f800283a 	ret
  80dab8:	80c00017 	ldw	r3,0(r16)
  80dabc:	183ff926 	beq	r3,zero,80daa4 <__alt_data_end+0xff80daa4>
  80dac0:	88c00015 	stw	r3,0(r17)
  80dac4:	003ff706 	br	80daa4 <__alt_data_end+0xff80daa4>

0080dac8 <_calloc_r>:
  80dac8:	298b383a 	mul	r5,r5,r6
  80dacc:	defffe04 	addi	sp,sp,-8
  80dad0:	dfc00115 	stw	ra,4(sp)
  80dad4:	dc000015 	stw	r16,0(sp)
  80dad8:	0809ed00 	call	809ed0 <_malloc_r>
  80dadc:	10002926 	beq	r2,zero,80db84 <_calloc_r+0xbc>
  80dae0:	11bfff17 	ldw	r6,-4(r2)
  80dae4:	1021883a 	mov	r16,r2
  80dae8:	00bfff04 	movi	r2,-4
  80daec:	308c703a 	and	r6,r6,r2
  80daf0:	00c00904 	movi	r3,36
  80daf4:	308d883a 	add	r6,r6,r2
  80daf8:	19801636 	bltu	r3,r6,80db54 <_calloc_r+0x8c>
  80dafc:	008004c4 	movi	r2,19
  80db00:	11800b2e 	bgeu	r2,r6,80db30 <_calloc_r+0x68>
  80db04:	80000015 	stw	zero,0(r16)
  80db08:	80000115 	stw	zero,4(r16)
  80db0c:	008006c4 	movi	r2,27
  80db10:	11801a2e 	bgeu	r2,r6,80db7c <_calloc_r+0xb4>
  80db14:	80000215 	stw	zero,8(r16)
  80db18:	80000315 	stw	zero,12(r16)
  80db1c:	30c0151e 	bne	r6,r3,80db74 <_calloc_r+0xac>
  80db20:	80000415 	stw	zero,16(r16)
  80db24:	80800604 	addi	r2,r16,24
  80db28:	80000515 	stw	zero,20(r16)
  80db2c:	00000106 	br	80db34 <_calloc_r+0x6c>
  80db30:	8005883a 	mov	r2,r16
  80db34:	10000015 	stw	zero,0(r2)
  80db38:	10000115 	stw	zero,4(r2)
  80db3c:	10000215 	stw	zero,8(r2)
  80db40:	8005883a 	mov	r2,r16
  80db44:	dfc00117 	ldw	ra,4(sp)
  80db48:	dc000017 	ldw	r16,0(sp)
  80db4c:	dec00204 	addi	sp,sp,8
  80db50:	f800283a 	ret
  80db54:	000b883a 	mov	r5,zero
  80db58:	8009883a 	mov	r4,r16
  80db5c:	080aa640 	call	80aa64 <memset>
  80db60:	8005883a 	mov	r2,r16
  80db64:	dfc00117 	ldw	ra,4(sp)
  80db68:	dc000017 	ldw	r16,0(sp)
  80db6c:	dec00204 	addi	sp,sp,8
  80db70:	f800283a 	ret
  80db74:	80800404 	addi	r2,r16,16
  80db78:	003fee06 	br	80db34 <__alt_data_end+0xff80db34>
  80db7c:	80800204 	addi	r2,r16,8
  80db80:	003fec06 	br	80db34 <__alt_data_end+0xff80db34>
  80db84:	0005883a 	mov	r2,zero
  80db88:	003fee06 	br	80db44 <__alt_data_end+0xff80db44>

0080db8c <_fclose_r>:
  80db8c:	28003926 	beq	r5,zero,80dc74 <_fclose_r+0xe8>
  80db90:	defffc04 	addi	sp,sp,-16
  80db94:	dc400115 	stw	r17,4(sp)
  80db98:	dc000015 	stw	r16,0(sp)
  80db9c:	dfc00315 	stw	ra,12(sp)
  80dba0:	dc800215 	stw	r18,8(sp)
  80dba4:	2023883a 	mov	r17,r4
  80dba8:	2821883a 	mov	r16,r5
  80dbac:	20000226 	beq	r4,zero,80dbb8 <_fclose_r+0x2c>
  80dbb0:	20800e17 	ldw	r2,56(r4)
  80dbb4:	10002726 	beq	r2,zero,80dc54 <_fclose_r+0xc8>
  80dbb8:	8080030f 	ldh	r2,12(r16)
  80dbbc:	1000071e 	bne	r2,zero,80dbdc <_fclose_r+0x50>
  80dbc0:	0005883a 	mov	r2,zero
  80dbc4:	dfc00317 	ldw	ra,12(sp)
  80dbc8:	dc800217 	ldw	r18,8(sp)
  80dbcc:	dc400117 	ldw	r17,4(sp)
  80dbd0:	dc000017 	ldw	r16,0(sp)
  80dbd4:	dec00404 	addi	sp,sp,16
  80dbd8:	f800283a 	ret
  80dbdc:	800b883a 	mov	r5,r16
  80dbe0:	8809883a 	mov	r4,r17
  80dbe4:	0808b780 	call	808b78 <__sflush_r>
  80dbe8:	1025883a 	mov	r18,r2
  80dbec:	80800b17 	ldw	r2,44(r16)
  80dbf0:	10000426 	beq	r2,zero,80dc04 <_fclose_r+0x78>
  80dbf4:	81400717 	ldw	r5,28(r16)
  80dbf8:	8809883a 	mov	r4,r17
  80dbfc:	103ee83a 	callr	r2
  80dc00:	10001616 	blt	r2,zero,80dc5c <_fclose_r+0xd0>
  80dc04:	8080030b 	ldhu	r2,12(r16)
  80dc08:	1080200c 	andi	r2,r2,128
  80dc0c:	1000151e 	bne	r2,zero,80dc64 <_fclose_r+0xd8>
  80dc10:	81400c17 	ldw	r5,48(r16)
  80dc14:	28000526 	beq	r5,zero,80dc2c <_fclose_r+0xa0>
  80dc18:	80801004 	addi	r2,r16,64
  80dc1c:	28800226 	beq	r5,r2,80dc28 <_fclose_r+0x9c>
  80dc20:	8809883a 	mov	r4,r17
  80dc24:	08092e40 	call	8092e4 <_free_r>
  80dc28:	80000c15 	stw	zero,48(r16)
  80dc2c:	81401117 	ldw	r5,68(r16)
  80dc30:	28000326 	beq	r5,zero,80dc40 <_fclose_r+0xb4>
  80dc34:	8809883a 	mov	r4,r17
  80dc38:	08092e40 	call	8092e4 <_free_r>
  80dc3c:	80001115 	stw	zero,68(r16)
  80dc40:	08091800 	call	809180 <__sfp_lock_acquire>
  80dc44:	8000030d 	sth	zero,12(r16)
  80dc48:	08091840 	call	809184 <__sfp_lock_release>
  80dc4c:	9005883a 	mov	r2,r18
  80dc50:	003fdc06 	br	80dbc4 <__alt_data_end+0xff80dbc4>
  80dc54:	08091700 	call	809170 <__sinit>
  80dc58:	003fd706 	br	80dbb8 <__alt_data_end+0xff80dbb8>
  80dc5c:	04bfffc4 	movi	r18,-1
  80dc60:	003fe806 	br	80dc04 <__alt_data_end+0xff80dc04>
  80dc64:	81400417 	ldw	r5,16(r16)
  80dc68:	8809883a 	mov	r4,r17
  80dc6c:	08092e40 	call	8092e4 <_free_r>
  80dc70:	003fe706 	br	80dc10 <__alt_data_end+0xff80dc10>
  80dc74:	0005883a 	mov	r2,zero
  80dc78:	f800283a 	ret

0080dc7c <fclose>:
  80dc7c:	00802074 	movhi	r2,129
  80dc80:	10902c04 	addi	r2,r2,16560
  80dc84:	200b883a 	mov	r5,r4
  80dc88:	11000017 	ldw	r4,0(r2)
  80dc8c:	080db8c1 	jmpi	80db8c <_fclose_r>

0080dc90 <__fputwc>:
  80dc90:	defff804 	addi	sp,sp,-32
  80dc94:	dcc00415 	stw	r19,16(sp)
  80dc98:	dc800315 	stw	r18,12(sp)
  80dc9c:	dc000115 	stw	r16,4(sp)
  80dca0:	dfc00715 	stw	ra,28(sp)
  80dca4:	dd400615 	stw	r21,24(sp)
  80dca8:	dd000515 	stw	r20,20(sp)
  80dcac:	dc400215 	stw	r17,8(sp)
  80dcb0:	2027883a 	mov	r19,r4
  80dcb4:	2825883a 	mov	r18,r5
  80dcb8:	3021883a 	mov	r16,r6
  80dcbc:	0809cc00 	call	809cc0 <__locale_mb_cur_max>
  80dcc0:	00c00044 	movi	r3,1
  80dcc4:	10c03e26 	beq	r2,r3,80ddc0 <__fputwc+0x130>
  80dcc8:	81c01704 	addi	r7,r16,92
  80dccc:	900d883a 	mov	r6,r18
  80dcd0:	d80b883a 	mov	r5,sp
  80dcd4:	9809883a 	mov	r4,r19
  80dcd8:	080e1600 	call	80e160 <_wcrtomb_r>
  80dcdc:	1029883a 	mov	r20,r2
  80dce0:	00bfffc4 	movi	r2,-1
  80dce4:	a0802026 	beq	r20,r2,80dd68 <__fputwc+0xd8>
  80dce8:	d9400003 	ldbu	r5,0(sp)
  80dcec:	a0001c26 	beq	r20,zero,80dd60 <__fputwc+0xd0>
  80dcf0:	0023883a 	mov	r17,zero
  80dcf4:	05400284 	movi	r21,10
  80dcf8:	00000906 	br	80dd20 <__fputwc+0x90>
  80dcfc:	80800017 	ldw	r2,0(r16)
  80dd00:	11400005 	stb	r5,0(r2)
  80dd04:	80c00017 	ldw	r3,0(r16)
  80dd08:	18c00044 	addi	r3,r3,1
  80dd0c:	80c00015 	stw	r3,0(r16)
  80dd10:	8c400044 	addi	r17,r17,1
  80dd14:	dc45883a 	add	r2,sp,r17
  80dd18:	8d00112e 	bgeu	r17,r20,80dd60 <__fputwc+0xd0>
  80dd1c:	11400003 	ldbu	r5,0(r2)
  80dd20:	80c00217 	ldw	r3,8(r16)
  80dd24:	18ffffc4 	addi	r3,r3,-1
  80dd28:	80c00215 	stw	r3,8(r16)
  80dd2c:	183ff30e 	bge	r3,zero,80dcfc <__alt_data_end+0xff80dcfc>
  80dd30:	80800617 	ldw	r2,24(r16)
  80dd34:	18801916 	blt	r3,r2,80dd9c <__fputwc+0x10c>
  80dd38:	80800017 	ldw	r2,0(r16)
  80dd3c:	11400005 	stb	r5,0(r2)
  80dd40:	80800017 	ldw	r2,0(r16)
  80dd44:	10c00003 	ldbu	r3,0(r2)
  80dd48:	10800044 	addi	r2,r2,1
  80dd4c:	1d402326 	beq	r3,r21,80dddc <__fputwc+0x14c>
  80dd50:	80800015 	stw	r2,0(r16)
  80dd54:	8c400044 	addi	r17,r17,1
  80dd58:	dc45883a 	add	r2,sp,r17
  80dd5c:	8d3fef36 	bltu	r17,r20,80dd1c <__alt_data_end+0xff80dd1c>
  80dd60:	9005883a 	mov	r2,r18
  80dd64:	00000406 	br	80dd78 <__fputwc+0xe8>
  80dd68:	80c0030b 	ldhu	r3,12(r16)
  80dd6c:	a005883a 	mov	r2,r20
  80dd70:	18c01014 	ori	r3,r3,64
  80dd74:	80c0030d 	sth	r3,12(r16)
  80dd78:	dfc00717 	ldw	ra,28(sp)
  80dd7c:	dd400617 	ldw	r21,24(sp)
  80dd80:	dd000517 	ldw	r20,20(sp)
  80dd84:	dcc00417 	ldw	r19,16(sp)
  80dd88:	dc800317 	ldw	r18,12(sp)
  80dd8c:	dc400217 	ldw	r17,8(sp)
  80dd90:	dc000117 	ldw	r16,4(sp)
  80dd94:	dec00804 	addi	sp,sp,32
  80dd98:	f800283a 	ret
  80dd9c:	800d883a 	mov	r6,r16
  80dda0:	29403fcc 	andi	r5,r5,255
  80dda4:	9809883a 	mov	r4,r19
  80dda8:	080e0080 	call	80e008 <__swbuf_r>
  80ddac:	10bfffe0 	cmpeqi	r2,r2,-1
  80ddb0:	10803fcc 	andi	r2,r2,255
  80ddb4:	103fd626 	beq	r2,zero,80dd10 <__alt_data_end+0xff80dd10>
  80ddb8:	00bfffc4 	movi	r2,-1
  80ddbc:	003fee06 	br	80dd78 <__alt_data_end+0xff80dd78>
  80ddc0:	90ffffc4 	addi	r3,r18,-1
  80ddc4:	01003f84 	movi	r4,254
  80ddc8:	20ffbf36 	bltu	r4,r3,80dcc8 <__alt_data_end+0xff80dcc8>
  80ddcc:	900b883a 	mov	r5,r18
  80ddd0:	dc800005 	stb	r18,0(sp)
  80ddd4:	1029883a 	mov	r20,r2
  80ddd8:	003fc506 	br	80dcf0 <__alt_data_end+0xff80dcf0>
  80dddc:	800d883a 	mov	r6,r16
  80dde0:	a80b883a 	mov	r5,r21
  80dde4:	9809883a 	mov	r4,r19
  80dde8:	080e0080 	call	80e008 <__swbuf_r>
  80ddec:	10bfffe0 	cmpeqi	r2,r2,-1
  80ddf0:	003fef06 	br	80ddb0 <__alt_data_end+0xff80ddb0>

0080ddf4 <_fputwc_r>:
  80ddf4:	3080030b 	ldhu	r2,12(r6)
  80ddf8:	10c8000c 	andi	r3,r2,8192
  80ddfc:	1800051e 	bne	r3,zero,80de14 <_fputwc_r+0x20>
  80de00:	30c01917 	ldw	r3,100(r6)
  80de04:	10880014 	ori	r2,r2,8192
  80de08:	3080030d 	sth	r2,12(r6)
  80de0c:	18880014 	ori	r2,r3,8192
  80de10:	30801915 	stw	r2,100(r6)
  80de14:	080dc901 	jmpi	80dc90 <__fputwc>

0080de18 <fputwc>:
  80de18:	00802074 	movhi	r2,129
  80de1c:	defffc04 	addi	sp,sp,-16
  80de20:	10902c04 	addi	r2,r2,16560
  80de24:	dc000115 	stw	r16,4(sp)
  80de28:	14000017 	ldw	r16,0(r2)
  80de2c:	dc400215 	stw	r17,8(sp)
  80de30:	dfc00315 	stw	ra,12(sp)
  80de34:	2023883a 	mov	r17,r4
  80de38:	80000226 	beq	r16,zero,80de44 <fputwc+0x2c>
  80de3c:	80800e17 	ldw	r2,56(r16)
  80de40:	10001026 	beq	r2,zero,80de84 <fputwc+0x6c>
  80de44:	2880030b 	ldhu	r2,12(r5)
  80de48:	10c8000c 	andi	r3,r2,8192
  80de4c:	1800051e 	bne	r3,zero,80de64 <fputwc+0x4c>
  80de50:	28c01917 	ldw	r3,100(r5)
  80de54:	10880014 	ori	r2,r2,8192
  80de58:	2880030d 	sth	r2,12(r5)
  80de5c:	18880014 	ori	r2,r3,8192
  80de60:	28801915 	stw	r2,100(r5)
  80de64:	280d883a 	mov	r6,r5
  80de68:	8009883a 	mov	r4,r16
  80de6c:	880b883a 	mov	r5,r17
  80de70:	dfc00317 	ldw	ra,12(sp)
  80de74:	dc400217 	ldw	r17,8(sp)
  80de78:	dc000117 	ldw	r16,4(sp)
  80de7c:	dec00404 	addi	sp,sp,16
  80de80:	080dc901 	jmpi	80dc90 <__fputwc>
  80de84:	8009883a 	mov	r4,r16
  80de88:	d9400015 	stw	r5,0(sp)
  80de8c:	08091700 	call	809170 <__sinit>
  80de90:	d9400017 	ldw	r5,0(sp)
  80de94:	003feb06 	br	80de44 <__alt_data_end+0xff80de44>

0080de98 <_fstat_r>:
  80de98:	defffd04 	addi	sp,sp,-12
  80de9c:	2805883a 	mov	r2,r5
  80dea0:	dc000015 	stw	r16,0(sp)
  80dea4:	04002074 	movhi	r16,129
  80dea8:	dc400115 	stw	r17,4(sp)
  80deac:	8416fc04 	addi	r16,r16,23536
  80deb0:	2023883a 	mov	r17,r4
  80deb4:	300b883a 	mov	r5,r6
  80deb8:	1009883a 	mov	r4,r2
  80debc:	dfc00215 	stw	ra,8(sp)
  80dec0:	80000015 	stw	zero,0(r16)
  80dec4:	080f9f00 	call	80f9f0 <fstat>
  80dec8:	00ffffc4 	movi	r3,-1
  80decc:	10c00526 	beq	r2,r3,80dee4 <_fstat_r+0x4c>
  80ded0:	dfc00217 	ldw	ra,8(sp)
  80ded4:	dc400117 	ldw	r17,4(sp)
  80ded8:	dc000017 	ldw	r16,0(sp)
  80dedc:	dec00304 	addi	sp,sp,12
  80dee0:	f800283a 	ret
  80dee4:	80c00017 	ldw	r3,0(r16)
  80dee8:	183ff926 	beq	r3,zero,80ded0 <__alt_data_end+0xff80ded0>
  80deec:	88c00015 	stw	r3,0(r17)
  80def0:	003ff706 	br	80ded0 <__alt_data_end+0xff80ded0>

0080def4 <_isatty_r>:
  80def4:	defffd04 	addi	sp,sp,-12
  80def8:	dc000015 	stw	r16,0(sp)
  80defc:	04002074 	movhi	r16,129
  80df00:	dc400115 	stw	r17,4(sp)
  80df04:	8416fc04 	addi	r16,r16,23536
  80df08:	2023883a 	mov	r17,r4
  80df0c:	2809883a 	mov	r4,r5
  80df10:	dfc00215 	stw	ra,8(sp)
  80df14:	80000015 	stw	zero,0(r16)
  80df18:	080fadc0 	call	80fadc <isatty>
  80df1c:	00ffffc4 	movi	r3,-1
  80df20:	10c00526 	beq	r2,r3,80df38 <_isatty_r+0x44>
  80df24:	dfc00217 	ldw	ra,8(sp)
  80df28:	dc400117 	ldw	r17,4(sp)
  80df2c:	dc000017 	ldw	r16,0(sp)
  80df30:	dec00304 	addi	sp,sp,12
  80df34:	f800283a 	ret
  80df38:	80c00017 	ldw	r3,0(r16)
  80df3c:	183ff926 	beq	r3,zero,80df24 <__alt_data_end+0xff80df24>
  80df40:	88c00015 	stw	r3,0(r17)
  80df44:	003ff706 	br	80df24 <__alt_data_end+0xff80df24>

0080df48 <_lseek_r>:
  80df48:	defffd04 	addi	sp,sp,-12
  80df4c:	2805883a 	mov	r2,r5
  80df50:	dc000015 	stw	r16,0(sp)
  80df54:	04002074 	movhi	r16,129
  80df58:	dc400115 	stw	r17,4(sp)
  80df5c:	300b883a 	mov	r5,r6
  80df60:	8416fc04 	addi	r16,r16,23536
  80df64:	2023883a 	mov	r17,r4
  80df68:	380d883a 	mov	r6,r7
  80df6c:	1009883a 	mov	r4,r2
  80df70:	dfc00215 	stw	ra,8(sp)
  80df74:	80000015 	stw	zero,0(r16)
  80df78:	080fca80 	call	80fca8 <lseek>
  80df7c:	00ffffc4 	movi	r3,-1
  80df80:	10c00526 	beq	r2,r3,80df98 <_lseek_r+0x50>
  80df84:	dfc00217 	ldw	ra,8(sp)
  80df88:	dc400117 	ldw	r17,4(sp)
  80df8c:	dc000017 	ldw	r16,0(sp)
  80df90:	dec00304 	addi	sp,sp,12
  80df94:	f800283a 	ret
  80df98:	80c00017 	ldw	r3,0(r16)
  80df9c:	183ff926 	beq	r3,zero,80df84 <__alt_data_end+0xff80df84>
  80dfa0:	88c00015 	stw	r3,0(r17)
  80dfa4:	003ff706 	br	80df84 <__alt_data_end+0xff80df84>

0080dfa8 <_read_r>:
  80dfa8:	defffd04 	addi	sp,sp,-12
  80dfac:	2805883a 	mov	r2,r5
  80dfb0:	dc000015 	stw	r16,0(sp)
  80dfb4:	04002074 	movhi	r16,129
  80dfb8:	dc400115 	stw	r17,4(sp)
  80dfbc:	300b883a 	mov	r5,r6
  80dfc0:	8416fc04 	addi	r16,r16,23536
  80dfc4:	2023883a 	mov	r17,r4
  80dfc8:	380d883a 	mov	r6,r7
  80dfcc:	1009883a 	mov	r4,r2
  80dfd0:	dfc00215 	stw	ra,8(sp)
  80dfd4:	80000015 	stw	zero,0(r16)
  80dfd8:	080fe7c0 	call	80fe7c <read>
  80dfdc:	00ffffc4 	movi	r3,-1
  80dfe0:	10c00526 	beq	r2,r3,80dff8 <_read_r+0x50>
  80dfe4:	dfc00217 	ldw	ra,8(sp)
  80dfe8:	dc400117 	ldw	r17,4(sp)
  80dfec:	dc000017 	ldw	r16,0(sp)
  80dff0:	dec00304 	addi	sp,sp,12
  80dff4:	f800283a 	ret
  80dff8:	80c00017 	ldw	r3,0(r16)
  80dffc:	183ff926 	beq	r3,zero,80dfe4 <__alt_data_end+0xff80dfe4>
  80e000:	88c00015 	stw	r3,0(r17)
  80e004:	003ff706 	br	80dfe4 <__alt_data_end+0xff80dfe4>

0080e008 <__swbuf_r>:
  80e008:	defffb04 	addi	sp,sp,-20
  80e00c:	dcc00315 	stw	r19,12(sp)
  80e010:	dc800215 	stw	r18,8(sp)
  80e014:	dc000015 	stw	r16,0(sp)
  80e018:	dfc00415 	stw	ra,16(sp)
  80e01c:	dc400115 	stw	r17,4(sp)
  80e020:	2025883a 	mov	r18,r4
  80e024:	2827883a 	mov	r19,r5
  80e028:	3021883a 	mov	r16,r6
  80e02c:	20000226 	beq	r4,zero,80e038 <__swbuf_r+0x30>
  80e030:	20800e17 	ldw	r2,56(r4)
  80e034:	10004226 	beq	r2,zero,80e140 <__swbuf_r+0x138>
  80e038:	80800617 	ldw	r2,24(r16)
  80e03c:	8100030b 	ldhu	r4,12(r16)
  80e040:	80800215 	stw	r2,8(r16)
  80e044:	2080020c 	andi	r2,r4,8
  80e048:	10003626 	beq	r2,zero,80e124 <__swbuf_r+0x11c>
  80e04c:	80c00417 	ldw	r3,16(r16)
  80e050:	18003426 	beq	r3,zero,80e124 <__swbuf_r+0x11c>
  80e054:	2088000c 	andi	r2,r4,8192
  80e058:	9c403fcc 	andi	r17,r19,255
  80e05c:	10001a26 	beq	r2,zero,80e0c8 <__swbuf_r+0xc0>
  80e060:	80800017 	ldw	r2,0(r16)
  80e064:	81000517 	ldw	r4,20(r16)
  80e068:	10c7c83a 	sub	r3,r2,r3
  80e06c:	1900200e 	bge	r3,r4,80e0f0 <__swbuf_r+0xe8>
  80e070:	18c00044 	addi	r3,r3,1
  80e074:	81000217 	ldw	r4,8(r16)
  80e078:	11400044 	addi	r5,r2,1
  80e07c:	81400015 	stw	r5,0(r16)
  80e080:	213fffc4 	addi	r4,r4,-1
  80e084:	81000215 	stw	r4,8(r16)
  80e088:	14c00005 	stb	r19,0(r2)
  80e08c:	80800517 	ldw	r2,20(r16)
  80e090:	10c01e26 	beq	r2,r3,80e10c <__swbuf_r+0x104>
  80e094:	8080030b 	ldhu	r2,12(r16)
  80e098:	1080004c 	andi	r2,r2,1
  80e09c:	10000226 	beq	r2,zero,80e0a8 <__swbuf_r+0xa0>
  80e0a0:	00800284 	movi	r2,10
  80e0a4:	88801926 	beq	r17,r2,80e10c <__swbuf_r+0x104>
  80e0a8:	8805883a 	mov	r2,r17
  80e0ac:	dfc00417 	ldw	ra,16(sp)
  80e0b0:	dcc00317 	ldw	r19,12(sp)
  80e0b4:	dc800217 	ldw	r18,8(sp)
  80e0b8:	dc400117 	ldw	r17,4(sp)
  80e0bc:	dc000017 	ldw	r16,0(sp)
  80e0c0:	dec00504 	addi	sp,sp,20
  80e0c4:	f800283a 	ret
  80e0c8:	81401917 	ldw	r5,100(r16)
  80e0cc:	00b7ffc4 	movi	r2,-8193
  80e0d0:	21080014 	ori	r4,r4,8192
  80e0d4:	2884703a 	and	r2,r5,r2
  80e0d8:	80801915 	stw	r2,100(r16)
  80e0dc:	80800017 	ldw	r2,0(r16)
  80e0e0:	8100030d 	sth	r4,12(r16)
  80e0e4:	81000517 	ldw	r4,20(r16)
  80e0e8:	10c7c83a 	sub	r3,r2,r3
  80e0ec:	193fe016 	blt	r3,r4,80e070 <__alt_data_end+0xff80e070>
  80e0f0:	800b883a 	mov	r5,r16
  80e0f4:	9009883a 	mov	r4,r18
  80e0f8:	0808d940 	call	808d94 <_fflush_r>
  80e0fc:	1000071e 	bne	r2,zero,80e11c <__swbuf_r+0x114>
  80e100:	80800017 	ldw	r2,0(r16)
  80e104:	00c00044 	movi	r3,1
  80e108:	003fda06 	br	80e074 <__alt_data_end+0xff80e074>
  80e10c:	800b883a 	mov	r5,r16
  80e110:	9009883a 	mov	r4,r18
  80e114:	0808d940 	call	808d94 <_fflush_r>
  80e118:	103fe326 	beq	r2,zero,80e0a8 <__alt_data_end+0xff80e0a8>
  80e11c:	00bfffc4 	movi	r2,-1
  80e120:	003fe206 	br	80e0ac <__alt_data_end+0xff80e0ac>
  80e124:	800b883a 	mov	r5,r16
  80e128:	9009883a 	mov	r4,r18
  80e12c:	080719c0 	call	80719c <__swsetup_r>
  80e130:	103ffa1e 	bne	r2,zero,80e11c <__alt_data_end+0xff80e11c>
  80e134:	8100030b 	ldhu	r4,12(r16)
  80e138:	80c00417 	ldw	r3,16(r16)
  80e13c:	003fc506 	br	80e054 <__alt_data_end+0xff80e054>
  80e140:	08091700 	call	809170 <__sinit>
  80e144:	003fbc06 	br	80e038 <__alt_data_end+0xff80e038>

0080e148 <__swbuf>:
  80e148:	00802074 	movhi	r2,129
  80e14c:	10902c04 	addi	r2,r2,16560
  80e150:	280d883a 	mov	r6,r5
  80e154:	200b883a 	mov	r5,r4
  80e158:	11000017 	ldw	r4,0(r2)
  80e15c:	080e0081 	jmpi	80e008 <__swbuf_r>

0080e160 <_wcrtomb_r>:
  80e160:	defff604 	addi	sp,sp,-40
  80e164:	00802074 	movhi	r2,129
  80e168:	dc800815 	stw	r18,32(sp)
  80e16c:	dc400715 	stw	r17,28(sp)
  80e170:	dc000615 	stw	r16,24(sp)
  80e174:	10903004 	addi	r2,r2,16576
  80e178:	dfc00915 	stw	ra,36(sp)
  80e17c:	2021883a 	mov	r16,r4
  80e180:	3823883a 	mov	r17,r7
  80e184:	14800017 	ldw	r18,0(r2)
  80e188:	28001426 	beq	r5,zero,80e1dc <_wcrtomb_r+0x7c>
  80e18c:	d9400415 	stw	r5,16(sp)
  80e190:	d9800515 	stw	r6,20(sp)
  80e194:	0809cb40 	call	809cb4 <__locale_charset>
  80e198:	d9800517 	ldw	r6,20(sp)
  80e19c:	d9400417 	ldw	r5,16(sp)
  80e1a0:	100f883a 	mov	r7,r2
  80e1a4:	dc400015 	stw	r17,0(sp)
  80e1a8:	8009883a 	mov	r4,r16
  80e1ac:	903ee83a 	callr	r18
  80e1b0:	00ffffc4 	movi	r3,-1
  80e1b4:	10c0031e 	bne	r2,r3,80e1c4 <_wcrtomb_r+0x64>
  80e1b8:	88000015 	stw	zero,0(r17)
  80e1bc:	00c02284 	movi	r3,138
  80e1c0:	80c00015 	stw	r3,0(r16)
  80e1c4:	dfc00917 	ldw	ra,36(sp)
  80e1c8:	dc800817 	ldw	r18,32(sp)
  80e1cc:	dc400717 	ldw	r17,28(sp)
  80e1d0:	dc000617 	ldw	r16,24(sp)
  80e1d4:	dec00a04 	addi	sp,sp,40
  80e1d8:	f800283a 	ret
  80e1dc:	0809cb40 	call	809cb4 <__locale_charset>
  80e1e0:	100f883a 	mov	r7,r2
  80e1e4:	dc400015 	stw	r17,0(sp)
  80e1e8:	000d883a 	mov	r6,zero
  80e1ec:	d9400104 	addi	r5,sp,4
  80e1f0:	8009883a 	mov	r4,r16
  80e1f4:	903ee83a 	callr	r18
  80e1f8:	003fed06 	br	80e1b0 <__alt_data_end+0xff80e1b0>

0080e1fc <wcrtomb>:
  80e1fc:	defff604 	addi	sp,sp,-40
  80e200:	00802074 	movhi	r2,129
  80e204:	dc800615 	stw	r18,24(sp)
  80e208:	dc400515 	stw	r17,20(sp)
  80e20c:	10902c04 	addi	r2,r2,16560
  80e210:	dfc00915 	stw	ra,36(sp)
  80e214:	dd000815 	stw	r20,32(sp)
  80e218:	dcc00715 	stw	r19,28(sp)
  80e21c:	dc000415 	stw	r16,16(sp)
  80e220:	3025883a 	mov	r18,r6
  80e224:	14400017 	ldw	r17,0(r2)
  80e228:	20001926 	beq	r4,zero,80e290 <wcrtomb+0x94>
  80e22c:	00802074 	movhi	r2,129
  80e230:	10903004 	addi	r2,r2,16576
  80e234:	15000017 	ldw	r20,0(r2)
  80e238:	2021883a 	mov	r16,r4
  80e23c:	2827883a 	mov	r19,r5
  80e240:	0809cb40 	call	809cb4 <__locale_charset>
  80e244:	100f883a 	mov	r7,r2
  80e248:	dc800015 	stw	r18,0(sp)
  80e24c:	980d883a 	mov	r6,r19
  80e250:	800b883a 	mov	r5,r16
  80e254:	8809883a 	mov	r4,r17
  80e258:	a03ee83a 	callr	r20
  80e25c:	00ffffc4 	movi	r3,-1
  80e260:	10c0031e 	bne	r2,r3,80e270 <wcrtomb+0x74>
  80e264:	90000015 	stw	zero,0(r18)
  80e268:	00c02284 	movi	r3,138
  80e26c:	88c00015 	stw	r3,0(r17)
  80e270:	dfc00917 	ldw	ra,36(sp)
  80e274:	dd000817 	ldw	r20,32(sp)
  80e278:	dcc00717 	ldw	r19,28(sp)
  80e27c:	dc800617 	ldw	r18,24(sp)
  80e280:	dc400517 	ldw	r17,20(sp)
  80e284:	dc000417 	ldw	r16,16(sp)
  80e288:	dec00a04 	addi	sp,sp,40
  80e28c:	f800283a 	ret
  80e290:	00802074 	movhi	r2,129
  80e294:	10903004 	addi	r2,r2,16576
  80e298:	14000017 	ldw	r16,0(r2)
  80e29c:	0809cb40 	call	809cb4 <__locale_charset>
  80e2a0:	100f883a 	mov	r7,r2
  80e2a4:	dc800015 	stw	r18,0(sp)
  80e2a8:	000d883a 	mov	r6,zero
  80e2ac:	d9400104 	addi	r5,sp,4
  80e2b0:	8809883a 	mov	r4,r17
  80e2b4:	803ee83a 	callr	r16
  80e2b8:	003fe806 	br	80e25c <__alt_data_end+0xff80e25c>

0080e2bc <__ascii_wctomb>:
  80e2bc:	28000526 	beq	r5,zero,80e2d4 <__ascii_wctomb+0x18>
  80e2c0:	00803fc4 	movi	r2,255
  80e2c4:	11800536 	bltu	r2,r6,80e2dc <__ascii_wctomb+0x20>
  80e2c8:	29800005 	stb	r6,0(r5)
  80e2cc:	00800044 	movi	r2,1
  80e2d0:	f800283a 	ret
  80e2d4:	0005883a 	mov	r2,zero
  80e2d8:	f800283a 	ret
  80e2dc:	00802284 	movi	r2,138
  80e2e0:	20800015 	stw	r2,0(r4)
  80e2e4:	00bfffc4 	movi	r2,-1
  80e2e8:	f800283a 	ret

0080e2ec <_wctomb_r>:
  80e2ec:	00802074 	movhi	r2,129
  80e2f0:	defff904 	addi	sp,sp,-28
  80e2f4:	10903004 	addi	r2,r2,16576
  80e2f8:	dfc00615 	stw	ra,24(sp)
  80e2fc:	dc400515 	stw	r17,20(sp)
  80e300:	dc000415 	stw	r16,16(sp)
  80e304:	3823883a 	mov	r17,r7
  80e308:	14000017 	ldw	r16,0(r2)
  80e30c:	d9000115 	stw	r4,4(sp)
  80e310:	d9400215 	stw	r5,8(sp)
  80e314:	d9800315 	stw	r6,12(sp)
  80e318:	0809cb40 	call	809cb4 <__locale_charset>
  80e31c:	d9800317 	ldw	r6,12(sp)
  80e320:	d9400217 	ldw	r5,8(sp)
  80e324:	d9000117 	ldw	r4,4(sp)
  80e328:	100f883a 	mov	r7,r2
  80e32c:	dc400015 	stw	r17,0(sp)
  80e330:	803ee83a 	callr	r16
  80e334:	dfc00617 	ldw	ra,24(sp)
  80e338:	dc400517 	ldw	r17,20(sp)
  80e33c:	dc000417 	ldw	r16,16(sp)
  80e340:	dec00704 	addi	sp,sp,28
  80e344:	f800283a 	ret

0080e348 <__udivdi3>:
  80e348:	defff504 	addi	sp,sp,-44
  80e34c:	dcc00415 	stw	r19,16(sp)
  80e350:	dc000115 	stw	r16,4(sp)
  80e354:	dfc00a15 	stw	ra,40(sp)
  80e358:	df000915 	stw	fp,36(sp)
  80e35c:	ddc00815 	stw	r23,32(sp)
  80e360:	dd800715 	stw	r22,28(sp)
  80e364:	dd400615 	stw	r21,24(sp)
  80e368:	dd000515 	stw	r20,20(sp)
  80e36c:	dc800315 	stw	r18,12(sp)
  80e370:	dc400215 	stw	r17,8(sp)
  80e374:	2027883a 	mov	r19,r4
  80e378:	2821883a 	mov	r16,r5
  80e37c:	3800411e 	bne	r7,zero,80e484 <__udivdi3+0x13c>
  80e380:	3023883a 	mov	r17,r6
  80e384:	2025883a 	mov	r18,r4
  80e388:	2980522e 	bgeu	r5,r6,80e4d4 <__udivdi3+0x18c>
  80e38c:	00bfffd4 	movui	r2,65535
  80e390:	282d883a 	mov	r22,r5
  80e394:	1180a836 	bltu	r2,r6,80e638 <__udivdi3+0x2f0>
  80e398:	00803fc4 	movi	r2,255
  80e39c:	1185803a 	cmpltu	r2,r2,r6
  80e3a0:	100490fa 	slli	r2,r2,3
  80e3a4:	3086d83a 	srl	r3,r6,r2
  80e3a8:	01002074 	movhi	r4,129
  80e3ac:	2108c204 	addi	r4,r4,8968
  80e3b0:	20c7883a 	add	r3,r4,r3
  80e3b4:	18c00003 	ldbu	r3,0(r3)
  80e3b8:	1885883a 	add	r2,r3,r2
  80e3bc:	00c00804 	movi	r3,32
  80e3c0:	1887c83a 	sub	r3,r3,r2
  80e3c4:	18000526 	beq	r3,zero,80e3dc <__udivdi3+0x94>
  80e3c8:	80e0983a 	sll	r16,r16,r3
  80e3cc:	9884d83a 	srl	r2,r19,r2
  80e3d0:	30e2983a 	sll	r17,r6,r3
  80e3d4:	98e4983a 	sll	r18,r19,r3
  80e3d8:	142cb03a 	or	r22,r2,r16
  80e3dc:	882ad43a 	srli	r21,r17,16
  80e3e0:	b009883a 	mov	r4,r22
  80e3e4:	8d3fffcc 	andi	r20,r17,65535
  80e3e8:	a80b883a 	mov	r5,r21
  80e3ec:	0802ba40 	call	802ba4 <__umodsi3>
  80e3f0:	b009883a 	mov	r4,r22
  80e3f4:	a80b883a 	mov	r5,r21
  80e3f8:	1027883a 	mov	r19,r2
  80e3fc:	0802b400 	call	802b40 <__udivsi3>
  80e400:	102d883a 	mov	r22,r2
  80e404:	9826943a 	slli	r19,r19,16
  80e408:	9004d43a 	srli	r2,r18,16
  80e40c:	a5a1383a 	mul	r16,r20,r22
  80e410:	14c4b03a 	or	r2,r2,r19
  80e414:	1400052e 	bgeu	r2,r16,80e42c <__udivdi3+0xe4>
  80e418:	1445883a 	add	r2,r2,r17
  80e41c:	b0ffffc4 	addi	r3,r22,-1
  80e420:	14400136 	bltu	r2,r17,80e428 <__udivdi3+0xe0>
  80e424:	14012336 	bltu	r2,r16,80e8b4 <__udivdi3+0x56c>
  80e428:	182d883a 	mov	r22,r3
  80e42c:	1421c83a 	sub	r16,r2,r16
  80e430:	a80b883a 	mov	r5,r21
  80e434:	8009883a 	mov	r4,r16
  80e438:	0802ba40 	call	802ba4 <__umodsi3>
  80e43c:	1027883a 	mov	r19,r2
  80e440:	a80b883a 	mov	r5,r21
  80e444:	8009883a 	mov	r4,r16
  80e448:	0802b400 	call	802b40 <__udivsi3>
  80e44c:	9826943a 	slli	r19,r19,16
  80e450:	a0a9383a 	mul	r20,r20,r2
  80e454:	94bfffcc 	andi	r18,r18,65535
  80e458:	94e4b03a 	or	r18,r18,r19
  80e45c:	9500052e 	bgeu	r18,r20,80e474 <__udivdi3+0x12c>
  80e460:	8ca5883a 	add	r18,r17,r18
  80e464:	10ffffc4 	addi	r3,r2,-1
  80e468:	9440f136 	bltu	r18,r17,80e830 <__udivdi3+0x4e8>
  80e46c:	9500f02e 	bgeu	r18,r20,80e830 <__udivdi3+0x4e8>
  80e470:	10bfff84 	addi	r2,r2,-2
  80e474:	b00c943a 	slli	r6,r22,16
  80e478:	0007883a 	mov	r3,zero
  80e47c:	3084b03a 	or	r2,r6,r2
  80e480:	00005906 	br	80e5e8 <__udivdi3+0x2a0>
  80e484:	29c05636 	bltu	r5,r7,80e5e0 <__udivdi3+0x298>
  80e488:	00bfffd4 	movui	r2,65535
  80e48c:	11c0622e 	bgeu	r2,r7,80e618 <__udivdi3+0x2d0>
  80e490:	00804034 	movhi	r2,256
  80e494:	10bfffc4 	addi	r2,r2,-1
  80e498:	11c0ee36 	bltu	r2,r7,80e854 <__udivdi3+0x50c>
  80e49c:	00800404 	movi	r2,16
  80e4a0:	3886d83a 	srl	r3,r7,r2
  80e4a4:	01002074 	movhi	r4,129
  80e4a8:	2108c204 	addi	r4,r4,8968
  80e4ac:	20c7883a 	add	r3,r4,r3
  80e4b0:	18c00003 	ldbu	r3,0(r3)
  80e4b4:	05400804 	movi	r21,32
  80e4b8:	1885883a 	add	r2,r3,r2
  80e4bc:	a8abc83a 	sub	r21,r21,r2
  80e4c0:	a800621e 	bne	r21,zero,80e64c <__udivdi3+0x304>
  80e4c4:	3c00e936 	bltu	r7,r16,80e86c <__udivdi3+0x524>
  80e4c8:	9985403a 	cmpgeu	r2,r19,r6
  80e4cc:	0007883a 	mov	r3,zero
  80e4d0:	00004506 	br	80e5e8 <__udivdi3+0x2a0>
  80e4d4:	3000041e 	bne	r6,zero,80e4e8 <__udivdi3+0x1a0>
  80e4d8:	000b883a 	mov	r5,zero
  80e4dc:	01000044 	movi	r4,1
  80e4e0:	0802b400 	call	802b40 <__udivsi3>
  80e4e4:	1023883a 	mov	r17,r2
  80e4e8:	00bfffd4 	movui	r2,65535
  80e4ec:	14404e2e 	bgeu	r2,r17,80e628 <__udivdi3+0x2e0>
  80e4f0:	00804034 	movhi	r2,256
  80e4f4:	10bfffc4 	addi	r2,r2,-1
  80e4f8:	1440d836 	bltu	r2,r17,80e85c <__udivdi3+0x514>
  80e4fc:	00800404 	movi	r2,16
  80e500:	8886d83a 	srl	r3,r17,r2
  80e504:	01002074 	movhi	r4,129
  80e508:	2108c204 	addi	r4,r4,8968
  80e50c:	20c7883a 	add	r3,r4,r3
  80e510:	18c00003 	ldbu	r3,0(r3)
  80e514:	1885883a 	add	r2,r3,r2
  80e518:	00c00804 	movi	r3,32
  80e51c:	1887c83a 	sub	r3,r3,r2
  80e520:	18008f1e 	bne	r3,zero,80e760 <__udivdi3+0x418>
  80e524:	882ad43a 	srli	r21,r17,16
  80e528:	8461c83a 	sub	r16,r16,r17
  80e52c:	8d3fffcc 	andi	r20,r17,65535
  80e530:	00c00044 	movi	r3,1
  80e534:	8009883a 	mov	r4,r16
  80e538:	a80b883a 	mov	r5,r21
  80e53c:	d8c00015 	stw	r3,0(sp)
  80e540:	0802ba40 	call	802ba4 <__umodsi3>
  80e544:	8009883a 	mov	r4,r16
  80e548:	a80b883a 	mov	r5,r21
  80e54c:	1027883a 	mov	r19,r2
  80e550:	0802b400 	call	802b40 <__udivsi3>
  80e554:	9826943a 	slli	r19,r19,16
  80e558:	9008d43a 	srli	r4,r18,16
  80e55c:	1521383a 	mul	r16,r2,r20
  80e560:	102d883a 	mov	r22,r2
  80e564:	24c8b03a 	or	r4,r4,r19
  80e568:	d8c00017 	ldw	r3,0(sp)
  80e56c:	2400052e 	bgeu	r4,r16,80e584 <__udivdi3+0x23c>
  80e570:	2449883a 	add	r4,r4,r17
  80e574:	b0bfffc4 	addi	r2,r22,-1
  80e578:	24400136 	bltu	r4,r17,80e580 <__udivdi3+0x238>
  80e57c:	2400ca36 	bltu	r4,r16,80e8a8 <__udivdi3+0x560>
  80e580:	102d883a 	mov	r22,r2
  80e584:	2421c83a 	sub	r16,r4,r16
  80e588:	a80b883a 	mov	r5,r21
  80e58c:	8009883a 	mov	r4,r16
  80e590:	d8c00015 	stw	r3,0(sp)
  80e594:	0802ba40 	call	802ba4 <__umodsi3>
  80e598:	1027883a 	mov	r19,r2
  80e59c:	a80b883a 	mov	r5,r21
  80e5a0:	8009883a 	mov	r4,r16
  80e5a4:	0802b400 	call	802b40 <__udivsi3>
  80e5a8:	9826943a 	slli	r19,r19,16
  80e5ac:	1529383a 	mul	r20,r2,r20
  80e5b0:	94bfffcc 	andi	r18,r18,65535
  80e5b4:	94e4b03a 	or	r18,r18,r19
  80e5b8:	d8c00017 	ldw	r3,0(sp)
  80e5bc:	9500052e 	bgeu	r18,r20,80e5d4 <__udivdi3+0x28c>
  80e5c0:	8ca5883a 	add	r18,r17,r18
  80e5c4:	113fffc4 	addi	r4,r2,-1
  80e5c8:	94409736 	bltu	r18,r17,80e828 <__udivdi3+0x4e0>
  80e5cc:	9500962e 	bgeu	r18,r20,80e828 <__udivdi3+0x4e0>
  80e5d0:	10bfff84 	addi	r2,r2,-2
  80e5d4:	b00c943a 	slli	r6,r22,16
  80e5d8:	3084b03a 	or	r2,r6,r2
  80e5dc:	00000206 	br	80e5e8 <__udivdi3+0x2a0>
  80e5e0:	0007883a 	mov	r3,zero
  80e5e4:	0005883a 	mov	r2,zero
  80e5e8:	dfc00a17 	ldw	ra,40(sp)
  80e5ec:	df000917 	ldw	fp,36(sp)
  80e5f0:	ddc00817 	ldw	r23,32(sp)
  80e5f4:	dd800717 	ldw	r22,28(sp)
  80e5f8:	dd400617 	ldw	r21,24(sp)
  80e5fc:	dd000517 	ldw	r20,20(sp)
  80e600:	dcc00417 	ldw	r19,16(sp)
  80e604:	dc800317 	ldw	r18,12(sp)
  80e608:	dc400217 	ldw	r17,8(sp)
  80e60c:	dc000117 	ldw	r16,4(sp)
  80e610:	dec00b04 	addi	sp,sp,44
  80e614:	f800283a 	ret
  80e618:	00803fc4 	movi	r2,255
  80e61c:	11c5803a 	cmpltu	r2,r2,r7
  80e620:	100490fa 	slli	r2,r2,3
  80e624:	003f9e06 	br	80e4a0 <__alt_data_end+0xff80e4a0>
  80e628:	00803fc4 	movi	r2,255
  80e62c:	1445803a 	cmpltu	r2,r2,r17
  80e630:	100490fa 	slli	r2,r2,3
  80e634:	003fb206 	br	80e500 <__alt_data_end+0xff80e500>
  80e638:	00804034 	movhi	r2,256
  80e63c:	10bfffc4 	addi	r2,r2,-1
  80e640:	11808836 	bltu	r2,r6,80e864 <__udivdi3+0x51c>
  80e644:	00800404 	movi	r2,16
  80e648:	003f5606 	br	80e3a4 <__alt_data_end+0xff80e3a4>
  80e64c:	30aed83a 	srl	r23,r6,r2
  80e650:	3d4e983a 	sll	r7,r7,r21
  80e654:	80acd83a 	srl	r22,r16,r2
  80e658:	9884d83a 	srl	r2,r19,r2
  80e65c:	3deeb03a 	or	r23,r7,r23
  80e660:	b824d43a 	srli	r18,r23,16
  80e664:	8560983a 	sll	r16,r16,r21
  80e668:	b009883a 	mov	r4,r22
  80e66c:	900b883a 	mov	r5,r18
  80e670:	3568983a 	sll	r20,r6,r21
  80e674:	1420b03a 	or	r16,r2,r16
  80e678:	0802ba40 	call	802ba4 <__umodsi3>
  80e67c:	b009883a 	mov	r4,r22
  80e680:	900b883a 	mov	r5,r18
  80e684:	1023883a 	mov	r17,r2
  80e688:	0802b400 	call	802b40 <__udivsi3>
  80e68c:	8808943a 	slli	r4,r17,16
  80e690:	bf3fffcc 	andi	fp,r23,65535
  80e694:	8006d43a 	srli	r3,r16,16
  80e698:	e0a3383a 	mul	r17,fp,r2
  80e69c:	100d883a 	mov	r6,r2
  80e6a0:	1906b03a 	or	r3,r3,r4
  80e6a4:	1c40042e 	bgeu	r3,r17,80e6b8 <__udivdi3+0x370>
  80e6a8:	1dc7883a 	add	r3,r3,r23
  80e6ac:	10bfffc4 	addi	r2,r2,-1
  80e6b0:	1dc0752e 	bgeu	r3,r23,80e888 <__udivdi3+0x540>
  80e6b4:	100d883a 	mov	r6,r2
  80e6b8:	1c63c83a 	sub	r17,r3,r17
  80e6bc:	900b883a 	mov	r5,r18
  80e6c0:	8809883a 	mov	r4,r17
  80e6c4:	d9800015 	stw	r6,0(sp)
  80e6c8:	0802ba40 	call	802ba4 <__umodsi3>
  80e6cc:	102d883a 	mov	r22,r2
  80e6d0:	8809883a 	mov	r4,r17
  80e6d4:	900b883a 	mov	r5,r18
  80e6d8:	0802b400 	call	802b40 <__udivsi3>
  80e6dc:	b02c943a 	slli	r22,r22,16
  80e6e0:	e089383a 	mul	r4,fp,r2
  80e6e4:	843fffcc 	andi	r16,r16,65535
  80e6e8:	85a0b03a 	or	r16,r16,r22
  80e6ec:	d9800017 	ldw	r6,0(sp)
  80e6f0:	8100042e 	bgeu	r16,r4,80e704 <__udivdi3+0x3bc>
  80e6f4:	85e1883a 	add	r16,r16,r23
  80e6f8:	10ffffc4 	addi	r3,r2,-1
  80e6fc:	85c05e2e 	bgeu	r16,r23,80e878 <__udivdi3+0x530>
  80e700:	1805883a 	mov	r2,r3
  80e704:	300c943a 	slli	r6,r6,16
  80e708:	a17fffcc 	andi	r5,r20,65535
  80e70c:	a028d43a 	srli	r20,r20,16
  80e710:	3084b03a 	or	r2,r6,r2
  80e714:	10ffffcc 	andi	r3,r2,65535
  80e718:	100cd43a 	srli	r6,r2,16
  80e71c:	194f383a 	mul	r7,r3,r5
  80e720:	1d07383a 	mul	r3,r3,r20
  80e724:	314b383a 	mul	r5,r6,r5
  80e728:	3810d43a 	srli	r8,r7,16
  80e72c:	8121c83a 	sub	r16,r16,r4
  80e730:	1947883a 	add	r3,r3,r5
  80e734:	40c7883a 	add	r3,r8,r3
  80e738:	350d383a 	mul	r6,r6,r20
  80e73c:	1940022e 	bgeu	r3,r5,80e748 <__udivdi3+0x400>
  80e740:	01000074 	movhi	r4,1
  80e744:	310d883a 	add	r6,r6,r4
  80e748:	1828d43a 	srli	r20,r3,16
  80e74c:	a18d883a 	add	r6,r20,r6
  80e750:	81803e36 	bltu	r16,r6,80e84c <__udivdi3+0x504>
  80e754:	81803826 	beq	r16,r6,80e838 <__udivdi3+0x4f0>
  80e758:	0007883a 	mov	r3,zero
  80e75c:	003fa206 	br	80e5e8 <__alt_data_end+0xff80e5e8>
  80e760:	88e2983a 	sll	r17,r17,r3
  80e764:	80a8d83a 	srl	r20,r16,r2
  80e768:	80e0983a 	sll	r16,r16,r3
  80e76c:	882ad43a 	srli	r21,r17,16
  80e770:	9884d83a 	srl	r2,r19,r2
  80e774:	a009883a 	mov	r4,r20
  80e778:	a80b883a 	mov	r5,r21
  80e77c:	142eb03a 	or	r23,r2,r16
  80e780:	98e4983a 	sll	r18,r19,r3
  80e784:	0802ba40 	call	802ba4 <__umodsi3>
  80e788:	a009883a 	mov	r4,r20
  80e78c:	a80b883a 	mov	r5,r21
  80e790:	1021883a 	mov	r16,r2
  80e794:	0802b400 	call	802b40 <__udivsi3>
  80e798:	1039883a 	mov	fp,r2
  80e79c:	8d3fffcc 	andi	r20,r17,65535
  80e7a0:	8020943a 	slli	r16,r16,16
  80e7a4:	b804d43a 	srli	r2,r23,16
  80e7a8:	a72d383a 	mul	r22,r20,fp
  80e7ac:	1404b03a 	or	r2,r2,r16
  80e7b0:	1580062e 	bgeu	r2,r22,80e7cc <__udivdi3+0x484>
  80e7b4:	1445883a 	add	r2,r2,r17
  80e7b8:	e0ffffc4 	addi	r3,fp,-1
  80e7bc:	14403836 	bltu	r2,r17,80e8a0 <__udivdi3+0x558>
  80e7c0:	1580372e 	bgeu	r2,r22,80e8a0 <__udivdi3+0x558>
  80e7c4:	e73fff84 	addi	fp,fp,-2
  80e7c8:	1445883a 	add	r2,r2,r17
  80e7cc:	15adc83a 	sub	r22,r2,r22
  80e7d0:	a80b883a 	mov	r5,r21
  80e7d4:	b009883a 	mov	r4,r22
  80e7d8:	0802ba40 	call	802ba4 <__umodsi3>
  80e7dc:	1027883a 	mov	r19,r2
  80e7e0:	b009883a 	mov	r4,r22
  80e7e4:	a80b883a 	mov	r5,r21
  80e7e8:	0802b400 	call	802b40 <__udivsi3>
  80e7ec:	9826943a 	slli	r19,r19,16
  80e7f0:	a0a1383a 	mul	r16,r20,r2
  80e7f4:	b93fffcc 	andi	r4,r23,65535
  80e7f8:	24c8b03a 	or	r4,r4,r19
  80e7fc:	2400062e 	bgeu	r4,r16,80e818 <__udivdi3+0x4d0>
  80e800:	2449883a 	add	r4,r4,r17
  80e804:	10ffffc4 	addi	r3,r2,-1
  80e808:	24402336 	bltu	r4,r17,80e898 <__udivdi3+0x550>
  80e80c:	2400222e 	bgeu	r4,r16,80e898 <__udivdi3+0x550>
  80e810:	10bfff84 	addi	r2,r2,-2
  80e814:	2449883a 	add	r4,r4,r17
  80e818:	e038943a 	slli	fp,fp,16
  80e81c:	2421c83a 	sub	r16,r4,r16
  80e820:	e086b03a 	or	r3,fp,r2
  80e824:	003f4306 	br	80e534 <__alt_data_end+0xff80e534>
  80e828:	2005883a 	mov	r2,r4
  80e82c:	003f6906 	br	80e5d4 <__alt_data_end+0xff80e5d4>
  80e830:	1805883a 	mov	r2,r3
  80e834:	003f0f06 	br	80e474 <__alt_data_end+0xff80e474>
  80e838:	1806943a 	slli	r3,r3,16
  80e83c:	9d66983a 	sll	r19,r19,r21
  80e840:	39ffffcc 	andi	r7,r7,65535
  80e844:	19c7883a 	add	r3,r3,r7
  80e848:	98ffc32e 	bgeu	r19,r3,80e758 <__alt_data_end+0xff80e758>
  80e84c:	10bfffc4 	addi	r2,r2,-1
  80e850:	003fc106 	br	80e758 <__alt_data_end+0xff80e758>
  80e854:	00800604 	movi	r2,24
  80e858:	003f1106 	br	80e4a0 <__alt_data_end+0xff80e4a0>
  80e85c:	00800604 	movi	r2,24
  80e860:	003f2706 	br	80e500 <__alt_data_end+0xff80e500>
  80e864:	00800604 	movi	r2,24
  80e868:	003ece06 	br	80e3a4 <__alt_data_end+0xff80e3a4>
  80e86c:	0007883a 	mov	r3,zero
  80e870:	00800044 	movi	r2,1
  80e874:	003f5c06 	br	80e5e8 <__alt_data_end+0xff80e5e8>
  80e878:	813fa12e 	bgeu	r16,r4,80e700 <__alt_data_end+0xff80e700>
  80e87c:	10bfff84 	addi	r2,r2,-2
  80e880:	85e1883a 	add	r16,r16,r23
  80e884:	003f9f06 	br	80e704 <__alt_data_end+0xff80e704>
  80e888:	1c7f8a2e 	bgeu	r3,r17,80e6b4 <__alt_data_end+0xff80e6b4>
  80e88c:	31bfff84 	addi	r6,r6,-2
  80e890:	1dc7883a 	add	r3,r3,r23
  80e894:	003f8806 	br	80e6b8 <__alt_data_end+0xff80e6b8>
  80e898:	1805883a 	mov	r2,r3
  80e89c:	003fde06 	br	80e818 <__alt_data_end+0xff80e818>
  80e8a0:	1839883a 	mov	fp,r3
  80e8a4:	003fc906 	br	80e7cc <__alt_data_end+0xff80e7cc>
  80e8a8:	b5bfff84 	addi	r22,r22,-2
  80e8ac:	2449883a 	add	r4,r4,r17
  80e8b0:	003f3406 	br	80e584 <__alt_data_end+0xff80e584>
  80e8b4:	b5bfff84 	addi	r22,r22,-2
  80e8b8:	1445883a 	add	r2,r2,r17
  80e8bc:	003edb06 	br	80e42c <__alt_data_end+0xff80e42c>

0080e8c0 <__umoddi3>:
  80e8c0:	defff404 	addi	sp,sp,-48
  80e8c4:	df000a15 	stw	fp,40(sp)
  80e8c8:	dc400315 	stw	r17,12(sp)
  80e8cc:	dc000215 	stw	r16,8(sp)
  80e8d0:	dfc00b15 	stw	ra,44(sp)
  80e8d4:	ddc00915 	stw	r23,36(sp)
  80e8d8:	dd800815 	stw	r22,32(sp)
  80e8dc:	dd400715 	stw	r21,28(sp)
  80e8e0:	dd000615 	stw	r20,24(sp)
  80e8e4:	dcc00515 	stw	r19,20(sp)
  80e8e8:	dc800415 	stw	r18,16(sp)
  80e8ec:	2021883a 	mov	r16,r4
  80e8f0:	2823883a 	mov	r17,r5
  80e8f4:	2839883a 	mov	fp,r5
  80e8f8:	38003c1e 	bne	r7,zero,80e9ec <__umoddi3+0x12c>
  80e8fc:	3027883a 	mov	r19,r6
  80e900:	2029883a 	mov	r20,r4
  80e904:	2980512e 	bgeu	r5,r6,80ea4c <__umoddi3+0x18c>
  80e908:	00bfffd4 	movui	r2,65535
  80e90c:	11809a36 	bltu	r2,r6,80eb78 <__umoddi3+0x2b8>
  80e910:	01003fc4 	movi	r4,255
  80e914:	2189803a 	cmpltu	r4,r4,r6
  80e918:	200890fa 	slli	r4,r4,3
  80e91c:	3104d83a 	srl	r2,r6,r4
  80e920:	00c02074 	movhi	r3,129
  80e924:	18c8c204 	addi	r3,r3,8968
  80e928:	1885883a 	add	r2,r3,r2
  80e92c:	10c00003 	ldbu	r3,0(r2)
  80e930:	00800804 	movi	r2,32
  80e934:	1909883a 	add	r4,r3,r4
  80e938:	1125c83a 	sub	r18,r2,r4
  80e93c:	90000526 	beq	r18,zero,80e954 <__umoddi3+0x94>
  80e940:	8ca2983a 	sll	r17,r17,r18
  80e944:	8108d83a 	srl	r4,r16,r4
  80e948:	34a6983a 	sll	r19,r6,r18
  80e94c:	84a8983a 	sll	r20,r16,r18
  80e950:	2478b03a 	or	fp,r4,r17
  80e954:	982ed43a 	srli	r23,r19,16
  80e958:	e009883a 	mov	r4,fp
  80e95c:	9dbfffcc 	andi	r22,r19,65535
  80e960:	b80b883a 	mov	r5,r23
  80e964:	0802ba40 	call	802ba4 <__umodsi3>
  80e968:	e009883a 	mov	r4,fp
  80e96c:	b80b883a 	mov	r5,r23
  80e970:	102b883a 	mov	r21,r2
  80e974:	0802b400 	call	802b40 <__udivsi3>
  80e978:	a806943a 	slli	r3,r21,16
  80e97c:	a008d43a 	srli	r4,r20,16
  80e980:	b085383a 	mul	r2,r22,r2
  80e984:	20c8b03a 	or	r4,r4,r3
  80e988:	2080032e 	bgeu	r4,r2,80e998 <__umoddi3+0xd8>
  80e98c:	24c9883a 	add	r4,r4,r19
  80e990:	24c00136 	bltu	r4,r19,80e998 <__umoddi3+0xd8>
  80e994:	20811036 	bltu	r4,r2,80edd8 <__umoddi3+0x518>
  80e998:	20abc83a 	sub	r21,r4,r2
  80e99c:	b80b883a 	mov	r5,r23
  80e9a0:	a809883a 	mov	r4,r21
  80e9a4:	0802ba40 	call	802ba4 <__umodsi3>
  80e9a8:	1023883a 	mov	r17,r2
  80e9ac:	b80b883a 	mov	r5,r23
  80e9b0:	a809883a 	mov	r4,r21
  80e9b4:	0802b400 	call	802b40 <__udivsi3>
  80e9b8:	8822943a 	slli	r17,r17,16
  80e9bc:	b085383a 	mul	r2,r22,r2
  80e9c0:	a0ffffcc 	andi	r3,r20,65535
  80e9c4:	1c46b03a 	or	r3,r3,r17
  80e9c8:	1880042e 	bgeu	r3,r2,80e9dc <__umoddi3+0x11c>
  80e9cc:	1cc7883a 	add	r3,r3,r19
  80e9d0:	1cc00236 	bltu	r3,r19,80e9dc <__umoddi3+0x11c>
  80e9d4:	1880012e 	bgeu	r3,r2,80e9dc <__umoddi3+0x11c>
  80e9d8:	1cc7883a 	add	r3,r3,r19
  80e9dc:	1885c83a 	sub	r2,r3,r2
  80e9e0:	1484d83a 	srl	r2,r2,r18
  80e9e4:	0007883a 	mov	r3,zero
  80e9e8:	00004f06 	br	80eb28 <__umoddi3+0x268>
  80e9ec:	29c04c36 	bltu	r5,r7,80eb20 <__umoddi3+0x260>
  80e9f0:	00bfffd4 	movui	r2,65535
  80e9f4:	11c0582e 	bgeu	r2,r7,80eb58 <__umoddi3+0x298>
  80e9f8:	00804034 	movhi	r2,256
  80e9fc:	10bfffc4 	addi	r2,r2,-1
  80ea00:	11c0e736 	bltu	r2,r7,80eda0 <__umoddi3+0x4e0>
  80ea04:	01000404 	movi	r4,16
  80ea08:	3904d83a 	srl	r2,r7,r4
  80ea0c:	00c02074 	movhi	r3,129
  80ea10:	18c8c204 	addi	r3,r3,8968
  80ea14:	1885883a 	add	r2,r3,r2
  80ea18:	14c00003 	ldbu	r19,0(r2)
  80ea1c:	00c00804 	movi	r3,32
  80ea20:	9927883a 	add	r19,r19,r4
  80ea24:	1ce9c83a 	sub	r20,r3,r19
  80ea28:	a000581e 	bne	r20,zero,80eb8c <__umoddi3+0x2cc>
  80ea2c:	3c400136 	bltu	r7,r17,80ea34 <__umoddi3+0x174>
  80ea30:	8180eb36 	bltu	r16,r6,80ede0 <__umoddi3+0x520>
  80ea34:	8185c83a 	sub	r2,r16,r6
  80ea38:	89e3c83a 	sub	r17,r17,r7
  80ea3c:	8089803a 	cmpltu	r4,r16,r2
  80ea40:	8939c83a 	sub	fp,r17,r4
  80ea44:	e007883a 	mov	r3,fp
  80ea48:	00003706 	br	80eb28 <__umoddi3+0x268>
  80ea4c:	3000041e 	bne	r6,zero,80ea60 <__umoddi3+0x1a0>
  80ea50:	000b883a 	mov	r5,zero
  80ea54:	01000044 	movi	r4,1
  80ea58:	0802b400 	call	802b40 <__udivsi3>
  80ea5c:	1027883a 	mov	r19,r2
  80ea60:	00bfffd4 	movui	r2,65535
  80ea64:	14c0402e 	bgeu	r2,r19,80eb68 <__umoddi3+0x2a8>
  80ea68:	00804034 	movhi	r2,256
  80ea6c:	10bfffc4 	addi	r2,r2,-1
  80ea70:	14c0cd36 	bltu	r2,r19,80eda8 <__umoddi3+0x4e8>
  80ea74:	00800404 	movi	r2,16
  80ea78:	9886d83a 	srl	r3,r19,r2
  80ea7c:	01002074 	movhi	r4,129
  80ea80:	2108c204 	addi	r4,r4,8968
  80ea84:	20c7883a 	add	r3,r4,r3
  80ea88:	18c00003 	ldbu	r3,0(r3)
  80ea8c:	1887883a 	add	r3,r3,r2
  80ea90:	00800804 	movi	r2,32
  80ea94:	10e5c83a 	sub	r18,r2,r3
  80ea98:	9000901e 	bne	r18,zero,80ecdc <__umoddi3+0x41c>
  80ea9c:	982cd43a 	srli	r22,r19,16
  80eaa0:	8ce3c83a 	sub	r17,r17,r19
  80eaa4:	9d7fffcc 	andi	r21,r19,65535
  80eaa8:	b00b883a 	mov	r5,r22
  80eaac:	8809883a 	mov	r4,r17
  80eab0:	0802ba40 	call	802ba4 <__umodsi3>
  80eab4:	8809883a 	mov	r4,r17
  80eab8:	b00b883a 	mov	r5,r22
  80eabc:	1021883a 	mov	r16,r2
  80eac0:	0802b400 	call	802b40 <__udivsi3>
  80eac4:	8006943a 	slli	r3,r16,16
  80eac8:	a008d43a 	srli	r4,r20,16
  80eacc:	1545383a 	mul	r2,r2,r21
  80ead0:	20c8b03a 	or	r4,r4,r3
  80ead4:	2080042e 	bgeu	r4,r2,80eae8 <__umoddi3+0x228>
  80ead8:	24c9883a 	add	r4,r4,r19
  80eadc:	24c00236 	bltu	r4,r19,80eae8 <__umoddi3+0x228>
  80eae0:	2080012e 	bgeu	r4,r2,80eae8 <__umoddi3+0x228>
  80eae4:	24c9883a 	add	r4,r4,r19
  80eae8:	20a1c83a 	sub	r16,r4,r2
  80eaec:	b00b883a 	mov	r5,r22
  80eaf0:	8009883a 	mov	r4,r16
  80eaf4:	0802ba40 	call	802ba4 <__umodsi3>
  80eaf8:	1023883a 	mov	r17,r2
  80eafc:	b00b883a 	mov	r5,r22
  80eb00:	8009883a 	mov	r4,r16
  80eb04:	0802b400 	call	802b40 <__udivsi3>
  80eb08:	8822943a 	slli	r17,r17,16
  80eb0c:	1545383a 	mul	r2,r2,r21
  80eb10:	a53fffcc 	andi	r20,r20,65535
  80eb14:	a446b03a 	or	r3,r20,r17
  80eb18:	18bfb02e 	bgeu	r3,r2,80e9dc <__alt_data_end+0xff80e9dc>
  80eb1c:	003fab06 	br	80e9cc <__alt_data_end+0xff80e9cc>
  80eb20:	2005883a 	mov	r2,r4
  80eb24:	2807883a 	mov	r3,r5
  80eb28:	dfc00b17 	ldw	ra,44(sp)
  80eb2c:	df000a17 	ldw	fp,40(sp)
  80eb30:	ddc00917 	ldw	r23,36(sp)
  80eb34:	dd800817 	ldw	r22,32(sp)
  80eb38:	dd400717 	ldw	r21,28(sp)
  80eb3c:	dd000617 	ldw	r20,24(sp)
  80eb40:	dcc00517 	ldw	r19,20(sp)
  80eb44:	dc800417 	ldw	r18,16(sp)
  80eb48:	dc400317 	ldw	r17,12(sp)
  80eb4c:	dc000217 	ldw	r16,8(sp)
  80eb50:	dec00c04 	addi	sp,sp,48
  80eb54:	f800283a 	ret
  80eb58:	04c03fc4 	movi	r19,255
  80eb5c:	99c9803a 	cmpltu	r4,r19,r7
  80eb60:	200890fa 	slli	r4,r4,3
  80eb64:	003fa806 	br	80ea08 <__alt_data_end+0xff80ea08>
  80eb68:	00803fc4 	movi	r2,255
  80eb6c:	14c5803a 	cmpltu	r2,r2,r19
  80eb70:	100490fa 	slli	r2,r2,3
  80eb74:	003fc006 	br	80ea78 <__alt_data_end+0xff80ea78>
  80eb78:	00804034 	movhi	r2,256
  80eb7c:	10bfffc4 	addi	r2,r2,-1
  80eb80:	11808b36 	bltu	r2,r6,80edb0 <__umoddi3+0x4f0>
  80eb84:	01000404 	movi	r4,16
  80eb88:	003f6406 	br	80e91c <__alt_data_end+0xff80e91c>
  80eb8c:	34c4d83a 	srl	r2,r6,r19
  80eb90:	3d0e983a 	sll	r7,r7,r20
  80eb94:	8cf8d83a 	srl	fp,r17,r19
  80eb98:	8d10983a 	sll	r8,r17,r20
  80eb9c:	38aab03a 	or	r21,r7,r2
  80eba0:	a82cd43a 	srli	r22,r21,16
  80eba4:	84e2d83a 	srl	r17,r16,r19
  80eba8:	e009883a 	mov	r4,fp
  80ebac:	b00b883a 	mov	r5,r22
  80ebb0:	8a22b03a 	or	r17,r17,r8
  80ebb4:	3524983a 	sll	r18,r6,r20
  80ebb8:	0802ba40 	call	802ba4 <__umodsi3>
  80ebbc:	e009883a 	mov	r4,fp
  80ebc0:	b00b883a 	mov	r5,r22
  80ebc4:	102f883a 	mov	r23,r2
  80ebc8:	0802b400 	call	802b40 <__udivsi3>
  80ebcc:	100d883a 	mov	r6,r2
  80ebd0:	b808943a 	slli	r4,r23,16
  80ebd4:	aa3fffcc 	andi	r8,r21,65535
  80ebd8:	8804d43a 	srli	r2,r17,16
  80ebdc:	41af383a 	mul	r23,r8,r6
  80ebe0:	8520983a 	sll	r16,r16,r20
  80ebe4:	1104b03a 	or	r2,r2,r4
  80ebe8:	15c0042e 	bgeu	r2,r23,80ebfc <__umoddi3+0x33c>
  80ebec:	1545883a 	add	r2,r2,r21
  80ebf0:	30ffffc4 	addi	r3,r6,-1
  80ebf4:	1540742e 	bgeu	r2,r21,80edc8 <__umoddi3+0x508>
  80ebf8:	180d883a 	mov	r6,r3
  80ebfc:	15efc83a 	sub	r23,r2,r23
  80ec00:	b00b883a 	mov	r5,r22
  80ec04:	b809883a 	mov	r4,r23
  80ec08:	d9800115 	stw	r6,4(sp)
  80ec0c:	da000015 	stw	r8,0(sp)
  80ec10:	0802ba40 	call	802ba4 <__umodsi3>
  80ec14:	b00b883a 	mov	r5,r22
  80ec18:	b809883a 	mov	r4,r23
  80ec1c:	1039883a 	mov	fp,r2
  80ec20:	0802b400 	call	802b40 <__udivsi3>
  80ec24:	da000017 	ldw	r8,0(sp)
  80ec28:	e038943a 	slli	fp,fp,16
  80ec2c:	100b883a 	mov	r5,r2
  80ec30:	4089383a 	mul	r4,r8,r2
  80ec34:	8a3fffcc 	andi	r8,r17,65535
  80ec38:	4710b03a 	or	r8,r8,fp
  80ec3c:	d9800117 	ldw	r6,4(sp)
  80ec40:	4100042e 	bgeu	r8,r4,80ec54 <__umoddi3+0x394>
  80ec44:	4551883a 	add	r8,r8,r21
  80ec48:	10bfffc4 	addi	r2,r2,-1
  80ec4c:	45405a2e 	bgeu	r8,r21,80edb8 <__umoddi3+0x4f8>
  80ec50:	100b883a 	mov	r5,r2
  80ec54:	300c943a 	slli	r6,r6,16
  80ec58:	91ffffcc 	andi	r7,r18,65535
  80ec5c:	9004d43a 	srli	r2,r18,16
  80ec60:	314cb03a 	or	r6,r6,r5
  80ec64:	317fffcc 	andi	r5,r6,65535
  80ec68:	300cd43a 	srli	r6,r6,16
  80ec6c:	29d3383a 	mul	r9,r5,r7
  80ec70:	288b383a 	mul	r5,r5,r2
  80ec74:	31cf383a 	mul	r7,r6,r7
  80ec78:	4806d43a 	srli	r3,r9,16
  80ec7c:	4111c83a 	sub	r8,r8,r4
  80ec80:	29cb883a 	add	r5,r5,r7
  80ec84:	194b883a 	add	r5,r3,r5
  80ec88:	3085383a 	mul	r2,r6,r2
  80ec8c:	29c0022e 	bgeu	r5,r7,80ec98 <__umoddi3+0x3d8>
  80ec90:	00c00074 	movhi	r3,1
  80ec94:	10c5883a 	add	r2,r2,r3
  80ec98:	2808d43a 	srli	r4,r5,16
  80ec9c:	280a943a 	slli	r5,r5,16
  80eca0:	4a7fffcc 	andi	r9,r9,65535
  80eca4:	2085883a 	add	r2,r4,r2
  80eca8:	2a4b883a 	add	r5,r5,r9
  80ecac:	40803636 	bltu	r8,r2,80ed88 <__umoddi3+0x4c8>
  80ecb0:	40804d26 	beq	r8,r2,80ede8 <__umoddi3+0x528>
  80ecb4:	4089c83a 	sub	r4,r8,r2
  80ecb8:	280f883a 	mov	r7,r5
  80ecbc:	81cfc83a 	sub	r7,r16,r7
  80ecc0:	81c7803a 	cmpltu	r3,r16,r7
  80ecc4:	20c7c83a 	sub	r3,r4,r3
  80ecc8:	1cc4983a 	sll	r2,r3,r19
  80eccc:	3d0ed83a 	srl	r7,r7,r20
  80ecd0:	1d06d83a 	srl	r3,r3,r20
  80ecd4:	11c4b03a 	or	r2,r2,r7
  80ecd8:	003f9306 	br	80eb28 <__alt_data_end+0xff80eb28>
  80ecdc:	9ca6983a 	sll	r19,r19,r18
  80ece0:	88e8d83a 	srl	r20,r17,r3
  80ece4:	80c4d83a 	srl	r2,r16,r3
  80ece8:	982cd43a 	srli	r22,r19,16
  80ecec:	8ca2983a 	sll	r17,r17,r18
  80ecf0:	a009883a 	mov	r4,r20
  80ecf4:	b00b883a 	mov	r5,r22
  80ecf8:	1478b03a 	or	fp,r2,r17
  80ecfc:	0802ba40 	call	802ba4 <__umodsi3>
  80ed00:	a009883a 	mov	r4,r20
  80ed04:	b00b883a 	mov	r5,r22
  80ed08:	1023883a 	mov	r17,r2
  80ed0c:	0802b400 	call	802b40 <__udivsi3>
  80ed10:	9d7fffcc 	andi	r21,r19,65535
  80ed14:	880a943a 	slli	r5,r17,16
  80ed18:	e008d43a 	srli	r4,fp,16
  80ed1c:	a885383a 	mul	r2,r21,r2
  80ed20:	84a8983a 	sll	r20,r16,r18
  80ed24:	2148b03a 	or	r4,r4,r5
  80ed28:	2080042e 	bgeu	r4,r2,80ed3c <__umoddi3+0x47c>
  80ed2c:	24c9883a 	add	r4,r4,r19
  80ed30:	24c00236 	bltu	r4,r19,80ed3c <__umoddi3+0x47c>
  80ed34:	2080012e 	bgeu	r4,r2,80ed3c <__umoddi3+0x47c>
  80ed38:	24c9883a 	add	r4,r4,r19
  80ed3c:	20a3c83a 	sub	r17,r4,r2
  80ed40:	b00b883a 	mov	r5,r22
  80ed44:	8809883a 	mov	r4,r17
  80ed48:	0802ba40 	call	802ba4 <__umodsi3>
  80ed4c:	102f883a 	mov	r23,r2
  80ed50:	8809883a 	mov	r4,r17
  80ed54:	b00b883a 	mov	r5,r22
  80ed58:	0802b400 	call	802b40 <__udivsi3>
  80ed5c:	b82e943a 	slli	r23,r23,16
  80ed60:	a885383a 	mul	r2,r21,r2
  80ed64:	e13fffcc 	andi	r4,fp,65535
  80ed68:	25c8b03a 	or	r4,r4,r23
  80ed6c:	2080042e 	bgeu	r4,r2,80ed80 <__umoddi3+0x4c0>
  80ed70:	24c9883a 	add	r4,r4,r19
  80ed74:	24c00236 	bltu	r4,r19,80ed80 <__umoddi3+0x4c0>
  80ed78:	2080012e 	bgeu	r4,r2,80ed80 <__umoddi3+0x4c0>
  80ed7c:	24c9883a 	add	r4,r4,r19
  80ed80:	20a3c83a 	sub	r17,r4,r2
  80ed84:	003f4806 	br	80eaa8 <__alt_data_end+0xff80eaa8>
  80ed88:	2c8fc83a 	sub	r7,r5,r18
  80ed8c:	1545c83a 	sub	r2,r2,r21
  80ed90:	29cb803a 	cmpltu	r5,r5,r7
  80ed94:	1145c83a 	sub	r2,r2,r5
  80ed98:	4089c83a 	sub	r4,r8,r2
  80ed9c:	003fc706 	br	80ecbc <__alt_data_end+0xff80ecbc>
  80eda0:	01000604 	movi	r4,24
  80eda4:	003f1806 	br	80ea08 <__alt_data_end+0xff80ea08>
  80eda8:	00800604 	movi	r2,24
  80edac:	003f3206 	br	80ea78 <__alt_data_end+0xff80ea78>
  80edb0:	01000604 	movi	r4,24
  80edb4:	003ed906 	br	80e91c <__alt_data_end+0xff80e91c>
  80edb8:	413fa52e 	bgeu	r8,r4,80ec50 <__alt_data_end+0xff80ec50>
  80edbc:	297fff84 	addi	r5,r5,-2
  80edc0:	4551883a 	add	r8,r8,r21
  80edc4:	003fa306 	br	80ec54 <__alt_data_end+0xff80ec54>
  80edc8:	15ff8b2e 	bgeu	r2,r23,80ebf8 <__alt_data_end+0xff80ebf8>
  80edcc:	31bfff84 	addi	r6,r6,-2
  80edd0:	1545883a 	add	r2,r2,r21
  80edd4:	003f8906 	br	80ebfc <__alt_data_end+0xff80ebfc>
  80edd8:	24c9883a 	add	r4,r4,r19
  80eddc:	003eee06 	br	80e998 <__alt_data_end+0xff80e998>
  80ede0:	8005883a 	mov	r2,r16
  80ede4:	003f1706 	br	80ea44 <__alt_data_end+0xff80ea44>
  80ede8:	817fe736 	bltu	r16,r5,80ed88 <__alt_data_end+0xff80ed88>
  80edec:	280f883a 	mov	r7,r5
  80edf0:	0009883a 	mov	r4,zero
  80edf4:	003fb106 	br	80ecbc <__alt_data_end+0xff80ecbc>

0080edf8 <__divdf3>:
  80edf8:	defff204 	addi	sp,sp,-56
  80edfc:	dd400915 	stw	r21,36(sp)
  80ee00:	282ad53a 	srli	r21,r5,20
  80ee04:	dd000815 	stw	r20,32(sp)
  80ee08:	2828d7fa 	srli	r20,r5,31
  80ee0c:	dc000415 	stw	r16,16(sp)
  80ee10:	04000434 	movhi	r16,16
  80ee14:	df000c15 	stw	fp,48(sp)
  80ee18:	843fffc4 	addi	r16,r16,-1
  80ee1c:	dfc00d15 	stw	ra,52(sp)
  80ee20:	ddc00b15 	stw	r23,44(sp)
  80ee24:	dd800a15 	stw	r22,40(sp)
  80ee28:	dcc00715 	stw	r19,28(sp)
  80ee2c:	dc800615 	stw	r18,24(sp)
  80ee30:	dc400515 	stw	r17,20(sp)
  80ee34:	ad41ffcc 	andi	r21,r21,2047
  80ee38:	2c20703a 	and	r16,r5,r16
  80ee3c:	a7003fcc 	andi	fp,r20,255
  80ee40:	a8006126 	beq	r21,zero,80efc8 <__divdf3+0x1d0>
  80ee44:	0081ffc4 	movi	r2,2047
  80ee48:	2025883a 	mov	r18,r4
  80ee4c:	a8803726 	beq	r21,r2,80ef2c <__divdf3+0x134>
  80ee50:	80800434 	orhi	r2,r16,16
  80ee54:	100490fa 	slli	r2,r2,3
  80ee58:	2020d77a 	srli	r16,r4,29
  80ee5c:	202490fa 	slli	r18,r4,3
  80ee60:	ad7f0044 	addi	r21,r21,-1023
  80ee64:	80a0b03a 	or	r16,r16,r2
  80ee68:	0027883a 	mov	r19,zero
  80ee6c:	0013883a 	mov	r9,zero
  80ee70:	3804d53a 	srli	r2,r7,20
  80ee74:	382cd7fa 	srli	r22,r7,31
  80ee78:	04400434 	movhi	r17,16
  80ee7c:	8c7fffc4 	addi	r17,r17,-1
  80ee80:	1081ffcc 	andi	r2,r2,2047
  80ee84:	3011883a 	mov	r8,r6
  80ee88:	3c62703a 	and	r17,r7,r17
  80ee8c:	b5c03fcc 	andi	r23,r22,255
  80ee90:	10006c26 	beq	r2,zero,80f044 <__divdf3+0x24c>
  80ee94:	00c1ffc4 	movi	r3,2047
  80ee98:	10c06426 	beq	r2,r3,80f02c <__divdf3+0x234>
  80ee9c:	88c00434 	orhi	r3,r17,16
  80eea0:	180690fa 	slli	r3,r3,3
  80eea4:	3022d77a 	srli	r17,r6,29
  80eea8:	301090fa 	slli	r8,r6,3
  80eeac:	10bf0044 	addi	r2,r2,-1023
  80eeb0:	88e2b03a 	or	r17,r17,r3
  80eeb4:	000f883a 	mov	r7,zero
  80eeb8:	a58cf03a 	xor	r6,r20,r22
  80eebc:	3cc8b03a 	or	r4,r7,r19
  80eec0:	a8abc83a 	sub	r21,r21,r2
  80eec4:	008003c4 	movi	r2,15
  80eec8:	3007883a 	mov	r3,r6
  80eecc:	34c03fcc 	andi	r19,r6,255
  80eed0:	11009036 	bltu	r2,r4,80f114 <__divdf3+0x31c>
  80eed4:	200890ba 	slli	r4,r4,2
  80eed8:	00802074 	movhi	r2,129
  80eedc:	10bbbb04 	addi	r2,r2,-4372
  80eee0:	2089883a 	add	r4,r4,r2
  80eee4:	20800017 	ldw	r2,0(r4)
  80eee8:	1000683a 	jmp	r2
  80eeec:	0080f114 	movui	r2,964
  80eef0:	0080ef64 	muli	r2,zero,957
  80eef4:	0080f104 	movi	r2,964
  80eef8:	0080ef58 	cmpnei	r2,zero,957
  80eefc:	0080f104 	movi	r2,964
  80ef00:	0080f0d8 	cmpnei	r2,zero,963
  80ef04:	0080f104 	movi	r2,964
  80ef08:	0080ef58 	cmpnei	r2,zero,957
  80ef0c:	0080ef64 	muli	r2,zero,957
  80ef10:	0080ef64 	muli	r2,zero,957
  80ef14:	0080f0d8 	cmpnei	r2,zero,963
  80ef18:	0080ef58 	cmpnei	r2,zero,957
  80ef1c:	0080ef48 	cmpgei	r2,zero,957
  80ef20:	0080ef48 	cmpgei	r2,zero,957
  80ef24:	0080ef48 	cmpgei	r2,zero,957
  80ef28:	0080f3f8 	rdprs	r2,zero,975
  80ef2c:	2404b03a 	or	r2,r4,r16
  80ef30:	1000661e 	bne	r2,zero,80f0cc <__divdf3+0x2d4>
  80ef34:	04c00204 	movi	r19,8
  80ef38:	0021883a 	mov	r16,zero
  80ef3c:	0025883a 	mov	r18,zero
  80ef40:	02400084 	movi	r9,2
  80ef44:	003fca06 	br	80ee70 <__alt_data_end+0xff80ee70>
  80ef48:	8023883a 	mov	r17,r16
  80ef4c:	9011883a 	mov	r8,r18
  80ef50:	e02f883a 	mov	r23,fp
  80ef54:	480f883a 	mov	r7,r9
  80ef58:	00800084 	movi	r2,2
  80ef5c:	3881311e 	bne	r7,r2,80f424 <__divdf3+0x62c>
  80ef60:	b827883a 	mov	r19,r23
  80ef64:	98c0004c 	andi	r3,r19,1
  80ef68:	0081ffc4 	movi	r2,2047
  80ef6c:	000b883a 	mov	r5,zero
  80ef70:	0025883a 	mov	r18,zero
  80ef74:	1004953a 	slli	r2,r2,20
  80ef78:	18c03fcc 	andi	r3,r3,255
  80ef7c:	04400434 	movhi	r17,16
  80ef80:	8c7fffc4 	addi	r17,r17,-1
  80ef84:	180697fa 	slli	r3,r3,31
  80ef88:	2c4a703a 	and	r5,r5,r17
  80ef8c:	288ab03a 	or	r5,r5,r2
  80ef90:	28c6b03a 	or	r3,r5,r3
  80ef94:	9005883a 	mov	r2,r18
  80ef98:	dfc00d17 	ldw	ra,52(sp)
  80ef9c:	df000c17 	ldw	fp,48(sp)
  80efa0:	ddc00b17 	ldw	r23,44(sp)
  80efa4:	dd800a17 	ldw	r22,40(sp)
  80efa8:	dd400917 	ldw	r21,36(sp)
  80efac:	dd000817 	ldw	r20,32(sp)
  80efb0:	dcc00717 	ldw	r19,28(sp)
  80efb4:	dc800617 	ldw	r18,24(sp)
  80efb8:	dc400517 	ldw	r17,20(sp)
  80efbc:	dc000417 	ldw	r16,16(sp)
  80efc0:	dec00e04 	addi	sp,sp,56
  80efc4:	f800283a 	ret
  80efc8:	2404b03a 	or	r2,r4,r16
  80efcc:	2027883a 	mov	r19,r4
  80efd0:	10003926 	beq	r2,zero,80f0b8 <__divdf3+0x2c0>
  80efd4:	80012e26 	beq	r16,zero,80f490 <__divdf3+0x698>
  80efd8:	8009883a 	mov	r4,r16
  80efdc:	d9800315 	stw	r6,12(sp)
  80efe0:	d9c00215 	stw	r7,8(sp)
  80efe4:	0804c900 	call	804c90 <__clzsi2>
  80efe8:	d9800317 	ldw	r6,12(sp)
  80efec:	d9c00217 	ldw	r7,8(sp)
  80eff0:	113ffd44 	addi	r4,r2,-11
  80eff4:	00c00704 	movi	r3,28
  80eff8:	19012116 	blt	r3,r4,80f480 <__divdf3+0x688>
  80effc:	00c00744 	movi	r3,29
  80f000:	147ffe04 	addi	r17,r2,-8
  80f004:	1907c83a 	sub	r3,r3,r4
  80f008:	8460983a 	sll	r16,r16,r17
  80f00c:	98c6d83a 	srl	r3,r19,r3
  80f010:	9c64983a 	sll	r18,r19,r17
  80f014:	1c20b03a 	or	r16,r3,r16
  80f018:	1080fcc4 	addi	r2,r2,1011
  80f01c:	00abc83a 	sub	r21,zero,r2
  80f020:	0027883a 	mov	r19,zero
  80f024:	0013883a 	mov	r9,zero
  80f028:	003f9106 	br	80ee70 <__alt_data_end+0xff80ee70>
  80f02c:	3446b03a 	or	r3,r6,r17
  80f030:	18001f1e 	bne	r3,zero,80f0b0 <__divdf3+0x2b8>
  80f034:	0023883a 	mov	r17,zero
  80f038:	0011883a 	mov	r8,zero
  80f03c:	01c00084 	movi	r7,2
  80f040:	003f9d06 	br	80eeb8 <__alt_data_end+0xff80eeb8>
  80f044:	3446b03a 	or	r3,r6,r17
  80f048:	18001526 	beq	r3,zero,80f0a0 <__divdf3+0x2a8>
  80f04c:	88011b26 	beq	r17,zero,80f4bc <__divdf3+0x6c4>
  80f050:	8809883a 	mov	r4,r17
  80f054:	d9800315 	stw	r6,12(sp)
  80f058:	da400115 	stw	r9,4(sp)
  80f05c:	0804c900 	call	804c90 <__clzsi2>
  80f060:	d9800317 	ldw	r6,12(sp)
  80f064:	da400117 	ldw	r9,4(sp)
  80f068:	113ffd44 	addi	r4,r2,-11
  80f06c:	00c00704 	movi	r3,28
  80f070:	19010e16 	blt	r3,r4,80f4ac <__divdf3+0x6b4>
  80f074:	00c00744 	movi	r3,29
  80f078:	123ffe04 	addi	r8,r2,-8
  80f07c:	1907c83a 	sub	r3,r3,r4
  80f080:	8a22983a 	sll	r17,r17,r8
  80f084:	30c6d83a 	srl	r3,r6,r3
  80f088:	3210983a 	sll	r8,r6,r8
  80f08c:	1c62b03a 	or	r17,r3,r17
  80f090:	1080fcc4 	addi	r2,r2,1011
  80f094:	0085c83a 	sub	r2,zero,r2
  80f098:	000f883a 	mov	r7,zero
  80f09c:	003f8606 	br	80eeb8 <__alt_data_end+0xff80eeb8>
  80f0a0:	0023883a 	mov	r17,zero
  80f0a4:	0011883a 	mov	r8,zero
  80f0a8:	01c00044 	movi	r7,1
  80f0ac:	003f8206 	br	80eeb8 <__alt_data_end+0xff80eeb8>
  80f0b0:	01c000c4 	movi	r7,3
  80f0b4:	003f8006 	br	80eeb8 <__alt_data_end+0xff80eeb8>
  80f0b8:	04c00104 	movi	r19,4
  80f0bc:	0021883a 	mov	r16,zero
  80f0c0:	0025883a 	mov	r18,zero
  80f0c4:	02400044 	movi	r9,1
  80f0c8:	003f6906 	br	80ee70 <__alt_data_end+0xff80ee70>
  80f0cc:	04c00304 	movi	r19,12
  80f0d0:	024000c4 	movi	r9,3
  80f0d4:	003f6606 	br	80ee70 <__alt_data_end+0xff80ee70>
  80f0d8:	01400434 	movhi	r5,16
  80f0dc:	0007883a 	mov	r3,zero
  80f0e0:	297fffc4 	addi	r5,r5,-1
  80f0e4:	04bfffc4 	movi	r18,-1
  80f0e8:	0081ffc4 	movi	r2,2047
  80f0ec:	003fa106 	br	80ef74 <__alt_data_end+0xff80ef74>
  80f0f0:	00c00044 	movi	r3,1
  80f0f4:	1887c83a 	sub	r3,r3,r2
  80f0f8:	01000e04 	movi	r4,56
  80f0fc:	20c1210e 	bge	r4,r3,80f584 <__divdf3+0x78c>
  80f100:	98c0004c 	andi	r3,r19,1
  80f104:	0005883a 	mov	r2,zero
  80f108:	000b883a 	mov	r5,zero
  80f10c:	0025883a 	mov	r18,zero
  80f110:	003f9806 	br	80ef74 <__alt_data_end+0xff80ef74>
  80f114:	8c00fd36 	bltu	r17,r16,80f50c <__divdf3+0x714>
  80f118:	8440fb26 	beq	r16,r17,80f508 <__divdf3+0x710>
  80f11c:	8007883a 	mov	r3,r16
  80f120:	ad7fffc4 	addi	r21,r21,-1
  80f124:	0021883a 	mov	r16,zero
  80f128:	4004d63a 	srli	r2,r8,24
  80f12c:	8822923a 	slli	r17,r17,8
  80f130:	1809883a 	mov	r4,r3
  80f134:	402c923a 	slli	r22,r8,8
  80f138:	88b8b03a 	or	fp,r17,r2
  80f13c:	e028d43a 	srli	r20,fp,16
  80f140:	d8c00015 	stw	r3,0(sp)
  80f144:	e5ffffcc 	andi	r23,fp,65535
  80f148:	a00b883a 	mov	r5,r20
  80f14c:	0802b400 	call	802b40 <__udivsi3>
  80f150:	d8c00017 	ldw	r3,0(sp)
  80f154:	a00b883a 	mov	r5,r20
  80f158:	d8800315 	stw	r2,12(sp)
  80f15c:	1809883a 	mov	r4,r3
  80f160:	0802ba40 	call	802ba4 <__umodsi3>
  80f164:	d9800317 	ldw	r6,12(sp)
  80f168:	1006943a 	slli	r3,r2,16
  80f16c:	9004d43a 	srli	r2,r18,16
  80f170:	b9a3383a 	mul	r17,r23,r6
  80f174:	10c4b03a 	or	r2,r2,r3
  80f178:	1440062e 	bgeu	r2,r17,80f194 <__divdf3+0x39c>
  80f17c:	1705883a 	add	r2,r2,fp
  80f180:	30ffffc4 	addi	r3,r6,-1
  80f184:	1700ee36 	bltu	r2,fp,80f540 <__divdf3+0x748>
  80f188:	1440ed2e 	bgeu	r2,r17,80f540 <__divdf3+0x748>
  80f18c:	31bfff84 	addi	r6,r6,-2
  80f190:	1705883a 	add	r2,r2,fp
  80f194:	1463c83a 	sub	r17,r2,r17
  80f198:	a00b883a 	mov	r5,r20
  80f19c:	8809883a 	mov	r4,r17
  80f1a0:	d9800315 	stw	r6,12(sp)
  80f1a4:	0802b400 	call	802b40 <__udivsi3>
  80f1a8:	a00b883a 	mov	r5,r20
  80f1ac:	8809883a 	mov	r4,r17
  80f1b0:	d8800215 	stw	r2,8(sp)
  80f1b4:	0802ba40 	call	802ba4 <__umodsi3>
  80f1b8:	d9c00217 	ldw	r7,8(sp)
  80f1bc:	1004943a 	slli	r2,r2,16
  80f1c0:	94bfffcc 	andi	r18,r18,65535
  80f1c4:	b9d1383a 	mul	r8,r23,r7
  80f1c8:	90a4b03a 	or	r18,r18,r2
  80f1cc:	d9800317 	ldw	r6,12(sp)
  80f1d0:	9200062e 	bgeu	r18,r8,80f1ec <__divdf3+0x3f4>
  80f1d4:	9725883a 	add	r18,r18,fp
  80f1d8:	38bfffc4 	addi	r2,r7,-1
  80f1dc:	9700d636 	bltu	r18,fp,80f538 <__divdf3+0x740>
  80f1e0:	9200d52e 	bgeu	r18,r8,80f538 <__divdf3+0x740>
  80f1e4:	39ffff84 	addi	r7,r7,-2
  80f1e8:	9725883a 	add	r18,r18,fp
  80f1ec:	3004943a 	slli	r2,r6,16
  80f1f0:	b012d43a 	srli	r9,r22,16
  80f1f4:	b1bfffcc 	andi	r6,r22,65535
  80f1f8:	11e2b03a 	or	r17,r2,r7
  80f1fc:	8806d43a 	srli	r3,r17,16
  80f200:	893fffcc 	andi	r4,r17,65535
  80f204:	218b383a 	mul	r5,r4,r6
  80f208:	30c5383a 	mul	r2,r6,r3
  80f20c:	2249383a 	mul	r4,r4,r9
  80f210:	280ed43a 	srli	r7,r5,16
  80f214:	9225c83a 	sub	r18,r18,r8
  80f218:	2089883a 	add	r4,r4,r2
  80f21c:	3909883a 	add	r4,r7,r4
  80f220:	1a47383a 	mul	r3,r3,r9
  80f224:	2080022e 	bgeu	r4,r2,80f230 <__divdf3+0x438>
  80f228:	00800074 	movhi	r2,1
  80f22c:	1887883a 	add	r3,r3,r2
  80f230:	2004d43a 	srli	r2,r4,16
  80f234:	2008943a 	slli	r4,r4,16
  80f238:	297fffcc 	andi	r5,r5,65535
  80f23c:	10c7883a 	add	r3,r2,r3
  80f240:	2149883a 	add	r4,r4,r5
  80f244:	90c0a536 	bltu	r18,r3,80f4dc <__divdf3+0x6e4>
  80f248:	90c0bf26 	beq	r18,r3,80f548 <__divdf3+0x750>
  80f24c:	90c7c83a 	sub	r3,r18,r3
  80f250:	810fc83a 	sub	r7,r16,r4
  80f254:	81e5803a 	cmpltu	r18,r16,r7
  80f258:	1ca5c83a 	sub	r18,r3,r18
  80f25c:	e480c126 	beq	fp,r18,80f564 <__divdf3+0x76c>
  80f260:	a00b883a 	mov	r5,r20
  80f264:	9009883a 	mov	r4,r18
  80f268:	d9800315 	stw	r6,12(sp)
  80f26c:	d9c00215 	stw	r7,8(sp)
  80f270:	da400115 	stw	r9,4(sp)
  80f274:	0802b400 	call	802b40 <__udivsi3>
  80f278:	a00b883a 	mov	r5,r20
  80f27c:	9009883a 	mov	r4,r18
  80f280:	d8800015 	stw	r2,0(sp)
  80f284:	0802ba40 	call	802ba4 <__umodsi3>
  80f288:	d9c00217 	ldw	r7,8(sp)
  80f28c:	da000017 	ldw	r8,0(sp)
  80f290:	1006943a 	slli	r3,r2,16
  80f294:	3804d43a 	srli	r2,r7,16
  80f298:	ba21383a 	mul	r16,r23,r8
  80f29c:	d9800317 	ldw	r6,12(sp)
  80f2a0:	10c4b03a 	or	r2,r2,r3
  80f2a4:	da400117 	ldw	r9,4(sp)
  80f2a8:	1400062e 	bgeu	r2,r16,80f2c4 <__divdf3+0x4cc>
  80f2ac:	1705883a 	add	r2,r2,fp
  80f2b0:	40ffffc4 	addi	r3,r8,-1
  80f2b4:	1700ad36 	bltu	r2,fp,80f56c <__divdf3+0x774>
  80f2b8:	1400ac2e 	bgeu	r2,r16,80f56c <__divdf3+0x774>
  80f2bc:	423fff84 	addi	r8,r8,-2
  80f2c0:	1705883a 	add	r2,r2,fp
  80f2c4:	1421c83a 	sub	r16,r2,r16
  80f2c8:	a00b883a 	mov	r5,r20
  80f2cc:	8009883a 	mov	r4,r16
  80f2d0:	d9800315 	stw	r6,12(sp)
  80f2d4:	d9c00215 	stw	r7,8(sp)
  80f2d8:	da000015 	stw	r8,0(sp)
  80f2dc:	da400115 	stw	r9,4(sp)
  80f2e0:	0802b400 	call	802b40 <__udivsi3>
  80f2e4:	8009883a 	mov	r4,r16
  80f2e8:	a00b883a 	mov	r5,r20
  80f2ec:	1025883a 	mov	r18,r2
  80f2f0:	0802ba40 	call	802ba4 <__umodsi3>
  80f2f4:	d9c00217 	ldw	r7,8(sp)
  80f2f8:	1004943a 	slli	r2,r2,16
  80f2fc:	bcaf383a 	mul	r23,r23,r18
  80f300:	393fffcc 	andi	r4,r7,65535
  80f304:	2088b03a 	or	r4,r4,r2
  80f308:	d9800317 	ldw	r6,12(sp)
  80f30c:	da000017 	ldw	r8,0(sp)
  80f310:	da400117 	ldw	r9,4(sp)
  80f314:	25c0062e 	bgeu	r4,r23,80f330 <__divdf3+0x538>
  80f318:	2709883a 	add	r4,r4,fp
  80f31c:	90bfffc4 	addi	r2,r18,-1
  80f320:	27009436 	bltu	r4,fp,80f574 <__divdf3+0x77c>
  80f324:	25c0932e 	bgeu	r4,r23,80f574 <__divdf3+0x77c>
  80f328:	94bfff84 	addi	r18,r18,-2
  80f32c:	2709883a 	add	r4,r4,fp
  80f330:	4004943a 	slli	r2,r8,16
  80f334:	25efc83a 	sub	r23,r4,r23
  80f338:	1490b03a 	or	r8,r2,r18
  80f33c:	4008d43a 	srli	r4,r8,16
  80f340:	40ffffcc 	andi	r3,r8,65535
  80f344:	30c5383a 	mul	r2,r6,r3
  80f348:	1a47383a 	mul	r3,r3,r9
  80f34c:	310d383a 	mul	r6,r6,r4
  80f350:	100ad43a 	srli	r5,r2,16
  80f354:	4913383a 	mul	r9,r9,r4
  80f358:	1987883a 	add	r3,r3,r6
  80f35c:	28c7883a 	add	r3,r5,r3
  80f360:	1980022e 	bgeu	r3,r6,80f36c <__divdf3+0x574>
  80f364:	01000074 	movhi	r4,1
  80f368:	4913883a 	add	r9,r9,r4
  80f36c:	1808d43a 	srli	r4,r3,16
  80f370:	1806943a 	slli	r3,r3,16
  80f374:	10bfffcc 	andi	r2,r2,65535
  80f378:	2253883a 	add	r9,r4,r9
  80f37c:	1887883a 	add	r3,r3,r2
  80f380:	ba403836 	bltu	r23,r9,80f464 <__divdf3+0x66c>
  80f384:	ba403626 	beq	r23,r9,80f460 <__divdf3+0x668>
  80f388:	42000054 	ori	r8,r8,1
  80f38c:	a880ffc4 	addi	r2,r21,1023
  80f390:	00bf570e 	bge	zero,r2,80f0f0 <__alt_data_end+0xff80f0f0>
  80f394:	40c001cc 	andi	r3,r8,7
  80f398:	18000726 	beq	r3,zero,80f3b8 <__divdf3+0x5c0>
  80f39c:	40c003cc 	andi	r3,r8,15
  80f3a0:	01000104 	movi	r4,4
  80f3a4:	19000426 	beq	r3,r4,80f3b8 <__divdf3+0x5c0>
  80f3a8:	4107883a 	add	r3,r8,r4
  80f3ac:	1a11803a 	cmpltu	r8,r3,r8
  80f3b0:	8a23883a 	add	r17,r17,r8
  80f3b4:	1811883a 	mov	r8,r3
  80f3b8:	88c0402c 	andhi	r3,r17,256
  80f3bc:	18000426 	beq	r3,zero,80f3d0 <__divdf3+0x5d8>
  80f3c0:	00ffc034 	movhi	r3,65280
  80f3c4:	18ffffc4 	addi	r3,r3,-1
  80f3c8:	a8810004 	addi	r2,r21,1024
  80f3cc:	88e2703a 	and	r17,r17,r3
  80f3d0:	00c1ff84 	movi	r3,2046
  80f3d4:	18bee316 	blt	r3,r2,80ef64 <__alt_data_end+0xff80ef64>
  80f3d8:	8824977a 	slli	r18,r17,29
  80f3dc:	4010d0fa 	srli	r8,r8,3
  80f3e0:	8822927a 	slli	r17,r17,9
  80f3e4:	1081ffcc 	andi	r2,r2,2047
  80f3e8:	9224b03a 	or	r18,r18,r8
  80f3ec:	880ad33a 	srli	r5,r17,12
  80f3f0:	98c0004c 	andi	r3,r19,1
  80f3f4:	003edf06 	br	80ef74 <__alt_data_end+0xff80ef74>
  80f3f8:	8080022c 	andhi	r2,r16,8
  80f3fc:	10001226 	beq	r2,zero,80f448 <__divdf3+0x650>
  80f400:	8880022c 	andhi	r2,r17,8
  80f404:	1000101e 	bne	r2,zero,80f448 <__divdf3+0x650>
  80f408:	00800434 	movhi	r2,16
  80f40c:	89400234 	orhi	r5,r17,8
  80f410:	10bfffc4 	addi	r2,r2,-1
  80f414:	b007883a 	mov	r3,r22
  80f418:	288a703a 	and	r5,r5,r2
  80f41c:	4025883a 	mov	r18,r8
  80f420:	003f3106 	br	80f0e8 <__alt_data_end+0xff80f0e8>
  80f424:	008000c4 	movi	r2,3
  80f428:	3880a626 	beq	r7,r2,80f6c4 <__divdf3+0x8cc>
  80f42c:	00800044 	movi	r2,1
  80f430:	3880521e 	bne	r7,r2,80f57c <__divdf3+0x784>
  80f434:	b807883a 	mov	r3,r23
  80f438:	0005883a 	mov	r2,zero
  80f43c:	000b883a 	mov	r5,zero
  80f440:	0025883a 	mov	r18,zero
  80f444:	003ecb06 	br	80ef74 <__alt_data_end+0xff80ef74>
  80f448:	00800434 	movhi	r2,16
  80f44c:	81400234 	orhi	r5,r16,8
  80f450:	10bfffc4 	addi	r2,r2,-1
  80f454:	a007883a 	mov	r3,r20
  80f458:	288a703a 	and	r5,r5,r2
  80f45c:	003f2206 	br	80f0e8 <__alt_data_end+0xff80f0e8>
  80f460:	183fca26 	beq	r3,zero,80f38c <__alt_data_end+0xff80f38c>
  80f464:	e5ef883a 	add	r23,fp,r23
  80f468:	40bfffc4 	addi	r2,r8,-1
  80f46c:	bf00392e 	bgeu	r23,fp,80f554 <__divdf3+0x75c>
  80f470:	1011883a 	mov	r8,r2
  80f474:	ba7fc41e 	bne	r23,r9,80f388 <__alt_data_end+0xff80f388>
  80f478:	b0ffc31e 	bne	r22,r3,80f388 <__alt_data_end+0xff80f388>
  80f47c:	003fc306 	br	80f38c <__alt_data_end+0xff80f38c>
  80f480:	143ff604 	addi	r16,r2,-40
  80f484:	9c20983a 	sll	r16,r19,r16
  80f488:	0025883a 	mov	r18,zero
  80f48c:	003ee206 	br	80f018 <__alt_data_end+0xff80f018>
  80f490:	d9800315 	stw	r6,12(sp)
  80f494:	d9c00215 	stw	r7,8(sp)
  80f498:	0804c900 	call	804c90 <__clzsi2>
  80f49c:	10800804 	addi	r2,r2,32
  80f4a0:	d9c00217 	ldw	r7,8(sp)
  80f4a4:	d9800317 	ldw	r6,12(sp)
  80f4a8:	003ed106 	br	80eff0 <__alt_data_end+0xff80eff0>
  80f4ac:	147ff604 	addi	r17,r2,-40
  80f4b0:	3462983a 	sll	r17,r6,r17
  80f4b4:	0011883a 	mov	r8,zero
  80f4b8:	003ef506 	br	80f090 <__alt_data_end+0xff80f090>
  80f4bc:	3009883a 	mov	r4,r6
  80f4c0:	d9800315 	stw	r6,12(sp)
  80f4c4:	da400115 	stw	r9,4(sp)
  80f4c8:	0804c900 	call	804c90 <__clzsi2>
  80f4cc:	10800804 	addi	r2,r2,32
  80f4d0:	da400117 	ldw	r9,4(sp)
  80f4d4:	d9800317 	ldw	r6,12(sp)
  80f4d8:	003ee306 	br	80f068 <__alt_data_end+0xff80f068>
  80f4dc:	85a1883a 	add	r16,r16,r22
  80f4e0:	8585803a 	cmpltu	r2,r16,r22
  80f4e4:	1705883a 	add	r2,r2,fp
  80f4e8:	14a5883a 	add	r18,r2,r18
  80f4ec:	88bfffc4 	addi	r2,r17,-1
  80f4f0:	e4800c2e 	bgeu	fp,r18,80f524 <__divdf3+0x72c>
  80f4f4:	90c03e36 	bltu	r18,r3,80f5f0 <__divdf3+0x7f8>
  80f4f8:	1c806926 	beq	r3,r18,80f6a0 <__divdf3+0x8a8>
  80f4fc:	90c7c83a 	sub	r3,r18,r3
  80f500:	1023883a 	mov	r17,r2
  80f504:	003f5206 	br	80f250 <__alt_data_end+0xff80f250>
  80f508:	923f0436 	bltu	r18,r8,80f11c <__alt_data_end+0xff80f11c>
  80f50c:	800897fa 	slli	r4,r16,31
  80f510:	9004d07a 	srli	r2,r18,1
  80f514:	8006d07a 	srli	r3,r16,1
  80f518:	902097fa 	slli	r16,r18,31
  80f51c:	20a4b03a 	or	r18,r4,r2
  80f520:	003f0106 	br	80f128 <__alt_data_end+0xff80f128>
  80f524:	e4bff51e 	bne	fp,r18,80f4fc <__alt_data_end+0xff80f4fc>
  80f528:	85bff22e 	bgeu	r16,r22,80f4f4 <__alt_data_end+0xff80f4f4>
  80f52c:	e0c7c83a 	sub	r3,fp,r3
  80f530:	1023883a 	mov	r17,r2
  80f534:	003f4606 	br	80f250 <__alt_data_end+0xff80f250>
  80f538:	100f883a 	mov	r7,r2
  80f53c:	003f2b06 	br	80f1ec <__alt_data_end+0xff80f1ec>
  80f540:	180d883a 	mov	r6,r3
  80f544:	003f1306 	br	80f194 <__alt_data_end+0xff80f194>
  80f548:	813fe436 	bltu	r16,r4,80f4dc <__alt_data_end+0xff80f4dc>
  80f54c:	0007883a 	mov	r3,zero
  80f550:	003f3f06 	br	80f250 <__alt_data_end+0xff80f250>
  80f554:	ba402c36 	bltu	r23,r9,80f608 <__divdf3+0x810>
  80f558:	4dc05426 	beq	r9,r23,80f6ac <__divdf3+0x8b4>
  80f55c:	1011883a 	mov	r8,r2
  80f560:	003f8906 	br	80f388 <__alt_data_end+0xff80f388>
  80f564:	023fffc4 	movi	r8,-1
  80f568:	003f8806 	br	80f38c <__alt_data_end+0xff80f38c>
  80f56c:	1811883a 	mov	r8,r3
  80f570:	003f5406 	br	80f2c4 <__alt_data_end+0xff80f2c4>
  80f574:	1025883a 	mov	r18,r2
  80f578:	003f6d06 	br	80f330 <__alt_data_end+0xff80f330>
  80f57c:	b827883a 	mov	r19,r23
  80f580:	003f8206 	br	80f38c <__alt_data_end+0xff80f38c>
  80f584:	010007c4 	movi	r4,31
  80f588:	20c02616 	blt	r4,r3,80f624 <__divdf3+0x82c>
  80f58c:	00800804 	movi	r2,32
  80f590:	10c5c83a 	sub	r2,r2,r3
  80f594:	888a983a 	sll	r5,r17,r2
  80f598:	40c8d83a 	srl	r4,r8,r3
  80f59c:	4084983a 	sll	r2,r8,r2
  80f5a0:	88e2d83a 	srl	r17,r17,r3
  80f5a4:	2906b03a 	or	r3,r5,r4
  80f5a8:	1004c03a 	cmpne	r2,r2,zero
  80f5ac:	1886b03a 	or	r3,r3,r2
  80f5b0:	188001cc 	andi	r2,r3,7
  80f5b4:	10000726 	beq	r2,zero,80f5d4 <__divdf3+0x7dc>
  80f5b8:	188003cc 	andi	r2,r3,15
  80f5bc:	01000104 	movi	r4,4
  80f5c0:	11000426 	beq	r2,r4,80f5d4 <__divdf3+0x7dc>
  80f5c4:	1805883a 	mov	r2,r3
  80f5c8:	10c00104 	addi	r3,r2,4
  80f5cc:	1885803a 	cmpltu	r2,r3,r2
  80f5d0:	88a3883a 	add	r17,r17,r2
  80f5d4:	8880202c 	andhi	r2,r17,128
  80f5d8:	10002726 	beq	r2,zero,80f678 <__divdf3+0x880>
  80f5dc:	98c0004c 	andi	r3,r19,1
  80f5e0:	00800044 	movi	r2,1
  80f5e4:	000b883a 	mov	r5,zero
  80f5e8:	0025883a 	mov	r18,zero
  80f5ec:	003e6106 	br	80ef74 <__alt_data_end+0xff80ef74>
  80f5f0:	85a1883a 	add	r16,r16,r22
  80f5f4:	8585803a 	cmpltu	r2,r16,r22
  80f5f8:	1705883a 	add	r2,r2,fp
  80f5fc:	14a5883a 	add	r18,r2,r18
  80f600:	8c7fff84 	addi	r17,r17,-2
  80f604:	003f1106 	br	80f24c <__alt_data_end+0xff80f24c>
  80f608:	b589883a 	add	r4,r22,r22
  80f60c:	25ad803a 	cmpltu	r22,r4,r22
  80f610:	b739883a 	add	fp,r22,fp
  80f614:	40bfff84 	addi	r2,r8,-2
  80f618:	bf2f883a 	add	r23,r23,fp
  80f61c:	202d883a 	mov	r22,r4
  80f620:	003f9306 	br	80f470 <__alt_data_end+0xff80f470>
  80f624:	013ff844 	movi	r4,-31
  80f628:	2085c83a 	sub	r2,r4,r2
  80f62c:	8888d83a 	srl	r4,r17,r2
  80f630:	00800804 	movi	r2,32
  80f634:	18802126 	beq	r3,r2,80f6bc <__divdf3+0x8c4>
  80f638:	00801004 	movi	r2,64
  80f63c:	10c5c83a 	sub	r2,r2,r3
  80f640:	8884983a 	sll	r2,r17,r2
  80f644:	1204b03a 	or	r2,r2,r8
  80f648:	1004c03a 	cmpne	r2,r2,zero
  80f64c:	2084b03a 	or	r2,r4,r2
  80f650:	144001cc 	andi	r17,r2,7
  80f654:	88000d1e 	bne	r17,zero,80f68c <__divdf3+0x894>
  80f658:	000b883a 	mov	r5,zero
  80f65c:	1024d0fa 	srli	r18,r2,3
  80f660:	98c0004c 	andi	r3,r19,1
  80f664:	0005883a 	mov	r2,zero
  80f668:	9464b03a 	or	r18,r18,r17
  80f66c:	003e4106 	br	80ef74 <__alt_data_end+0xff80ef74>
  80f670:	1007883a 	mov	r3,r2
  80f674:	0023883a 	mov	r17,zero
  80f678:	880a927a 	slli	r5,r17,9
  80f67c:	1805883a 	mov	r2,r3
  80f680:	8822977a 	slli	r17,r17,29
  80f684:	280ad33a 	srli	r5,r5,12
  80f688:	003ff406 	br	80f65c <__alt_data_end+0xff80f65c>
  80f68c:	10c003cc 	andi	r3,r2,15
  80f690:	01000104 	movi	r4,4
  80f694:	193ff626 	beq	r3,r4,80f670 <__alt_data_end+0xff80f670>
  80f698:	0023883a 	mov	r17,zero
  80f69c:	003fca06 	br	80f5c8 <__alt_data_end+0xff80f5c8>
  80f6a0:	813fd336 	bltu	r16,r4,80f5f0 <__alt_data_end+0xff80f5f0>
  80f6a4:	1023883a 	mov	r17,r2
  80f6a8:	003fa806 	br	80f54c <__alt_data_end+0xff80f54c>
  80f6ac:	b0ffd636 	bltu	r22,r3,80f608 <__alt_data_end+0xff80f608>
  80f6b0:	1011883a 	mov	r8,r2
  80f6b4:	b0ff341e 	bne	r22,r3,80f388 <__alt_data_end+0xff80f388>
  80f6b8:	003f3406 	br	80f38c <__alt_data_end+0xff80f38c>
  80f6bc:	0005883a 	mov	r2,zero
  80f6c0:	003fe006 	br	80f644 <__alt_data_end+0xff80f644>
  80f6c4:	00800434 	movhi	r2,16
  80f6c8:	89400234 	orhi	r5,r17,8
  80f6cc:	10bfffc4 	addi	r2,r2,-1
  80f6d0:	b807883a 	mov	r3,r23
  80f6d4:	288a703a 	and	r5,r5,r2
  80f6d8:	4025883a 	mov	r18,r8
  80f6dc:	003e8206 	br	80f0e8 <__alt_data_end+0xff80f0e8>

0080f6e0 <__ledf2>:
  80f6e0:	2804d53a 	srli	r2,r5,20
  80f6e4:	3810d53a 	srli	r8,r7,20
  80f6e8:	00c00434 	movhi	r3,16
  80f6ec:	18ffffc4 	addi	r3,r3,-1
  80f6f0:	1081ffcc 	andi	r2,r2,2047
  80f6f4:	0241ffc4 	movi	r9,2047
  80f6f8:	28d4703a 	and	r10,r5,r3
  80f6fc:	4201ffcc 	andi	r8,r8,2047
  80f700:	38c6703a 	and	r3,r7,r3
  80f704:	280ad7fa 	srli	r5,r5,31
  80f708:	380ed7fa 	srli	r7,r7,31
  80f70c:	12401f26 	beq	r2,r9,80f78c <__ledf2+0xac>
  80f710:	0241ffc4 	movi	r9,2047
  80f714:	42401426 	beq	r8,r9,80f768 <__ledf2+0x88>
  80f718:	1000091e 	bne	r2,zero,80f740 <__ledf2+0x60>
  80f71c:	2296b03a 	or	r11,r4,r10
  80f720:	5813003a 	cmpeq	r9,r11,zero
  80f724:	29403fcc 	andi	r5,r5,255
  80f728:	40000a1e 	bne	r8,zero,80f754 <__ledf2+0x74>
  80f72c:	30d8b03a 	or	r12,r6,r3
  80f730:	6000081e 	bne	r12,zero,80f754 <__ledf2+0x74>
  80f734:	0005883a 	mov	r2,zero
  80f738:	5800111e 	bne	r11,zero,80f780 <__ledf2+0xa0>
  80f73c:	f800283a 	ret
  80f740:	29403fcc 	andi	r5,r5,255
  80f744:	40000c1e 	bne	r8,zero,80f778 <__ledf2+0x98>
  80f748:	30d2b03a 	or	r9,r6,r3
  80f74c:	48000c26 	beq	r9,zero,80f780 <__ledf2+0xa0>
  80f750:	0013883a 	mov	r9,zero
  80f754:	39c03fcc 	andi	r7,r7,255
  80f758:	48000826 	beq	r9,zero,80f77c <__ledf2+0x9c>
  80f75c:	38001126 	beq	r7,zero,80f7a4 <__ledf2+0xc4>
  80f760:	00800044 	movi	r2,1
  80f764:	f800283a 	ret
  80f768:	30d2b03a 	or	r9,r6,r3
  80f76c:	483fea26 	beq	r9,zero,80f718 <__alt_data_end+0xff80f718>
  80f770:	00800084 	movi	r2,2
  80f774:	f800283a 	ret
  80f778:	39c03fcc 	andi	r7,r7,255
  80f77c:	39400726 	beq	r7,r5,80f79c <__ledf2+0xbc>
  80f780:	2800081e 	bne	r5,zero,80f7a4 <__ledf2+0xc4>
  80f784:	00800044 	movi	r2,1
  80f788:	f800283a 	ret
  80f78c:	2292b03a 	or	r9,r4,r10
  80f790:	483fdf26 	beq	r9,zero,80f710 <__alt_data_end+0xff80f710>
  80f794:	00800084 	movi	r2,2
  80f798:	f800283a 	ret
  80f79c:	4080030e 	bge	r8,r2,80f7ac <__ledf2+0xcc>
  80f7a0:	383fef26 	beq	r7,zero,80f760 <__alt_data_end+0xff80f760>
  80f7a4:	00bfffc4 	movi	r2,-1
  80f7a8:	f800283a 	ret
  80f7ac:	123feb16 	blt	r2,r8,80f75c <__alt_data_end+0xff80f75c>
  80f7b0:	1abff336 	bltu	r3,r10,80f780 <__alt_data_end+0xff80f780>
  80f7b4:	50c00326 	beq	r10,r3,80f7c4 <__ledf2+0xe4>
  80f7b8:	50c0042e 	bgeu	r10,r3,80f7cc <__ledf2+0xec>
  80f7bc:	283fe81e 	bne	r5,zero,80f760 <__alt_data_end+0xff80f760>
  80f7c0:	003ff806 	br	80f7a4 <__alt_data_end+0xff80f7a4>
  80f7c4:	313fee36 	bltu	r6,r4,80f780 <__alt_data_end+0xff80f780>
  80f7c8:	21bffc36 	bltu	r4,r6,80f7bc <__alt_data_end+0xff80f7bc>
  80f7cc:	0005883a 	mov	r2,zero
  80f7d0:	f800283a 	ret

0080f7d4 <__floatunsidf>:
  80f7d4:	defffe04 	addi	sp,sp,-8
  80f7d8:	dc000015 	stw	r16,0(sp)
  80f7dc:	dfc00115 	stw	ra,4(sp)
  80f7e0:	2021883a 	mov	r16,r4
  80f7e4:	20002226 	beq	r4,zero,80f870 <__floatunsidf+0x9c>
  80f7e8:	0804c900 	call	804c90 <__clzsi2>
  80f7ec:	01010784 	movi	r4,1054
  80f7f0:	2089c83a 	sub	r4,r4,r2
  80f7f4:	01810cc4 	movi	r6,1075
  80f7f8:	310dc83a 	sub	r6,r6,r4
  80f7fc:	00c007c4 	movi	r3,31
  80f800:	1980120e 	bge	r3,r6,80f84c <__floatunsidf+0x78>
  80f804:	00c104c4 	movi	r3,1043
  80f808:	1907c83a 	sub	r3,r3,r4
  80f80c:	80ca983a 	sll	r5,r16,r3
  80f810:	00800434 	movhi	r2,16
  80f814:	10bfffc4 	addi	r2,r2,-1
  80f818:	2101ffcc 	andi	r4,r4,2047
  80f81c:	0021883a 	mov	r16,zero
  80f820:	288a703a 	and	r5,r5,r2
  80f824:	2008953a 	slli	r4,r4,20
  80f828:	00c00434 	movhi	r3,16
  80f82c:	18ffffc4 	addi	r3,r3,-1
  80f830:	28c6703a 	and	r3,r5,r3
  80f834:	8005883a 	mov	r2,r16
  80f838:	1906b03a 	or	r3,r3,r4
  80f83c:	dfc00117 	ldw	ra,4(sp)
  80f840:	dc000017 	ldw	r16,0(sp)
  80f844:	dec00204 	addi	sp,sp,8
  80f848:	f800283a 	ret
  80f84c:	00c002c4 	movi	r3,11
  80f850:	188bc83a 	sub	r5,r3,r2
  80f854:	814ad83a 	srl	r5,r16,r5
  80f858:	00c00434 	movhi	r3,16
  80f85c:	18ffffc4 	addi	r3,r3,-1
  80f860:	81a0983a 	sll	r16,r16,r6
  80f864:	2101ffcc 	andi	r4,r4,2047
  80f868:	28ca703a 	and	r5,r5,r3
  80f86c:	003fed06 	br	80f824 <__alt_data_end+0xff80f824>
  80f870:	0009883a 	mov	r4,zero
  80f874:	000b883a 	mov	r5,zero
  80f878:	003fea06 	br	80f824 <__alt_data_end+0xff80f824>

0080f87c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80f87c:	defffe04 	addi	sp,sp,-8
  80f880:	dfc00115 	stw	ra,4(sp)
  80f884:	df000015 	stw	fp,0(sp)
  80f888:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80f88c:	d0a00b17 	ldw	r2,-32724(gp)
  80f890:	10000326 	beq	r2,zero,80f8a0 <alt_get_errno+0x24>
  80f894:	d0a00b17 	ldw	r2,-32724(gp)
  80f898:	103ee83a 	callr	r2
  80f89c:	00000106 	br	80f8a4 <alt_get_errno+0x28>
  80f8a0:	d0a6d104 	addi	r2,gp,-25788
}
  80f8a4:	e037883a 	mov	sp,fp
  80f8a8:	dfc00117 	ldw	ra,4(sp)
  80f8ac:	df000017 	ldw	fp,0(sp)
  80f8b0:	dec00204 	addi	sp,sp,8
  80f8b4:	f800283a 	ret

0080f8b8 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
  80f8b8:	defffb04 	addi	sp,sp,-20
  80f8bc:	dfc00415 	stw	ra,16(sp)
  80f8c0:	df000315 	stw	fp,12(sp)
  80f8c4:	df000304 	addi	fp,sp,12
  80f8c8:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
  80f8cc:	e0bfff17 	ldw	r2,-4(fp)
  80f8d0:	10000616 	blt	r2,zero,80f8ec <close+0x34>
  80f8d4:	e0bfff17 	ldw	r2,-4(fp)
  80f8d8:	10c00324 	muli	r3,r2,12
  80f8dc:	00802074 	movhi	r2,129
  80f8e0:	108bb304 	addi	r2,r2,11980
  80f8e4:	1885883a 	add	r2,r3,r2
  80f8e8:	00000106 	br	80f8f0 <close+0x38>
  80f8ec:	0005883a 	mov	r2,zero
  80f8f0:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
  80f8f4:	e0bffd17 	ldw	r2,-12(fp)
  80f8f8:	10001926 	beq	r2,zero,80f960 <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
  80f8fc:	e0bffd17 	ldw	r2,-12(fp)
  80f900:	10800017 	ldw	r2,0(r2)
  80f904:	10800417 	ldw	r2,16(r2)
  80f908:	10000626 	beq	r2,zero,80f924 <close+0x6c>
  80f90c:	e0bffd17 	ldw	r2,-12(fp)
  80f910:	10800017 	ldw	r2,0(r2)
  80f914:	10800417 	ldw	r2,16(r2)
  80f918:	e13ffd17 	ldw	r4,-12(fp)
  80f91c:	103ee83a 	callr	r2
  80f920:	00000106 	br	80f928 <close+0x70>
  80f924:	0005883a 	mov	r2,zero
  80f928:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
  80f92c:	e13fff17 	ldw	r4,-4(fp)
  80f930:	080ff780 	call	80ff78 <alt_release_fd>
    if (rval < 0)
  80f934:	e0bffe17 	ldw	r2,-8(fp)
  80f938:	1000070e 	bge	r2,zero,80f958 <close+0xa0>
    {
      ALT_ERRNO = -rval;
  80f93c:	080f87c0 	call	80f87c <alt_get_errno>
  80f940:	1007883a 	mov	r3,r2
  80f944:	e0bffe17 	ldw	r2,-8(fp)
  80f948:	0085c83a 	sub	r2,zero,r2
  80f94c:	18800015 	stw	r2,0(r3)
      return -1;
  80f950:	00bfffc4 	movi	r2,-1
  80f954:	00000706 	br	80f974 <close+0xbc>
    }
    return 0;
  80f958:	0005883a 	mov	r2,zero
  80f95c:	00000506 	br	80f974 <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
  80f960:	080f87c0 	call	80f87c <alt_get_errno>
  80f964:	1007883a 	mov	r3,r2
  80f968:	00801444 	movi	r2,81
  80f96c:	18800015 	stw	r2,0(r3)
    return -1;
  80f970:	00bfffc4 	movi	r2,-1
  }
}
  80f974:	e037883a 	mov	sp,fp
  80f978:	dfc00117 	ldw	ra,4(sp)
  80f97c:	df000017 	ldw	fp,0(sp)
  80f980:	dec00204 	addi	sp,sp,8
  80f984:	f800283a 	ret

0080f988 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
  80f988:	defffc04 	addi	sp,sp,-16
  80f98c:	df000315 	stw	fp,12(sp)
  80f990:	df000304 	addi	fp,sp,12
  80f994:	e13ffd15 	stw	r4,-12(fp)
  80f998:	e17ffe15 	stw	r5,-8(fp)
  80f99c:	e1bfff15 	stw	r6,-4(fp)
  return len;
  80f9a0:	e0bfff17 	ldw	r2,-4(fp)
}
  80f9a4:	e037883a 	mov	sp,fp
  80f9a8:	df000017 	ldw	fp,0(sp)
  80f9ac:	dec00104 	addi	sp,sp,4
  80f9b0:	f800283a 	ret

0080f9b4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80f9b4:	defffe04 	addi	sp,sp,-8
  80f9b8:	dfc00115 	stw	ra,4(sp)
  80f9bc:	df000015 	stw	fp,0(sp)
  80f9c0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80f9c4:	d0a00b17 	ldw	r2,-32724(gp)
  80f9c8:	10000326 	beq	r2,zero,80f9d8 <alt_get_errno+0x24>
  80f9cc:	d0a00b17 	ldw	r2,-32724(gp)
  80f9d0:	103ee83a 	callr	r2
  80f9d4:	00000106 	br	80f9dc <alt_get_errno+0x28>
  80f9d8:	d0a6d104 	addi	r2,gp,-25788
}
  80f9dc:	e037883a 	mov	sp,fp
  80f9e0:	dfc00117 	ldw	ra,4(sp)
  80f9e4:	df000017 	ldw	fp,0(sp)
  80f9e8:	dec00204 	addi	sp,sp,8
  80f9ec:	f800283a 	ret

0080f9f0 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
  80f9f0:	defffb04 	addi	sp,sp,-20
  80f9f4:	dfc00415 	stw	ra,16(sp)
  80f9f8:	df000315 	stw	fp,12(sp)
  80f9fc:	df000304 	addi	fp,sp,12
  80fa00:	e13ffe15 	stw	r4,-8(fp)
  80fa04:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80fa08:	e0bffe17 	ldw	r2,-8(fp)
  80fa0c:	10000616 	blt	r2,zero,80fa28 <fstat+0x38>
  80fa10:	e0bffe17 	ldw	r2,-8(fp)
  80fa14:	10c00324 	muli	r3,r2,12
  80fa18:	00802074 	movhi	r2,129
  80fa1c:	108bb304 	addi	r2,r2,11980
  80fa20:	1885883a 	add	r2,r3,r2
  80fa24:	00000106 	br	80fa2c <fstat+0x3c>
  80fa28:	0005883a 	mov	r2,zero
  80fa2c:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
  80fa30:	e0bffd17 	ldw	r2,-12(fp)
  80fa34:	10001026 	beq	r2,zero,80fa78 <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
  80fa38:	e0bffd17 	ldw	r2,-12(fp)
  80fa3c:	10800017 	ldw	r2,0(r2)
  80fa40:	10800817 	ldw	r2,32(r2)
  80fa44:	10000726 	beq	r2,zero,80fa64 <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
  80fa48:	e0bffd17 	ldw	r2,-12(fp)
  80fa4c:	10800017 	ldw	r2,0(r2)
  80fa50:	10800817 	ldw	r2,32(r2)
  80fa54:	e17fff17 	ldw	r5,-4(fp)
  80fa58:	e13ffd17 	ldw	r4,-12(fp)
  80fa5c:	103ee83a 	callr	r2
  80fa60:	00000a06 	br	80fa8c <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
  80fa64:	e0bfff17 	ldw	r2,-4(fp)
  80fa68:	00c80004 	movi	r3,8192
  80fa6c:	10c00115 	stw	r3,4(r2)
      return 0;
  80fa70:	0005883a 	mov	r2,zero
  80fa74:	00000506 	br	80fa8c <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
  80fa78:	080f9b40 	call	80f9b4 <alt_get_errno>
  80fa7c:	1007883a 	mov	r3,r2
  80fa80:	00801444 	movi	r2,81
  80fa84:	18800015 	stw	r2,0(r3)
    return -1;
  80fa88:	00bfffc4 	movi	r2,-1
  }
}
  80fa8c:	e037883a 	mov	sp,fp
  80fa90:	dfc00117 	ldw	ra,4(sp)
  80fa94:	df000017 	ldw	fp,0(sp)
  80fa98:	dec00204 	addi	sp,sp,8
  80fa9c:	f800283a 	ret

0080faa0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80faa0:	defffe04 	addi	sp,sp,-8
  80faa4:	dfc00115 	stw	ra,4(sp)
  80faa8:	df000015 	stw	fp,0(sp)
  80faac:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80fab0:	d0a00b17 	ldw	r2,-32724(gp)
  80fab4:	10000326 	beq	r2,zero,80fac4 <alt_get_errno+0x24>
  80fab8:	d0a00b17 	ldw	r2,-32724(gp)
  80fabc:	103ee83a 	callr	r2
  80fac0:	00000106 	br	80fac8 <alt_get_errno+0x28>
  80fac4:	d0a6d104 	addi	r2,gp,-25788
}
  80fac8:	e037883a 	mov	sp,fp
  80facc:	dfc00117 	ldw	ra,4(sp)
  80fad0:	df000017 	ldw	fp,0(sp)
  80fad4:	dec00204 	addi	sp,sp,8
  80fad8:	f800283a 	ret

0080fadc <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
  80fadc:	deffed04 	addi	sp,sp,-76
  80fae0:	dfc01215 	stw	ra,72(sp)
  80fae4:	df001115 	stw	fp,68(sp)
  80fae8:	df001104 	addi	fp,sp,68
  80faec:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80faf0:	e0bfff17 	ldw	r2,-4(fp)
  80faf4:	10000616 	blt	r2,zero,80fb10 <isatty+0x34>
  80faf8:	e0bfff17 	ldw	r2,-4(fp)
  80fafc:	10c00324 	muli	r3,r2,12
  80fb00:	00802074 	movhi	r2,129
  80fb04:	108bb304 	addi	r2,r2,11980
  80fb08:	1885883a 	add	r2,r3,r2
  80fb0c:	00000106 	br	80fb14 <isatty+0x38>
  80fb10:	0005883a 	mov	r2,zero
  80fb14:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
  80fb18:	e0bfef17 	ldw	r2,-68(fp)
  80fb1c:	10000e26 	beq	r2,zero,80fb58 <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
  80fb20:	e0bfef17 	ldw	r2,-68(fp)
  80fb24:	10800017 	ldw	r2,0(r2)
  80fb28:	10800817 	ldw	r2,32(r2)
  80fb2c:	1000021e 	bne	r2,zero,80fb38 <isatty+0x5c>
    {
      return 1;
  80fb30:	00800044 	movi	r2,1
  80fb34:	00000d06 	br	80fb6c <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
  80fb38:	e0bff004 	addi	r2,fp,-64
  80fb3c:	100b883a 	mov	r5,r2
  80fb40:	e13fff17 	ldw	r4,-4(fp)
  80fb44:	080f9f00 	call	80f9f0 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
  80fb48:	e0bff117 	ldw	r2,-60(fp)
  80fb4c:	10880020 	cmpeqi	r2,r2,8192
  80fb50:	10803fcc 	andi	r2,r2,255
  80fb54:	00000506 	br	80fb6c <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
  80fb58:	080faa00 	call	80faa0 <alt_get_errno>
  80fb5c:	1007883a 	mov	r3,r2
  80fb60:	00801444 	movi	r2,81
  80fb64:	18800015 	stw	r2,0(r3)
    return 0;
  80fb68:	0005883a 	mov	r2,zero
  }
}
  80fb6c:	e037883a 	mov	sp,fp
  80fb70:	dfc00117 	ldw	ra,4(sp)
  80fb74:	df000017 	ldw	fp,0(sp)
  80fb78:	dec00204 	addi	sp,sp,8
  80fb7c:	f800283a 	ret

0080fb80 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
  80fb80:	defffc04 	addi	sp,sp,-16
  80fb84:	df000315 	stw	fp,12(sp)
  80fb88:	df000304 	addi	fp,sp,12
  80fb8c:	e13ffd15 	stw	r4,-12(fp)
  80fb90:	e17ffe15 	stw	r5,-8(fp)
  80fb94:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
  80fb98:	e0fffe17 	ldw	r3,-8(fp)
  80fb9c:	e0bffd17 	ldw	r2,-12(fp)
  80fba0:	18800c26 	beq	r3,r2,80fbd4 <alt_load_section+0x54>
  {
    while( to != end )
  80fba4:	00000806 	br	80fbc8 <alt_load_section+0x48>
    {
      *to++ = *from++;
  80fba8:	e0bffe17 	ldw	r2,-8(fp)
  80fbac:	10c00104 	addi	r3,r2,4
  80fbb0:	e0fffe15 	stw	r3,-8(fp)
  80fbb4:	e0fffd17 	ldw	r3,-12(fp)
  80fbb8:	19000104 	addi	r4,r3,4
  80fbbc:	e13ffd15 	stw	r4,-12(fp)
  80fbc0:	18c00017 	ldw	r3,0(r3)
  80fbc4:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
  80fbc8:	e0fffe17 	ldw	r3,-8(fp)
  80fbcc:	e0bfff17 	ldw	r2,-4(fp)
  80fbd0:	18bff51e 	bne	r3,r2,80fba8 <__alt_data_end+0xff80fba8>
    {
      *to++ = *from++;
    }
  }
}
  80fbd4:	0001883a 	nop
  80fbd8:	e037883a 	mov	sp,fp
  80fbdc:	df000017 	ldw	fp,0(sp)
  80fbe0:	dec00104 	addi	sp,sp,4
  80fbe4:	f800283a 	ret

0080fbe8 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
  80fbe8:	defffe04 	addi	sp,sp,-8
  80fbec:	dfc00115 	stw	ra,4(sp)
  80fbf0:	df000015 	stw	fp,0(sp)
  80fbf4:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
  80fbf8:	01802074 	movhi	r6,129
  80fbfc:	31903b04 	addi	r6,r6,16620
  80fc00:	01402074 	movhi	r5,129
  80fc04:	29498004 	addi	r5,r5,9728
  80fc08:	01002074 	movhi	r4,129
  80fc0c:	21103b04 	addi	r4,r4,16620
  80fc10:	080fb800 	call	80fb80 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
  80fc14:	01802034 	movhi	r6,128
  80fc18:	31809104 	addi	r6,r6,580
  80fc1c:	01402034 	movhi	r5,128
  80fc20:	29400804 	addi	r5,r5,32
  80fc24:	01002034 	movhi	r4,128
  80fc28:	21000804 	addi	r4,r4,32
  80fc2c:	080fb800 	call	80fb80 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
  80fc30:	01802074 	movhi	r6,129
  80fc34:	31898004 	addi	r6,r6,9728
  80fc38:	01402074 	movhi	r5,129
  80fc3c:	29483804 	addi	r5,r5,8416
  80fc40:	01002074 	movhi	r4,129
  80fc44:	21083804 	addi	r4,r4,8416
  80fc48:	080fb800 	call	80fb80 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
  80fc4c:	0810fcc0 	call	810fcc <alt_dcache_flush_all>
  alt_icache_flush_all();
  80fc50:	08111b40 	call	8111b4 <alt_icache_flush_all>
}
  80fc54:	0001883a 	nop
  80fc58:	e037883a 	mov	sp,fp
  80fc5c:	dfc00117 	ldw	ra,4(sp)
  80fc60:	df000017 	ldw	fp,0(sp)
  80fc64:	dec00204 	addi	sp,sp,8
  80fc68:	f800283a 	ret

0080fc6c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80fc6c:	defffe04 	addi	sp,sp,-8
  80fc70:	dfc00115 	stw	ra,4(sp)
  80fc74:	df000015 	stw	fp,0(sp)
  80fc78:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80fc7c:	d0a00b17 	ldw	r2,-32724(gp)
  80fc80:	10000326 	beq	r2,zero,80fc90 <alt_get_errno+0x24>
  80fc84:	d0a00b17 	ldw	r2,-32724(gp)
  80fc88:	103ee83a 	callr	r2
  80fc8c:	00000106 	br	80fc94 <alt_get_errno+0x28>
  80fc90:	d0a6d104 	addi	r2,gp,-25788
}
  80fc94:	e037883a 	mov	sp,fp
  80fc98:	dfc00117 	ldw	ra,4(sp)
  80fc9c:	df000017 	ldw	fp,0(sp)
  80fca0:	dec00204 	addi	sp,sp,8
  80fca4:	f800283a 	ret

0080fca8 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
  80fca8:	defff904 	addi	sp,sp,-28
  80fcac:	dfc00615 	stw	ra,24(sp)
  80fcb0:	df000515 	stw	fp,20(sp)
  80fcb4:	df000504 	addi	fp,sp,20
  80fcb8:	e13ffd15 	stw	r4,-12(fp)
  80fcbc:	e17ffe15 	stw	r5,-8(fp)
  80fcc0:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
  80fcc4:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80fcc8:	e0bffd17 	ldw	r2,-12(fp)
  80fccc:	10000616 	blt	r2,zero,80fce8 <lseek+0x40>
  80fcd0:	e0bffd17 	ldw	r2,-12(fp)
  80fcd4:	10c00324 	muli	r3,r2,12
  80fcd8:	00802074 	movhi	r2,129
  80fcdc:	108bb304 	addi	r2,r2,11980
  80fce0:	1885883a 	add	r2,r3,r2
  80fce4:	00000106 	br	80fcec <lseek+0x44>
  80fce8:	0005883a 	mov	r2,zero
  80fcec:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
  80fcf0:	e0bffc17 	ldw	r2,-16(fp)
  80fcf4:	10001026 	beq	r2,zero,80fd38 <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
  80fcf8:	e0bffc17 	ldw	r2,-16(fp)
  80fcfc:	10800017 	ldw	r2,0(r2)
  80fd00:	10800717 	ldw	r2,28(r2)
  80fd04:	10000926 	beq	r2,zero,80fd2c <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
  80fd08:	e0bffc17 	ldw	r2,-16(fp)
  80fd0c:	10800017 	ldw	r2,0(r2)
  80fd10:	10800717 	ldw	r2,28(r2)
  80fd14:	e1bfff17 	ldw	r6,-4(fp)
  80fd18:	e17ffe17 	ldw	r5,-8(fp)
  80fd1c:	e13ffc17 	ldw	r4,-16(fp)
  80fd20:	103ee83a 	callr	r2
  80fd24:	e0bffb15 	stw	r2,-20(fp)
  80fd28:	00000506 	br	80fd40 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
  80fd2c:	00bfde84 	movi	r2,-134
  80fd30:	e0bffb15 	stw	r2,-20(fp)
  80fd34:	00000206 	br	80fd40 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
  80fd38:	00bfebc4 	movi	r2,-81
  80fd3c:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
  80fd40:	e0bffb17 	ldw	r2,-20(fp)
  80fd44:	1000070e 	bge	r2,zero,80fd64 <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
  80fd48:	080fc6c0 	call	80fc6c <alt_get_errno>
  80fd4c:	1007883a 	mov	r3,r2
  80fd50:	e0bffb17 	ldw	r2,-20(fp)
  80fd54:	0085c83a 	sub	r2,zero,r2
  80fd58:	18800015 	stw	r2,0(r3)
    rc = -1;
  80fd5c:	00bfffc4 	movi	r2,-1
  80fd60:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
  80fd64:	e0bffb17 	ldw	r2,-20(fp)
}
  80fd68:	e037883a 	mov	sp,fp
  80fd6c:	dfc00117 	ldw	ra,4(sp)
  80fd70:	df000017 	ldw	fp,0(sp)
  80fd74:	dec00204 	addi	sp,sp,8
  80fd78:	f800283a 	ret

0080fd7c <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
  80fd7c:	defffd04 	addi	sp,sp,-12
  80fd80:	dfc00215 	stw	ra,8(sp)
  80fd84:	df000115 	stw	fp,4(sp)
  80fd88:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
  80fd8c:	0009883a 	mov	r4,zero
  80fd90:	08102a80 	call	8102a8 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
  80fd94:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
  80fd98:	08102e00 	call	8102e0 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
  80fd9c:	01802074 	movhi	r6,129
  80fda0:	31897804 	addi	r6,r6,9696
  80fda4:	01402074 	movhi	r5,129
  80fda8:	29497804 	addi	r5,r5,9696
  80fdac:	01002074 	movhi	r4,129
  80fdb0:	21097804 	addi	r4,r4,9696
  80fdb4:	081154c0 	call	81154c <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
  80fdb8:	08110f40 	call	8110f4 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
  80fdbc:	01002074 	movhi	r4,129
  80fdc0:	21045504 	addi	r4,r4,4436
  80fdc4:	0811d4c0 	call	811d4c <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
  80fdc8:	d0a6d217 	ldw	r2,-25784(gp)
  80fdcc:	d0e6d317 	ldw	r3,-25780(gp)
  80fdd0:	d126d417 	ldw	r4,-25776(gp)
  80fdd4:	200d883a 	mov	r6,r4
  80fdd8:	180b883a 	mov	r5,r3
  80fddc:	1009883a 	mov	r4,r2
  80fde0:	080076c0 	call	80076c <main>
  80fde4:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
  80fde8:	01000044 	movi	r4,1
  80fdec:	080f8b80 	call	80f8b8 <close>
  exit (result);
  80fdf0:	e13fff17 	ldw	r4,-4(fp)
  80fdf4:	0811d600 	call	811d60 <exit>

0080fdf8 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
  80fdf8:	defffe04 	addi	sp,sp,-8
  80fdfc:	df000115 	stw	fp,4(sp)
  80fe00:	df000104 	addi	fp,sp,4
  80fe04:	e13fff15 	stw	r4,-4(fp)
}
  80fe08:	0001883a 	nop
  80fe0c:	e037883a 	mov	sp,fp
  80fe10:	df000017 	ldw	fp,0(sp)
  80fe14:	dec00104 	addi	sp,sp,4
  80fe18:	f800283a 	ret

0080fe1c <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
  80fe1c:	defffe04 	addi	sp,sp,-8
  80fe20:	df000115 	stw	fp,4(sp)
  80fe24:	df000104 	addi	fp,sp,4
  80fe28:	e13fff15 	stw	r4,-4(fp)
}
  80fe2c:	0001883a 	nop
  80fe30:	e037883a 	mov	sp,fp
  80fe34:	df000017 	ldw	fp,0(sp)
  80fe38:	dec00104 	addi	sp,sp,4
  80fe3c:	f800283a 	ret

0080fe40 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80fe40:	defffe04 	addi	sp,sp,-8
  80fe44:	dfc00115 	stw	ra,4(sp)
  80fe48:	df000015 	stw	fp,0(sp)
  80fe4c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80fe50:	d0a00b17 	ldw	r2,-32724(gp)
  80fe54:	10000326 	beq	r2,zero,80fe64 <alt_get_errno+0x24>
  80fe58:	d0a00b17 	ldw	r2,-32724(gp)
  80fe5c:	103ee83a 	callr	r2
  80fe60:	00000106 	br	80fe68 <alt_get_errno+0x28>
  80fe64:	d0a6d104 	addi	r2,gp,-25788
}
  80fe68:	e037883a 	mov	sp,fp
  80fe6c:	dfc00117 	ldw	ra,4(sp)
  80fe70:	df000017 	ldw	fp,0(sp)
  80fe74:	dec00204 	addi	sp,sp,8
  80fe78:	f800283a 	ret

0080fe7c <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
  80fe7c:	defff904 	addi	sp,sp,-28
  80fe80:	dfc00615 	stw	ra,24(sp)
  80fe84:	df000515 	stw	fp,20(sp)
  80fe88:	df000504 	addi	fp,sp,20
  80fe8c:	e13ffd15 	stw	r4,-12(fp)
  80fe90:	e17ffe15 	stw	r5,-8(fp)
  80fe94:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80fe98:	e0bffd17 	ldw	r2,-12(fp)
  80fe9c:	10000616 	blt	r2,zero,80feb8 <read+0x3c>
  80fea0:	e0bffd17 	ldw	r2,-12(fp)
  80fea4:	10c00324 	muli	r3,r2,12
  80fea8:	00802074 	movhi	r2,129
  80feac:	108bb304 	addi	r2,r2,11980
  80feb0:	1885883a 	add	r2,r3,r2
  80feb4:	00000106 	br	80febc <read+0x40>
  80feb8:	0005883a 	mov	r2,zero
  80febc:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
  80fec0:	e0bffb17 	ldw	r2,-20(fp)
  80fec4:	10002226 	beq	r2,zero,80ff50 <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
  80fec8:	e0bffb17 	ldw	r2,-20(fp)
  80fecc:	10800217 	ldw	r2,8(r2)
  80fed0:	108000cc 	andi	r2,r2,3
  80fed4:	10800060 	cmpeqi	r2,r2,1
  80fed8:	1000181e 	bne	r2,zero,80ff3c <read+0xc0>
        (fd->dev->read))
  80fedc:	e0bffb17 	ldw	r2,-20(fp)
  80fee0:	10800017 	ldw	r2,0(r2)
  80fee4:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
  80fee8:	10001426 	beq	r2,zero,80ff3c <read+0xc0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
  80feec:	e0bffb17 	ldw	r2,-20(fp)
  80fef0:	10800017 	ldw	r2,0(r2)
  80fef4:	10800517 	ldw	r2,20(r2)
  80fef8:	e0ffff17 	ldw	r3,-4(fp)
  80fefc:	180d883a 	mov	r6,r3
  80ff00:	e17ffe17 	ldw	r5,-8(fp)
  80ff04:	e13ffb17 	ldw	r4,-20(fp)
  80ff08:	103ee83a 	callr	r2
  80ff0c:	e0bffc15 	stw	r2,-16(fp)
  80ff10:	e0bffc17 	ldw	r2,-16(fp)
  80ff14:	1000070e 	bge	r2,zero,80ff34 <read+0xb8>
        {
          ALT_ERRNO = -rval;
  80ff18:	080fe400 	call	80fe40 <alt_get_errno>
  80ff1c:	1007883a 	mov	r3,r2
  80ff20:	e0bffc17 	ldw	r2,-16(fp)
  80ff24:	0085c83a 	sub	r2,zero,r2
  80ff28:	18800015 	stw	r2,0(r3)
          return -1;
  80ff2c:	00bfffc4 	movi	r2,-1
  80ff30:	00000c06 	br	80ff64 <read+0xe8>
        }
        return rval;
  80ff34:	e0bffc17 	ldw	r2,-16(fp)
  80ff38:	00000a06 	br	80ff64 <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
  80ff3c:	080fe400 	call	80fe40 <alt_get_errno>
  80ff40:	1007883a 	mov	r3,r2
  80ff44:	00800344 	movi	r2,13
  80ff48:	18800015 	stw	r2,0(r3)
  80ff4c:	00000406 	br	80ff60 <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
  80ff50:	080fe400 	call	80fe40 <alt_get_errno>
  80ff54:	1007883a 	mov	r3,r2
  80ff58:	00801444 	movi	r2,81
  80ff5c:	18800015 	stw	r2,0(r3)
  }
  return -1;
  80ff60:	00bfffc4 	movi	r2,-1
}
  80ff64:	e037883a 	mov	sp,fp
  80ff68:	dfc00117 	ldw	ra,4(sp)
  80ff6c:	df000017 	ldw	fp,0(sp)
  80ff70:	dec00204 	addi	sp,sp,8
  80ff74:	f800283a 	ret

0080ff78 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
  80ff78:	defffe04 	addi	sp,sp,-8
  80ff7c:	df000115 	stw	fp,4(sp)
  80ff80:	df000104 	addi	fp,sp,4
  80ff84:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
  80ff88:	e0bfff17 	ldw	r2,-4(fp)
  80ff8c:	108000d0 	cmplti	r2,r2,3
  80ff90:	10000d1e 	bne	r2,zero,80ffc8 <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
  80ff94:	00802074 	movhi	r2,129
  80ff98:	108bb304 	addi	r2,r2,11980
  80ff9c:	e0ffff17 	ldw	r3,-4(fp)
  80ffa0:	18c00324 	muli	r3,r3,12
  80ffa4:	10c5883a 	add	r2,r2,r3
  80ffa8:	10800204 	addi	r2,r2,8
  80ffac:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
  80ffb0:	00802074 	movhi	r2,129
  80ffb4:	108bb304 	addi	r2,r2,11980
  80ffb8:	e0ffff17 	ldw	r3,-4(fp)
  80ffbc:	18c00324 	muli	r3,r3,12
  80ffc0:	10c5883a 	add	r2,r2,r3
  80ffc4:	10000015 	stw	zero,0(r2)
  }
}
  80ffc8:	0001883a 	nop
  80ffcc:	e037883a 	mov	sp,fp
  80ffd0:	df000017 	ldw	fp,0(sp)
  80ffd4:	dec00104 	addi	sp,sp,4
  80ffd8:	f800283a 	ret

0080ffdc <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
  80ffdc:	defff904 	addi	sp,sp,-28
  80ffe0:	df000615 	stw	fp,24(sp)
  80ffe4:	df000604 	addi	fp,sp,24
  80ffe8:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80ffec:	0005303a 	rdctl	r2,status
  80fff0:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80fff4:	e0fffe17 	ldw	r3,-8(fp)
  80fff8:	00bfff84 	movi	r2,-2
  80fffc:	1884703a 	and	r2,r3,r2
  810000:	1001703a 	wrctl	status,r2
  
  return context;
  810004:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
  810008:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
  81000c:	d0a00c17 	ldw	r2,-32720(gp)
  810010:	10c000c4 	addi	r3,r2,3
  810014:	00bfff04 	movi	r2,-4
  810018:	1884703a 	and	r2,r3,r2
  81001c:	d0a00c15 	stw	r2,-32720(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
  810020:	d0e00c17 	ldw	r3,-32720(gp)
  810024:	e0bfff17 	ldw	r2,-4(fp)
  810028:	1887883a 	add	r3,r3,r2
  81002c:	00804034 	movhi	r2,256
  810030:	10800004 	addi	r2,r2,0
  810034:	10c0062e 	bgeu	r2,r3,810050 <sbrk+0x74>
  810038:	e0bffb17 	ldw	r2,-20(fp)
  81003c:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  810040:	e0bffa17 	ldw	r2,-24(fp)
  810044:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  810048:	00bfffc4 	movi	r2,-1
  81004c:	00000b06 	br	81007c <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
  810050:	d0a00c17 	ldw	r2,-32720(gp)
  810054:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
  810058:	d0e00c17 	ldw	r3,-32720(gp)
  81005c:	e0bfff17 	ldw	r2,-4(fp)
  810060:	1885883a 	add	r2,r3,r2
  810064:	d0a00c15 	stw	r2,-32720(gp)
  810068:	e0bffb17 	ldw	r2,-20(fp)
  81006c:	e0bffc15 	stw	r2,-16(fp)
  810070:	e0bffc17 	ldw	r2,-16(fp)
  810074:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
  810078:	e0bffd17 	ldw	r2,-12(fp)
} 
  81007c:	e037883a 	mov	sp,fp
  810080:	df000017 	ldw	fp,0(sp)
  810084:	dec00104 	addi	sp,sp,4
  810088:	f800283a 	ret

0081008c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  81008c:	defffe04 	addi	sp,sp,-8
  810090:	dfc00115 	stw	ra,4(sp)
  810094:	df000015 	stw	fp,0(sp)
  810098:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  81009c:	d0a00b17 	ldw	r2,-32724(gp)
  8100a0:	10000326 	beq	r2,zero,8100b0 <alt_get_errno+0x24>
  8100a4:	d0a00b17 	ldw	r2,-32724(gp)
  8100a8:	103ee83a 	callr	r2
  8100ac:	00000106 	br	8100b4 <alt_get_errno+0x28>
  8100b0:	d0a6d104 	addi	r2,gp,-25788
}
  8100b4:	e037883a 	mov	sp,fp
  8100b8:	dfc00117 	ldw	ra,4(sp)
  8100bc:	df000017 	ldw	fp,0(sp)
  8100c0:	dec00204 	addi	sp,sp,8
  8100c4:	f800283a 	ret

008100c8 <times>:
 *
 * ALT_TIMES is mapped onto the times() system call in alt_syscall.h
 */
 
clock_t ALT_TIMES (struct tms *buf)
{
  8100c8:	defffc04 	addi	sp,sp,-16
  8100cc:	dfc00315 	stw	ra,12(sp)
  8100d0:	df000215 	stw	fp,8(sp)
  8100d4:	df000204 	addi	fp,sp,8
  8100d8:	e13fff15 	stw	r4,-4(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
  8100dc:	d0a6d717 	ldw	r2,-25764(gp)
  clock_t ticks = alt_nticks(); 
  8100e0:	e0bffe15 	stw	r2,-8(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
  8100e4:	d0a6d617 	ldw	r2,-25768(gp)

  /* If there is no system clock present, generate an error */

  if (!alt_ticks_per_second())
  8100e8:	1000061e 	bne	r2,zero,810104 <times+0x3c>
  {
    ALT_ERRNO = ENOSYS;
  8100ec:	081008c0 	call	81008c <alt_get_errno>
  8100f0:	1007883a 	mov	r3,r2
  8100f4:	00801604 	movi	r2,88
  8100f8:	18800015 	stw	r2,0(r3)
    return 0;
  8100fc:	0005883a 	mov	r2,zero
  810100:	00000a06 	br	81012c <times+0x64>
  }

  /* Otherwise return the elapsed time */

  buf->tms_utime  = 0;
  810104:	e0bfff17 	ldw	r2,-4(fp)
  810108:	10000015 	stw	zero,0(r2)
  buf->tms_stime  = ticks;
  81010c:	e0bfff17 	ldw	r2,-4(fp)
  810110:	e0fffe17 	ldw	r3,-8(fp)
  810114:	10c00115 	stw	r3,4(r2)
  buf->tms_cutime = 0;
  810118:	e0bfff17 	ldw	r2,-4(fp)
  81011c:	10000215 	stw	zero,8(r2)
  buf->tms_cstime = 0;
  810120:	e0bfff17 	ldw	r2,-4(fp)
  810124:	10000315 	stw	zero,12(r2)

  return ticks;
  810128:	e0bffe17 	ldw	r2,-8(fp)
}
  81012c:	e037883a 	mov	sp,fp
  810130:	dfc00117 	ldw	ra,4(sp)
  810134:	df000017 	ldw	fp,0(sp)
  810138:	dec00204 	addi	sp,sp,8
  81013c:	f800283a 	ret

00810140 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  810140:	defffe04 	addi	sp,sp,-8
  810144:	dfc00115 	stw	ra,4(sp)
  810148:	df000015 	stw	fp,0(sp)
  81014c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  810150:	d0a00b17 	ldw	r2,-32724(gp)
  810154:	10000326 	beq	r2,zero,810164 <alt_get_errno+0x24>
  810158:	d0a00b17 	ldw	r2,-32724(gp)
  81015c:	103ee83a 	callr	r2
  810160:	00000106 	br	810168 <alt_get_errno+0x28>
  810164:	d0a6d104 	addi	r2,gp,-25788
}
  810168:	e037883a 	mov	sp,fp
  81016c:	dfc00117 	ldw	ra,4(sp)
  810170:	df000017 	ldw	fp,0(sp)
  810174:	dec00204 	addi	sp,sp,8
  810178:	f800283a 	ret

0081017c <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
  81017c:	defff904 	addi	sp,sp,-28
  810180:	dfc00615 	stw	ra,24(sp)
  810184:	df000515 	stw	fp,20(sp)
  810188:	df000504 	addi	fp,sp,20
  81018c:	e13ffd15 	stw	r4,-12(fp)
  810190:	e17ffe15 	stw	r5,-8(fp)
  810194:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  810198:	e0bffd17 	ldw	r2,-12(fp)
  81019c:	10000616 	blt	r2,zero,8101b8 <write+0x3c>
  8101a0:	e0bffd17 	ldw	r2,-12(fp)
  8101a4:	10c00324 	muli	r3,r2,12
  8101a8:	00802074 	movhi	r2,129
  8101ac:	108bb304 	addi	r2,r2,11980
  8101b0:	1885883a 	add	r2,r3,r2
  8101b4:	00000106 	br	8101bc <write+0x40>
  8101b8:	0005883a 	mov	r2,zero
  8101bc:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
  8101c0:	e0bffb17 	ldw	r2,-20(fp)
  8101c4:	10002126 	beq	r2,zero,81024c <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
  8101c8:	e0bffb17 	ldw	r2,-20(fp)
  8101cc:	10800217 	ldw	r2,8(r2)
  8101d0:	108000cc 	andi	r2,r2,3
  8101d4:	10001826 	beq	r2,zero,810238 <write+0xbc>
  8101d8:	e0bffb17 	ldw	r2,-20(fp)
  8101dc:	10800017 	ldw	r2,0(r2)
  8101e0:	10800617 	ldw	r2,24(r2)
  8101e4:	10001426 	beq	r2,zero,810238 <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
  8101e8:	e0bffb17 	ldw	r2,-20(fp)
  8101ec:	10800017 	ldw	r2,0(r2)
  8101f0:	10800617 	ldw	r2,24(r2)
  8101f4:	e0ffff17 	ldw	r3,-4(fp)
  8101f8:	180d883a 	mov	r6,r3
  8101fc:	e17ffe17 	ldw	r5,-8(fp)
  810200:	e13ffb17 	ldw	r4,-20(fp)
  810204:	103ee83a 	callr	r2
  810208:	e0bffc15 	stw	r2,-16(fp)
  81020c:	e0bffc17 	ldw	r2,-16(fp)
  810210:	1000070e 	bge	r2,zero,810230 <write+0xb4>
      {
        ALT_ERRNO = -rval;
  810214:	08101400 	call	810140 <alt_get_errno>
  810218:	1007883a 	mov	r3,r2
  81021c:	e0bffc17 	ldw	r2,-16(fp)
  810220:	0085c83a 	sub	r2,zero,r2
  810224:	18800015 	stw	r2,0(r3)
        return -1;
  810228:	00bfffc4 	movi	r2,-1
  81022c:	00000c06 	br	810260 <write+0xe4>
      }
      return rval;
  810230:	e0bffc17 	ldw	r2,-16(fp)
  810234:	00000a06 	br	810260 <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
  810238:	08101400 	call	810140 <alt_get_errno>
  81023c:	1007883a 	mov	r3,r2
  810240:	00800344 	movi	r2,13
  810244:	18800015 	stw	r2,0(r3)
  810248:	00000406 	br	81025c <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
  81024c:	08101400 	call	810140 <alt_get_errno>
  810250:	1007883a 	mov	r3,r2
  810254:	00801444 	movi	r2,81
  810258:	18800015 	stw	r2,0(r3)
  }
  return -1;
  81025c:	00bfffc4 	movi	r2,-1
}
  810260:	e037883a 	mov	sp,fp
  810264:	dfc00117 	ldw	ra,4(sp)
  810268:	df000017 	ldw	fp,0(sp)
  81026c:	dec00204 	addi	sp,sp,8
  810270:	f800283a 	ret

00810274 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
  810274:	defffd04 	addi	sp,sp,-12
  810278:	dfc00215 	stw	ra,8(sp)
  81027c:	df000115 	stw	fp,4(sp)
  810280:	df000104 	addi	fp,sp,4
  810284:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
  810288:	d1600804 	addi	r5,gp,-32736
  81028c:	e13fff17 	ldw	r4,-4(fp)
  810290:	08110500 	call	811050 <alt_dev_llist_insert>
}
  810294:	e037883a 	mov	sp,fp
  810298:	dfc00117 	ldw	ra,4(sp)
  81029c:	df000017 	ldw	fp,0(sp)
  8102a0:	dec00204 	addi	sp,sp,8
  8102a4:	f800283a 	ret

008102a8 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
  8102a8:	defffd04 	addi	sp,sp,-12
  8102ac:	dfc00215 	stw	ra,8(sp)
  8102b0:	df000115 	stw	fp,4(sp)
  8102b4:	df000104 	addi	fp,sp,4
  8102b8:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( CPU, cpu);
  8102bc:	08119c00 	call	8119c0 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
  8102c0:	00800044 	movi	r2,1
  8102c4:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
  8102c8:	0001883a 	nop
  8102cc:	e037883a 	mov	sp,fp
  8102d0:	dfc00117 	ldw	ra,4(sp)
  8102d4:	df000017 	ldw	fp,0(sp)
  8102d8:	dec00204 	addi	sp,sp,8
  8102dc:	f800283a 	ret

008102e0 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
  8102e0:	defffe04 	addi	sp,sp,-8
  8102e4:	dfc00115 	stw	ra,4(sp)
  8102e8:	df000015 	stw	fp,0(sp)
  8102ec:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( SYS_CLK_TIMER, sys_clk_timer);
  8102f0:	01c0fa04 	movi	r7,1000
  8102f4:	01800044 	movi	r6,1
  8102f8:	000b883a 	mov	r5,zero
  8102fc:	01004034 	movhi	r4,256
  810300:	21040004 	addi	r4,r4,4096
  810304:	0810e240 	call	810e24 <alt_avalon_timer_sc_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, jtag_uart);
  810308:	01800404 	movi	r6,16
  81030c:	000b883a 	mov	r5,zero
  810310:	01002074 	movhi	r4,129
  810314:	210c1d04 	addi	r4,r4,12404
  810318:	08104a80 	call	8104a8 <altera_avalon_jtag_uart_init>
  81031c:	01002074 	movhi	r4,129
  810320:	210c1304 	addi	r4,r4,12364
  810324:	08102740 	call	810274 <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID, sysid);
  810328:	0001883a 	nop
}
  81032c:	0001883a 	nop
  810330:	e037883a 	mov	sp,fp
  810334:	dfc00117 	ldw	ra,4(sp)
  810338:	df000017 	ldw	fp,0(sp)
  81033c:	dec00204 	addi	sp,sp,8
  810340:	f800283a 	ret

00810344 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
  810344:	defffa04 	addi	sp,sp,-24
  810348:	dfc00515 	stw	ra,20(sp)
  81034c:	df000415 	stw	fp,16(sp)
  810350:	df000404 	addi	fp,sp,16
  810354:	e13ffd15 	stw	r4,-12(fp)
  810358:	e17ffe15 	stw	r5,-8(fp)
  81035c:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  810360:	e0bffd17 	ldw	r2,-12(fp)
  810364:	10800017 	ldw	r2,0(r2)
  810368:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
  81036c:	e0bffc17 	ldw	r2,-16(fp)
  810370:	10c00a04 	addi	r3,r2,40
  810374:	e0bffd17 	ldw	r2,-12(fp)
  810378:	10800217 	ldw	r2,8(r2)
  81037c:	100f883a 	mov	r7,r2
  810380:	e1bfff17 	ldw	r6,-4(fp)
  810384:	e17ffe17 	ldw	r5,-8(fp)
  810388:	1809883a 	mov	r4,r3
  81038c:	081096c0 	call	81096c <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
  810390:	e037883a 	mov	sp,fp
  810394:	dfc00117 	ldw	ra,4(sp)
  810398:	df000017 	ldw	fp,0(sp)
  81039c:	dec00204 	addi	sp,sp,8
  8103a0:	f800283a 	ret

008103a4 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
  8103a4:	defffa04 	addi	sp,sp,-24
  8103a8:	dfc00515 	stw	ra,20(sp)
  8103ac:	df000415 	stw	fp,16(sp)
  8103b0:	df000404 	addi	fp,sp,16
  8103b4:	e13ffd15 	stw	r4,-12(fp)
  8103b8:	e17ffe15 	stw	r5,-8(fp)
  8103bc:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  8103c0:	e0bffd17 	ldw	r2,-12(fp)
  8103c4:	10800017 	ldw	r2,0(r2)
  8103c8:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
  8103cc:	e0bffc17 	ldw	r2,-16(fp)
  8103d0:	10c00a04 	addi	r3,r2,40
  8103d4:	e0bffd17 	ldw	r2,-12(fp)
  8103d8:	10800217 	ldw	r2,8(r2)
  8103dc:	100f883a 	mov	r7,r2
  8103e0:	e1bfff17 	ldw	r6,-4(fp)
  8103e4:	e17ffe17 	ldw	r5,-8(fp)
  8103e8:	1809883a 	mov	r4,r3
  8103ec:	0810b880 	call	810b88 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
  8103f0:	e037883a 	mov	sp,fp
  8103f4:	dfc00117 	ldw	ra,4(sp)
  8103f8:	df000017 	ldw	fp,0(sp)
  8103fc:	dec00204 	addi	sp,sp,8
  810400:	f800283a 	ret

00810404 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
  810404:	defffc04 	addi	sp,sp,-16
  810408:	dfc00315 	stw	ra,12(sp)
  81040c:	df000215 	stw	fp,8(sp)
  810410:	df000204 	addi	fp,sp,8
  810414:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  810418:	e0bfff17 	ldw	r2,-4(fp)
  81041c:	10800017 	ldw	r2,0(r2)
  810420:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
  810424:	e0bffe17 	ldw	r2,-8(fp)
  810428:	10c00a04 	addi	r3,r2,40
  81042c:	e0bfff17 	ldw	r2,-4(fp)
  810430:	10800217 	ldw	r2,8(r2)
  810434:	100b883a 	mov	r5,r2
  810438:	1809883a 	mov	r4,r3
  81043c:	08108140 	call	810814 <altera_avalon_jtag_uart_close>
}
  810440:	e037883a 	mov	sp,fp
  810444:	dfc00117 	ldw	ra,4(sp)
  810448:	df000017 	ldw	fp,0(sp)
  81044c:	dec00204 	addi	sp,sp,8
  810450:	f800283a 	ret

00810454 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
  810454:	defffa04 	addi	sp,sp,-24
  810458:	dfc00515 	stw	ra,20(sp)
  81045c:	df000415 	stw	fp,16(sp)
  810460:	df000404 	addi	fp,sp,16
  810464:	e13ffd15 	stw	r4,-12(fp)
  810468:	e17ffe15 	stw	r5,-8(fp)
  81046c:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
  810470:	e0bffd17 	ldw	r2,-12(fp)
  810474:	10800017 	ldw	r2,0(r2)
  810478:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
  81047c:	e0bffc17 	ldw	r2,-16(fp)
  810480:	10800a04 	addi	r2,r2,40
  810484:	e1bfff17 	ldw	r6,-4(fp)
  810488:	e17ffe17 	ldw	r5,-8(fp)
  81048c:	1009883a 	mov	r4,r2
  810490:	081087c0 	call	81087c <altera_avalon_jtag_uart_ioctl>
}
  810494:	e037883a 	mov	sp,fp
  810498:	dfc00117 	ldw	ra,4(sp)
  81049c:	df000017 	ldw	fp,0(sp)
  8104a0:	dec00204 	addi	sp,sp,8
  8104a4:	f800283a 	ret

008104a8 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
  8104a8:	defffa04 	addi	sp,sp,-24
  8104ac:	dfc00515 	stw	ra,20(sp)
  8104b0:	df000415 	stw	fp,16(sp)
  8104b4:	df000404 	addi	fp,sp,16
  8104b8:	e13ffd15 	stw	r4,-12(fp)
  8104bc:	e17ffe15 	stw	r5,-8(fp)
  8104c0:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  8104c4:	e0bffd17 	ldw	r2,-12(fp)
  8104c8:	00c00044 	movi	r3,1
  8104cc:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
  8104d0:	e0bffd17 	ldw	r2,-12(fp)
  8104d4:	10800017 	ldw	r2,0(r2)
  8104d8:	10800104 	addi	r2,r2,4
  8104dc:	1007883a 	mov	r3,r2
  8104e0:	e0bffd17 	ldw	r2,-12(fp)
  8104e4:	10800817 	ldw	r2,32(r2)
  8104e8:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
  8104ec:	e0bffe17 	ldw	r2,-8(fp)
  8104f0:	e0ffff17 	ldw	r3,-4(fp)
  8104f4:	d8000015 	stw	zero,0(sp)
  8104f8:	e1fffd17 	ldw	r7,-12(fp)
  8104fc:	01802074 	movhi	r6,129
  810500:	31815a04 	addi	r6,r6,1384
  810504:	180b883a 	mov	r5,r3
  810508:	1009883a 	mov	r4,r2
  81050c:	08111e80 	call	8111e8 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
  810510:	e0bffd17 	ldw	r2,-12(fp)
  810514:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
  810518:	e0bffd17 	ldw	r2,-12(fp)
  81051c:	10800204 	addi	r2,r2,8
  810520:	d0e6d617 	ldw	r3,-25768(gp)
  810524:	e1fffd17 	ldw	r7,-12(fp)
  810528:	01802074 	movhi	r6,129
  81052c:	3181dd04 	addi	r6,r6,1908
  810530:	180b883a 	mov	r5,r3
  810534:	1009883a 	mov	r4,r2
  810538:	0810ea00 	call	810ea0 <alt_alarm_start>
  81053c:	1000040e 	bge	r2,zero,810550 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
  810540:	e0fffd17 	ldw	r3,-12(fp)
  810544:	00a00034 	movhi	r2,32768
  810548:	10bfffc4 	addi	r2,r2,-1
  81054c:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
  810550:	0001883a 	nop
  810554:	e037883a 	mov	sp,fp
  810558:	dfc00117 	ldw	ra,4(sp)
  81055c:	df000017 	ldw	fp,0(sp)
  810560:	dec00204 	addi	sp,sp,8
  810564:	f800283a 	ret

00810568 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
  810568:	defff804 	addi	sp,sp,-32
  81056c:	df000715 	stw	fp,28(sp)
  810570:	df000704 	addi	fp,sp,28
  810574:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
  810578:	e0bfff17 	ldw	r2,-4(fp)
  81057c:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
  810580:	e0bffb17 	ldw	r2,-20(fp)
  810584:	10800017 	ldw	r2,0(r2)
  810588:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  81058c:	e0bffc17 	ldw	r2,-16(fp)
  810590:	10800104 	addi	r2,r2,4
  810594:	10800037 	ldwio	r2,0(r2)
  810598:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
  81059c:	e0bffd17 	ldw	r2,-12(fp)
  8105a0:	1080c00c 	andi	r2,r2,768
  8105a4:	10006d26 	beq	r2,zero,81075c <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
  8105a8:	e0bffd17 	ldw	r2,-12(fp)
  8105ac:	1080400c 	andi	r2,r2,256
  8105b0:	10003526 	beq	r2,zero,810688 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
  8105b4:	00800074 	movhi	r2,1
  8105b8:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  8105bc:	e0bffb17 	ldw	r2,-20(fp)
  8105c0:	10800a17 	ldw	r2,40(r2)
  8105c4:	10800044 	addi	r2,r2,1
  8105c8:	1081ffcc 	andi	r2,r2,2047
  8105cc:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
  8105d0:	e0bffb17 	ldw	r2,-20(fp)
  8105d4:	10c00b17 	ldw	r3,44(r2)
  8105d8:	e0bffe17 	ldw	r2,-8(fp)
  8105dc:	18801526 	beq	r3,r2,810634 <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
  8105e0:	e0bffc17 	ldw	r2,-16(fp)
  8105e4:	10800037 	ldwio	r2,0(r2)
  8105e8:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
  8105ec:	e0bff917 	ldw	r2,-28(fp)
  8105f0:	10a0000c 	andi	r2,r2,32768
  8105f4:	10001126 	beq	r2,zero,81063c <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
  8105f8:	e0bffb17 	ldw	r2,-20(fp)
  8105fc:	10800a17 	ldw	r2,40(r2)
  810600:	e0fff917 	ldw	r3,-28(fp)
  810604:	1809883a 	mov	r4,r3
  810608:	e0fffb17 	ldw	r3,-20(fp)
  81060c:	1885883a 	add	r2,r3,r2
  810610:	10800e04 	addi	r2,r2,56
  810614:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  810618:	e0bffb17 	ldw	r2,-20(fp)
  81061c:	10800a17 	ldw	r2,40(r2)
  810620:	10800044 	addi	r2,r2,1
  810624:	10c1ffcc 	andi	r3,r2,2047
  810628:	e0bffb17 	ldw	r2,-20(fp)
  81062c:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
  810630:	003fe206 	br	8105bc <__alt_data_end+0xff8105bc>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
  810634:	0001883a 	nop
  810638:	00000106 	br	810640 <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
  81063c:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
  810640:	e0bff917 	ldw	r2,-28(fp)
  810644:	10bfffec 	andhi	r2,r2,65535
  810648:	10000f26 	beq	r2,zero,810688 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  81064c:	e0bffb17 	ldw	r2,-20(fp)
  810650:	10c00817 	ldw	r3,32(r2)
  810654:	00bfff84 	movi	r2,-2
  810658:	1886703a 	and	r3,r3,r2
  81065c:	e0bffb17 	ldw	r2,-20(fp)
  810660:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
  810664:	e0bffc17 	ldw	r2,-16(fp)
  810668:	10800104 	addi	r2,r2,4
  81066c:	1007883a 	mov	r3,r2
  810670:	e0bffb17 	ldw	r2,-20(fp)
  810674:	10800817 	ldw	r2,32(r2)
  810678:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  81067c:	e0bffc17 	ldw	r2,-16(fp)
  810680:	10800104 	addi	r2,r2,4
  810684:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
  810688:	e0bffd17 	ldw	r2,-12(fp)
  81068c:	1080800c 	andi	r2,r2,512
  810690:	103fbe26 	beq	r2,zero,81058c <__alt_data_end+0xff81058c>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
  810694:	e0bffd17 	ldw	r2,-12(fp)
  810698:	1004d43a 	srli	r2,r2,16
  81069c:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
  8106a0:	00001406 	br	8106f4 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
  8106a4:	e0bffc17 	ldw	r2,-16(fp)
  8106a8:	e0fffb17 	ldw	r3,-20(fp)
  8106ac:	18c00d17 	ldw	r3,52(r3)
  8106b0:	e13ffb17 	ldw	r4,-20(fp)
  8106b4:	20c7883a 	add	r3,r4,r3
  8106b8:	18c20e04 	addi	r3,r3,2104
  8106bc:	18c00003 	ldbu	r3,0(r3)
  8106c0:	18c03fcc 	andi	r3,r3,255
  8106c4:	18c0201c 	xori	r3,r3,128
  8106c8:	18ffe004 	addi	r3,r3,-128
  8106cc:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  8106d0:	e0bffb17 	ldw	r2,-20(fp)
  8106d4:	10800d17 	ldw	r2,52(r2)
  8106d8:	10800044 	addi	r2,r2,1
  8106dc:	10c1ffcc 	andi	r3,r2,2047
  8106e0:	e0bffb17 	ldw	r2,-20(fp)
  8106e4:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
  8106e8:	e0bffa17 	ldw	r2,-24(fp)
  8106ec:	10bfffc4 	addi	r2,r2,-1
  8106f0:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
  8106f4:	e0bffa17 	ldw	r2,-24(fp)
  8106f8:	10000526 	beq	r2,zero,810710 <altera_avalon_jtag_uart_irq+0x1a8>
  8106fc:	e0bffb17 	ldw	r2,-20(fp)
  810700:	10c00d17 	ldw	r3,52(r2)
  810704:	e0bffb17 	ldw	r2,-20(fp)
  810708:	10800c17 	ldw	r2,48(r2)
  81070c:	18bfe51e 	bne	r3,r2,8106a4 <__alt_data_end+0xff8106a4>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
  810710:	e0bffa17 	ldw	r2,-24(fp)
  810714:	103f9d26 	beq	r2,zero,81058c <__alt_data_end+0xff81058c>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
  810718:	e0bffb17 	ldw	r2,-20(fp)
  81071c:	10c00817 	ldw	r3,32(r2)
  810720:	00bfff44 	movi	r2,-3
  810724:	1886703a 	and	r3,r3,r2
  810728:	e0bffb17 	ldw	r2,-20(fp)
  81072c:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  810730:	e0bffb17 	ldw	r2,-20(fp)
  810734:	10800017 	ldw	r2,0(r2)
  810738:	10800104 	addi	r2,r2,4
  81073c:	1007883a 	mov	r3,r2
  810740:	e0bffb17 	ldw	r2,-20(fp)
  810744:	10800817 	ldw	r2,32(r2)
  810748:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  81074c:	e0bffc17 	ldw	r2,-16(fp)
  810750:	10800104 	addi	r2,r2,4
  810754:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
  810758:	003f8c06 	br	81058c <__alt_data_end+0xff81058c>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
  81075c:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
  810760:	0001883a 	nop
  810764:	e037883a 	mov	sp,fp
  810768:	df000017 	ldw	fp,0(sp)
  81076c:	dec00104 	addi	sp,sp,4
  810770:	f800283a 	ret

00810774 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
  810774:	defff804 	addi	sp,sp,-32
  810778:	df000715 	stw	fp,28(sp)
  81077c:	df000704 	addi	fp,sp,28
  810780:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
  810784:	e0bffb17 	ldw	r2,-20(fp)
  810788:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
  81078c:	e0bff917 	ldw	r2,-28(fp)
  810790:	10800017 	ldw	r2,0(r2)
  810794:	10800104 	addi	r2,r2,4
  810798:	10800037 	ldwio	r2,0(r2)
  81079c:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
  8107a0:	e0bffa17 	ldw	r2,-24(fp)
  8107a4:	1081000c 	andi	r2,r2,1024
  8107a8:	10000b26 	beq	r2,zero,8107d8 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
  8107ac:	e0bff917 	ldw	r2,-28(fp)
  8107b0:	10800017 	ldw	r2,0(r2)
  8107b4:	10800104 	addi	r2,r2,4
  8107b8:	1007883a 	mov	r3,r2
  8107bc:	e0bff917 	ldw	r2,-28(fp)
  8107c0:	10800817 	ldw	r2,32(r2)
  8107c4:	10810014 	ori	r2,r2,1024
  8107c8:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
  8107cc:	e0bff917 	ldw	r2,-28(fp)
  8107d0:	10000915 	stw	zero,36(r2)
  8107d4:	00000a06 	br	810800 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
  8107d8:	e0bff917 	ldw	r2,-28(fp)
  8107dc:	10c00917 	ldw	r3,36(r2)
  8107e0:	00a00034 	movhi	r2,32768
  8107e4:	10bfff04 	addi	r2,r2,-4
  8107e8:	10c00536 	bltu	r2,r3,810800 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
  8107ec:	e0bff917 	ldw	r2,-28(fp)
  8107f0:	10800917 	ldw	r2,36(r2)
  8107f4:	10c00044 	addi	r3,r2,1
  8107f8:	e0bff917 	ldw	r2,-28(fp)
  8107fc:	10c00915 	stw	r3,36(r2)
  810800:	d0a6d617 	ldw	r2,-25768(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
  810804:	e037883a 	mov	sp,fp
  810808:	df000017 	ldw	fp,0(sp)
  81080c:	dec00104 	addi	sp,sp,4
  810810:	f800283a 	ret

00810814 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
  810814:	defffd04 	addi	sp,sp,-12
  810818:	df000215 	stw	fp,8(sp)
  81081c:	df000204 	addi	fp,sp,8
  810820:	e13ffe15 	stw	r4,-8(fp)
  810824:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
  810828:	00000506 	br	810840 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
  81082c:	e0bfff17 	ldw	r2,-4(fp)
  810830:	1090000c 	andi	r2,r2,16384
  810834:	10000226 	beq	r2,zero,810840 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
  810838:	00bffd44 	movi	r2,-11
  81083c:	00000b06 	br	81086c <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
  810840:	e0bffe17 	ldw	r2,-8(fp)
  810844:	10c00d17 	ldw	r3,52(r2)
  810848:	e0bffe17 	ldw	r2,-8(fp)
  81084c:	10800c17 	ldw	r2,48(r2)
  810850:	18800526 	beq	r3,r2,810868 <altera_avalon_jtag_uart_close+0x54>
  810854:	e0bffe17 	ldw	r2,-8(fp)
  810858:	10c00917 	ldw	r3,36(r2)
  81085c:	e0bffe17 	ldw	r2,-8(fp)
  810860:	10800117 	ldw	r2,4(r2)
  810864:	18bff136 	bltu	r3,r2,81082c <__alt_data_end+0xff81082c>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
  810868:	0005883a 	mov	r2,zero
}
  81086c:	e037883a 	mov	sp,fp
  810870:	df000017 	ldw	fp,0(sp)
  810874:	dec00104 	addi	sp,sp,4
  810878:	f800283a 	ret

0081087c <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
  81087c:	defffa04 	addi	sp,sp,-24
  810880:	df000515 	stw	fp,20(sp)
  810884:	df000504 	addi	fp,sp,20
  810888:	e13ffd15 	stw	r4,-12(fp)
  81088c:	e17ffe15 	stw	r5,-8(fp)
  810890:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
  810894:	00bff9c4 	movi	r2,-25
  810898:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
  81089c:	e0bffe17 	ldw	r2,-8(fp)
  8108a0:	10da8060 	cmpeqi	r3,r2,27137
  8108a4:	1800031e 	bne	r3,zero,8108b4 <altera_avalon_jtag_uart_ioctl+0x38>
  8108a8:	109a80a0 	cmpeqi	r2,r2,27138
  8108ac:	1000181e 	bne	r2,zero,810910 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
  8108b0:	00002906 	br	810958 <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
  8108b4:	e0bffd17 	ldw	r2,-12(fp)
  8108b8:	10c00117 	ldw	r3,4(r2)
  8108bc:	00a00034 	movhi	r2,32768
  8108c0:	10bfffc4 	addi	r2,r2,-1
  8108c4:	18802126 	beq	r3,r2,81094c <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
  8108c8:	e0bfff17 	ldw	r2,-4(fp)
  8108cc:	10800017 	ldw	r2,0(r2)
  8108d0:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
  8108d4:	e0bffc17 	ldw	r2,-16(fp)
  8108d8:	10800090 	cmplti	r2,r2,2
  8108dc:	1000061e 	bne	r2,zero,8108f8 <altera_avalon_jtag_uart_ioctl+0x7c>
  8108e0:	e0fffc17 	ldw	r3,-16(fp)
  8108e4:	00a00034 	movhi	r2,32768
  8108e8:	10bfffc4 	addi	r2,r2,-1
  8108ec:	18800226 	beq	r3,r2,8108f8 <altera_avalon_jtag_uart_ioctl+0x7c>
  8108f0:	e0bffc17 	ldw	r2,-16(fp)
  8108f4:	00000206 	br	810900 <altera_avalon_jtag_uart_ioctl+0x84>
  8108f8:	00a00034 	movhi	r2,32768
  8108fc:	10bfff84 	addi	r2,r2,-2
  810900:	e0fffd17 	ldw	r3,-12(fp)
  810904:	18800115 	stw	r2,4(r3)
      rc = 0;
  810908:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
  81090c:	00000f06 	br	81094c <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
  810910:	e0bffd17 	ldw	r2,-12(fp)
  810914:	10c00117 	ldw	r3,4(r2)
  810918:	00a00034 	movhi	r2,32768
  81091c:	10bfffc4 	addi	r2,r2,-1
  810920:	18800c26 	beq	r3,r2,810954 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
  810924:	e0bffd17 	ldw	r2,-12(fp)
  810928:	10c00917 	ldw	r3,36(r2)
  81092c:	e0bffd17 	ldw	r2,-12(fp)
  810930:	10800117 	ldw	r2,4(r2)
  810934:	1885803a 	cmpltu	r2,r3,r2
  810938:	10c03fcc 	andi	r3,r2,255
  81093c:	e0bfff17 	ldw	r2,-4(fp)
  810940:	10c00015 	stw	r3,0(r2)
      rc = 0;
  810944:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
  810948:	00000206 	br	810954 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
  81094c:	0001883a 	nop
  810950:	00000106 	br	810958 <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
  810954:	0001883a 	nop

  default:
    break;
  }

  return rc;
  810958:	e0bffb17 	ldw	r2,-20(fp)
}
  81095c:	e037883a 	mov	sp,fp
  810960:	df000017 	ldw	fp,0(sp)
  810964:	dec00104 	addi	sp,sp,4
  810968:	f800283a 	ret

0081096c <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
  81096c:	defff304 	addi	sp,sp,-52
  810970:	dfc00c15 	stw	ra,48(sp)
  810974:	df000b15 	stw	fp,44(sp)
  810978:	df000b04 	addi	fp,sp,44
  81097c:	e13ffc15 	stw	r4,-16(fp)
  810980:	e17ffd15 	stw	r5,-12(fp)
  810984:	e1bffe15 	stw	r6,-8(fp)
  810988:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
  81098c:	e0bffd17 	ldw	r2,-12(fp)
  810990:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
  810994:	00004706 	br	810ab4 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
  810998:	e0bffc17 	ldw	r2,-16(fp)
  81099c:	10800a17 	ldw	r2,40(r2)
  8109a0:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
  8109a4:	e0bffc17 	ldw	r2,-16(fp)
  8109a8:	10800b17 	ldw	r2,44(r2)
  8109ac:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
  8109b0:	e0fff717 	ldw	r3,-36(fp)
  8109b4:	e0bff817 	ldw	r2,-32(fp)
  8109b8:	18800536 	bltu	r3,r2,8109d0 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
  8109bc:	e0fff717 	ldw	r3,-36(fp)
  8109c0:	e0bff817 	ldw	r2,-32(fp)
  8109c4:	1885c83a 	sub	r2,r3,r2
  8109c8:	e0bff615 	stw	r2,-40(fp)
  8109cc:	00000406 	br	8109e0 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
  8109d0:	00c20004 	movi	r3,2048
  8109d4:	e0bff817 	ldw	r2,-32(fp)
  8109d8:	1885c83a 	sub	r2,r3,r2
  8109dc:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
  8109e0:	e0bff617 	ldw	r2,-40(fp)
  8109e4:	10001e26 	beq	r2,zero,810a60 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
  8109e8:	e0fffe17 	ldw	r3,-8(fp)
  8109ec:	e0bff617 	ldw	r2,-40(fp)
  8109f0:	1880022e 	bgeu	r3,r2,8109fc <altera_avalon_jtag_uart_read+0x90>
        n = space;
  8109f4:	e0bffe17 	ldw	r2,-8(fp)
  8109f8:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
  8109fc:	e0bffc17 	ldw	r2,-16(fp)
  810a00:	10c00e04 	addi	r3,r2,56
  810a04:	e0bff817 	ldw	r2,-32(fp)
  810a08:	1885883a 	add	r2,r3,r2
  810a0c:	e1bff617 	ldw	r6,-40(fp)
  810a10:	100b883a 	mov	r5,r2
  810a14:	e13ff517 	ldw	r4,-44(fp)
  810a18:	080a7c00 	call	80a7c0 <memcpy>
      ptr   += n;
  810a1c:	e0fff517 	ldw	r3,-44(fp)
  810a20:	e0bff617 	ldw	r2,-40(fp)
  810a24:	1885883a 	add	r2,r3,r2
  810a28:	e0bff515 	stw	r2,-44(fp)
      space -= n;
  810a2c:	e0fffe17 	ldw	r3,-8(fp)
  810a30:	e0bff617 	ldw	r2,-40(fp)
  810a34:	1885c83a 	sub	r2,r3,r2
  810a38:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  810a3c:	e0fff817 	ldw	r3,-32(fp)
  810a40:	e0bff617 	ldw	r2,-40(fp)
  810a44:	1885883a 	add	r2,r3,r2
  810a48:	10c1ffcc 	andi	r3,r2,2047
  810a4c:	e0bffc17 	ldw	r2,-16(fp)
  810a50:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
  810a54:	e0bffe17 	ldw	r2,-8(fp)
  810a58:	00bfcf16 	blt	zero,r2,810998 <__alt_data_end+0xff810998>
  810a5c:	00000106 	br	810a64 <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
  810a60:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
  810a64:	e0fff517 	ldw	r3,-44(fp)
  810a68:	e0bffd17 	ldw	r2,-12(fp)
  810a6c:	1880141e 	bne	r3,r2,810ac0 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
  810a70:	e0bfff17 	ldw	r2,-4(fp)
  810a74:	1090000c 	andi	r2,r2,16384
  810a78:	1000131e 	bne	r2,zero,810ac8 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
  810a7c:	0001883a 	nop
  810a80:	e0bffc17 	ldw	r2,-16(fp)
  810a84:	10c00a17 	ldw	r3,40(r2)
  810a88:	e0bff717 	ldw	r2,-36(fp)
  810a8c:	1880051e 	bne	r3,r2,810aa4 <altera_avalon_jtag_uart_read+0x138>
  810a90:	e0bffc17 	ldw	r2,-16(fp)
  810a94:	10c00917 	ldw	r3,36(r2)
  810a98:	e0bffc17 	ldw	r2,-16(fp)
  810a9c:	10800117 	ldw	r2,4(r2)
  810aa0:	18bff736 	bltu	r3,r2,810a80 <__alt_data_end+0xff810a80>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
  810aa4:	e0bffc17 	ldw	r2,-16(fp)
  810aa8:	10c00a17 	ldw	r3,40(r2)
  810aac:	e0bff717 	ldw	r2,-36(fp)
  810ab0:	18800726 	beq	r3,r2,810ad0 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
  810ab4:	e0bffe17 	ldw	r2,-8(fp)
  810ab8:	00bfb716 	blt	zero,r2,810998 <__alt_data_end+0xff810998>
  810abc:	00000506 	br	810ad4 <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
  810ac0:	0001883a 	nop
  810ac4:	00000306 	br	810ad4 <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
  810ac8:	0001883a 	nop
  810acc:	00000106 	br	810ad4 <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
  810ad0:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
  810ad4:	e0fff517 	ldw	r3,-44(fp)
  810ad8:	e0bffd17 	ldw	r2,-12(fp)
  810adc:	18801826 	beq	r3,r2,810b40 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  810ae0:	0005303a 	rdctl	r2,status
  810ae4:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  810ae8:	e0fffb17 	ldw	r3,-20(fp)
  810aec:	00bfff84 	movi	r2,-2
  810af0:	1884703a 	and	r2,r3,r2
  810af4:	1001703a 	wrctl	status,r2
  
  return context;
  810af8:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
  810afc:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  810b00:	e0bffc17 	ldw	r2,-16(fp)
  810b04:	10800817 	ldw	r2,32(r2)
  810b08:	10c00054 	ori	r3,r2,1
  810b0c:	e0bffc17 	ldw	r2,-16(fp)
  810b10:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  810b14:	e0bffc17 	ldw	r2,-16(fp)
  810b18:	10800017 	ldw	r2,0(r2)
  810b1c:	10800104 	addi	r2,r2,4
  810b20:	1007883a 	mov	r3,r2
  810b24:	e0bffc17 	ldw	r2,-16(fp)
  810b28:	10800817 	ldw	r2,32(r2)
  810b2c:	18800035 	stwio	r2,0(r3)
  810b30:	e0bffa17 	ldw	r2,-24(fp)
  810b34:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  810b38:	e0bff917 	ldw	r2,-28(fp)
  810b3c:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
  810b40:	e0fff517 	ldw	r3,-44(fp)
  810b44:	e0bffd17 	ldw	r2,-12(fp)
  810b48:	18800426 	beq	r3,r2,810b5c <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
  810b4c:	e0fff517 	ldw	r3,-44(fp)
  810b50:	e0bffd17 	ldw	r2,-12(fp)
  810b54:	1885c83a 	sub	r2,r3,r2
  810b58:	00000606 	br	810b74 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
  810b5c:	e0bfff17 	ldw	r2,-4(fp)
  810b60:	1090000c 	andi	r2,r2,16384
  810b64:	10000226 	beq	r2,zero,810b70 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
  810b68:	00bffd44 	movi	r2,-11
  810b6c:	00000106 	br	810b74 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
  810b70:	00bffec4 	movi	r2,-5
}
  810b74:	e037883a 	mov	sp,fp
  810b78:	dfc00117 	ldw	ra,4(sp)
  810b7c:	df000017 	ldw	fp,0(sp)
  810b80:	dec00204 	addi	sp,sp,8
  810b84:	f800283a 	ret

00810b88 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
  810b88:	defff304 	addi	sp,sp,-52
  810b8c:	dfc00c15 	stw	ra,48(sp)
  810b90:	df000b15 	stw	fp,44(sp)
  810b94:	df000b04 	addi	fp,sp,44
  810b98:	e13ffc15 	stw	r4,-16(fp)
  810b9c:	e17ffd15 	stw	r5,-12(fp)
  810ba0:	e1bffe15 	stw	r6,-8(fp)
  810ba4:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
  810ba8:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
  810bac:	e0bffd17 	ldw	r2,-12(fp)
  810bb0:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
  810bb4:	00003706 	br	810c94 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
  810bb8:	e0bffc17 	ldw	r2,-16(fp)
  810bbc:	10800c17 	ldw	r2,48(r2)
  810bc0:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
  810bc4:	e0bffc17 	ldw	r2,-16(fp)
  810bc8:	10800d17 	ldw	r2,52(r2)
  810bcc:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
  810bd0:	e0fff917 	ldw	r3,-28(fp)
  810bd4:	e0bff517 	ldw	r2,-44(fp)
  810bd8:	1880062e 	bgeu	r3,r2,810bf4 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
  810bdc:	e0fff517 	ldw	r3,-44(fp)
  810be0:	e0bff917 	ldw	r2,-28(fp)
  810be4:	1885c83a 	sub	r2,r3,r2
  810be8:	10bfffc4 	addi	r2,r2,-1
  810bec:	e0bff615 	stw	r2,-40(fp)
  810bf0:	00000b06 	br	810c20 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
  810bf4:	e0bff517 	ldw	r2,-44(fp)
  810bf8:	10000526 	beq	r2,zero,810c10 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
  810bfc:	00c20004 	movi	r3,2048
  810c00:	e0bff917 	ldw	r2,-28(fp)
  810c04:	1885c83a 	sub	r2,r3,r2
  810c08:	e0bff615 	stw	r2,-40(fp)
  810c0c:	00000406 	br	810c20 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
  810c10:	00c1ffc4 	movi	r3,2047
  810c14:	e0bff917 	ldw	r2,-28(fp)
  810c18:	1885c83a 	sub	r2,r3,r2
  810c1c:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
  810c20:	e0bff617 	ldw	r2,-40(fp)
  810c24:	10001e26 	beq	r2,zero,810ca0 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
  810c28:	e0fffe17 	ldw	r3,-8(fp)
  810c2c:	e0bff617 	ldw	r2,-40(fp)
  810c30:	1880022e 	bgeu	r3,r2,810c3c <altera_avalon_jtag_uart_write+0xb4>
        n = count;
  810c34:	e0bffe17 	ldw	r2,-8(fp)
  810c38:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
  810c3c:	e0bffc17 	ldw	r2,-16(fp)
  810c40:	10c20e04 	addi	r3,r2,2104
  810c44:	e0bff917 	ldw	r2,-28(fp)
  810c48:	1885883a 	add	r2,r3,r2
  810c4c:	e1bff617 	ldw	r6,-40(fp)
  810c50:	e17ffd17 	ldw	r5,-12(fp)
  810c54:	1009883a 	mov	r4,r2
  810c58:	080a7c00 	call	80a7c0 <memcpy>
      ptr   += n;
  810c5c:	e0fffd17 	ldw	r3,-12(fp)
  810c60:	e0bff617 	ldw	r2,-40(fp)
  810c64:	1885883a 	add	r2,r3,r2
  810c68:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
  810c6c:	e0fffe17 	ldw	r3,-8(fp)
  810c70:	e0bff617 	ldw	r2,-40(fp)
  810c74:	1885c83a 	sub	r2,r3,r2
  810c78:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  810c7c:	e0fff917 	ldw	r3,-28(fp)
  810c80:	e0bff617 	ldw	r2,-40(fp)
  810c84:	1885883a 	add	r2,r3,r2
  810c88:	10c1ffcc 	andi	r3,r2,2047
  810c8c:	e0bffc17 	ldw	r2,-16(fp)
  810c90:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
  810c94:	e0bffe17 	ldw	r2,-8(fp)
  810c98:	00bfc716 	blt	zero,r2,810bb8 <__alt_data_end+0xff810bb8>
  810c9c:	00000106 	br	810ca4 <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
  810ca0:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  810ca4:	0005303a 	rdctl	r2,status
  810ca8:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  810cac:	e0fffb17 	ldw	r3,-20(fp)
  810cb0:	00bfff84 	movi	r2,-2
  810cb4:	1884703a 	and	r2,r3,r2
  810cb8:	1001703a 	wrctl	status,r2
  
  return context;
  810cbc:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
  810cc0:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
  810cc4:	e0bffc17 	ldw	r2,-16(fp)
  810cc8:	10800817 	ldw	r2,32(r2)
  810ccc:	10c00094 	ori	r3,r2,2
  810cd0:	e0bffc17 	ldw	r2,-16(fp)
  810cd4:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  810cd8:	e0bffc17 	ldw	r2,-16(fp)
  810cdc:	10800017 	ldw	r2,0(r2)
  810ce0:	10800104 	addi	r2,r2,4
  810ce4:	1007883a 	mov	r3,r2
  810ce8:	e0bffc17 	ldw	r2,-16(fp)
  810cec:	10800817 	ldw	r2,32(r2)
  810cf0:	18800035 	stwio	r2,0(r3)
  810cf4:	e0bffa17 	ldw	r2,-24(fp)
  810cf8:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  810cfc:	e0bff817 	ldw	r2,-32(fp)
  810d00:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
  810d04:	e0bffe17 	ldw	r2,-8(fp)
  810d08:	0080100e 	bge	zero,r2,810d4c <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
  810d0c:	e0bfff17 	ldw	r2,-4(fp)
  810d10:	1090000c 	andi	r2,r2,16384
  810d14:	1000101e 	bne	r2,zero,810d58 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
  810d18:	0001883a 	nop
  810d1c:	e0bffc17 	ldw	r2,-16(fp)
  810d20:	10c00d17 	ldw	r3,52(r2)
  810d24:	e0bff517 	ldw	r2,-44(fp)
  810d28:	1880051e 	bne	r3,r2,810d40 <altera_avalon_jtag_uart_write+0x1b8>
  810d2c:	e0bffc17 	ldw	r2,-16(fp)
  810d30:	10c00917 	ldw	r3,36(r2)
  810d34:	e0bffc17 	ldw	r2,-16(fp)
  810d38:	10800117 	ldw	r2,4(r2)
  810d3c:	18bff736 	bltu	r3,r2,810d1c <__alt_data_end+0xff810d1c>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
  810d40:	e0bffc17 	ldw	r2,-16(fp)
  810d44:	10800917 	ldw	r2,36(r2)
  810d48:	1000051e 	bne	r2,zero,810d60 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
  810d4c:	e0bffe17 	ldw	r2,-8(fp)
  810d50:	00bfd016 	blt	zero,r2,810c94 <__alt_data_end+0xff810c94>
  810d54:	00000306 	br	810d64 <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
  810d58:	0001883a 	nop
  810d5c:	00000106 	br	810d64 <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
  810d60:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
  810d64:	e0fffd17 	ldw	r3,-12(fp)
  810d68:	e0bff717 	ldw	r2,-36(fp)
  810d6c:	18800426 	beq	r3,r2,810d80 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
  810d70:	e0fffd17 	ldw	r3,-12(fp)
  810d74:	e0bff717 	ldw	r2,-36(fp)
  810d78:	1885c83a 	sub	r2,r3,r2
  810d7c:	00000606 	br	810d98 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
  810d80:	e0bfff17 	ldw	r2,-4(fp)
  810d84:	1090000c 	andi	r2,r2,16384
  810d88:	10000226 	beq	r2,zero,810d94 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
  810d8c:	00bffd44 	movi	r2,-11
  810d90:	00000106 	br	810d98 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
  810d94:	00bffec4 	movi	r2,-5
}
  810d98:	e037883a 	mov	sp,fp
  810d9c:	dfc00117 	ldw	ra,4(sp)
  810da0:	df000017 	ldw	fp,0(sp)
  810da4:	dec00204 	addi	sp,sp,8
  810da8:	f800283a 	ret

00810dac <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
  810dac:	defffa04 	addi	sp,sp,-24
  810db0:	dfc00515 	stw	ra,20(sp)
  810db4:	df000415 	stw	fp,16(sp)
  810db8:	df000404 	addi	fp,sp,16
  810dbc:	e13fff15 	stw	r4,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
  810dc0:	0007883a 	mov	r3,zero
  810dc4:	e0bfff17 	ldw	r2,-4(fp)
  810dc8:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
  810dcc:	e0bfff17 	ldw	r2,-4(fp)
  810dd0:	10800104 	addi	r2,r2,4
  810dd4:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  810dd8:	0005303a 	rdctl	r2,status
  810ddc:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  810de0:	e0fffd17 	ldw	r3,-12(fp)
  810de4:	00bfff84 	movi	r2,-2
  810de8:	1884703a 	and	r2,r3,r2
  810dec:	1001703a 	wrctl	status,r2
  
  return context;
  810df0:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
  810df4:	e0bffc15 	stw	r2,-16(fp)
  alt_tick ();
  810df8:	08118b80 	call	8118b8 <alt_tick>
  810dfc:	e0bffc17 	ldw	r2,-16(fp)
  810e00:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  810e04:	e0bffe17 	ldw	r2,-8(fp)
  810e08:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
  810e0c:	0001883a 	nop
  810e10:	e037883a 	mov	sp,fp
  810e14:	dfc00117 	ldw	ra,4(sp)
  810e18:	df000017 	ldw	fp,0(sp)
  810e1c:	dec00204 	addi	sp,sp,8
  810e20:	f800283a 	ret

00810e24 <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
  810e24:	defff804 	addi	sp,sp,-32
  810e28:	dfc00715 	stw	ra,28(sp)
  810e2c:	df000615 	stw	fp,24(sp)
  810e30:	df000604 	addi	fp,sp,24
  810e34:	e13ffc15 	stw	r4,-16(fp)
  810e38:	e17ffd15 	stw	r5,-12(fp)
  810e3c:	e1bffe15 	stw	r6,-8(fp)
  810e40:	e1ffff15 	stw	r7,-4(fp)
  810e44:	e0bfff17 	ldw	r2,-4(fp)
  810e48:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
  810e4c:	d0a6d617 	ldw	r2,-25768(gp)
  810e50:	1000021e 	bne	r2,zero,810e5c <alt_avalon_timer_sc_init+0x38>
  {
    _alt_tick_rate = nticks;
  810e54:	e0bffb17 	ldw	r2,-20(fp)
  810e58:	d0a6d615 	stw	r2,-25768(gp)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
  810e5c:	e0bffc17 	ldw	r2,-16(fp)
  810e60:	10800104 	addi	r2,r2,4
  810e64:	00c001c4 	movi	r3,7
  810e68:	10c00035 	stwio	r3,0(r2)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
  810e6c:	d8000015 	stw	zero,0(sp)
  810e70:	e1fffc17 	ldw	r7,-16(fp)
  810e74:	01802074 	movhi	r6,129
  810e78:	31836b04 	addi	r6,r6,3500
  810e7c:	e17ffe17 	ldw	r5,-8(fp)
  810e80:	e13ffd17 	ldw	r4,-12(fp)
  810e84:	08111e80 	call	8111e8 <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
  810e88:	0001883a 	nop
  810e8c:	e037883a 	mov	sp,fp
  810e90:	dfc00117 	ldw	ra,4(sp)
  810e94:	df000017 	ldw	fp,0(sp)
  810e98:	dec00204 	addi	sp,sp,8
  810e9c:	f800283a 	ret

00810ea0 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
  810ea0:	defff504 	addi	sp,sp,-44
  810ea4:	df000a15 	stw	fp,40(sp)
  810ea8:	df000a04 	addi	fp,sp,40
  810eac:	e13ffc15 	stw	r4,-16(fp)
  810eb0:	e17ffd15 	stw	r5,-12(fp)
  810eb4:	e1bffe15 	stw	r6,-8(fp)
  810eb8:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
  810ebc:	e03ff615 	stw	zero,-40(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
  810ec0:	d0a6d617 	ldw	r2,-25768(gp)
  
  if (alt_ticks_per_second ())
  810ec4:	10003c26 	beq	r2,zero,810fb8 <alt_alarm_start+0x118>
  {
    if (alarm)
  810ec8:	e0bffc17 	ldw	r2,-16(fp)
  810ecc:	10003826 	beq	r2,zero,810fb0 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
  810ed0:	e0bffc17 	ldw	r2,-16(fp)
  810ed4:	e0fffe17 	ldw	r3,-8(fp)
  810ed8:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
  810edc:	e0bffc17 	ldw	r2,-16(fp)
  810ee0:	e0ffff17 	ldw	r3,-4(fp)
  810ee4:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  810ee8:	0005303a 	rdctl	r2,status
  810eec:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  810ef0:	e0fff917 	ldw	r3,-28(fp)
  810ef4:	00bfff84 	movi	r2,-2
  810ef8:	1884703a 	and	r2,r3,r2
  810efc:	1001703a 	wrctl	status,r2
  
  return context;
  810f00:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
  810f04:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
  810f08:	d0a6d717 	ldw	r2,-25764(gp)
      
      current_nticks = alt_nticks();
  810f0c:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
  810f10:	e0fffd17 	ldw	r3,-12(fp)
  810f14:	e0bff617 	ldw	r2,-40(fp)
  810f18:	1885883a 	add	r2,r3,r2
  810f1c:	10c00044 	addi	r3,r2,1
  810f20:	e0bffc17 	ldw	r2,-16(fp)
  810f24:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
  810f28:	e0bffc17 	ldw	r2,-16(fp)
  810f2c:	10c00217 	ldw	r3,8(r2)
  810f30:	e0bff617 	ldw	r2,-40(fp)
  810f34:	1880042e 	bgeu	r3,r2,810f48 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
  810f38:	e0bffc17 	ldw	r2,-16(fp)
  810f3c:	00c00044 	movi	r3,1
  810f40:	10c00405 	stb	r3,16(r2)
  810f44:	00000206 	br	810f50 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
  810f48:	e0bffc17 	ldw	r2,-16(fp)
  810f4c:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
  810f50:	e0bffc17 	ldw	r2,-16(fp)
  810f54:	d0e00e04 	addi	r3,gp,-32712
  810f58:	e0fffa15 	stw	r3,-24(fp)
  810f5c:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
  810f60:	e0bffb17 	ldw	r2,-20(fp)
  810f64:	e0fffa17 	ldw	r3,-24(fp)
  810f68:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
  810f6c:	e0bffa17 	ldw	r2,-24(fp)
  810f70:	10c00017 	ldw	r3,0(r2)
  810f74:	e0bffb17 	ldw	r2,-20(fp)
  810f78:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
  810f7c:	e0bffa17 	ldw	r2,-24(fp)
  810f80:	10800017 	ldw	r2,0(r2)
  810f84:	e0fffb17 	ldw	r3,-20(fp)
  810f88:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
  810f8c:	e0bffa17 	ldw	r2,-24(fp)
  810f90:	e0fffb17 	ldw	r3,-20(fp)
  810f94:	10c00015 	stw	r3,0(r2)
  810f98:	e0bff817 	ldw	r2,-32(fp)
  810f9c:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  810fa0:	e0bff717 	ldw	r2,-36(fp)
  810fa4:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
  810fa8:	0005883a 	mov	r2,zero
  810fac:	00000306 	br	810fbc <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
  810fb0:	00bffa84 	movi	r2,-22
  810fb4:	00000106 	br	810fbc <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
  810fb8:	00bfde84 	movi	r2,-134
  }
}
  810fbc:	e037883a 	mov	sp,fp
  810fc0:	df000017 	ldw	fp,0(sp)
  810fc4:	dec00104 	addi	sp,sp,4
  810fc8:	f800283a 	ret

00810fcc <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
  810fcc:	defffe04 	addi	sp,sp,-8
  810fd0:	df000115 	stw	fp,4(sp)
  810fd4:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  810fd8:	e03fff15 	stw	zero,-4(fp)
  810fdc:	00000506 	br	810ff4 <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  810fe0:	e0bfff17 	ldw	r2,-4(fp)
  810fe4:	1000003b 	flushd	0(r2)
void alt_dcache_flush_all (void)
{
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  810fe8:	e0bfff17 	ldw	r2,-4(fp)
  810fec:	10800804 	addi	r2,r2,32
  810ff0:	e0bfff15 	stw	r2,-4(fp)
  810ff4:	e0bfff17 	ldw	r2,-4(fp)
  810ff8:	10880030 	cmpltui	r2,r2,8192
  810ffc:	103ff81e 	bne	r2,zero,810fe0 <__alt_data_end+0xff810fe0>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
  811000:	0001883a 	nop
  811004:	e037883a 	mov	sp,fp
  811008:	df000017 	ldw	fp,0(sp)
  81100c:	dec00104 	addi	sp,sp,4
  811010:	f800283a 	ret

00811014 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  811014:	defffe04 	addi	sp,sp,-8
  811018:	dfc00115 	stw	ra,4(sp)
  81101c:	df000015 	stw	fp,0(sp)
  811020:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  811024:	d0a00b17 	ldw	r2,-32724(gp)
  811028:	10000326 	beq	r2,zero,811038 <alt_get_errno+0x24>
  81102c:	d0a00b17 	ldw	r2,-32724(gp)
  811030:	103ee83a 	callr	r2
  811034:	00000106 	br	81103c <alt_get_errno+0x28>
  811038:	d0a6d104 	addi	r2,gp,-25788
}
  81103c:	e037883a 	mov	sp,fp
  811040:	dfc00117 	ldw	ra,4(sp)
  811044:	df000017 	ldw	fp,0(sp)
  811048:	dec00204 	addi	sp,sp,8
  81104c:	f800283a 	ret

00811050 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
  811050:	defffa04 	addi	sp,sp,-24
  811054:	dfc00515 	stw	ra,20(sp)
  811058:	df000415 	stw	fp,16(sp)
  81105c:	df000404 	addi	fp,sp,16
  811060:	e13ffe15 	stw	r4,-8(fp)
  811064:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
  811068:	e0bffe17 	ldw	r2,-8(fp)
  81106c:	10000326 	beq	r2,zero,81107c <alt_dev_llist_insert+0x2c>
  811070:	e0bffe17 	ldw	r2,-8(fp)
  811074:	10800217 	ldw	r2,8(r2)
  811078:	1000061e 	bne	r2,zero,811094 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
  81107c:	08110140 	call	811014 <alt_get_errno>
  811080:	1007883a 	mov	r3,r2
  811084:	00800584 	movi	r2,22
  811088:	18800015 	stw	r2,0(r3)
    return -EINVAL;
  81108c:	00bffa84 	movi	r2,-22
  811090:	00001306 	br	8110e0 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
  811094:	e0bffe17 	ldw	r2,-8(fp)
  811098:	e0ffff17 	ldw	r3,-4(fp)
  81109c:	e0fffc15 	stw	r3,-16(fp)
  8110a0:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
  8110a4:	e0bffd17 	ldw	r2,-12(fp)
  8110a8:	e0fffc17 	ldw	r3,-16(fp)
  8110ac:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
  8110b0:	e0bffc17 	ldw	r2,-16(fp)
  8110b4:	10c00017 	ldw	r3,0(r2)
  8110b8:	e0bffd17 	ldw	r2,-12(fp)
  8110bc:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
  8110c0:	e0bffc17 	ldw	r2,-16(fp)
  8110c4:	10800017 	ldw	r2,0(r2)
  8110c8:	e0fffd17 	ldw	r3,-12(fp)
  8110cc:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
  8110d0:	e0bffc17 	ldw	r2,-16(fp)
  8110d4:	e0fffd17 	ldw	r3,-12(fp)
  8110d8:	10c00015 	stw	r3,0(r2)

  return 0;  
  8110dc:	0005883a 	mov	r2,zero
}
  8110e0:	e037883a 	mov	sp,fp
  8110e4:	dfc00117 	ldw	ra,4(sp)
  8110e8:	df000017 	ldw	fp,0(sp)
  8110ec:	dec00204 	addi	sp,sp,8
  8110f0:	f800283a 	ret

008110f4 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
  8110f4:	defffd04 	addi	sp,sp,-12
  8110f8:	dfc00215 	stw	ra,8(sp)
  8110fc:	df000115 	stw	fp,4(sp)
  811100:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
  811104:	00802074 	movhi	r2,129
  811108:	10883704 	addi	r2,r2,8412
  81110c:	e0bfff15 	stw	r2,-4(fp)
  811110:	00000606 	br	81112c <_do_ctors+0x38>
        (*ctor) (); 
  811114:	e0bfff17 	ldw	r2,-4(fp)
  811118:	10800017 	ldw	r2,0(r2)
  81111c:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
  811120:	e0bfff17 	ldw	r2,-4(fp)
  811124:	10bfff04 	addi	r2,r2,-4
  811128:	e0bfff15 	stw	r2,-4(fp)
  81112c:	e0ffff17 	ldw	r3,-4(fp)
  811130:	00802074 	movhi	r2,129
  811134:	10883804 	addi	r2,r2,8416
  811138:	18bff62e 	bgeu	r3,r2,811114 <__alt_data_end+0xff811114>
        (*ctor) (); 
}
  81113c:	0001883a 	nop
  811140:	e037883a 	mov	sp,fp
  811144:	dfc00117 	ldw	ra,4(sp)
  811148:	df000017 	ldw	fp,0(sp)
  81114c:	dec00204 	addi	sp,sp,8
  811150:	f800283a 	ret

00811154 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
  811154:	defffd04 	addi	sp,sp,-12
  811158:	dfc00215 	stw	ra,8(sp)
  81115c:	df000115 	stw	fp,4(sp)
  811160:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
  811164:	00802074 	movhi	r2,129
  811168:	10883704 	addi	r2,r2,8412
  81116c:	e0bfff15 	stw	r2,-4(fp)
  811170:	00000606 	br	81118c <_do_dtors+0x38>
        (*dtor) (); 
  811174:	e0bfff17 	ldw	r2,-4(fp)
  811178:	10800017 	ldw	r2,0(r2)
  81117c:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
  811180:	e0bfff17 	ldw	r2,-4(fp)
  811184:	10bfff04 	addi	r2,r2,-4
  811188:	e0bfff15 	stw	r2,-4(fp)
  81118c:	e0ffff17 	ldw	r3,-4(fp)
  811190:	00802074 	movhi	r2,129
  811194:	10883804 	addi	r2,r2,8416
  811198:	18bff62e 	bgeu	r3,r2,811174 <__alt_data_end+0xff811174>
        (*dtor) (); 
}
  81119c:	0001883a 	nop
  8111a0:	e037883a 	mov	sp,fp
  8111a4:	dfc00117 	ldw	ra,4(sp)
  8111a8:	df000017 	ldw	fp,0(sp)
  8111ac:	dec00204 	addi	sp,sp,8
  8111b0:	f800283a 	ret

008111b4 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
  8111b4:	defffe04 	addi	sp,sp,-8
  8111b8:	dfc00115 	stw	ra,4(sp)
  8111bc:	df000015 	stw	fp,0(sp)
  8111c0:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
  8111c4:	01420004 	movi	r5,2048
  8111c8:	0009883a 	mov	r4,zero
  8111cc:	0811c200 	call	811c20 <alt_icache_flush>
#endif
}
  8111d0:	0001883a 	nop
  8111d4:	e037883a 	mov	sp,fp
  8111d8:	dfc00117 	ldw	ra,4(sp)
  8111dc:	df000017 	ldw	fp,0(sp)
  8111e0:	dec00204 	addi	sp,sp,8
  8111e4:	f800283a 	ret

008111e8 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
  8111e8:	defff904 	addi	sp,sp,-28
  8111ec:	dfc00615 	stw	ra,24(sp)
  8111f0:	df000515 	stw	fp,20(sp)
  8111f4:	df000504 	addi	fp,sp,20
  8111f8:	e13ffc15 	stw	r4,-16(fp)
  8111fc:	e17ffd15 	stw	r5,-12(fp)
  811200:	e1bffe15 	stw	r6,-8(fp)
  811204:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
  811208:	e0800217 	ldw	r2,8(fp)
  81120c:	d8800015 	stw	r2,0(sp)
  811210:	e1ffff17 	ldw	r7,-4(fp)
  811214:	e1bffe17 	ldw	r6,-8(fp)
  811218:	e17ffd17 	ldw	r5,-12(fp)
  81121c:	e13ffc17 	ldw	r4,-16(fp)
  811220:	08113980 	call	811398 <alt_iic_isr_register>
}  
  811224:	e037883a 	mov	sp,fp
  811228:	dfc00117 	ldw	ra,4(sp)
  81122c:	df000017 	ldw	fp,0(sp)
  811230:	dec00204 	addi	sp,sp,8
  811234:	f800283a 	ret

00811238 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
  811238:	defff904 	addi	sp,sp,-28
  81123c:	df000615 	stw	fp,24(sp)
  811240:	df000604 	addi	fp,sp,24
  811244:	e13ffe15 	stw	r4,-8(fp)
  811248:	e17fff15 	stw	r5,-4(fp)
  81124c:	e0bfff17 	ldw	r2,-4(fp)
  811250:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  811254:	0005303a 	rdctl	r2,status
  811258:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  81125c:	e0fffb17 	ldw	r3,-20(fp)
  811260:	00bfff84 	movi	r2,-2
  811264:	1884703a 	and	r2,r3,r2
  811268:	1001703a 	wrctl	status,r2
  
  return context;
  81126c:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
  811270:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
  811274:	00c00044 	movi	r3,1
  811278:	e0bffa17 	ldw	r2,-24(fp)
  81127c:	1884983a 	sll	r2,r3,r2
  811280:	1007883a 	mov	r3,r2
  811284:	d0a6d517 	ldw	r2,-25772(gp)
  811288:	1884b03a 	or	r2,r3,r2
  81128c:	d0a6d515 	stw	r2,-25772(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
  811290:	d0a6d517 	ldw	r2,-25772(gp)
  811294:	100170fa 	wrctl	ienable,r2
  811298:	e0bffc17 	ldw	r2,-16(fp)
  81129c:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  8112a0:	e0bffd17 	ldw	r2,-12(fp)
  8112a4:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
  8112a8:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
  8112ac:	0001883a 	nop
}
  8112b0:	e037883a 	mov	sp,fp
  8112b4:	df000017 	ldw	fp,0(sp)
  8112b8:	dec00104 	addi	sp,sp,4
  8112bc:	f800283a 	ret

008112c0 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
  8112c0:	defff904 	addi	sp,sp,-28
  8112c4:	df000615 	stw	fp,24(sp)
  8112c8:	df000604 	addi	fp,sp,24
  8112cc:	e13ffe15 	stw	r4,-8(fp)
  8112d0:	e17fff15 	stw	r5,-4(fp)
  8112d4:	e0bfff17 	ldw	r2,-4(fp)
  8112d8:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  8112dc:	0005303a 	rdctl	r2,status
  8112e0:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  8112e4:	e0fffb17 	ldw	r3,-20(fp)
  8112e8:	00bfff84 	movi	r2,-2
  8112ec:	1884703a 	and	r2,r3,r2
  8112f0:	1001703a 	wrctl	status,r2
  
  return context;
  8112f4:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
  8112f8:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
  8112fc:	00c00044 	movi	r3,1
  811300:	e0bffa17 	ldw	r2,-24(fp)
  811304:	1884983a 	sll	r2,r3,r2
  811308:	0084303a 	nor	r2,zero,r2
  81130c:	1007883a 	mov	r3,r2
  811310:	d0a6d517 	ldw	r2,-25772(gp)
  811314:	1884703a 	and	r2,r3,r2
  811318:	d0a6d515 	stw	r2,-25772(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
  81131c:	d0a6d517 	ldw	r2,-25772(gp)
  811320:	100170fa 	wrctl	ienable,r2
  811324:	e0bffc17 	ldw	r2,-16(fp)
  811328:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  81132c:	e0bffd17 	ldw	r2,-12(fp)
  811330:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
  811334:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
  811338:	0001883a 	nop
}
  81133c:	e037883a 	mov	sp,fp
  811340:	df000017 	ldw	fp,0(sp)
  811344:	dec00104 	addi	sp,sp,4
  811348:	f800283a 	ret

0081134c <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
  81134c:	defffc04 	addi	sp,sp,-16
  811350:	df000315 	stw	fp,12(sp)
  811354:	df000304 	addi	fp,sp,12
  811358:	e13ffe15 	stw	r4,-8(fp)
  81135c:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
  811360:	000530fa 	rdctl	r2,ienable
  811364:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
  811368:	00c00044 	movi	r3,1
  81136c:	e0bfff17 	ldw	r2,-4(fp)
  811370:	1884983a 	sll	r2,r3,r2
  811374:	1007883a 	mov	r3,r2
  811378:	e0bffd17 	ldw	r2,-12(fp)
  81137c:	1884703a 	and	r2,r3,r2
  811380:	1004c03a 	cmpne	r2,r2,zero
  811384:	10803fcc 	andi	r2,r2,255
}
  811388:	e037883a 	mov	sp,fp
  81138c:	df000017 	ldw	fp,0(sp)
  811390:	dec00104 	addi	sp,sp,4
  811394:	f800283a 	ret

00811398 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
  811398:	defff504 	addi	sp,sp,-44
  81139c:	dfc00a15 	stw	ra,40(sp)
  8113a0:	df000915 	stw	fp,36(sp)
  8113a4:	df000904 	addi	fp,sp,36
  8113a8:	e13ffc15 	stw	r4,-16(fp)
  8113ac:	e17ffd15 	stw	r5,-12(fp)
  8113b0:	e1bffe15 	stw	r6,-8(fp)
  8113b4:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
  8113b8:	00bffa84 	movi	r2,-22
  8113bc:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
  8113c0:	e0bffd17 	ldw	r2,-12(fp)
  8113c4:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
  8113c8:	e0bff817 	ldw	r2,-32(fp)
  8113cc:	10800808 	cmpgei	r2,r2,32
  8113d0:	1000271e 	bne	r2,zero,811470 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  8113d4:	0005303a 	rdctl	r2,status
  8113d8:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  8113dc:	e0fffb17 	ldw	r3,-20(fp)
  8113e0:	00bfff84 	movi	r2,-2
  8113e4:	1884703a 	and	r2,r3,r2
  8113e8:	1001703a 	wrctl	status,r2
  
  return context;
  8113ec:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
  8113f0:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
  8113f4:	00802074 	movhi	r2,129
  8113f8:	109bf804 	addi	r2,r2,28640
  8113fc:	e0fff817 	ldw	r3,-32(fp)
  811400:	180690fa 	slli	r3,r3,3
  811404:	10c5883a 	add	r2,r2,r3
  811408:	e0fffe17 	ldw	r3,-8(fp)
  81140c:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
  811410:	00802074 	movhi	r2,129
  811414:	109bf804 	addi	r2,r2,28640
  811418:	e0fff817 	ldw	r3,-32(fp)
  81141c:	180690fa 	slli	r3,r3,3
  811420:	10c5883a 	add	r2,r2,r3
  811424:	10800104 	addi	r2,r2,4
  811428:	e0ffff17 	ldw	r3,-4(fp)
  81142c:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
  811430:	e0bffe17 	ldw	r2,-8(fp)
  811434:	10000526 	beq	r2,zero,81144c <alt_iic_isr_register+0xb4>
  811438:	e0bff817 	ldw	r2,-32(fp)
  81143c:	100b883a 	mov	r5,r2
  811440:	e13ffc17 	ldw	r4,-16(fp)
  811444:	08112380 	call	811238 <alt_ic_irq_enable>
  811448:	00000406 	br	81145c <alt_iic_isr_register+0xc4>
  81144c:	e0bff817 	ldw	r2,-32(fp)
  811450:	100b883a 	mov	r5,r2
  811454:	e13ffc17 	ldw	r4,-16(fp)
  811458:	08112c00 	call	8112c0 <alt_ic_irq_disable>
  81145c:	e0bff715 	stw	r2,-36(fp)
  811460:	e0bffa17 	ldw	r2,-24(fp)
  811464:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  811468:	e0bff917 	ldw	r2,-28(fp)
  81146c:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
  811470:	e0bff717 	ldw	r2,-36(fp)
}
  811474:	e037883a 	mov	sp,fp
  811478:	dfc00117 	ldw	ra,4(sp)
  81147c:	df000017 	ldw	fp,0(sp)
  811480:	dec00204 	addi	sp,sp,8
  811484:	f800283a 	ret

00811488 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
  811488:	defff904 	addi	sp,sp,-28
  81148c:	dfc00615 	stw	ra,24(sp)
  811490:	df000515 	stw	fp,20(sp)
  811494:	df000504 	addi	fp,sp,20
  811498:	e13ffc15 	stw	r4,-16(fp)
  81149c:	e17ffd15 	stw	r5,-12(fp)
  8114a0:	e1bffe15 	stw	r6,-8(fp)
  8114a4:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
  8114a8:	e1bfff17 	ldw	r6,-4(fp)
  8114ac:	e17ffe17 	ldw	r5,-8(fp)
  8114b0:	e13ffd17 	ldw	r4,-12(fp)
  8114b4:	08116c80 	call	8116c8 <open>
  8114b8:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
  8114bc:	e0bffb17 	ldw	r2,-20(fp)
  8114c0:	10001c16 	blt	r2,zero,811534 <alt_open_fd+0xac>
  {
    fd->dev      = alt_fd_list[old].dev;
  8114c4:	00802074 	movhi	r2,129
  8114c8:	108bb304 	addi	r2,r2,11980
  8114cc:	e0fffb17 	ldw	r3,-20(fp)
  8114d0:	18c00324 	muli	r3,r3,12
  8114d4:	10c5883a 	add	r2,r2,r3
  8114d8:	10c00017 	ldw	r3,0(r2)
  8114dc:	e0bffc17 	ldw	r2,-16(fp)
  8114e0:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
  8114e4:	00802074 	movhi	r2,129
  8114e8:	108bb304 	addi	r2,r2,11980
  8114ec:	e0fffb17 	ldw	r3,-20(fp)
  8114f0:	18c00324 	muli	r3,r3,12
  8114f4:	10c5883a 	add	r2,r2,r3
  8114f8:	10800104 	addi	r2,r2,4
  8114fc:	10c00017 	ldw	r3,0(r2)
  811500:	e0bffc17 	ldw	r2,-16(fp)
  811504:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
  811508:	00802074 	movhi	r2,129
  81150c:	108bb304 	addi	r2,r2,11980
  811510:	e0fffb17 	ldw	r3,-20(fp)
  811514:	18c00324 	muli	r3,r3,12
  811518:	10c5883a 	add	r2,r2,r3
  81151c:	10800204 	addi	r2,r2,8
  811520:	10c00017 	ldw	r3,0(r2)
  811524:	e0bffc17 	ldw	r2,-16(fp)
  811528:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
  81152c:	e13ffb17 	ldw	r4,-20(fp)
  811530:	080ff780 	call	80ff78 <alt_release_fd>
  }
} 
  811534:	0001883a 	nop
  811538:	e037883a 	mov	sp,fp
  81153c:	dfc00117 	ldw	ra,4(sp)
  811540:	df000017 	ldw	fp,0(sp)
  811544:	dec00204 	addi	sp,sp,8
  811548:	f800283a 	ret

0081154c <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
  81154c:	defffb04 	addi	sp,sp,-20
  811550:	dfc00415 	stw	ra,16(sp)
  811554:	df000315 	stw	fp,12(sp)
  811558:	df000304 	addi	fp,sp,12
  81155c:	e13ffd15 	stw	r4,-12(fp)
  811560:	e17ffe15 	stw	r5,-8(fp)
  811564:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
  811568:	01c07fc4 	movi	r7,511
  81156c:	01800044 	movi	r6,1
  811570:	e17ffd17 	ldw	r5,-12(fp)
  811574:	01002074 	movhi	r4,129
  811578:	210bb604 	addi	r4,r4,11992
  81157c:	08114880 	call	811488 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
  811580:	01c07fc4 	movi	r7,511
  811584:	000d883a 	mov	r6,zero
  811588:	e17ffe17 	ldw	r5,-8(fp)
  81158c:	01002074 	movhi	r4,129
  811590:	210bb304 	addi	r4,r4,11980
  811594:	08114880 	call	811488 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
  811598:	01c07fc4 	movi	r7,511
  81159c:	01800044 	movi	r6,1
  8115a0:	e17fff17 	ldw	r5,-4(fp)
  8115a4:	01002074 	movhi	r4,129
  8115a8:	210bb904 	addi	r4,r4,12004
  8115ac:	08114880 	call	811488 <alt_open_fd>
}  
  8115b0:	0001883a 	nop
  8115b4:	e037883a 	mov	sp,fp
  8115b8:	dfc00117 	ldw	ra,4(sp)
  8115bc:	df000017 	ldw	fp,0(sp)
  8115c0:	dec00204 	addi	sp,sp,8
  8115c4:	f800283a 	ret

008115c8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  8115c8:	defffe04 	addi	sp,sp,-8
  8115cc:	dfc00115 	stw	ra,4(sp)
  8115d0:	df000015 	stw	fp,0(sp)
  8115d4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  8115d8:	d0a00b17 	ldw	r2,-32724(gp)
  8115dc:	10000326 	beq	r2,zero,8115ec <alt_get_errno+0x24>
  8115e0:	d0a00b17 	ldw	r2,-32724(gp)
  8115e4:	103ee83a 	callr	r2
  8115e8:	00000106 	br	8115f0 <alt_get_errno+0x28>
  8115ec:	d0a6d104 	addi	r2,gp,-25788
}
  8115f0:	e037883a 	mov	sp,fp
  8115f4:	dfc00117 	ldw	ra,4(sp)
  8115f8:	df000017 	ldw	fp,0(sp)
  8115fc:	dec00204 	addi	sp,sp,8
  811600:	f800283a 	ret

00811604 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
  811604:	defffd04 	addi	sp,sp,-12
  811608:	df000215 	stw	fp,8(sp)
  81160c:	df000204 	addi	fp,sp,8
  811610:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
  811614:	e0bfff17 	ldw	r2,-4(fp)
  811618:	10800217 	ldw	r2,8(r2)
  81161c:	10d00034 	orhi	r3,r2,16384
  811620:	e0bfff17 	ldw	r2,-4(fp)
  811624:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  811628:	e03ffe15 	stw	zero,-8(fp)
  81162c:	00001d06 	br	8116a4 <alt_file_locked+0xa0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
  811630:	00802074 	movhi	r2,129
  811634:	108bb304 	addi	r2,r2,11980
  811638:	e0fffe17 	ldw	r3,-8(fp)
  81163c:	18c00324 	muli	r3,r3,12
  811640:	10c5883a 	add	r2,r2,r3
  811644:	10c00017 	ldw	r3,0(r2)
  811648:	e0bfff17 	ldw	r2,-4(fp)
  81164c:	10800017 	ldw	r2,0(r2)
  811650:	1880111e 	bne	r3,r2,811698 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
  811654:	00802074 	movhi	r2,129
  811658:	108bb304 	addi	r2,r2,11980
  81165c:	e0fffe17 	ldw	r3,-8(fp)
  811660:	18c00324 	muli	r3,r3,12
  811664:	10c5883a 	add	r2,r2,r3
  811668:	10800204 	addi	r2,r2,8
  81166c:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
  811670:	1000090e 	bge	r2,zero,811698 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
  811674:	e0bffe17 	ldw	r2,-8(fp)
  811678:	10c00324 	muli	r3,r2,12
  81167c:	00802074 	movhi	r2,129
  811680:	108bb304 	addi	r2,r2,11980
  811684:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
  811688:	e0bfff17 	ldw	r2,-4(fp)
  81168c:	18800226 	beq	r3,r2,811698 <alt_file_locked+0x94>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
  811690:	00bffcc4 	movi	r2,-13
  811694:	00000806 	br	8116b8 <alt_file_locked+0xb4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  811698:	e0bffe17 	ldw	r2,-8(fp)
  81169c:	10800044 	addi	r2,r2,1
  8116a0:	e0bffe15 	stw	r2,-8(fp)
  8116a4:	d0a00a17 	ldw	r2,-32728(gp)
  8116a8:	1007883a 	mov	r3,r2
  8116ac:	e0bffe17 	ldw	r2,-8(fp)
  8116b0:	18bfdf2e 	bgeu	r3,r2,811630 <__alt_data_end+0xff811630>
    }
  }
  
  /* The device is not locked */
 
  return 0;
  8116b4:	0005883a 	mov	r2,zero
}
  8116b8:	e037883a 	mov	sp,fp
  8116bc:	df000017 	ldw	fp,0(sp)
  8116c0:	dec00104 	addi	sp,sp,4
  8116c4:	f800283a 	ret

008116c8 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
  8116c8:	defff604 	addi	sp,sp,-40
  8116cc:	dfc00915 	stw	ra,36(sp)
  8116d0:	df000815 	stw	fp,32(sp)
  8116d4:	df000804 	addi	fp,sp,32
  8116d8:	e13ffd15 	stw	r4,-12(fp)
  8116dc:	e17ffe15 	stw	r5,-8(fp)
  8116e0:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
  8116e4:	00bfffc4 	movi	r2,-1
  8116e8:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
  8116ec:	00bffb44 	movi	r2,-19
  8116f0:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
  8116f4:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
  8116f8:	d1600804 	addi	r5,gp,-32736
  8116fc:	e13ffd17 	ldw	r4,-12(fp)
  811700:	08119e40 	call	8119e4 <alt_find_dev>
  811704:	e0bff815 	stw	r2,-32(fp)
  811708:	e0bff817 	ldw	r2,-32(fp)
  81170c:	1000051e 	bne	r2,zero,811724 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
  811710:	e13ffd17 	ldw	r4,-12(fp)
  811714:	0811a740 	call	811a74 <alt_find_file>
  811718:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
  81171c:	00800044 	movi	r2,1
  811720:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
  811724:	e0bff817 	ldw	r2,-32(fp)
  811728:	10002926 	beq	r2,zero,8117d0 <open+0x108>
  {
    if ((index = alt_get_fd (dev)) < 0)
  81172c:	e13ff817 	ldw	r4,-32(fp)
  811730:	0811b7c0 	call	811b7c <alt_get_fd>
  811734:	e0bff915 	stw	r2,-28(fp)
  811738:	e0bff917 	ldw	r2,-28(fp)
  81173c:	1000030e 	bge	r2,zero,81174c <open+0x84>
    {
      status = index;
  811740:	e0bff917 	ldw	r2,-28(fp)
  811744:	e0bffa15 	stw	r2,-24(fp)
  811748:	00002306 	br	8117d8 <open+0x110>
    }
    else
    {
      fd = &alt_fd_list[index];
  81174c:	e0bff917 	ldw	r2,-28(fp)
  811750:	10c00324 	muli	r3,r2,12
  811754:	00802074 	movhi	r2,129
  811758:	108bb304 	addi	r2,r2,11980
  81175c:	1885883a 	add	r2,r3,r2
  811760:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
  811764:	e0fffe17 	ldw	r3,-8(fp)
  811768:	00900034 	movhi	r2,16384
  81176c:	10bfffc4 	addi	r2,r2,-1
  811770:	1886703a 	and	r3,r3,r2
  811774:	e0bffc17 	ldw	r2,-16(fp)
  811778:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
  81177c:	e0bffb17 	ldw	r2,-20(fp)
  811780:	1000051e 	bne	r2,zero,811798 <open+0xd0>
  811784:	e13ffc17 	ldw	r4,-16(fp)
  811788:	08116040 	call	811604 <alt_file_locked>
  81178c:	e0bffa15 	stw	r2,-24(fp)
  811790:	e0bffa17 	ldw	r2,-24(fp)
  811794:	10001016 	blt	r2,zero,8117d8 <open+0x110>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
  811798:	e0bff817 	ldw	r2,-32(fp)
  81179c:	10800317 	ldw	r2,12(r2)
  8117a0:	10000826 	beq	r2,zero,8117c4 <open+0xfc>
  8117a4:	e0bff817 	ldw	r2,-32(fp)
  8117a8:	10800317 	ldw	r2,12(r2)
  8117ac:	e1ffff17 	ldw	r7,-4(fp)
  8117b0:	e1bffe17 	ldw	r6,-8(fp)
  8117b4:	e17ffd17 	ldw	r5,-12(fp)
  8117b8:	e13ffc17 	ldw	r4,-16(fp)
  8117bc:	103ee83a 	callr	r2
  8117c0:	00000106 	br	8117c8 <open+0x100>
  8117c4:	0005883a 	mov	r2,zero
  8117c8:	e0bffa15 	stw	r2,-24(fp)
  8117cc:	00000206 	br	8117d8 <open+0x110>
      }
    }
  }
  else
  {
    status = -ENODEV;
  8117d0:	00bffb44 	movi	r2,-19
  8117d4:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
  8117d8:	e0bffa17 	ldw	r2,-24(fp)
  8117dc:	1000090e 	bge	r2,zero,811804 <open+0x13c>
  {
    alt_release_fd (index);  
  8117e0:	e13ff917 	ldw	r4,-28(fp)
  8117e4:	080ff780 	call	80ff78 <alt_release_fd>
    ALT_ERRNO = -status;
  8117e8:	08115c80 	call	8115c8 <alt_get_errno>
  8117ec:	1007883a 	mov	r3,r2
  8117f0:	e0bffa17 	ldw	r2,-24(fp)
  8117f4:	0085c83a 	sub	r2,zero,r2
  8117f8:	18800015 	stw	r2,0(r3)
    return -1;
  8117fc:	00bfffc4 	movi	r2,-1
  811800:	00000106 	br	811808 <open+0x140>
  }
  
  /* return the reference upon success */

  return index;
  811804:	e0bff917 	ldw	r2,-28(fp)
}
  811808:	e037883a 	mov	sp,fp
  81180c:	dfc00117 	ldw	ra,4(sp)
  811810:	df000017 	ldw	fp,0(sp)
  811814:	dec00204 	addi	sp,sp,8
  811818:	f800283a 	ret

0081181c <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
  81181c:	defffa04 	addi	sp,sp,-24
  811820:	df000515 	stw	fp,20(sp)
  811824:	df000504 	addi	fp,sp,20
  811828:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  81182c:	0005303a 	rdctl	r2,status
  811830:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  811834:	e0fffc17 	ldw	r3,-16(fp)
  811838:	00bfff84 	movi	r2,-2
  81183c:	1884703a 	and	r2,r3,r2
  811840:	1001703a 	wrctl	status,r2
  
  return context;
  811844:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
  811848:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
  81184c:	e0bfff17 	ldw	r2,-4(fp)
  811850:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
  811854:	e0bffd17 	ldw	r2,-12(fp)
  811858:	10800017 	ldw	r2,0(r2)
  81185c:	e0fffd17 	ldw	r3,-12(fp)
  811860:	18c00117 	ldw	r3,4(r3)
  811864:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
  811868:	e0bffd17 	ldw	r2,-12(fp)
  81186c:	10800117 	ldw	r2,4(r2)
  811870:	e0fffd17 	ldw	r3,-12(fp)
  811874:	18c00017 	ldw	r3,0(r3)
  811878:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
  81187c:	e0bffd17 	ldw	r2,-12(fp)
  811880:	e0fffd17 	ldw	r3,-12(fp)
  811884:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
  811888:	e0bffd17 	ldw	r2,-12(fp)
  81188c:	e0fffd17 	ldw	r3,-12(fp)
  811890:	10c00015 	stw	r3,0(r2)
  811894:	e0bffb17 	ldw	r2,-20(fp)
  811898:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  81189c:	e0bffe17 	ldw	r2,-8(fp)
  8118a0:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
  8118a4:	0001883a 	nop
  8118a8:	e037883a 	mov	sp,fp
  8118ac:	df000017 	ldw	fp,0(sp)
  8118b0:	dec00104 	addi	sp,sp,4
  8118b4:	f800283a 	ret

008118b8 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
  8118b8:	defffb04 	addi	sp,sp,-20
  8118bc:	dfc00415 	stw	ra,16(sp)
  8118c0:	df000315 	stw	fp,12(sp)
  8118c4:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
  8118c8:	d0a00e17 	ldw	r2,-32712(gp)
  8118cc:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
  8118d0:	d0a6d717 	ldw	r2,-25764(gp)
  8118d4:	10800044 	addi	r2,r2,1
  8118d8:	d0a6d715 	stw	r2,-25764(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
  8118dc:	00002e06 	br	811998 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
  8118e0:	e0bffd17 	ldw	r2,-12(fp)
  8118e4:	10800017 	ldw	r2,0(r2)
  8118e8:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
  8118ec:	e0bffd17 	ldw	r2,-12(fp)
  8118f0:	10800403 	ldbu	r2,16(r2)
  8118f4:	10803fcc 	andi	r2,r2,255
  8118f8:	10000426 	beq	r2,zero,81190c <alt_tick+0x54>
  8118fc:	d0a6d717 	ldw	r2,-25764(gp)
  811900:	1000021e 	bne	r2,zero,81190c <alt_tick+0x54>
    {
      alarm->rollover = 0;
  811904:	e0bffd17 	ldw	r2,-12(fp)
  811908:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
  81190c:	e0bffd17 	ldw	r2,-12(fp)
  811910:	10800217 	ldw	r2,8(r2)
  811914:	d0e6d717 	ldw	r3,-25764(gp)
  811918:	18801d36 	bltu	r3,r2,811990 <alt_tick+0xd8>
  81191c:	e0bffd17 	ldw	r2,-12(fp)
  811920:	10800403 	ldbu	r2,16(r2)
  811924:	10803fcc 	andi	r2,r2,255
  811928:	1000191e 	bne	r2,zero,811990 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
  81192c:	e0bffd17 	ldw	r2,-12(fp)
  811930:	10800317 	ldw	r2,12(r2)
  811934:	e0fffd17 	ldw	r3,-12(fp)
  811938:	18c00517 	ldw	r3,20(r3)
  81193c:	1809883a 	mov	r4,r3
  811940:	103ee83a 	callr	r2
  811944:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
  811948:	e0bfff17 	ldw	r2,-4(fp)
  81194c:	1000031e 	bne	r2,zero,81195c <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
  811950:	e13ffd17 	ldw	r4,-12(fp)
  811954:	081181c0 	call	81181c <alt_alarm_stop>
  811958:	00000d06 	br	811990 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
  81195c:	e0bffd17 	ldw	r2,-12(fp)
  811960:	10c00217 	ldw	r3,8(r2)
  811964:	e0bfff17 	ldw	r2,-4(fp)
  811968:	1887883a 	add	r3,r3,r2
  81196c:	e0bffd17 	ldw	r2,-12(fp)
  811970:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
  811974:	e0bffd17 	ldw	r2,-12(fp)
  811978:	10c00217 	ldw	r3,8(r2)
  81197c:	d0a6d717 	ldw	r2,-25764(gp)
  811980:	1880032e 	bgeu	r3,r2,811990 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
  811984:	e0bffd17 	ldw	r2,-12(fp)
  811988:	00c00044 	movi	r3,1
  81198c:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
  811990:	e0bffe17 	ldw	r2,-8(fp)
  811994:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
  811998:	e0fffd17 	ldw	r3,-12(fp)
  81199c:	d0a00e04 	addi	r2,gp,-32712
  8119a0:	18bfcf1e 	bne	r3,r2,8118e0 <__alt_data_end+0xff8118e0>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
  8119a4:	0001883a 	nop
}
  8119a8:	0001883a 	nop
  8119ac:	e037883a 	mov	sp,fp
  8119b0:	dfc00117 	ldw	ra,4(sp)
  8119b4:	df000017 	ldw	fp,0(sp)
  8119b8:	dec00204 	addi	sp,sp,8
  8119bc:	f800283a 	ret

008119c0 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
  8119c0:	deffff04 	addi	sp,sp,-4
  8119c4:	df000015 	stw	fp,0(sp)
  8119c8:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
  8119cc:	000170fa 	wrctl	ienable,zero
}
  8119d0:	0001883a 	nop
  8119d4:	e037883a 	mov	sp,fp
  8119d8:	df000017 	ldw	fp,0(sp)
  8119dc:	dec00104 	addi	sp,sp,4
  8119e0:	f800283a 	ret

008119e4 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
  8119e4:	defffa04 	addi	sp,sp,-24
  8119e8:	dfc00515 	stw	ra,20(sp)
  8119ec:	df000415 	stw	fp,16(sp)
  8119f0:	df000404 	addi	fp,sp,16
  8119f4:	e13ffe15 	stw	r4,-8(fp)
  8119f8:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
  8119fc:	e0bfff17 	ldw	r2,-4(fp)
  811a00:	10800017 	ldw	r2,0(r2)
  811a04:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
  811a08:	e13ffe17 	ldw	r4,-8(fp)
  811a0c:	0804e340 	call	804e34 <strlen>
  811a10:	10800044 	addi	r2,r2,1
  811a14:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
  811a18:	00000d06 	br	811a50 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
  811a1c:	e0bffc17 	ldw	r2,-16(fp)
  811a20:	10800217 	ldw	r2,8(r2)
  811a24:	e0fffd17 	ldw	r3,-12(fp)
  811a28:	180d883a 	mov	r6,r3
  811a2c:	e17ffe17 	ldw	r5,-8(fp)
  811a30:	1009883a 	mov	r4,r2
  811a34:	0811d980 	call	811d98 <memcmp>
  811a38:	1000021e 	bne	r2,zero,811a44 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
  811a3c:	e0bffc17 	ldw	r2,-16(fp)
  811a40:	00000706 	br	811a60 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
  811a44:	e0bffc17 	ldw	r2,-16(fp)
  811a48:	10800017 	ldw	r2,0(r2)
  811a4c:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
  811a50:	e0fffc17 	ldw	r3,-16(fp)
  811a54:	e0bfff17 	ldw	r2,-4(fp)
  811a58:	18bff01e 	bne	r3,r2,811a1c <__alt_data_end+0xff811a1c>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
  811a5c:	0005883a 	mov	r2,zero
}
  811a60:	e037883a 	mov	sp,fp
  811a64:	dfc00117 	ldw	ra,4(sp)
  811a68:	df000017 	ldw	fp,0(sp)
  811a6c:	dec00204 	addi	sp,sp,8
  811a70:	f800283a 	ret

00811a74 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
  811a74:	defffb04 	addi	sp,sp,-20
  811a78:	dfc00415 	stw	ra,16(sp)
  811a7c:	df000315 	stw	fp,12(sp)
  811a80:	df000304 	addi	fp,sp,12
  811a84:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
  811a88:	d0a00617 	ldw	r2,-32744(gp)
  811a8c:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
  811a90:	00003106 	br	811b58 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
  811a94:	e0bffd17 	ldw	r2,-12(fp)
  811a98:	10800217 	ldw	r2,8(r2)
  811a9c:	1009883a 	mov	r4,r2
  811aa0:	0804e340 	call	804e34 <strlen>
  811aa4:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
  811aa8:	e0bffd17 	ldw	r2,-12(fp)
  811aac:	10c00217 	ldw	r3,8(r2)
  811ab0:	e0bffe17 	ldw	r2,-8(fp)
  811ab4:	10bfffc4 	addi	r2,r2,-1
  811ab8:	1885883a 	add	r2,r3,r2
  811abc:	10800003 	ldbu	r2,0(r2)
  811ac0:	10803fcc 	andi	r2,r2,255
  811ac4:	1080201c 	xori	r2,r2,128
  811ac8:	10bfe004 	addi	r2,r2,-128
  811acc:	10800bd8 	cmpnei	r2,r2,47
  811ad0:	1000031e 	bne	r2,zero,811ae0 <alt_find_file+0x6c>
    {
      len -= 1;
  811ad4:	e0bffe17 	ldw	r2,-8(fp)
  811ad8:	10bfffc4 	addi	r2,r2,-1
  811adc:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
  811ae0:	e0bffe17 	ldw	r2,-8(fp)
  811ae4:	e0ffff17 	ldw	r3,-4(fp)
  811ae8:	1885883a 	add	r2,r3,r2
  811aec:	10800003 	ldbu	r2,0(r2)
  811af0:	10803fcc 	andi	r2,r2,255
  811af4:	1080201c 	xori	r2,r2,128
  811af8:	10bfe004 	addi	r2,r2,-128
  811afc:	10800be0 	cmpeqi	r2,r2,47
  811b00:	1000081e 	bne	r2,zero,811b24 <alt_find_file+0xb0>
  811b04:	e0bffe17 	ldw	r2,-8(fp)
  811b08:	e0ffff17 	ldw	r3,-4(fp)
  811b0c:	1885883a 	add	r2,r3,r2
  811b10:	10800003 	ldbu	r2,0(r2)
  811b14:	10803fcc 	andi	r2,r2,255
  811b18:	1080201c 	xori	r2,r2,128
  811b1c:	10bfe004 	addi	r2,r2,-128
  811b20:	10000a1e 	bne	r2,zero,811b4c <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
  811b24:	e0bffd17 	ldw	r2,-12(fp)
  811b28:	10800217 	ldw	r2,8(r2)
  811b2c:	e0fffe17 	ldw	r3,-8(fp)
  811b30:	180d883a 	mov	r6,r3
  811b34:	e17fff17 	ldw	r5,-4(fp)
  811b38:	1009883a 	mov	r4,r2
  811b3c:	0811d980 	call	811d98 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
  811b40:	1000021e 	bne	r2,zero,811b4c <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
  811b44:	e0bffd17 	ldw	r2,-12(fp)
  811b48:	00000706 	br	811b68 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
  811b4c:	e0bffd17 	ldw	r2,-12(fp)
  811b50:	10800017 	ldw	r2,0(r2)
  811b54:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
  811b58:	e0fffd17 	ldw	r3,-12(fp)
  811b5c:	d0a00604 	addi	r2,gp,-32744
  811b60:	18bfcc1e 	bne	r3,r2,811a94 <__alt_data_end+0xff811a94>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
  811b64:	0005883a 	mov	r2,zero
}
  811b68:	e037883a 	mov	sp,fp
  811b6c:	dfc00117 	ldw	ra,4(sp)
  811b70:	df000017 	ldw	fp,0(sp)
  811b74:	dec00204 	addi	sp,sp,8
  811b78:	f800283a 	ret

00811b7c <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
  811b7c:	defffc04 	addi	sp,sp,-16
  811b80:	df000315 	stw	fp,12(sp)
  811b84:	df000304 	addi	fp,sp,12
  811b88:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
  811b8c:	00bffa04 	movi	r2,-24
  811b90:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
  811b94:	e03ffd15 	stw	zero,-12(fp)
  811b98:	00001906 	br	811c00 <alt_get_fd+0x84>
  {
    if (!alt_fd_list[i].dev)
  811b9c:	00802074 	movhi	r2,129
  811ba0:	108bb304 	addi	r2,r2,11980
  811ba4:	e0fffd17 	ldw	r3,-12(fp)
  811ba8:	18c00324 	muli	r3,r3,12
  811bac:	10c5883a 	add	r2,r2,r3
  811bb0:	10800017 	ldw	r2,0(r2)
  811bb4:	10000f1e 	bne	r2,zero,811bf4 <alt_get_fd+0x78>
    {
      alt_fd_list[i].dev = dev;
  811bb8:	00802074 	movhi	r2,129
  811bbc:	108bb304 	addi	r2,r2,11980
  811bc0:	e0fffd17 	ldw	r3,-12(fp)
  811bc4:	18c00324 	muli	r3,r3,12
  811bc8:	10c5883a 	add	r2,r2,r3
  811bcc:	e0ffff17 	ldw	r3,-4(fp)
  811bd0:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
  811bd4:	d0e00a17 	ldw	r3,-32728(gp)
  811bd8:	e0bffd17 	ldw	r2,-12(fp)
  811bdc:	1880020e 	bge	r3,r2,811be8 <alt_get_fd+0x6c>
      {
        alt_max_fd = i;
  811be0:	e0bffd17 	ldw	r2,-12(fp)
  811be4:	d0a00a15 	stw	r2,-32728(gp)
      }
      rc = i;
  811be8:	e0bffd17 	ldw	r2,-12(fp)
  811bec:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
  811bf0:	00000606 	br	811c0c <alt_get_fd+0x90>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
  811bf4:	e0bffd17 	ldw	r2,-12(fp)
  811bf8:	10800044 	addi	r2,r2,1
  811bfc:	e0bffd15 	stw	r2,-12(fp)
  811c00:	e0bffd17 	ldw	r2,-12(fp)
  811c04:	10800810 	cmplti	r2,r2,32
  811c08:	103fe41e 	bne	r2,zero,811b9c <__alt_data_end+0xff811b9c>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
  811c0c:	e0bffe17 	ldw	r2,-8(fp)
}
  811c10:	e037883a 	mov	sp,fp
  811c14:	df000017 	ldw	fp,0(sp)
  811c18:	dec00104 	addi	sp,sp,4
  811c1c:	f800283a 	ret

00811c20 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
  811c20:	defffb04 	addi	sp,sp,-20
  811c24:	df000415 	stw	fp,16(sp)
  811c28:	df000404 	addi	fp,sp,16
  811c2c:	e13ffe15 	stw	r4,-8(fp)
  811c30:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
  811c34:	e0bfff17 	ldw	r2,-4(fp)
  811c38:	10820070 	cmpltui	r2,r2,2049
  811c3c:	1000021e 	bne	r2,zero,811c48 <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
  811c40:	00820004 	movi	r2,2048
  811c44:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
  811c48:	e0fffe17 	ldw	r3,-8(fp)
  811c4c:	e0bfff17 	ldw	r2,-4(fp)
  811c50:	1885883a 	add	r2,r3,r2
  811c54:	e0bffd15 	stw	r2,-12(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
  811c58:	e0bffe17 	ldw	r2,-8(fp)
  811c5c:	e0bffc15 	stw	r2,-16(fp)
  811c60:	00000506 	br	811c78 <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
  811c64:	e0bffc17 	ldw	r2,-16(fp)
  811c68:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
  811c6c:	e0bffc17 	ldw	r2,-16(fp)
  811c70:	10800804 	addi	r2,r2,32
  811c74:	e0bffc15 	stw	r2,-16(fp)
  811c78:	e0fffc17 	ldw	r3,-16(fp)
  811c7c:	e0bffd17 	ldw	r2,-12(fp)
  811c80:	18bff836 	bltu	r3,r2,811c64 <__alt_data_end+0xff811c64>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
  811c84:	e0bffe17 	ldw	r2,-8(fp)
  811c88:	108007cc 	andi	r2,r2,31
  811c8c:	10000226 	beq	r2,zero,811c98 <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
  811c90:	e0bffc17 	ldw	r2,-16(fp)
  811c94:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
  811c98:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
  811c9c:	0001883a 	nop
  811ca0:	e037883a 	mov	sp,fp
  811ca4:	df000017 	ldw	fp,0(sp)
  811ca8:	dec00104 	addi	sp,sp,4
  811cac:	f800283a 	ret

00811cb0 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
  811cb0:	defffe04 	addi	sp,sp,-8
  811cb4:	df000115 	stw	fp,4(sp)
  811cb8:	df000104 	addi	fp,sp,4
  811cbc:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
  811cc0:	e0bfff17 	ldw	r2,-4(fp)
  811cc4:	10bffe84 	addi	r2,r2,-6
  811cc8:	10c00428 	cmpgeui	r3,r2,16
  811ccc:	18001a1e 	bne	r3,zero,811d38 <alt_exception_cause_generated_bad_addr+0x88>
  811cd0:	100690ba 	slli	r3,r2,2
  811cd4:	00802074 	movhi	r2,129
  811cd8:	10873a04 	addi	r2,r2,7400
  811cdc:	1885883a 	add	r2,r3,r2
  811ce0:	10800017 	ldw	r2,0(r2)
  811ce4:	1000683a 	jmp	r2
  811ce8:	00811d28 	cmpgeui	r2,zero,1140
  811cec:	00811d28 	cmpgeui	r2,zero,1140
  811cf0:	00811d38 	rdprs	r2,zero,1140
  811cf4:	00811d38 	rdprs	r2,zero,1140
  811cf8:	00811d38 	rdprs	r2,zero,1140
  811cfc:	00811d28 	cmpgeui	r2,zero,1140
  811d00:	00811d30 	cmpltui	r2,zero,1140
  811d04:	00811d38 	rdprs	r2,zero,1140
  811d08:	00811d28 	cmpgeui	r2,zero,1140
  811d0c:	00811d28 	cmpgeui	r2,zero,1140
  811d10:	00811d38 	rdprs	r2,zero,1140
  811d14:	00811d28 	cmpgeui	r2,zero,1140
  811d18:	00811d30 	cmpltui	r2,zero,1140
  811d1c:	00811d38 	rdprs	r2,zero,1140
  811d20:	00811d38 	rdprs	r2,zero,1140
  811d24:	00811d28 	cmpgeui	r2,zero,1140
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
  811d28:	00800044 	movi	r2,1
  811d2c:	00000306 	br	811d3c <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
  811d30:	0005883a 	mov	r2,zero
  811d34:	00000106 	br	811d3c <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
  811d38:	0005883a 	mov	r2,zero
  }
}
  811d3c:	e037883a 	mov	sp,fp
  811d40:	df000017 	ldw	fp,0(sp)
  811d44:	dec00104 	addi	sp,sp,4
  811d48:	f800283a 	ret

00811d4c <atexit>:
  811d4c:	200b883a 	mov	r5,r4
  811d50:	000f883a 	mov	r7,zero
  811d54:	000d883a 	mov	r6,zero
  811d58:	0009883a 	mov	r4,zero
  811d5c:	0811e141 	jmpi	811e14 <__register_exitproc>

00811d60 <exit>:
  811d60:	defffe04 	addi	sp,sp,-8
  811d64:	000b883a 	mov	r5,zero
  811d68:	dc000015 	stw	r16,0(sp)
  811d6c:	dfc00115 	stw	ra,4(sp)
  811d70:	2021883a 	mov	r16,r4
  811d74:	0811f2c0 	call	811f2c <__call_exitprocs>
  811d78:	00802074 	movhi	r2,129
  811d7c:	10902b04 	addi	r2,r2,16556
  811d80:	11000017 	ldw	r4,0(r2)
  811d84:	20800f17 	ldw	r2,60(r4)
  811d88:	10000126 	beq	r2,zero,811d90 <exit+0x30>
  811d8c:	103ee83a 	callr	r2
  811d90:	8009883a 	mov	r4,r16
  811d94:	08120ac0 	call	8120ac <_exit>

00811d98 <memcmp>:
  811d98:	01c000c4 	movi	r7,3
  811d9c:	3980192e 	bgeu	r7,r6,811e04 <memcmp+0x6c>
  811da0:	2144b03a 	or	r2,r4,r5
  811da4:	11c4703a 	and	r2,r2,r7
  811da8:	10000f26 	beq	r2,zero,811de8 <memcmp+0x50>
  811dac:	20800003 	ldbu	r2,0(r4)
  811db0:	28c00003 	ldbu	r3,0(r5)
  811db4:	10c0151e 	bne	r2,r3,811e0c <memcmp+0x74>
  811db8:	31bfff84 	addi	r6,r6,-2
  811dbc:	01ffffc4 	movi	r7,-1
  811dc0:	00000406 	br	811dd4 <memcmp+0x3c>
  811dc4:	20800003 	ldbu	r2,0(r4)
  811dc8:	28c00003 	ldbu	r3,0(r5)
  811dcc:	31bfffc4 	addi	r6,r6,-1
  811dd0:	10c00e1e 	bne	r2,r3,811e0c <memcmp+0x74>
  811dd4:	21000044 	addi	r4,r4,1
  811dd8:	29400044 	addi	r5,r5,1
  811ddc:	31fff91e 	bne	r6,r7,811dc4 <__alt_data_end+0xff811dc4>
  811de0:	0005883a 	mov	r2,zero
  811de4:	f800283a 	ret
  811de8:	20c00017 	ldw	r3,0(r4)
  811dec:	28800017 	ldw	r2,0(r5)
  811df0:	18bfee1e 	bne	r3,r2,811dac <__alt_data_end+0xff811dac>
  811df4:	31bfff04 	addi	r6,r6,-4
  811df8:	21000104 	addi	r4,r4,4
  811dfc:	29400104 	addi	r5,r5,4
  811e00:	39bff936 	bltu	r7,r6,811de8 <__alt_data_end+0xff811de8>
  811e04:	303fe91e 	bne	r6,zero,811dac <__alt_data_end+0xff811dac>
  811e08:	003ff506 	br	811de0 <__alt_data_end+0xff811de0>
  811e0c:	10c5c83a 	sub	r2,r2,r3
  811e10:	f800283a 	ret

00811e14 <__register_exitproc>:
  811e14:	defffa04 	addi	sp,sp,-24
  811e18:	dc000315 	stw	r16,12(sp)
  811e1c:	04002074 	movhi	r16,129
  811e20:	84102b04 	addi	r16,r16,16556
  811e24:	80c00017 	ldw	r3,0(r16)
  811e28:	dc400415 	stw	r17,16(sp)
  811e2c:	dfc00515 	stw	ra,20(sp)
  811e30:	18805217 	ldw	r2,328(r3)
  811e34:	2023883a 	mov	r17,r4
  811e38:	10003726 	beq	r2,zero,811f18 <__register_exitproc+0x104>
  811e3c:	10c00117 	ldw	r3,4(r2)
  811e40:	010007c4 	movi	r4,31
  811e44:	20c00e16 	blt	r4,r3,811e80 <__register_exitproc+0x6c>
  811e48:	1a000044 	addi	r8,r3,1
  811e4c:	8800221e 	bne	r17,zero,811ed8 <__register_exitproc+0xc4>
  811e50:	18c00084 	addi	r3,r3,2
  811e54:	18c7883a 	add	r3,r3,r3
  811e58:	18c7883a 	add	r3,r3,r3
  811e5c:	12000115 	stw	r8,4(r2)
  811e60:	10c7883a 	add	r3,r2,r3
  811e64:	19400015 	stw	r5,0(r3)
  811e68:	0005883a 	mov	r2,zero
  811e6c:	dfc00517 	ldw	ra,20(sp)
  811e70:	dc400417 	ldw	r17,16(sp)
  811e74:	dc000317 	ldw	r16,12(sp)
  811e78:	dec00604 	addi	sp,sp,24
  811e7c:	f800283a 	ret
  811e80:	00800034 	movhi	r2,0
  811e84:	10800004 	addi	r2,r2,0
  811e88:	10002626 	beq	r2,zero,811f24 <__register_exitproc+0x110>
  811e8c:	01006404 	movi	r4,400
  811e90:	d9400015 	stw	r5,0(sp)
  811e94:	d9800115 	stw	r6,4(sp)
  811e98:	d9c00215 	stw	r7,8(sp)
  811e9c:	00000000 	call	0 <__alt_mem_sdram-0x800000>
  811ea0:	d9400017 	ldw	r5,0(sp)
  811ea4:	d9800117 	ldw	r6,4(sp)
  811ea8:	d9c00217 	ldw	r7,8(sp)
  811eac:	10001d26 	beq	r2,zero,811f24 <__register_exitproc+0x110>
  811eb0:	81000017 	ldw	r4,0(r16)
  811eb4:	10000115 	stw	zero,4(r2)
  811eb8:	02000044 	movi	r8,1
  811ebc:	22405217 	ldw	r9,328(r4)
  811ec0:	0007883a 	mov	r3,zero
  811ec4:	12400015 	stw	r9,0(r2)
  811ec8:	20805215 	stw	r2,328(r4)
  811ecc:	10006215 	stw	zero,392(r2)
  811ed0:	10006315 	stw	zero,396(r2)
  811ed4:	883fde26 	beq	r17,zero,811e50 <__alt_data_end+0xff811e50>
  811ed8:	18c9883a 	add	r4,r3,r3
  811edc:	2109883a 	add	r4,r4,r4
  811ee0:	1109883a 	add	r4,r2,r4
  811ee4:	21802215 	stw	r6,136(r4)
  811ee8:	01800044 	movi	r6,1
  811eec:	12406217 	ldw	r9,392(r2)
  811ef0:	30cc983a 	sll	r6,r6,r3
  811ef4:	4992b03a 	or	r9,r9,r6
  811ef8:	12406215 	stw	r9,392(r2)
  811efc:	21c04215 	stw	r7,264(r4)
  811f00:	01000084 	movi	r4,2
  811f04:	893fd21e 	bne	r17,r4,811e50 <__alt_data_end+0xff811e50>
  811f08:	11006317 	ldw	r4,396(r2)
  811f0c:	218cb03a 	or	r6,r4,r6
  811f10:	11806315 	stw	r6,396(r2)
  811f14:	003fce06 	br	811e50 <__alt_data_end+0xff811e50>
  811f18:	18805304 	addi	r2,r3,332
  811f1c:	18805215 	stw	r2,328(r3)
  811f20:	003fc606 	br	811e3c <__alt_data_end+0xff811e3c>
  811f24:	00bfffc4 	movi	r2,-1
  811f28:	003fd006 	br	811e6c <__alt_data_end+0xff811e6c>

00811f2c <__call_exitprocs>:
  811f2c:	defff504 	addi	sp,sp,-44
  811f30:	df000915 	stw	fp,36(sp)
  811f34:	dd400615 	stw	r21,24(sp)
  811f38:	dc800315 	stw	r18,12(sp)
  811f3c:	dfc00a15 	stw	ra,40(sp)
  811f40:	ddc00815 	stw	r23,32(sp)
  811f44:	dd800715 	stw	r22,28(sp)
  811f48:	dd000515 	stw	r20,20(sp)
  811f4c:	dcc00415 	stw	r19,16(sp)
  811f50:	dc400215 	stw	r17,8(sp)
  811f54:	dc000115 	stw	r16,4(sp)
  811f58:	d9000015 	stw	r4,0(sp)
  811f5c:	2839883a 	mov	fp,r5
  811f60:	04800044 	movi	r18,1
  811f64:	057fffc4 	movi	r21,-1
  811f68:	00802074 	movhi	r2,129
  811f6c:	10902b04 	addi	r2,r2,16556
  811f70:	12000017 	ldw	r8,0(r2)
  811f74:	45005217 	ldw	r20,328(r8)
  811f78:	44c05204 	addi	r19,r8,328
  811f7c:	a0001c26 	beq	r20,zero,811ff0 <__call_exitprocs+0xc4>
  811f80:	a0800117 	ldw	r2,4(r20)
  811f84:	15ffffc4 	addi	r23,r2,-1
  811f88:	b8000d16 	blt	r23,zero,811fc0 <__call_exitprocs+0x94>
  811f8c:	14000044 	addi	r16,r2,1
  811f90:	8421883a 	add	r16,r16,r16
  811f94:	8421883a 	add	r16,r16,r16
  811f98:	84402004 	addi	r17,r16,128
  811f9c:	a463883a 	add	r17,r20,r17
  811fa0:	a421883a 	add	r16,r20,r16
  811fa4:	e0001e26 	beq	fp,zero,812020 <__call_exitprocs+0xf4>
  811fa8:	80804017 	ldw	r2,256(r16)
  811fac:	e0801c26 	beq	fp,r2,812020 <__call_exitprocs+0xf4>
  811fb0:	bdffffc4 	addi	r23,r23,-1
  811fb4:	843fff04 	addi	r16,r16,-4
  811fb8:	8c7fff04 	addi	r17,r17,-4
  811fbc:	bd7ff91e 	bne	r23,r21,811fa4 <__alt_data_end+0xff811fa4>
  811fc0:	00800034 	movhi	r2,0
  811fc4:	10800004 	addi	r2,r2,0
  811fc8:	10000926 	beq	r2,zero,811ff0 <__call_exitprocs+0xc4>
  811fcc:	a0800117 	ldw	r2,4(r20)
  811fd0:	1000301e 	bne	r2,zero,812094 <__call_exitprocs+0x168>
  811fd4:	a0800017 	ldw	r2,0(r20)
  811fd8:	10003226 	beq	r2,zero,8120a4 <__call_exitprocs+0x178>
  811fdc:	a009883a 	mov	r4,r20
  811fe0:	98800015 	stw	r2,0(r19)
  811fe4:	00000000 	call	0 <__alt_mem_sdram-0x800000>
  811fe8:	9d000017 	ldw	r20,0(r19)
  811fec:	a03fe41e 	bne	r20,zero,811f80 <__alt_data_end+0xff811f80>
  811ff0:	dfc00a17 	ldw	ra,40(sp)
  811ff4:	df000917 	ldw	fp,36(sp)
  811ff8:	ddc00817 	ldw	r23,32(sp)
  811ffc:	dd800717 	ldw	r22,28(sp)
  812000:	dd400617 	ldw	r21,24(sp)
  812004:	dd000517 	ldw	r20,20(sp)
  812008:	dcc00417 	ldw	r19,16(sp)
  81200c:	dc800317 	ldw	r18,12(sp)
  812010:	dc400217 	ldw	r17,8(sp)
  812014:	dc000117 	ldw	r16,4(sp)
  812018:	dec00b04 	addi	sp,sp,44
  81201c:	f800283a 	ret
  812020:	a0800117 	ldw	r2,4(r20)
  812024:	80c00017 	ldw	r3,0(r16)
  812028:	10bfffc4 	addi	r2,r2,-1
  81202c:	15c01426 	beq	r2,r23,812080 <__call_exitprocs+0x154>
  812030:	80000015 	stw	zero,0(r16)
  812034:	183fde26 	beq	r3,zero,811fb0 <__alt_data_end+0xff811fb0>
  812038:	95c8983a 	sll	r4,r18,r23
  81203c:	a0806217 	ldw	r2,392(r20)
  812040:	a5800117 	ldw	r22,4(r20)
  812044:	2084703a 	and	r2,r4,r2
  812048:	10000b26 	beq	r2,zero,812078 <__call_exitprocs+0x14c>
  81204c:	a0806317 	ldw	r2,396(r20)
  812050:	2088703a 	and	r4,r4,r2
  812054:	20000c1e 	bne	r4,zero,812088 <__call_exitprocs+0x15c>
  812058:	89400017 	ldw	r5,0(r17)
  81205c:	d9000017 	ldw	r4,0(sp)
  812060:	183ee83a 	callr	r3
  812064:	a0800117 	ldw	r2,4(r20)
  812068:	15bfbf1e 	bne	r2,r22,811f68 <__alt_data_end+0xff811f68>
  81206c:	98800017 	ldw	r2,0(r19)
  812070:	153fcf26 	beq	r2,r20,811fb0 <__alt_data_end+0xff811fb0>
  812074:	003fbc06 	br	811f68 <__alt_data_end+0xff811f68>
  812078:	183ee83a 	callr	r3
  81207c:	003ff906 	br	812064 <__alt_data_end+0xff812064>
  812080:	a5c00115 	stw	r23,4(r20)
  812084:	003feb06 	br	812034 <__alt_data_end+0xff812034>
  812088:	89000017 	ldw	r4,0(r17)
  81208c:	183ee83a 	callr	r3
  812090:	003ff406 	br	812064 <__alt_data_end+0xff812064>
  812094:	a0800017 	ldw	r2,0(r20)
  812098:	a027883a 	mov	r19,r20
  81209c:	1029883a 	mov	r20,r2
  8120a0:	003fb606 	br	811f7c <__alt_data_end+0xff811f7c>
  8120a4:	0005883a 	mov	r2,zero
  8120a8:	003ffb06 	br	812098 <__alt_data_end+0xff812098>

008120ac <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
  8120ac:	defffd04 	addi	sp,sp,-12
  8120b0:	df000215 	stw	fp,8(sp)
  8120b4:	df000204 	addi	fp,sp,8
  8120b8:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
  8120bc:	0001883a 	nop
  8120c0:	e0bfff17 	ldw	r2,-4(fp)
  8120c4:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
  8120c8:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
  8120cc:	10000226 	beq	r2,zero,8120d8 <_exit+0x2c>
    ALT_SIM_FAIL();
  8120d0:	002af070 	cmpltui	zero,zero,43969
  8120d4:	00000106 	br	8120dc <_exit+0x30>
  } else {
    ALT_SIM_PASS();
  8120d8:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
  8120dc:	003fff06 	br	8120dc <__alt_data_end+0xff8120dc>
